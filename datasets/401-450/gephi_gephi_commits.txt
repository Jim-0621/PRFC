File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/RandomLayout.java
Patch:
@@ -121,6 +121,7 @@ public LayoutProperty[] getProperties() {
 
     @Override
     public void resetPropertiesValues() {
+        setSize(50.0);
     }
 
     public Double getSize() {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/rotate/RotateLayout.java
Patch:
@@ -104,6 +104,7 @@ public void endAlgo() {
 
     @Override
     public void resetPropertiesValues() {
+        setAngle(90.0);
     }
 
     @Override

File: modules/AppearanceAPI/src/test/java/org.gephi.appearance/AppearanceControllerTest.java
Patch:
@@ -13,10 +13,12 @@
 import org.gephi.appearance.spi.Transformer;
 import org.gephi.graph.GraphGenerator;
 import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Configuration;
 import org.gephi.graph.api.Estimator;
 import org.gephi.graph.api.GraphView;
 import org.gephi.graph.api.Interval;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.TimeRepresentation;
 import org.gephi.graph.api.types.TimestampDoubleMap;
 import org.junit.Assert;
 import org.junit.Test;
@@ -204,7 +206,7 @@ public void testNotTransformNullValuesPartition() {
     public void testRankingDynamicColumn() {
         MockServices.setServices(FixedTransformer.class);
         GraphGenerator generator =
-            GraphGenerator.build().generateTinyGraph().addTimestampDoubleColumn();
+            GraphGenerator.build(Configuration.builder().timeRepresentation(TimeRepresentation.TIMESTAMP).build()).generateTinyGraph().addTimestampDoubleColumn();
 
         AppearanceModelImpl model = new AppearanceModelImpl(generator.getWorkspace());
         Mockito.doReturn(model).when(controller).getModel();

File: modules/AppearanceAPI/src/test/java/org.gephi.appearance/AttributePartitionTest.java
Patch:
@@ -46,8 +46,10 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Collection;
 import org.gephi.graph.GraphGenerator;
 import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Configuration;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.TimeRepresentation;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -135,7 +137,7 @@ public void testVersion() {
 
     @Test
     public void testVersionDynamic() {
-        Graph graph = GraphGenerator.build().generateTinyGraph().addTimestampDoubleColumn().getGraph();
+        Graph graph = GraphGenerator.build(Configuration.builder().timeRepresentation(TimeRepresentation.TIMESTAMP).build()).generateTinyGraph().addTimestampDoubleColumn().getGraph();
         Column column = graph.getModel().getNodeTable().getColumn(GraphGenerator.TIMESTAMP_DOUBLE_COLUMN);
         Node n1 = graph.getNode(GraphGenerator.FIRST_NODE);
 

File: modules/AppearanceAPI/src/test/java/org.gephi.appearance/AttributeRankingTest.java
Patch:
@@ -2,9 +2,11 @@
 
 import org.gephi.graph.GraphGenerator;
 import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Configuration;
 import org.gephi.graph.api.Estimator;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.TimeRepresentation;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -66,7 +68,7 @@ public void testArrayColumnNotValid() {
 
     @Test
     public void testDynamicTimestampColumn() {
-        Graph graph = GraphGenerator.build().generateTinyGraph().addTimestampDoubleColumn().getGraph();
+        Graph graph = GraphGenerator.build(Configuration.builder().timeRepresentation(TimeRepresentation.TIMESTAMP).build()).generateTinyGraph().addTimestampDoubleColumn().getGraph();
         Column column = graph.getModel().getNodeTable().getColumn(GraphGenerator.TIMESTAMP_DOUBLE_COLUMN);
 
         AttributeRankingImpl p = new AttributeRankingImpl(column);

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/SaveTask.java
Patch:
@@ -116,7 +116,7 @@ public boolean run() {
 
         File writeFile = file;
         try {
-            if (file.exists()) {
+            if (file.exists() && file.length() > 0) {
                 String tempFileName = file.getName() + "_temp" + System.currentTimeMillis();
                 writeFile = new File(file.getParent(), tempFileName);
             }
@@ -215,7 +215,7 @@ public boolean run() {
             }
             throw new GephiFormatException(SaveTask.class, ex);
         } finally {
-            if (writeFile != null && writeFile.exists()) {
+            if (writeFile != null && writeFile.exists() && writeFile != file) {
                 FileObject tempFileObject = FileUtil.toFileObject(writeFile);
                 if (tempFileObject != null) {
                     try {

File: modules/DesktopWindow/src/main/java/org/gephi/desktop/banner/workspace/WorkspacePanel.java
Patch:
@@ -224,8 +224,6 @@ public void run() {
                     workspaceInformation.getName(),
                     workspaceInformation.getSource()));
                 if (tabDataModel.size() == 1) {
-                    tabbedContainer.getSelectionModel().setSelectedIndex(0);
-
                     add(tabbedContainer, BorderLayout.CENTER);
                     getParent().revalidate();
                 }

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterModelImpl.java
Patch:
@@ -57,12 +57,13 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.GraphView;
 import org.gephi.project.api.Workspace;
+import org.gephi.project.spi.Model;
 import org.openide.util.Lookup;
 
 /**
  * @author Mathieu Bastian
  */
-public class FilterModelImpl implements FilterModel {
+public class FilterModelImpl implements FilterModel, Model {
 
     private final FilterLibraryImpl filterLibraryImpl;
     private final LinkedList<Query> queries;

File: modules/ProjectAPI/src/main/java/org/gephi/project/api/WorkspaceListener.java
Patch:
@@ -80,6 +80,8 @@ public interface WorkspaceListener {
 
     /**
      * Notify no more workspace is currently selected, the project is empty.
+     * <p>
+     * <code>close()</code> is called beforehand for each workspace.
      */
     void disable();
 }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/CommandLineProcessor.java
Patch:
@@ -42,6 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 package org.gephi.branding.desktop;
 
+import java.awt.event.ActionEvent;
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -112,7 +113,8 @@ public void process(Env env, Map values) throws CommandException {
                     DialogDisplayer.getDefault().notify(msg);
                     return;
                 }
-                Actions.forID("File", "org.gephi.desktop.project.actions.OpenFile").actionPerformed(null);
+                Actions.forID("File", "org.gephi.desktop.project.actions.OpenFile").actionPerformed(
+                    new ActionEvent(file, 0, null));
             }
         } catch (OutOfMemoryError ex) {
             System.gc();

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectControllerImpl.java
Patch:
@@ -297,7 +297,7 @@ private void openProjectInternal(Project project) {
         if (projects.hasCurrentProject()) {
             closeCurrentProject();
         }
-        projectImpl = projects.addOrReplaceProject(projectImpl);
+        projects.addOrReplaceProject(projectImpl);
         projects.setCurrentProject(projectImpl);
 
         for (Workspace ws : projectImpl.getWorkspaces()) {

File: modules/ProjectAPI/src/test/java/org/gephi/project/impl/ProjectsImplTest.java
Patch:
@@ -14,12 +14,14 @@ public class ProjectsImplTest {
     public TemporaryFolder tempFolder = new TemporaryFolder();
 
     @Test
-    public void testProjectsSort() {
+    public void testProjectsSort() throws InterruptedException {
         ProjectsImpl projects = new ProjectsImpl();
         ProjectImpl p1 = new ProjectImpl("p1", "p1");
         p1.open();
+        Thread.sleep(10);
         ProjectImpl p2 = new ProjectImpl("p2", "p2");
         p2.open();
+        Thread.sleep(10);
         ProjectImpl p3 = new ProjectImpl("p3", "p3");
 
         projects.addProject(p3);

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectsImpl.java
Patch:
@@ -121,7 +121,7 @@ private ProjectImpl findProjectByFile(File file) {
         if (file != null) {
             synchronized (projects) {
                 for (ProjectImpl p : projects) {
-                    if (p.getFile().equals(file)) {
+                    if (p.getFile() != null && p.getFile().equals(file)) {
                         return p;
                     }
                 }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/actions/RecentFiles.java
Patch:
@@ -104,7 +104,7 @@ private JComponent[] createSubMenus() {
         List<JMenuItem> projectsItems = new ArrayList<>();
         ProjectController projectController = Lookup.getDefault().lookup(ProjectController.class);
         for (Project project : projectController.getAllProjects()) {
-            if (project.isClosed() && project.hasFile()) {
+            if (project.hasFile()) {
                 JMenuItem menuItem = new JMenuItem(new OpenProjectAction(project));
                 projectsItems.add(menuItem);
             }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/actions/ManageProjects.java
Patch:
@@ -12,7 +12,6 @@
 
 @ActionID(id = "org.gephi.desktop.project.actions.ManageProjects", category = "File")
 @ActionRegistration(displayName = "#CTL_ManageProjects", lazy = false)
-@ActionReference(path = "Menu/File", position = 490)
 public final class ManageProjects extends AbstractAction {
 
     ManageProjects() {
@@ -21,7 +20,7 @@ public final class ManageProjects extends AbstractAction {
 
     @Override
     public boolean isEnabled() {
-        return Lookup.getDefault().lookup(ProjectControllerUIImpl.class).canProjectProperties();
+        return true;
     }
 
     @Override

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/actions/OpenFile.java
Patch:
@@ -48,6 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.desktop.importer.api.ImportControllerUI;
 import org.gephi.desktop.project.ProjectControllerUIImpl;
 import org.gephi.io.importer.spi.FileImporterBuilder;
+import org.gephi.project.api.Project;
 import org.openide.DialogDisplayer;
 import org.openide.NotifyDescriptor;
 import org.openide.awt.ActionID;
@@ -100,6 +101,8 @@ public void actionPerformed(ActionEvent ev) {
             } else if (ev != null && ev.getSource() != null && ev.getSource() instanceof FileImporterBuilder[]) {
                 Lookup.getDefault().lookup(ProjectControllerUIImpl.class)
                     .openFile((FileImporterBuilder[]) ev.getSource());
+            } else if (ev != null && ev.getSource() != null && ev.getSource() instanceof Project) {
+                Lookup.getDefault().lookup(ProjectControllerUIImpl.class).openProject((Project) ev.getSource());
             } else {
                 Lookup.getDefault().lookup(ProjectControllerUIImpl.class).openFile();
             }

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectControllerImpl.java
Patch:
@@ -292,11 +292,11 @@ public void deleteWorkspace(Workspace workspace) {
     }
 
     private void openProjectInternal(Project project) {
-        final ProjectImpl projectImpl = (ProjectImpl) project;
+        ProjectImpl projectImpl = (ProjectImpl) project;
         if (projects.hasCurrentProject()) {
             closeCurrentProject();
         }
-        projects.addOrReplaceProject(projectImpl);
+        projectImpl = projects.addOrReplaceProject(projectImpl);
         projects.setCurrentProject(projectImpl);
 
         for (Workspace ws : projectImpl.getWorkspaces()) {

File: modules/LayoutAPI/src/main/java/org/gephi/layout/LayoutModelImpl.java
Patch:
@@ -207,6 +207,9 @@ public void saveProperties(Layout layout) {
     }
 
     public void loadProperties(Layout layout) {
+        // In case some properties are only locally defined (like cooling in ForceAtlas)
+        layout.resetPropertiesValues();
+
         List<LayoutPropertyKey> layoutValues = new ArrayList<>();
         for (LayoutPropertyKey val : savedProperties.keySet()) {
             if (val.layoutClassName.equals(layout.getClass().getName())) {

File: modules/PreviewAPI/src/main/java/org/gephi/preview/G2DRenderTargetBuilder.java
Patch:
@@ -188,7 +188,7 @@ public void refresh(PreviewModel m, RenderTarget target) {
                 return;
             }
 
-            if (!inited) {
+            if (!inited && m.getGraphicsCanvasSize() != null) {
                 CanvasSize cs = getSheetCanvasSize(m);
                 scaling = computeDefaultScaling(cs);
                 fit(cs);

File: modules/PreviewAPI/src/main/java/org/gephi/preview/presets/DefaultCurved.java
Patch:
@@ -61,5 +61,6 @@ public DefaultCurved() {
         //Custom values
         properties.put(PreviewProperty.SHOW_EDGE_LABELS, Boolean.TRUE);
         properties.put(PreviewProperty.SHOW_NODE_LABELS, Boolean.TRUE);
+        properties.put(PreviewProperty.ARROW_SIZE, 0);
     }
 }

File: modules/AppearanceAPI/src/test/java/org/gephi/appearance/utils/Utils.java
Patch:
@@ -7,7 +7,7 @@ public class Utils {
 
     public static AppearanceModelImpl newAppearanceModel() {
         GraphGenerator generator =
-            GraphGenerator.build().withWorkspace().generateTinyGraph();
+            GraphGenerator.build().generateTinyGraph();
         return generator.getWorkspace().getLookup().lookup(AppearanceModelImpl.class);
     }
 }

File: modules/DesktopAppearance/src/test/java/org/gephi/desktop/appearance/AppearanceUIModelTest.java
Patch:
@@ -27,7 +27,7 @@ public class AppearanceUIModelTest {
 
     @Test
     public void testDefault() {
-        GraphGenerator generator = GraphGenerator.build().withWorkspace().generateTinyGraph();
+        GraphGenerator generator = GraphGenerator.build().generateTinyGraph();
         AppearanceModelImpl model = new AppearanceModelImpl(generator.getWorkspace());
         AppearanceUIModel uiModel = new AppearanceUIModel(model);
 

File: modules/DesktopAppearance/src/test/java/org/gephi/desktop/appearance/utils/Utils.java
Patch:
@@ -13,7 +13,7 @@ public class Utils {
 
     public static AppearanceUIModel newAppearanceUIModel() {
         GraphGenerator generator =
-            GraphGenerator.build().withWorkspace().generateTinyGraph();
+            GraphGenerator.build().generateTinyGraph();
         AppearanceModelImpl model = new AppearanceModelImpl(generator.getWorkspace());
         model.getWorkspace().add(model);
         AppearanceUIModel uiModel = new AppearanceUIModel(model);

File: modules/ExportPlugin/src/test/java/org/gephi/io/exporter/plugin/GEXFTest.java
Patch:
@@ -11,7 +11,7 @@ public class GEXFTest {
 
     @Test
     public void testInfinity() throws IOException {
-        GraphGenerator graphGenerator = GraphGenerator.build().withWorkspace().generateTinyGraph().addDoubleNodeColumn();
+        GraphGenerator graphGenerator = GraphGenerator.build().generateTinyGraph().addDoubleNodeColumn();
         Graph graph = graphGenerator.getGraph();
 
         graph.getNode(GraphGenerator.FIRST_NODE).setAttribute(GraphGenerator.DOUBLE_COLUMN, Double.POSITIVE_INFINITY);
@@ -22,7 +22,7 @@ public void testInfinity() throws IOException {
 
     @Test
     public void testIncludeAttValues() throws IOException {
-        GraphGenerator graphGenerator = GraphGenerator.build().withWorkspace().generateTinyGraph().addDoubleNodeColumn();
+        GraphGenerator graphGenerator = GraphGenerator.build().generateTinyGraph().addDoubleNodeColumn();
 
         Graph graph = graphGenerator.getGraph();
 
@@ -34,7 +34,7 @@ public void testIncludeAttValues() throws IOException {
 
     @Test
     public void testMeta() throws IOException {
-        GraphGenerator graphGenerator = GraphGenerator.build().withWorkspace();
+        GraphGenerator graphGenerator = GraphGenerator.build();
         Workspace workspace = graphGenerator.getWorkspace();
         workspace.getWorkspaceMetadata().setTitle("title");
         workspace.getWorkspaceMetadata().setDescription("desc");

File: modules/ExportPlugin/src/test/java/org/gephi/io/exporter/plugin/VNATest.java
Patch:
@@ -10,7 +10,7 @@ public class VNATest {
 
     @Test
     public void testBasic() throws IOException {
-        GraphGenerator graphGenerator = GraphGenerator.build().withWorkspace().generateTinyGraph().addDoubleNodeColumn();
+        GraphGenerator graphGenerator = GraphGenerator.build().generateTinyGraph().addDoubleNodeColumn();
 
         Utils.assertExporterMatch("basic.vna", createExporter(graphGenerator));
     }

File: modules/FiltersPlugin/src/test/java/org/gephi/filters/plugin/attribute/ContainsTest.java
Patch:
@@ -11,7 +11,7 @@ public class ContainsTest {
 
     @Test
     public void testStringArray() {
-        GraphGenerator graphGenerator = GraphGenerator.build().withWorkspace().generateTinyGraph().addStringArrayNodeColumn();
+        GraphGenerator graphGenerator = GraphGenerator.build().generateTinyGraph().addStringArrayNodeColumn();
         Graph graph = graphGenerator.getGraph();
 
         ListAttributeContainsBuilder builder = new ListAttributeContainsBuilder();
@@ -30,7 +30,7 @@ public void testStringArray() {
 
     @Test
     public void testFloatArrayStringMatch() {
-        GraphGenerator graphGenerator = GraphGenerator.build().withWorkspace().generateTinyGraph().addFloatArrayNodeColumn();
+        GraphGenerator graphGenerator = GraphGenerator.build().generateTinyGraph().addFloatArrayNodeColumn();
         Graph graph = graphGenerator.getGraph();
 
         ListAttributeContainsBuilder builder = new ListAttributeContainsBuilder();

File: modules/PreviewExport/src/test/java/org/gephi/io/exporter/preview/PDFExporterTest.java
Patch:
@@ -21,7 +21,7 @@ public class PDFExporterTest {
 
     @Test
     public void testPDFExporter() throws IOException {
-        Workspace workspace = GraphGenerator.build().withWorkspace()
+        Workspace workspace = GraphGenerator.build()
             .generateSmallRandomGraph().addRandomPositions().getWorkspace();
 
         Random random = new Random();

File: modules/SettingsUpgrader/src/main/java/org/gephi/ui/upgrader/CopyFiles.java
Patch:
@@ -77,6 +77,7 @@ private CopyFiles(File source, File target) {
             Reader reader = new InputStreamReader(is, StandardCharsets.UTF_8); // NOI18N
             readPatterns(reader);
             reader.close();
+            is.close();
         } catch (IOException ex) {
         }
     }

File: modules/VisualizationAPI/src/main/java/org/gephi/visualization/api/VisualizationController.java
Patch:
@@ -55,9 +55,9 @@ public interface VisualizationController {
 
     public void resetSelection();
 
-    public void resetNodesSelection();
+    public void centerOnNode(Node node);
 
-    public void resetEdgesSelection();
+    public void centerOnEdge(Edge edge);
 
     public void selectNodes(Node[] nodes);
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/selection/SelectionManager.java
Patch:
@@ -184,7 +184,7 @@ public void selectEdges(Edge[] edges) {
 
     public void centerOnNode(Node node) {
         if (node != null) {
-            VizController.getInstance().getGraphIO().centerOnCoordinate(node.x(), node.y(), node.z() + node.size() * 8);
+            VizController.getInstance().getGraphIO().centerOnCoordinate(node.x(), node.y(), node.z() + node.size() * 40);
             engine.getScheduler().requireUpdateVisible();
         }
     }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java
Patch:
@@ -90,7 +90,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter(Workspace workspace) {
+    public OutDegreeRangeFilter getFilter(Workspace workspace) {
         return new OutDegreeRangeFilter();
     }
 

File: modules/ImportAPI/src/test/java/org/gephi/io/importer/impl/ElementDraftTest.java
Patch:
@@ -89,15 +89,15 @@ public void testSetValueDuplicateInterval() {
         EdgeDraftImpl edge = new EdgeDraftImpl(new ImportContainerImpl(), "0");
         edge.setValue("foo", "bar", 1.0, 2.0);
         edge.setValue("foo", "hello", 1.0, 2.0);
-        assertContainerIssues(edge.container.getReport(), Issue.Level.WARNING, "hello");
+        Utils.assertContainerIssues(edge.container.getReport(), Issue.Level.WARNING, "hello");
     }
 
     @Test
     public void testSetValueDuplicateTimestamp() {
         EdgeDraftImpl edge = new EdgeDraftImpl(new ImportContainerImpl(), "0");
         edge.setValue("foo", "bar", 1.0);
         edge.setValue("foo", "hello", 1.0);
-        assertContainerIssues(edge.container.getReport(), Issue.Level.WARNING, "hello");
+        Utils.assertContainerIssues(edge.container.getReport(), Issue.Level.WARNING, "hello");
     }
 
     @Test

File: modules/ProjectAPI/src/test/java/org/gephi/project/io/GephiWriterReaderTest.java
Patch:
@@ -58,6 +58,7 @@ public void testWorkspace() throws Exception {
     public void testWorkspaceMetadata() throws Exception {
         Workspace workspace = Utils.newWorkspace();
         workspace.getWorkspaceMetadata().setDescription("foo");
+        workspace.getWorkspaceMetadata().setTitle("bar");
 
         Workspace read = writeAndReadWorkspace(workspace);
         Assert.assertEquals(workspace.getWorkspaceMetadata(), read.getWorkspaceMetadata());

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/ProjectControllerUIImpl.java
Patch:
@@ -306,7 +306,7 @@ private boolean canExport(JFileChooser chooser) {
                 String overwriteMsg = NbBundle.getMessage(
                     ProjectControllerUIImpl.class,
                     "SaveAsProject_Overwrite", new Object[] {file.getPath()});
-                if (JOptionPane.showConfirmDialog(null, overwriteMsg) != JOptionPane.OK_OPTION) {
+                if (JOptionPane.showConfirmDialog(chooser, overwriteMsg) != JOptionPane.OK_OPTION) {
                     return false;
                 }
             }

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/DOTTest.java
Patch:
@@ -43,7 +43,7 @@ public void testMultipleEdges() {
 
     @Test
     public void testUndirectedMultipleEdges() {
-        Container container = Utils.importFile(new ImporterDOT(), "dot/multipleundirectededgesperline.dot");
+        Container container = Utils.importFile(new ImporterDOT(), "dot/multipleedgesperline2.dot");
         Assert.assertEquals(container.getUnloader().getEdgeDefault(), EdgeDirectionDefault.UNDIRECTED);
         NodeDraft[] nodes = Utils.toNodesArray(container);
         Assert.assertEquals(4, nodes.length);

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/OpenOrdLayout.java
Patch:
@@ -72,7 +72,7 @@ public class OpenOrdLayout implements Layout, LongTask {
     private boolean running = true;
     private ProgressTicket progressTicket;
     //Settings
-    private Params param;
+    private Params param = Params.DEFAULT;
     private float edgeCut;
     private int numThreads;
     private long randSeed;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizModel.java
Patch:
@@ -511,7 +511,9 @@ public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
             writer.writeAttribute("antialiasing", String.valueOf(screenshotMaker.getAntiAliasing()));
             writer.writeAttribute("transparent", String.valueOf(screenshotMaker.isTransparentBackground()));
             writer.writeAttribute("autosave", String.valueOf(screenshotMaker.isAutoSave()));
-            writer.writeAttribute("path", screenshotMaker.getDefaultDirectory());
+            if (screenshotMaker.getDefaultDirectory() != null) {
+                writer.writeAttribute("path", screenshotMaker.getDefaultDirectory());
+            }
             writer.writeEndElement();
         }
     }

File: modules/UIUtils/src/main/java/org/gephi/ui/utils/UIUtils.java
Patch:
@@ -94,11 +94,11 @@ public static boolean isFlatLafLookAndFeel() {
     }
 
     public static boolean isFlatLafLightLookAndFeel() {
-        return UIManager.getLookAndFeel().getID().equals("FlatLaf Light"); //NOI18N
+        return UIManager.getLookAndFeel().getID().contains("FlatLaf Light"); //NOI18N
     }
 
     public static boolean isFlatLafDarkLookAndFeel() {
-        return UIManager.getLookAndFeel().getName().equals("FlatLaf Dark"); //NOI18N
+        return UIManager.getLookAndFeel().getName().contains("FlatLaf Dark"); //NOI18N
     }
 
     public static boolean isDarkLookAndFeel() {

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterCSV.java
Patch:
@@ -63,7 +63,9 @@ public class UIExporterCSV implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterCSV = (ExporterCSV) exporter;
         settings.load(exporterCSV);
-        panel.setup(exporterCSV);
+        if (panel != null) {
+            panel.setup(exporterCSV);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterDL.java
Patch:
@@ -66,7 +66,9 @@ public JPanel getPanel() {
     public void setup(Exporter exporter) {
         this.exporter = (ExporterDL) exporter;
         settings.load(this.exporter);
-        panel.setup(this.exporter);
+        if (panel != null) {
+            panel.setup(this.exporter);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGDF.java
Patch:
@@ -63,7 +63,9 @@ public class UIExporterGDF implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterGDF = (ExporterGDF) exporter;
         settings.load(exporterGDF);
-        panel.setup(exporterGDF);
+        if (panel != null) {
+            panel.setup(exporterGDF);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGEXF.java
Patch:
@@ -63,7 +63,9 @@ public class UIExporterGEXF implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterGEXF = (ExporterGEXF) exporter;
         settings.load(exporterGEXF);
-        panel.setup(exporterGEXF);
+        if (panel != null) {
+            panel.setup(exporterGEXF);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGML.java
Patch:
@@ -72,7 +72,9 @@ public JPanel getPanel() {
     public void setup(Exporter exporter) {
         this.exporter = (ExporterGML) exporter;
         settings.load(this.exporter);
-        panel.setup(this.exporter);
+        if (panel != null) {
+            panel.setup(this.exporter);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGraphML.java
Patch:
@@ -63,7 +63,9 @@ public class UIExporterGraphML implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterGraphML = (ExporterGraphML) exporter;
         settings.load(exporterGraphML);
-        panel.setup(exporterGraphML);
+        if (panel != null) {
+            panel.setup(exporterGraphML);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterPajek.java
Patch:
@@ -63,7 +63,9 @@ public class UIExporterPajek implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterPajek = (ExporterPajek) exporter;
         settings.load(exporterPajek);
-        panel.setup(exporterPajek);
+        if (panel != null) {
+            panel.setup(exporterPajek);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterSpreadsheet.java
Patch:
@@ -66,7 +66,9 @@ public class UIExporterSpreadsheet implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterSpreadsheet = (ExporterSpreadsheet) exporter;
         settings.load(exporterSpreadsheet);
-        panel.setup(exporterSpreadsheet);
+        if (panel != null) {
+            panel.setup(exporterSpreadsheet);
+        }
     }
 
     @Override

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterVNA.java
Patch:
@@ -68,7 +68,9 @@ public JPanel getPanel() {
     public void setup(Exporter exporter) {
         this.exporter = (ExporterVNA) exporter;
         settings.load(this.exporter);
-        panel.setup((ExporterVNA) exporter);
+        if (panel != null) {
+            panel.setup((ExporterVNA) exporter);
+        }
     }
 
     @Override

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/PNGExporter.java
Patch:
@@ -73,7 +73,7 @@ public class PNGExporter implements VectorExporter, ByteExporter, LongTask {
     private int width = 1024;
     private int height = 1024;
     private boolean transparentBackground = false;
-    private int margin = 4; //FIXME Use a float instead to avoid extra cast
+    private int margin = 4;
     private G2DTarget target;
     private Color oldColor;
 

File: modules/PreviewExportUI/src/main/java/org/gephi/ui/exporter/preview/UIExporterPDF.java
Patch:
@@ -66,7 +66,9 @@ public class UIExporterPDF implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterPDF = (PDFExporter) exporter;
         settings.load(exporterPDF);
-        panel.setup(exporterPDF);
+        if (panel != null) {
+            panel.setup(exporterPDF);
+        }
     }
 
     @Override

File: modules/PreviewExportUI/src/main/java/org/gephi/ui/exporter/preview/UIExporterPNG.java
Patch:
@@ -72,7 +72,9 @@ public JPanel getPanel() {
     public void setup(Exporter exporter) {
         this.exporter = (PNGExporter) exporter;
         settings.load(this.exporter);
-        panel.setup(this.exporter);
+        if (panel != null) {
+            panel.setup(this.exporter);
+        }
     }
 
     @Override

File: modules/PreviewExportUI/src/main/java/org/gephi/ui/exporter/preview/UIExporterSVG.java
Patch:
@@ -63,7 +63,9 @@ public class UIExporterSVG implements ExporterUI {
     public void setup(Exporter exporter) {
         exporterSVG = (SVGExporter) exporter;
         settings.load(exporterSVG);
-        panel.setup(exporterSVG);
+        if (panel != null) {
+            panel.setup(exporterSVG);
+        }
     }
 
     @Override

File: modules/LongTaskAPI/src/test/java/org/gephi/utils/longtask/api/SynchronousTest.java
Patch:
@@ -3,6 +3,7 @@
 import java.util.concurrent.Callable;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
+import org.awaitility.Awaitility;
 import org.gephi.utils.longtask.api.LongTaskErrorHandler;
 import org.gephi.utils.longtask.api.LongTaskExecutor;
 import org.gephi.utils.longtask.api.LongTaskListener;
@@ -18,6 +19,7 @@
 import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.Mockito;
+import org.mockito.internal.stubbing.answers.AnswersWithDelay;
 import org.mockito.junit.MockitoJUnitRunner;
 import org.netbeans.junit.MockServices;
 import org.openide.util.Cancellable;
@@ -70,6 +72,7 @@ public void testExecuteRunnableWithProgress() {
 
     @Test
     public void testExecuteRunnableException() {
+        executor.setLongTaskListener(listener);
         Mockito.doThrow(new RuntimeException()).when(runnable).run();
         executor.execute(longTask, runnable, "", errorHandler);
         Mockito.verify(errorHandler).fatalError(Mockito.any(RuntimeException.class));

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewUIControllerImpl.java
Patch:
@@ -219,7 +219,9 @@ private void enableRefresh() {
             public void run() {
                 PreviewSettingsTopComponent pstc = (PreviewSettingsTopComponent) WindowManager.getDefault()
                     .findTopComponent("PreviewSettingsTopComponent");
-                pstc.enableRefreshButton();
+                if (pstc != null) {
+                    pstc.enableRefreshButton();
+                }
             }
         });
     }

File: modules/PreviewAPI/src/main/java/org/gephi/preview/api/RenderTarget.java
Patch:
@@ -48,12 +48,11 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * RenderTarget is the graphic container the renderers draw into.
  * <p>
- * There are three types of targets: <b>Processing</b>, <b>PDF</b> or
+ * There are three types of targets: <b>G2D</b>, <b>PDF</b> or
  * <b>SVG</b>. When the target is G2D, renderers obtain the {@link Graphics2D}
  * object. For the SVG target, renderers obtain Batik's <a
  * href="http://xmlgraphics.apache.org/batik/using/dom-api.html">Document</a>
- * instance. As the PDF target rely on the iText library renderers obtain the <a
- * href="http://api.itextpdf.com/itext/index.html?com/itextpdf/text/pdf/PdfContentByte.html">PdfContentByte</a>
+ * instance. As the PDF target rely on the PDFBox library, renderers obtain the {@link org.apache.pdfbox.pdmodel.PDPageContentStream}</a>
  * object.
  * <p>
  * Render targets are not drawing anything. They just make accessible the canvas

File: modules/PreviewExportUI/src/main/java/org/gephi/ui/exporter/preview/UIExporterPDF.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 package org.gephi.ui.exporter.preview;
 
-import com.itextpdf.text.Rectangle;
 import javax.swing.JPanel;
+import org.apache.pdfbox.pdmodel.common.PDRectangle;
 import org.gephi.io.exporter.preview.PDFExporter;
 import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.spi.ExporterUI;
@@ -117,7 +117,7 @@ private void load(PDFExporter exporter) {
             exporter.setLandscape(get(LANDSCAPE, DEFAULT.isLandscape()));
             float width = get(PAGE_SIZE_WIDTH, DEFAULT.getPageSize().getWidth());
             float height = get(PAGE_SIZE_HEIGHT, DEFAULT.getPageSize().getHeight());
-            exporter.setPageSize(new Rectangle(width, height));
+            exporter.setPageSize(new PDRectangle(width, height));
         }
 
         private void save(PDFExporter exporter) {

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/NodeLabelBuilder.java
Patch:
@@ -71,7 +71,7 @@ public Item[] getItems(Graph graph) {
         //Build text
         VisualizationController vizController = Lookup.getDefault().lookup(VisualizationController.class);
         Workspace workspace = WorkspaceHelper.getWorkspace(graph);
-        Column[] nodeColumns = vizController != null ? vizController.getNodeTextColumns(workspace) : null;
+        Column[] nodeColumns = workspace != null && vizController != null ? vizController.getNodeTextColumns(workspace) : null;
 
         List<Item> items = new ArrayList<>();
         NodeIterable nodeIterable = graph.getNodes();

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/WorkspaceHelper.java
Patch:
@@ -17,6 +17,9 @@ public class WorkspaceHelper {
      */
     public static Workspace getWorkspace(Graph graph) {
         ProjectController projectController = Lookup.getDefault().lookup(ProjectController.class);
+        if (projectController.getCurrentProject() == null) {
+            return null;
+        }
         WorkspaceProvider workspaceProvider =
             projectController.getCurrentProject().getLookup().lookup(WorkspaceProvider.class);
         for (Workspace workspace : workspaceProvider.getWorkspaces()) {

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingColorTransformerPanel.java
Patch:
@@ -84,7 +84,6 @@ public RankingColorTransformerPanel() {
 
         //Init slider
         gradientSlider = new GradientSlider(GradientSlider.HORIZONTAL);
-        gradientSlider.putClientProperty("GradientSlider.includeOpacity", "false");
         gradientSlider.addPropertyChangeListener(new PropertyChangeListener() {
             @Override
             public void propertyChange(PropertyChangeEvent evt) {

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PreviewModelImpl.java
Patch:
@@ -74,7 +74,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.preview.types.editors.BasicDependantColorPropertyEditor;
 import org.gephi.preview.types.editors.BasicDependantOriginalColorPropertyEditor;
 import org.gephi.preview.types.editors.BasicEdgeColorPropertyEditor;
-import org.gephi.utils.ColorEditor;
 import org.gephi.project.api.Workspace;
 import org.gephi.utils.Serialization;
 import org.openide.util.Lookup;

File: modules/PreviewAPI/src/main/java/org/gephi/preview/types/DependantColor.java
Patch:
@@ -60,7 +60,7 @@ public DependantColor() {
     }
 
     public DependantColor(Mode mode) {
-        customColor = Color.BLACK;
+        customColor = mode.equals(Mode.CUSTOM) ? Color.BLACK : null;
         this.mode = mode;
     }
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/types/DependantOriginalColor.java
Patch:
@@ -55,7 +55,7 @@ public final class DependantOriginalColor {
     private final Mode mode;
 
     public DependantOriginalColor(Mode mode) {
-        customColor = Color.BLACK;
+        customColor = mode.equals(DependantOriginalColor.Mode.CUSTOM) ? Color.BLACK : null;
         this.mode = mode;
     }
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/types/EdgeColor.java
Patch:
@@ -61,7 +61,7 @@ public class EdgeColor {
     private final Color customColor;
 
     public EdgeColor(Mode mode) {
-        customColor = Color.BLACK;
+        customColor = mode.equals(Mode.CUSTOM) ? Color.BLACK : null;
         this.mode = mode;
     }
 

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingColorTransformerPanel.java
Patch:
@@ -60,6 +60,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.ui.components.gradientslider.MultiThumbSlider;
 import org.gephi.utils.PaletteUtils;
 import org.gephi.utils.PaletteUtils.Palette;
+import org.openide.util.ImageUtilities;
 import org.openide.util.NbBundle;
 
 /**
@@ -250,8 +251,8 @@ private void initComponents() {
         colorSwatchToolbar.setRollover(true);
         colorSwatchToolbar.setOpaque(false);
 
-        colorSwatchButton.setIcon(new javax.swing.ImageIcon(
-            getClass().getResource("/org/gephi/ui/appearance/plugin/resources/color-swatch.png"))); // NOI18N
+        colorSwatchButton.setIcon(
+            ImageUtilities.loadImageIcon("AppearancePluginUI/color-swatch.png", false)); // NOI18N
         colorSwatchButton.setFocusable(false);
         colorSwatchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
         colorSwatchButton.setIconTextGap(0);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ClearColumnData.java
Patch:
@@ -108,6 +108,6 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/table-delete-column.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/table-delete-column.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ColumnValuesFrequency.java
Patch:
@@ -116,7 +116,7 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/frequency-list.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/frequency-list.png", false);
     }
 
     public String getReportHTML(Table table, Column column, Map<Object, Integer> valuesFrequencies, JFreeChart pieChart,

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ConvertColumnToDynamic.java
Patch:
@@ -118,7 +118,7 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/table-insert-column.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/table-insert-column.png", false);
     }
 
     public String getTitle() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CopyDataToOtherColumn.java
Patch:
@@ -107,7 +107,7 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/table-duplicate-column.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/table-duplicate-column.png", false);
     }
 
     public Column getTargetColumn() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CreateBooleanMatchesColumn.java
Patch:
@@ -106,6 +106,6 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/binocular--arrow.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/binocular--arrow.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CreateFoundGroupsListColumn.java
Patch:
@@ -107,6 +107,6 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/binocular--arrow.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/binocular--arrow.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/DeleteColumn.java
Patch:
@@ -105,6 +105,6 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/table-delete-column.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/table-delete-column.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/DuplicateColumn.java
Patch:
@@ -102,7 +102,7 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/table-duplicate-column.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/table-duplicate-column.png", false);
     }
 
     public String getTitle() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/FillColumnWithValue.java
Patch:
@@ -106,6 +106,6 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/table-duplicate-column.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/table-duplicate-column.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/NegateBooleanColumn.java
Patch:
@@ -100,6 +100,6 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/ui-check-boxes.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/ui-check-boxes.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/NumberColumnStatisticsReport.java
Patch:
@@ -100,7 +100,7 @@ public int getPosition() {
 
     @Override
     public Image getIcon() {
-        return ImageUtilities.loadImage("org/gephi/datalab/plugin/manipulators/resources/statistics.png");
+        return ImageUtilities.loadImage("DataLaboratoryPlugin/statistics.png", false);
     }
 
     public Number[] getColumnNumbers(final Table table, final Column column) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/AverageNumber.java
Patch:
@@ -115,7 +115,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/balance.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/balance.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/BooleanLogicOperations.java
Patch:
@@ -116,7 +116,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/script-binary.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/script-binary.png", false);
     }
 
     public BooleanOperations[] getBooleanOperations() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/CreateTimeInterval.java
Patch:
@@ -129,7 +129,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/clock-select.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/clock-select.png", false);
     }
 
     public Column[] getColumns() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinNumberColumns.java
Patch:
@@ -116,7 +116,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/join.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/join.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinWithSeparator.java
Patch:
@@ -115,7 +115,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/join.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/join.png", false);
     }
 
     public String getNewColumnTitle() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MaximumNumber.java
Patch:
@@ -115,7 +115,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/plus-white.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/plus-white.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MedianNumber.java
Patch:
@@ -115,7 +115,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/ui-slider-050.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/ui-slider-050.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MinimumNumber.java
Patch:
@@ -115,7 +115,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/minus-white.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/minus-white.png", false);
     }
 
     public Table getTable() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/SumNumbers.java
Patch:
@@ -115,7 +115,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/plus-circle.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/plus-circle.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/ClearEdgesData.java
Patch:
@@ -124,7 +124,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/clear-data.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/clear-data.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/CopyEdgeDataToOtherEdges.java
Patch:
@@ -125,7 +125,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/broom--arrow.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/broom--arrow.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/DeleteEdges.java
Patch:
@@ -111,6 +111,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/cross.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/cross.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/DeleteEdgesWithNodes.java
Patch:
@@ -108,7 +108,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/cross.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/cross.png", false);
     }
 
     public void setDeleteSource(boolean deleteSource) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/OpenInEditEdgeWindow.java
Patch:
@@ -110,6 +110,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/edit.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/edit.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/SelectNodesOnTable.java
Patch:
@@ -105,7 +105,7 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/table-select-row.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/table-select-row.png", false);
     }
 
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/SelectOnGraph.java
Patch:
@@ -104,6 +104,6 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/magnifier--arrow.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/magnifier--arrow.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/SelectSourceOnGraph.java
Patch:
@@ -103,6 +103,6 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/magnifier--arrow.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/magnifier--arrow.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/SelectTargetOnGraph.java
Patch:
@@ -102,6 +102,6 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/magnifier--arrow.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/magnifier--arrow.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/AddEdgeToGraph.java
Patch:
@@ -116,7 +116,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/plus-white.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/plus-white.png", false);
     }
 
     public boolean isDirected() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/AddNodeToGraph.java
Patch:
@@ -106,6 +106,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/plus-circle.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/plus-circle.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ClearEdges.java
Patch:
@@ -127,7 +127,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/eraser--minus.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/eraser--minus.png", false);
     }
 
     public boolean isDeleteDirected() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ClearGraph.java
Patch:
@@ -102,6 +102,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/eraser--minus.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/eraser--minus.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ExportTable.java
Patch:
@@ -97,6 +97,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/table-excel.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/table-excel.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ImportCSV.java
Patch:
@@ -119,6 +119,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/table-excel.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/table-excel.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ManageColumnEstimators.java
Patch:
@@ -134,7 +134,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/gear.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/gear.png", false);
     }
 
     public void setup(Column[] columns, Estimator[] estimators) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/MergeNodeDuplicates.java
Patch:
@@ -139,7 +139,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/merge.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/merge.png", false);
     }
 
     public Column[] getColumns() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/SearchReplace.java
Patch:
@@ -120,7 +120,7 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/binocular--pencil.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/binocular--pencil.png", false);
     }
 
     private Table getCurrentTable() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/MergeNodeDuplicatesUI.java
Patch:
@@ -78,9 +78,9 @@ Development and Distribution License("CDDL") (collectively, the
 public final class MergeNodeDuplicatesUI extends JPanel implements ManipulatorUI {
 
     private static final ImageIcon CONFIG_BUTTONS_ICON =
-        ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/gear.png", true);
+        ImageUtilities.loadImageIcon("DataLaboratoryPlugin/gear.png", false);
     private static final ImageIcon INFO_LABELS_ICON =
-        ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/information.png", true);
+        ImageUtilities.loadImageIcon("DataLaboratoryPlugin/information.png", false);
     private MergeNodeDuplicates manipulator;
     private DialogControls dialogControls;
     private Column[] columns;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ClearNodesData.java
Patch:
@@ -124,7 +124,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/clear-data.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/clear-data.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/CopyNodeDataToOtherNodes.java
Patch:
@@ -125,7 +125,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/broom--arrow.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/broom--arrow.png", false);
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/CopyNodes.java
Patch:
@@ -110,7 +110,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/duplicate.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/duplicate.png", false);
     }
 
     public int getCopies() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/DeleteNodes.java
Patch:
@@ -111,6 +111,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/cross.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/cross.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/Free.java
Patch:
@@ -111,6 +111,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/free.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/free.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/LinkNodes.java
Patch:
@@ -128,7 +128,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/edge.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/edge.png", false);
     }
 
     public Node[] getNodes() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/MergeNodes.java
Patch:
@@ -143,7 +143,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/merge.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/merge.png", false);
     }
 
     public boolean isDeleteMergedNodes() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/OpenInEditNodeWindow.java
Patch:
@@ -111,6 +111,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/edit.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/edit.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SelectEdgesOnTable.java
Patch:
@@ -110,6 +110,6 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/table-select-row.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/table-select-row.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SelectNeighboursOnTable.java
Patch:
@@ -106,6 +106,6 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/table-select-row.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/table-select-row.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SelectOnGraph.java
Patch:
@@ -104,6 +104,6 @@ public int getPosition() {
     @Override
     public Icon getIcon() {
         return ImageUtilities
-            .loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/magnifier--arrow.png", true);
+            .loadImageIcon("DataLaboratoryPlugin/magnifier--arrow.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SetNodesSize.java
Patch:
@@ -108,7 +108,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/size.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/size.png", false);
     }
 
     public float getSize() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/Settle.java
Patch:
@@ -111,6 +111,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/settle.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/settle.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ui/MergeNodesUI.java
Patch:
@@ -70,9 +70,9 @@ Development and Distribution License("CDDL") (collectively, the
 public final class MergeNodesUI extends JPanel implements ManipulatorUI {
 
     private static final ImageIcon CONFIG_BUTTONS_ICON =
-        ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/gear.png", true);
+        ImageUtilities.loadImageIcon("DataLaboratoryPlugin/gear.png", false);
     private static final ImageIcon INFO_LABELS_ICON =
-        ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/information.png", true);
+        ImageUtilities.loadImageIcon("DataLaboratoryPlugin/information.png", false);
     private MergeNodes manipulator;
     private JCheckBox deleteMergedNodesCheckBox;
     private JComboBox nodesComboBox;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/AverageNumber.java
Patch:
@@ -116,6 +116,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/balance.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/balance.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/JoinWithSeparator.java
Patch:
@@ -140,7 +140,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/join.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/join.png", false);
     }
 
     public String getSeparator() {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/KeepSelectedRowValue.java
Patch:
@@ -109,6 +109,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/table-select.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/table-select.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MaximumNumber.java
Patch:
@@ -116,6 +116,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/plus-white.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/plus-white.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MedianNumber.java
Patch:
@@ -116,6 +116,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/ui-slider-050.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/ui-slider-050.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MinimumNumber.java
Patch:
@@ -116,6 +116,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/minus-white.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/minus-white.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SetNull.java
Patch:
@@ -102,6 +102,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/broom.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/broom.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SumNumbers.java
Patch:
@@ -116,6 +116,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/plus-circle.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/plus-circle.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/ClearAttributeValue.java
Patch:
@@ -105,6 +105,6 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/clear-data.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/clear-data.png", false);
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/NumberListStatisticsReport.java
Patch:
@@ -109,7 +109,7 @@ public int getPosition() {
 
     @Override
     public Icon getIcon() {
-        return ImageUtilities.loadImageIcon("org/gephi/datalab/plugin/manipulators/resources/chart-up.png", true);
+        return ImageUtilities.loadImageIcon("DataLaboratoryPlugin/chart-up.png", false);
     }
 
     private String getMessage(String resName) {

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/DeleteWorkspace.java
Patch:
@@ -63,7 +63,7 @@ public boolean isEnabled() {
 
     @Override
     protected String iconResource() {
-        return "org/gephi/branding/desktop/actions/resources/deleteWorkspace.png";
+        return "DesktopBranding/deleteWorkspace.png";
     }
 
     @Override

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/NewProject.java
Patch:
@@ -63,7 +63,7 @@ public boolean isEnabled() {
 
     @Override
     protected String iconResource() {
-        return "org/gephi/branding/desktop/actions/resources/newProject.png";
+        return "DesktopBranding/newProject.png";
     }
 
     @Override

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/NewWorkspace.java
Patch:
@@ -63,7 +63,7 @@ public boolean isEnabled() {
 
     @Override
     protected String iconResource() {
-        return "org/gephi/branding/desktop/actions/resources/newWorkspace.png";
+        return "DesktopBranding/newWorkspace.png";
     }
 
     @Override

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/OpenOnlineDoc.java
Patch:
@@ -67,7 +67,7 @@ public HelpCtx getHelpCtx() {
 
     /*@Override
     protected String iconResource() {
-        return "org/gephi/branding/desktop/actions/resources/cleanWorkspace.gif";
+        return "DesktopBranding/cleanWorkspace.gif";
     }*/
 
     @Override

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/ProjectProperties.java
Patch:
@@ -69,7 +69,7 @@ public boolean isEnabled() {
 
     @Override
     protected String iconResource() {
-        return "org/gephi/branding/desktop/actions/resources/projectProperties.gif";
+        return "DesktopBranding/projectProperties.gif";
     }
 
     @Override

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/RenameWorkspace.java
Patch:
@@ -79,7 +79,7 @@ public boolean isEnabled() {
 
     @Override
     protected String iconResource() {
-        return "org/gephi/branding/desktop/actions/resources/renameWorkspace.png";
+        return "DesktopBranding/renameWorkspace.png";
     }
 
     @Override

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/SaveProject.java
Patch:
@@ -68,7 +68,7 @@ public HelpCtx getHelpCtx() {
 
     @Override
     protected String iconResource() {
-        return "org/gephi/branding/desktop/actions/resources/saveProject.png";
+        return "DesktopBranding/saveProject.png";
     }
 
     @Override

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/multilingual/LanguageAction.java
Patch:
@@ -105,7 +105,7 @@ public void actionPerformed(ActionEvent e) {
                 }
             });
             //Flag icons from http://www.famfamfam.com
-            String iconFile = "org/gephi/branding/desktop/multilingual/resources/" + lang.getLanguage();
+            String iconFile = "DesktopBranding/" + lang.getLanguage();
             if (lang.getCountry() != null) {
                 iconFile += "_" + lang.getCountry();
             }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/PopupMenuUtils.java
Patch:
@@ -215,7 +215,7 @@ public void actionPerformed(ActionEvent e) {
     public static JMenu createSubMenuFromRowColumn(Element row, Column column) {
         DataLaboratoryHelper dlh = DataLaboratoryHelper.getDefault();
         JMenu subMenu = new JMenu(NbBundle.getMessage(PopupMenuUtils.class, "Cell.Popup.subMenu.text"));
-        subMenu.setIcon(ImageUtilities.loadImageIcon("org/gephi/desktop/datalab/resources/table-select.png", true));
+        subMenu.setIcon(ImageUtilities.loadImageIcon("DesktopDataLaboratory/table-select.png", true));
 
         Integer lastManipulatorType = null;
         for (AttributeValueManipulator am : dlh.getAttributeValueManipulators()) {

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/FiltersTopComponent.java
Patch:
@@ -59,7 +59,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ConvertAsProperties(dtd = "-//org.gephi.desktop.filters//Filters//EN",
     autostore = false)
 @TopComponent.Description(preferredID = "FiltersTopComponent",
-    iconBase = "org/gephi/desktop/filters/resources/small.png",
+    iconBase = "DesktopFilters/small.png",
     persistenceType = TopComponent.PERSISTENCE_ALWAYS)
 @TopComponent.Registration(mode = "filtersmode", openAtStartup = true, roles = {"overview"})
 @ActionID(category = "Window", id = "org.gephi.desktop.filters.FiltersTopComponent")
@@ -68,7 +68,7 @@ Development and Distribution License("CDDL") (collectively, the
     preferredID = "FiltersTopComponent")
 public final class FiltersTopComponent extends TopComponent {
 
-    static final String ICON_PATH = "org/gephi/desktop/filters/resources/small.png";
+    static final String ICON_PATH = "DesktopFilters/small.png";
     private static final String PREFERRED_ID = "FiltersTopComponent";
     private static final long AUTO_REFRESH_RATE_MILLISECONDS = 3000;
     private static FiltersTopComponent instance;

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/CategoryNode.java
Patch:
@@ -87,9 +87,9 @@ public Image getIcon(int type) {
         } catch (Exception e) {
         }
         if (category == null) {
-            return ImageUtilities.loadImage("org/gephi/desktop/filters/library/resources/library.png");
+            return ImageUtilities.loadImage("DesktopFilters/library.png", false);
         } else {
-            return ImageUtilities.loadImage("org/gephi/desktop/filters/library/resources/folder.png");
+            return ImageUtilities.loadImage("DesktopFilters/folder.png", false);
         }
     }
 

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FilterBuilderNode.java
Patch:
@@ -85,7 +85,7 @@ public Image getIcon(int type) {
             }
         } catch (Exception e) {
         }
-        return ImageUtilities.loadImage("org/gephi/desktop/filters/library/resources/filter.png");
+        return ImageUtilities.loadImage("DesktopFilters/funnel.png", false);
     }
 
     @Override

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/ParameterNode.java
Patch:
@@ -57,13 +57,13 @@ public ParameterNode(String key, Object value) {
         super(Children.LEAF);
         String valStr = value == null ? "null" : value.toString();
         setName(key + ": " + valStr);
-        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/parameter.png");
+        setIconBaseWithExtension("DesktopFilters/parameter.png");
     }
 
     public ParameterNode(Query function) {
         super(new ParameterChildren(function));
         setName(NbBundle.getMessage(ParameterNode.class, "ParametersNode.name"));
-        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/parameters.png");
+        setIconBaseWithExtension("DesktopFilters/parameters.png");
     }
 
     @Override

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/QueryChildren.java
Patch:
@@ -109,7 +109,7 @@ private static class HelpNode extends AbstractNode {
 
         public HelpNode() {
             super(Children.LEAF);
-            setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/drop.png");
+            setIconBaseWithExtension("DesktopFilters/drop.png");
         }
 
         @Override

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/QueryNode.java
Patch:
@@ -69,7 +69,7 @@ public QueryNode(Query query) {
         super(new QueryChildren(query));
         this.query = query;
         //setName(query.getName());
-        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/query.png");
+        setIconBaseWithExtension("DesktopFilters/query.png");
     }
 
     @Override

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/RootNode.java
Patch:
@@ -68,7 +68,7 @@ public class RootNode extends AbstractNode {
     public RootNode(Children children) {
         super(children);
         setName(NbBundle.getMessage(RootNode.class, "RootNode.name"));
-        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/queries.png");
+        setIconBaseWithExtension("DesktopFilters/queries.png");
     }
 
     @Override

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/SlotNode.java
Patch:
@@ -71,7 +71,7 @@ public class SlotNode extends AbstractNode {
     public SlotNode(Query parent) {
         super(Children.LEAF);
         this.parent = parent;
-        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/drop.png");
+        setIconBaseWithExtension("DesktopFilters/drop.png");
         setShortDescription(NbBundle.getMessage(SlotNode.class, "SlotNode.description"));
     }
 

File: modules/Utils/src/main/java/org/gephi/utils/ColorEditor.java
Patch:
@@ -1,4 +1,4 @@
-package org.gephi.preview.types.editors;
+package org.gephi.utils;
 
 import java.awt.Color;
 import java.beans.PropertyEditorSupport;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/SearchReplaceUI.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
 import javax.swing.JOptionPane;
+import javax.swing.UIManager;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
 import org.gephi.datalab.api.SearchReplaceController;
@@ -211,7 +212,7 @@ private void refreshRegexPattern() {
                 regexPattern = Pattern.compile(text);
             }
             searchOptions.setRegexPattern(regexPattern);
-            searchText.setBackground(Color.WHITE);
+            searchText.setBackground(UIManager.getColor("TextField.background"));
         } catch (PatternSyntaxException ex) {
             searchText.setBackground(invalidRegexColor);
             regexPattern = null;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -502,13 +502,13 @@ private void refreshAppliedFilter() {
         }
         if (isShowingNodesTable()) {
             if (nodeTable.setFilterPattern(filterTextField.getText(), index)) {
-                filterTextField.setBackground(Color.WHITE);
+                filterTextField.setBackground(UIManager.getColor("TextField.background"));
             } else {
                 filterTextField.setBackground(INVALID_FILTER_COLOR);
             }
         } else if (isShowingEdgesTable()) {
             if (edgeTable.setFilterPattern(filterTextField.getText(), index)) {
-                filterTextField.setBackground(Color.WHITE);
+                filterTextField.setBackground(UIManager.getColor("TextField.background"));
             } else {
                 filterTextField.setBackground(INVALID_FILTER_COLOR);
             }

File: modules/DesktopAppearance/src/test/java/org/gephi/desktop/appearance/PersistenceProviderTest.java
Patch:
@@ -59,10 +59,8 @@ public void testRankingColor() throws Exception {
         model.saveTransformerProperties();
         Assert.assertTrue(model.savedProperties.containsKey(function));
 
-        Workspace workspace = GephiFormat
+        GephiFormat
             .testXMLPersistenceProvider(new AppearanceUIModelPersistenceProvider(), model.getWorkspace());
-        AppearanceUIModel readModel = workspace.getLookup().lookup(AppearanceUIModel.class);
-        Assert.assertEquals(model.savedProperties, readModel.savedProperties);
     }
 
     @Test

File: modules/ProjectAPI/src/test/java/org/gephi/project/io/utils/GephiFormat.java
Patch:
@@ -26,7 +26,7 @@ public static Workspace testXMLPersistenceProvider(WorkspaceXMLPersistenceProvid
         String xmlStringAgain = toString(provider, newWorkspace);
 
         Assert.assertEquals(xmlString, xmlStringAgain);
-        return workspace;
+        return newWorkspace;
     }
 
     private static Workspace fromString(WorkspaceXMLPersistenceProvider provider, String xmlString)

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/FunctionImpl.java
Patch:
@@ -133,7 +133,8 @@ private void transformPartition(Element element, Graph graph) {
     }
 
     private void transformRanking(Element element, Graph graph, Number minValue, Number maxValue) {
-        Number val = ranking.getValue(element, graph);
+        // Always use visible graph to get the value (see #2629)
+        Number val = ranking.getValue(element, graph.getModel().getGraphVisible());
         if (val != null) {
             float normalizedValue = ranking.normalize(val, ranking.getInterpolator(), minValue, maxValue);
             ((RankingTransformer) transformer).transform(element, ranking, val, normalizedValue);

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterSpreadsheet.java
Patch:
@@ -101,7 +101,7 @@ public class ExporterSpreadsheet implements GraphExporter, CharacterExporter, Lo
     private boolean exportAttributes = true;
     private boolean exportPosition = false;
     private boolean exportSize = false;
-    private boolean exportDynamic = false;
+    private boolean exportDynamic = true;
 
     @Override
     public boolean execute() {

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/SpreadsheetTest.java
Patch:
@@ -583,6 +583,7 @@ private void checkEdgesSpreadsheet(boolean ignoreId) throws IOException {
         exporter.setWorkspace(workspace);
         exporter.setTableToExport(ExporterSpreadsheet.ExportTable.EDGES);
         exporter.setWriter(writer);
+        exporter.setExportDynamic(true);
 
         if (ignoreId) {
             exporter.setExcludedColumns(Set.of("id"));
@@ -612,6 +613,7 @@ private void checkNodesSpreadsheet() throws IOException {
         exporter.setWorkspace(workspace);
         exporter.setTableToExport(ExporterSpreadsheet.ExportTable.NODES);
         exporter.setWriter(writer);
+        exporter.setExportDynamic(true);
 
         exporter.execute();
 

File: modules/UIUtils/src/main/java/org/gephi/ui/propertyeditor/AbstractAttributeColumnPropertyEditor.java
Patch:
@@ -140,6 +140,9 @@ public String getAsText() {
 
     @Override
     public void setAsText(String text) throws IllegalArgumentException {
+        if (columns == null) {
+            columns = getColumns();
+        }
         for (Column c : columns) {
             if (c.getTitle().equals(text)) {
                 this.selectedColumn = c;

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/propertyeditors/DependantColorPanel.java
Patch:
@@ -110,7 +110,7 @@ public void setup(DependantColorPropertyEditor propertyEditor) {
                 parentRadio.setSelected(true);
                 break;
             case DARKER:
-                customRadio.setSelected(true);
+                darkerButton.setSelected(true);
                 break;
             default:
                 break;

File: modules/ImportAPI/src/test/java/org/gephi/io/importer/impl/ElementDraftTest.java
Patch:
@@ -87,6 +87,7 @@ public void testSetValueNullTimestampStringMap() {
     @Test
     public void testParseAndSetValue() {
         EdgeDraftImpl edge = new EdgeDraftImpl(new ImportContainerImpl(), "0");
+        edge.container.addEdgeColumn("foo", String.class);
         edge.parseAndSetValue("foo", "bar");
         Assert.assertEquals("bar", edge.getValue("foo"));
     }

File: modules/AppearanceAPI/src/test/java/org.gephi.appearance/AttributePartitionTest.java
Patch:
@@ -103,7 +103,7 @@ public void testIsValidIntColumn() {
         Assert.assertTrue(p.isValid(graph));
 
         clearNodeAttributes(graph);
-        Assert.assertFalse(p.isValid(graph));
+        Assert.assertTrue(p.isValid(graph));
     }
 
     @Test

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AttributePartitionImpl.java
Patch:
@@ -111,7 +111,7 @@ public Class getValueType() {
     public boolean isValid(Graph graph) {
         Column col = column.get();
         if (col != null && col.getIndex() != -1) {
-            return !col.isNumber() || getIndex(graph.getModel().getGraph()).countValues(col) > 1;
+            return true;
         }
         return false;
     }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewSketch.java
Patch:
@@ -207,6 +207,7 @@ private Vector screenPositionToModelPosition(Vector screenPos) {
 
         Vector modelPos = new Vector(screenPos.x, screenPos.y);
         modelPos.sub(scaledTrans);
+        modelPos.mult(scaleFactor);
         modelPos.div(target.getScaling());
         modelPos.sub(target.getTranslate());
         return modelPos;

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/SpreadsheetTest.java
Patch:
@@ -604,7 +604,7 @@ private void checkEdgesSpreadsheet(boolean ignoreId) throws IOException {
             e.printStackTrace();
         }
 
-        Assert.assertEquals(result, expected);
+        Assert.assertEquals(expected, result);
     }
 
     private void checkNodesSpreadsheet() throws IOException {
@@ -630,6 +630,6 @@ private void checkNodesSpreadsheet() throws IOException {
             e.printStackTrace();
         }
 
-        Assert.assertEquals(result, expected);
+        Assert.assertEquals(expected, result);
     }
 }

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -377,6 +377,7 @@ public void run() {
                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
                 Workspace newWorkspace = pc.newWorkspace(pc.getCurrentProject());
                 GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getGraphModel(newWorkspace);
+                graphModel.setConfiguration(graphView.getModel().getConfiguration());
                 graphModel.bridge().copyNodes(graphView.getNodes().toArray());
                 Graph graph = graphModel.getGraph();
                 List<Edge> edgesToRemove = new ArrayList<>();

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/StatisticalInferenceClustering.java
Patch:
@@ -123,7 +123,7 @@ public void execute(Graph graph) {
             if (graph.getNodeCount() > 0) {//Fixes issue #713 Modularity Calculation Throws Exception On Empty Graph
                 HashMap<String, Double> computedStatInfMetrics =
                     computePartition(graph, structure, comStructure, useWeight);
-                descriptionLength = computedStatInfMetrics.get("descriptionLength");
+                descriptionLength = computedStatInfMetrics.getOrDefault("descriptionLength", 0.0);
             } else {
                 descriptionLength = 0;
             }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/api/ProjectControllerUI.java
Patch:
@@ -76,6 +76,8 @@ public interface ProjectControllerUI {
 
     void deleteWorkspace();
 
+    void deleteWorkspace(Workspace workspace);
+
     void closeProject();
 
     void renameWorkspace(final String name);

File: modules/DesktopWindow/src/main/java/org/gephi/desktop/banner/workspace/WorkspacePanel.java
Patch:
@@ -51,6 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.Icon;
 import javax.swing.JComponent;
 import javax.swing.SwingUtilities;
+import org.gephi.desktop.project.api.ProjectControllerUI;
 import org.gephi.project.api.ProjectController;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.api.WorkspaceInformation;
@@ -121,7 +122,7 @@ public void actionPerformed(ActionEvent e) {
                     Object retType = DialogDisplayer.getDefault().notify(dd);
                     if (retType == NotifyDescriptor.YES_OPTION) {
                         TabData tabData = tabDataModel.getTab(tabActionEvent.getTabIndex());
-                        ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
+                        ProjectControllerUI pc = Lookup.getDefault().lookup(ProjectControllerUI.class);
                         pc.deleteWorkspace(((WorkspaceComponent) tabData.getUserObject()).workspace);
                     }
                     tabActionEvent.consume();

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/InterEdgesBuilder.java
Patch:
@@ -165,7 +165,7 @@ public String getName() {
 
         @Override
         public boolean init(Graph graph) {
-            this.graph = graph;
+            this.graph = graph.getModel().getGraph();
             return partition != null && partition.getColumn() != null;
         }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/IntraEdgesBuilder.java
Patch:
@@ -166,7 +166,7 @@ public String getName() {
 
         @Override
         public boolean init(Graph graph) {
-            this.graph = graph;
+            this.graph = graph.getModel().getGraph();
             return partition != null && partition.getColumn() != null;
         }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/PartitionBuilder.java
Patch:
@@ -182,7 +182,7 @@ public NodePartitionFilter(Partition partition) {
 
         @Override
         public boolean init(Graph graph) {
-            this.graph = graph;
+            this.graph = graph.getModel().getGraph();
             return partition != null && partition.getColumn() != null;
         }
     }
@@ -195,7 +195,7 @@ public EdgePartitionFilter(Partition partition) {
 
         @Override
         public boolean init(Graph graph) {
-            this.graph = graph;
+            this.graph = graph.getModel().getGraph();;
             return partition != null && partition.getColumn() != null;
         }
     }
@@ -238,7 +238,6 @@ public boolean evaluate(Graph graph, Edge edge) {
         }
 
         public void finish() {
-            this.graph = null;
         }
 
         public void addPart(Object value) {

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -300,7 +300,7 @@ private void readNodeAttValue(XMLStreamReader reader, NodeDraft node) throws Exc
             int xmltype = reader.next();
 
             switch (xmltype) {
-                case XMLStreamReader.CHARACTERS:
+                case XMLStreamReader.CHARACTERS | XMLStreamReader.CDATA:
                     if (!xmlReader.isWhiteSpace()) {
                         value += xmlReader.getText();
                     }
@@ -390,7 +390,7 @@ private void readDesc(XMLStreamReader reader, ElementDraft element) throws Excep
             int xmltype = reader.next();
 
             switch (xmltype) {
-                case XMLStreamReader.CHARACTERS:
+                case XMLStreamReader.CHARACTERS | XMLStreamReader.CDATA:
                     if (!xmlReader.isWhiteSpace()) {
                         value.append(xmlReader.getText());
                     }
@@ -510,7 +510,7 @@ private void readEdgeAttValue(XMLStreamReader reader, EdgeDraft edge) throws Exc
             int xmltype = reader.next();
 
             switch (xmltype) {
-                case XMLStreamReader.CHARACTERS:
+                case XMLStreamReader.CHARACTERS | XMLStreamReader.CDATA:
                     if (!xmlReader.isWhiteSpace()) {
                         value += xmlReader.getText();
                     }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -213,6 +213,7 @@ public Container importFile(Reader reader, FileImporter importer, File file) {
         } finally {
             try {
                 reader.close();
+                report.close();
             } catch (IOException ex) {
                 //NOOP
             }
@@ -263,6 +264,8 @@ public Container importDatabase(Database database, DatabaseImporter importer) {
             throw ex;
         } catch (Exception ex) {
             throw new RuntimeException(ex);
+        } finally {
+            report.close();
         }
         return null;
     }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/GiantComponentBuilder.java
Patch:
@@ -116,7 +116,7 @@ public boolean init(Graph graph) {
 
             column = graph.getModel().getNodeTable().getColumn(GIANT_COMPONENT_FILTER);
             if (column == null) {
-                column = graph.getModel().getEdgeTable().addColumn(GIANT_COMPONENT_FILTER, Integer.class);
+                column = graph.getModel().getNodeTable().addColumn(GIANT_COMPONENT_FILTER, Integer.class);
             }
             graph.readLock();
             try {

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/NodeLabelBuilder.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.preview.api.Item;
 import org.gephi.preview.plugin.items.NodeLabelItem;
 import org.gephi.preview.spi.ItemBuilder;
+import org.gephi.project.api.Workspace;
 import org.gephi.visualization.api.VisualizationController;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
@@ -67,7 +68,8 @@ public class NodeLabelBuilder implements ItemBuilder {
     public Item[] getItems(Graph graph) {
         //Build text
         VisualizationController vizController = Lookup.getDefault().lookup(VisualizationController.class);
-        Column[] nodeColumns = vizController != null ? vizController.getNodeTextColumns() : null;
+        Workspace workspace = WorkspaceHelper.getWorkspace(graph);
+        Column[] nodeColumns = vizController != null ? vizController.getNodeTextColumns(workspace) : null;
 
         List<Item> items = new ArrayList<>();
         for (Node n : graph.getNodes()) {

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceControllerImpl.java
Patch:
@@ -80,12 +80,10 @@ public void select(Workspace workspace) {
                     model = new AppearanceModelImpl(workspace);
                     workspace.add(model);
                 }
-//                model.select();
             }
 
             @Override
             public void unselect(Workspace workspace) {
-//                model.unselect();
                 model = null;
             }
 
@@ -110,6 +108,9 @@ public void disable() {
 
     @Override
     public void transform(Function function) {
+        if (!function.isValid()) {
+            return;
+        }
         GraphModel graphModel = function.getGraph().getModel();
         Graph graph = graphModel.getGraphVisible();
         ElementIterable<? extends Element> iterable;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/FunctionImpl.java
Patch:
@@ -171,6 +171,7 @@ public boolean hasChanged() {
         return false;
     }
 
+    @Override
     public boolean isValid() {
         if (isRanking()) {
             return ranking.isValid(getGraph());

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -52,6 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.text.NumberFormat;
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.List;
 import java.util.Random;
 import javax.swing.AbstractCellEditor;
@@ -113,7 +114,7 @@ public void setup(PartitionFunction function) {
         Partition partition = function.getPartition();
 
         boolean ignoreNull = !function.getModel().isTransformNullValues();
-        values = partition.getSortedValues(function.getGraph());
+        values = function.isValid() ? partition.getSortedValues(function.getGraph()) : Collections.EMPTY_LIST;
 
         int valuesSize = 0;
         int nullElements = 0;

File: modules/ImportAPI/src/test/java/org/gephi/io/importer/impl/ImportContainerImplTest.java
Patch:
@@ -39,6 +39,7 @@ Development and Distribution License("CDDL") (collectively, the
 
  Portions Copyrighted 2011 Gephi Consortium.
  */
+
 package org.gephi.io.importer.impl;
 
 import org.gephi.io.importer.api.EdgeDirection;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/selection/SelectionManager.java
Patch:
@@ -132,6 +132,7 @@ public void setDraggingMouseSelection() {
     }
 
     public void setCustomSelection() {
+        engine.setRectangleSelection(false);
         vizConfig.setSelectionEnable(false);
         vizConfig.setDraggingEnable(false);
         vizConfig.setCustomSelection(true);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java
Patch:
@@ -467,7 +467,7 @@ public synchronized void updateLOD() {
     @Override
     public synchronized List<NodeModel> getSelectedNodes() {
         List<NodeModel> selected = new ArrayList<>();
-        for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext(); ) {
+        for (Iterator<NodeModel> itr = octree.getNodeIterator(false); itr.hasNext(); ) {
             NodeModel nodeModel = itr.next();
             if (nodeModel.isSelected()) {
                 selected.add(nodeModel);
@@ -491,7 +491,7 @@ public synchronized List<EdgeModel> getSelectedEdges() {
     @Override
     public synchronized List<Node> getSelectedUnderlyingNodes() {
         List<Node> selected = new ArrayList<>();
-        for (Iterator<NodeModel> itr = octree.getNodeIterator(); itr.hasNext(); ) {
+        for (Iterator<NodeModel> itr = octree.getNodeIterator(false); itr.hasNext(); ) {
             NodeModel nodeModel = itr.next();
             if (nodeModel.isSelected()) {
                 selected.add(nodeModel.getNode());

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -810,7 +810,7 @@ public void closeLoader() {
                 final boolean notAlreadyRemoved = edge != null
                     && edgeMap.containsKey(edge.getId());
 
-                if (notAlreadyRemoved && edge.getDirection().equals(EdgeDirection.DIRECTED)) {
+                if (notAlreadyRemoved && edge.getDirection() != null && edge.getDirection().equals(EdgeDirection.DIRECTED)) {
                     EdgeDraftImpl opposite = getOpposite(edge);
                     if (opposite != null && edgeMap.containsKey(opposite.getId())) {
                         mergeDirectedEdges(opposite, edge);

File: modules/DesktopWindow/src/main/java/org/gephi/desktop/banner/workspace/WorkspacePanel.java
Patch:
@@ -164,6 +164,9 @@ private synchronized void refreshModel() {
                         workspace.getLookup().lookup(WorkspaceInformation.class).addChangeListener(this);
                     }
                 }
+
+                add(tabbedContainer, BorderLayout.CENTER);
+                getParent().revalidate();
                 return;
             }
         }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/ClusteringCoefficientPanel.java
Patch:
@@ -53,6 +53,7 @@ public class ClusteringCoefficientPanel extends javax.swing.JPanel {
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.ButtonGroup algorithmButtonGroup;
     private javax.swing.ButtonGroup directedButtonGroup;
+    // End of variables declaration//GEN-END:variables
 
     // public boolean isBruteForce() {
     //     return bruteRadioButton.isSelected();
@@ -140,5 +141,4 @@ private void initComponents() {
                     .addContainerGap(95, Short.MAX_VALUE))
         );
     }// </editor-fold>//GEN-END:initComponents
-    // End of variables declaration//GEN-END:variables
 }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/ConnectedComponentPanel.java
Patch:
@@ -57,6 +57,7 @@ public class ConnectedComponentPanel extends javax.swing.JPanel {
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JRadioButton undirectedRadioButton;
+    // End of variables declaration//GEN-END:variables
 
     /**
      * Creates new form ConnectedComponentPanel
@@ -152,6 +153,5 @@ private void initComponents() {
                     .addContainerGap(148, Short.MAX_VALUE))
         );
     }// </editor-fold>//GEN-END:initComponents
-    // End of variables declaration//GEN-END:variables
 
 }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/DegreeDistributionPanel.java
Patch:
@@ -50,12 +50,13 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class DegreeDistributionPanel extends javax.swing.JPanel {
 
-    protected javax.swing.JRadioButton directedRadioButton;
-    protected javax.swing.JRadioButton undirectedRadioButton;
     // Variables declaration - do not modify//GEN-BEGIN:variables
+    private javax.swing.JRadioButton directedRadioButton;
+    private javax.swing.JRadioButton undirectedRadioButton;
     private org.jdesktop.swingx.JXLabel descriptionLabel;
     private javax.swing.ButtonGroup directedButtonGroup;
     private org.jdesktop.swingx.JXHeader header;
+    // End of variables declaration//GEN-END:variables
 
     public DegreeDistributionPanel() {
         initComponents();
@@ -141,5 +142,4 @@ private void initComponents() {
                     .addContainerGap())
         );
     }// </editor-fold>//GEN-END:initComponents
-    // End of variables declaration//GEN-END:variables
 }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/EigenvectorCentralityPanel.java
Patch:
@@ -58,6 +58,7 @@ public class EigenvectorCentralityPanel extends javax.swing.JPanel {
     private javax.swing.JTextField iterationTextField;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JRadioButton undirectedRadioButton;
+    // End of variables declaration//GEN-END:variables
 
     /**
      * Creates new form EigenvectorCentralityPanel
@@ -178,6 +179,5 @@ private void undirectedRadioButtonActionPerformed(
         java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undirectedRadioButtonActionPerformed
         // TODO add your handling code here:
     }//GEN-LAST:event_undirectedRadioButtonActionPerformed
-    // End of variables declaration//GEN-END:variables
 
 }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/GraphDensityPanel.java
Patch:
@@ -50,11 +50,12 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class GraphDensityPanel extends javax.swing.JPanel {
 
-    protected javax.swing.JRadioButton directedRadioButton;
-    protected javax.swing.JRadioButton undirectedRadioButton;
     // Variables declaration - do not modify//GEN-BEGIN:variables
+    private javax.swing.JRadioButton directedRadioButton;
+    private javax.swing.JRadioButton undirectedRadioButton;
     private javax.swing.ButtonGroup directedButtonGroup;
     private org.jdesktop.swingx.JXHeader header;
+    // End of variables declaration//GEN-END:variables
 
     public GraphDensityPanel() {
         initComponents();
@@ -130,5 +131,4 @@ private void initComponents() {
                     .addContainerGap(84, Short.MAX_VALUE))
         );
     }// </editor-fold>//GEN-END:initComponents
-    // End of variables declaration//GEN-END:variables
 }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/GraphDistancePanel.java
Patch:
@@ -50,9 +50,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class GraphDistancePanel extends javax.swing.JPanel {
 
-    protected javax.swing.JRadioButton directedRadioButton;
-    protected javax.swing.JRadioButton undirectedRadioButton;
     // Variables declaration - do not modify//GEN-BEGIN:variables
+    private javax.swing.JRadioButton directedRadioButton;
+    private javax.swing.JRadioButton undirectedRadioButton;
     private org.jdesktop.swingx.JXLabel descriptionLabel;
     private javax.swing.ButtonGroup directedButtonGroup;
     private org.jdesktop.swingx.JXHeader header;
@@ -63,6 +63,7 @@ public class GraphDistancePanel extends javax.swing.JPanel {
     private org.jdesktop.swingx.JXLabel jXLabel2;
     private org.jdesktop.swingx.JXLabel jXLabel3;
     private javax.swing.JCheckBox normalizeButton;
+    // End of variables declaration//GEN-END:variables
 
     public GraphDistancePanel() {
         initComponents();
@@ -248,5 +249,4 @@ private void directedRadioButtonActionPerformed(
         java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directedRadioButtonActionPerformed
         // TODO add your handling code here:
     }//GEN-LAST:event_directedRadioButtonActionPerformed
-    // End of variables declaration//GEN-END:variables
 }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/ModularityPanel.java
Patch:
@@ -57,6 +57,7 @@ public class ModularityPanel extends javax.swing.JPanel {
     private javax.swing.JCheckBox randomizeCheckbox;
     private javax.swing.JTextField resolutionTextField;
     private javax.swing.JCheckBox useWeightCheckbox;
+    // End of variables declaration//GEN-END:variables
 
     public ModularityPanel() {
         initComponents();
@@ -216,5 +217,4 @@ private void initComponents() {
                         javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         );
     }// </editor-fold>//GEN-END:initComponents
-    // End of variables declaration//GEN-END:variables
 }

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/ForceAtlas2.java
Patch:
@@ -522,7 +522,7 @@ public void resetPropertiesValues() {
         setLinLogMode(false);
         setAdjustSizes(false);
         setEdgeWeightInfluence(1.);
-        setNormalizeEdgeWeights(true);
+        setNormalizeEdgeWeights(false);
 
         // Performance
         setJitterTolerance(1d);

File: modules/SettingsUpgrader/src/main/java/org/gephi/ui/upgrader/Upgrader.java
Patch:
@@ -80,7 +80,7 @@ public void upgrade() {
             if (latestPreviousVersion != null &&
                 !latestPreviousVersion.getName().replace(".", "").equals(currentVersion)) {
                 File source = new File(latestPreviousVersion, "dev");
-                source = source.exists() ? new File(source, "config") : new File(latestPreviousVersion, "config");
+                source = source.exists() ? source : latestPreviousVersion;
                 File dest = Places.getUserDirectory();
                 if (source.exists() && dest.exists()) {
                     NbPreferences.forModule(Upgrader.class).put(UPGRADER_LAST_VERSION, currentVersion);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -690,7 +690,7 @@ public boolean verify() {
         //Count mutual edges
         if (directedEdgesCount > 0) {
             for (EdgeDraftImpl edge : edgeList) {
-                if (edge.getDirection().equals(EdgeDirection.DIRECTED) && getOpposite(edge) != null) {
+                if (isEdgeDirected(edge) && getOpposite(edge) != null) {
                     mutualEdgesCount++;
                 }
             }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -596,14 +596,14 @@ public void setInterval(String startDateTime, String endDateTime) {
                 start = Double.NEGATIVE_INFINITY;
             } else {
                 start = timeFormat.equals(TimeFormat.DOUBLE) ? Double.parseDouble(startDateTime) :
-                    AttributeUtils.parseDateTime(startDateTime);
+                    AttributeUtils.parseDateTime(startDateTime, getTimeZone());
             }
             if (endDateTime == null || endDateTime.trim().isEmpty() || "inf".equalsIgnoreCase(endDateTime) ||
                 "infinity".equalsIgnoreCase(endDateTime)) {
                 end = Double.POSITIVE_INFINITY;
             } else {
                 end = timeFormat.equals(TimeFormat.DOUBLE) ? Double.parseDouble(endDateTime) :
-                    AttributeUtils.parseDateTime(endDateTime);
+                    AttributeUtils.parseDateTime(endDateTime, getTimeZone());
             }
             this.interval = new Interval(start, end);
         } catch (Exception e) {
@@ -630,7 +630,7 @@ public Double getTimestamp() {
     public void setTimestamp(String timestamp) {
         try {
             double t = timeFormat.equals(TimeFormat.DOUBLE) ? Double.parseDouble(timestamp) :
-                AttributeUtils.parseDateTime(timestamp);
+                AttributeUtils.parseDateTime(timestamp, getTimeZone());
             this.timestamp = t;
         } catch (Exception e) {
             report.logIssue(new Issue(NbBundle

File: modules/ImportPlugin/src/main/java/org/gephi/io/processor/plugin/AbstractProcessor.java
Patch:
@@ -237,7 +237,7 @@ protected void flushToElementAttributes(ContainerUnloader container, ElementDraf
                 Object existingValue = element.getAttribute(columnDraft.getId());
 
                 if (columnDraft.isDynamic() && existingValue != null) {
-                    if (TimeMap.class.isAssignableFrom(columnDraft.getTypeClass())) {
+                    if (TimeMap.class.isAssignableFrom(columnDraftTypeClass)) {
                         TimeMap existingMap = (TimeMap) existingValue;
                         if (!existingMap.isEmpty()) {
                             TimeMap valMap = (TimeMap) val;
@@ -255,7 +255,7 @@ protected void flushToElementAttributes(ContainerUnloader container, ElementDraf
 
                             processedNewValue = newMap;
                         }
-                    } else if (TimeSet.class.isAssignableFrom(columnDraft.getTypeClass())) {
+                    } else if (TimeSet.class.isAssignableFrom(columnDraftTypeClass)) {
                         TimeSet existingTimeSet = (TimeSet) existingValue;
 
                         processedNewValue = mergeTimeSets(existingTimeSet, (TimeSet) val);

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/NodeLabelRenderer.java
Patch:
@@ -291,7 +291,7 @@ public void renderSVG(SVGTarget target, Node node, String label, float x, float
 
             //Trick to center text vertically on node:
             SVGRect rect = ((SVGLocatable) outlineElem).getBBox();
-            outlineElem.setAttribute("y", String.valueOf(y + rect.getHeight() / 4f));
+            outlineElem.setAttribute("y", String.valueOf(y + (rect != null ? rect.getHeight() / 4f : 0)));
         }
 
         Element labelElem = target.createElement("text");
@@ -307,7 +307,7 @@ public void renderSVG(SVGTarget target, Node node, String label, float x, float
 
         //Trick to center text vertically on node:
         SVGRect rect = ((SVGLocatable) labelElem).getBBox();
-        labelElem.setAttribute("y", String.valueOf(y + rect.getHeight() / 4f));
+        labelElem.setAttribute("y", String.valueOf(y + (rect != null ? rect.getHeight() / 4f : 0)));
 
         //Box
         if (showBox) {

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/FunctionObserverExecutor.java
Patch:
@@ -12,12 +12,10 @@ public class FunctionObserverExecutor implements Runnable {
 
     private static final long DEFAULT_DELAY = 1250;  //ms
     private final AppearanceUIModel model;
-    private final AppearanceUIController controller;
     private ScheduledExecutorService executor;
 
     public FunctionObserverExecutor(AppearanceUIModel model) {
         this.model = model;
-        this.controller = Lookup.getDefault().lookup(AppearanceUIController.class);
     }
 
     public void start() {
@@ -37,7 +35,7 @@ public void run() {
         try {
             Function selectedFunction = model.getSelectedFunction();
             if (selectedFunction != null && selectedFunction.hasChanged()) {
-                controller.refreshFunction();
+                Lookup.getDefault().lookup(AppearanceUIController.class).refreshFunction();
             }
         } catch (Exception e) {
             Logger.getLogger(TableObserverExecutor.class.getName())

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/PageRank.java
Patch:
@@ -436,7 +436,7 @@ public String getReport() {
             + imageFile
             + "<br /><br />" + "<h2> Algorithm: </h2>"
             +
-            "Sergey Brin, Lawrence Page, <i>The Anatomy of a Large-Scale Hypertextual Web Search Engine</i>, in Proceedings of the seventh International Conference on the World Wide Web (WWW1998):107-117<br />"
+            "Page, Lawrence and Brin, Sergey and Motwani, Rajeev and Winograd, Terry (1999) <i>The PageRank Citation Ranking: Bringing Order to the Web.</i> Technical Report. Stanford InfoLab.<br />"
             + "</BODY> </HTML>";
 
         return report;

File: modules/AppearanceAPI/src/test/java/org.gephi.appearance/AttributePartitionTest.java
Patch:
@@ -143,9 +143,6 @@ public void testNullValues() {
 
         p.setColor(null, Color.BLUE);
         Assert.assertEquals(Color.BLUE, p.getColor(null));
-
-        Assert.assertTrue(p.getValues(graph).contains(null));
-        Assert.assertTrue(p.getSortedValues(graph).contains(null));
     }
 
     @Test

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceTopComponent.java
Patch:
@@ -240,6 +240,7 @@ public void run() {
                         }
 
                         centerPanel.revalidate();
+                        centerPanel.repaint();
 
                         //setCenterPanel
                         return;
@@ -397,7 +398,7 @@ public void actionPerformed(ActionEvent e) {
         applyButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent e) {
-                controller.appearanceController.transform(model.getSelectedFunction());
+                controller.transform(model.getSelectedFunction());
             }
         });
         autoApplyButton.addActionListener(new ActionListener() {

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIModelPersistenceProvider.java
Patch:
@@ -61,7 +61,7 @@ protected void writeXML(XMLStreamWriter writer, AppearanceUIModel model)
         throws XMLStreamException {
         for (Map.Entry<Function, Map<String, Object>> savedProperty : model.savedProperties.entrySet()) {
             writer.writeStartElement("savedproperty");
-            writer.writeAttribute("function", savedProperty.getKey().toString());
+            writer.writeAttribute("function", savedProperty.getKey().getId());
             writeSavedProperty(writer, savedProperty.getValue());
             writer.writeEndElement();
         }
@@ -96,7 +96,7 @@ public void readXML(XMLStreamReader reader, AppearanceUIModel model) throws XMLS
                 String name = reader.getLocalName();
                 if ("savedproperty".equalsIgnoreCase(name)) {
                     String functionName = reader.getAttributeValue(null, "function");
-                    function = Arrays.stream(functions).filter(f -> f.toString().equals(functionName)).findFirst()
+                    function = Arrays.stream(functions).filter(f -> f.getId().equals(functionName)).findFirst()
                         .orElse(null);
                     properties = new HashMap<>();
                 } else if ("property".equalsIgnoreCase(name) && function != null) {

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AutoAppyTransformer.java
Patch:
@@ -78,7 +78,7 @@ public void stop() {
 
     @Override
     public void run() {
-        controller.appearanceController.transform(function);
+        controller.transform(function);
     }
 
     public boolean isRunning() {

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/FunctionObserverExecutor.java
Patch:
@@ -10,7 +10,7 @@
 
 public class FunctionObserverExecutor implements Runnable {
 
-    private static final long DEFAULT_DELAY = 1500;  //ms
+    private static final long DEFAULT_DELAY = 1250;  //ms
     private final AppearanceUIModel model;
     private final AppearanceUIController controller;
     private ScheduledExecutorService executor;

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceTopComponent.java
Patch:
@@ -239,7 +239,7 @@ public void run() {
                             centerPanel.add(transformerPanel, BorderLayout.CENTER);
                         }
 
-                        centerPanel.repaint();
+                        centerPanel.revalidate();
 
                         //setCenterPanel
                         return;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelPersistenceProvider.java
Patch:
@@ -12,10 +12,11 @@
 import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.Column;
 import org.gephi.project.api.Workspace;
+import org.gephi.project.spi.WorkspacePersistenceProvider;
 import org.gephi.project.spi.WorkspaceXMLPersistenceProvider;
 import org.openide.util.lookup.ServiceProvider;
 
-@ServiceProvider(service = WorkspaceXMLPersistenceProvider.class)
+@ServiceProvider(service = WorkspacePersistenceProvider.class)
 public class AppearanceModelPersistenceProvider implements WorkspaceXMLPersistenceProvider {
 
 

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceToolbar.java
Patch:
@@ -559,6 +559,7 @@ protected void refreshControls() {
                         if (bb != null) {
                             for (AbstractButton b : bb) {
                                 add(b);
+                                b.setEnabled(true);
                                 controlButtons.add(b);
                             }
                         }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AttributePartitionImpl.java
Patch:
@@ -119,7 +119,7 @@ public boolean isValid(Graph graph) {
     @Override
     public int getVersion(Graph graph) {
         if (isValid(graph)) {
-            return getIndex(graph.getModel().getGraph()).getColumnIndex(column.get()).getVersion();
+            return getIndex(graph).getColumnIndex(column.get()).getVersion();
         }
         return 0;
     }

File: modules/AppearanceAPI/src/test/java/org.gephi.appearance/AppearanceControllerTest.java
Patch:
@@ -30,7 +30,7 @@ public void testTransform() {
         AppearanceControllerImpl controller = new AppearanceControllerImpl();
         controller.setModel(new AppearanceModelImpl(generator.getWorkspace()));
 
-        Assert.assertFalse(controller.getModel().isLocalScale());
+        Assert.assertFalse(controller.getModel().isRankingLocalScale());
 
         Node node = generator.getGraph().getNode(GraphGenerator.FIRST_NODE);
 
@@ -105,7 +105,7 @@ public void testLocalScale() {
         controller.transform(rankingFunction);
         Assert.assertEquals(0, (int) node1.size());
 
-        controller.setUseLocalScale(true);
+        controller.setUseRankingLocalScale(true);
         controller.transform(rankingFunction);
         Assert.assertEquals(1, (int) node1.size());
     }

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/FunctionObserverExecutor.java
Patch:
@@ -10,7 +10,7 @@
 
 public class FunctionObserverExecutor implements Runnable {
 
-    private static final long DEFAULT_DELAY = 1000;  //ms
+    private static final long DEFAULT_DELAY = 1500;  //ms
     private final AppearanceUIModel model;
     private final AppearanceUIController controller;
     private ScheduledExecutorService executor;

File: modules/ImportPlugin/src/main/java/org/gephi/io/processor/plugin/AbstractProcessor.java
Patch:
@@ -126,7 +126,7 @@ private void addColumnsToTable(ContainerUnloader container, Table table, Iterabl
                     }
 
                     table
-                        .addColumn(col.getId(), col.getTitle(), typeClass, Origin.DATA, defaultValue, !col.isDynamic());
+                        .addColumn(col.getId(), col.getTitle(), typeClass, Origin.DATA, defaultValue, true);
                 } else {
                     String error = NbBundle.getMessage(
                         AbstractProcessor.class, "AbstractProcessor.error.unavailableColumnType",

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/Partition.java
Patch:
@@ -61,6 +61,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface Partition {
 
+    public static Color DEFAULT_COLOR = Color.LIGHT_GRAY;
+
     /**
      * Returns the collection of values this partition represents. Each value
      * has at least one element.
@@ -70,7 +72,7 @@ public interface Partition {
     Collection getValues(Graph graph);
 
     /**
-     * Returns the same collection as {@link #getValues() } but sorted
+     * Returns the same collection as {@link #getValues(Graph graph) } but sorted
      * descendant in counts.
      *
      * @return sorted values

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/PartitionElementColorTransformer.java
Patch:
@@ -60,7 +60,7 @@ public class PartitionElementColorTransformer implements PartitionTransformer<El
     public void transform(Element element, Partition partition, Object value) {
         Color color = partition.getColor(value);
         if (color == null) {
-            color = Color.BLACK;
+            color = Partition.DEFAULT_COLOR;
         }
         element.setColor(color);
     }

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/PartitionLabelColorTransformer.java
Patch:
@@ -60,7 +60,7 @@ public class PartitionLabelColorTransformer implements PartitionTransformer<Elem
     public void transform(Element element, Partition partition, Object value) {
         Color color = partition.getColor(value);
         if (color == null) {
-            color = Color.BLACK;
+            color = Partition.DEFAULT_COLOR;
         }
         element.getTextProperties().setColor(color);
     }

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -115,12 +115,10 @@ public void setup(PartitionFunction function) {
         values = partition.getSortedValues(function.getGraph());
 
         List<Object> nullColors = new ArrayList<>();
-        Color defaultColor = Color.LIGHT_GRAY;
         for (Object val : values) {
             Color c = partition.getColor(val);
             if (c == null) {
                 nullColors.add(val);
-                partition.setColor(val, defaultColor);
             }
         }
 
@@ -265,7 +263,7 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole
                                                        int row, int column) {
             Color color = function.getPartition().getColor(value);
             if (color == null) {
-                color = Color.BLACK;
+                color = Partition.DEFAULT_COLOR;
             }
             setBackground(color);
             return this;

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java
Patch:
@@ -267,7 +267,6 @@ public void refreshColumnsList() {
 
     public void refreshFunction() {
         if (model != null) {
-            System.out.println("Refresh");
             firePropertyChangeEvent(AppearanceUIModelEvent.REFRESH_FUNCTION, null, null);
         }
     }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/PartitionImpl.java
Patch:
@@ -45,7 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.util.ArrayList;
 import java.util.Collection;
-import java.util.Comparator;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -85,4 +84,6 @@ public Collection getSortedValues(Graph graph) {
     }
 
     public abstract boolean isValid(Graph graph);
+
+    public abstract Class getValueType();
 }

File: modules/AppearanceAPI/src/test/java/org.gephi.appearance/EdgeWeightRankingTest.java
Patch:
@@ -13,8 +13,8 @@ public void testEmpty() {
         Graph graph = GraphGenerator.build().getGraph();
         EdgeWeightRankingImpl weightRanking = new EdgeWeightRankingImpl();
 
-        Assert.assertEquals(0, weightRanking.getMinValue(graph));
-        Assert.assertEquals(0, weightRanking.getMaxValue(graph));
+        Assert.assertNull(weightRanking.getMinValue(graph));
+        Assert.assertNull(weightRanking.getMaxValue(graph));
     }
 
     @Test

File: modules/ProjectAPI/src/test/java/org/gephi/project/io/utils/GephiFormat.java
Patch:
@@ -17,7 +17,7 @@
 
 public class GephiFormat {
 
-    public static void testXMLPersistenceProvider(WorkspaceXMLPersistenceProvider provider,
+    public static Workspace testXMLPersistenceProvider(WorkspaceXMLPersistenceProvider provider,
                                                   Workspace workspace) throws Exception {
         Assert.assertNotNull(provider.getIdentifier());
 
@@ -26,6 +26,7 @@ public static void testXMLPersistenceProvider(WorkspaceXMLPersistenceProvider pr
         String xmlStringAgain = toString(provider, newWorkspace);
 
         Assert.assertEquals(xmlString, xmlStringAgain);
+        return workspace;
     }
 
     private static Workspace fromString(WorkspaceXMLPersistenceProvider provider, String xmlString)

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingSizeTransformerPanel.java
Patch:
@@ -110,7 +110,7 @@ private void initComponents() {
         labelMinSize.setText(org.openide.util.NbBundle
             .getMessage(RankingSizeTransformerPanel.class, "RankingSizeTransformerPanel.labelMinSize.text")); // NOI18N
 
-        minSize.setModel(new javax.swing.SpinnerNumberModel(1.0f, 0.1f, null, 0.5f));
+        minSize.setModel(new javax.swing.SpinnerNumberModel(1.0f, 0.01f, null, 0.5f));
 
         labelMaxSize.setText(org.openide.util.NbBundle
             .getMessage(RankingSizeTransformerPanel.class, "RankingSizeTransformerPanel.labelMaxSize.text")); // NOI18N
@@ -125,12 +125,12 @@ private void initComponents() {
                     .addContainerGap()
                     .addComponent(labelMinSize)
                     .addGap(8, 8, 8)
-                    .addComponent(minSize, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
+                    .addComponent(minSize, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                         javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addGap(18, 18, 18)
                     .addComponent(labelMaxSize)
                     .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                    .addComponent(maxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
+                    .addComponent(maxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                         javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         );

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueSizeTransformerPanel.java
Patch:
@@ -89,7 +89,7 @@ private void initComponents() {
             .getMessage(UniqueSizeTransformerPanel.class, "UniqueSizeTransformerPanel.jLabel1.text")); // NOI18N
 
         sizeSpinner.setModel(
-            new javax.swing.SpinnerNumberModel(Float.valueOf(1.0f), Float.valueOf(0.1f), null, Float.valueOf(0.5f)));
+            new javax.swing.SpinnerNumberModel(1.0f, 0.01f, null, 0.5f));
 
         javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
         this.setLayout(layout);

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2011 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.color;
+package org.gephi.ui.appearance.plugin;
 
 import java.awt.Color;
 import java.awt.Component;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionElementColorTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.color;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionLabelColorTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.color;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingColorTransformerPanel.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2011 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.color;
+package org.gephi.ui.appearance.plugin;
 
 import java.awt.BorderLayout;
 import java.awt.Color;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingElementColorTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.color;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingElementSizeTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.size;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingLabelColorTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.color;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingLabelSizeTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.size;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingSizeTransformerPanel.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2011 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.size;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueColorTransformerPanel.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.unique;
+package org.gephi.ui.appearance.plugin;
 
 import java.awt.Color;
 import java.beans.PropertyChangeEvent;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueElementColorTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.unique;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueLabelColorTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.unique;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueLabelSizeTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.unique;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueNodeSizeTransformerUI.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.unique;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.AbstractButton;
 import javax.swing.Icon;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueSizeTransformerPanel.java
Patch:
@@ -40,7 +40,7 @@ Development and Distribution License("CDDL") (collectively, the
  Portions Copyrighted 2013 Gephi Consortium.
  */
 
-package org.gephi.ui.appearance.plugin.unique;
+package org.gephi.ui.appearance.plugin;
 
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -1094,7 +1094,7 @@ private void checkColorAlpha(ObjectList<? extends ElementDraft> objectList, Stri
             int validElement = 0;
             int withAlphaZero = 0;
             for (ElementDraft element : objectList) {
-                if (element.getColor() != null) {
+                if (element != null && element.getColor() != null) {
                     validElement++;
                     withAlphaZero += element.getColor().getAlpha() == 0 ? 1 : 0;
                 }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/EdgeSettingsPanel.java
Patch:
@@ -255,6 +255,7 @@ private void initComponents() {
         labelScale = new javax.swing.JLabel();
         scaleSlider = new javax.swing.JSlider();
 
+        setOpaque(true);
         showEdgesCheckbox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
         showEdgesCheckbox.setText(org.openide.util.NbBundle
             .getMessage(EdgeSettingsPanel.class, "EdgeSettingsPanel.showEdgesCheckbox.text")); // NOI18N
@@ -272,7 +273,6 @@ private void initComponents() {
         sourceNodeColorCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
         sourceNodeColorCheckbox.setMargin(new java.awt.Insets(2, 0, 2, 2));
 
-        selectionColorPanel.setOpaque(false);
         selectionColorPanel.setLayout(new java.awt.GridBagLayout());
 
         selectionColorCheckbox.setText(org.openide.util.NbBundle
@@ -395,7 +395,6 @@ private void initComponents() {
         gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
         selectionColorPanel.add(labelBoth, gridBagConstraints);
 
-        scalePanel.setOpaque(false);
         scalePanel.setLayout(new java.awt.GridBagLayout());
 
         labelScale.setText(org.openide.util.NbBundle

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/GlobalSettingsPanel.java
Patch:
@@ -200,7 +200,7 @@ private void initComponents() {
         autoSelectNeigborCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
         autoSelectNeigborCheckbox.setMargin(new java.awt.Insets(2, 0, 2, 2));
 
-        zoomPanel.setOpaque(false);
+        zoomPanel.setOpaque(true);
         zoomPanel.setLayout(new java.awt.GridBagLayout());
 
         labelZoom.setText(org.openide.util.NbBundle

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/GraphTopComponent.java
Patch:
@@ -153,9 +153,6 @@ private void initToolPanels() {
         if (tc != null) {
             if (VizController.getInstance().getVizConfig().isToolbar()) {
                 JPanel westPanel = new JPanel(new BorderLayout(0, 0));
-                if (UIUtils.isAquaLookAndFeel()) {
-                    westPanel.setBackground(UIManager.getColor("NbExplorerView.background"));
-                }
 
                 toolbar = tc.getToolbar();
                 if (toolbar != null) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/LabelSettingsPanel.java
Patch:
@@ -378,7 +378,7 @@ private void initComponents() {
         hideNonSelectedCheckbox = new javax.swing.JCheckBox();
         configureLabelsButton = new javax.swing.JButton();
 
-        nodePanel.setOpaque(false);
+        nodePanel.setOpaque(true);
 
         showNodeLabelsCheckbox.setText(org.openide.util.NbBundle
             .getMessage(LabelSettingsPanel.class, "LabelSettingsPanel.showNodeLabelsCheckbox.text")); // NOI18N
@@ -461,7 +461,7 @@ private void initComponents() {
 
         jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
 
-        edgePanel.setOpaque(false);
+        edgePanel.setOpaque(true);
 
         showEdgeLabelsCheckbox.setText(org.openide.util.NbBundle
             .getMessage(LabelSettingsPanel.class, "LabelSettingsPanel.showEdgeLabelsCheckbox.text")); // NOI18N

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -218,10 +218,9 @@ public DataTableTopComponent() {
         Border b = (Border) UIManager.get("Nb.Editor.Toolbar.border"); //NOI18N
         controlToolbar.setBorder(b);
         if (UIUtils.isAquaLookAndFeel()) {
-            controlToolbar.setBackground(UIManager.getColor("NbExplorerView.background"));
+            controlToolbar.setOpaque(true);
         }
 
-
         //Init tables
         nodeTable = new NodesDataTable();
         edgeTable = new EdgesDataTable();
@@ -1314,6 +1313,7 @@ private void initComponents() {
         columnManipulatorsPanel = new javax.swing.JPanel();
 
         setLayout(new java.awt.GridBagLayout());
+        setOpaque(true);
 
         controlToolbar.setFloatable(false);
         controlToolbar.setRollover(true);

File: modules/DesktopTools/src/main/java/org/gephi/desktop/tools/DesktopToolController.java
Patch:
@@ -192,6 +192,7 @@ public int compare(Object o1, Object o2) {
             } else {
                 btn = new JToggleButton(new ImageIcon(getClass().getResource("/org/gephi/desktop/tools/tool.png")));
             }
+            btn.setFocusPainted(false);
             btn.setToolTipText(toolUI.getName() + " - " + toolUI.getDescription());
             btn.addActionListener(new ActionListener() {
 

File: modules/DesktopTools/src/main/java/org/gephi/desktop/tools/MouseSelectionPopupPanel.java
Patch:
@@ -132,6 +132,8 @@ private void initComponents() {
         proportionnalZoomCheckbox = new javax.swing.JCheckBox();
 
         setLayout(new java.awt.GridBagLayout());
+        setOpaque(true);
+        diameterSlider.setOpaque(true);
 
         labelDiameter.setText(org.openide.util.NbBundle
             .getMessage(MouseSelectionPopupPanel.class, "MouseSelectionPopupPanel.labelDiameter.text")); // NOI18N

File: modules/DesktopTools/src/main/java/org/gephi/desktop/tools/Toolbar.java
Patch:
@@ -68,7 +68,7 @@ private void initDesign() {
         setOrientation(JToolBar.VERTICAL);
         putClientProperty("JToolBar.isRollover", Boolean.TRUE); //NOI18N
         setBorder(BorderFactory.createEmptyBorder(0, 2, 0, 2));
-        setOpaque(false);
+        setOpaque(true);
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -180,7 +180,7 @@ private void initDesign() {
         setOrientation(JToolBar.VERTICAL);
         putClientProperty("JToolBar.isRollover", Boolean.TRUE); //NOI18N
         setBorder(BorderFactory.createEmptyBorder(0, 2, 15, 2));
-        setOpaque(false);
+        setOpaque(true);
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/VizToolbar.java
Patch:
@@ -71,9 +71,7 @@ private void initDesign() {
         setFloatable(false);
         putClientProperty("JToolBar.isRollover", Boolean.TRUE); //NOI18N
         setBorder(BorderFactory.createEmptyBorder(2, 0, 4, 0));
-        if (UIUtils.isAquaLookAndFeel()) {
-            setBackground(UIManager.getColor("NbExplorerView.background"));
-        }
+        setOpaque(true);
     }
 
     public void setEnable(final boolean enabled) {

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -1098,7 +1098,7 @@ private void checkId(String id) {
         if (id == null) {
             throw new NullPointerException();
         }
-        if (id.trim().isEmpty()) {
+        if (id.isEmpty()) {
             throw new IllegalArgumentException("The id can't be empty");
         }
     }

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterDL.java
Patch:
@@ -168,12 +168,14 @@ private void saveAsEdgeList1(boolean useLabels, Graph graph) throws IOException
         HashSet<String> labelUsed = new HashSet<>();
         //edgelist format forbids equal nodes
         if (useLabels) {
-            for (Node node : graph.getNodes()) {
+            NodeIterable nodeIterable = graph.getNodes();
+            for (Node node : nodeIterable) {
                 if (labelUsed.contains(node.getLabel())) {
                     for (int i = 0; ; i++) {
                         if (!labelUsed.contains(node.getLabel() + "_" + i)) {
                             idToLabel.put(node.getId(), node.getLabel() + "_" + i);
                             labelUsed.add(node.getLabel() + "_" + i);
+                            nodeIterable.doBreak();
                             break;
                         }
                     }

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterVNA.java
Patch:
@@ -223,8 +223,8 @@ private void calculateMinMaxForNormalization(Graph graph) {
             minY = Math.min(minY, node.y());
             maxY = Math.max(maxY, node.y());
 
-            minSize = Math.min(minSize, node.r());
-            maxSize = Math.max(maxSize, node.r());
+            minSize = Math.min(minSize, node.size());
+            maxSize = Math.max(maxSize, node.size());
         }
     }
 

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -100,9 +100,6 @@ public class PartitionColorTransformerPanel extends javax.swing.JPanel {
     public PartitionColorTransformerPanel() {
         initComponents();
         palettePopupButton = new PalettePopupButton();
-        if (UIUtils.isAquaLookAndFeel()) {
-            backPanel.setBackground(UIManager.getColor("NbExplorerView.background"));
-        }
     }
 
     public JButton getPaletteButton() {

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceToolbar.java
Patch:
@@ -245,6 +245,7 @@ public AbstractToolbar() {
             setRollover(true);
             Border b = (Border) UIManager.get("Nb.Editor.Toolbar.border"); //NOI18N
             setBorder(b);
+            setOpaque(true);
         }
 
         @Override

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/spreadsheet/ImporterSpreadsheetCSV.java
Patch:
@@ -117,7 +117,8 @@ private void autoDetectCharset() {
     private void autoDetectFieldDelimiter() {
         //Very simple naive detector but should work in most cases:
         try (LineNumberReader reader = ImportUtils.getTextReader(FileUtil.toFileObject(file))) {
-            String line = reader.readLine();
+            String line = reader.readLine().trim()
+                .replaceAll(" , ", ",").replaceAll(" ; ", ";");
 
             //Check for typical delimiter chars in the header
             int commaCount = 0;

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/EdgesMergeStrategyWrapper.java
Patch:
@@ -42,6 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 package org.gephi.desktop.importer;
 
+import java.util.Locale;
 import java.util.Objects;
 import org.gephi.io.importer.api.EdgeMergeStrategy;
 import org.openide.util.NbBundle;
@@ -84,6 +85,7 @@ public boolean equals(Object obj) {
 
     @Override
     public String toString() {
-        return NbBundle.getMessage(ReportPanel.class, "ReportPanel.mergeStrategy." + instance.name().toLowerCase());
+        return NbBundle.getMessage(ReportPanel.class, "ReportPanel.mergeStrategy." + instance.name().toLowerCase(
+            Locale.US));
     }
 }

File: modules/ExportPlugin/src/test/java/org/gephi/io/exporter/plugin/Utils.java
Patch:
@@ -17,7 +17,7 @@ public static void assertExporterMatch(String expectedFilename, CharacterExporte
     }
 
     private static String cleanString(String str) {
-        return str.replaceAll("[\\n\\t ]", "");
+        return str.replaceAll("[\\n\\t\\r ]", "");
     }
 
     public static String getResourceContent(String fileName) throws IOException {

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/StatisticalInferenceClustering.java
Patch:
@@ -743,6 +743,7 @@ private void zoomOut() {
             nodeCommunities = new StatisticalInferenceClustering.Community[M];
             nodeConnectionsWeight = new HashMap[M];
             nodeConnectionsCount = new HashMap[M];
+            double[] oldGraphNodeCount = graphNodeCount.clone();
             HashMap<Integer, StatisticalInferenceClustering.Community> newInvMap = new HashMap<>();
             for (int i = 0; i < communities.size(); i++) {
                 // For each community "com", that we want to transform into a node in the new topology...
@@ -761,7 +762,7 @@ private void zoomOut() {
 
                 StatisticalInferenceClustering.Community hidden = new StatisticalInferenceClustering.Community(structure);
                 for (Integer nodeInt : com.nodes) {
-                    graphNodeSum += graphNodeCount[nodeInt];
+                    graphNodeSum += oldGraphNodeCount[nodeInt];
                     StatisticalInferenceClustering.Community oldHidden = invMap.get(nodeInt);
                     hidden.nodes.addAll(oldHidden.nodes);
                 }

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/StatisticalInferenceTest.java
Patch:
@@ -245,7 +245,7 @@ public void testSimpleDescriptionLengthDelta() {
         double descriptionLength_after = sic.computeDescriptionLength(graph, theStructure);
 
         // Delta should be (approximately) equal to the difference
-        assertEquals(descriptionLength_after-descriptionLength_before, descriptionLength_delta);
+        assertEquals(descriptionLength_after-descriptionLength_before, descriptionLength_delta, 0.0001);
     }
 
 

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/StatisticalInferenceClustering.java
Patch:
@@ -602,7 +602,6 @@ class CommunityStructure {
 
         private void addNodeTo(int node, StatisticalInferenceClustering.Community to) {
             //System.out.println("### ADD NODE "+node+" TO COMMUNITY "+to.id);
-            to.internalWeightSum += nodeConnectionsWeight[node].getOrDefault(to, 0.f);
             to.add(node);
             nodeCommunities[node] = to;
 
@@ -679,6 +678,7 @@ private void addNodeTo(int node, StatisticalInferenceClustering.Community to) {
 
                 }
             }
+            to.internalWeightSum += nodeConnectionsWeight[node].getOrDefault(to, 0.f);
         }
 
         private void removeNodeFromItsCommunity(int node) {

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/DOTTest.java
Patch:
@@ -19,8 +19,7 @@ public void testEmptyFieldsGraph() {
 
         Assert.assertTrue(container.verify());
 
-        ContainerUnloader unloader = container.getUnloader();
-        NodeDraft[] nodes = Utils.toNodesArray(unloader);
+        NodeDraft[] nodes = Utils.toNodesArray(container);
 
         Utils.assertSameIds(nodes, "a", "b", "c");
     }

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/GMLTest.java
Patch:
@@ -19,8 +19,7 @@ public void testLabels() {
 
         Assert.assertTrue(container.verify());
 
-        ContainerUnloader unloader = container.getUnloader();
-        NodeDraft[] nodes = Utils.toNodesArray(unloader);
+        NodeDraft[] nodes = Utils.toNodesArray(container);
 
         Utils.assertSameIds(nodes, "A", "B", "C");
     }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -309,9 +309,7 @@ private boolean isRanking(Graph graph, Column column) {
             } else {
                 index = localScale ? graphModel.getEdgeIndex(graph.getView()) : graphModel.getEdgeIndex();
             }
-            if (index.countValues(column) > 0) {
-                return true;
-            }
+            return index.countValues(column) > 0;
         }
         return false;
     }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/AttributeFunction.java
Patch:
@@ -54,5 +54,5 @@ public interface AttributeFunction extends Function {
      *
      * @return column
      */
-    public Column getColumn();
+    Column getColumn();
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/PartitionFunction.java
Patch:
@@ -52,5 +52,5 @@ public interface PartitionFunction extends Function {
      *
      * @return partition
      */
-    public Partition getPartition();
+    Partition getPartition();
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/RankingFunction.java
Patch:
@@ -52,7 +52,7 @@ public interface RankingFunction extends Function {
      *
      * @return ranking
      */
-    public Ranking getRanking();
+    Ranking getRanking();
 
     /**
      * Returns the interpolator.
@@ -62,12 +62,12 @@ public interface RankingFunction extends Function {
      *
      * @return interpolator
      */
-    public Interpolator getInterpolator();
+    Interpolator getInterpolator();
 
     /**
      * Sets the interpolator for this function.
      *
      * @param interpolator interpolator
      */
-    public void setInterpolator(Interpolator interpolator);
+    void setInterpolator(Interpolator interpolator);
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/spi/PartitionTransformer.java
Patch:
@@ -61,5 +61,5 @@ public interface PartitionTransformer<E extends Element> extends Transformer {
      * @param partition partition configuration
      * @param value     element's value for this partition
      */
-    public void transform(E element, Partition partition, Object value);
+    void transform(E element, Partition partition, Object value);
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/spi/RankingTransformer.java
Patch:
@@ -65,5 +65,5 @@ public interface RankingTransformer<E extends Element> extends Transformer {
      * @param interpolator interpolator
      * @param value        element's value for this ranking
      */
-    public void transform(E element, Ranking ranking, Interpolator interpolator, Number value);
+    void transform(E element, Ranking ranking, Interpolator interpolator, Number value);
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/spi/SimpleTransformer.java
Patch:
@@ -56,5 +56,5 @@ public interface SimpleTransformer<E extends Element> extends Transformer {
      *
      * @param element element to transform
      */
-    public void transform(E element);
+    void transform(E element);
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/spi/Transformer.java
Patch:
@@ -58,12 +58,12 @@ public interface Transformer {
      *
      * @return true if is node, false otherwise
      */
-    public boolean isNode();
+    boolean isNode();
 
     /**
      * True if this transformer can be applied to edges.
      *
      * @return true if is edge, false otherwise
      */
-    public boolean isEdge();
+    boolean isEdge();
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/spi/TransformerCategory.java
Patch:
@@ -60,12 +60,12 @@ public interface TransformerCategory {
      *
      * @return display name
      */
-    public String getDisplayName();
+    String getDisplayName();
 
     /**
      * Returns the transformer category icon.
      *
      * @return icon or null if missing
      */
-    public Icon getIcon();
+    Icon getIcon();
 }

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/palette/PaletteManager.java
Patch:
@@ -76,6 +76,7 @@ public class PaletteManager {
     private final LinkedList<Palette> recentPalette;
     private final Color DEFAULT_COLOR = Color.LIGHT_GRAY;
     protected String nodeName = null;
+
     private PaletteManager() {
         nodeName = "recentpartitionpalettes";
         presets = loadPresets();
@@ -152,7 +153,7 @@ public Palette generatePalette(int colorCount) {
         return generatePalette(colorCount, null);
     }
 
-    public int getGeneratePaletteQuality(int colorCount){
+    public int getGeneratePaletteQuality(int colorCount) {
         var quality = 50;
         if (colorCount > 300) {
             quality = 2;
@@ -165,6 +166,7 @@ public int getGeneratePaletteQuality(int colorCount){
         }
         return quality;
     }
+
     public Palette generatePalette(int colorCount, Preset preset) {
         int quality = getGeneratePaletteQuality(colorCount);
         Color[] cls = PaletteGenerator.generatePalette(colorCount, quality, preset != null ? preset.toArray() : null);

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingColorTransformerPanel.java
Patch:
@@ -68,7 +68,7 @@ public class RankingColorTransformerPanel extends javax.swing.JPanel {
 
     private final RecentPalettes recentPalettes;
     private RankingElementColorTransformer colorTransformer;
-    private GradientSlider gradientSlider;
+    private final GradientSlider gradientSlider;
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton colorSwatchButton;
     private javax.swing.JToolBar colorSwatchToolbar;
@@ -116,7 +116,7 @@ public void actionPerformed(ActionEvent ae) {
     }
 
     public void setup(RankingFunction function) {
-        colorTransformer = (RankingElementColorTransformer) function.getTransformer();
+        colorTransformer = function.getTransformer();
 
         float[] positionsStart = colorTransformer.getColorPositions();
         Color[] colorsStart = colorTransformer.getColors();

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingSizeTransformerPanel.java
Patch:
@@ -59,12 +59,13 @@ public class RankingSizeTransformerPanel extends javax.swing.JPanel {
     private javax.swing.JLabel labelMinSize;
     private javax.swing.JSpinner maxSize;
     private javax.swing.JSpinner minSize;
+
     public RankingSizeTransformerPanel() {
         initComponents();
     }
 
     public void setup(RankingFunction function) {
-        sizeTransformer = (RankingNodeSizeTransformer) function.getTransformer();
+        sizeTransformer = function.getTransformer();
 
         final String MIN_SIZE = "RankingSizeTransformerPanel_" + sizeTransformer.getClass().getSimpleName() + "_min";
         final String MAX_SIZE = "RankingSizeTransformerPanel_" + sizeTransformer.getClass().getSimpleName() + "_max";

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueColorTransformerPanel.java
Patch:
@@ -76,7 +76,7 @@ public void propertyChange(PropertyChangeEvent evt) {
     }
 
     public void setup(SimpleFunction function) {
-        transformer = (AbstractUniqueColorTransformer) function.getTransformer();
+        transformer = function.getTransformer();
         colorChooser.setColor(transformer.getColor());
         colorLabel.setText(getHex(transformer.getColor()));
     }

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueSizeTransformerPanel.java
Patch:
@@ -69,7 +69,7 @@ public void stateChanged(ChangeEvent e) {
     }
 
     public void setup(SimpleFunction function) {
-        transformer = (AbstractUniqueSizeTransformer) function.getTransformer();
+        transformer = function.getTransformer();
         sizeSpinner.setValue(transformer.getSize());
     }
 

File: modules/DBDrivers/src/main/java/org/gephi/io/database/drivers/SQLDriver.java
Patch:
@@ -51,10 +51,10 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface SQLDriver extends Serializable {
 
-    public String getPrefix();
+    String getPrefix();
 
-    public Connection getConnection(String connectionUrl, String username, String passwd) throws SQLException;
+    Connection getConnection(String connectionUrl, String username, String passwd) throws SQLException;
 
     @Override
-    public String toString();
+    String toString();
 }

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/AttributeColumnsMergeStrategiesController.java
Patch:
@@ -217,7 +217,7 @@ Column booleanLogicOperationsMerge(Table table, Column[] columnsToMerge, Boolean
     /**
      * Enumeration that defines the supported logic operations for a merge with <code>booleanLogicOperationsMerge</code> strategy.
      */
-    public enum BooleanOperations {
+    enum BooleanOperations {
         AND,
         OR,
         XOR,

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/SearchReplaceController.java
Patch:
@@ -117,11 +117,11 @@ public interface SearchReplaceController {
      */
     class SearchOptions {
 
-        private boolean searchNodes;
+        private final boolean searchNodes;
         private Node[] nodesToSearch;
         private Edge[] edgesToSearch;
         private Integer startingRow = null, startingColumn = null;
-        private HashSet<Integer> columnsToSearch = new HashSet<>();
+        private final HashSet<Integer> columnsToSearch = new HashSet<>();
         private boolean loopToBeginning = true;
         private Pattern regexPattern;
         private boolean useRegexReplaceMode = false;

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -170,7 +170,7 @@ private Column convertColumnToDynamic(Table table, Column column, double low, do
             }
         }
 
-        Element rows[] = getTableAttributeRows(table);
+        Element[] rows = getTableAttributeRows(table);
 
         Object[] oldValues = new Object[rows.length];
         for (int i = 0; i < rows.length; i++) {

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/SearchReplaceControllerImpl.java
Patch:
@@ -166,7 +166,7 @@ public SearchResult replace(SearchResult result, String replacement) {
                 matcher.appendReplacement(sb, replacement);
                 int replaceLong = sb.length();
                 matcher.appendTail(sb);
-                str = str.substring(0, result.getStart()) + sb.toString();
+                str = str.substring(0, result.getStart()) + sb;
 
                 result.getSearchOptions().setRegionStart(result.getStart() + replaceLong);
                 Lookup.getDefault().lookup(AttributeColumnsController.class).setAttributeValue(str, attributes, column);

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/ManipulatorUI.java
Patch:
@@ -79,12 +79,12 @@ public interface ManipulatorUI {
      *
      * @return Settings panel instance
      */
-    public JPanel getSettingsPanel();
+    JPanel getSettingsPanel();
 
     /**
      * Indicates if the created dialog has to be modal
      *
      * @return True if modal, false otherwise
      */
-    public boolean isModal();
+    boolean isModal();
 }

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/columns/AttributeColumnsManipulatorUI.java
Patch:
@@ -87,12 +87,12 @@ void setup(AttributeColumnsManipulator m, GraphModel graphModel, Table table, Co
      *
      * @return Settings panel instance
      */
-    public JPanel getSettingsPanel();
+    JPanel getSettingsPanel();
 
     /**
      * Indicates if the created dialog has to be modal
      *
      * @return True if modal, false otherwise
      */
-    public boolean isModal();
+    boolean isModal();
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/CreateTimeIntervalUI.java
Patch:
@@ -556,7 +556,7 @@ private void endColumnComboBoxActionPerformed(
 
     private class ColumnWrapper {
 
-        private Column column;
+        private final Column column;
 
         public ColumnWrapper(Column column) {
             this.column = column;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/GeneralCreateColumnFromRegexUI.java
Patch:
@@ -264,6 +264,7 @@ private void initComponents() {
                     .addContainerGap())
         );
     }// </editor-fold>//GEN-END:initComponents
+
     public enum Mode {
 
         BOOLEAN,

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralChooseColumnsAndRowUI.java
Patch:
@@ -211,8 +211,8 @@ private void initComponents() {
 
     private static class ColumnCheckBox {
 
-        private JCheckBox checkBox;
-        private Column column;
+        private final JCheckBox checkBox;
+        private final Column column;
 
         public ColumnCheckBox(Column column, boolean selected) {
             checkBox = new JCheckBox(column.getTitle(), selected);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralChooseColumnsUI.java
Patch:
@@ -169,8 +169,8 @@ private void initComponents() {
 
     private static class ColumnCheckBox {
 
-        private JCheckBox checkBox;
-        private Column column;
+        private final JCheckBox checkBox;
+        private final Column column;
 
         public ColumnCheckBox(Column column, boolean selected) {
             checkBox = new JCheckBox(column.getTitle(), selected);

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceToolbar.java
Patch:
@@ -235,8 +235,8 @@ public void run() {
     private class CategoryToolbar extends AbstractToolbar {
 
         private final List<ButtonGroup> buttonGroups = new ArrayList<>();
-        private javax.swing.JLabel box;
-        private javax.swing.ButtonGroup elementGroup;
+        private final javax.swing.JLabel box;
+        private final javax.swing.ButtonGroup elementGroup;
 
         public CategoryToolbar() {
             //Init components

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceTopComponent.java
Patch:
@@ -112,6 +112,7 @@ public class AppearanceTopComponent extends TopComponent implements Lookup.Provi
     private org.jdesktop.swingx.JXHyperlink splineButton;
     private javax.swing.JToggleButton stopAutoApplyButton;
     private javax.swing.JToolBar tranformerToolbar;
+
     public AppearanceTopComponent() {
         setName(NbBundle.getMessage(AppearanceTopComponent.class, "CTL_AppearanceTopComponent"));
 

File: modules/DesktopBanner/src/main/java/org/gephi/desktop/banner/BannerComponent.java
Patch:
@@ -83,6 +83,7 @@ public class BannerComponent extends javax.swing.JPanel {
     private javax.swing.JPanel mainPanel;
     private javax.swing.ButtonGroup perspectivesButtonGroup;
     private javax.swing.JPanel workspacePanel;
+
     public BannerComponent() {
         initComponents();
 

File: modules/DesktopBanner/src/main/java/org/gephi/desktop/banner/BannerRootPanelLayout.java
Patch:
@@ -55,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 //Author Chris from pinkmatter - RibbonRootPaneLayout
 class BannerRootPanelLayout implements LayoutManager2 {
 
-    private JComponent _toolbar;
+    private final JComponent _toolbar;
 
     public BannerRootPanelLayout(JComponent toolbar) {
         _toolbar = toolbar;

File: modules/DesktopBanner/src/main/java/org/gephi/desktop/banner/perspective/spi/BottomComponent.java
Patch:
@@ -49,9 +49,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface BottomComponent {
 
-    public JComponent getComponent();
+    JComponent getComponent();
 
-    public boolean isVisible();
+    boolean isVisible();
 
-    public void setVisible(boolean visible);
+    void setVisible(boolean visible);
 }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/Report.java
Patch:
@@ -58,7 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class Report {
 
-    private Date date;
+    private final Date date;
     private Throwable throwable;
     private String summary = "";
     private String userDescription = "";
@@ -83,8 +83,8 @@ public class Report {
     private String glRenderer = "";
     private String glVersion = "";
     //Modules
-    private List<String> enabledModules = new ArrayList<>();
-    private List<String> disabledModules = new ArrayList<>();
+    private final List<String> enabledModules = new ArrayList<>();
+    private final List<String> disabledModules = new ArrayList<>();
 
     public Report() {
         Calendar cal = Calendar.getInstance();

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportController.java
Patch:
@@ -210,8 +210,8 @@ private void logVersion(Report report) {
         try {
             str = MessageFormat.format(
                 NbBundle.getBundle("org.netbeans.core.startup.Bundle").getString("currentVersion"), // NOI18N
-                new Object[] {System.getProperty("netbeans.buildnumber")} // NOI18N
-            );
+                // NOI18N
+                System.getProperty("netbeans.buildnumber"));
             report.setVersion(str);
         } catch (MissingResourceException ex) {
         }
@@ -242,7 +242,7 @@ private void logModules(Report report) {
             String moduleStr = "";
             SpecificationVersion specVersion = m.getSpecificationVersion();
             if (specVersion != null) {
-                moduleStr = m.getCodeName() + " [" + specVersion.toString() + "]";
+                moduleStr = m.getCodeName() + " [" + specVersion + "]";
             } else {
                 moduleStr = m.getCodeName();
             }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportPanel.java
Patch:
@@ -69,6 +69,7 @@ public class ReportPanel extends javax.swing.JPanel {
     private javax.swing.JTextArea problemArea;
     private javax.swing.JTextField summaryTextField;
     private javax.swing.JButton viewDataButton;
+
     public ReportPanel(Report report) {
         this.reportController = new ReportController();
         this.report = report;

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReporterHandler.java
Patch:
@@ -60,7 +60,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class ReporterHandler extends java.util.logging.Handler implements Callable<JButton>, ActionListener {
 
     private Throwable throwable;
-    private String MEMORY_ERROR;
+    private final String MEMORY_ERROR;
 
     public ReporterHandler() {
         MEMORY_ERROR = NbBundle.getMessage(ReporterHandler.class, "OutOfMemoryError.message");

File: modules/DesktopContext/src/main/java/org/gephi/desktop/context/ContextPanel.java
Patch:
@@ -185,6 +185,7 @@ private void initComponents() {
         gridBagConstraints.insets = new java.awt.Insets(6, 7, 5, 5);
         add(graphTypeLabel, gridBagConstraints);
     }// </editor-fold>//GEN-END:initComponents
+
     private enum GraphType {
 
         DIRECTED(NbBundle.getMessage(ContextPanel.class, "ContextPanel.graphType.directed")),

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/AvailableColumnsModel.java
Patch:
@@ -78,9 +78,7 @@ public boolean isColumnAvailable(Column column) {
      */
     public synchronized boolean addAvailableColumn(Column column) {
         if (canAddAvailableColumn()) {
-            if (!availableColumns.contains(column)) {
-                availableColumns.add(column);
-            }
+            availableColumns.add(column);
             return true;
         } else {
             return false;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/AvailableColumnsPanel.java
Patch:
@@ -65,7 +65,7 @@ public class AvailableColumnsPanel extends javax.swing.JPanel {
 
     private final Table table;
     private final AvailableColumnsModel availableColumnsModel;
-    private Column[] columns;
+    private final Column[] columns;
     private JCheckBox[] columnsCheckBoxes;
     private AvailableColumnsValidator validator;
     // Variables declaration - do not modify//GEN-BEGIN:variables
@@ -168,7 +168,7 @@ private void initComponents() {
 
     class ColumnCheckBoxListener implements ActionListener {
 
-        private int index;
+        private final int index;
 
         public ColumnCheckBoxListener(int index) {
             this.index = index;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java
Patch:
@@ -76,6 +76,7 @@ public class ConfigurationPanel extends javax.swing.JPanel {
     private javax.swing.JComboBox timeZoneComboBox;
     private javax.swing.JLabel timeZoneLabel;
     private javax.swing.JCheckBox useSparklinesCheckBox;
+
     /**
      * Creates new form ConfigurationPanel
      */

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/AddColumnUI.java
Patch:
@@ -238,6 +238,7 @@ private void initComponents() {
                     .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         );
     }// </editor-fold>//GEN-END:initComponents
+
     public enum Mode {
 
         NODES_TABLE, EDGES_TABLE

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java
Patch:
@@ -479,6 +479,7 @@ private void columnsToMergeListMouseClicked(
             moveElementsFromListToOtherList(columnsToMergeList, availableColumnsList);
         }
     }//GEN-LAST:event_columnsToMergeListMouseClicked
+
     public enum Mode {
 
         NODES_TABLE,
@@ -487,7 +488,7 @@ public enum Mode {
 
     private static class MergeStrategyValidator implements Validator<ComboBoxModel> {
 
-        private MergeColumnsUI ui;
+        private final MergeColumnsUI ui;
 
         public MergeStrategyValidator(MergeColumnsUI ui) {
             this.ui = ui;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/componentproviders/IntervalSetGraphicsComponentProvider.java
Patch:
@@ -19,8 +19,8 @@ public TimeIntervalGraphicsParameters getTimeIntervalGraphicsParameters(TimeSet
         IntervalSet intervalSet = (IntervalSet) value;
         double[] intervals = intervalSet.getIntervals();
 
-        double starts[] = new double[intervals.length / 2];
-        double ends[] = new double[intervals.length / 2];
+        double[] starts = new double[intervals.length / 2];
+        double[] ends = new double[intervals.length / 2];
         for (int i = 0, startIndex = 0; startIndex < intervals.length; i++, startIndex += 2) {
             starts[i] = intervals[startIndex];
             ends[i] = intervals[startIndex + 1];

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/componentproviders/TimestampSetGraphicsComponentProvider.java
Patch:
@@ -20,8 +20,8 @@ public TimeIntervalGraphicsParameters getTimeIntervalGraphicsParameters(TimeSet
 
         double[] timestamps = timestampSet.toPrimitiveArray();
 
-        double starts[] = new double[timestamps.length];
-        double ends[] = new double[timestamps.length];
+        double[] starts = new double[timestamps.length];
+        double[] ends = new double[timestamps.length];
         for (int i = 0; i < timestamps.length; i++) {
             starts[i] = timestamps[i];
             ends[i] = timestamps[i];

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/Export.java
Patch:
@@ -60,7 +60,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class Export extends CallableSystemAction {
 
-    private JMenu menu;
+    private final JMenu menu;
 
     public Export() {
         menu = new JMenu(NbBundle.getMessage(Export.class, "CTL_Export"));

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/ExportControllerUI.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface ExportControllerUI {
 
-    public void exportFile(final FileObject fileObject, final Exporter exporter);
+    void exportFile(final FileObject fileObject, final Exporter exporter);
 
-    public ExportController getExportController();
+    ExportController getExportController();
 }

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/GraphFileExporterUIPanel.java
Patch:
@@ -54,6 +54,7 @@ public class GraphFileExporterUIPanel extends javax.swing.JPanel {
     private javax.swing.JLabel labelGraph;
     private javax.swing.JLabel labelVisibleOnly;
     private javax.swing.JRadioButton visibleOnlyRadio;
+
     /**
      * Creates new form GraphFileExporterUIPanel
      */

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/api/TopDialog.java
Patch:
@@ -390,7 +390,7 @@ private void attachActionListener(Object comp, ActionListener l) {
             java.lang.reflect.Method m;
 
             try {
-                m = comp.getClass().getMethod("addActionListener", new Class[] {ActionListener.class}); // NOI18N
+                m = comp.getClass().getMethod("addActionListener", ActionListener.class); // NOI18N
 
                 try {
                     m.setAccessible(true);
@@ -405,7 +405,7 @@ private void attachActionListener(Object comp, ActionListener l) {
 
             if (m != null) {
                 try {
-                    m.invoke(comp, new Object[] {l});
+                    m.invoke(comp, l);
                 } catch (Exception e) {
                     // not succeeded, so give up
                 }

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/spi/ExporterClassUI.java
Patch:
@@ -47,9 +47,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface ExporterClassUI {
 
-    public String getName();
+    String getName();
 
-    public boolean isEnable();
+    boolean isEnable();
 
-    public void action();
+    void action();
 }

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/FiltersPanel.java
Patch:
@@ -93,6 +93,7 @@ public class FiltersPanel extends javax.swing.JPanel implements ExplorerManager.
     private javax.swing.JSplitPane splitPane;
     private javax.swing.JToggleButton stopButton;
     private javax.swing.JToolBar toolbar;
+
     public FiltersPanel() {
         initComponents();
         //Toolbar
@@ -479,7 +480,7 @@ public ExplorerManager getExplorerManager() {
 
     private class QueriesPanel extends JPanel implements ExplorerManager.Provider {
 
-        private ExplorerManager manager = new ExplorerManager();
+        private final ExplorerManager manager = new ExplorerManager();
 
         public QueriesPanel() {
             super(new BorderLayout());

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/CategoryChildFactory.java
Patch:
@@ -56,8 +56,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class CategoryChildFactory extends ChildFactory<Object> {
 
-    private Category category;
-    private FiltersExplorer.Utils utils;
+    private final Category category;
+    private final FiltersExplorer.Utils utils;
 
     public CategoryChildFactory(FiltersExplorer.Utils utils, Category category) {
         this.utils = utils;

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/CategoryNode.java
Patch:
@@ -65,7 +65,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class CategoryNode extends AbstractNode {
 
-    private Category category;
+    private final Category category;
 
     public CategoryNode(FiltersExplorer.Utils utils, Category category) {
         super(

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FilterBuilderNode.java
Patch:
@@ -59,8 +59,8 @@ Development and Distribution License("CDDL") (collectively, the
 public class FilterBuilderNode extends AbstractNode {
 
     public static final DataFlavor DATA_FLAVOR = new DataFlavor(FilterBuilder.class, "filterbuilder");
-    private FilterBuilder filterBuilder;
-    private FilterTransferable transferable;
+    private final FilterBuilder filterBuilder;
+    private final FilterTransferable transferable;
 
     public FilterBuilderNode(FilterBuilder filterBuilder) {
         super(Children.LEAF);

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/SavedQueryNode.java
Patch:
@@ -58,7 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class SavedQueryNode extends AbstractNode {
 
-    private Query query;
+    private final Query query;
 
     public SavedQueryNode(Query query) {
         super(Children.LEAF);

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/ParameterChildren.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class ParameterChildren extends Children.Keys<Integer> {
 
-    private Query function;
+    private final Query function;
 
     public ParameterChildren(Query function) {
         this.function = function;

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/QueryChildren.java
Patch:
@@ -84,7 +84,7 @@ protected Collection<Node> initCollection() {
             nodesChildren.add(new HelpNode());
         } else {
             Query[] children = topQuery != null ? topQuery : query.getChildren();
-            boolean hasParameters = query == null ? false : query.getPropertiesCount() > 0;
+            boolean hasParameters = query != null && query.getPropertiesCount() > 0;
             int slots = topQuery != null ? topQuery.length : query.getChildrenSlotsCount();
 
             if (slots == Integer.MAX_VALUE) {

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/SlotNode.java
Patch:
@@ -66,7 +66,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class SlotNode extends AbstractNode {
 
-    private Query parent;
+    private final Query parent;
 
     public SlotNode(Query parent) {
         super(Children.LEAF);

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -271,7 +271,7 @@ private void importFiles(final Reader[] readers, final FileImporter[] importers,
                         ui.getDisplayName());
                 JPanel panel = ui.getPanel();
 
-                FileImporter[] fi = (FileImporter[]) entry.getValue()
+                FileImporter[] fi = entry.getValue()
                     .toArray((FileImporter[]) Array.newInstance(entry.getValue().get(0).getClass(), 0));
                 ui.setup(fi);
 

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/ReportPanel.java
Patch:
@@ -117,7 +117,7 @@ public class ReportPanel extends javax.swing.JPanel {
     //Container
     private Container[] containers;
     //UI
-    private ButtonGroup processorGroup = new ButtonGroup();
+    private final ButtonGroup processorGroup = new ButtonGroup();
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JCheckBox autoscaleCheckbox;
     private javax.swing.JCheckBox createMissingNodesCheckbox;
@@ -151,6 +151,7 @@ public class ReportPanel extends javax.swing.JPanel {
     private javax.swing.JScrollPane tab1ScrollPane;
     private javax.swing.JScrollPane tab2ScrollPane;
     private javax.swing.JTabbedPane tabbedPane;
+
     public ReportPanel() {
         try {
             SwingUtilities.invokeAndWait(new Runnable() {

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/WizardVisualPanel1.java
Patch:
@@ -64,6 +64,7 @@ public final class WizardVisualPanel1 extends JPanel implements ChangeListener {
     private javax.swing.JLabel labelDescription;
     private javax.swing.JLabel labelWizard;
     private javax.swing.JList wizardList;
+
     public WizardVisualPanel1() {
         initComponents();
         reloadDescription();

File: modules/DesktopLayout/src/main/java/org/gephi/desktop/layout/LayoutNode.java
Patch:
@@ -56,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class LayoutNode extends AbstractNode {
 
-    private Layout layout;
+    private final Layout layout;
     private PropertySet[] propertySets;
 
     public LayoutNode(Layout layout) {

File: modules/DesktopLayout/src/main/java/org/gephi/desktop/layout/LayoutTopComponent.java
Patch:
@@ -68,7 +68,7 @@ Development and Distribution License("CDDL") (collectively, the
     preferredID = "LayoutTopComponent")
 public final class LayoutTopComponent extends TopComponent {
 
-    private LayoutPanel layoutPanel;
+    private final LayoutPanel layoutPanel;
     private LayoutModel model;
 
     public LayoutTopComponent() {

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewNode.java
Patch:
@@ -74,7 +74,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class PreviewNode extends AbstractNode implements PropertyChangeListener {
 
-    private PropertySheet propertySheet;
+    private final PropertySheet propertySheet;
 
     public PreviewNode(PropertySheet propertySheet) {
         super(Children.LEAF);

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -106,6 +106,7 @@ public final class PreviewTopComponent extends TopComponent implements PropertyC
     private javax.swing.JPanel sketchPanel;
     private javax.swing.JLabel southBusyLabel;
     private javax.swing.JToolBar southToolbar;
+
     public PreviewTopComponent() {
         initComponents();
         setName(NbBundle.getMessage(PreviewTopComponent.class, "CTL_PreviewTopComponent"));
@@ -120,13 +121,13 @@ public PreviewTopComponent() {
         bannerPanel.setVisible(false);
 
         //background color
-        ((JColorButton) backgroundButton)
+        backgroundButton
             .addPropertyChangeListener(JColorButton.EVENT_COLOR, new PropertyChangeListener() {
                 @Override
                 public void propertyChange(PropertyChangeEvent evt) {
                     PreviewController previewController = Lookup.getDefault().lookup(PreviewController.class);
                     previewController.getModel().getProperties()
-                        .putValue(PreviewProperty.BACKGROUND_COLOR, (Color) evt.getNewValue());
+                        .putValue(PreviewProperty.BACKGROUND_COLOR, evt.getNewValue());
                     PreviewUIController previewUIController = Lookup.getDefault().lookup(PreviewUIController.class);
                     previewUIController.refreshPreview();
                 }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewUIControllerImpl.java
Patch:
@@ -121,7 +121,7 @@ public void select(Workspace workspace) {
                     workspace.add(model);
                 }
                 Float visibilityRatio = previewModel.getProperties().getFloatValue(PreviewProperty.VISIBILITY_RATIO);
-                ((PreviewUIModelImpl) model).setVisibilityRatio(visibilityRatio);
+                model.setVisibilityRatio(visibilityRatio);
                 fireEvent(SELECT, model);
             }
 
@@ -156,7 +156,7 @@ public void disable() {
             Float visibilityRatio =
                 previewController.getModel().getProperties().getFloatValue(PreviewProperty.VISIBILITY_RATIO);
             if (visibilityRatio != null) {
-                ((PreviewUIModelImpl) model).setVisibilityRatio(visibilityRatio);
+                model.setVisibilityRatio(visibilityRatio);
             }
             graphModel = graphController.getGraphModel(pc.getCurrentWorkspace());
         }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/ProjectControllerUIImpl.java
Patch:
@@ -60,13 +60,13 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.desktop.project.api.ProjectControllerUI;
 import org.gephi.io.importer.api.FileType;
 import org.gephi.io.importer.spi.FileImporterBuilder;
+import org.gephi.project.api.GephiFormatException;
+import org.gephi.project.api.LegacyGephiFormatException;
 import org.gephi.project.api.Project;
 import org.gephi.project.api.ProjectController;
 import org.gephi.project.api.ProjectInformation;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.api.WorkspaceProvider;
-import org.gephi.project.api.LegacyGephiFormatException;
-import org.gephi.project.api.GephiFormatException;
 import org.gephi.project.spi.ProjectPropertiesUI;
 import org.gephi.ui.utils.DialogFileFilter;
 import org.gephi.utils.longtask.api.LongTaskErrorHandler;
@@ -128,7 +128,7 @@ public void fatalError(Throwable t) {
                     DialogDisplayer.getDefault().notify(msg);
                 }
 
-                if(!(t instanceof LegacyGephiFormatException)) {
+                if (!(t instanceof LegacyGephiFormatException)) {
                     Exceptions.printStackTrace(t);
                 }
             }

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/DynamicSettingsPanel.java
Patch:
@@ -487,7 +487,7 @@ private void initComponents() {
 
     private class DateRangeValidator implements Validator<String> {
 
-        private ComboBoxModel combo;
+        private final ComboBoxModel combo;
 
         public DateRangeValidator(ComboBoxModel comboBoxModel) {
             this.combo = comboBoxModel;
@@ -516,7 +516,7 @@ public boolean validate(Problems prblms, String string, String t) {
 
     private class TickUnderWindowValidator implements Validator<String> {
 
-        private boolean dates;
+        private final boolean dates;
 
         public TickUnderWindowValidator(boolean dates) {
             this.dates = dates;

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsPanel.java
Patch:
@@ -204,9 +204,9 @@ public StatisticsCategory[] getCategories() {
 
     private static class UIFrontEnd {
 
-        private StatisticsUI statisticsUI;
-        private StatisticsFrontEnd frontEnd;
-        private StatisticsCategory category;
+        private final StatisticsUI statisticsUI;
+        private final StatisticsFrontEnd frontEnd;
+        private final StatisticsCategory category;
         private boolean visible;
 
         public UIFrontEnd(StatisticsUI statisticsUI, StatisticsFrontEnd frontEnd, StatisticsCategory category) {

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/api/StatisticsControllerUI.java
Patch:
@@ -63,7 +63,7 @@ public interface StatisticsControllerUI {
      *
      * @param statistics the statistics algorithm instance
      */
-    public void execute(Statistics statistics);
+    void execute(Statistics statistics);
 
     /**
      * Execute the statistics in a background thread an call the listener when finished.
@@ -72,13 +72,13 @@ public interface StatisticsControllerUI {
      * @param statistics the statistics algorithm instance
      * @param listener   a listener that is notified when execution finished
      */
-    public void execute(Statistics statistics, LongTaskListener listener);
+    void execute(Statistics statistics, LongTaskListener listener);
 
     /**
      * Sets the visible state for a given <code>StatisticsUI</code>.
      *
      * @param ui      the UI instance
      * @param visible <code>true</code> to display the front-end
      */
-    public void setStatisticsUIVisible(StatisticsUI ui, boolean visible);
+    void setStatisticsUIVisible(StatisticsUI ui, boolean visible);
 }

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/CustomBoundsDialog.java
Patch:
@@ -80,6 +80,7 @@ public class CustomBoundsDialog extends javax.swing.JPanel {
     private javax.swing.JButton resetDefaultsDate;
     private javax.swing.JTextField startTextField;
     private org.jdesktop.swingx.JXHeader titleHeader;
+
     public CustomBoundsDialog() {
         initComponents();
 
@@ -320,7 +321,7 @@ private void initComponents() {
     private class TimeValidator implements Validator<String> {
 
         private final JTextField other;
-        private boolean max;
+        private final boolean max;
 
         public TimeValidator(JTextField other, boolean max) {
             this.other = other;

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/DrawerSettings.java
Patch:
@@ -74,6 +74,7 @@ public class DrawerSettings {
     public int topChartMargin;
     private int lastWidth = 0;
     private int lastHeight = 0;
+
     public DrawerSettings() {
         /* DEFINE THEME HERE */
         //background.top = new Color(101, 101, 101, 255);

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/PlaySettingsDialog.java
Patch:
@@ -69,6 +69,7 @@ public class PlaySettingsDialog extends javax.swing.JPanel {
     private javax.swing.JRadioButton oneBoundRadio;
     private javax.swing.JSpinner stepSizeSpinner;
     private javax.swing.JRadioButton twoBoundsRadio;
+
     public PlaySettingsDialog() {
         initComponents();
     }

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TickGraph.java
Patch:
@@ -136,7 +136,7 @@ private void drawDate(Graphics2D g) {
                 int x = dateTick.getTickPixelPosition(ms, width);
                 if (x >= 0) {
                     //Height
-                    int h = (int) (Math.min(40, (int) (height / 15.0)));
+                    int h = Math.min(40, (int) (height / 15.0));
 
                     boolean noTickOverlap = x >= previousXLabelEnd + MIN_PIXEL_MARGIN_BETWEEN_TICKS;
 
@@ -180,7 +180,7 @@ private void drawDate(Graphics2D g) {
                 }
 
                 int xLabel = -1;
-                int yLabel = (int) (fontSize * 4);
+                int yLabel = fontSize * 4;
                 if (x >= 0) {
                     xLabel = x + 4;
                 } else if (x > ((dateTick.getTickPixelPosition(interval.getEndMillis(), width) - x) / -2)) {
@@ -255,7 +255,7 @@ private void drawReal(Graphics2D g) {
             int x = graduation.getTickPixelPosition(i, width);
             int rank = graduation.getTickRank(i);
             int h = Math.min(40, (int) (height / 15.0));
-            h = rank == 2 ? (int) (h + h) : rank == 1 ? (int) (h + h / 2.) : h;
+            h = rank == 2 ? (h + h) : rank == 1 ? (int) (h + h / 2.) : h;
             if (x > 0) {
                 g.setColor(parameters.getRealColor(rank));
                 g.drawLine(x, 0, x, h);

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TickParameters.java
Patch:
@@ -57,6 +57,7 @@ public class TickParameters {
     private int fontSize = 12;
     private final Font font = new Font("Helvetica", Font.PLAIN, fontSize);
     private double fontFactor = 6.;
+
     public TickParameters(TickType type) {
         this.type = type;
     }

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimeFormatDialog.java
Patch:
@@ -60,6 +60,7 @@ public class TimeFormatDialog extends javax.swing.JPanel {
     private javax.swing.JRadioButton dateTimeRadio;
     private org.jdesktop.swingx.JXHeader headerTitle;
     private javax.swing.JRadioButton numericRadio;
+
     /**
      * Creates new form DateFormatDialog
      */

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimelineTooltip.java
Patch:
@@ -72,7 +72,7 @@ public class TimelineTooltip {
     private String y;
     private Timer timer;
     private RichTooltip tooltip;
-    private Lock lock = new ReentrantLock();
+    private final Lock lock = new ReentrantLock();
 
     public void setModel(TimelineModel model) {
         this.model = model;

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimelineTopComponent.java
Patch:
@@ -90,9 +90,9 @@ Development and Distribution License("CDDL") (collectively, the
 //preferredID = "TimelineTopComponent")
 public final class TimelineTopComponent extends JPanel implements TimelineModelListener {
 
-    private transient TimelineDrawer drawer;
+    private final transient TimelineDrawer drawer;
     private transient TimelineModel model;
-    private transient TimelineController controller;
+    private final transient TimelineController controller;
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton closeButton;
     private javax.swing.JButton columnsButton;
@@ -109,6 +109,7 @@ public final class TimelineTopComponent extends JPanel implements TimelineModelL
     private javax.swing.JButton settingsButton;
     private transient javax.swing.JPanel timelinePanel;
     private javax.swing.JToolBar toolbarEnable;
+
     public TimelineTopComponent() {
         initComponents();
         if (UIUtils.isAquaLookAndFeel()) {

File: modules/DesktopTools/src/main/java/org/gephi/desktop/tools/DesktopToolController.java
Patch:
@@ -246,11 +246,11 @@ public JComponent getPropertiesBar() {
     }
 
     //Event handlers classes
-    private static interface ToolEventHandler {
+    private interface ToolEventHandler {
 
-        public void select();
+        void select();
 
-        public void unselect();
+        void unselect();
     }
 
     //HANDLERS

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DelegatingChooserUI.java
Patch:
@@ -65,7 +65,7 @@ public class DelegatingChooserUI extends ComponentUI {
     static final String NB_USE_SHELL_FOLDER = "nb.FileChooser.useShellFolder";
     static final String START_TIME = "start.time";
 
-    private static boolean firstTime = true;
+    private static final boolean firstTime = true;
 
     public static ComponentUI createUI(JComponent c) {
         JFileChooser fc = (JFileChooser) c;

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DirectoryNode.java
Patch:
@@ -68,7 +68,7 @@ public class DirectoryNode extends DefaultMutableTreeNode {
      */
     static final FileNameComparator FILE_NAME_COMPARATOR = new FileNameComparator();
     private File directory;
-    private boolean isDir;
+    private final boolean isDir;
     private boolean loaded;
     private boolean isSelected;
 

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/ByteExporter.java
Patch:
@@ -56,5 +56,5 @@ public interface ByteExporter extends Exporter {
      *
      * @param stream the stream the exporter is to write
      */
-    public void setOutputStream(OutputStream stream);
+    void setOutputStream(OutputStream stream);
 }

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/CharacterExporter.java
Patch:
@@ -56,5 +56,5 @@ public interface CharacterExporter extends Exporter {
      *
      * @param writer the writer the exporter is to write
      */
-    public void setWriter(Writer writer);
+    void setWriter(Writer writer);
 }

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/Exporter.java
Patch:
@@ -58,19 +58,19 @@ public interface Exporter {
      * @return <code>true</code> if the operation is successful,
      * <code>false</code> if it has been cancelled
      */
-    public boolean execute();
+    boolean execute();
 
     /**
      * Returns the workspace from where data are exported
      *
      * @return the workspace the data are to be exported
      */
-    public Workspace getWorkspace();
+    Workspace getWorkspace();
 
     /**
      * Sets the worksapce from where to export data
      *
      * @param workspace the workspace to export
      */
-    public void setWorkspace(Workspace workspace);
+    void setWorkspace(Workspace workspace);
 }

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/ExporterBuilder.java
Patch:
@@ -62,12 +62,12 @@ public interface ExporterBuilder {
      *
      * @return a new exporter
      */
-    public Exporter buildExporter();
+    Exporter buildExporter();
 
     /**
      * Returns the name of this builder
      *
      * @return the name of this exporter
      */
-    public String getName();
+    String getName();
 }

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/FileExporterBuilder.java
Patch:
@@ -56,5 +56,5 @@ public interface FileExporterBuilder extends ExporterBuilder {
      *
      * @return an array of file types this exporter can read
      */
-    public FileType[] getFileTypes();
+    FileType[] getFileTypes();
 }

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/GraphExporter.java
Patch:
@@ -56,13 +56,13 @@ public interface GraphExporter extends Exporter {
      * @return <code>true</code> if only the visible graph has to be exported,
      * <code>false</code> for the complete graph.
      */
-    public boolean isExportVisible();
+    boolean isExportVisible();
 
     /**
      * Sets if only the visible graph has to be exported. If <code>false</code>,
      * the complete graph is exported.
      *
      * @param exportVisible the export visible parameter value
      */
-    public void setExportVisible(boolean exportVisible);
+    void setExportVisible(boolean exportVisible);
 }

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/GraphFileExporterBuilder.java
Patch:
@@ -55,5 +55,5 @@ public interface GraphFileExporterBuilder extends FileExporterBuilder {
      * @return a new graph exporter
      */
     @Override
-    public GraphExporter buildExporter();
+    GraphExporter buildExporter();
 }

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/VectorFileExporterBuilder.java
Patch:
@@ -55,5 +55,5 @@ public interface VectorFileExporterBuilder extends FileExporterBuilder {
      * @return a new vector exporter
      */
     @Override
-    public VectorExporter buildExporter();
+    VectorExporter buildExporter();
 }

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterDL.java
Patch:
@@ -276,7 +276,7 @@ private void saveAsFullMatrix(boolean useLabels, Graph graph) throws IOException
                 if (edge != null) {
                     weight = edge.getWeight(graph.getView());
                 }
-                writer.write(Double.toString(weight) + " ");
+                writer.write(weight + " ");
                 if (makeSymmetricMatrix) {
                     for (int repeatSpace = Double.toString(weight).length(); repeatSpace < maxLengthOfEdgeWeight;
                          repeatSpace++) {

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGML.java
Patch:
@@ -85,7 +85,7 @@ public class ExporterGML implements GraphExporter, CharacterExporter, LongTask {
     private boolean exportCoordinates = true;
     private boolean exportNodeSize = true;
     private boolean exportEdgeSize = true;
-    private boolean exportDynamicWeight = true;
+    private final boolean exportDynamicWeight = true;
     private boolean exportColor = true;
     private boolean exportNotRecognizedElements = true;
     //data to normalize
@@ -407,7 +407,7 @@ private void computeNormalizeValues(Graph graph) {
      */
     private String formatTitle(String s) {
         String res =
-            s.replace("\"", "").replace("\'", "").replace("[", "").replace("]", "").replace(" ", "").replace("#", "");
+            s.replace("\"", "").replace("'", "").replace("[", "").replace("]", "").replace(" ", "").replace("#", "");
         if (s.charAt(0) >= '0' && s.charAt(0) <= '9') {
             return ("column" + res);
         } else {

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGraphML.java
Patch:
@@ -96,7 +96,7 @@ public class ExporterGraphML implements GraphExporter, CharacterExporter, LongTa
     private boolean exportColors = true;
     private boolean exportPosition = true;
     private boolean exportSize = true;
-    private boolean exportDynamicWeight = true;
+    private final boolean exportDynamicWeight = true;
     private boolean exportAttributes = true;
     //Settings Helper
     private float minSize;
@@ -137,7 +137,7 @@ private Document createDocument() throws ParserConfigurationException {
         return document;
     }
 
-    private void transform(Document document) throws TransformerConfigurationException, TransformerException {
+    private void transform(Document document) throws TransformerException {
         Source source = new DOMSource(document);
         Result result = new StreamResult(writer);
         Transformer transformer = TransformerFactory.newInstance().newTransformer();

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterPajek.java
Patch:
@@ -192,7 +192,7 @@ private void exportData(Graph graph) throws Exception {
                 edgeIterable.doBreak();
                 return;
             }
-            writer.append(Integer.toString(idx.get(edge.getSource().getId().toString())) + " ");
+            writer.append(idx.get(edge.getSource().getId().toString()) + " ");
             writer.append(Integer.toString(idx.get(edge.getTarget().getId().toString())));
             if (exportEdgeWeight) {
                 writer.append(" " + edge.getWeight());

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterSpreadsheet.java
Patch:
@@ -268,6 +268,6 @@ public void setTableToExport(ExportTable tableToExport) {
 
     public enum ExportTable {
         NODES,
-        EDGES;
+        EDGES
     }
 }

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterVNA.java
Patch:
@@ -76,7 +76,7 @@ public class ExporterVNA implements GraphExporter, CharacterExporter, LongTask {
     private boolean exportSize = true;
     private boolean exportShortLabel = true;
     private boolean exportColor = true;
-    private boolean exportDynamicWeight = true;
+    private final boolean exportDynamicWeight = true;
     private boolean exportAttributes = true;
     private boolean normalize = false;
     private Writer writer;

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterCSV.java
Patch:
@@ -57,7 +57,7 @@ public class UIExporterCSV implements ExporterUI {
 
     private UIExporterCSVPanel panel;
     private ExporterCSV exporterCSV;
-    private ExporterCSVSettings settings = new ExporterCSVSettings();
+    private final ExporterCSVSettings settings = new ExporterCSVSettings();
 
     @Override
     public void setup(Exporter exporter) {

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterCSVPanel.java
Patch:
@@ -58,6 +58,7 @@ public class UIExporterCSVPanel extends javax.swing.JPanel {
     private javax.swing.JCheckBox nodeIdCheckbox;
     private javax.swing.JCheckBox zeroEdgeCheckbox;
     private org.jdesktop.beansbinding.BindingGroup bindingGroup;
+
     public UIExporterCSVPanel() {
         initComponents();
     }

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterDL.java
Patch:
@@ -54,7 +54,7 @@ public class UIExporterDL implements ExporterUI {
 
     private UIExporterDLPanel panel;
     private ExporterDL exporter;
-    private ExporterDLSettings settings = new ExporterDLSettings();
+    private final ExporterDLSettings settings = new ExporterDLSettings();
 
     @Override
     public JPanel getPanel() {

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGDF.java
Patch:
@@ -57,7 +57,7 @@ public class UIExporterGDF implements ExporterUI {
 
     private UIExporterGDFPanel panel;
     private ExporterGDF exporterGDF;
-    private ExporterGDFSettings settings = new ExporterGDFSettings();
+    private final ExporterGDFSettings settings = new ExporterGDFSettings();
 
     @Override
     public void setup(Exporter exporter) {

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGDFPanel.java
Patch:
@@ -62,6 +62,7 @@ public class UIExporterGDFPanel extends javax.swing.JPanel {
     private javax.swing.JCheckBox simpleQuotesCheckbox;
     private javax.swing.JCheckBox visibilityCheckbox;
     private org.jdesktop.beansbinding.BindingGroup bindingGroup;
+
     /**
      * Creates new form UIExporterGDFPanel
      */

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGEXFPanel.java
Patch:
@@ -58,6 +58,7 @@ public class UIExporterGEXFPanel extends javax.swing.JPanel {
     private javax.swing.JCheckBox normalizeCheckbox;
     private javax.swing.JCheckBox positionExportCheckbox;
     private javax.swing.JCheckBox sizeExportCheckbox;
+
     /**
      * Creates new form UIExporterGEXFPanel
      */

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGMLPanel.java
Patch:
@@ -65,6 +65,7 @@ public class UIExporterGMLPanel extends javax.swing.JPanel implements Validation
     private javax.swing.JLabel normalizeLabel;
     private javax.swing.JLabel spacesLabel;
     private javax.swing.JTextField spacesTextField;
+
     /**
      * Creates new customizer UIExporterGMLPanel
      */

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGraphML.java
Patch:
@@ -57,7 +57,7 @@ public class UIExporterGraphML implements ExporterUI {
 
     private UIExporterGraphMLPanel panel;
     private ExporterGraphML exporterGraphML;
-    private ExporterGraphMLSettings settings = new ExporterGraphMLSettings();
+    private final ExporterGraphMLSettings settings = new ExporterGraphMLSettings();
 
     @Override
     public void setup(Exporter exporter) {
@@ -99,7 +99,7 @@ private static class ExporterGraphMLSettings {
         private boolean exportPosition = true;
         private boolean exportSize = true;
         private boolean exportAttributes = true;
-        private boolean exportHierarchy = false;
+        private final boolean exportHierarchy = false;
 
         private void save(ExporterGraphML exporterGraphML) {
             this.normalize = exporterGraphML.isNormalize();

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGraphMLPanel.java
Patch:
@@ -57,6 +57,7 @@ public class UIExporterGraphMLPanel extends javax.swing.JPanel {
     private javax.swing.JCheckBox normalizeCheckbox;
     private javax.swing.JCheckBox positionExportCheckbox;
     private javax.swing.JCheckBox sizeExportCheckbox;
+
     /**
      * Creates new form UIExporterGEXFPanel
      */

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterPajek.java
Patch:
@@ -57,7 +57,7 @@ public class UIExporterPajek implements ExporterUI {
 
     private UIExporterPajekPanel panel;
     private ExporterPajek exporterPajek;
-    private ExporterPajekSettings settings = new ExporterPajekSettings();
+    private final ExporterPajekSettings settings = new ExporterPajekSettings();
 
     @Override
     public void setup(Exporter exporter) {

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterSpreadsheetPanel.java
Patch:
@@ -254,7 +254,7 @@ private void tableComboBoxActionPerformed(
 
     private class SeparatorWrapper {
 
-        private Character separator;
+        private final Character separator;
         private String displayText;
 
         public SeparatorWrapper(Character separator) {

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterVNAPanel.java
Patch:
@@ -59,6 +59,7 @@ public class UIExporterVNAPanel extends javax.swing.JPanel {
     private javax.swing.JCheckBox exportSizeCheckBox;
     private javax.swing.JCheckBox normalizeCheckBox;
     private javax.swing.JLabel normalizeLabel;
+
     /**
      * Creates new customizer UIExporterGMLPanel
      */

File: modules/FiltersAPI/src/main/java/org/gephi/filters/api/PropertyExecutor.java
Patch:
@@ -65,14 +65,14 @@ public interface PropertyExecutor {
      * @param callback the callback function to be notified when setting has to
      *                 be done
      */
-    public void setValue(FilterProperty property, Object value, Callback callback);
+    void setValue(FilterProperty property, Object value, Callback callback);
 
     /**
      * Callback interface for setting value. When called, setting value is done
      * in a safe window between filter execution.
      */
-    public interface Callback {
+    interface Callback {
 
-        public void setValue(Object value);
+        void setValue(Object value);
     }
 }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/Category.java
Patch:
@@ -113,9 +113,7 @@ public boolean equals(Object obj) {
         }
         if (obj instanceof Category) {
             Category cat = (Category) obj;
-            if (cat.icon == icon && cat.name.equals(name) && (cat.parent == parent || cat.parent.equals(parent))) {
-                return true;
-            }
+            return cat.icon == icon && cat.name.equals(name) && (cat.parent == parent || cat.parent.equals(parent));
         }
         return false;
     }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/CategoryBuilder.java
Patch:
@@ -66,13 +66,13 @@ public interface CategoryBuilder {
      * @param workspace workspace
      * @return the builders this category builder is building
      */
-    public FilterBuilder[] getBuilders(Workspace workspace);
+    FilterBuilder[] getBuilders(Workspace workspace);
 
     /**
      * Returns the category builders are to be grouped in. It can't be a default
      * category.
      *
      * @return the category builders belong to
      */
-    public Category getCategory();
+    Category getCategory();
 }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/ComplexFilter.java
Patch:
@@ -53,5 +53,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface ComplexFilter extends Filter {
 
-    public Graph filter(Graph graph);
+    Graph filter(Graph graph);
 }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/ElementFilter.java
Patch:
@@ -59,9 +59,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface ElementFilter<K extends Element> extends Filter {
 
-    public boolean init(Graph graph);
+    boolean init(Graph graph);
 
-    public boolean evaluate(Graph graph, K element);
+    boolean evaluate(Graph graph, K element);
 
-    public void finish();
+    void finish();
 }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/Filter.java
Patch:
@@ -66,13 +66,13 @@ public interface Filter {
      *
      * @return the filter's display name
      */
-    public String getName();
+    String getName();
 
     /**
      * Returns the filter properties. Property values can be get and set from
      * <code>FilterProperty</code> objects.
      *
      * @return the filter's properties
      */
-    public FilterProperty[] getProperties();
+    FilterProperty[] getProperties();
 }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/FilterLibraryMask.java
Patch:
@@ -62,13 +62,13 @@ public interface FilterLibraryMask {
      *
      * @return the <code>Category</code> this filter is describing
      */
-    public Category getCategory();
+    Category getCategory();
 
     /**
      * Returns <code>true</code> if this masks' category is valid.
      *
      * @return <code>true</code> if the category is valid, <code>false</code>
      * otherwise
      */
-    public boolean isValid();
+    boolean isValid();
 }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/Operator.java
Patch:
@@ -50,9 +50,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface Operator extends Filter {
 
-    public Graph filter(Subgraph[] graphs);
+    Graph filter(Subgraph[] graphs);
 
-    public Graph filter(Graph graph, Filter[] filters);
+    Graph filter(Graph graph, Filter[] filters);
 
-    public int getInputCount();
+    int getInputCount();
 }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/RangeFilter.java
Patch:
@@ -49,8 +49,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface RangeFilter extends Filter {
 
-    public Number[] getValues(Graph graph);
+    Number[] getValues(Graph graph);
 
-    public FilterProperty getRangeProperty();
+    FilterProperty getRangeProperty();
 
 }

File: modules/FiltersImpl/src/main/java/org/gephi/filters/AbstractQueryImpl.java
Patch:
@@ -156,7 +156,7 @@ public AbstractQueryImpl copy() {
         }
 
         for (int i = 0; i < children.size(); i++) {
-            AbstractQueryImpl child = (AbstractQueryImpl) children.get(i);
+            AbstractQueryImpl child = children.get(i);
             AbstractQueryImpl childCopy = child.copy();
             childCopy.parent = copy;
             copy.children.add(childCopy);

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -318,7 +318,7 @@ public void exportToColumn(String title, Query query) {
         } else {
             FilterProcessor processor = new FilterProcessor();
             GraphModel graphModel = model.getGraphModel();
-            result = (Graph) processor.process((AbstractQueryImpl) query, graphModel);
+            result = processor.process((AbstractQueryImpl) query, graphModel);
         }
         Column nodeCol = result.getModel().getNodeTable().getColumn("filter_" + title);
         if (nodeCol == null) {
@@ -358,7 +358,7 @@ public void exportToNewWorkspace(Query query) {
         } else {
             FilterProcessor processor = new FilterProcessor();
             GraphModel graphModel = model.getGraphModel();
-            result = (Graph) processor.process((AbstractQueryImpl) query, graphModel);
+            result = processor.process((AbstractQueryImpl) query, graphModel);
         }
 
         final Graph graphView = result;
@@ -407,7 +407,7 @@ public void exportToLabelVisible(Query query) {
             result = model.getGraphModel().getGraph(view);
         } else {
             FilterProcessor processor = new FilterProcessor();
-            result = (Graph) processor.process((AbstractQueryImpl) query, model.getGraphModel());
+            result = processor.process((AbstractQueryImpl) query, model.getGraphModel());
         }
         Graph fullGraph = model.getGraphModel().getGraph();
 

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterThread.java
Patch:
@@ -146,7 +146,7 @@ public void run() {
     private void filter(AbstractQueryImpl query) {
         FilterProcessor processor = new FilterProcessor();
         GraphModel graphModel = model.getGraphModel();
-        Graph result = processor.process((AbstractQueryImpl) query, graphModel);
+        Graph result = processor.process(query, graphModel);
         if (running) {
             GraphView view = result.getView();
             graphModel.setVisibleView(view);
@@ -163,7 +163,7 @@ private void filter(AbstractQueryImpl query) {
     private void select(AbstractQueryImpl query) {
         FilterProcessor processor = new FilterProcessor();
         GraphModel graphModel = model.getGraphModel();
-        Graph result = processor.process((AbstractQueryImpl) query, graphModel);
+        Graph result = processor.process(query, graphModel);
         if (running) {
             VisualizationController visController = Lookup.getDefault().lookup(VisualizationController.class);
             if (visController != null) {

File: modules/FiltersImpl/src/main/java/org/gephi/filters/OperatorQueryImpl.java
Patch:
@@ -57,7 +57,7 @@ public class OperatorQueryImpl extends AbstractQueryImpl {
     private String customName = null;
 
     public OperatorQueryImpl(Operator predicate) {
-        this.operator = (Operator) predicate;
+        this.operator = predicate;
     }
 
     @Override

File: modules/FiltersImpl/src/main/java/org/gephi/filters/RangePropertyEditor.java
Patch:
@@ -65,7 +65,7 @@ public void setValue(Object value) {
     @Override
     public String getAsText() {
         if (range != null) {
-            return range.getRangeType().getSimpleName() + " - " + range.toString();
+            return range.getRangeType().getSimpleName() + " - " + range;
         } else {
             return "null";
         }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/EqualBooleanUI.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface EqualBooleanUI {
 
-    public JPanel getPanel(AttributeEqualBuilder.EqualBooleanFilter filter);
+    JPanel getPanel(AttributeEqualBuilder.EqualBooleanFilter filter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/EqualNumberUI.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface EqualNumberUI {
 
-    public JPanel getPanel(AttributeEqualBuilder.EqualNumberFilter filter);
+    JPanel getPanel(AttributeEqualBuilder.EqualNumberFilter filter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/EqualStringUI.java
Patch:
@@ -50,5 +50,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface EqualStringUI {
 
-    public JPanel getPanel(EqualStringFilter filter);
+    JPanel getPanel(EqualStringFilter filter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/dynamic/DynamicRangeUI.java
Patch:
@@ -50,5 +50,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface DynamicRangeUI {
 
-    public JPanel getPanel(DynamicRangeFilter filter);
+    JPanel getPanel(DynamicRangeFilter filter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/edge/EdgeTypeUI.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface EdgeTypeUI {
 
-    public JPanel getPanel(EdgeTypeBuilder.EdgeTypeFilter filter);
+    JPanel getPanel(EdgeTypeBuilder.EdgeTypeFilter filter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/EgoUI.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface EgoUI {
 
-    public JPanel getPanel(EgoBuilder.EgoFilter egoFilter);
+    JPanel getPanel(EgoBuilder.EgoFilter egoFilter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/KCoreUI.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface KCoreUI {
 
-    public JPanel getPanel(KCoreBuilder.KCoreFilter filter);
+    JPanel getPanel(KCoreBuilder.KCoreFilter filter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/NeighborsUI.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface NeighborsUI {
 
-    public JPanel getPanel(NeighborsBuilder.NeighborsFilter neighborsFilter);
+    JPanel getPanel(NeighborsBuilder.NeighborsFilter neighborsFilter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/RangeUI.java
Patch:
@@ -50,5 +50,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface RangeUI {
 
-    public JPanel getPanel(RangeFilter rangeFilter);
+    JPanel getPanel(RangeFilter rangeFilter);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/INTERSECTIONBuilder.java
Patch:
@@ -121,7 +121,7 @@ public FilterProperty[] getProperties() {
 
         @Override
         public Graph filter(Subgraph[] graphs) {
-            Subgraph subgraph = (Subgraph) graphs[0];
+            Subgraph subgraph = graphs[0];
 
             for (int i = 1; i < graphs.length; i++) {
                 subgraph.intersection(graphs[i]);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/MASKBuilderEdge.java
Patch:
@@ -142,7 +142,7 @@ public Graph filter(Subgraph[] graphs) {
                 throw new IllegalArgumentException("Filter accepts a single graph in parameter");
             }
 
-            Graph graph = (Graph) graphs[0];
+            Graph graph = graphs[0];
             Graph mainGraph = graph.getView().getGraphModel().getGraph();
 
             List<Edge> edgesToKeep = new ArrayList<>();

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/MASKEdgeUI.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface MASKEdgeUI {
 
-    public JPanel getPanel(MASKBuilderEdge.MaskEdgeOperator edgesOperator);
+    JPanel getPanel(MASKBuilderEdge.MaskEdgeOperator edgesOperator);
 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/PartitionUI.java
Patch:
@@ -50,5 +50,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface PartitionUI {
 
-    public JPanel getPanel(PartitionFilter filter);
+    JPanel getPanel(PartitionFilter filter);
 }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/attribute/EqualNumberPanel.java
Patch:
@@ -65,6 +65,7 @@ public class EqualNumberPanel extends javax.swing.JPanel implements ChangeListen
     private javax.swing.JLabel maxLabel;
     private javax.swing.JLabel minLabel;
     private javax.swing.JSpinner valueSpinner;
+
     public EqualNumberPanel() {
         initComponents();
     }
@@ -73,7 +74,7 @@ public EqualNumberPanel() {
     public void stateChanged(ChangeEvent evt) {
         FilterProperty match = filter.getProperties()[1];
         try {
-            match.setValue((Number) valueSpinner.getValue());
+            match.setValue(valueSpinner.getValue());
         } catch (Exception e) {
             Exceptions.printStackTrace(e);
         }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/graph/EgoPanel.java
Patch:
@@ -61,6 +61,7 @@ public class EgoPanel extends javax.swing.JPanel {
     private javax.swing.JTextField nodeIdTextField;
     private javax.swing.JButton okButton;
     private javax.swing.JCheckBox withSelfCheckbox;
+
     /**
      * Creates new form EgoPanel
      */

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/graph/KCorePanel.java
Patch:
@@ -66,7 +66,7 @@ public KCorePanel() {
     public void stateChanged(ChangeEvent evt) {
         FilterProperty k = filter.getProperties()[0];
         try {
-            k.setValue((Integer) degreeSpinner.getValue());
+            k.setValue(degreeSpinner.getValue());
         } catch (Exception e) {
             Exceptions.printStackTrace(e);
         }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/operator/MASKEdgePanel.java
Patch:
@@ -58,6 +58,7 @@ public class MASKEdgePanel extends javax.swing.JPanel implements ActionListener
     private javax.swing.ButtonGroup group;
     private javax.swing.JRadioButton sourceButton;
     private javax.swing.JRadioButton targetButton;
+
     public MASKEdgePanel() {
         initComponents();
         anyButton.addActionListener(this);

File: modules/GeneratorAPI/src/main/java/org/gephi/io/generator/api/GeneratorController.java
Patch:
@@ -61,7 +61,7 @@ public interface GeneratorController {
      *
      * @return generators array that are available
      */
-    public Generator[] getGenerators();
+    Generator[] getGenerators();
 
     /**
      * Execute a generator task in a background thread.
@@ -71,5 +71,5 @@ public interface GeneratorController {
      *
      * @param generator the generator that is to be executed
      */
-    public void generate(Generator generator);
+    void generate(Generator generator);
 }

File: modules/GeneratorAPI/src/main/java/org/gephi/io/generator/spi/Generator.java
Patch:
@@ -62,20 +62,20 @@ public interface Generator extends LongTask {
      *
      * @param container the container the graph is to be pushed
      */
-    public void generate(ContainerLoader container);
+    void generate(ContainerLoader container);
 
     /**
      * Returns the generator display name.
      *
      * @return returns the generator name
      */
-    public String getName();
+    String getName();
 
     /**
      * Returns the UI that belongs to this generator, or <code>null</code> if UI
      * is not needed.
      *
      * @return the UI thet belongs to this generator, or <code>null</code>
      */
-    public GeneratorUI getUI();
+    GeneratorUI getUI();
 }

File: modules/GeneratorAPI/src/main/java/org/gephi/io/generator/spi/GeneratorUI.java
Patch:
@@ -61,18 +61,18 @@ public interface GeneratorUI {
      *
      * @return the panel settings
      */
-    public JPanel getPanel();
+    JPanel getPanel();
 
     /**
      * Push the generator instance to get settings values.
      *
      * @param generator the generator instance that is to be configured
      */
-    public void setup(Generator generator);
+    void setup(Generator generator);
 
     /**
      * Notify UI that generator settings panel has been closed and that
      * settings values can be written into current generator instance.
      */
-    public void unsetup();
+    void unsetup();
 }

File: modules/GeneratorPluginUI/src/main/java/org/gephi/ui/generator/plugin/RandomGraphPanel.java
Patch:
@@ -58,6 +58,7 @@ public class RandomGraphPanel extends javax.swing.JPanel {
     protected javax.swing.JTextField nodeField;
     private javax.swing.JLabel edgeLabel;
     private javax.swing.JLabel nodeLabel;
+
     /**
      * Creates new form RandomGraphPanel
      */

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/IntersectionPoint.java
Patch:
@@ -44,7 +44,7 @@
  */
 
 public class IntersectionPoint {
-    private Vec3f intPt = new Vec3f();
+    private final Vec3f intPt = new Vec3f();
     private float t;
 
     public Vec3f getIntersectionPoint() {

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Line.java
Patch:
@@ -52,7 +52,7 @@ public class Line {
     /**
      * For computing projections along line
      */
-    private Vec3f alongVec;
+    private final Vec3f alongVec;
 
     /**
      * Default constructor initializes line to point (0, 0, 0) and

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Mat2f.java
Patch:
@@ -46,7 +46,7 @@
  */
 
 public class Mat2f {
-    private float[] data;
+    private final float[] data;
 
     /**
      * Creates new matrix initialized to the zero matrix

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Mat3f.java
Patch:
@@ -46,7 +46,7 @@
  */
 
 public class Mat3f {
-    private float[] data;
+    private final float[] data;
 
     /**
      * Creates new matrix initialized to the zero matrix

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Mat4f.java
Patch:
@@ -45,7 +45,7 @@
  */
 
 public class Mat4f {
-    private float[] data;
+    private final float[] data;
 
     /**
      * Creates new matrix initialized to the zero matrix

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Matf.java
Patch:
@@ -45,9 +45,9 @@
  */
 
 public class Matf {
-    private float[] data;
-    private int nCol; // number of columns
-    private int nRow; // number of columns
+    private final float[] data;
+    private final int nCol; // number of columns
+    private final int nRow; // number of columns
 
     public Matf(int nRow, int nCol) {
         data = new float[nRow * nCol];

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Plane.java
Patch:
@@ -51,8 +51,8 @@ public class Plane {
     /**
      * Normalized
      */
-    private Vec3f normal;
-    private Vec3f point;
+    private final Vec3f normal;
+    private final Vec3f point;
 
     /**
      * Default constructor initializes normal to (0, 1, 0) and point to

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Rotf.java
Patch:
@@ -44,7 +44,7 @@
  */
 
 public class Rotf {
-    private static float EPSILON = 1.0e-7f;
+    private static final float EPSILON = 1.0e-7f;
 
     // Representation is a quaternion. Element 0 is the scalar part (=
     // cos(theta/2)), elements 1..3 the imaginary/"vector" part (=

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Vecf.java
Patch:
@@ -46,7 +46,7 @@
  */
 
 public class Vecf {
-    private float[] data;
+    private final float[] data;
 
     public Vecf(int n) {
         data = new float[n];

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Veci.java
Patch:
@@ -45,7 +45,7 @@
  */
 
 public class Veci {
-    private int[] data;
+    private final int[] data;
 
     public Veci(int n) {
         data = new int[n];

File: modules/GraphAPI/src/main/java/org/gephi/graph/api/GraphController.java
Patch:
@@ -60,13 +60,13 @@ public interface GraphController {
      *
      * @return the current graph model
      */
-    public GraphModel getGraphModel();
+    GraphModel getGraphModel();
 
     /**
      * Returns the graph model for the given <code>workspace</code>.
      *
      * @param workspace the workspace that graph model is to be returned
      * @return the <code>workspace</code>'s graph model
      */
-    public GraphModel getGraphModel(Workspace workspace);
+    GraphModel getGraphModel(Workspace workspace);
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/Issue.java
Patch:
@@ -59,6 +59,7 @@ public final class Issue {
     private final Throwable throwable;
     private final String message;
     private final Level level;
+
     /**
      * Constructs a new issue with a throwable and a level.
      * <p>

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/PropertiesAssociations.java
Patch:
@@ -98,10 +98,10 @@ public String getInfos() {
     }
 
     public enum NodeProperties {
-        X, Y, Z, R, G, B, COLOR, SIZE, ID, LABEL, FIXED, START, END, START_OPEN, END_OPEN;
+        X, Y, Z, R, G, B, COLOR, SIZE, ID, LABEL, FIXED, START, END, START_OPEN, END_OPEN
     }
 
     public enum EdgeProperties {
-        R, G, B, COLOR, WEIGHT, ID, LABEL, ALPHA, SOURCE, TARGET, START, END, START_OPEN, END_OPEN;
+        R, G, B, COLOR, WEIGHT, ID, LABEL, ALPHA, SOURCE, TARGET, START, END, START_OPEN, END_OPEN
     }
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/Report.java
Patch:
@@ -345,7 +345,7 @@ public boolean hasNext() {
         @Override
         public ReportEntry next() {
             if (pointer.startsWith(";")) {
-                return new ReportEntry(pointer.substring(1, pointer.length()));
+                return new ReportEntry(pointer.substring(1));
             } else {
                 int index = pointer.indexOf(";");
                 if (index == -1) {

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ElementFactoryImpl.java
Patch:
@@ -61,7 +61,8 @@ public ElementFactoryImpl(ImportContainerImpl container) {
 
     @Override
     public NodeDraftImpl newNodeDraft() {
-        return new NodeDraftImpl(container, String.valueOf(NODE_IDS.getAndIncrement()), nextSequentialNodeId.getAndIncrement());
+        return new NodeDraftImpl(container, String.valueOf(NODE_IDS.getAndIncrement()),
+            nextSequentialNodeId.getAndIncrement());
     }
 
     @Override

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/NodeDraftImpl.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class NodeDraftImpl extends ElementDraftImpl implements NodeDraft {
 
+    protected final int sequentialId;
     //Flag
     protected boolean createdAuto = false;
     //Viz attributes
@@ -59,8 +60,6 @@ public class NodeDraftImpl extends ElementDraftImpl implements NodeDraft {
     protected float size;
     protected boolean fixed;
 
-    protected final int sequentialId;
-
     public NodeDraftImpl(ImportContainerImpl container, String id, int sequentialId) {
         super(container, id);
         this.sequentialId = sequentialId;

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/DatabaseImporter.java
Patch:
@@ -58,12 +58,12 @@ public interface DatabaseImporter extends Importer {
      *
      * @return the database that is to be used to import
      */
-    public Database getDatabase();
+    Database getDatabase();
 
     /**
      * Sets the database description, connection details and queries
      *
      * @param database the database that is to be used to import
      */
-    public void setDatabase(Database database);
+    void setDatabase(Database database);
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/DatabaseImporterBuilder.java
Patch:
@@ -55,5 +55,5 @@ public interface DatabaseImporterBuilder extends ImporterBuilder {
      * @return a new database importer
      */
     @Override
-    public DatabaseImporter buildImporter();
+    DatabaseImporter buildImporter();
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/FileImporter.java
Patch:
@@ -57,17 +57,17 @@ public interface FileImporter extends Importer {
      *
      * @param reader the reader on data
      */
-    public void setReader(Reader reader);
+    void setReader(Reader reader);
 
     /**
      * Optional interface to implement for {@link FileImporter} classes that need to receive the source file instead of the {@link Reader}
      */
-    public interface FileAware {
+    interface FileAware {
         /**
          * Called before showing the {@link ImporterUI} and before executing the importer.
          *
          * @param file Source file
          */
-        public void setFile(File file);
+        void setFile(File file);
     }
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/FileImporterBuilder.java
Patch:
@@ -58,14 +58,14 @@ public interface FileImporterBuilder extends ImporterBuilder {
      * @return a new file importer
      */
     @Override
-    public FileImporter buildImporter();
+    FileImporter buildImporter();
 
     /**
      * Get default file types this importer can deal with.
      *
      * @return an array of file types this importer can read
      */
-    public FileType[] getFileTypes();
+    FileType[] getFileTypes();
 
     /**
      * Returns <code>true</code> if this importer can import
@@ -80,5 +80,5 @@ public interface FileImporterBuilder extends ImporterBuilder {
      * @return <code>true</code> if the importer is compatible with
      * <code>fileObject</code> or <code>false</code> otherwise
      */
-    public boolean isMatchingImporter(FileObject fileObject);
+    boolean isMatchingImporter(FileObject fileObject);
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/Importer.java
Patch:
@@ -65,20 +65,20 @@ public interface Importer {
      * @return <code>true</code> if the import is successful or
      * <code>false</code> if it has been cancelled
      */
-    public boolean execute(ContainerLoader loader);
+    boolean execute(ContainerLoader loader);
 
     /**
      * Returns the import container. The container is the import "result", all
      * data found during import are being pushed to the container.
      *
      * @return the import container
      */
-    public ContainerLoader getContainer();
+    ContainerLoader getContainer();
 
     /**
      * Returns the import report, filled with logs and potential issues.
      *
      * @return the import report
      */
-    public Report getReport();
+    Report getReport();
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/ImporterBuilder.java
Patch:
@@ -63,12 +63,12 @@ public interface ImporterBuilder {
      *
      * @return a new importer
      */
-    public Importer buildImporter();
+    Importer buildImporter();
 
     /**
      * Returns the name of this builder
      *
      * @return the name of this importer
      */
-    public String getName();
+    String getName();
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/WizardImporterBuilder.java
Patch:
@@ -55,5 +55,5 @@ public interface WizardImporterBuilder extends ImporterBuilder {
      * @return a new wizard importer
      */
     @Override
-    public WizardImporter buildImporter();
+    WizardImporter buildImporter();
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/processor/spi/Scaler.java
Patch:
@@ -59,5 +59,5 @@ public interface Scaler {
      *
      * @param container the container that is to be scaled to the right scale
      */
-    public void doScale(Container container);
+    void doScale(Container container);
 }

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java
Patch:
@@ -79,8 +79,8 @@ public class ImporterEdgeList implements DatabaseImporter {
     private String timeIntervalStart;
     private String timeIntervalEnd;
 
-    private NodeColumns nodeColumns = new NodeColumns();
-    private EdgeColumns edgeColumns = new EdgeColumns();
+    private final NodeColumns nodeColumns = new NodeColumns();
+    private final EdgeColumns edgeColumns = new EdgeColumns();
 
     @Override
     public boolean execute(ContainerLoader container) {

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -429,7 +429,6 @@ protected void edgeAttributes(StreamTokenizerWithMultilineLiterals streamTokeniz
                 if (streamTokenizer.ttype == '=') {
                     streamTokenizer.nextToken();
                     if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"') {
-                        ;
                     } else {
                         //System.err.println("couldn't find style at line " + streamTokenizer.lineno());
                         streamTokenizer.pushBack();

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java
Patch:
@@ -115,14 +115,14 @@ private ArrayList<Object> parseList(LineNumberReader reader) throws IOException
         ArrayList<Object> list = new ArrayList<>();
         char t = ' ';
         boolean readString = false;
-        String stringBuffer = new String();
+        String stringBuffer = "";
 
         while (reader.ready() && (t != ((char) -1))) {
             t = (char) reader.read();
             if (readString) {
                 if (t == '"') {
                     list.add(stringBuffer);
-                    stringBuffer = new String();
+                    stringBuffer = "";
                     readString = false;
                 } else {
                     stringBuffer += t;
@@ -153,7 +153,7 @@ private ArrayList<Object> parseList(LineNumberReader reader) throws IOException
                                     list.add(stringBuffer);
                                 }
                             }
-                            stringBuffer = new String();
+                            stringBuffer = "";
                         }
                         break;
                     default:

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterVNA.java
Patch:
@@ -175,7 +175,7 @@ private void importData(LineNumberReader reader) throws Exception {
                     state = State.NODE_PROPERTIES;
                     break;
                 case TIE_DATA_DEF:
-                    String tieDataLabels[] = line.split("[\\s,]+");
+                    String[] tieDataLabels = line.split("[\\s,]+");
                     tieDataColumns = new ColumnDraft[tieDataLabels.length];
                     tieAttributes = new Attributes[tieDataColumns.length];
                     if (tieDataColumns.length < 2) {
@@ -395,6 +395,7 @@ public static class EdgeWidthFunction {
 
         public final Function function;
         public final float coefficient;
+
         public EdgeWidthFunction(Function function, float coefficient) {
             this.function = function;
             this.coefficient = coefficient;

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/spreadsheet/ImporterSpreadsheetCSV.java
Patch:
@@ -46,6 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.io.IOException;
 import java.io.LineNumberReader;
 import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 import java.util.Arrays;
 import java.util.Collections;
 import org.apache.commons.csv.CSVParser;
@@ -64,7 +65,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class ImporterSpreadsheetCSV extends AbstractImporterSpreadsheet {
 
     protected char fieldDelimiter = ',';
-    protected Charset charset = Charset.forName("UTF-8");
+    protected Charset charset = StandardCharsets.UTF_8;
 
     @Override
     public SheetParser createParserWithoutHeaders() throws IOException {
@@ -107,7 +108,7 @@ private void autoDetectCharset() {
         try {
             FileInputStream is = new FileInputStream(file);
             CharsetToolkit charsetToolkit = new CharsetToolkit(is);
-            charsetToolkit.setDefaultCharset(Charset.forName("UTF-8"));
+            charsetToolkit.setDefaultCharset(StandardCharsets.UTF_8);
             charset = charsetToolkit.getCharset();
         } catch (Exception ex) {
         }

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/spreadsheet/process/SpreadsheetGeneralConfiguration.java
Patch:
@@ -125,11 +125,11 @@ public enum Mode {
 
         private final Set<String> specialColumnNames;
 
-        private Mode() {
+        Mode() {
             this.specialColumnNames = Collections.emptySet();
         }
 
-        private Mode(List<String> specialColumnNames) {
+        Mode(List<String> specialColumnNames) {
             this.specialColumnNames = Collections.unmodifiableSet(new HashSet<>(specialColumnNames));
         }
 

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/spreadsheet/sheets/csv/CSVSheetParser.java
Patch:
@@ -69,9 +69,8 @@ public Map<String, Integer> getHeaderMap() {
         if (map == null) {
             return Collections.emptyMap();
         } else {
-            if (map.containsKey(null)) {//Ignore columns without header
-                map.remove(null);
-            }
+            //Ignore columns without header
+            map.remove(null);
             return map;
         }
     }

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/DOTTest.java
Patch:
@@ -2,7 +2,6 @@
 
 import org.gephi.io.importer.api.Container;
 import org.gephi.io.importer.api.ContainerUnloader;
-import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.NodeDraft;
 import org.gephi.io.importer.impl.ImportContainerImpl;
 import org.junit.Assert;

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/GMLTest.java
Patch:
@@ -2,7 +2,6 @@
 
 import org.gephi.io.importer.api.Container;
 import org.gephi.io.importer.api.ContainerUnloader;
-import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.NodeDraft;
 import org.gephi.io.importer.impl.ImportContainerImpl;
 import org.junit.Assert;

File: modules/ImportPluginUI/src/main/java/org/gephi/ui/importer/plugin/ImporterVnaUI.java
Patch:
@@ -145,7 +145,7 @@ private void comboBoxSelectionChanged(ActionEvent e) {
     public void unsetup(boolean update) {
         if (update) {
             float coefficient = 1;
-            if (((EdgeWidthFunction.Function) comboBox.getSelectedItem()).equals(EdgeWidthFunction.Function.LINEAR)) {
+            if (comboBox.getSelectedItem().equals(EdgeWidthFunction.Function.LINEAR)) {
                 try {
                     coefficient = Float.parseFloat(textField.getText());
                 } catch (NumberFormatException e) {

File: modules/LayoutAPI/src/main/java/org/gephi/layout/spi/LayoutBuilder.java
Patch:
@@ -68,20 +68,20 @@ public interface LayoutBuilder {
      *
      * @return the display neame of the layout algorithm
      */
-    public String getName();
+    String getName();
 
     /**
      * User interface attributes (name, description, icon...) for all Layouts
      * built by this builder.
      *
      * @return a <code>LayoutUI</code> instance
      */
-    public LayoutUI getUI();
+    LayoutUI getUI();
 
     /**
      * Builds an instance of the Layout.
      *
      * @return a new <code>Layout</code> instance
      */
-    public Layout buildLayout();
+    Layout buildLayout();
 }

File: modules/LayoutAPI/src/test/java/org/gephi/layout/utils/MockLayout.java
Patch:
@@ -10,7 +10,7 @@
 
 public class MockLayout implements Layout {
 
-    private MockLayoutBuilder builder;
+    private final MockLayoutBuilder builder;
     private double angle;
 
     public MockLayout(MockLayoutBuilder builder) {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/Displacement.java
Patch:
@@ -49,7 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface Displacement {
 
-    public void setStep(float step);
+    void setStep(float step);
 
-    public void moveNode(Node node, ForceVector forceData);
+    void moveNode(Node node, ForceVector forceData);
 }

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/BarnesHut.java
Patch:
@@ -57,7 +57,7 @@ public class BarnesHut {
     /* theta is the parameter for Barnes-Hut opening criteria
      */
     private float theta = (float) 1.2;
-    private AbstractForce force;
+    private final AbstractForce force;
 
     public BarnesHut(AbstractForce force) {
         this.force = force;

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/QuadTree.java
Patch:
@@ -60,7 +60,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 interface AddBehaviour {
 
-    public boolean addNode(NodeProperties node);
+    boolean addNode(NodeProperties node);
 }
 
 /**

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHu.java
Patch:
@@ -57,7 +57,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = LayoutBuilder.class)
 public class YifanHu implements LayoutBuilder {
 
-    private YifanHuLayoutUI ui = new YifanHuLayoutUI();
+    private final YifanHuLayoutUI ui = new YifanHuLayoutUI();
 
     @Override
     public YifanHuLayout buildLayout() {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java
Patch:
@@ -77,7 +77,7 @@ public class YifanHuLayout extends AbstractLayout implements Layout {
     private float barnesHutTheta;
     private float convergenceThreshold;
     private boolean adaptiveCooling;
-    private Displacement displacement;
+    private final Displacement displacement;
     private double energy0;
     private double energy;
     private Graph graph;
@@ -472,8 +472,8 @@ public void setOptimalDistance(Float optimalDistance) {
      */
     public class ElectricalForce extends AbstractForce {
 
-        private float relativeStrength;
-        private float optimalDistance;
+        private final float relativeStrength;
+        private final float optimalDistance;
 
         public ElectricalForce(float relativeStrength, float optimalDistance) {
             this.relativeStrength = relativeStrength;

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuProportional.java
Patch:
@@ -57,7 +57,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = LayoutBuilder.class)
 public class YifanHuProportional implements LayoutBuilder {
 
-    private YifanHuProportionalLayoutUI ui = new YifanHuProportionalLayoutUI();
+    private final YifanHuProportionalLayoutUI ui = new YifanHuProportionalLayoutUI();
 
     @Override
     public YifanHuLayout buildLayout() {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/ForceAtlas2Builder.java
Patch:
@@ -58,7 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = LayoutBuilder.class)
 public class ForceAtlas2Builder implements LayoutBuilder {
 
-    private ForceAtlas2UI ui = new ForceAtlas2UI();
+    private final ForceAtlas2UI ui = new ForceAtlas2UI();
 
     @Override
     public String getName() {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/OperationNodeRepulse.java
Patch:
@@ -50,9 +50,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class OperationNodeRepulse extends Operation {
 
-    private Node n;
-    private RepulsionForce f;
-    private double coefficient;
+    private final Node n;
+    private final RepulsionForce f;
+    private final double coefficient;
 
     public OperationNodeRepulse(Node n, RepulsionForce f, double coefficient) {
         this.n = n;

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/fruchterman/FruchtermanReingoldBuilder.java
Patch:
@@ -56,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = LayoutBuilder.class)
 public class FruchtermanReingoldBuilder implements LayoutBuilder {
 
-    private FruchtermanReingoldLayoutUI ui = new FruchtermanReingoldLayoutUI();
+    private final FruchtermanReingoldLayoutUI ui = new FruchtermanReingoldLayoutUI();
 
     @Override
     public String getName() {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/Combine.java
Patch:
@@ -153,8 +153,8 @@ private void printPositions(Node[] nodes) {
         NumberFormat formatter = DecimalFormat.getInstance();
         formatter.setMaximumFractionDigits(2);
         for (Node node : nodes) {
-            String xStr = formatter.format((double) node.x);
-            String yStr = formatter.format((double) node.y);
+            String xStr = formatter.format(node.x);
+            String yStr = formatter.format(node.y);
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/DensityGrid.java
Patch:
@@ -69,8 +69,8 @@ public void init() {
 
         for (int i = -RADIUS; i <= RADIUS; i++) {
             for (int j = -RADIUS; j <= RADIUS; j++) {
-                fallOff[i + RADIUS][j + RADIUS] = (float) ((RADIUS - Math.abs((float) i)) / RADIUS)
-                    * (float) ((RADIUS - Math.abs((float) j)) / RADIUS);
+                fallOff[i + RADIUS][j + RADIUS] = ((RADIUS - Math.abs((float) i)) / RADIUS)
+                    * ((RADIUS - Math.abs((float) j)) / RADIUS);
             }
         }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/OpenOrdLayout.java
Patch:
@@ -186,8 +186,8 @@ public void initAlgo() {
                 ratio = Math.min(1f, ratio);
                 for (Node n : nodes) {
                     if (n.fixed) {
-                        n.x = (float) (n.x - shiftX) * ratio;
-                        n.y = (float) (n.y - shiftY) * ratio;
+                        n.x = (n.x - shiftX) * ratio;
+                        n.y = (n.y - shiftY) * ratio;
                     }
                 }
             }

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/Params.java
Patch:
@@ -84,7 +84,7 @@ public enum Params {
     private final Stage crunch;
     private final Stage simmer;
 
-    private Params(Stage initial, Stage liquid, Stage expansion, Stage cooldown, Stage crunch, Stage simmer) {
+    Params(Stage initial, Stage liquid, Stage expansion, Stage cooldown, Stage crunch, Stage simmer) {
         this.initial = initial;
         this.liquid = liquid;
         this.expansion = expansion;

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/Random.java
Patch:
@@ -56,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = LayoutBuilder.class)
 public class Random implements LayoutBuilder {
 
-    private RandomLayoutUI ui = new RandomLayoutUI();
+    private final RandomLayoutUI ui = new RandomLayoutUI();
 
     @Override
     public String getName() {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/RandomLayout.java
Patch:
@@ -59,7 +59,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class RandomLayout extends AbstractLayout implements Layout {
 
-    private Random random;
+    private final Random random;
     private Graph graph;
     private boolean converged;
     private double size;

File: modules/LongTaskAPI/src/main/java/org/gephi/utils/longtask/api/LongTaskErrorHandler.java
Patch:
@@ -50,5 +50,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface LongTaskErrorHandler {
 
-    public void fatalError(Throwable t);
+    void fatalError(Throwable t);
 }

File: modules/LongTaskAPI/src/main/java/org/gephi/utils/longtask/api/LongTaskExecutor.java
Patch:
@@ -174,7 +174,7 @@ public synchronized void execute(LongTask task, Runnable runnable) {
     public synchronized void cancel() {
         if (inBackground) {
             if (executor != null) {
-                RunningLongTask rlt = (RunningLongTask) currentTask;
+                RunningLongTask rlt = currentTask;
                 if (rlt != null) {
                     boolean res = rlt.cancel();
                     if (interruptCancel && !res) {
@@ -184,7 +184,7 @@ public synchronized void cancel() {
                 }
             }
         } else {
-            RunningLongTask rlt = (RunningLongTask) currentTask;
+            RunningLongTask rlt = currentTask;
             if (rlt != null) {
                 boolean res = rlt.cancel();
                 if (interruptCancel && !res) {
@@ -247,7 +247,7 @@ private class RunningLongTask implements Runnable {
         private final Runnable runnable;
         private Future<?> future;
         private ProgressTicket progress;
-        private LongTaskErrorHandler errorHandler;
+        private final LongTaskErrorHandler errorHandler;
 
         public RunningLongTask(LongTask task, Runnable runnable, String taskName, LongTaskErrorHandler errorHandler) {
             this.task = task;

File: modules/LongTaskAPI/src/main/java/org/gephi/utils/longtask/api/LongTaskListener.java
Patch:
@@ -51,5 +51,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface LongTaskListener {
 
-    public void taskFinished(LongTask task);
+    void taskFinished(LongTask task);
 }

File: modules/LongTaskAPI/src/main/java/org/gephi/utils/longtask/spi/LongTask.java
Patch:
@@ -56,12 +56,12 @@ public interface LongTask {
      *
      * @return <code>true</code> if the task has been sucessfully cancelled, <code>false</code> otherwise
      */
-    public boolean cancel();
+    boolean cancel();
 
     /**
      * Set the progress ticket for the long task. Can't be null.
      *
      * @param progressTicket the progress ticket for this task
      */
-    public void setProgressTicket(ProgressTicket progressTicket);
+    void setProgressTicket(ProgressTicket progressTicket);
 }

File: modules/LongTaskAPI/src/main/java/org/gephi/utils/progress/ProgressTicketProvider.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface ProgressTicketProvider {
 
-    public ProgressTicket createTicket(String taskName, Cancellable cancellable);
+    ProgressTicket createTicket(String taskName, Cancellable cancellable);
 }

File: modules/MostRecentFilesAPI/src/main/java/org/gephi/desktop/mrufiles/api/MostRecentFiles.java
Patch:
@@ -49,7 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public interface MostRecentFiles {
 
-    public void addFile(String absolutePath);
+    void addFile(String absolutePath);
 
-    public List<String> getMRUFileList();
+    List<String> getMRUFileList();
 }

File: modules/MostRecentFilesAPI/src/main/java/org/gephi/desktop/mrufiles/impl/MostRecentFilesImpl.java
Patch:
@@ -63,9 +63,9 @@ public class MostRecentFilesImpl implements MostRecentFiles {
     public static final String MRU_FILE_LIST_PROPERTY = "MRUFileList";
     protected static String DEFAULT_NODE_NAME = "prefs";
     protected String nodeName = null;
-    private EventListenerList listenerList;
-    private List<String> mruFileList;
-    private int maxSize;
+    private final EventListenerList listenerList;
+    private final List<String> mruFileList;
+    private final int maxSize;
 
     public MostRecentFilesImpl() {
         nodeName = "mrufiles";

File: modules/PerspectiveAPI/src/main/java/org/gephi/perspective/api/PerspectiveController.java
Patch:
@@ -68,21 +68,21 @@ public interface PerspectiveController {
      *
      * @return the currently selected perspective or <code>null</code>
      */
-    public Perspective getSelectedPerspective();
+    Perspective getSelectedPerspective();
 
     /**
      * Returns all perspectives installed. This is equivalent to
      * <code>Lookup.getDefault().lookupAll(Perspective.class)</code>.
      *
      * @return all installed perspectives
      */
-    public Perspective[] getPerspectives();
+    Perspective[] getPerspectives();
 
     /**
      * Switch the current perspective to the given perspective. Only one perspective
      * can be selected at a time.
      *
      * @param perspective the perspective to select
      */
-    public void selectPerspective(Perspective perspective);
+    void selectPerspective(Perspective perspective);
 }

File: modules/PerspectiveAPI/src/main/java/org/gephi/perspective/spi/Perspective.java
Patch:
@@ -65,19 +65,19 @@ public interface Perspective {
      *
      * @return the perspective display name
      */
-    public String getDisplayName();
+    String getDisplayName();
 
     /**
      * Return a unique identifier for this perspective.
      *
      * @return the name of the perspective
      */
-    public String getName();
+    String getName();
 
     /**
      * Return the icon of the perspective.
      *
      * @return the perspective's icon, or <code>null</code>
      */
-    public Icon getIcon();
+    Icon getIcon();
 }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportController.java
Patch:
@@ -133,8 +133,6 @@ private void sendSentryReport(Report report) {
         event.setExtra("Processors", report.getNumberOfProcessors());
         event.setExtra("Screen devices", report.getScreenDevices());
         event.setExtra("Screen size", report.getScreenSize());
-        event.setExtra("User description", report.getUserDescription()); // GDPR compliant?
-        event.setExtra("User email", report.getUserEmail()); // GDPR compliant?
         event.setExtra("VM", report.getVm());
         event.setExtra("OpenGL Vendor", report.getGlVendor());
         event.setExtra("OpenGL Renderer", report.getGlRenderer());

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/GephiReader.java
Patch:
@@ -44,6 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import javax.xml.stream.XMLStreamReader;
 import javax.xml.stream.events.XMLEvent;
+import org.gephi.project.api.GephiFormatException;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.impl.ProjectImpl;
 import org.gephi.project.impl.ProjectsImpl;

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/SaveTask.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.zip.ZipOutputStream;
 import javax.xml.stream.XMLOutputFactory;
 import javax.xml.stream.XMLStreamWriter;
+import org.gephi.project.api.GephiFormatException;
 import org.gephi.project.api.Project;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.impl.WorkspaceProviderImpl;

File: modules/ImportPlugin/src/test/java/org/gephi/io/importer/plugin/file/SpreadsheetTest.java
Patch:
@@ -599,7 +599,7 @@ private void checkEdgesSpreadsheet(boolean ignoreId) throws IOException {
         try {
             expected = new String(Files.readAllBytes(Paths
                 .get(getClass().getResource("/org/gephi/io/importer/plugin/file/spreadsheet/expected/" +
-                    testName.getMethodName().replace("_AutoDetectImporter", "") + "_edges.csv").toURI()))).trim();
+                    testName.getMethodName().replace("_AutoDetectImporter", "") + "_edges.csv").toURI()))).trim().replace("\r", "");
         } catch (URISyntaxException e) {
             e.printStackTrace();
         }
@@ -625,7 +625,7 @@ private void checkNodesSpreadsheet() throws IOException {
             expected = new String(Files.readAllBytes(Paths
                 .get(getClass().getResource(
                     "/org/gephi/io/importer/plugin/file/spreadsheet/expected/" + testName.getMethodName() +
-                        "_nodes.csv").toURI()))).trim();
+                        "_nodes.csv").toURI()))).trim().replace("\r", "");
         } catch (URISyntaxException e) {
             e.printStackTrace();
         }

File: modules/GraphAPI/src/test/java/org/gephi/graph/GraphGenerator.java
Patch:
@@ -65,8 +65,9 @@ public GraphGenerator generateTinyGraph() {
 
     public GraphGenerator addIntNodeColumn() {
         graphModel.getNodeTable().addColumn(INT_COLUMN, Integer.class);
+        int age = 10;
         for (Node node : graphModel.getGraph().getNodes()) {
-            node.setAttribute(INT_COLUMN, (int) (Math.random() * 100));
+            node.setAttribute(INT_COLUMN, age++);
         }
         return this;
     }

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyAttributePersistenceProvider.java
Patch:
@@ -80,7 +80,7 @@ public class LegacyAttributePersistenceProvider implements WorkspaceXMLPersisten
 
     @Override
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {
-        throw new UnsupportedOperationException("Not supported.");
+
     }
 
     @Override

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyAttributeRowsPersistenceProvider.java
Patch:
@@ -67,7 +67,7 @@ public class LegacyAttributeRowsPersistenceProvider implements WorkspaceXMLPersi
 
     @Override
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {
-        throw new UnsupportedOperationException("Not supported.");
+
     }
 
     @Override

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java
Patch:
@@ -67,7 +67,7 @@ public class LegacyDataPersistenceProvider implements WorkspaceXMLPersistencePro
 
     @Override
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {
-        throw new UnsupportedOperationException("Not supported.");
+
     }
 
     @Override

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyGraphPersistenceProvider.java
Patch:
@@ -65,7 +65,7 @@ public class LegacyGraphPersistenceProvider implements WorkspaceXMLPersistencePr
 
     @Override
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {
-        throw new UnsupportedOperationException("Not supported.");
+
     }
 
     @Override

File: modules/ProjectAPI/src/main/java/org/gephi/workspace/impl/WorkspaceImpl.java
Patch:
@@ -91,7 +91,7 @@ public Lookup getLookup() {
     }
 
     @Override
-    public Project getProject() {
+    public ProjectImpl getProject() {
         return project;
     }
 

File: modules/ProjectAPI/src/test/java/org/gephi/project/io/utils/GephiFormat.java
Patch:
@@ -10,6 +10,7 @@
 import javax.xml.stream.XMLStreamException;
 import javax.xml.stream.XMLStreamReader;
 import javax.xml.stream.XMLStreamWriter;
+import javax.xml.stream.events.XMLEvent;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspaceXMLPersistenceProvider;
 import org.gephi.workspace.impl.WorkspaceImpl;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/selection/SelectionManager.java
Patch:
@@ -131,6 +131,7 @@ public void setDraggingMouseSelection() {
     }
 
     public void setCustomSelection() {
+        engine.setRectangleSelection(false);
         vizConfig.setSelectionEnable(false);
         vizConfig.setDraggingEnable(false);
         vizConfig.setCustomSelection(true);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/MergeNodes.java
Patch:
@@ -61,15 +61,13 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * <p>Nodes manipulator that merges 2 or more nodes</p>
- * <p>
  * The behaviour is:
  * <ul>
  * <li>Merged nodes are deleted if desired, and one new node is created</li>
  * <li>Edges of all the nodes are assigned to the new node</li>
  * <li>Each column uses an strategy to reduce the rows values to one value</li>
  * <li></li>
  * </ul>
- * </p>
  * @author Eduardo Ramos
  */
 public class MergeNodes extends BasicNodesManipulator {

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/celleditors/AttributeTypesSupportCellEditor.java
Patch:
@@ -49,7 +49,6 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.border.Border;
 import javax.swing.border.LineBorder;
 import org.gephi.desktop.datalab.utils.GraphModelProvider;
-import org.gephi.desktop.datalab.utils.stringconverters.DoubleStringConverter;
 import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.TimeFormat;
 import org.gephi.graph.api.types.IntervalMap;
@@ -60,7 +59,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class AttributeTypesSupportCellEditor extends DefaultCellEditor {
 

File: modules/DesktopProgress/src/main/java/org/gephi/desktop/progress/ProgressTicketImpl.java
Patch:
@@ -82,7 +82,7 @@ public void finish() {
 
     /**
      * Finish the task and display a statusbar message
-     * @param finishMessage 
+     * @param finishMessage Finish message
      */
     @Override
     public void finish(String finishMessage) {
@@ -106,7 +106,7 @@ public void progress() {
 
     /**
      * Notify the user about completed workunits.
-     * @param a cumulative number of workunits completed so far
+     * @param workunit cumulative number of workunits completed so far
      */
     @Override
     public void progress(int workunit) {
@@ -122,7 +122,7 @@ public void progress(int workunit) {
 
     /**
      * Notify the user about progress by showing message with details.
-     * @param details about the status of the task
+     * @param message details about the status of the task
      */
     @Override
     public void progress(String message) {

File: modules/LayoutAPI/src/main/java/org/gephi/layout/spi/Layout.java
Patch:
@@ -54,7 +54,7 @@ Development and Distribution License("CDDL") (collectively, the
  * properly define the various <code>LayoutProperty</code> returned by the
  * {@link #getProperties()} method and provide getter and setter for each.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  * @see LayoutBuilder
  */
 public interface Layout {
@@ -93,7 +93,6 @@ public interface Layout {
     /**
      * The properties for this layout.
      * @return              the layout properties
-     * @throws NoSuchMethodException 
      */
     public LayoutProperty[] getProperties();
 

File: modules/LayoutAPI/src/main/java/org/gephi/layout/spi/LayoutBuilder.java
Patch:
@@ -58,7 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
  * the RotateLayout class. The only difference is the angle provided by the
  * LayoutBuilder on the time of instantiation of the RotateLayout object.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public interface LayoutBuilder {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/AbstractLayout.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Base class for layout algorithms.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public abstract class AbstractLayout implements Layout {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/ForceLayoutData.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class ForceLayoutData extends ForceVector {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/AbstractForce.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public abstract class AbstractForce {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/Displacement.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public interface Displacement {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/ForceVector.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class ForceVector implements LayoutData {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/ProportionalDisplacement.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
  * The movement of the node is in the direction of the force and it's
  * proportional to is module.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class ProportionalDisplacement implements Displacement {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/StepDisplacement.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * The node is moved a fixed distance (step) in the direction of the force.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class StepDisplacement implements Displacement {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/BarnesHut.java
Patch:
@@ -49,7 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Barnes-Hut's O(n log n) force calculation algorithm.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class BarnesHut {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/QuadTree.java
Patch:
@@ -58,7 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.spi.LayoutData;
 
 /**
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class QuadTree implements Node {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHu.java
Patch:
@@ -52,7 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 @ServiceProvider(service = LayoutBuilder.class)
 public class YifanHu implements LayoutBuilder {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java
Patch:
@@ -63,7 +63,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Hu's basic algorithm
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class YifanHuLayout extends AbstractLayout implements Layout {
 
@@ -437,7 +437,7 @@ public void setInitialStep(Float initialStep) {
     /**
      * Fa = (n2 - n1) * ||n2 - n1|| / K
      *
-     * @author Helder Suzuki <heldersuzuki@gephi.org>
+     * @author Helder Suzuki
      */
     public class SpringForce extends AbstractForce {
 
@@ -468,7 +468,7 @@ public Float getOptimalDistance() {
     /**
      * Fr = -C*K*K*(n2-n1)/||n2-n1||
      *
-     * @author Helder Suzuki <heldersuzuki@gephi.org>
+     * @author Helder Suzuki
      */
     public class ElectricalForce extends AbstractForce {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuProportional.java
Patch:
@@ -52,7 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 @ServiceProvider(service = LayoutBuilder.class)
 public class YifanHuProportional implements LayoutBuilder {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas/ForceAtlas.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 @ServiceProvider(service = LayoutBuilder.class)
 public class ForceAtlas implements LayoutBuilder {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/Random.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 @ServiceProvider(service = LayoutBuilder.class)
 public class Random implements LayoutBuilder {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/RandomLayout.java
Patch:
@@ -55,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class RandomLayout extends AbstractLayout implements Layout {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/rotate/Rotate.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 @ServiceProvider(service = LayoutBuilder.class)
 public class Rotate implements LayoutBuilder {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/rotate/RotateLayout.java
Patch:
@@ -55,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Sample layout that simply rotates the graph.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public class RotateLayout extends AbstractLayout implements Layout {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/AbstractScaleLayout.java
Patch:
@@ -55,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Sample layout that scales the graph.
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>
+ * @author Helder Suzuki
  */
 public abstract class AbstractScaleLayout extends AbstractLayout implements Layout {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/Contract.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>>
+ * @author Helder Suzuki
  */
 @ServiceProvider(service = LayoutBuilder.class)
 public class Contract implements LayoutBuilder {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/Expand.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Helder Suzuki <heldersuzuki@gephi.org>>
+ * @author Helder Suzuki
  */
 @ServiceProvider(service = LayoutBuilder.class)
 public class Expand implements LayoutBuilder {

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/AttributeColumnsController.java
Patch:
@@ -362,7 +362,7 @@ public interface AttributeColumnsController {
 
     /**
      * <p>Calculates all statistics at once from a number/number list column using <code>MathUtils</code> class.</p>
-     * <p>Returns an array of <b>length=8</b> of <code>BigDecimal</code> numbers with the results in the following order: 
+     * Returns an array of <b>length=8</b> of <code>BigDecimal</code> numbers with the results in the following order: 
      * <ol>
      * <li>average</li>
      * <li>first quartile (Q1)</li>
@@ -373,7 +373,6 @@ public interface AttributeColumnsController {
      * <li>minimumValue</li>
      * <li>maximumValue</li>
      * </ol>
-     * </p>
      * <p>The column can only be a number/number list column.</p>
      * <p>Otherwise, a IllegalArgumentException will be thrown.</p>
      * @param table Table of the column

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Rotf.java
Patch:
@@ -239,7 +239,7 @@ public void toMatrix(Mat4f mat) {
   /** Turns the upper left 3x3 of the passed matrix into a rotation.
       Implementation from Watt and Watt, <u>Advanced Animation and
       Rendering Techniques</u>.
-      @see gleem.linalg.Mat4f#getRotation */
+      @see org.gephi.lib.gleem.linalg.Mat4f#getRotation */
   public void fromMatrix(Mat4f mat) {
     // FIXME: Should reimplement to follow Horn's advice of using
     // eigenvector decomposition to handle roundoff error in given

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Vec2f.java
Patch:
@@ -68,7 +68,7 @@ public void set(float x, float y) {
     this.y = y;
   }
 
-  /** Sets the ith component, 0 <= i < 2 */
+  /** Sets the ith component, 0 &lt;= i &lt; 2 */
   public void set(int i, float val) {
     switch (i) {
     case 0: x = val; break;
@@ -77,7 +77,7 @@ public void set(int i, float val) {
     }
   }
 
-  /** Gets the ith component, 0 <= i < 2 */
+  /** Gets the ith component, 0 &lt;= i &lt; 2 */
   public float get(int i) {
     switch (i) {
     case 0: return x;

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Vec3d.java
Patch:
@@ -42,7 +42,7 @@ public void set(double x, double y, double z) {
     this.z = z;
   }
 
-  /** Sets the ith component, 0 <= i < 3 */
+  /** Sets the ith component, 0 &lt;= i &lt; 3 */
   public void set(int i, double val) {
     switch (i) {
     case 0: x = val; break;
@@ -52,7 +52,7 @@ public void set(int i, double val) {
     }
   }
 
-  /** Gets the ith component, 0 <= i < 3 */
+  /** Gets the ith component, 0 &lt;= i &lt; 3 */
   public double get(int i) {
     switch (i) {
     case 0: return x;

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Vec3f.java
Patch:
@@ -82,7 +82,7 @@ public void set(float x, float y, float z) {
     this.z = z;
   }
 
-  /** Sets the ith component, 0 <= i < 3 */
+  /** Sets the ith component, 0 &lt;= i &lt; 3 */
   public void set(int i, float val) {
     switch (i) {
     case 0: x = val; break;
@@ -92,7 +92,7 @@ public void set(int i, float val) {
     }
   }
 
-  /** Gets the ith component, 0 <= i < 3 */
+  /** Gets the ith component, 0 &lt;= i &lt; 3 */
   public float get(int i) {
     switch (i) {
     case 0: return x;

File: modules/Gleem/src/main/java/org/gephi/lib/gleem/linalg/Vec4f.java
Patch:
@@ -72,7 +72,7 @@ public void set(float x, float y, float z, float w) {
     this.w = w;
   }
 
-  /** Sets the ith component, 0 <= i < 4 */
+  /** Sets the ith component, 0 &lt;= i &lt; 4 */
   public void set(int i, float val) {
     switch (i) {
     case 0: x = val; break;
@@ -83,7 +83,7 @@ public void set(int i, float val) {
     }
   }
 
-  /** Gets the ith component, 0 <= i < 4 */
+  /** Gets the ith component, 0 &lt;= i &lt; 4 */
   public float get(int i) {
     switch (i) {
     case 0: return x;

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/ClusteringCoefficient.java
Patch:
@@ -141,7 +141,7 @@ public void setArray(EdgeWrapper[] array) {
 
     /**
      *
-     * @param pArray
+     * @param array
      */
     ArrayWrapper(int ID, EdgeWrapper[] array) {
         this.array = array;
@@ -154,7 +154,7 @@ public void setID(int ID) {
 
     /**
      *
-     * @param pIndex
+     * @param index
      * @return
      */
     public int get(int index) {

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JRangeSlider.java
Patch:
@@ -186,7 +186,7 @@ private static class JRangeSliderWindowsUI extends WindowsSliderUI {
 
         /**
          * Constructs a RangeSliderUI for the specified slider component.
-         * @param b RangeSlider
+         * @param slider RangeSlider
          */
         public JRangeSliderWindowsUI(JSlider slider) {
             super(slider);
@@ -754,7 +754,7 @@ private static class JRangeSliderBasicUI extends BasicSliderUI {
 
         /**
          * Constructs a RangeSliderUI for the specified slider component.
-         * @param b RangeSlider
+         * @param slider RangeSlider
          */
         public JRangeSliderBasicUI(JSlider slider) {
             super(slider);

File: modules/UIComponents/src/main/java/org/gephi/ui/components/richtooltip/JRichTooltipPanel.java
Patch:
@@ -71,7 +71,7 @@ public RichTooltipPanelUI getUI() {
     }
 
     /**
-     * Sets the look and feel (L&F) object that renders this component.
+     * Sets the look and feel (L&amp;F) object that renders this component.
      *
      * @param ui
      *            The UI delegate.

File: modules/UIComponents/src/main/java/org/gephi/ui/components/splineeditor/SplineEditor.java
Patch:
@@ -52,9 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.windows.WindowManager;
 
 /**
- * Adaptation of the SwingX demo SplineEditor. Used to get a
- * {@link Interpolator} for computing.
- * <p>
+ * Adaptation of the SwingX demo SplineEditor. Used to get a Interpolator for computing.
  * <a href="http://www.jroller.com/gfx/entry/swing_demos_animations_and_swing">Romain Guy's article</a>
  *
  * @author Mathieu Bastian

File: modules/UIUtils/src/main/java/org/gephi/ui/utils/IntervalBoundValidator.java
Patch:
@@ -55,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class IntervalBoundValidator implements Validator<String> {
 
     /**
-     * If not null, interval start <= end is also validated.
+     * If not null, interval start &lt;= end is also validated.
      */
     private JTextComponent intervalStartTextField = null;
 

File: modules/Utils/src/main/java/org/gephi/utils/CharsetToolkit.java
Patch:
@@ -141,7 +141,7 @@ public Charset getDefaultCharset() {
 
     /**
      * <p>Guess the encoding of the provided buffer.</p>
-     * If Byte Order Markers are encountered at the beginning of the buffer, we immidiately
+     * <p>If Byte Order Markers are encountered at the beginning of the buffer, we immidiately
      * return the charset implied by this BOM. Otherwise, the file would not be a human
      * readable text file.</p>
      *

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/AbstractProcessor.java
Patch:
@@ -45,7 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.util.HashSet;
 import java.util.Set;
-import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -228,7 +228,7 @@ protected void process(ContainerUnloader container, Workspace workspace) {
 
             Edge edge = graph.getEdge(source, target, edgeType);
 
-            if (edgesMergeStrategy == EdgeMergeStrategy.NO_MERGE) {
+            if (edge != null && edgesMergeStrategy == EdgeMergeStrategy.NO_MERGE) {
                 //Undirected and directed edges are incompatible, check for them or we could get an exception:
                 final Edge incompatibleEdge = findIncompatibleEdge(graph, source, target, createDirected, edgeType);
                 if (incompatibleEdge == null) {

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/spreadsheet/SpreadsheetUtils.java
Patch:
@@ -112,6 +112,7 @@ public static CSVParser configureCSVParser(File file, Character fieldSeparator,
 
         CSVFormat csvFormat = CSVFormat.DEFAULT
                 .withDelimiter(fieldSeparator)
+                .withEscape('\\')
                 .withIgnoreEmptyLines(true)
                 .withNullString("")
                 .withIgnoreSurroundingSpaces(true)

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/edge/EdgeTypeBuilder.java
Patch:
@@ -43,6 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Objects;
 import javax.swing.Icon;
 import javax.swing.JPanel;
 import org.gephi.filters.api.FilterLibrary;
@@ -119,7 +120,7 @@ public boolean init(Graph graph) {
 
         @Override
         public boolean evaluate(Graph graph, Edge edge) {
-            return type.equals(edge.getType());
+            return Objects.equals(type, edge.getType());
         }
 
         @Override

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterModelPersistenceProvider.java
Patch:
@@ -280,7 +280,9 @@ private Query readQuery(XMLStreamReader reader, FilterModelImpl model, Serializa
                 query = new FilterQueryImpl(builder, filter);
             }
 
-            query.setName(queryName);
+            if(queryName != null) {
+                query.setName(queryName);
+            }
 
             FilterProperty property = null;
             boolean end = false;

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/GraphDensityUI.java
Patch:
@@ -52,9 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = StatisticsUI.class)
 public class GraphDensityUI implements StatisticsUI {
 
-    /** */
     private GraphDensityPanel panel;
-    /** */
     private GraphDensity graphDensity;
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/octree/Octree.java
Patch:
@@ -418,7 +418,7 @@ public boolean hasNext() {
                     nodesLength = octant.nodesLength;
                 }
             }
-            return true;
+            return pointer != null;
         }
 
         @Override
@@ -520,7 +520,7 @@ public boolean hasNext() {
                     pointer = edges[edgeId++];
                 }
                 if (pointer == null) {
-                    if (nodeItr.hasNext()) {
+                    if (nodeItr != null && nodeItr.hasNext()) {
                         NodeModel node = nodeItr.next();
                         edges = node.getEdges();
                         edgeLength = edges.length;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/octree/Octree.java
Patch:
@@ -476,7 +476,7 @@ public boolean hasNext() {
                     nodesLength = octant.nodesLength;
                 }
             }
-            return true;
+            return pointer != null;
         }
 
         @Override
@@ -530,7 +530,7 @@ public boolean hasNext() {
                     }
                 }
             }
-            return true;
+            return pointer != null;
         }
 
         @Override

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/QueryNode.java
Patch:
@@ -203,6 +203,7 @@ private void duplicateQuery(FilterController filterController, Query parent, Que
             FilterBuilder builder = filterController.getModel().getLibrary().getBuilder(filter);
 
             Query childQuery = filterController.createQuery(builder);
+            childQuery.setName(child.getName());
 
             Filter filterCopy = childQuery.getFilter();
             FilterProperty[] filterProperties = filter.getProperties();
@@ -212,7 +213,7 @@ private void duplicateQuery(FilterController filterController, Query parent, Que
                     filterCopyProperties[i].setValue(filterProperties[i].getValue());
                 }
             }
-
+            
             if (parent == null) {
                 filterController.add(childQuery);
             } else {

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -168,7 +168,7 @@ public void add(Query query) {
             model.addFirst(absQuery);
 
             //Init filters with default graph
-            Graph graph = null;
+            Graph graph;
             if (model != null && model.getGraphModel() != null) {
                 graph = model.getGraphModel().getGraph();
             } else {
@@ -208,7 +208,7 @@ public void rename(Query query, String name) {
     public void setSubQuery(Query query, Query subQuery) {
         //Init subquery when new filter
         if (subQuery.getParent() == null && subQuery != model.getCurrentQuery()) {
-            Graph graph = null;
+            Graph graph;
             if (model != null && model.getGraphModel() != null) {
                 graph = model.getGraphModel().getGraph();
             } else {

File: modules/FiltersImpl/src/main/java/org/gephi/filters/GenericPropertyEditor.java
Patch:
@@ -69,6 +69,7 @@ public String getAsText() {
         if (val != null) {
             ByteArrayOutputStream bos = null;
             ObjectOutputStream oos = null;
+            //FIXME: using java serialization is a bit dangerous, change this but keep compatibility with old saved files
             try {
                 bos = new ByteArrayOutputStream();
                 oos = new ObjectOutputStream(bos);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/InterEdgesBuilder.java
Patch:
@@ -175,7 +175,7 @@ public boolean evaluate(Graph graph, Edge edge) {
             Object destValue = partition.getValue(edge.getTarget(), graph);
             srcValue = srcValue == null ? NULL : srcValue;
             destValue = destValue == null ? NULL : destValue;
-            return parts.contains(srcValue) && parts.contains(destValue) && !srcValue.equals(destValue);
+            return parts.contains(srcValue) && parts.contains(destValue) && srcValue.equals(destValue);
         }
 
         @Override

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/IntraEdgesBuilder.java
Patch:
@@ -175,7 +175,7 @@ public boolean evaluate(Graph graph, Edge edge) {
             Object destValue = partition.getValue(edge.getTarget(), graph);
             srcValue = srcValue == null ? NULL : srcValue;
             destValue = destValue == null ? NULL : destValue;
-            return parts.contains(srcValue) && parts.contains(destValue) && srcValue.equals(destValue);
+            return parts.contains(srcValue) && parts.contains(destValue) && !srcValue.equals(destValue);
         }
     }
 }

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PreviewModelImpl.java
Patch:
@@ -392,7 +392,7 @@ public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
             String propertyName = property.getName();
             Object propertyValue = property.getValue();
             if (propertyValue != null) {
-                String text = Serialization.getValueAsText(propertyValue);
+                String text = Serialization.getValueAsText(propertyValue, property.getType());
                 if (text != null) {
                     writer.writeStartElement("previewproperty");
                     writer.writeAttribute("name", propertyName);
@@ -416,7 +416,7 @@ public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
             Object value = simpleValueEntry.getValue();
             if (value != null) {
                 Class clazz = value.getClass();
-                String text = Serialization.getValueAsText(value);
+                String text = Serialization.getValueAsText(value, clazz);
                 if (text != null) {
                     writer.writeStartElement("previewsimplevalue");
                     writer.writeAttribute("name", simpleValueEntry.getKey());

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -291,7 +291,7 @@ public void selectVisible(Query query) {
         } else {
             VisualizationController visController = Lookup.getDefault().lookup(VisualizationController.class);
             if (visController != null) {
-                visController.selectNodes(null);
+                visController.resetSelection();
             }
         }
     }

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterThread.java
Patch:
@@ -167,6 +167,7 @@ private void select(AbstractQueryImpl query) {
         if (running) {
             VisualizationController visController = Lookup.getDefault().lookup(VisualizationController.class);
             if (visController != null) {
+                visController.resetSelection();
                 visController.selectNodes(result.getNodes().toArray());
                 visController.selectEdges(result.getEdges().toArray());
             }

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -101,6 +101,7 @@ public void resetPropertiesValues() {
 
     @Override
     public void initAlgo() {
+        ensureSafeLayoutNodePositions(graphModel);
     }
 
     private double getEdgeWeight(Edge edge, boolean isDynamicWeight, Interval interval) {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/ForceAtlas2.java
Patch:
@@ -58,6 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.concurrent.Executors;
 import java.util.concurrent.Future;
 import org.gephi.graph.api.Interval;
+import org.gephi.layout.plugin.AbstractLayout;
 import org.openide.util.Exceptions;
 
 /**
@@ -95,6 +96,8 @@ public ForceAtlas2(ForceAtlas2Builder layoutBuilder) {
 
     @Override
     public void initAlgo() {
+        AbstractLayout.ensureSafeLayoutNodePositions(graphModel);
+        
         speed = 1.;
         speedEfficiency = 1.;
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -145,7 +145,7 @@ public class VizConfig {
     public static final int DEFAULT_OCTREE_DEPTH = 5;
     public static final int DEFAULT_OCTREE_WIDTH = 50000;
     public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;
-    public static final boolean DEFAULT_LABEL_MIPMAP = false;//Disabled since it works bad with Intel GPUs. See https://github.com/gephi/gephi/issues/1494 (Some label characters fade away when zooming out)
+    public static final boolean DEFAULT_LABEL_MIPMAP = true;
     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;
     public static final boolean DEFAULT_LABEL_FRACTIONAL_METRICS = true;
     public static final boolean DEFAULT_VIZBAR = true;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GLAbstractListener.java
Patch:
@@ -251,6 +251,8 @@ public void init(GLAutoDrawable drawable) {
         graphicalConfiguration = new GraphicalConfiguration();
         graphicalConfiguration.checkGeneralCompatibility(gl);
 
+        vizController.getTextManager().reinitRenderers();
+        
         //Reinit viewport, to ensure reshape to perform
         viewport = Buffers.newDirectIntBuffer(4);
 

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TickParameters.java
Patch:
@@ -59,9 +59,9 @@ public enum TickType {
     private int width, height;
     private int fontSize = 12;
     private double fontFactor = 6.;
-    private Font font = new Font("Helvetica", Font.PLAIN, fontSize);
-        private Color[] realColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A), new Color(0x1E1E1E)};
-    private Color[] dateColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A)};
+    private final Font font = new Font("Helvetica", Font.PLAIN, fontSize);
+    private final Color[] realColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A), new Color(0x1E1E1E)};
+    private final Color[] dateColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A)};
 
     public TickParameters(TickType type) {
         this.type = type;

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimelineTooltip.java
Patch:
@@ -178,7 +178,7 @@ private RichTooltip buildTooltip() {
         richTooltip.addDescriptionSection(NbBundle.getMessage(TimelineTooltip.class, "TimelineTooltip.max") + ": " + getMax());
 
         //Title
-        richTooltip.setTitle(NbBundle.getMessage(TimelineTooltip.class, "TimelineTooltip.position") + ": " + getPosition());
+        richTooltip.setTitle(getPosition());
 
         //Img
         richTooltip.setMainImage(ImageUtilities.loadImage("org/gephi/desktop/timeline/resources/info.png"));

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -145,7 +145,7 @@ public class VizConfig {
     public static final int DEFAULT_OCTREE_DEPTH = 5;
     public static final int DEFAULT_OCTREE_WIDTH = 50000;
     public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;
-    public static final boolean DEFAULT_LABEL_MIPMAP = true;
+    public static final boolean DEFAULT_LABEL_MIPMAP = false;//Disabled since it works bad with Intel GPUs. See https://github.com/gephi/gephi/issues/1494 (Some label characters fade away when zooming out)
     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;
     public static final boolean DEFAULT_LABEL_FRACTIONAL_METRICS = true;
     public static final boolean DEFAULT_VIZBAR = true;

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/AbstractAttributeColumnPropertyEditor.java
Patch:
@@ -158,7 +158,9 @@ public boolean isDynamicNumberColumn(Column column) {
     }
 
     public boolean isNumberColumn(Column column) {
-        return AttributeUtils.isSimpleType(column.getTypeClass()) && AttributeUtils.isNumberType(column.getTypeClass());
+        return AttributeUtils.isNumberType(column.getTypeClass())
+                && !AttributeUtils.isArrayType(column.getTypeClass())
+                && !AttributeUtils.isDynamicType(column.getTypeClass());
     }
 
     public boolean isStringColumn(Column column) {

File: modules/DesktopGenerate/src/main/java/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -62,6 +62,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.DialogDescriptor;
 import org.openide.DialogDisplayer;
 import org.openide.NotifyDescriptor;
+import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -120,7 +121,7 @@ public void stateChanged(ChangeEvent e) {
 
             @Override
             public void fatalError(Throwable t) {
-                Logger.getLogger("").log(Level.SEVERE, "", t.getCause() != null ? t.getCause() : t);
+                Exceptions.printStackTrace(t);
             }
         };
 

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/ProjectControllerUIImpl.java
Patch:
@@ -76,6 +76,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.awt.StatusDisplayer;
 import org.openide.filesystems.FileObject;
 import org.openide.filesystems.FileUtil;
+import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.NbPreferences;
@@ -126,7 +127,7 @@ public void fatalError(Throwable t) {
 //                NotifyDescriptor.Message msg = new NotifyDescriptor.Message(message, NotifyDescriptor.WARNING_MESSAGE);
 //                DialogDisplayer.getDefault().notify(msg);
 
-                Logger.getLogger("").log(Level.SEVERE, "", t.getCause());
+                Exceptions.printStackTrace(t);
             }
         });
         longTaskExecutor.setLongTaskListener(new LongTaskListener() {

File: modules/LayoutAPI/src/main/java/org/gephi/layout/LayoutModelImpl.java
Patch:
@@ -66,6 +66,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.utils.longtask.api.LongTaskExecutor;
 import org.gephi.utils.longtask.api.LongTaskListener;
 import org.gephi.utils.longtask.spi.LongTask;
+import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 
 /**
@@ -99,7 +100,7 @@ public void taskFinished(LongTask task) {
         executor.setDefaultErrorHandler(new LongTaskErrorHandler() {
             @Override
             public void fatalError(Throwable t) {
-                Logger.getLogger("").log(Level.SEVERE, "", t.getCause() != null ? t.getCause() : t);
+                Exceptions.printStackTrace(t);
             }
         });
     }

File: modules/LongTaskAPI/src/main/java/org/gephi/utils/longtask/api/LongTaskExecutor.java
Patch:
@@ -272,7 +272,7 @@ public void run() {
             currentTask = this;
             try {
                 runnable.run();
-            } catch (Exception e) {
+            } catch (Throwable e) {
                 LongTaskErrorHandler err = errorHandler;
                 finished(this);
                 if (progress != null) {

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -601,6 +601,7 @@ private void writeEdges(XMLStreamWriter xmlWriter, Graph graph) throws Exception
             xmlWriter.writeEndElement();
             Progress.progress(progress);
             if (cancel) {
+                edgeIterable.doBreak();
                 break;
             }
         }

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/GraphDistance.java
Patch:
@@ -208,7 +208,8 @@ public Map<String, double[]> calculateDistanceMetrics(Graph graph, HashMap<Node,
         int count = 0;
 
         int totalPaths = 0;
-        for (Node s : graph.getNodes()) {
+        NodeIterable nodesIterable = graph.getNodes();
+        for (Node s : nodesIterable) {
             Stack<Node> S = new Stack<>();
 
             LinkedList<Node>[] P = new LinkedList[n];
@@ -279,6 +280,7 @@ public Map<String, double[]> calculateDistanceMetrics(Graph graph, HashMap<Node,
             }
             count++;
             if (isCanceled) {
+                nodesIterable.doBreak();
                 return metrics;
             }
             Progress.progress(progress, count);

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -471,7 +471,6 @@ public Partition getPartition(Column column) {
 
         protected void refreshFunctions() {
             graph.readLock();
-
             try {
                 boolean graphHasChanged = graphObserver.isNew() || graphObserver.hasGraphChanged();
                 if (graphHasChanged) {
@@ -482,7 +481,7 @@ protected void refreshFunctions() {
                 }
                 refreshAttributeFunctions(graphHasChanged);
             } finally {
-                graph.readUnlock();
+                graph.readUnlockAll();
             }
         }
 
@@ -648,6 +647,7 @@ private boolean isPartition(Graph graph, Column column) {
                     Object[] va = val.toValuesArray();
                     for (Object v : va) {
                         if (v != null) {
+                            iterable.doBreak();
                             return true;
                         }
                     }

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceTopComponent.java
Patch:
@@ -58,12 +58,10 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JToggleButton;
 import javax.swing.SwingUtilities;
 import javax.swing.UIManager;
-import org.gephi.appearance.api.AttributeFunction;
 import org.gephi.appearance.api.Function;
 import org.gephi.appearance.api.Interpolator;
 import org.gephi.appearance.api.RankingFunction;
 import org.gephi.appearance.spi.TransformerUI;
-import org.gephi.graph.api.Column;
 import org.gephi.ui.components.splineeditor.SplineEditor;
 import org.gephi.ui.utils.UIUtils;
 import org.netbeans.api.settings.ConvertAsProperties;

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -328,8 +328,8 @@ public void exportToColumn(String title, Query query) {
                 e.setAttribute(edgeCol, Boolean.TRUE);
             }
         } finally {
-            result.readUnlockAll();
             result.writeUnlock();
+            result.readUnlockAll();
         }
         //StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(FilterControllerImpl.class, "FilterController.exportToColumn.status", title));
     }
@@ -398,8 +398,8 @@ public void exportToLabelVisible(Query query) {
                 e.getTextProperties().setVisible(inView);
             }
         } finally {
-            fullGraph.readUnlockAll();
             fullGraph.writeUnlock();
+            fullGraph.readUnlockAll();
         }
     }
 

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterProcessor.java
Patch:
@@ -132,8 +132,8 @@ public Graph process(AbstractQueryImpl query, GraphModel graphModel) {
 
             return finalResult;
         } finally {
-            graph.readUnlockAll();
             graph.writeUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/StatisticsAPI/src/main/java/org/gephi/statistics/StatisticsControllerImpl.java
Patch:
@@ -231,6 +231,7 @@ private void executeDynamic(DynamicStatistics statistics, DynamicLongTask dynami
                 statistics.loop(g.getView(), new Interval(low, high));
             } finally {
                 graph.writeUnlock();
+                graph.readUnlockAll();
             }
 
             //Cancelled?

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/bridge/DataBridge.java
Patch:
@@ -159,6 +159,7 @@ public synchronized boolean updateWorld() {
                 force = true;
             } finally {
                 graphModel.getGraph().writeUnlock();
+                graphModel.getGraph().readUnlockAll();
             }
         }
 
@@ -310,8 +311,8 @@ public synchronized void reset() {
             }
         } finally {
             if (graphModel != null) {
-                graph.readUnlockAll();
                 graph.writeUnlock();
+                graph.readUnlockAll();
             }
         }
 

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -108,11 +108,13 @@ public class ImporterGraphML implements FileImporter, LongTask {
     public ImporterGraphML() {
         //Default node associations
         properties.addNodePropertyAssociation(NodeProperties.LABEL, "label");
+        properties.addNodePropertyAssociation(NodeProperties.LABEL, "nodelabel");
         properties.addNodePropertyAssociation(NodeProperties.X, "x");
         properties.addNodePropertyAssociation(NodeProperties.Y, "y");
+        properties.addNodePropertyAssociation(NodeProperties.Z, "z");
         properties.addNodePropertyAssociation(NodeProperties.X, "xpos");
         properties.addNodePropertyAssociation(NodeProperties.Y, "ypos");
-        properties.addNodePropertyAssociation(NodeProperties.Z, "z");
+        properties.addNodePropertyAssociation(NodeProperties.Z, "zpos");
         properties.addNodePropertyAssociation(NodeProperties.SIZE, "size");
         properties.addNodePropertyAssociation(NodeProperties.R, "r");
         properties.addNodePropertyAssociation(NodeProperties.G, "g");
@@ -124,8 +126,6 @@ public ImporterGraphML() {
         properties.addEdgePropertyAssociation(EdgeProperties.LABEL, "edgelabel");
         properties.addEdgePropertyAssociation(EdgeProperties.WEIGHT, "weight");
         properties.addEdgePropertyAssociation(EdgeProperties.WEIGHT, "Edge Weight");
-        properties.addEdgePropertyAssociation(EdgeProperties.ID, "id");
-        properties.addEdgePropertyAssociation(EdgeProperties.ID, "edgeid");
         properties.addEdgePropertyAssociation(EdgeProperties.R, "r");
         properties.addEdgePropertyAssociation(EdgeProperties.G, "g");
         properties.addEdgePropertyAssociation(EdgeProperties.B, "b");

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/AutoLayout.java
Patch:
@@ -307,7 +307,7 @@ private static class MultiDynamicProperty extends AbstractDynamicProperty {
 
         @Override
         public Object getValue(float ratio) {
-            while (thresholds[currentIndex] < ratio && currentIndex < thresholds.length) {
+            while (currentIndex < thresholds.length && thresholds[currentIndex] < ratio) {
                 currentIndex++;
             }
             return value[currentIndex];
@@ -333,13 +333,13 @@ private static class InterpolateDynamicProperty extends AbstractDynamicProperty
 
         @Override
         public Object getValue(float ratio) {
-            while (thresholds[currentIndex] < ratio && currentIndex < thresholds.length) {
+            while (currentIndex < thresholds.length && thresholds[currentIndex] < ratio) {
                 currentIndex++;
             }
             if (currentIndex > 0) {
                 float r = 1 / (thresholds[currentIndex] - thresholds[currentIndex - 1]);
                 ratio = ((ratio - thresholds[currentIndex - 1]) * r);
-                return new Double(value[currentIndex - 1].doubleValue() + (value[currentIndex].doubleValue() - value[currentIndex - 1].doubleValue()) * ratio);
+                return value[currentIndex - 1].doubleValue() + (value[currentIndex].doubleValue() - value[currentIndex - 1].doubleValue()) * ratio;
             }
             return value[currentIndex];
         }

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -355,7 +355,6 @@ private void readNodeAttValue(XMLStreamReader reader, NodeDraft node) throws Exc
                 } catch (Exception e) {
                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_error_datavalue", fore, node, prop.toString()), Issue.Level.SEVERE));
                 }
-                return;
             }
 
             //Data attribute value
@@ -511,7 +510,6 @@ private void readEdgeAttValue(XMLStreamReader reader, EdgeDraft edge) throws Exc
                 } catch (Exception e) {
                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_error_datavalue", fore, edge, prop.toString()), Issue.Level.SEVERE));
                 }
-                return;
             }
 
             //Data attribute value
@@ -567,6 +565,7 @@ private void readAttribute(XMLStreamReader reader) throws Exception {
                     property = true;
                 }
             }
+            
             if (property) {
                 return;
             }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java
Patch:
@@ -371,7 +371,7 @@ public String getToolTipText(MouseEvent e) {
             int index = columnModel.getColumnIndexAtX(p.x);
             int realIndex = columnModel.getColumn(index).getModelIndex();
 
-            if (realIndex < columns.size()) {
+            if (realIndex < columns.size() && columns.get(realIndex).getColumn() != null) {
                 String id = columns.get(realIndex).getColumn().getId();
 
                 return NbBundle.getMessage(AbstractElementsDataTable.class, "AbstractElementsDataTable.column.tooltip", id);

File: modules/ToolsPlugin/src/main/java/org/gephi/tools/plugin/EdgePencil.java
Patch:
@@ -81,7 +81,7 @@ public class EdgePencil implements Tool {
 
     public EdgePencil() {
         //Default settings
-        color = Color.BLACK;
+        color = Color.GRAY;
         weight = 1f;
 
         //Add workspace listener for updating edge pencil panel options and status

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/ConnectedComponents.java
Patch:
@@ -93,7 +93,6 @@ public ConnectedComponents() {
 
     @Override
     public void execute(GraphModel graphModel) {
-        isDirected = graphModel.isDirected();
         isCanceled = false;
 
         UndirectedGraph undirectedGraph = graphModel.getUndirectedGraphVisible();

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/EigenvectorCentrality.java
Patch:
@@ -121,7 +121,6 @@ public void setDirected(boolean isDirected) {
      */
     @Override
     public void execute(GraphModel graphModel) {
-        isDirected = graphModel.isDirected();
         isCanceled = false;
 
         Graph graph;

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/GraphDistance.java
Patch:
@@ -153,8 +153,6 @@ public GraphDistance() {
      */
     @Override
     public void execute(GraphModel graphModel) {
-        isDirected = graphModel.isDirected();
-
         Graph graph;
         if (isDirected) {
             graph = graphModel.getDirectedGraphVisible();

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/EdgeRenderer.java
Patch:
@@ -593,7 +593,6 @@ public void render(
             final Helper h = new Helper(item);
             final Color color = getColor(item, properties);
 
-            //FIXME: This still won't draw a curve (draws a line) in any of the targets and I don't know why
             if (target instanceof G2DTarget) {
                 final Graphics2D graphics = ((G2DTarget) target).getGraphics();
                 graphics.setStroke(new BasicStroke(getThickness(item)));

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModel.java
Patch:
@@ -74,7 +74,7 @@ public void display(GL2 gl, GLU glu, VizModel vizModel) {
 
         if (!selec) {
             if (vizModel.getConfig().isLightenNonSelected()) {
-                float[] lightColor = vizModel.getConfig().getLightenNonSelectedColor();
+                float[] lightColor = vizModel.getBackgroundColorComponents();
                 float lightColorFactor = vizModel.getConfig().getLightenNonSelectedFactor();
                 float r = node.r();
                 float g = node.g();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java
Patch:
@@ -44,7 +44,6 @@ Development and Distribution License("CDDL") (collectively, the
 import com.jogamp.opengl.GL2;
 import com.jogamp.opengl.glu.GLU;
 import com.jogamp.opengl.glu.GLUquadric;
-import java.awt.Color;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
@@ -125,8 +124,8 @@ public void beforeDisplay(GL2 gl, GLU glu) {
         }
 
         if (backgroundChanged) {
-            Color backgroundColor = vizController.getVizModel().getBackgroundColor();
-            gl.glClearColor(backgroundColor.getRed() / 255f, backgroundColor.getGreen() / 255f, backgroundColor.getBlue() / 255f, 1f);
+            float[] backgroundColor = vizController.getVizModel().getBackgroundColorComponents();
+            gl.glClearColor(backgroundColor[0], backgroundColor[1], backgroundColor[2], 1f);
             gl.glClear(GL2.GL_COLOR_BUFFER_BIT);
             backgroundChanged = false;
         }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GLAbstractListener.java
Patch:
@@ -51,7 +51,6 @@ Development and Distribution License("CDDL") (collectively, the
 import com.jogamp.opengl.GLEventListener;
 import com.jogamp.opengl.GLProfile;
 import com.jogamp.opengl.glu.GLU;
-import java.awt.Color;
 import java.awt.Component;
 import java.awt.Point;
 import java.nio.DoubleBuffer;
@@ -223,8 +222,8 @@ public void initConfig(GL2 gl) {
         gl.glClearDepth(1.0f);
 
         //Background
-        Color backgroundColor = vizController.getVizModel().getBackgroundColor();
-        gl.glClearColor(backgroundColor.getRed() / 255f, backgroundColor.getGreen() / 255f, backgroundColor.getBlue() / 255f, 1f);
+        float[] backgroundColor = vizController.getVizModel().getBackgroundColorComponents();
+        gl.glClearColor(backgroundColor[0], backgroundColor[1], backgroundColor[2], 1f);
 
         //Blending
         if (vizController.getVizConfig().isBlending()) {

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/ProjectControllerUIImpl.java
Patch:
@@ -479,7 +479,7 @@ public void openFile(FileImporterBuilder[] builders) {
         filters.add(graphFilter);
         filters.add(zipFileFilter);
 
-        openFile(filters.toArray(new FileFilter[0]), graphFilter);
+        openFile(filters.toArray(new FileFilter[0]), null);
     }
 
     private void openFile(FileFilter[] fileFilters, FileFilter initialFilter) {

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportController.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.spi.WizardImporter;
 import org.gephi.io.processor.spi.Processor;
 import org.gephi.project.api.Workspace;
+import org.openide.filesystems.FileObject;
 
 /**
  * Manage and control the import execution flow.
@@ -73,6 +74,8 @@ public interface ImportController {
     
     public Container importWizard(WizardImporter importer);
 
+    public FileImporter getFileImporter(FileObject fileObject);
+    
     public FileImporter getFileImporter(File file);
 
     public FileImporter getFileImporter(String importerName);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportUtils.java
Patch:
@@ -221,7 +221,8 @@ public static FileObject getArchivedFile(FileObject fileObject) {
 
         // ZIP and JAR archives
         if (FileUtil.isArchiveFile(fileObject)) {
-            fileObject = FileUtil.getArchiveRoot(fileObject).getChildren()[0];
+            FileObject[] children = FileUtil.getArchiveRoot(fileObject).getChildren();
+            fileObject = children.length > 0 ? children[0] : null;
         } else { // GZ or BZIP2 archives
             boolean isGz = fileObject.getExt().equalsIgnoreCase("gz");
             boolean isBzip = fileObject.getExt().equalsIgnoreCase("bz2");
@@ -265,6 +266,7 @@ public static FileObject getArchivedFile(FileObject fileObject) {
                 }
             }
         }
+        
         return fileObject;
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/AbstractScaleLayout.java
Patch:
@@ -57,12 +57,12 @@ Development and Distribution License("CDDL") (collectively, the
  *
  * @author Helder Suzuki <heldersuzuki@gephi.org>
  */
-public class ScaleLayout extends AbstractLayout implements Layout {
+public abstract class AbstractScaleLayout extends AbstractLayout implements Layout {
 
     private double scale;
     private Graph graph;
 
-    public ScaleLayout(LayoutBuilder layoutBuilder, double scale) {
+    public AbstractScaleLayout(LayoutBuilder layoutBuilder, double scale) {
         super(layoutBuilder);
         this.scale = scale;
     }

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/Contract.java
Patch:
@@ -56,16 +56,16 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = LayoutBuilder.class)
 public class Contract implements LayoutBuilder {
 
-    private ContractLayoutUI ui = new ContractLayoutUI();
+    private final ContractLayoutUI ui = new ContractLayoutUI();
 
     @Override
     public String getName() {
         return NbBundle.getMessage(Contract.class, "contract.name");
     }
 
     @Override
-    public ScaleLayout buildLayout() {
-        return new ScaleLayout(this, 0.8);
+    public ContractLayout buildLayout() {
+        return new ContractLayout(this, 0.8);
     }
 
     @Override

File: modules/Utils/src/main/java/org/gephi/utils/CharsetToolkit.java
Patch:
@@ -431,7 +431,7 @@ public static Charset[] getAvailableCharsets() {
     }
 
     private boolean hasXMLHeader() {
-        String header = new String(buffer, 0, 256).toLowerCase();
+        String header = new String(buffer, 0, Math.min(256, buffer.length)).toLowerCase();
         
         return header.contains("<?xml") && header.contains("encoding");
     }

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -101,8 +101,9 @@ public void render(
                     h.p1.x, h.p1.y, h.p2.x, h.p2.y, h.p3.x, h.p3.y));
             arrowElem.setAttribute("class", String.format(
                     "%s %s",
-                    ((Node) h.sourceItem.getSource()).getId(),
-                    ((Node) h.targetItem.getSource()).getId()));
+                    SVGUtils.idAsClassAttribute(((Node) h.sourceItem.getSource()).getId()),
+                    SVGUtils.idAsClassAttribute(((Node) h.targetItem.getSource()).getId())
+            ));
             arrowElem.setAttribute("fill", svgTarget.toHexString(color));
             arrowElem.setAttribute("fill-opacity", (color.getAlpha() / 255f) + "");
             arrowElem.setAttribute("stroke", "none");

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/EdgeLabelRenderer.java
Patch:
@@ -266,7 +266,7 @@ public void renderSVG(SVGTarget target, Edge edge, String label, float x, float
         if (outlineSize > 0) {
             Text labelTextOutline = target.createTextNode(label);
             Element outlineElem = target.createElement("text");
-            outlineElem.setAttribute("class", edge.getId().toString());
+            outlineElem.setAttribute("class", SVGUtils.idAsClassAttribute(edge.getId()));
             outlineElem.setAttribute("x", String.valueOf(x));
             outlineElem.setAttribute("y", String.valueOf(y));
             outlineElem.setAttribute("style", "text-anchor: middle; dominant-baseline: central;");
@@ -283,7 +283,7 @@ public void renderSVG(SVGTarget target, Edge edge, String label, float x, float
         }
 
         Element labelElem = target.createElement("text");
-        labelElem.setAttribute("class", edge.getId().toString());
+        labelElem.setAttribute("class", SVGUtils.idAsClassAttribute(edge.getId()));
         labelElem.setAttribute("x", x + "");
         labelElem.setAttribute("y", y + "");
         labelElem.setAttribute("style", "text-anchor: middle; dominant-baseline: central;");

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/NodeLabelRenderer.java
Patch:
@@ -257,7 +257,7 @@ public void renderSVG(SVGTarget target, Node node, String label, float x, float
         if (outlineSize > 0) {
             Text labelTextOutline = target.createTextNode(label);
             Element outlineElem = target.createElement("text");
-            outlineElem.setAttribute("class", node.getId().toString());
+            outlineElem.setAttribute("class", SVGUtils.idAsClassAttribute(node.getId()));
             outlineElem.setAttribute("x", String.valueOf(x));
             outlineElem.setAttribute("y", String.valueOf(y));
             outlineElem.setAttribute("style", "text-anchor: middle; dominant-baseline: central;");
@@ -278,7 +278,7 @@ public void renderSVG(SVGTarget target, Node node, String label, float x, float
         }
 
         Element labelElem = target.createElement("text");
-        labelElem.setAttribute("class", node.getId().toString());
+        labelElem.setAttribute("class", SVGUtils.idAsClassAttribute(node.getId()));
         labelElem.setAttribute("x", String.valueOf(x));
         labelElem.setAttribute("y", String.valueOf(y));
         labelElem.setAttribute("style", "text-anchor: middle; dominant-baseline: central;");

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/NodeRenderer.java
Patch:
@@ -155,7 +155,7 @@ public void renderSVG(Item item, SVGTarget target, PreviewProperties properties)
         }
 
         Element nodeElem = target.createElement("circle");
-        nodeElem.setAttribute("class", node.getId().toString());
+        nodeElem.setAttribute("class", SVGUtils.idAsClassAttribute(node.getId()));
         nodeElem.setAttribute("cx", x.toString());
         nodeElem.setAttribute("cy", y.toString());
         nodeElem.setAttribute("r", size.toString());

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -45,8 +45,8 @@ Development and Distribution License("CDDL") (collectively, the
 import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Object2IntMap;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
+import it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
-import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import it.unimi.dsi.fastutil.objects.ObjectList;
 import java.util.ArrayList;
@@ -132,8 +132,8 @@ public ImportContainerImpl() {
         edgeTypeMap = new Object2IntOpenHashMap();
         edgeTypeSets = new Long2ObjectMap[0];
         factory = new ElementFactoryImpl(this);
-        nodeColumns = new Object2ObjectOpenHashMap<>();
-        edgeColumns = new Object2ObjectOpenHashMap<>();
+        nodeColumns = new Object2ObjectLinkedOpenHashMap<>();
+        edgeColumns = new Object2ObjectLinkedOpenHashMap<>();
     }
 
     @Override

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/ConnectedComponents.java
Patch:
@@ -402,7 +402,7 @@ public String getReport() {
                 + "Network Interpretation:  " + (isDirected ? "directed" : "undirected") + "<br>"
                 + "<br> <h2> Results: </h2>"
                 + "Number of Weakly Connected Components: " + componentCount + "<br>"
-                + (isDirected ? "Number of Stronlgy Connected Components: " + stronglyCount + "<br>" : "")
+                + (isDirected ? "Number of Strongly Connected Components: " + stronglyCount + "<br>" : "")
                 + "<br /><br />" + imageFile
                 + "<br />" + "<h2> Algorithm: </h2>"
                 + "Robert Tarjan, <i>Depth-First Search and Linear Graph Algorithms</i>, in SIAM Journal on Computing 1 (2): 146–160 (1972)<br />"

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/ConnectedComponents.java
Patch:
@@ -402,7 +402,7 @@ public String getReport() {
                 + "Network Interpretation:  " + (isDirected ? "directed" : "undirected") + "<br>"
                 + "<br> <h2> Results: </h2>"
                 + "Number of Weakly Connected Components: " + componentCount + "<br>"
-                + (isDirected ? "Number of Stronlgy Connected Components: " + stronglyCount + "<br>" : "")
+                + (isDirected ? "Number of Strongly Connected Components: " + stronglyCount + "<br>" : "")
                 + "<br /><br />" + imageFile
                 + "<br />" + "<h2> Algorithm: </h2>"
                 + "Robert Tarjan, <i>Depth-First Search and Linear Graph Algorithms</i>, in SIAM Journal on Computing 1 (2): 146–160 (1972)<br />"

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/LoadTask.java
Patch:
@@ -41,6 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.project.io;
 
+import java.io.BufferedInputStream;
 import java.io.DataInputStream;
 import java.io.File;
 import java.io.InputStream;
@@ -321,7 +322,7 @@ private void readWorkspaceChildrenBytes(WorkspaceBytesPersistenceProvider persis
             InputStream is = null;
             DataInputStream stream = null;
             try {
-                is = zipFile.getInputStream(entry);
+                is = new BufferedInputStream(zipFile.getInputStream(entry));
                 stream = new DataInputStream(is);
                 persistenceProvider.readBytes(stream, workspace);
             } finally {

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -178,8 +178,8 @@ public Function getEdgeFunction(Graph graph, GraphFunction graphFunction, Class<
 
     @Override
     public Partition getNodePartition(Graph graph, Column column) {
-        refreshFunctions(graph);
         synchronized (functionLock) {
+            refreshFunctions(graph);
             FunctionsModel m;
             if (graph.getView().isMainView()) {
                 m = functionsMain;
@@ -195,8 +195,8 @@ public Partition getNodePartition(Graph graph, Column column) {
 
     @Override
     public Partition getEdgePartition(Graph graph, Column column) {
-        refreshFunctions(graph);
         synchronized (functionLock) {
+            refreshFunctions(graph);
             FunctionsModel m;
             if (graph.getView().isMainView()) {
                 m = functionsMain;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -178,6 +178,7 @@ public Function getEdgeFunction(Graph graph, GraphFunction graphFunction, Class<
 
     @Override
     public Partition getNodePartition(Graph graph, Column column) {
+        refreshFunctions(graph);
         synchronized (functionLock) {
             FunctionsModel m;
             if (graph.getView().isMainView()) {
@@ -194,6 +195,7 @@ public Partition getNodePartition(Graph graph, Column column) {
 
     @Override
     public Partition getEdgePartition(Graph graph, Column column) {
+        refreshFunctions(graph);
         synchronized (functionLock) {
             FunctionsModel m;
             if (graph.getView().isMainView()) {
@@ -210,7 +212,6 @@ public Partition getEdgePartition(Graph graph, Column column) {
 
     private FunctionsModel refreshFunctions(Graph graph) {
         synchronized (functionLock) {
-
             FunctionsModel m;
             if (graph.getView().isMainView()) {
                 m = functionsMain;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -178,6 +178,7 @@ public Function getEdgeFunction(Graph graph, GraphFunction graphFunction, Class<
 
     @Override
     public Partition getNodePartition(Graph graph, Column column) {
+        refreshFunctions(graph);
         synchronized (functionLock) {
             FunctionsModel m;
             if (graph.getView().isMainView()) {
@@ -194,6 +195,7 @@ public Partition getNodePartition(Graph graph, Column column) {
 
     @Override
     public Partition getEdgePartition(Graph graph, Column column) {
+        refreshFunctions(graph);
         synchronized (functionLock) {
             FunctionsModel m;
             if (graph.getView().isMainView()) {
@@ -210,7 +212,6 @@ public Partition getEdgePartition(Graph graph, Column column) {
 
     private FunctionsModel refreshFunctions(Graph graph) {
         synchronized (functionLock) {
-
             FunctionsModel m;
             if (graph.getView().isMainView()) {
                 m = functionsMain;

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/DataTablesControllerImpl.java
Patch:
@@ -176,9 +176,9 @@ public void setShowOnlyVisible(boolean showOnlyVisible) {
     }
 
     @Override
-    public void exportCurrentTable(ExportMode exportMode) {
+    public void exportCurrentTable() {
         if (listener != null) {
-            listener.exportCurrentTable(exportMode);
+            listener.exportCurrentTable();
         }
     }
 

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/DuplicateColumnUI.java
Patch:
@@ -49,11 +49,11 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
-import org.gephi.datalab.utils.SupportedColumnTypeWrapper;
 import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
+import org.gephi.ui.utils.SupportedColumnTypeWrapper;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ExportTable.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- * GeneralActionsManipulator that exports a table to CSV.
+ * GeneralActionsManipulator that exports a table to a spreadsheet file.
  * @author Eduardo Ramos
  */
 @ServiceProvider(service=GeneralActionsManipulator.class)
@@ -60,7 +60,7 @@ public class ExportTable implements GeneralActionsManipulator {
     @Override
     public void execute() {
         DataTablesController dtc=Lookup.getDefault().lookup(DataTablesController.class);
-        dtc.exportCurrentTable(DataTablesController.ExportMode.CSV);
+        dtc.exportCurrentTable();
     }
 
     @Override

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/AddColumnUI.java
Patch:
@@ -46,11 +46,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
 import org.gephi.datalab.api.AttributeColumnsController;
-import org.gephi.datalab.utils.SupportedColumnTypeWrapper;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
+import org.gephi.ui.utils.SupportedColumnTypeWrapper;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;
 import org.openide.util.Lookup;

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/api/ProjectControllerUI.java
Patch:
@@ -42,6 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.project.api;
 
 import java.io.File;
+import org.gephi.io.importer.spi.FileImporterBuilder;
 import org.gephi.project.api.Project;
 import org.gephi.project.api.Workspace;
 
@@ -61,6 +62,8 @@ public interface ProjectControllerUI {
 
     public void projectProperties();
 
+    public void openFile(FileImporterBuilder[] builders);
+    
     public void openFile();
 
     public Workspace newWorkspace();

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterBuilderCSV.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.io.exporter.plugin;
 
 import org.gephi.io.exporter.api.FileType;
@@ -61,7 +61,7 @@ public GraphExporter buildExporter() {
 
     @Override
     public FileType[] getFileTypes() {
-        FileType ft = new FileType(".csv", NbBundle.getMessage(ExporterBuilderCSV.class, "fileType_CSV_Name"));
+        FileType ft = new FileType(new String[]{".csv", ".edges"}, NbBundle.getMessage(ExporterBuilderCSV.class, "fileType_CSV_Name"));
         return new FileType[]{ft};
     }
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ContainerLoader.java
Patch:
@@ -291,6 +291,8 @@ public interface ContainerLoader {
     public void setAllowParallelEdge(boolean value);
 
     public void setAutoScale(boolean autoscale);
+    
+    public void setFillLabelWithId(boolean value);
 
-    public void setEdgesMergeStrategy(EdgeWeightMergeStrategy edgesMergeStrategy);
+    public void setEdgesMergeStrategy(EdgeMergeStrategy edgesMergeStrategy);
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ContainerUnloader.java
Patch:
@@ -119,6 +119,8 @@ public interface ContainerUnloader {
     public boolean allowParallelEdges();
 
     public boolean isAutoScale();
+    
+    public boolean isFillLabelWithId();
 
-    public EdgeWeightMergeStrategy getEdgesMergeStrategy();
+    public EdgeMergeStrategy getEdgesMergeStrategy();
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/EdgeMergeStrategy.java
Patch:
@@ -44,7 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Defines the way edge weights are merged.
  */
-public enum EdgeWeightMergeStrategy {
+public enum EdgeMergeStrategy {
 
-    SUM, AVG, MAX, MIN
+    SUM, AVG, MAX, MIN, FIRST, LAST, NO_MERGE
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportController.java
Patch:
@@ -55,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.project.api.Workspace;
 
 /**
- * Manage and control the import execution low.
+ * Manage and control the import execution flow.
  * <p>
  * This controller is a singleton and can therefore be found in Lookup:
  * <pre>ImportController ic = Lookup.getDefault().lookup(ImportController.class);</pre>
@@ -70,7 +70,7 @@ public interface ImportController {
     public Container importFile(Reader reader, FileImporter importer);
 
     public Container importFile(InputStream stream, FileImporter importer);
-
+    
     public Container importWizard(WizardImporter importer);
 
     public FileImporter getFileImporter(File file);

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/GraphElementsControllerImpl.java
Patch:
@@ -158,8 +158,8 @@ public Edge createEdge(String id, Node source, Node target, boolean directed, Ob
         } catch (Exception e) {
             Logger.getLogger("").log(
                     Level.SEVERE, 
-                    "Error when adding edge [source = {0}, target = {1}, directed = {2}, typeLabel = {3}] to the graph. Exception message: {4}",
-                    new Object[]{source.getId(), target.getId(), directed, typeLabel, e.getMessage()}
+                    "Error when adding edge [id = {0}, source = {1}, target = {2}, directed = {3}, typeLabel = {4}] to the graph. Exception message: {5}",
+                    new Object[]{id, source.getId(), target.getId(), directed, typeLabel, e.getMessage()}
             );
         }
         return null;

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -772,7 +772,7 @@ public void importCSVToEdgesTable(Graph graph, File file, Character separator, C
                 targetId = reader.get(targetColumnHeader);
 
                 if (sourceId == null || sourceId.trim().isEmpty() || targetId == null || targetId.trim().isEmpty()) {
-                    Logger.getLogger("").log(Level.WARNING, "Ignoring record {0} due to empty source and/or target node ids", recordNumber);
+                    Logger.getLogger("").log(Level.WARNING, "Ignoring record number {0} due to empty source and/or target node ids", recordNumber);
                     continue;//No correct source and target ids were provided, ignore row
                 }
 

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIVisualPanel1.java
Patch:
@@ -58,6 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.table.TableModel;
 import org.gephi.ui.utils.DialogFileFilter;
 import org.netbeans.validation.api.Problems;
+import org.netbeans.validation.api.Severity;
 import org.netbeans.validation.api.Validator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;
@@ -155,8 +156,7 @@ public boolean validate(Problems prblms, String string, String t) {
                             if (hasRowsMissingSourcesOrTargets()) {
                                 prblms.add(NbBundle.getMessage(ImportCSVUIVisualPanel1.class, 
                                     "ImportCSVUIVisualPanel1.validation.edges.empty-sources-or-targets"
-                                ));
-                                return false;
+                                ), Severity.WARNING);
                             }
                             return true;
                         }
@@ -362,7 +362,7 @@ public boolean areValidColumnsForTable() {
     }
 
     public boolean isCSVValid() {
-        return isValidFile() && hasColumns() && !hasColumnNamesRepeated && areValidColumnsForTable() &&!hasRowsMissingSourcesOrTargets();
+        return isValidFile() && hasColumns() && !hasColumnNamesRepeated && areValidColumnsForTable();
     }
 
     public boolean hasRowsMissingSourcesOrTargets() {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/Edge2dModel.java
Patch:
@@ -144,9 +144,9 @@ public void display(GL2 gl, GLU glu, VizModel vizModel) {
                     a = (source.alpha() + target.alpha()) / 2f;
                 }
             } else {
+                r = edge.r();
                 g = edge.g();
                 b = edge.b();
-                r = edge.r();
             }
             if (vizModel.getConfig().isLightenNonSelected()) {
                 float lightColorFactor = vizModel.getConfig().getLightenNonSelectedFactor();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/EdgeModel.java
Patch:
@@ -83,10 +83,12 @@ public Edge getEdge() {
         return edge;
     }
 
+    @Override
     public void setSelected(boolean selected) {
         this.selected = selected;
     }
 
+    @Override
     public boolean isSelected() {
         return selected;
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeModel.java
Patch:
@@ -134,10 +134,12 @@ public float getY() {
         return node.y();
     }
 
+    @Override
     public void setSelected(boolean selected) {
         this.selected = selected;
     }
 
+    @Override
     public boolean isSelected() {
         return selected;
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/bridge/DataBridge.java
Patch:
@@ -272,7 +272,7 @@ public synchronized void reset() {
             }
         } finally {
             if (graphModel != null) {
-                graphModel.getGraph().readUnlockAll();
+                graph.readUnlockAll();
                 graph.writeUnlock();
             }
         }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/bridge/DataBridge.java
Patch:
@@ -260,7 +260,7 @@ public synchronized void reset() {
         graphModel = controller.getGraphModel();
         if (graphModel != null) {
             graph = graphModel.getGraphVisible();
-            graph.readLock();
+            graph.writeLock();
         }
 
         try {
@@ -272,7 +272,8 @@ public synchronized void reset() {
             }
         } finally {
             if (graphModel != null) {
-                graph.readUnlockAll();
+                graphModel.getGraph().readUnlockAll();
+                graph.writeUnlock();
             }
         }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java
Patch:
@@ -241,7 +241,7 @@ public void initAlgo() {
             setConverged(false);
             setStep(initialStep);
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 
@@ -253,7 +253,7 @@ public void endAlgo() {
                 n.setLayoutData(null);
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 
@@ -320,7 +320,7 @@ public void goAlgo() {
             }
             postAlgo();
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -226,7 +226,7 @@ public void goAlgo() {
                 }
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 
@@ -238,7 +238,7 @@ public void endAlgo() {
                 n.setLayoutData(null);
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/ForceAtlas2.java
Patch:
@@ -120,7 +120,7 @@ public void initAlgo() {
             pool = Executors.newFixedThreadPool(threadCount);
             currentThreadCount = threadCount;
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 
@@ -292,7 +292,7 @@ public void goAlgo() {
                 }
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 
@@ -310,7 +310,7 @@ public void endAlgo() {
             }
             pool.shutdown();
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/fruchterman/FruchtermanReingold.java
Patch:
@@ -170,7 +170,7 @@ public void goAlgo() {
                 }
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 
@@ -182,7 +182,7 @@ public void endAlgo() {
                 n.setLayoutData(null);
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -91,7 +91,6 @@ public void initAlgo() {
     public void goAlgo() {
         this.graph = graphModel.getGraphVisible();
         graph.readLock();
-
         try {
             Node[] nodes = graph.getNodes().toArray();
 
@@ -186,7 +185,7 @@ public void goAlgo() {
                 }
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/noverlap/NoverlapLayout.java
Patch:
@@ -220,7 +220,7 @@ public void goAlgo() {
                 }
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 
@@ -232,7 +232,7 @@ public void endAlgo() {
                 n.setLayoutData(null);
             }
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/OpenOrdLayout.java
Patch:
@@ -249,7 +249,7 @@ public int computeHashCode(int i) {
             running = true;
             firstIteration = true;
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/RandomLayout.java
Patch:
@@ -86,7 +86,7 @@ public void goAlgo() {
             }
             converged = true;
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/rotate/RotateLayout.java
Patch:
@@ -91,7 +91,7 @@ public void goAlgo() {
             }
             setConverged(true);
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/ScaleLayout.java
Patch:
@@ -94,7 +94,7 @@ public void goAlgo() {
             }
             setConverged(true);
         } finally {
-            graph.readUnlock();
+            graph.readUnlockAll();
         }
     }
 

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -531,9 +531,9 @@ private void refreshAttributeFunctions(boolean graphHasChanged) {
                     }
                     if (isRanking(graph, column)) {
                         if (column.isIndexed()) {
-                            ranking = new AttributeRankingImpl(column, getIndex(localScale));
+                            ranking = new AttributeRankingImpl(column, graph, getIndex(localScale));
                         } else {
-                            ranking = new AttributeRankingImpl(column, graph);
+                            ranking = new AttributeRankingImpl(column, graph, null);
                         }
                         rankings.put(getIdCol(column), ranking);
                     }
@@ -685,7 +685,7 @@ private boolean isRanking(Graph graph, Column column) {
                     return true;
                 }
             }
-        } else if (!column.isDynamic() && column.isIndexed() && column.isNumber()) {
+        } else if (!column.isDynamic() && !column.isArray() && column.isIndexed() && column.isNumber()) {
             Index index;
             if (AttributeUtils.isNodeColumn(column)) {
                 index = localScale ? graphModel.getNodeIndex(graph.getView()) : graphModel.getNodeIndex();

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyAttributeRowsPersistenceProvider.java
Patch:
@@ -104,12 +104,12 @@ public void readRows(XMLStreamReader reader, GraphModel graphModel, LegacyMapHel
                 case XMLStreamReader.START_ELEMENT:
                     String name = reader.getLocalName();
                     if (ELEMENT_NODE_ROW.equalsIgnoreCase(name)) {
-                        int id = Integer.parseInt(reader.getAttributeValue(null, "for"));
+                        String id = reader.getAttributeValue(null, "for");
                         Node node = graph.getNode(id);
 
                         readRow(reader, node, graphModel.getNodeTable(), mapHelper);
                     } else if (ELEMENT_EDGE_ROW.equalsIgnoreCase(name)) {
-                        int id = Integer.parseInt(reader.getAttributeValue(null, "for"));
+                        String id = reader.getAttributeValue(null, "for");
                         Edge edge = graph.getEdge(id);
 
                         readRow(reader, edge, graphModel.getEdgeTable(), mapHelper);

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java
Patch:
@@ -100,11 +100,11 @@ public void readData(XMLStreamReader reader, GraphModel graphModel, LegacyMapHel
             if (eventType.equals(XMLEvent.START_ELEMENT)) {
                 String name = reader.getLocalName();
                 if (ELEMENT_NODEDATA.equalsIgnoreCase(name)) {
-                    Node node = graph.getNode(helper.preToIdMap.get(Integer.parseInt(reader.getAttributeValue(null, "nodepre"))));
+                    Node node = graph.getNode(helper.preToIdMap.get(reader.getAttributeValue(null, "nodepre")));
                     readNodeData(reader, node);
                 } else if (ELEMENT_EDGEDATA.equalsIgnoreCase(name)) {
-                    Node source = graph.getNode(helper.preToIdMap.get(Integer.parseInt(reader.getAttributeValue(null, "sourcepre"))));
-                    Node target = graph.getNode(helper.preToIdMap.get(Integer.parseInt(reader.getAttributeValue(null, "targetpre"))));
+                    Node source = graph.getNode(helper.preToIdMap.get(reader.getAttributeValue(null, "sourcepre")));
+                    Node target = graph.getNode(helper.preToIdMap.get(reader.getAttributeValue(null, "targetpre")));
                     Edge edge = graph.getEdge(source, target, 0);
                     readEdgeData(reader, edge);
                 }

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyMapHelper.java
Patch:
@@ -20,7 +20,7 @@ public class LegacyMapHelper {
 
     protected Map<Integer, String> nodeIndexToIds = new HashMap<>();
     protected Map<Integer, String> edgeIndexToIds = new HashMap<>();
-    protected Map<Integer, Integer> preToIdMap = new HashMap<>();
+    protected Map<String, String> preToIdMap = new HashMap<>();
 
     protected static LegacyMapHelper get(Workspace workspace) {
         LegacyMapHelper lh = workspace.getLookup().lookup(LegacyMapHelper.class);
@@ -35,8 +35,6 @@ protected static GraphModel getGraphModel(Workspace workspace) {
         GraphModel gm = workspace.getLookup().lookup(GraphModel.class);
         if (gm == null) {
             Configuration configuration = new Configuration();
-            configuration.setNodeIdType(Integer.class);
-            configuration.setEdgeIdType(Integer.class);
             configuration.setTimeRepresentation(TimeRepresentation.INTERVAL);
 
             gm = GraphModel.Factory.newInstance(configuration);

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/AutoLayout.java
Patch:
@@ -48,6 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.layout.spi.Layout;
 import org.gephi.layout.spi.LayoutProperty;
 import org.openide.nodes.Node.Property;
+import org.openide.util.Exceptions;
 
 /**
  * Class to build layout scenario that runs for a certain duration. Multiple
@@ -283,7 +284,7 @@ public Object getValue(float ratio) {
                 }
                 return property.getValue();
             } catch (Exception e) {
-                e.printStackTrace();
+                Exceptions.printStackTrace(e);
             }
             return null;
         }

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -121,7 +121,6 @@ public void fatalError(Throwable t) {
 //                NotifyDescriptor.Message msg = new NotifyDescriptor.Message(message, NotifyDescriptor.WARNING_MESSAGE);
 //                DialogDisplayer.getDefault().notify(msg);
                 Exceptions.printStackTrace(t);
-                t.printStackTrace();
             }
         };
         executor = new LongTaskExecutor(true, "Importer", 10);

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/WizardIterator.java
Patch:
@@ -76,7 +76,7 @@ private WizardDescriptor.Panel[] getPanels() {
                     JComponent jc = (JComponent) c;
                     // Sets step number of a component
                     // TODO if using org.openide.dialogs >= 7.8, can use WizardDescriptor.PROP_*:
-                    jc.putClientProperty(WizardDescriptor.PROP_CONTENT_SELECTED_INDEX, new Integer(i));
+                    jc.putClientProperty(WizardDescriptor.PROP_CONTENT_SELECTED_INDEX, i);
                     // Sets steps names for a panel
                     jc.putClientProperty("WizardPanel_contentData", steps);
                     // Turn on subtitle creation on each step
@@ -158,7 +158,7 @@ private void repaintLeftComponent() {
                 JComponent jc = (JComponent) c;
                 // Sets step number of a component
                 // TODO if using org.openide.dialogs >= 7.8, can use WizardDescriptor.PROP_*:
-                jc.putClientProperty(WizardDescriptor.PROP_CONTENT_SELECTED_INDEX, new Integer(i));
+                jc.putClientProperty(WizardDescriptor.PROP_CONTENT_SELECTED_INDEX, i);
                 // Sets steps names for a panel
                 jc.putClientProperty("WizardPanel_contentData", steps);
                 // Turn on subtitle creation on each step

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/EdgeWeightRankingImpl.java
Patch:
@@ -80,8 +80,8 @@ protected void refresh() {
                         maxV = Math.max(numMax, maxV);
                     }
                 } else {
-                    minV = e.getWeight();
-                    maxV = e.getWeight();
+                    minV = Math.min(e.getWeight(), minV);
+                    maxV = Math.max(e.getWeight(), maxV);
                 }
             }
             min = minV;

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/Degree.java
Patch:
@@ -171,7 +171,7 @@ protected double calculateAverageDegree(Graph graph, boolean isDirected, boolean
             Progress.progress(progress);
         }
 
-        averageDegree /= graph.getNodeCount();
+        averageDegree /=  (isDirected ? 2.0 : 1.0) * graph.getNodeCount();
 
         return averageDegree;
     }

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/WeightedDegree.java
Patch:
@@ -150,7 +150,7 @@ public double calculateAverageWeightedDegree(Graph graph, boolean isDirected, bo
             Progress.progress(progress);
         }
 
-        averageWeightedDegree /= graph.getNodeCount();
+        averageWeightedDegree /= (isDirected ? 2.0 : 1.0) * graph.getNodeCount();
 
         return averageWeightedDegree;
 

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/DegreeNGTest.java
Patch:
@@ -176,7 +176,7 @@ public void testDirectedPathGraphDegree() {
         assertEquals(inDegree1, 0);
         assertEquals(inDegree2, 1);
         assertEquals(outDegree1, 1);
-        assertEquals(avDegree, 1.0);
+        assertEquals(avDegree, 0.5);
     }
 
     @Test
@@ -194,7 +194,7 @@ public void testDirectedCyclicGraphDegree() {
         assertEquals(inDegree3, 1);
         assertEquals(degree1, 2);
         assertEquals(outDegree5, 1);
-        assertEquals(avDegree, 2.0);
+        assertEquals(avDegree, 1.0);
     }
 
     @Test

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/WeightedDegreeNGTest.java
Patch:
@@ -181,7 +181,7 @@ public void testDirectedPathGraphDegree() {
         assertEquals(inDegree1, 0.0);
         assertEquals(inDegree2, 1.0);
         assertEquals(outDegree1, 1.0);
-        assertEquals(avDegree, 1.0);
+        assertEquals(avDegree, 0.5);
     }
 
     @Test
@@ -200,7 +200,7 @@ public void testDirectedCyclicGraphDegree() {
         assertEquals(inDegree3, 1.0);
         assertEquals(degree1, 2.0);
         assertEquals(outDegree5, 1.0);
-        assertEquals(avDegree, 2.0);
+        assertEquals(avDegree, 1.0);
     }
 
     @Test

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/WeightedDegree.java
Patch:
@@ -136,7 +136,7 @@ public double calculateAverageWeightedDegree(Graph graph, boolean isDirected, bo
                 updateDegreeDists(totalInWeight, totalOutWeight, totalWeight);
             } else {
                 for (Edge e : graph.getEdges(n)) {
-                    totalWeight += e.getWeight();
+                    totalWeight += (e.isSelfLoop() ? 2 : 1) * e.getWeight();
                 }
                 n.setAttribute(WDEGREE, totalWeight);
                 updateDegreeDists(totalWeight);
@@ -150,7 +150,7 @@ public double calculateAverageWeightedDegree(Graph graph, boolean isDirected, bo
             Progress.progress(progress);
         }
 
-        averageWeightedDegree /= (isDirected) ? 2 * graph.getNodeCount() : graph.getNodeCount();
+        averageWeightedDegree /= graph.getNodeCount();
 
         return averageWeightedDegree;
 

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionElementColorTransformerUI.java
Patch:
@@ -70,7 +70,7 @@ public TransformerCategory getCategory() {
 
     @Override
     public String getDisplayName() {
-        return NbBundle.getMessage(UniqueElementColorTransformerUI.class, "Attribute.name");
+        return NbBundle.getMessage(UniqueElementColorTransformerUI.class, "Attribute.partition.name");
     }
 
     @Override

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingElementColorTransformerUI.java
Patch:
@@ -75,7 +75,7 @@ public Icon getIcon() {
 
     @Override
     public String getDisplayName() {
-        return NbBundle.getMessage(RankingElementColorTransformerUI.class, "Attribute.name");
+        return NbBundle.getMessage(RankingElementColorTransformerUI.class, "Attribute.ranking.name");
     }
 
     @Override

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingElementSizeTransformerUI.java
Patch:
@@ -75,7 +75,7 @@ public Icon getIcon() {
 
     @Override
     public String getDisplayName() {
-        return NbBundle.getMessage(UniqueElementColorTransformerUI.class, "Attribute.name");
+        return NbBundle.getMessage(RankingElementSizeTransformerUI.class, "Attribute.ranking.name");
     }
 
     @Override

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingLabelColorTransformerUI.java
Patch:
@@ -75,7 +75,7 @@ public Icon getIcon() {
 
     @Override
     public String getDisplayName() {
-        return NbBundle.getMessage(RankingLabelColorTransformerUI.class, "Attribute.name");
+        return NbBundle.getMessage(RankingLabelColorTransformerUI.class, "Attribute.ranking.name");
     }
 
     @Override

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RankingLabelSizeTransformerUI.java
Patch:
@@ -75,7 +75,7 @@ public Icon getIcon() {
 
     @Override
     public String getDisplayName() {
-        return NbBundle.getMessage(UniqueElementColorTransformerUI.class, "Attribute.name");
+        return NbBundle.getMessage(UniqueElementColorTransformerUI.class, "Attribute.ranking.name");
     }
 
     @Override

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/PartitionBuilder.java
Patch:
@@ -195,7 +195,7 @@ public EdgePartitionFilter(Column column, AppearanceModel model) {
 
         @Override
         public boolean init(Graph graph) {
-            partition = appearanceModel.getEdgePartition(graph, column);
+            partition = appearanceModel.getEdgePartition(graph.getModel().getGraph(), column);
             return partition != null;
         }
     }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/partition/PartitionPanel.java
Patch:
@@ -200,7 +200,7 @@ public Object getPart() {
         @Override
         public String toString() {
             String percentageStr = FORMATTER.format(percentage / 100f);
-            return part.toString() + " (" + percentageStr + ")";
+            return (part == null ? "null" : part.toString()) + " (" + percentageStr + ")";
         }
 
         public boolean isEnabled() {

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/Report.java
Patch:
@@ -229,7 +229,7 @@ public void setLog(String log) {
 
     public Element writeXml(Document document) {
         Element reportE = document.createElement("report");
-        reportE.setAttribute("version", "0.7");
+        reportE.setAttribute("version", "0.9.1");
 
         //Date
         Element dateE = document.createElement("date");

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/builder/HitsBuilder.java
Patch:
@@ -45,12 +45,13 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsBuilder;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author pjmcswee
  */
-//@ServiceProvider(service = StatisticsBuilder.class)
+@ServiceProvider(service = StatisticsBuilder.class)
 public class HitsBuilder implements StatisticsBuilder {
 
     @Override

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/HitsUI.java
Patch:
@@ -46,12 +46,13 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
-//@ServiceProvider(service = StatisticsUI.class)
+@ServiceProvider(service = StatisticsUI.class)
 public class HitsUI implements StatisticsUI {
 
     private final StatSettings settings = new StatSettings();

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/multilingual/LanguageAction.java
Patch:
@@ -64,6 +64,7 @@ public enum Language {
 
         EN_US("en", "English"),
         CS_CS("cs", "Čeština"),
+        DE_DE("de", "Deutsch"),
         ES_ES("es", "Español"),
         FR_FR("fr", "Français"),
         PT_BR("pt", "BR", "Português do Brasil"),

File: modules/AlgorithmsPlugin/src/main/java/org/gephi/algorithms/shortestpath/AbstractShortestPathAlgorithm.java
Patch:
@@ -44,7 +44,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.util.HashMap;
 import java.util.Map;
-
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
 
@@ -61,8 +60,8 @@ public abstract class AbstractShortestPathAlgorithm {
 
     public AbstractShortestPathAlgorithm(Node sourceNode) {
         this.sourceNode = sourceNode;
-        colors = new HashMap<Node, Color>();
-        distances = new HashMap<Node, Double>();
+        colors = new HashMap<>();
+        distances = new HashMap<>();
     }
 
     protected boolean relax(Edge edge) {

File: modules/AlgorithmsPlugin/src/main/java/org/gephi/algorithms/shortestpath/BellmanFordShortestPathAlgorithm.java
Patch:
@@ -43,7 +43,6 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.HashMap;
 import java.util.Map;
-
 import org.gephi.graph.api.DirectedGraph;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
@@ -60,7 +59,7 @@ public class BellmanFordShortestPathAlgorithm extends AbstractShortestPathAlgori
     public BellmanFordShortestPathAlgorithm(DirectedGraph graph, Node sourceNode) {
         super(sourceNode);
         this.graph = graph;
-        predecessors = new HashMap<Node, Edge>();
+        predecessors = new HashMap<>();
     }
 
     @Override

File: modules/AlgorithmsPlugin/src/main/java/org/gephi/algorithms/shortestpath/DijkstraShortestPathAlgorithm.java
Patch:
@@ -61,15 +61,15 @@ public class DijkstraShortestPathAlgorithm extends AbstractShortestPathAlgorithm
     public DijkstraShortestPathAlgorithm(Graph graph, Node sourceNode) {
         super(sourceNode);
         this.graph = graph;
-        predecessors = new HashMap<Node, Edge>();
+        predecessors = new HashMap<>();
     }
 
     @Override
     public void compute() {
 
         graph.readLock();
-        Set<Node> unsettledNodes = new HashSet<Node>();
-        Set<Node> settledNodes = new HashSet<Node>();
+        Set<Node> unsettledNodes = new HashSet<>();
+        Set<Node> settledNodes = new HashSet<>();
 
         //Initialize
         for (Node node : graph.getNodes()) {

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AttributePartitionImpl.java
Patch:
@@ -78,7 +78,7 @@ public AttributePartitionImpl(Column column, Graph graph) {
         this.column = column;
         this.index = null;
         this.graph = graph;
-        this.parts = new HashMap<Object, Integer>();
+        this.parts = new HashMap<>();
     }
 
     @Override

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/EdgeTypePartitionImpl.java
Patch:
@@ -71,7 +71,7 @@ protected void refresh() {
     @Override
     public Collection getValues() {
         Object[] labels = model.getEdgeTypeLabels();
-        ArrayList<Object> col = new ArrayList<Object>(labels.length);
+        ArrayList<Object> col = new ArrayList<>(labels.length);
         for (Object l : labels) {
             if (!(l == null && graph.getEdgeCount(0) == 0)) {
                 col.add(l);

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/PartitionImpl.java
Patch:
@@ -49,7 +49,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Random;
 import org.gephi.appearance.api.Partition;
 
 /**
@@ -61,7 +60,7 @@ public abstract class PartitionImpl implements Partition {
     protected final Map<Object, Color> colorMap;
 
     protected PartitionImpl() {
-        this.colorMap = new HashMap<Object, Color>();
+        this.colorMap = new HashMap<>();
     }
 
     @Override

File: modules/AppearancePlugin/src/test/java/org/gephi/appearance/StandardTest.java
Patch:
@@ -42,7 +42,6 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.appearance;
 
 import java.util.Arrays;
-import org.gephi.appearance.AppearanceModelImpl;
 import org.gephi.appearance.api.Function;
 import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Graph;

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -112,7 +112,7 @@ public void setup(PartitionFunction function) {
 
         values = partition.getSortedValues();
 
-        List<Object> nullColors = new ArrayList<Object>();
+        List<Object> nullColors = new ArrayList<>();
         Color defaultColor = Color.LIGHT_GRAY;
         for (Object val : values) {
             Color c = partition.getColor(val);

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/RecentPalettes.java
Patch:
@@ -68,7 +68,7 @@ public class RecentPalettes {
     public RecentPalettes() {
         nodeName = "recentrankingpalettes";
         maxSize = 14;
-        gradients = new LinkedList<LinearGradient>();
+        gradients = new LinkedList<>();
         retrieve();
     }
 

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueColorTransformerPanel.java
Patch:
@@ -47,7 +47,6 @@ Development and Distribution License("CDDL") (collectively, the
 import net.java.dev.colorchooser.ColorChooser;
 import org.gephi.appearance.api.SimpleFunction;
 import org.gephi.appearance.plugin.AbstractUniqueColorTransformer;
-import org.gephi.appearance.plugin.UniqueElementColorTransformer;
 
 /**
  *

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/SearchReplaceController.java
Patch:
@@ -44,8 +44,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashSet;
 import java.util.Set;
 import java.util.regex.Pattern;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.datatables.DataTablesController;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
@@ -114,7 +114,7 @@ class SearchOptions {
         private Node[] nodesToSearch;
         private Edge[] edgesToSearch;
         private Integer startingRow = null, startingColumn = null;
-        private HashSet<Integer> columnsToSearch = new HashSet<Integer>();
+        private HashSet<Integer> columnsToSearch = new HashSet<>();
         private boolean loopToBeginning = true;
         private Pattern regexPattern;
         private boolean useRegexReplaceMode = false;

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/datatables/AttributeTableCSVExporter.java
Patch:
@@ -51,10 +51,10 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.List;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.Graph;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.TimeFormat;
 import org.gephi.graph.api.types.IntervalMap;
 import org.gephi.graph.api.types.IntervalSet;
@@ -157,7 +157,7 @@ public static void writeCSVFile(Graph graph, Table table, OutputStream out, Char
         DateTimeZone timeZone = graph.getModel().getTimeZone();
 
         if (columnIndexesToExport == null) {
-            List<Integer> columnIndexesToExportList = new ArrayList<Integer>();
+            List<Integer> columnIndexesToExportList = new ArrayList<>();
             
             //Add special columns for edges table:
             if(isEdgeTable){

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/DataTablesControllerImpl.java
Patch:
@@ -41,13 +41,13 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.impl;
 
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.api.datatables.DataTablesEventListener;
 import org.gephi.datalab.api.datatables.DataTablesEventListenerBuilder;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/GraphElementsControllerImpl.java
Patch:
@@ -44,15 +44,15 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Arrays;
 import java.util.HashSet;
 import java.util.Set;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.GraphElementsController;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -245,7 +245,7 @@ public Node mergeNodes(Graph graph, Node[] nodes, Node selectedNode, Column[] co
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
         ac.mergeRowsValues(columns, mergeStrategies, nodes, selectedNode, newNode);
 
-        Set<Node> nodesSet = new HashSet<Node>();
+        Set<Node> nodesSet = new HashSet<>();
         nodesSet.addAll(Arrays.asList(nodes));
 
         //Assign edges to the new node:

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/SearchReplaceControllerImpl.java
Patch:
@@ -43,16 +43,16 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.Set;
 import java.util.regex.Matcher;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.GraphElementsController;
 import org.gephi.datalab.api.SearchReplaceController;
 import org.gephi.datalab.api.SearchReplaceController.SearchResult;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/columns/AttributeColumnsManipulatorUI.java
Patch:
@@ -43,11 +43,10 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.spi.columns;
 
 import javax.swing.JPanel;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.spi.DialogControls;
-import org.gephi.graph.api.Graph;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 
 /**
  * <p>UI AttributeColumnsManipulators can provide.</p>

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/columns/merge/AttributeColumnsMergeStrategy.java
Patch:
@@ -41,9 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.spi.columns.merge;
 
+import org.gephi.datalab.spi.Manipulator;
 import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Table;
-import org.gephi.datalab.spi.Manipulator;
 
 /**
  * <p>Service for defining strategies for merging attribute columns of a table.</p>

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/rows/merge/AttributeRowsMergeStrategy.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.spi.rows.merge;
 
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.Manipulator;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 
 /**

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/values/AttributeValueManipulator.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.spi.values;
 
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.Manipulator;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 
 /**

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/utils/SupportedColumnTypeWrapper.java
Patch:
@@ -142,7 +142,7 @@ public int compareTo(SupportedColumnTypeWrapper other) {
      * @return Ordered column type wrappers list
      */
     public static List<SupportedColumnTypeWrapper> buildOrderedSupportedTypesList(GraphModel graphModel) {
-        List<SupportedColumnTypeWrapper> supportedTypesWrappers = new ArrayList<SupportedColumnTypeWrapper>();
+        List<SupportedColumnTypeWrapper> supportedTypesWrappers = new ArrayList<>();
 
         TimeRepresentation timeRepresentation = graphModel.getConfiguration().getTimeRepresentation();
         for (Class<?> type : AttributeUtils.getSupportedTypes()) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/GeneralColumnsChooser.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.plugin.manipulators;
 
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.nodes.ClearNodesData;
+import org.gephi.graph.api.Column;
 
 /**
  * Interface in common for choosing columns to manipulate.

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ClearColumnData.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.Image;
 import javax.swing.JOptionPane;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ConvertColumnToDynamic.java
Patch:
@@ -42,14 +42,14 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.ConvertColumnToDynamicTimestampsUI;
 import org.gephi.datalab.plugin.manipulators.columns.ui.ConvertColumnToDynamicUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphController;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.TimeRepresentation;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CopyDataToOtherColumn.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.CopyDataToOtherColumnUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CreateBooleanMatchesColumn.java
Patch:
@@ -42,12 +42,12 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.GeneralCreateColumnFromRegexUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CreateFoundGroupsListColumn.java
Patch:
@@ -42,12 +42,12 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.GeneralCreateColumnFromRegexUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/DeleteColumn.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.Image;
 import javax.swing.JOptionPane;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/DuplicateColumn.java
Patch:
@@ -42,12 +42,12 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.DuplicateColumnUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/FillColumnWithValue.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.Image;
 import javax.swing.JOptionPane;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/NegateBooleanColumn.java
Patch:
@@ -42,12 +42,12 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/NumberColumnStatisticsReport.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralNumberListStatisticsReportUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/AverageNumber.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/BooleanLogicOperations.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController.BooleanOperations;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.BooleanLogicOperationsUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/CreateTimeInterval.java
Patch:
@@ -43,13 +43,13 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.text.SimpleDateFormat;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.CreateTimeIntervalUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphController;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.TimeRepresentation;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/FirstQuartileNumber.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/InterQuartileRangeNumber.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinWithSeparator.java
Patch:
@@ -42,12 +42,12 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.JoinWithSeparatorUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MaximumNumber.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MedianNumber.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MinimumNumber.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/SumNumbers.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ThirdQuartileNumber.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/BooleanLogicOperationsUI.java
Patch:
@@ -46,13 +46,13 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController.BooleanOperations;
 import org.gephi.datalab.plugin.manipulators.columns.merge.BooleanLogicOperations;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/CreateTimeIntervalUI.java
Patch:
@@ -48,11 +48,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.columns.merge.CreateTimeInterval;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.netbeans.validation.api.Problems;
 import org.netbeans.validation.api.Validator;
 import org.netbeans.validation.api.ui.ValidationGroup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/GeneralColumnTitleChooserUI.java
Patch:
@@ -44,11 +44,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.merge.GeneralColumnTitleChooser;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/JoinWithSeparatorUI.java
Patch:
@@ -44,11 +44,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.merge.JoinWithSeparator;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ColumnValuesFrequencyUI.java
Patch:
@@ -43,13 +43,13 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.Map;
 import javax.swing.JPanel;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.ColumnValuesFrequency;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.components.JFreeChartDialog;
 import org.gephi.ui.components.SimpleHTMLReport;
 import org.jfree.chart.JFreeChart;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ConvertColumnToDynamicTimestampsUI.java
Patch:
@@ -44,14 +44,14 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.ConvertColumnToDynamic;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
 import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.gephi.ui.utils.IntervalBoundValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ConvertColumnToDynamicUI.java
Patch:
@@ -44,14 +44,14 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.ConvertColumnToDynamic;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
 import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.gephi.ui.utils.IntervalBoundValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/CopyDataToOtherColumnUI.java
Patch:
@@ -43,14 +43,14 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.JPanel;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.CopyDataToOtherColumn;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 
@@ -79,7 +79,7 @@ public void setup(AttributeColumnsManipulator m, GraphModel graphModel, Table ta
 
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
 
-        ArrayList<Column> availableColumns = new ArrayList<Column>();
+        ArrayList<Column> availableColumns = new ArrayList<>();
 
         for (Column c : table) {
             if (ac.canChangeColumnData(c) && c != column) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/DuplicateColumnUI.java
Patch:
@@ -45,14 +45,14 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.DuplicateColumn;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
 import org.gephi.datalab.utils.SupportedColumnTypeWrapper;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/GeneralCreateColumnFromRegexUI.java
Patch:
@@ -47,13 +47,13 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.GeneralCreateColumnFromRegex;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/ClearEdgesData.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsChooser;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralChooseColumnsUI;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.GraphController;
 import org.openide.util.ImageUtilities;
@@ -68,7 +68,7 @@ public class ClearEdgesData extends BasicEdgesManipulator implements GeneralColu
     public void setup(Edge[] edges, Edge clickedEdge) {
         this.edges = edges;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
-        ArrayList<Column> columnsToClearDataList = new ArrayList<Column>();
+        ArrayList<Column> columnsToClearDataList = new ArrayList<>();
         for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getEdgeTable()) {
             if (ac.canClearColumnData(column)) {
                 columnsToClearDataList.add(column);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/CopyEdgeDataToOtherEdges.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsAndRowChooser;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralChooseColumnsAndRowUI;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.GraphController;
@@ -72,7 +72,7 @@ public void setup(Edge[] edges, Edge clickedEdge) {
         this.clickedEdge = clickedEdge;
         this.edges = edges;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
-        ArrayList<Column> columnsToCopyDataList = new ArrayList<Column>();
+        ArrayList<Column> columnsToCopyDataList = new ArrayList<>();
         for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getEdgeTable()) {
             if (ac.canChangeColumnData(column)) {
                 columnsToCopyDataList.add(column);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ClearEdges.java
Patch:
@@ -78,7 +78,7 @@ public void execute() {
         GraphElementsController gec = Lookup.getDefault().lookup(GraphElementsController.class);
         Graph graph = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getGraph();
         
-        List<Edge> edges = new ArrayList<Edge>();
+        List<Edge> edges = new ArrayList<>();
         for (Edge edge : graph.getEdges().toArray()) {
             if (edge.isDirected()) {
                 if(deleteDirected){

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ManageColumnEstimators.java
Patch:
@@ -100,7 +100,7 @@ public List<Column> getColumns(){
             table = graphModel.getEdgeTable();
         }
         
-        List<Column> availableColumns = new ArrayList<Column>();
+        List<Column> availableColumns = new ArrayList<>();
         for (Column column : table) {
             if(TimeMap.class.isAssignableFrom(column.getTypeClass())){
                 availableColumns.add(column);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/MergeNodeDuplicates.java
Patch:
@@ -44,16 +44,16 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.ArrayList;
 import java.util.List;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.GraphElementsController;
 import org.gephi.datalab.plugin.manipulators.general.ui.MergeNodeDuplicatesUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.general.PluginGeneralActionsManipulator;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
@@ -107,7 +107,7 @@ public boolean canExecute() {
     @Override
     public ManipulatorUI getUI() {
         Table nodeTable = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable();
-        List<Column> columnsList = new ArrayList<Column>();
+        List<Column> columnsList = new ArrayList<>();
         for (Column column : nodeTable) {
             if(!column.isReadOnly()){
                 columnsList.add(column);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/SearchReplace.java
Patch:
@@ -42,13 +42,13 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.general;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.general.ui.SearchReplaceUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.general.GeneralActionsManipulator;
 import org.gephi.graph.api.GraphController;
+import org.gephi.graph.api.Table;
 import org.openide.DialogDescriptor;
 import org.openide.DialogDisplayer;
 import org.openide.util.ImageUtilities;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIVisualPanel1.java
Patch:
@@ -188,7 +188,7 @@ public void refreshPreviewTable() {
                 columnCount = headers.length;
 
                 //Check for repeated column names:
-                Set<String> columnNamesSet = new HashSet<String>();
+                Set<String> columnNamesSet = new HashSet<>();
                 hasColumnNamesRepeated = false;
                 hasSourceNodeColumn = false;
                 hasTargetNodeColumn = false;
@@ -212,7 +212,7 @@ public void refreshPreviewTable() {
                     currentColumn++;
                 }
 
-                ArrayList<String[]> records = new ArrayList<String[]>();
+                ArrayList<String[]> records = new ArrayList<>();
                 hasRowsMissingSourcesOrTargets = false;
                 ImportCSVUIWizardAction.Mode mode = getMode();
                 if (columnCount > 0) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIWizardPanel1.java
Patch:
@@ -83,7 +83,7 @@ public HelpCtx getHelp() {
     public boolean isValid() {
         return component.isCSVValid();
     }
-    private final Set<ChangeListener> listeners = new HashSet<ChangeListener>(1); // or can use ChangeSupport in NB 6.0
+    private final Set<ChangeListener> listeners = new HashSet<>(1); // or can use ChangeSupport in NB 6.0
 
     @Override
     public final void addChangeListener(ChangeListener l) {
@@ -102,7 +102,7 @@ public final void removeChangeListener(ChangeListener l) {
     protected final void fireChangeEvent() {
         Iterator<ChangeListener> it;
         synchronized (listeners) {
-            it = new HashSet<ChangeListener>(listeners).iterator();
+            it = new HashSet<>(listeners).iterator();
         }
         ChangeEvent ev = new ChangeEvent(this);
         while (it.hasNext()) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIWizardPanel2.java
Patch:
@@ -87,7 +87,7 @@ public boolean isValid() {
         return component.isValidCSV();
     }
     
-    private final Set<ChangeListener> listeners = new HashSet<ChangeListener>(1); // or can use ChangeSupport in NB 6.0
+    private final Set<ChangeListener> listeners = new HashSet<>(1); // or can use ChangeSupport in NB 6.0
 
     @Override
     public final void addChangeListener(ChangeListener l) {
@@ -106,7 +106,7 @@ public final void removeChangeListener(ChangeListener l) {
     protected final void fireChangeEvent() {
         Iterator<ChangeListener> it;
         synchronized (listeners) {
-            it = new HashSet<ChangeListener>(listeners).iterator();
+            it = new HashSet<>(listeners).iterator();
         }
         ChangeEvent ev = new ChangeEvent(this);
         while (it.hasNext()) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/ManageColumnEstimatorsUI.java
Patch:
@@ -47,14 +47,13 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.general.ManageColumnEstimators;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Estimator;
 import org.gephi.graph.api.types.TimeMap;
-import org.openide.util.Exceptions;
 import org.openide.util.NbBundle;
 
 /**

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/MergeNodeDuplicatesUI.java
Patch:
@@ -54,14 +54,14 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.plugin.manipulators.general.MergeNodeDuplicates;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.Node;
 import org.gephi.ui.components.richtooltip.RichTooltip;
@@ -197,7 +197,7 @@ private void loadColumnsStrategies() {
     }
 
     private List<AttributeRowsMergeStrategy> getColumnAvailableStrategies(Column column) {
-        ArrayList<AttributeRowsMergeStrategy> availableStrategies = new ArrayList<AttributeRowsMergeStrategy>();
+        ArrayList<AttributeRowsMergeStrategy> availableStrategies = new ArrayList<>();
         for (AttributeRowsMergeStrategy strategy : DataLaboratoryHelper.getDefault().getAttributeRowsMergeStrategies()) {
             strategy.setup(rows, rows[0], column);
             if (strategy.canExecute()) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/SearchReplaceUI.java
Patch:
@@ -48,15 +48,15 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JOptionPane;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.SearchReplaceController;
 import org.gephi.datalab.api.SearchReplaceController.SearchOptions;
 import org.gephi.datalab.api.SearchReplaceController.SearchResult;
 import org.gephi.datalab.api.datatables.DataTablesController;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.gephi.utils.HTMLEscape;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ClearNodesData.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsChooser;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralChooseColumnsUI;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
 import org.openide.util.ImageUtilities;
@@ -68,7 +68,7 @@ public class ClearNodesData extends BasicNodesManipulator implements  GeneralCol
     public void setup(Node[] nodes, Node clickedNode) {
         this.nodes = nodes;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
-        ArrayList<Column> columnsToClearDataList = new ArrayList<Column>();
+        ArrayList<Column> columnsToClearDataList = new ArrayList<>();
         for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable()) {
             if (ac.canClearColumnData(column)) {
                 columnsToClearDataList.add(column);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/CopyNodeDataToOtherNodes.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsAndRowChooser;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralChooseColumnsAndRowUI;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
@@ -71,7 +71,7 @@ public void setup(Node[] nodes, Node clickedNode) {
         this.clickedNode = clickedNode;
         this.nodes = nodes;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
-        ArrayList<Column> columnsToCopyDataList = new ArrayList<Column>();
+        ArrayList<Column> columnsToCopyDataList = new ArrayList<>();
         for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable()) {
             if (ac.canChangeColumnData(column)) {
                 columnsToCopyDataList.add(column);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/MergeNodes.java
Patch:
@@ -44,12 +44,12 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.ArrayList;
 import java.util.List;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.GraphElementsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.nodes.ui.MergeNodesUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
@@ -87,7 +87,7 @@ public void setup(Node[] nodes, Node clickedNode) {
         selectedNode = clickedNode != null ? clickedNode : nodes[0];
         
         Table nodeTable = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable();
-        List<Column> columnsList = new ArrayList<Column>();
+        List<Column> columnsList = new ArrayList<>();
         for (Column column : nodeTable) {
             if(!column.isReadOnly()){
                 columnsList.add(column);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ui/MergeNodesUI.java
Patch:
@@ -54,13 +54,13 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.plugin.manipulators.nodes.MergeNodes;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Node;
 import org.gephi.ui.components.richtooltip.RichTooltip;
 import org.openide.util.ImageUtilities;
@@ -154,7 +154,7 @@ private void loadColumnsStrategies(JPanel settingsPanel) {
     }
 
     private List<AttributeRowsMergeStrategy> getColumnAvailableStrategies(Column column) {
-        ArrayList<AttributeRowsMergeStrategy> availableStrategies = new ArrayList<AttributeRowsMergeStrategy>();
+        ArrayList<AttributeRowsMergeStrategy> availableStrategies = new ArrayList<>();
         for (AttributeRowsMergeStrategy strategy : DataLaboratoryHelper.getDefault().getAttributeRowsMergeStrategies()) {
             strategy.setup(nodes, manipulator.getSelectedNode(), column);
             if (strategy.canExecute()) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ui/SetNodesSizeUI.java
Patch:
@@ -100,13 +100,13 @@ class FloatJTextFieldFilter extends PlainDocument {
         @Override
         public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
             for (int i = 0; i < str.length(); i++) {
-                if (POSITIVE_FLOAT_ACCEPTED_CHARS.indexOf(String.valueOf(str.charAt(i))) == -1) {
+                if (!POSITIVE_FLOAT_ACCEPTED_CHARS.contains(String.valueOf(str.charAt(i)))) {
                     return;
                 }
             }
 
-            if (str.indexOf(".") != -1) {
-                if (getText(0, getLength()).indexOf(".") != -1) {
+            if (str.contains(".")) {
+                if (getText(0, getLength()).contains(".")) {
                     return;
                 }
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/AverageNumber.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.ImageUtilities;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/FirstQuartileNumber.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
 import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.Lookup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/InterQuartileRangeNumber.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
 import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.Lookup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/JoinWithSeparator.java
Patch:
@@ -42,10 +42,10 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.rows.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.rows.merge.ui.JoinWithSeparatorUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.openide.util.ImageUtilities;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/KeepSelectedRowValue.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.rows.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.openide.util.ImageUtilities;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MaximumNumber.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.ImageUtilities;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MedianNumber.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
 import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.ImageUtilities;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MinimumNumber.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.ImageUtilities;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SetNull.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.rows.merge;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.openide.util.ImageUtilities;
 import org.openide.util.NbBundle;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SumNumbers.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
 import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.ImageUtilities;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/ThirdQuartileNumber.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.Lookup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralChooseColumnsAndRowUI.java
Patch:
@@ -45,11 +45,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JCheckBox;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsAndRowChooser;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.Node;
@@ -100,7 +100,7 @@ public boolean isModal() {
     }
 
     public Column[] getChosenColumns() {
-        ArrayList<Column> columnsToClearDataList = new ArrayList<Column>();
+        ArrayList<Column> columnsToClearDataList = new ArrayList<>();
         for (ColumnCheckBox c : columnsCheckBoxes) {
             if (c.isSelected()) {
                 columnsToClearDataList.add(c.getColumn());

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralChooseColumnsUI.java
Patch:
@@ -45,11 +45,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JCheckBox;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsChooser;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
+import org.gephi.graph.api.Column;
 
 /**
  * UI for GeneralColumnsChooser (ClearNodesData and ClearEdgesData)
@@ -93,7 +93,7 @@ public boolean isModal() {
     }
 
     public Column[] getChosenColumns(){
-        ArrayList<Column> columnsToClearDataList=new ArrayList<Column>();
+        ArrayList<Column> columnsToClearDataList=new ArrayList<>();
         for(ColumnCheckBox c:columnsCheckBoxes){
             if(c.isSelected()){
                 columnsToClearDataList.add(c.getColumn());

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralNumberListStatisticsReportUI.java
Patch:
@@ -43,14 +43,14 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.JPanel;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.components.JFreeChartDialog;
 import org.gephi.ui.components.SimpleHTMLReport;
 import org.gephi.ui.utils.ChartsUtils;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/ClearAttributeValue.java
Patch:
@@ -42,10 +42,10 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.values;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.values.AttributeValueManipulator;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/NumberListStatisticsReport.java
Patch:
@@ -42,12 +42,12 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.values;
 
 import javax.swing.Icon;
-import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralNumberListStatisticsReportUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.values.AttributeValueManipulator;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceTopComponent.java
Patch:
@@ -247,7 +247,7 @@ public void run() {
                         comboBoxModel.addElement(NO_SELECTION);
                         comboBoxModel.setSelectedItem(NO_SELECTION);
 
-                        List<Function> rows = new ArrayList<Function>();
+                        List<Function> rows = new ArrayList<>();
                         rows.addAll(model.getFunctions());
 
                         Collections.sort(rows, new Comparator<Function>() {

File: modules/DesktopBanner/src/main/java/org/gephi/desktop/banner/BannerRootPanelLayout.java
Patch:
@@ -41,7 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.banner;
 
-import java.awt.Color;
 import java.awt.Component;
 import java.awt.Container;
 import java.awt.Dimension;

File: modules/DesktopBanner/src/main/java/org/gephi/desktop/banner/Installer.java
Patch:
@@ -48,7 +48,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.desktop.banner.perspective.spi.BottomComponent;
 import org.gephi.perspective.api.PerspectiveController;
 import org.openide.modules.ModuleInstall;
-import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.windows.WindowManager;
 

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/CommandLineProcessor.java
Patch:
@@ -80,15 +80,15 @@ public CommandLineProcessor() {
 
     @Override
     protected Set<Option> getOptions() {
-        HashSet<Option> set = new HashSet<Option>();
+        HashSet<Option> set = new HashSet<>();
         set.add(openOption);
         set.add(openOption2);
         return set;
     }
 
     @Override
     public void process(Env env, Map values) throws CommandException {
-        List<String> filenameList = new ArrayList<String>();
+        List<String> filenameList = new ArrayList<>();
         Object obj = values.get(openOption);
         if (obj != null) {
             filenameList.addAll(Arrays.asList((String[]) obj));

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/SaveProject.java
Patch:
@@ -43,8 +43,6 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.event.ActionEvent;
 import org.gephi.desktop.project.api.ProjectControllerUI;
-import org.gephi.project.api.Project;
-import org.gephi.project.api.ProjectController;
 import org.openide.util.HelpCtx;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/Report.java
Patch:
@@ -83,8 +83,8 @@ public class Report {
     private String glRenderer = "";
     private String glVersion = "";
     //Modules
-    private List<String> enabledModules = new ArrayList<String>();
-    private List<String> disabledModules = new ArrayList<String>();
+    private List<String> enabledModules = new ArrayList<>();
+    private List<String> disabledModules = new ArrayList<>();
 
     public Report() {
         Calendar cal = Calendar.getInstance();

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportController.java
Patch:
@@ -173,7 +173,6 @@ public boolean sendDocument(Document document) {
             }
 
             String serverResult = buf.toString();
-            System.err.println("\nResponse from server:\n" + serverResult);
             return true;
         } catch (Exception e) {
             e.printStackTrace();
@@ -280,7 +279,6 @@ private void logModules(Report report) {
     }
 
     private void logMessageLog(Report report) {
-        System.err.flush();
         System.out.flush();
         String ud = System.getProperty("netbeans.user"); // NOI18N
         if (ud == null || "memory".equals(ud)) { // NOI18N

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTablesModel.java
Patch:
@@ -41,9 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.datalab;
 
-import org.gephi.graph.api.Table;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTablesObservers.java
Patch:
@@ -70,7 +70,7 @@ public class DataTablesObservers {
     public DataTablesObservers(Workspace workspace) {
         this.workspace = workspace;
         this.graphModel = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
-        this.columnObservers = new HashSet<ColumnObserver>();
+        this.columnObservers = new HashSet<>();
     }
     
     public synchronized void initialize(){

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DefaultDataTablesEventListenerBuilder.java
Patch:
@@ -65,7 +65,7 @@ public DataTablesEventListener getDataTablesEventListener() {
         if (SwingUtilities.isEventDispatchThread()) {
             return (DataTableTopComponent) WindowManager.getDefault().findTopComponent("DataTableTopComponent");
         } else {
-            final List<DataTableTopComponent> listenerHolder = new ArrayList<DataTableTopComponent>();
+            final List<DataTableTopComponent> listenerHolder = new ArrayList<>();
             try {
                 //We have to do this in AWT thread...
                 //There is no support for Futures as far as I know

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/AddColumnUI.java
Patch:
@@ -45,11 +45,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JButton;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.utils.SupportedColumnTypeWrapper;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/CSVExportUI.java
Patch:
@@ -45,9 +45,9 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.ArrayList;
 import javax.swing.JCheckBox;
 import net.miginfocom.swing.MigLayout;
+import org.gephi.datalab.api.datatables.AttributeTableCSVExporter;
 import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Table;
-import org.gephi.datalab.api.datatables.AttributeTableCSVExporter;
 import org.openide.util.NbBundle;
 import org.openide.util.NbPreferences;
 
@@ -99,7 +99,7 @@ private void refreshColumns() {
         columnsPanel.removeAll();
         columnsPanel.setLayout(new MigLayout("", "[pref!]"));
         
-        ArrayList<ColumnCheckboxWrapper> columnCheckboxesList = new ArrayList<ColumnCheckboxWrapper>();
+        ArrayList<ColumnCheckboxWrapper> columnCheckboxesList = new ArrayList<>();
         
         //In case of edges table, we need to include fake source, target and type columns:
         if(edgesTable){
@@ -136,7 +136,7 @@ public Character getSelectedSeparator() {
     }
 
     public Integer[] getSelectedColumnsIndexes() {
-        ArrayList<Integer> columnsIndexes = new ArrayList<Integer>();
+        ArrayList<Integer> columnsIndexes = new ArrayList<>();
         for (int i = 0; i < columnsCheckBoxes.length; i++) {
             if (columnsCheckBoxes[i].isSelected()) {
                 columnsIndexes.add(columnsCheckBoxes[i].index);

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java
Patch:
@@ -50,12 +50,12 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JList;
 import javax.swing.event.ListDataEvent;
 import javax.swing.event.ListDataListener;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.columns.merge.AttributeColumnsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.ui.components.richtooltip.RichTooltip;
 import org.netbeans.validation.api.Problems;
 import org.netbeans.validation.api.Validator;
@@ -179,7 +179,7 @@ private void refreshAvailableMergeStrategies() {
             return;
         }
         AttributeColumnsMergeStrategy[] strategies = DataLaboratoryHelper.getDefault().getAttributeColumnsMergeStrategies();
-        ArrayList<AttributeColumnsMergeStrategy> availableStrategiesList = new ArrayList<AttributeColumnsMergeStrategy>();
+        ArrayList<AttributeColumnsMergeStrategy> availableStrategiesList = new ArrayList<>();
         for (AttributeColumnsMergeStrategy strategy : strategies) {
             strategy.setup(table, columnsToMerge);
             availableStrategiesList.add(strategy);//Add all but disallow executing the strategies that cannot be executed with given column

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java
Patch:
@@ -45,11 +45,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.xml.stream.XMLStreamReader;
 import javax.xml.stream.XMLStreamWriter;
 import javax.xml.stream.events.XMLEvent;
-import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.desktop.datalab.AvailableColumnsModel;
 import org.gephi.desktop.datalab.DataTablesModel;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Table;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspacePersistenceProvider;
 import org.gephi.project.spi.WorkspaceXMLPersistenceProvider;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/EdgesDataTable.java
Patch:
@@ -41,8 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.datalab.tables;
 
-import org.gephi.desktop.datalab.tables.columns.ElementDataColumn;
-import org.gephi.desktop.datalab.tables.columns.PropertyDataColumn;
 import java.awt.event.KeyAdapter;
 import java.awt.event.KeyEvent;
 import java.util.ArrayList;
@@ -52,6 +50,8 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.edges.EdgesManipulator;
 import org.gephi.desktop.datalab.DataTablesModel;
+import org.gephi.desktop.datalab.tables.columns.ElementDataColumn;
+import org.gephi.desktop.datalab.tables.columns.PropertyDataColumn;
 import org.gephi.desktop.datalab.tables.popup.EdgesPopupAdapter;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.GraphModel;
@@ -176,7 +176,7 @@ public Object getValueFor(Edge edge) {
 
     @Override
     public List<? extends ElementDataColumn<Edge>> getFakeDataColumns(GraphModel graphModel, DataTablesModel dataTablesModel) {
-        ArrayList<PropertyDataColumn<Edge>> propertiesColumns = new ArrayList<PropertyDataColumn<Edge>>();
+        ArrayList<PropertyDataColumn<Edge>> propertiesColumns = new ArrayList<>();
 
         propertiesColumns.add(SOURCE_COLUMN);
         propertiesColumns.add(TARGET_COLUMN);

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/ElementsDataTableModel.java
Patch:
@@ -41,11 +41,11 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.datalab.tables;
 
-import org.gephi.desktop.datalab.tables.columns.ElementDataColumn;
 import java.util.Arrays;
 import java.util.HashSet;
 import java.util.Set;
 import javax.swing.table.AbstractTableModel;
+import org.gephi.desktop.datalab.tables.columns.ElementDataColumn;
 import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/NodesDataTable.java
Patch:
@@ -41,8 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.datalab.tables;
 
-import org.gephi.desktop.datalab.tables.columns.ElementDataColumn;
-import org.gephi.desktop.datalab.tables.columns.PropertyDataColumn;
 import java.awt.event.KeyAdapter;
 import java.awt.event.KeyEvent;
 import java.util.ArrayList;
@@ -52,6 +50,8 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.nodes.NodesManipulator;
 import org.gephi.desktop.datalab.DataTablesModel;
+import org.gephi.desktop.datalab.tables.columns.ElementDataColumn;
+import org.gephi.desktop.datalab.tables.columns.PropertyDataColumn;
 import org.gephi.desktop.datalab.tables.popup.NodesPopupAdapter;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Node;
@@ -109,7 +109,7 @@ public void keyReleased(KeyEvent e) {
     
     
 
-    private final List<PropertyDataColumn<Node>> propertiesColumns = new ArrayList<PropertyDataColumn<Node>>();
+    private final List<PropertyDataColumn<Node>> propertiesColumns = new ArrayList<>();
 
     @Override
     public List<? extends ElementDataColumn<Node>> getFakeDataColumns(GraphModel graphModel, DataTablesModel dataTablesModel) {

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/celleditors/AttributeTypesSupportCellEditor.java
Patch:
@@ -48,8 +48,8 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JTextField;
 import javax.swing.border.Border;
 import javax.swing.border.LineBorder;
-import org.gephi.desktop.datalab.utils.stringconverters.DoubleStringConverter;
 import org.gephi.desktop.datalab.utils.GraphModelProvider;
+import org.gephi.desktop.datalab.utils.stringconverters.DoubleStringConverter;
 import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.TimeFormat;
 import org.gephi.graph.api.types.IntervalMap;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/columns/AttributeDataColumn.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.datalab.tables.columns;
 
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 
 /**

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/popup/EdgesPopupAdapter.java
Patch:
@@ -8,11 +8,11 @@
 import java.awt.Point;
 import java.util.List;
 import javax.swing.JPopupMenu;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.edges.EdgesManipulator;
 import org.gephi.desktop.datalab.tables.AbstractElementsDataTable;
 import org.gephi.desktop.datalab.utils.PopupMenuUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 
 /**

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/popup/NodesPopupAdapter.java
Patch:
@@ -8,11 +8,11 @@
 import java.awt.Point;
 import java.util.List;
 import javax.swing.JPopupMenu;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.nodes.NodesManipulator;
 import org.gephi.desktop.datalab.tables.AbstractElementsDataTable;
 import org.gephi.desktop.datalab.utils.PopupMenuUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Node;
 
 /**

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/PopupMenuUtils.java
Patch:
@@ -47,13 +47,13 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JMenu;
 import javax.swing.JMenuItem;
 import javax.swing.KeyStroke;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.ContextMenuItemManipulator;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.edges.EdgesManipulator;
 import org.gephi.datalab.spi.nodes.NodesManipulator;
 import org.gephi.datalab.spi.values.AttributeValueManipulator;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.Node;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/componentproviders/AbstractSparklinesGraphicsComponentProvider.java
Patch:
@@ -1,9 +1,9 @@
 package org.gephi.desktop.datalab.utils.componentproviders;
 
-import org.gephi.desktop.datalab.utils.GraphModelProvider;
 import java.awt.Color;
 import java.awt.image.BufferedImage;
 import javax.swing.JLabel;
+import org.gephi.desktop.datalab.utils.GraphModelProvider;
 import org.gephi.utils.sparklines.SparklineGraph;
 import org.gephi.utils.sparklines.SparklineParameters;
 import org.jdesktop.swingx.JXTable;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/componentproviders/AbstractTimeSetGraphicsComponentProvider.java
Patch:
@@ -1,9 +1,9 @@
 package org.gephi.desktop.datalab.utils.componentproviders;
 
-import org.gephi.desktop.datalab.utils.GraphModelProvider;
 import java.awt.Color;
 import java.awt.image.BufferedImage;
 import javax.swing.JLabel;
+import org.gephi.desktop.datalab.utils.GraphModelProvider;
 import org.gephi.graph.api.types.TimeSet;
 import org.gephi.utils.TimeIntervalGraphics;
 import org.jdesktop.swingx.JXTable;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/componentproviders/IntervalMapSparklinesGraphicsComponentProvider.java
Patch:
@@ -34,8 +34,8 @@ public String getTextFromValue(Object value) {
     public Number[][] getSparklinesXAndYNumbers(Object value) {
         IntervalMap intervalMap = (IntervalMap) value;
 
-        ArrayList<Number> xValues = new ArrayList<Number>();
-        ArrayList<Number> yValues = new ArrayList<Number>();
+        ArrayList<Number> xValues = new ArrayList<>();
+        ArrayList<Number> yValues = new ArrayList<>();
         if (intervalMap == null) {
             return new Number[2][0];
         }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/componentproviders/TimestampSetGraphicsComponentProvider.java
Patch:
@@ -1,8 +1,8 @@
 package org.gephi.desktop.datalab.utils.componentproviders;
 
 import org.gephi.desktop.datalab.utils.GraphModelProvider;
-import org.gephi.graph.api.types.TimestampSet;
 import org.gephi.graph.api.types.TimeSet;
+import org.gephi.graph.api.types.TimestampSet;
 import org.jdesktop.swingx.JXTable;
 
 /**

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/DesktopExportController.java
Patch:
@@ -43,11 +43,9 @@ Development and Distribution License("CDDL") (collectively, the
 
 import org.gephi.io.exporter.api.ExportController;
 import org.gephi.io.exporter.spi.Exporter;
-
-
-import org.gephi.utils.longtask.spi.LongTask;
 import org.gephi.utils.longtask.api.LongTaskErrorHandler;
 import org.gephi.utils.longtask.api.LongTaskExecutor;
+import org.gephi.utils.longtask.spi.LongTask;
 import org.openide.DialogDisplayer;
 import org.openide.NotifyDescriptor;
 import org.openide.awt.StatusDisplayer;

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/api/TopDialog.java
Patch:
@@ -195,7 +195,7 @@ public void updateMessage() {
     }
 
     public void updateOptions() {
-        Set<Object> addedOptions = new HashSet<Object>(5);
+        Set<Object> addedOptions = new HashSet<>(5);
         Object[] options = nd.getOptions();
 
         if (options == null) {

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FiltersExplorer.java
Patch:
@@ -157,7 +157,7 @@ public boolean isLeaf(Category category) {
         }
 
         public Object[] getChildren(Category category) {
-            Set<Object> cats = new HashSet<Object>();
+            Set<Object> cats = new HashSet<>();
 
             if (category != null && category.equals(QUERIES)) {
                 for (Query q : filterLibrary.getLookup().lookupAll(Query.class)) {

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/QueryChildren.java
Patch:
@@ -79,7 +79,7 @@ public QueryChildren(Query[] topQuery) {   //Only for root node
 
     @Override
     protected Collection<Node> initCollection() {
-        Collection<Node> nodesChildren = new ArrayList<Node>();
+        Collection<Node> nodesChildren = new ArrayList<>();
         if (query == null && topQuery == null) {
             nodesChildren.add(new HelpNode());
         } else {

File: modules/DesktopGenerate/src/main/java/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -55,9 +55,9 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.api.Report;
 import org.gephi.io.processor.plugin.DefaultProcessor;
 import org.gephi.project.api.ProjectController;
+import org.gephi.project.api.Workspace;
 import org.gephi.utils.longtask.api.LongTaskErrorHandler;
 import org.gephi.utils.longtask.api.LongTaskExecutor;
-import org.gephi.project.api.Workspace;
 import org.netbeans.validation.api.ui.ValidationPanel;
 import org.openide.DialogDescriptor;
 import org.openide.DialogDisplayer;

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/ImportWizard.java
Patch:
@@ -48,6 +48,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.text.MessageFormat;
 import org.gephi.desktop.importer.api.ImportControllerUI;
 import org.gephi.io.importer.spi.ImporterWizardUI;
+import org.gephi.io.importer.spi.WizardImporter;
+import org.gephi.io.importer.spi.WizardImporterBuilder;
 import org.openide.DialogDisplayer;
 import org.openide.NotifyDescriptor;
 import org.openide.WizardDescriptor;
@@ -56,8 +58,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.awt.ActionRegistration;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
-import org.gephi.io.importer.spi.WizardImporter;
-import org.gephi.io.importer.spi.WizardImporterBuilder;
 
 @ActionID(id = "org.gephi.desktop.importer.ImportWizard", category = "File")
 @ActionRegistration(displayName = "#CTL_ImportWizard", iconInMenu = true)

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/ReportPanel.java
Patch:
@@ -339,7 +339,7 @@ public void itemStateChanged(ItemEvent e) {
     }
 
     private void fillIssues(Report report) {
-        final List<Issue> issues = new ArrayList<Issue>();
+        final List<Issue> issues = new ArrayList<>();
         Iterator<Issue> itr = report.getIssues(ISSUES_LIMIT);
         while (itr.hasNext()) {
             issues.add(itr.next());
@@ -485,7 +485,7 @@ private void initProcessorsUI() {
             @Override
             public void run() {
 
-                List<AbstractButton> validButtons = new ArrayList<AbstractButton>();
+                List<AbstractButton> validButtons = new ArrayList<>();
                 for (Enumeration<AbstractButton> enumeration = processorGroup.getElements(); enumeration.hasMoreElements();) {
                     AbstractButton radioButton = enumeration.nextElement();
                     Processor p = (Processor) radioButton.getClientProperty(PROCESSOR_KEY);

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/WizardIterator.java
Patch:
@@ -46,9 +46,9 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JComponent;
 import javax.swing.event.ChangeListener;
 import org.gephi.io.importer.spi.ImporterWizardUI;
+import org.gephi.io.importer.spi.WizardImporter;
 import org.openide.WizardDescriptor;
 import org.openide.util.Lookup;
-import org.gephi.io.importer.spi.WizardImporter;
 
 public class WizardIterator implements WizardDescriptor.Iterator {
 

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/WizardPanel1.java
Patch:
@@ -99,7 +99,7 @@ public boolean isValid() {
 //
 //    public final void removeChangeListener(ChangeListener l) {
 //    }
-    private final Set<ChangeListener> listeners = new HashSet<ChangeListener>(1); // or can use ChangeSupport in NB 6.0
+    private final Set<ChangeListener> listeners = new HashSet<>(1); // or can use ChangeSupport in NB 6.0
 
     @Override
     public final void addChangeListener(ChangeListener l) {
@@ -118,7 +118,7 @@ public final void removeChangeListener(ChangeListener l) {
     protected final void fireChangeEvent() {
         Iterator<ChangeListener> it;
         synchronized (listeners) {
-            it = new HashSet<ChangeListener>(listeners).iterator();
+            it = new HashSet<>(listeners).iterator();
         }
         ChangeEvent ev = new ChangeEvent(this);
         while (it.hasNext()) {

File: modules/DesktopLayout/src/main/java/org/gephi/desktop/layout/LayoutNode.java
Patch:
@@ -70,7 +70,7 @@ public LayoutNode(Layout layout) {
     public PropertySet[] getPropertySets() {
         if (propertySets == null) {
             try {
-                Map<String, Sheet.Set> sheetMap = new HashMap<String, Sheet.Set>();
+                Map<String, Sheet.Set> sheetMap = new HashMap<>();
                 for (LayoutProperty layoutProperty : layout.getProperties()) {
                     Sheet.Set set = sheetMap.get(layoutProperty.getCategory());
                     if (set == null) {

File: modules/DesktopLayout/src/main/java/org/gephi/desktop/layout/LayoutPanel.java
Patch:
@@ -225,7 +225,7 @@ private void refreshChooser() {
         comboBoxModel.addElement(NO_SELECTION);
         comboBoxModel.setSelectedItem(NO_SELECTION);
         if (model != null) {
-            List<LayoutBuilder> builders = new ArrayList<LayoutBuilder>(Lookup.getDefault().lookupAll(LayoutBuilder.class));
+            List<LayoutBuilder> builders = new ArrayList<>(Lookup.getDefault().lookupAll(LayoutBuilder.class));
             Collections.sort(builders, new Comparator() {
                 @Override
                 public int compare(Object o1, Object o2) {

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PresetUtils.java
Patch:
@@ -124,7 +124,7 @@ public void savePreset(PreviewPreset preset) {
 
     public PreviewPreset[] getPresets() {
         if (presets == null) {
-            presets = new ArrayList<PreviewPreset>();
+            presets = new ArrayList<>();
             loadPresets();
         }
         return presets.toArray(new PreviewPreset[0]);
@@ -180,7 +180,7 @@ private PreviewPreset readXML(Document document) {
         DefaultPreset defaultPreset = new DefaultPreset();//For retrieving property class if it is not in the xml (old serialization)
 
         Element presetE = document.getDocumentElement();
-        Map<String, Object> propertiesMap = new HashMap<String, Object>();
+        Map<String, Object> propertiesMap = new HashMap<>();
         String presetName = presetE.getAttribute("name");
 
         NodeList propertyList = presetE.getElementsByTagName("previewproperty");

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewNode.java
Patch:
@@ -81,7 +81,7 @@ protected Sheet createSheet() {
 
         Set<Renderer> enabledRenderers = null;
         if (controller.getModel()!=null && controller.getModel().getManagedRenderers() != null) {
-            enabledRenderers = new HashSet<Renderer>();
+            enabledRenderers = new HashSet<>();
             for (ManagedRenderer mr : controller.getModel().getManagedRenderers()) {
                 if (mr.isEnabled()) {
                     enabledRenderers.add(mr.getRenderer());
@@ -93,7 +93,7 @@ protected Sheet createSheet() {
         if (model != null) {
             PreviewProperties properties = model.getProperties();
 
-            Map<String, Sheet.Set> sheetSets = new HashMap<String, Sheet.Set>();
+            Map<String, Sheet.Set> sheetSets = new HashMap<>();
             for (PreviewProperty property : properties.getProperties()) {
                 Object source = property.getSource();
                 boolean propertyEnabled = true;

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewSketch.java
Patch:
@@ -52,9 +52,9 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.concurrent.atomic.AtomicBoolean;
 import javax.swing.JPanel;
 import javax.swing.SwingUtilities;
+import org.gephi.preview.api.G2DTarget;
 import org.gephi.preview.api.PreviewController;
 import org.gephi.preview.api.PreviewMouseEvent;
-import org.gephi.preview.api.G2DTarget;
 import org.gephi.preview.api.Vector;
 import org.openide.util.Lookup;
 

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewUIControllerImpl.java
Patch:
@@ -96,7 +96,7 @@ public class PreviewUIControllerImpl implements PreviewUIController {
 
     public PreviewUIControllerImpl() {
         previewController = Lookup.getDefault().lookup(PreviewController.class);
-        listeners = new ArrayList<PropertyChangeListener>();
+        listeners = new ArrayList<>();
         ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
         graphController = Lookup.getDefault().lookup(GraphController.class);
         pc.addWorkspaceListener(new WorkspaceListener() {
@@ -261,7 +261,7 @@ public void addPreset(PreviewPreset preset) {
     public void savePreset(String name) {
         if (model != null) {
             PreviewModel previewModel = previewController.getModel();
-            Map<String, Object> map = new HashMap<String, Object>();
+            Map<String, Object> map = new HashMap<>();
             for (PreviewProperty p : previewModel.getProperties().getProperties()) {
                 map.put(p.getName(), p.getValue());
             }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/RendererManager.java
Patch:
@@ -75,7 +75,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class RendererManager extends javax.swing.JPanel implements PropertyChangeListener {
 
-    private ArrayList<RendererCheckBox> renderersList = new ArrayList<RendererCheckBox>();
+    private ArrayList<RendererCheckBox> renderersList = new ArrayList<>();
     private PreviewController previewController;
 
     /**
@@ -137,7 +137,7 @@ private void restoreRenderersList() {
         PreviewModel model = previewController.getModel();
         Set<Renderer> enabledRenderers = null;
         if (model != null && model.getManagedRenderers() != null) {
-            enabledRenderers = new HashSet<Renderer>();
+            enabledRenderers = new HashSet<>();
             enabledRenderers.addAll(Arrays.asList(model.getManagedEnabledRenderers()));
         }
         renderersList.clear();
@@ -188,7 +188,7 @@ private void loadModelManagedRenderers() {
     private void updateModelManagedRenderers() {
         PreviewModel model = previewController.getModel();
         if (model != null) {
-            ArrayList<ManagedRenderer> managedRenderers = new ArrayList<ManagedRenderer>();
+            ArrayList<ManagedRenderer> managedRenderers = new ArrayList<>();
             for (RendererCheckBox rendererCheckBox : renderersList) {
                 managedRenderers.add(new ManagedRenderer(rendererCheckBox.renderer, rendererCheckBox.isSelected()));
             }

File: modules/DesktopProgress/src/main/java/org/gephi/desktop/progress/ProgressTicketImpl.java
Patch:
@@ -76,7 +76,6 @@ public void finish() {
                 handle.finish();
                 finished = true;
             } catch (Exception e) {
-                System.err.println("Progress Handle failed to finish");
             }
         }
     }
@@ -92,7 +91,6 @@ public void finish(String finishMessage) {
                 handle.finish();
                 finished = true;
             } catch (Exception e) {
-                System.err.println("Progress Handle failed to finish");
             }
             StatusDisplayer.getDefault().setStatusText(finishMessage);
         }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/importer/api/ImportControllerUI.java
Patch:
@@ -46,8 +46,8 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.api.Database;
 import org.gephi.io.importer.api.ImportController;
 import org.gephi.io.importer.spi.DatabaseImporter;
-import org.openide.filesystems.FileObject;
 import org.gephi.io.importer.spi.WizardImporter;
+import org.openide.filesystems.FileObject;
 
 /**
  *

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/ProjectControllerUIImpl.java
Patch:
@@ -512,6 +512,7 @@ public void openFile() {
             }
         }
     }
+    @Override
     public Project getCurrentProject() {
         return controller.getCurrentProject();
     }

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/AvailableStatisticsChooser.java
Patch:
@@ -65,7 +65,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class AvailableStatisticsChooser extends javax.swing.JPanel {
 
     private final JSqueezeBoxPanel squeezeBoxPanel = new JSqueezeBoxPanel();
-    private final Map<JCheckBox, StatisticsUI> uiMap = new HashMap<JCheckBox, StatisticsUI>();
+    private final Map<JCheckBox, StatisticsUI> uiMap = new HashMap<>();
 
     public AvailableStatisticsChooser() {
         initComponents();
@@ -95,7 +95,7 @@ public int compare(Object o1, Object o2) {
             JPanel innerPanel = new JPanel(migLayout);
 
             //Find uis in this category
-            List<StatisticsUI> uis = new ArrayList<StatisticsUI>();
+            List<StatisticsUI> uis = new ArrayList<>();
             for (StatisticsUI sui : statisticsUIs) {
                 if (sui.getCategory().equals(category.getName())) {
                     uis.add(sui);

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsControllerUIImpl.java
Patch:
@@ -158,7 +158,7 @@ public void taskFinished(LongTask task) {
 
     public StatisticsUI[] getUI(Statistics statistics) {
         boolean dynamic = false;
-        ArrayList<StatisticsUI> list = new ArrayList<StatisticsUI>();
+        ArrayList<StatisticsUI> list = new ArrayList<>();
         for (StatisticsUI sui : Lookup.getDefault().lookupAll(StatisticsUI.class)) {
             if (sui.getStatisticsClass().equals(statistics.getClass())) {
                 list.add(sui);

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -54,14 +54,14 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.desktop.statistics.api.StatisticsModelUI;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
-import org.gephi.statistics.spi.Statistics;
-import org.gephi.statistics.spi.StatisticsBuilder;
 import org.gephi.statistics.api.StatisticsController;
 import org.gephi.statistics.spi.DynamicStatistics;
+import org.gephi.statistics.spi.Statistics;
+import org.gephi.statistics.spi.StatisticsBuilder;
 import org.gephi.statistics.spi.StatisticsUI;
 import org.gephi.ui.components.SimpleHTMLReport;
-import org.gephi.utils.longtask.spi.LongTask;
 import org.gephi.utils.longtask.api.LongTaskListener;
+import org.gephi.utils.longtask.spi.LongTask;
 import org.netbeans.validation.api.ui.ValidationPanel;
 import org.openide.DialogDescriptor;
 import org.openide.DialogDisplayer;

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsModelUIImpl.java
Patch:
@@ -75,9 +75,9 @@ public class StatisticsModelUIImpl implements StatisticsModelUI {
     public StatisticsModelUIImpl(Workspace workspace) {
         this.workspace = workspace;
         runningList = Collections.synchronizedList(new ArrayList<Statistics>());
-        invisibleList = new ArrayList<StatisticsUI>();
-        resultMap = new HashMap<StatisticsUI, String>();
-        listeners = new ArrayList<ChangeListener>();
+        invisibleList = new ArrayList<>();
+        resultMap = new HashMap<>();
+        listeners = new ArrayList<>();
     }
 
     public void addResult(StatisticsUI ui) {

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/BottomComponentImpl.java
Patch:
@@ -43,7 +43,6 @@ Development and Distribution License("CDDL") (collectively, the
 
 import javax.swing.JComponent;
 import org.gephi.desktop.banner.perspective.spi.BottomComponent;
-import org.gephi.visualization.VizController;
 import org.openide.util.lookup.ServiceProvider;
 
 /**

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/DrawerSettings.java
Patch:
@@ -151,7 +151,7 @@ public DrawerSettings() {
         
         //System.out.println("Generating filters for " + this);
         // filters
-        Map<Key, Object> map = new HashMap<Key, Object>();
+        Map<Key, Object> map = new HashMap<>();
         // bilinear
         map.put(RenderingHints.KEY_INTERPOLATION,
                 RenderingHints.VALUE_INTERPOLATION_BILINEAR);

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/PlaySettingsDialog.java
Patch:
@@ -42,8 +42,6 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.timeline;
 
 import javax.swing.SpinnerNumberModel;
-import javax.swing.event.ChangeEvent;
-import javax.swing.event.ChangeListener;
 import org.gephi.timeline.api.TimelineController;
 import org.gephi.timeline.api.TimelineModel;
 import org.openide.util.Lookup;

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimelineTopComponent.java
Patch:
@@ -48,7 +48,6 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.*;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import org.gephi.graph.api.Column;
 import org.gephi.timeline.api.TimelineController;
 import org.gephi.timeline.api.TimelineModel;
 import org.gephi.timeline.api.TimelineModelEvent;

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/api/ExportController.java
Patch:
@@ -46,9 +46,9 @@ Development and Distribution License("CDDL") (collectively, the
 import java.io.OutputStream;
 import java.io.Writer;
 import org.gephi.io.exporter.spi.ByteExporter;
-import org.gephi.io.exporter.spi.ExporterUI;
-import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.spi.CharacterExporter;
+import org.gephi.io.exporter.spi.Exporter;
+import org.gephi.io.exporter.spi.ExporterUI;
 import org.gephi.project.api.Workspace;
 
 /**

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/impl/ExportControllerImpl.java
Patch:
@@ -51,9 +51,9 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.exporter.api.ExportController;
 import org.gephi.io.exporter.api.FileType;
 import org.gephi.io.exporter.spi.ByteExporter;
+import org.gephi.io.exporter.spi.CharacterExporter;
 import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.spi.ExporterUI;
-import org.gephi.io.exporter.spi.CharacterExporter;
 import org.gephi.io.exporter.spi.FileExporterBuilder;
 import org.gephi.io.exporter.spi.GraphFileExporterBuilder;
 import org.gephi.io.exporter.spi.VectorFileExporterBuilder;

File: modules/ExportAPI/src/main/java/org/gephi/io/exporter/spi/VectorExporter.java
Patch:
@@ -41,8 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
 */
 package org.gephi.io.exporter.spi;
 
-import org.gephi.project.api.Workspace;
-
 /**
  * Exporter interface for exporters that export vector graphics.
  *

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterCSV.java
Patch:
@@ -115,7 +115,7 @@ private void exportData(Graph graph) throws Exception {
         if (list) {
             NodeIterable itr = graph.getNodes();
             for (Node n : itr) {
-                List<Node> neighbours = new ArrayList<Node>();
+                List<Node> neighbours = new ArrayList<>();
                 for (Edge e : graph.getEdges(n)) {
                     if (!e.isDirected() || (e.isDirected() && n == e.getSource())) {
                         Node m = graph.getOpposite(n, e);

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterDL.java
Patch:
@@ -158,8 +158,8 @@ public void setWriter(Writer writer) {
 
     private void saveAsEdgeList1(boolean useLabels, Graph graph) throws IOException {
 
-        HashMap<Object, String> idToLabel = new HashMap<Object, String>();//systemId to changed label
-        HashSet<String> labelUsed = new HashSet<String>();
+        HashMap<Object, String> idToLabel = new HashMap<>();//systemId to changed label
+        HashSet<String> labelUsed = new HashSet<>();
         //edgelist format forbids equal nodes
         if (useLabels) {
             for (Node node : graph.getNodes()) {
@@ -230,7 +230,7 @@ private void saveAsFullMatrix(boolean useLabels, Graph graph) throws IOException
         writer.write("format = fullmatrix\n");
         writer.write("n = " + graph.getNodeCount() + "\n");
 
-        HashMap<Integer, Node> idToNode = new HashMap<Integer, Node>();
+        HashMap<Integer, Node> idToNode = new HashMap<>();
         int idForNode = 0;
         for (Node node : graph.getNodes()) {
             if (useLabels) {

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGDF.java
Patch:
@@ -317,7 +317,7 @@ private void exportData(Graph graph, GraphModel graphModel) throws Exception {
     }
 
     private Column[] attributesNodeColumns(GraphModel graphModel) {
-        List<Column> cols = new ArrayList<Column>();
+        List<Column> cols = new ArrayList<>();
         if (exportAttributes && graphModel != null) {
             for (Column column : graphModel.getNodeTable()) {
                 if (!column.isProperty() && !isNodeDefaultColumn(column.getId())) {
@@ -329,7 +329,7 @@ private Column[] attributesNodeColumns(GraphModel graphModel) {
     }
 
     private Column[] attributesEdgeColumns(GraphModel graphModel) {
-        List<Column> cols = new ArrayList<Column>();
+        List<Column> cols = new ArrayList<>();
         if (exportAttributes && graphModel != null) {
             for (Column column : graphModel.getEdgeTable()) {
                 if (!column.isProperty() && !isEdgeDefaultColumn(column.getId())) {

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -253,8 +253,8 @@ private void writeMeta(XMLStreamWriter xmlWriter) throws Exception {
     }
 
     private void writeAttributes(XMLStreamWriter xmlWriter, Table table) throws Exception {
-        List<Column> staticCols = new ArrayList<Column>();
-        List<Column> dynamicCols = new ArrayList<Column>();
+        List<Column> staticCols = new ArrayList<>();
+        List<Column> dynamicCols = new ArrayList<>();
         String attClass = table.getElementClass().equals(Node.class) ? "node" : "edge";
 
         for (Column col : table) {
@@ -429,7 +429,7 @@ private void writeAttValue(XMLStreamWriter xmlWriter, Graph graph, Column column
     }
 
     private void writeAttValues(XMLStreamWriter xmlWriter, Graph graph, Element element) throws Exception {
-        List<Column> columns = new ArrayList<Column>();
+        List<Column> columns = new ArrayList<>();
         for (Column column : element.getAttributeColumns()) {
             if ((exportAttributes && !column.isProperty()) || (element instanceof Edge && ((Edge) element).hasDynamicWeight() && column.getId().equals("weight"))) {
                 columns.add(column);

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGML.java
Patch:
@@ -404,7 +404,6 @@ private void computeNormalizeValues(Graph graph) {
      * @return formated title
      */
     private String formatTitle(String s) {
-        System.err.println("Title " + s);
         String res = s.replace("\"", "").replace("\'", "").replace("[", "").replace("]", "").replace(" ", "").replace("#", "");
         if (s.charAt(0) >= '0' && s.charAt(0) <= '9') {
             return ("column" + res);

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterPajek.java
Patch:
@@ -158,7 +158,7 @@ public boolean execute() {
 
     private void exportData(Graph graph) throws Exception {
         int max = graph.getNodeCount(), i = 1;
-        HashMap<String, Integer> idx = new HashMap<String, Integer>(3 * max / 2 + 1);
+        HashMap<String, Integer> idx = new HashMap<>(3 * max / 2 + 1);
 
         Progress.start(progressTicket, max);
 

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterDL.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
 */
 package org.gephi.ui.exporter.plugin;
 
-import org.gephi.io.exporter.plugin.ExporterDL;
 import javax.swing.JPanel;
+import org.gephi.io.exporter.plugin.ExporterDL;
 import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.spi.ExporterUI;
 import org.openide.util.NbBundle;

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGDF.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.ui.exporter.plugin;
 
 import javax.swing.JPanel;
-import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.plugin.ExporterGDF;
+import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.spi.ExporterUI;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterVNA.java
Patch:
@@ -45,7 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.exporter.plugin.ExporterVNA;
 import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.spi.ExporterUI;
-import org.gephi.io.exporter.spi.GraphExporter;
 import org.openide.util.lookup.ServiceProvider;
 
 /**

File: modules/FiltersAPI/src/main/java/org/gephi/filters/api/FilterLibrary.java
Patch:
@@ -41,11 +41,11 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.filters.api;
 
-import org.gephi.filters.spi.FilterLibraryMask;
-import org.gephi.filters.spi.Filter;
 import org.gephi.filters.spi.Category;
 import org.gephi.filters.spi.CategoryBuilder;
+import org.gephi.filters.spi.Filter;
 import org.gephi.filters.spi.FilterBuilder;
+import org.gephi.filters.spi.FilterLibraryMask;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterLibraryImpl.java
Patch:
@@ -82,7 +82,7 @@ public FilterLibraryImpl(Workspace workspace) {
             content.add(catBuilder);
         }
 
-        buildersMap = new HashMap<Class<? extends Filter>, FilterBuilder>();
+        buildersMap = new HashMap<>();
     }
 
     private void buildBuildersMap() {

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterModelPersistenceProvider.java
Patch:
@@ -49,7 +49,6 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.xml.stream.XMLStreamReader;
 import javax.xml.stream.XMLStreamWriter;
 import javax.xml.stream.events.XMLEvent;
-import org.gephi.filters.api.FilterController;
 import org.gephi.filters.api.Query;
 import org.gephi.filters.spi.*;
 import org.gephi.graph.api.Graph;
@@ -168,7 +167,7 @@ private void writeParameter(XMLStreamWriter writer, int index, FilterProperty pr
     }
 
     public void readXML(XMLStreamReader reader, FilterModelImpl model) throws XMLStreamException {
-        Map<Integer, Query> idMap = new HashMap<Integer, Query>();
+        Map<Integer, Query> idMap = new HashMap<>();
         boolean end = false;
         while (reader.hasNext() && !end) {
             Integer eventType = reader.next();

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterThread.java
Patch:
@@ -76,8 +76,8 @@ public FilterThread(FilterModelImpl model) {
         setDaemon(true);
         this.model = model;
         this.filtering = model.isFiltering();
-        rootQuery = new AtomicReference<AbstractQueryImpl>();
-        modifiersMap = new ConcurrentHashMap<String, PropertyModifier>();
+        rootQuery = new AtomicReference<>();
+        modifiersMap = new ConcurrentHashMap<>();
     }
 
     @Override

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/AbstractFilter.java
Patch:
@@ -59,7 +59,7 @@ public abstract class AbstractFilter implements Filter {
 
     public AbstractFilter(String name) {
         this.name = name;
-        this.properties = new ArrayList<FilterProperty>();
+        this.properties = new ArrayList<>();
     }
 
     @Override

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java
Patch:
@@ -84,9 +84,9 @@ public Category getCategory() {
 
     @Override
     public FilterBuilder[] getBuilders(Workspace workspace) {
-        List<FilterBuilder> builders = new ArrayList<FilterBuilder>();
+        List<FilterBuilder> builders = new ArrayList<>();
         GraphModel am = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
-        List<Column> columns = new ArrayList<Column>();
+        List<Column> columns = new ArrayList<>();
         columns.addAll(am.getNodeTable().toList());
         columns.addAll(am.getEdgeTable().toList());
         for (Column c : columns) {
@@ -269,7 +269,7 @@ public void finish() {
 
         @Override
         public Number[] getValues(Graph graph) {
-            List<Number> vals = new ArrayList<Number>();
+            List<Number> vals = new ArrayList<>();
             if (AttributeUtils.isNodeColumn(column)) {
                 for (Element n : graph.getNodes()) {
                     Object val = n.getAttribute(column, graph.getView());

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/AttributeNonNullBuilder.java
Patch:
@@ -83,7 +83,7 @@ public Category getCategory() {
 
     @Override
     public FilterBuilder[] getBuilders(Workspace workspace) {
-        List<FilterBuilder> builders = new ArrayList<FilterBuilder>();
+        List<FilterBuilder> builders = new ArrayList<>();
         GraphModel am = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
         for (Column col : am.getNodeTable()) {
             if (!col.isProperty()) {

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/AttributeRangeBuilder.java
Patch:
@@ -75,9 +75,9 @@ public Category getCategory() {
 
     @Override
     public FilterBuilder[] getBuilders(Workspace workspace) {
-        List<FilterBuilder> builders = new ArrayList<FilterBuilder>();
+        List<FilterBuilder> builders = new ArrayList<>();
         GraphModel am = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
-        List<Column> columns = new ArrayList<Column>();
+        List<Column> columns = new ArrayList<>();
         columns.addAll(am.getNodeTable().toList());
         columns.addAll(am.getEdgeTable().toList());
         for (Column c : columns) {
@@ -157,7 +157,7 @@ public void finish() {
 
         @Override
         public Number[] getValues(Graph graph) {
-            List<Number> vals = new ArrayList<Number>();
+            List<Number> vals = new ArrayList<>();
             if (AttributeUtils.isNodeColumn(column)) {
                 for (Element n : graph.getNodes()) {
                     Object val = n.getAttribute(column, graph.getView());

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/edge/EdgeTypeBuilder.java
Patch:
@@ -137,7 +137,7 @@ public void setType(Integer type) {
         public Collection getEdgeTypeLabels() {
             Graph graph = graphModel.getGraph();
             Object[] labels = graphModel.getEdgeTypeLabels();
-            ArrayList<Object> col = new ArrayList<Object>(labels.length);
+            ArrayList<Object> col = new ArrayList<>(labels.length);
             for (Object l : labels) {
                 if (graph.getEdgeCount(graphModel.getEdgeType(l)) > 0) {
                     col.add(l);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java
Patch:
@@ -129,7 +129,7 @@ public void finish() {
 
         @Override
         public Number[] getValues(Graph graph) {
-            List<Number> values = new ArrayList<Number>();
+            List<Number> values = new ArrayList<>();
             for (Edge e : graph.getEdges()) {
                 double weight = e.getWeight(graph.getView());
                 values.add(weight);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/DegreeRangeBuilder.java
Patch:
@@ -128,7 +128,7 @@ public void finish() {
 
         @Override
         public Number[] getValues(Graph graph) {
-            List<Integer> values = new ArrayList<Integer>(graph.getNodeCount());
+            List<Integer> values = new ArrayList<>(graph.getNodeCount());
             for (Node n : graph.getNodes()) {
                 int degree = graph.getDegree(n);
                 values.add(degree);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/EgoBuilder.java
Patch:
@@ -115,7 +115,7 @@ public static class EgoFilter implements ComplexFilter {
         public Graph filter(Graph graph) {
             String str = pattern.toLowerCase();
 
-            List<Node> nodes = new ArrayList<Node>();
+            List<Node> nodes = new ArrayList<>();
             for (Node n : graph.getNodes()) {
                 if (n.getId().toString().toLowerCase().equals(str)) {
                     nodes.add(n);
@@ -124,9 +124,9 @@ public Graph filter(Graph graph) {
                 }
             }
 
-            Set<Node> result = new HashSet<Node>();
+            Set<Node> result = new HashSet<>();
 
-            Set<Node> neighbours = new HashSet<Node>();
+            Set<Node> neighbours = new HashSet<>();
             neighbours.addAll(nodes);
 
             for (int i = 0; i < depth; i++) {

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/InDegreeRangeBuilder.java
Patch:
@@ -129,7 +129,7 @@ public void finish() {
         @Override
         public Number[] getValues(Graph graph) {
             DirectedGraph dgraph = (DirectedGraph) graph;
-            List<Integer> values = new ArrayList<Integer>(dgraph.getNodeCount());
+            List<Integer> values = new ArrayList<>(dgraph.getNodeCount());
             for (Node n : dgraph.getNodes()) {
                 int degree = dgraph.getInDegree(n);
                 values.add(degree);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/MutualDegreeRangeBuilder.java
Patch:
@@ -135,7 +135,7 @@ public void finish() {
         @Override
         public Number[] getValues(Graph graph) {
             DirectedGraph dgraph = (DirectedGraph) graph;
-            List<Integer> values = new ArrayList<Integer>(dgraph.getNodeCount());
+            List<Integer> values = new ArrayList<>(dgraph.getNodeCount());
             for (Node n : dgraph.getNodes()) {
                 int degree = 0;
                 for (Edge e : dgraph.getOutEdges(n)) {

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/NeighborsBuilder.java
Patch:
@@ -118,9 +118,9 @@ public Graph filter(Graph graph) {
 
             Collection<Node> nodes = graph.getNodes().toCollection();
 
-            Set<Node> result = new HashSet<Node>();
+            Set<Node> result = new HashSet<>();
 
-            Set<Node> neighbours = new HashSet<Node>();
+            Set<Node> neighbours = new HashSet<>();
             neighbours.addAll(nodes);
 
             //Put all neighbors into result

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java
Patch:
@@ -129,7 +129,7 @@ public void finish() {
         @Override
         public Number[] getValues(Graph graph) {
             DirectedGraph dgraph = (DirectedGraph) graph;
-            List<Integer> values = new ArrayList<Integer>(dgraph.getNodeCount());
+            List<Integer> values = new ArrayList<>(dgraph.getNodeCount());
             for (Node n : dgraph.getNodes()) {
                 int degree = dgraph.getOutDegree(n);
                 values.add(degree);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/MASKBuilderEdge.java
Patch:
@@ -150,7 +150,7 @@ public Graph filter(Subgraph[] graphs) {
             Graph graph = (Graph) graphs[0];
             Graph mainGraph = graph.getView().getGraphModel().getGraph();
 
-            List<Edge> edgesToKeep = new ArrayList<Edge>();
+            List<Edge> edgesToKeep = new ArrayList<>();
             for (Edge e : mainGraph.getEdges()) {
                 boolean source = graph.contains(e.getSource());
                 boolean target = graph.contains(e.getTarget());

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/NOTBuilderEdge.java
Patch:
@@ -151,7 +151,7 @@ public Graph filter(Graph graph, Filter[] filters) {
             Filter filter = filters[0];
             if (filter instanceof EdgeFilter && ((EdgeFilter) filter).init(graph)) {
                 EdgeFilter edgeFilter = (EdgeFilter) filter;
-                List<Edge> edgesToRemove = new ArrayList<Edge>();
+                List<Edge> edgesToRemove = new ArrayList<>();
                 for (Edge e : graph.getEdges()) {
                     if (edgeFilter.evaluate(graph, e)) {
                         edgesToRemove.add(e);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/NOTBuilderNode.java
Patch:
@@ -155,7 +155,7 @@ public Graph filter(Graph graph, Filter[] filters) {
             }
             Filter filter = filters[0];
             if (filter instanceof NodeFilter && ((NodeFilter) filter).init(graph)) {
-                List<Node> nodeToRemove = new ArrayList<Node>();
+                List<Node> nodeToRemove = new ArrayList<>();
                 NodeFilter nodeFilter = (NodeFilter) filter;
                 for (Node n : graph.getNodes()) {
                     if (nodeFilter.evaluate(graph, n)) {

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/InterEdgesBuilder.java
Patch:
@@ -83,7 +83,7 @@ public Category getCategory() {
 
     @Override
     public FilterBuilder[] getBuilders(Workspace workspace) {
-        List<FilterBuilder> builders = new ArrayList<FilterBuilder>();
+        List<FilterBuilder> builders = new ArrayList<>();
         GraphModel gm = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
         Graph graph = gm.getGraph();
         AppearanceModel am = Lookup.getDefault().lookup(AppearanceController.class).getModel(workspace);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/IntraEdgesBuilder.java
Patch:
@@ -83,7 +83,7 @@ public Category getCategory() {
 
     @Override
     public FilterBuilder[] getBuilders(Workspace workspace) {
-        List<FilterBuilder> builders = new ArrayList<FilterBuilder>();
+        List<FilterBuilder> builders = new ArrayList<>();
         GraphModel gm = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
         Graph graph = gm.getGraph();
         AppearanceModel am = Lookup.getDefault().lookup(AppearanceController.class).getModel(workspace);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/PartitionCountBuilder.java
Patch:
@@ -83,7 +83,7 @@ public Category getCategory() {
 
     @Override
     public FilterBuilder[] getBuilders(Workspace workspace) {
-        List<FilterBuilder> builders = new ArrayList<FilterBuilder>();
+        List<FilterBuilder> builders = new ArrayList<>();
         GraphModel gm = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
         Graph graph = gm.getGraph();
         AppearanceModel am = Lookup.getDefault().lookup(AppearanceController.class).getModel(workspace);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/JQuickHistogram.java
Patch:
@@ -72,7 +72,7 @@ public JQuickHistogram() {
     }
 
     public void clear() {
-        data = new ArrayList<Double>();
+        data = new ArrayList<>();
         minValue = Double.MAX_VALUE;
         maxValue = Double.NEGATIVE_INFINITY;
     }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/dynamic/DynamicRangePanel.java
Patch:
@@ -47,8 +47,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.event.ItemListener;
 import org.gephi.desktop.banner.perspective.spi.BottomComponent;
 import org.gephi.filters.plugin.dynamic.DynamicRangeBuilder.DynamicRangeFilter;
-//import org.gephi.desktop.perspective.spi.BottomComponent;
-//import org.gephi.filters.plugin.dynamic.DynamicRangeBuilder.DynamicRangeFilter;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/partition/PartitionPanel.java
Patch:
@@ -229,7 +229,7 @@ public void actionPerformed(ActionEvent e) {
             @Override
             public void actionPerformed(ActionEvent e) {
                 filter.selectAll();
-                refresh(filter.getPartition(), new HashSet<Object>(filter.getParts()));
+                refresh(filter.getPartition(), new HashSet<>(filter.getParts()));
             }
         });
         popupMenu.add(selectItem);
@@ -239,7 +239,7 @@ public void actionPerformed(ActionEvent e) {
             @Override
             public void actionPerformed(ActionEvent e) {
                 filter.unselectAll();
-                refresh(filter.getPartition(), new HashSet<Object>());
+                refresh(filter.getPartition(), new HashSet<>());
             }
         });
         popupMenu.add(unselectItem);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/partition/PartitionUIImpl.java
Patch:
@@ -44,8 +44,6 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import org.gephi.filters.plugin.partition.PartitionBuilder.PartitionFilter;
 import org.gephi.filters.plugin.partition.PartitionUI;
-
-
 import org.openide.util.lookup.ServiceProvider;
 
 /**

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyMapHelper.java
Patch:
@@ -18,9 +18,9 @@
  */
 public class LegacyMapHelper {
 
-    protected Map<Integer, String> nodeIndexToIds = new HashMap<Integer, String>();
-    protected Map<Integer, String> edgeIndexToIds = new HashMap<Integer, String>();
-    protected Map<Integer, Integer> preToIdMap = new HashMap<Integer, Integer>();
+    protected Map<Integer, String> nodeIndexToIds = new HashMap<>();
+    protected Map<Integer, String> edgeIndexToIds = new HashMap<>();
+    protected Map<Integer, Integer> preToIdMap = new HashMap<>();
 
     protected static LegacyMapHelper get(Workspace workspace) {
         LegacyMapHelper lh = workspace.getLookup().lookup(LegacyMapHelper.class);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/Database.java
Patch:
@@ -42,7 +42,6 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.io.importer.api;
 
 import java.io.Serializable;
-
 import org.gephi.io.database.drivers.SQLDriver;
 
 /**

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportController.java
Patch:
@@ -50,9 +50,9 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.spi.Importer;
 import org.gephi.io.importer.spi.ImporterUI;
 import org.gephi.io.importer.spi.ImporterWizardUI;
+import org.gephi.io.importer.spi.WizardImporter;
 import org.gephi.io.processor.spi.Processor;
 import org.gephi.project.api.Workspace;
-import org.gephi.io.importer.spi.WizardImporter;
 
 /**
  * Manage and control the import execution low.

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportUtils.java
Patch:
@@ -365,7 +365,7 @@ private static byte[] readBytes(InputStream inputStream, int numberOfBytes) thro
     }
 
     //COLORS
-    private static final Map<String, Integer> COLORS = new HashMap<String, Integer>();
+    private static final Map<String, Integer> COLORS = new HashMap<>();
 
     static {
         COLORS.put("gray30", 0x4D4D4D);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -61,6 +61,8 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.spi.Importer;
 import org.gephi.io.importer.spi.ImporterUI;
 import org.gephi.io.importer.spi.ImporterWizardUI;
+import org.gephi.io.importer.spi.WizardImporter;
+import org.gephi.io.importer.spi.WizardImporterBuilder;
 import org.gephi.io.processor.spi.Processor;
 import org.gephi.io.processor.spi.Scaler;
 import org.gephi.project.api.Workspace;
@@ -69,8 +71,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
-import org.gephi.io.importer.spi.WizardImporter;
-import org.gephi.io.importer.spi.WizardImporterBuilder;
 
 /**
  *
@@ -378,7 +378,7 @@ private FileImporterBuilder getMatchingImporter(String extension) {
 
     @Override
     public FileType[] getFileTypes() {
-        ArrayList<FileType> list = new ArrayList<FileType>();
+        ArrayList<FileType> list = new ArrayList<>();
         for (FileImporterBuilder im : fileImporterBuilders) {
             for (FileType ft : im.getFileTypes()) {
                 list.add(ft);

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterCSV.java
Patch:
@@ -92,7 +92,7 @@ public boolean execute(ContainerLoader container) {
     private void importData(LineNumberReader reader) throws Exception {
         Progress.start(progressTicket);        //Progress
 
-        List<String> lines = new ArrayList<String>();
+        List<String> lines = new ArrayList<>();
         for (; reader.ready();) {
             String line = reader.readLine();
             if (line != null && !line.isEmpty()) {
@@ -111,7 +111,7 @@ private void importData(LineNumberReader reader) throws Exception {
             line0 = line0.substring(1, line0.length());
             lines.remove(0);
             Matcher m = pattern.matcher(line0); //Remove the first ";"
-            List<String> labels = new ArrayList<String>();
+            List<String> labels = new ArrayList<>();
             while (m.find()) {
                 int start = m.start();
                 int end = m.end();

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGDF.java
Patch:
@@ -78,8 +78,8 @@ public class ImporterGDF implements FileImporter, LongTask {
     private ProgressTicket progressTicket;
     private boolean cancel = false;
     //Extract
-    private List<String> nodeLines = new ArrayList<String>();
-    private List<String> edgeLines = new ArrayList<String>();
+    private List<String> nodeLines = new ArrayList<>();
+    private List<String> edgeLines = new ArrayList<>();
     //Matcher
     private final String[] nodeLineStart;
     private final String[] edgeLineStart;

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -136,7 +136,6 @@ public boolean execute(ContainerLoader container) {
             inputFactory.setXMLReporter(new XMLReporter() {
                 @Override
                 public void report(String message, String errorType, Object relatedInformation, Location location) throws XMLStreamException {
-                    System.out.println("Error:" + errorType + ", message : " + message);
                 }
             });
             xmlReader = inputFactory.createXMLStreamReader(reader);

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java
Patch:
@@ -103,7 +103,7 @@ private void importData(LineNumberReader reader) throws Exception {
 
     private ArrayList<Object> parseList(LineNumberReader reader) throws IOException {
 
-        ArrayList<Object> list = new ArrayList<Object>();
+        ArrayList<Object> list = new ArrayList<>();
         char t;
         boolean readString = false;
         String stringBuffer = new String();

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -102,8 +102,8 @@ public class ImporterGraphML implements FileImporter, LongTask {
     private ProgressTicket progress;
     private XMLStreamReader xmlReader;
     private final PropertiesAssociations properties = new PropertiesAssociations();
-    private final HashMap<String, NodeProperties> nodePropertiesAttributes = new HashMap<String, NodeProperties>();
-    private final HashMap<String, EdgeProperties> edgePropertiesAttributes = new HashMap<String, EdgeProperties>();
+    private final HashMap<String, NodeProperties> nodePropertiesAttributes = new HashMap<>();
+    private final HashMap<String, EdgeProperties> edgePropertiesAttributes = new HashMap<>();
 
     public ImporterGraphML() {
         //Default node associations
@@ -148,7 +148,6 @@ public boolean execute(ContainerLoader container) {
             inputFactory.setXMLReporter(new XMLReporter() {
                 @Override
                 public void report(String message, String errorType, Object relatedInformation, Location location) throws XMLStreamException {
-                    System.out.println("Error:" + errorType + ", message : " + message);
                 }
             });
             xmlReader = inputFactory.createXMLStreamReader(reader);

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterTGF.java
Patch:
@@ -93,8 +93,8 @@ public boolean execute(ContainerLoader container) {
     private void importData(LineNumberReader reader) throws Exception {
         Progress.start(progressTicket);        //Progress
 
-        List<String> nodes = new ArrayList<String>();
-        List<String> edges = new ArrayList<String>();
+        List<String> nodes = new ArrayList<>();
+        List<String> edges = new ArrayList<>();
         boolean isNode = true;
         for (; reader.ready();) {
             String line = reader.readLine().trim();

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterVNA.java
Patch:
@@ -130,7 +130,7 @@ public boolean execute(ContainerLoader container) {
     }
 
     private void importData(LineNumberReader reader) throws Exception {
-        List<String> lines = new ArrayList<String>();
+        List<String> lines = new ArrayList<>();
         while (reader.ready()) {
             String line = reader.readLine();
             if (line != null && !line.isEmpty()) {
@@ -253,7 +253,7 @@ private String[] split(String line) {
         if (pattern == null) {
             pattern = Pattern.compile("[^\\s\"]+|\"([^\"]*)\"");
         }
-        List<String> tokens = new ArrayList<String>();
+        List<String> tokens = new ArrayList<>();
         Matcher patternMatcher = pattern.matcher(line);
         while (patternMatcher.find()) {
             if ((patternMatcher.group(1)) != null) {

File: modules/ImportPluginUI/src/main/java/org/gephi/ui/importer/plugin/EdgeListPanel.java
Patch:
@@ -50,9 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.sql.SQLException;
 import java.util.Collection;
 import java.util.logging.Logger;
-
 import javax.swing.DefaultComboBoxModel;
-
 import javax.swing.JFileChooser;
 import javax.swing.SwingUtilities;
 import org.gephi.io.database.drivers.SQLDriver;

File: modules/LayoutAPI/src/main/java/org/gephi/layout/LayoutControllerImpl.java
Patch:
@@ -41,15 +41,15 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.layout;
 
-import org.gephi.layout.spi.Layout;
 import org.gephi.layout.api.LayoutController;
 import org.gephi.layout.api.LayoutModel;
+import org.gephi.layout.spi.Layout;
 import org.gephi.project.api.ProjectController;
-import org.gephi.utils.longtask.spi.LongTask;
-import org.gephi.utils.progress.ProgressTicket;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.api.WorkspaceListener;
+import org.gephi.utils.longtask.spi.LongTask;
 import org.gephi.utils.progress.Progress;
+import org.gephi.utils.progress.ProgressTicket;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;

File: modules/LayoutAPI/src/main/java/org/gephi/layout/api/LayoutModel.java
Patch:
@@ -41,9 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
 */
 package org.gephi.layout.api;
 
+import java.beans.PropertyChangeListener;
 import org.gephi.layout.spi.Layout;
 import org.gephi.layout.spi.LayoutBuilder;
-import java.beans.PropertyChangeListener;
 import org.gephi.project.api.Workspace;
 
 /**

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/AutoLayout.java
Patch:
@@ -92,7 +92,7 @@ public class AutoLayout {
 
     public AutoLayout(long duration, TimeUnit timeUnit) {
         this.duration = TimeUnit.MILLISECONDS.convert(duration, timeUnit);
-        this.layouts = new ArrayList<LayoutScenario>();
+        this.layouts = new ArrayList<>();
     }
 
     public void addLayout(Layout layout, float ratio) {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/QuadTree.java
Patch:
@@ -114,7 +114,7 @@ public float size() {
     private void divideTree() {
         float childSize = size / 2;
 
-        children = new ArrayList<QuadTree>();
+        children = new ArrayList<>();
         children.add(new QuadTree(posX + childSize, posY + childSize,
                 childSize, maxLevel - 1));
         children.add(new QuadTree(posX, posY + childSize,

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java
Patch:
@@ -154,7 +154,7 @@ public float getAverageEdgeLength(Graph graph) {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         final String YIFANHU_CATEGORY = "Yifan Hu's properties";
         final String BARNESHUT_CATEGORY = "Barnes-Hut's properties";
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -239,7 +239,7 @@ public boolean canAlgo() {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         final String FORCE_ATLAS = "Force Atlas";
 
         try {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/ForceAtlas2.java
Patch:
@@ -307,7 +307,7 @@ public void endAlgo() {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         final String FORCEATLAS2_TUNING = NbBundle.getMessage(getClass(), "ForceAtlas2.tuning");
         final String FORCEATLAS2_BEHAVIOR = NbBundle.getMessage(getClass(), "ForceAtlas2.behavior");
         final String FORCEATLAS2_PERFORMANCE = NbBundle.getMessage(getClass(), "ForceAtlas2.performance");

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/fruchterman/FruchtermanReingold.java
Patch:
@@ -183,7 +183,7 @@ public boolean canAlgo() {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         final String FRUCHTERMAN_REINGOLD = "Fruchterman Reingold";
 
         try {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/noverlap/NoverlapLayoutData.java
Patch:
@@ -52,5 +52,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class NoverlapLayoutData extends ForceVectorNodeLayoutData {
 
-    public final List<Node> neighbours = new ArrayList<Node>();
+    public final List<Node> neighbours = new ArrayList<>();
 }

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/Combine.java
Patch:
@@ -154,9 +154,7 @@ private void printPositions(Node[] nodes) {
         for (Node node : nodes) {
             String xStr = formatter.format((double) node.x);
             String yStr = formatter.format((double) node.y);
-            System.out.print("(" + xStr + "-" + yStr + "),");
         }
-        System.out.println();
     }
 
     public float getTotEnergy() {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/DensityGrid.java
Patch:
@@ -201,7 +201,7 @@ private void fineAdd(Node n) {
         n.subY = n.y;
         ArrayDeque<Node> deque = bins[yGrid][xGrid];
         if (deque == null) {
-            deque = new ArrayDeque<Node>();
+            deque = new ArrayDeque<>();
             bins[yGrid][xGrid] = deque;
         }
         deque.addLast(n);

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/openord/OpenOrdLayout.java
Patch:
@@ -287,7 +287,7 @@ public void setGraphModel(GraphModel graphModel) {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         final String OPENORD = "OpenOrd";
         final String STAGE = "Stages";
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/RandomLayout.java
Patch:
@@ -96,7 +96,7 @@ public void endAlgo() {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         try {
             properties.add(LayoutProperty.createProperty(
                     this, Double.class,

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/rotate/RotateLayout.java
Patch:
@@ -99,7 +99,7 @@ public void resetPropertiesValues() {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         try {
             properties.add(LayoutProperty.createProperty(
                     this, Double.class,

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/ScaleLayout.java
Patch:
@@ -98,7 +98,7 @@ public void endAlgo() {
 
     @Override
     public LayoutProperty[] getProperties() {
-        List<LayoutProperty> properties = new ArrayList<LayoutProperty>();
+        List<LayoutProperty> properties = new ArrayList<>();
         try {
             properties.add(LayoutProperty.createProperty(
                     this, Double.class,

File: modules/LongTaskAPI/src/main/java/org/gephi/utils/longtask/api/LongTaskExecutor.java
Patch:
@@ -41,7 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.utils.longtask.api;
 
-import java.util.List;
 import java.util.Timer;
 import java.util.TimerTask;
 import java.util.concurrent.Future;

File: modules/MostRecentFilesAPI/src/main/java/org/gephi/desktop/mrufiles/impl/MostRecentFilesImpl.java
Patch:
@@ -70,7 +70,7 @@ public class MostRecentFilesImpl implements MostRecentFiles {
     public MostRecentFilesImpl() {
         nodeName = "mrufiles";
         maxSize = 9; // default is 9
-        mruFileList = new ArrayList<String>(maxSize);
+        mruFileList = new ArrayList<>(maxSize);
         listenerList = new EventListenerList();
         retrieve();
     }

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PDFRenderTargetBuilder.java
Patch:
@@ -44,7 +44,6 @@ Development and Distribution License("CDDL") (collectively, the
 import com.itextpdf.text.FontFactory;
 import com.itextpdf.text.pdf.BaseFont;
 import com.itextpdf.text.pdf.PdfContentByte;
-
 import java.awt.geom.AffineTransform;
 import org.gephi.preview.api.CanvasSize;
 import org.gephi.preview.api.PDFTarget;

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -145,7 +145,7 @@ public synchronized void refreshPreview(Workspace workspace) {
         if (!mousePressed) {
             renderers = model.getManagedEnabledRenderers();
         } else {
-            ArrayList<Renderer> renderersList = new ArrayList<Renderer>();
+            ArrayList<Renderer> renderersList = new ArrayList<>();
             for (Renderer renderer : model.getManagedEnabledRenderers()) {
                 //Only mouse responsive renderers will be called while mouse is pressed
                 if (renderer instanceof MouseResponsiveRenderer) {
@@ -308,7 +308,7 @@ private synchronized RenderTarget getRenderTarget(String name, PreviewModel m) {
     @Override
     public Renderer[] getRegisteredRenderers() {
         if (registeredRenderers == null) {
-            LinkedHashMap<String, Renderer> renderers = new LinkedHashMap<String, Renderer>();
+            LinkedHashMap<String, Renderer> renderers = new LinkedHashMap<>();
             for (Renderer r : Lookup.getDefault().lookupAll(Renderer.class)) {
                 renderers.put(r.getClass().getName(), r);
             }

File: modules/PreviewAPI/src/main/java/org/gephi/preview/SVGRenderTargetBuilder.java
Patch:
@@ -91,7 +91,7 @@ public static class SVGRenderTargetImpl
 
         private final Document document;
         private float scaleRatio = 1f;
-        private final Map<String, Element> topElements = new HashMap<String, Element>();
+        private final Map<String, Element> topElements = new HashMap<>();
 
         public SVGRenderTargetImpl(CanvasSize cs, boolean scaleStrokes) {
             DOMImplementation impl = SVGDOMImplementation.getDOMImplementation();

File: modules/PreviewAPI/src/main/java/org/gephi/preview/api/PreviewPreset.java
Patch:
@@ -44,8 +44,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
-import java.util.Map.Entry;
-import org.gephi.preview.presets.DefaultPreset;
 
 /**
  * Read only set of {@link PreviewProperty} values.
@@ -58,7 +56,7 @@ public class PreviewPreset implements Comparable<PreviewPreset> {
     protected final String name;
 
     public PreviewPreset(String name) {
-        properties = new HashMap<String, Object>();
+        properties = new HashMap<>();
         this.name = name;
     }
 

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/PDFExporter.java
Patch:
@@ -45,7 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 import com.itextpdf.text.BaseColor;
 import com.itextpdf.text.Document;
 import com.itextpdf.text.DocumentException;
-import com.itextpdf.text.FontFactory;
 import com.itextpdf.text.PageSize;
 import com.itextpdf.text.Rectangle;
 import com.itextpdf.text.pdf.PdfContentByte;
@@ -59,10 +58,10 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.preview.api.PreviewProperties;
 import org.gephi.preview.api.PreviewProperty;
 import org.gephi.preview.api.RenderTarget;
+import org.gephi.project.api.Workspace;
 import org.gephi.utils.longtask.spi.LongTask;
 import org.gephi.utils.progress.Progress;
 import org.gephi.utils.progress.ProgressTicket;
-import org.gephi.project.api.Workspace;
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/SVGExporter.java
Patch:
@@ -47,16 +47,15 @@ Development and Distribution License("CDDL") (collectively, the
 import org.apache.batik.transcoder.svg2svg.SVGTranscoder;
 import org.gephi.io.exporter.spi.CharacterExporter;
 import org.gephi.io.exporter.spi.VectorExporter;
-
 import org.gephi.preview.api.PreviewController;
 import org.gephi.preview.api.PreviewProperties;
 import org.gephi.preview.api.PreviewProperty;
 import org.gephi.preview.api.RenderTarget;
 import org.gephi.preview.api.SVGTarget;
-import org.gephi.utils.longtask.spi.LongTask;
-import org.gephi.utils.progress.ProgressTicket;
 import org.gephi.project.api.Workspace;
+import org.gephi.utils.longtask.spi.LongTask;
 import org.gephi.utils.progress.Progress;
+import org.gephi.utils.progress.ProgressTicket;
 import org.openide.util.Lookup;
 import org.w3c.dom.Document;
 

File: modules/PreviewExportUI/src/main/java/org/gephi/ui/exporter/preview/UIExporterPNG.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.ui.exporter.preview;
 
-import org.gephi.io.exporter.preview.PNGExporter;
 import javax.swing.JPanel;
+import org.gephi.io.exporter.preview.PNGExporter;
 import org.gephi.io.exporter.spi.Exporter;
 import org.gephi.io.exporter.spi.ExporterUI;
 import org.netbeans.validation.api.ui.ValidationPanel;

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/EdgeLabelBuilder.java
Patch:
@@ -73,7 +73,7 @@ public Item[] getItems(Graph graph) {
         VisualizationController vizController = Lookup.getDefault().lookup(VisualizationController.class);
         Column[] edgeColumns = vizController != null ? vizController.getEdgeTextColumns() : null;
 
-        List<Item> items = new ArrayList<Item>();
+        List<Item> items = new ArrayList<>();
         for (Edge e : graph.getEdges()) {
             EdgeLabelItem labelItem = new EdgeLabelItem(e);
             String label = getLabel(e, edgeColumns, graph.getView());

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/NodeLabelBuilder.java
Patch:
@@ -78,7 +78,7 @@ public Item[] getItems(Graph graph) {
         VisualizationController vizController = Lookup.getDefault().lookup(VisualizationController.class);
         Column[] nodeColumns = vizController != null ? vizController.getNodeTextColumns() : null;
 
-        List<Item> items = new ArrayList<Item>();
+        List<Item> items = new ArrayList<>();
         for (Node n : graph.getNodes()) {
             NodeLabelItem labelItem = new NodeLabelItem(n);
             String label = getLabel(n, nodeColumns, graph.getView());

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/items/AbstractItem.java
Patch:
@@ -58,7 +58,7 @@ public abstract class AbstractItem implements Item {
     public AbstractItem(Object source, String type) {
         this.type = type;
         this.source = source;
-        this.data = new HashMap<String, Object>();
+        this.data = new HashMap<>();
     }
 
     @Override

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/NodeLabelRenderer.java
Patch:
@@ -129,7 +129,7 @@ public void preProcess(PreviewModel previewModel) {
         }
 
         //Calculate font size and cache fonts
-        fontCache = new HashMap<Integer, Font>();
+        fontCache = new HashMap<>();
         Font font = properties.getFontValue(PreviewProperty.NODE_LABEL_FONT);
         for (Item item : previewModel.getItems(Item.NODE_LABEL)) {
             Float nodeSize = item.getData(NODE_SIZE);

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/AbstractProcessor.java
Patch:
@@ -43,12 +43,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.Color;
 import org.gephi.graph.api.AttributeUtils;
-import org.gephi.graph.api.Origin;
-import org.gephi.graph.api.Table;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Origin;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.TimeRepresentation;
 import org.gephi.graph.api.types.TimeMap;
 import org.gephi.graph.api.types.TimeSet;

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectControllerImpl.java
Patch:
@@ -79,7 +79,7 @@ private enum EventType {
     public ProjectControllerImpl() {
 
         //Listeners
-        listeners = new ArrayList<WorkspaceListener>();
+        listeners = new ArrayList<>();
         listeners.addAll(Lookup.getDefault().lookupAll(WorkspaceListener.class));
 
         registerNetbeansPropertyEditors();
@@ -91,7 +91,7 @@ public ProjectControllerImpl() {
      * read project files.
      */
     private void registerNetbeansPropertyEditors() {
-        List<String> list = new ArrayList<String>(Arrays.asList(PropertyEditorManager.getEditorSearchPath()));
+        List<String> list = new ArrayList<>(Arrays.asList(PropertyEditorManager.getEditorSearchPath()));
         if (!list.contains("org.netbeans.beaninfo.editors")) {
             list.add(0, "org.netbeans.beaninfo.editors");//Add first for more preference
             PropertyEditorManager.setEditorSearchPath(list.toArray(new String[list.size()]));

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectInformationImpl.java
Patch:
@@ -71,7 +71,7 @@ public enum Status {
     public ProjectInformationImpl(Project project, String name) {
         this.project = project;
         this.name = name;
-        listeners = new ArrayList<PropertyChangeListener>();
+        listeners = new ArrayList<>();
         status = Status.CLOSED;
     }
 

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectsImpl.java
Patch:
@@ -61,7 +61,7 @@ public class ProjectsImpl implements Projects, Serializable {
     private final AtomicInteger projectIds;
 
     public ProjectsImpl() {
-        projects = new ArrayList<Project>();
+        projects = new ArrayList<>();
         projectIds = new AtomicInteger(1);
     }
 

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/WorkspaceProviderImpl.java
Patch:
@@ -59,7 +59,7 @@ public class WorkspaceProviderImpl implements WorkspaceProvider {
 
     public WorkspaceProviderImpl(ProjectImpl project) {
         this.project = project;
-        workspaces = new ArrayList<Workspace>();
+        workspaces = new ArrayList<>();
     }
 
     public synchronized WorkspaceImpl newWorkspace() {

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/GephiReader.java
Patch:
@@ -112,7 +112,7 @@ private static void readWorkspaceLegacy(XMLStreamReader reader, ProjectImpl proj
             info.invalid();
         }
 
-        Map<String, WorkspaceXMLPersistenceProvider> providers = new LinkedHashMap<String, WorkspaceXMLPersistenceProvider>();
+        Map<String, WorkspaceXMLPersistenceProvider> providers = new LinkedHashMap<>();
         for (WorkspacePersistenceProvider w : Lookup.getDefault().lookupAll(WorkspacePersistenceProvider.class)) {
             String id = w.getIdentifier();
             if (id != null && !id.isEmpty() && w instanceof WorkspaceXMLPersistenceProvider) {

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/PersistenceProviderUtils.java
Patch:
@@ -50,7 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class PersistenceProviderUtils {
 
     public static Collection<WorkspacePersistenceProvider> getPersistenceProviders() {
-        Map<String, WorkspacePersistenceProvider> providers = new LinkedHashMap<String, WorkspacePersistenceProvider>();
+        Map<String, WorkspacePersistenceProvider> providers = new LinkedHashMap<>();
 
         for (WorkspacePersistenceProvider w : Lookup.getDefault().lookupAll(WorkspacePersistenceProvider.class)) {
             try {

File: modules/ProjectAPI/src/main/java/org/gephi/project/spi/WorkspacePersistenceProvider.java
Patch:
@@ -41,8 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.project.spi;
 
-import javax.xml.stream.XMLStreamReader;
-import javax.xml.stream.XMLStreamWriter;
 import org.gephi.project.api.Workspace;
 
 /**

File: modules/ProjectAPI/src/main/java/org/gephi/workspace/impl/WorkspaceInformationImpl.java
Patch:
@@ -62,7 +62,7 @@ public enum Status {
     private Status status = Status.CLOSED;
     private String source;
     //Lookup
-    private final transient List<PropertyChangeListener> listeners = new ArrayList<PropertyChangeListener>();
+    private final transient List<PropertyChangeListener> listeners = new ArrayList<>();
 
     public WorkspaceInformationImpl(String name) {
         this.name = name;

File: modules/StatisticsAPI/src/main/java/org/gephi/statistics/StatisticsModelImpl.java
Patch:
@@ -56,8 +56,8 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.xml.stream.XMLStreamReader;
 import javax.xml.stream.XMLStreamWriter;
 import org.apache.commons.codec.binary.Base64;
-import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.api.StatisticsModel;
+import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsBuilder;
 import org.gephi.statistics.spi.StatisticsUI;
 import org.gephi.utils.TempDirUtils;
@@ -75,7 +75,7 @@ public class StatisticsModelImpl implements StatisticsModel {
     private final Map<Class, String> reportMap;
 
     public StatisticsModelImpl() {
-        reportMap = new HashMap<Class, String>();
+        reportMap = new HashMap<>();
     }
 
     public void addReport(Statistics statistics) {

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/ChartUtils.java
Patch:
@@ -100,7 +100,6 @@ public static String renderChart(JFreeChart chart, String fileName) {
             imageFile = "<IMG SRC=\"file:" + file1.getAbsolutePath() + "\" " + "WIDTH=\"600\" HEIGHT=\"400\" BORDER=\"0\" USEMAP=\"#chart\"></IMG>";
             ChartUtilities.saveChartAsPNG(file1, chart, 600, 400, info);
         } catch (IOException e) {
-            System.out.println(e.toString());
         }
         return imageFile;
     }

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/PageRank.java
Patch:
@@ -44,14 +44,14 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashMap;
 import java.util.Map;
 import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.graph.api.DirectedGraph;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.EdgeIterable;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.UndirectedGraph;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.utils.longtask.spi.LongTask;
@@ -282,7 +282,7 @@ private double updateValueForNode(Graph hgraph, Node s, double[] pagerankValues,
     }
 
     public HashMap<Node, Integer> createIndiciesMap(Graph hgraph) {
-        HashMap<Node, Integer> newIndicies = new HashMap<Node, Integer>();
+        HashMap<Node, Integer> newIndicies = new HashMap<>();
         int index = 0;
         for (Node s : hgraph.getNodes()) {
             newIndicies.put(s, index);
@@ -298,7 +298,7 @@ public HashMap<Node, Integer> createIndiciesMap(Graph hgraph) {
     @Override
     public String getReport() {
         //distribution of values
-        Map<Double, Integer> dist = new HashMap<Double, Integer>();
+        Map<Double, Integer> dist = new HashMap<>();
         for (int i = 0; i < pageranks.length; i++) {
             Double d = pageranks[i];
             if (dist.containsKey(d)) {

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/builder/HitsBuilder.java
Patch:
@@ -45,7 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsBuilder;
 import org.openide.util.NbBundle;
-import org.openide.util.lookup.ServiceProvider;
 
 /**
  *

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicClusteringCoefficient.java
Patch:
@@ -46,13 +46,13 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashMap;
 import java.util.Map;
 import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.GraphView;
 import org.gephi.graph.api.Interval;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.TimeRepresentation;
 import org.gephi.graph.api.types.IntervalDoubleMap;
 import org.gephi.graph.api.types.TimestampDoubleMap;
@@ -103,7 +103,7 @@ public DynamicClusteringCoefficient() {
     public void execute(GraphModel graphModel) {
         this.graphModel = graphModel;
         this.isDirected = graphModel.isDirected();
-        this.averages = new HashMap<Double, Double>();
+        this.averages = new HashMap<>();
 
         //Attributes cols
         if (!averageOnly) {

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicDegree.java
Patch:
@@ -46,14 +46,14 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashMap;
 import java.util.Map;
 import org.gephi.graph.api.Column;
-import org.gephi.graph.api.Table;
 import org.gephi.graph.api.DirectedGraph;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.GraphView;
 import org.gephi.graph.api.Interval;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.TimeRepresentation;
 import org.gephi.graph.api.types.IntervalIntegerMap;
 import org.gephi.graph.api.types.TimestampIntegerMap;
@@ -105,7 +105,7 @@ public DynamicDegree() {
     public void execute(GraphModel graphModel) {
         this.graphModel = graphModel;
         this.isDirected = graphModel.isDirected();
-        this.averages = new HashMap<Double, Double>();
+        this.averages = new HashMap<>();
 
         //Attributes cols
         if (!averageOnly) {

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbEdges.java
Patch:
@@ -75,7 +75,7 @@ public class DynamicNbEdges implements DynamicStatistics {
     @Override
     public void execute(GraphModel graphModel) {
         this.graphModel = graphModel;
-        this.counts = new HashMap<Double, Integer>();
+        this.counts = new HashMap<>();
     }
 
     @Override

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbNodes.java
Patch:
@@ -75,7 +75,7 @@ public class DynamicNbNodes implements DynamicStatistics {
     @Override
     public void execute(GraphModel graphModel) {
         this.graphModel = graphModel;
-        this.counts = new HashMap<Double, Integer>();
+        this.counts = new HashMap<>();
     }
 
     @Override

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/ConnectedComponentsNGTest.java
Patch:
@@ -88,7 +88,7 @@ public void testComputeOneNodeWeeklyConnectedComponents() {
         Node n = graph.getNode("0");
 
         ConnectedComponents c = new ConnectedComponents();
-        HashMap<Node, Integer> indicies = new HashMap<Node, Integer>();
+        HashMap<Node, Integer> indicies = new HashMap<>();
         indicies.put(n, 0);
         LinkedList<LinkedList<Node>> components = c.computeWeeklyConnectedComponents(graph, indicies);
         assertEquals(components.size(), 1);
@@ -105,7 +105,7 @@ public void testNullGraphWeeklyConnectedComponents() {
         Node n4 = graph.getNode("4");
 
         ConnectedComponents c = new ConnectedComponents();
-        HashMap<Node, Integer> indicies = new HashMap<Node, Integer>();
+        HashMap<Node, Integer> indicies = new HashMap<>();
         indicies.put(n0, 0);
         indicies.put(n1, 1);
         indicies.put(n2, 2);

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/GraphDistanceNGTest.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.HashMap;
 import org.gephi.graph.api.DirectedGraph;
-import org.gephi.graph.api.UndirectedGraph;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.UndirectedGraph;
 import org.gephi.project.api.ProjectController;
 import org.gephi.project.impl.ProjectControllerImpl;
 import org.openide.util.Lookup;

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/PageRankNGTest.java
Patch:
@@ -43,11 +43,11 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.HashMap;
 import org.gephi.graph.api.DirectedGraph;
-import org.gephi.graph.api.UndirectedGraph;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.UndirectedGraph;
 import org.gephi.project.api.ProjectController;
 import org.gephi.project.impl.ProjectControllerImpl;
 import org.openide.util.Lookup;

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/HitsUI.java
Patch:
@@ -46,7 +46,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
 import org.openide.util.NbBundle;
-import org.openide.util.lookup.ServiceProvider;
 
 /**
  *

File: modules/TimelineAPI/src/main/java/org/gephi/timeline/TimelineControllerImpl.java
Patch:
@@ -63,8 +63,8 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.project.api.ProjectController;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.api.WorkspaceListener;
-import org.gephi.timeline.api.TimelineModel.PlayMode;
 import org.gephi.timeline.api.*;
+import org.gephi.timeline.api.TimelineModel.PlayMode;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -84,7 +84,7 @@ public class TimelineControllerImpl implements TimelineController {
     private FilterController filterController;
 
     public TimelineControllerImpl() {
-        listeners = new ArrayList<TimelineModelListener>();
+        listeners = new ArrayList<>();
 
         //Workspace events
         ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
@@ -337,7 +337,7 @@ public void setInterval(double from, double to) {
     @Override
     public String[] getDynamicGraphColumns() {
         if (graphModel != null) {
-            List<String> columns = new ArrayList<String>();
+            List<String> columns = new ArrayList<>();
             for (String k : graphModel.getGraph().getAttributeKeys()) {
                 Object a = graphModel.getGraph().getAttribute(k);
                 if (a instanceof IntervalMap || a instanceof TimestampMap) {

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java
Patch:
@@ -44,13 +44,14 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.beans.PropertyEditor;
 import java.beans.PropertyEditorManager;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.TextProperties;
 import org.gephi.graph.api.TimeFormat;
 import org.gephi.ui.tools.plugin.edit.EditWindowUtils.*;
+import org.gephi.ui.tools.plugin.edit.EditWindowUtils.AttributeValueWrapper;
 import org.joda.time.DateTimeZone;
 import org.openide.nodes.AbstractNode;
 import org.openide.nodes.Children;

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java
Patch:
@@ -44,8 +44,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.beans.PropertyEditor;
 import java.beans.PropertyEditorManager;
-import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.TextProperties;

File: modules/UIComponents/src/main/java/org/gephi/ui/components/ColumnSelectionPanel.java
Patch:
@@ -61,7 +61,7 @@ public class ColumnSelectionPanel extends JPanel {
     private Map<ColumnSelectionModel, JCheckBox> checkBoxes;
 
     public ColumnSelectionPanel(ColumnSelectionModel[] columns) {
-        checkBoxes = new HashMap<ColumnSelectionModel, JCheckBox>();
+        checkBoxes = new HashMap<>();
         setLayout(new GridBagLayout());
         init(columns);
     }

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JDropDownButton.java
Patch:
@@ -63,8 +63,8 @@ public class JDropDownButton extends JButton {
 
     private boolean mouseInButton = false;
     private boolean mouseInArrowArea = false;
-    private Map<String, Icon> regIcons = new HashMap<String, Icon>(5);
-    private Map<String, Icon> arrowIcons = new HashMap<String, Icon>(5);
+    private Map<String, Icon> regIcons = new HashMap<>(5);
+    private Map<String, Icon> arrowIcons = new HashMap<>(5);
     private static final String ICON_NORMAL = "normal"; //NOI18N
     private static final String ICON_PRESSED = "pressed"; //NOI18N
     private static final String ICON_ROLLOVER = "rollover"; //NOI18N

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JDropDownToggleButton.java
Patch:
@@ -65,8 +65,8 @@ public class JDropDownToggleButton extends JToggleButton {
 
     private boolean mouseInButton = false;
     private boolean mouseInArrowArea = false;
-    private Map<String, Icon> regIcons = new HashMap<String, Icon>(5);
-    private Map<String, Icon> arrowIcons = new HashMap<String, Icon>(5);
+    private Map<String, Icon> regIcons = new HashMap<>(5);
+    private Map<String, Icon> arrowIcons = new HashMap<>(5);
     private static final String ICON_NORMAL = "normal"; //NOI18N
     private static final String ICON_PRESSED = "pressed"; //NOI18N
     private static final String ICON_ROLLOVER = "rollover"; //NOI18N

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JPopupButton.java
Patch:
@@ -63,7 +63,7 @@ public class JPopupButton extends JButton {
 
     public JPopupButton() {
 
-        items = new ArrayList<JPopupButtonItem>();
+        items = new ArrayList<>();
         addActionListener(new ActionListener() {
 
             @Override

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JSqueezeBoxPanel.java
Patch:
@@ -68,7 +68,7 @@ public class JSqueezeBoxPanel extends JPanel {
     private final GridBagConstraints gbc = new GridBagConstraints();
     private final JScrollPane scrollPane;
     private final JPanel scrollPanel = new JPanel();
-    private final Map<JPanel, SnippetPanel> panelMap = new HashMap<JPanel, SnippetPanel>();
+    private final Map<JPanel, SnippetPanel> panelMap = new HashMap<>();
 
     public JSqueezeBoxPanel() {
         setName("JSqueezeBoxPanel"); // NOI18N

File: modules/UIComponents/src/main/java/org/gephi/ui/components/gradientslider/GradientSlider.java
Patch:
@@ -53,7 +53,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
 import java.lang.reflect.Constructor;
-
 import javax.swing.JColorChooser;
 import javax.swing.JPopupMenu;
 import javax.swing.SwingUtilities;

File: modules/UIComponents/src/main/java/org/gephi/ui/components/gradientslider/GradientSliderUI.java
Patch:
@@ -56,7 +56,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.geom.NoninvertibleTransformException;
 import java.awt.geom.RoundRectangle2D;
 import java.awt.image.BufferedImage;
-
 import javax.swing.JComponent;
 
 /**

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -72,6 +72,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.appearance.plugin.palette.Palette;
 import org.gephi.appearance.plugin.palette.PaletteGenerator;
 import org.gephi.appearance.plugin.palette.PaletteManager;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.ui.appearance.plugin.palette.PaletteGeneratorPanel;
 import org.gephi.ui.components.PaletteIcon;
 import org.gephi.ui.utils.UIUtils;
@@ -162,7 +163,7 @@ public boolean isCellEditable(int row, int column) {
 
         int j = 0;
         for (Object value : values) {
-            String displayName = value == null ? "null" : value.toString();
+            String displayName = value == null ? "null" : value.getClass().isArray() ? AttributeUtils.printArray(value) : value.toString();
             int count = function.getPartition().count(value);
             float percentage = function.getPartition().percentage(value) / 100f;
             model.setValueAt(value, j, 0);

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/palette/PaletteGenerator.java
Patch:
@@ -245,7 +245,7 @@ private static boolean checkColor2(double l, double a, double b, float[] filter)
         // Check that a color is valid: it must verify our checkColor condition, but also be in the color space
         return !Double.isNaN(rgb[0]) && rgb[0] >= 0 && rgb[1] >= 0
                 && rgb[2] >= 0 && rgb[0] < 256 && rgb[1] < 256 && rgb[2] < 256
-                && hcl[0] >= filter[0] && hcl[0] <= filter[1]
+                && (filter[0] < filter[1] ? (hcl[0] >= filter[0] && hcl[0] <= filter[1]) : (hcl[0] >= filter[0] || hcl[0] <= filter[1]))
                 && hcl[1] >= filter[2] && hcl[1] <= filter[3]
                 && hcl[2] >= filter[4] && hcl[2] <= filter[5];
     }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java
Patch:
@@ -130,7 +130,7 @@ public void actionPerformed(ActionEvent e) {
     }
 
     private boolean canChangeTimeRepresentation(GraphModel graphModel) {
-        if (graphModel.getGraph().getEdgeCount() > 0) {
+        if (graphModel.getGraph().getNodeCount() > 0) {
             return false;//Graph has to be empty
         }
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DefaultDataTablesEventListenerBuilder.java
Patch:
@@ -44,12 +44,9 @@ Development and Distribution License("CDDL") (collectively, the
 import java.lang.reflect.InvocationTargetException;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 import javax.swing.SwingUtilities;
-import javax.swing.SwingWorker;
 import org.gephi.datalab.api.datatables.DataTablesEventListener;
 import org.gephi.datalab.api.datatables.DataTablesEventListenerBuilder;
 import org.openide.util.lookup.ServiceProvider;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java
Patch:
@@ -114,7 +114,7 @@ public AbstractElementsDataTable() {
         timestampSetRenderer = new TimestampSetRenderer();
         intervalMapRenderer = new IntervalMapRenderer();
         timestampMapRenderer = new TimestampMapRenderer();
-
+        
         prepareCellEditors();
         prepareRenderers();
     }
@@ -222,8 +222,8 @@ public String getPattern() {
     public void refreshModel(T[] elements, Column[] cols, GraphModel graphModel, DataTablesModel dataTablesModel) {
         showingColumns = cols;
         Interval timeBounds = graphModel.getTimeBounds();
-        double min = timeBounds != null ? timeBounds.getLow() : Double.NEGATIVE_INFINITY;
-        double max = timeBounds != null ? timeBounds.getHigh() : Double.POSITIVE_INFINITY;
+        double min = timeBounds != null ? timeBounds.getLow() : 0;
+        double max = timeBounds != null ? timeBounds.getHigh() : 0;
 
         refreshCellRenderersAndEditorsConfiguration(graphModel, min, max);
 

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbEdges.java
Patch:
@@ -124,8 +124,8 @@ public void loop(GraphView window, Interval interval) {
 
         int count = graph.getEdgeCount();
         
-        graph.setAttribute(NB_EDGES, count, interval.getLow());
-        graph.setAttribute(NB_EDGES, count, interval.getHigh());
+        graphModel.getGraphVisible().setAttribute(NB_EDGES, count, interval.getLow());
+        graphModel.getGraphVisible().setAttribute(NB_EDGES, count, interval.getHigh());
 
         counts.put(interval.getLow(), count);
         counts.put(interval.getHigh(), count);

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbNodes.java
Patch:
@@ -124,8 +124,8 @@ public void loop(GraphView window, Interval interval) {
 
         int count = graph.getNodeCount();
 
-        graph.setAttribute(NB_NODES, count, interval.getLow());
-        graph.setAttribute(NB_NODES, count, interval.getHigh());
+        graphModel.getGraphVisible().setAttribute(NB_NODES, count, interval.getLow());
+        graphModel.getGraphVisible().setAttribute(NB_NODES, count, interval.getHigh());
 
         counts.put(interval.getLow(), count);
         counts.put(interval.getHigh(), count);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -562,7 +562,7 @@ public void setInterval(String startDateTime, String endDateTime) {
             }
             this.interval = new Interval(start, end);
         } catch (Exception e) {
-            report.logIssue(new Issue(NbBundle.getMessage(ImportContainerImpl.class, "ImportContainerException_Interval_Parse_Error", timestamp), Level.SEVERE));
+            report.logIssue(new Issue(NbBundle.getMessage(ImportContainerImpl.class, "ImportContainerException_Interval_Parse_Error", "["+startDateTime+","+endDateTime+"]"), Level.SEVERE));
             return;
         }
         report.log(NbBundle.getMessage(ImportContainerImpl.class, "ImportContainerLog.GraphInterval", "[" + startDateTime + "," + endDateTime + "]"));

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/FixedSizeMode.java
Patch:
@@ -45,6 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.apiimpl.GraphDrawable;
 import org.gephi.visualization.model.node.NodeModel;
+import org.openide.util.NbBundle;
 
 /**
  *
@@ -72,7 +73,7 @@ public float getSizeFactor3d(float sizeFactor, NodeModel model) {
 
     @Override
     public String getName() {
-        return "Fixed";
+        return NbBundle.getMessage(FixedSizeMode.class, "FixedSizeMode.name");
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/ObjectColorMode.java
Patch:
@@ -48,6 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.visualization.model.edge.EdgeModel;
 import org.gephi.visualization.model.node.NodeModel;
 import org.gephi.visualization.text.TextManager.Renderer;
+import org.openide.util.NbBundle;
 
 /**
  *
@@ -95,7 +96,7 @@ protected void textColor(Renderer renderer, TextModel text, boolean selected) {
 
     @Override
     public String getName() {
-        return "Object";
+        return NbBundle.getMessage(ObjectColorMode.class, "ObjectColorMode.name");
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/ProportionalSizeMode.java
Patch:
@@ -43,6 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import javax.swing.ImageIcon;
 import org.gephi.visualization.model.node.NodeModel;
+import org.openide.util.NbBundle;
 
 /**
  *
@@ -68,7 +69,7 @@ public float getSizeFactor3d(float sizeFactor, NodeModel model) {
 
     @Override
     public String getName() {
-        return "Node size";
+        return NbBundle.getMessage(ProportionalSizeMode.class, "ProportionalSizeMode.name");
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/ScaledSizeMode.java
Patch:
@@ -43,6 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import javax.swing.ImageIcon;
 import org.gephi.visualization.model.node.NodeModel;
+import org.openide.util.NbBundle;
 
 /**
  *
@@ -68,7 +69,7 @@ public float getSizeFactor3d(float sizeFactor, NodeModel model) {
 
     @Override
     public String getName() {
-        return "Scaled";
+        return NbBundle.getMessage(ScaledSizeMode.class, "ScaledSizeMode.name");
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/UniqueColorMode.java
Patch:
@@ -48,6 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.visualization.model.edge.EdgeModel;
 import org.gephi.visualization.model.node.NodeModel;
 import org.gephi.visualization.text.TextManager.Renderer;
+import org.openide.util.NbBundle;
 
 /**
  *
@@ -99,7 +100,7 @@ public void textColor(Renderer renderer, TextModel text, boolean selected) {
 
     @Override
     public String getName() {
-        return "Unique";
+        return NbBundle.getMessage(UniqueColorMode.class, "UniqueColorMode.name");
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java
Patch:
@@ -243,7 +243,7 @@ public void display(GL2 gl, GLU glu) {
                     for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {
                         EdgeModel obj = itr.next();
                         if (obj.markTime != markTime) {
-                            if (obj.isSelected() || obj.isTextVisible()) {
+                            if ((obj.isSelected() || obj.isAutoSelected()) && obj.isTextVisible()) {
                                 textManager.getEdgeRenderer().drawTextEdge(obj);
                             }
                             obj.markTime = markTime;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/TextManager.java
Patch:
@@ -95,9 +95,10 @@ public TextManager() {
         sizeModes[2] = new ProportionalSizeMode();
 
         //ColorMode init
-        colorModes = new ColorMode[2];
+        colorModes = new ColorMode[3];
         colorModes[0] = new UniqueColorMode();
         colorModes[1] = new ObjectColorMode();
+        colorModes[2] = new TextColorMode();
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/ObjectColorMode.java
Patch:
@@ -71,7 +71,7 @@ public void defaultNodeColor(Renderer renderer) {
 
     @Override
     public void textNodeColor(Renderer renderer, NodeModel nodeModel) {
-        textColor(renderer, nodeModel, nodeModel.isSelected());
+        textColor(renderer, nodeModel, nodeModel.isSelected() || nodeModel.isHighlight());
     }
 
     @Override

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java
Patch:
@@ -152,7 +152,7 @@ private Sheet.Set prepareEdgesAttributes() {
                 PropertyEditor propEditor = PropertyEditorManager.findEditor(type);
                 if (ac.canChangeColumnData(column)) {
                     //Editable column, provide "set" method:
-                    if (propEditor != null) {//The type can be edited by default:
+                    if (propEditor != null && !type.isArray()) {//The type can be edited by default:
                         p = new PropertySupport.Reflection(wrap, type, "getValue" + type.getSimpleName(), "setValue" + type.getSimpleName());
                     } else {//Use the AttributeType as String:
                         p = new PropertySupport.Reflection(wrap, String.class, "getValueAsString", "setValueAsString");

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java
Patch:
@@ -152,7 +152,7 @@ private Sheet.Set prepareNodesAttributes() {
                 PropertyEditor propEditor = PropertyEditorManager.findEditor(type);
                 if (ac.canChangeColumnData(column)) {
                     //Editable column, provide "set" method:
-                    if (propEditor != null) {//The type can be edited by default:
+                    if (propEditor != null && !type.isArray()) {//The type can be edited by default:
                         p = new PropertySupport.Reflection(wrap, type, "getValue" + type.getSimpleName(), "setValue" + type.getSimpleName());
                     } else {//Use the AttributeType as String:
                         p = new PropertySupport.Reflection(wrap, String.class, "getValueAsString", "setValueAsString");

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditToolTopComponent.java
Patch:
@@ -66,6 +66,7 @@ public EditToolTopComponent() {
         setName(NbBundle.getMessage(EditToolTopComponent.class, "CTL_EditToolTopComponent"));
 
         putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
+        ((PropertySheet)propertySheet).setDescriptionAreaVisible(false);
 
         Lookup.getDefault().lookup(ProjectController.class).addWorkspaceListener(new WorkspaceListener() {
 

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java
Patch:
@@ -383,7 +383,7 @@ private class GraphChangeObserver extends TimerTask {
         public GraphChangeObserver(Graph graph, Column column) {
             timer = new Timer("GraphChangeObserver", true);
             graphObserver = graph.getModel().createGraphObserver(graph, false);
-            columnObserver = column != null ? column.createColumnObserver() : null;
+            columnObserver = column != null ? column.createColumnObserver(false) : null;
         }
 
         @Override

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -536,7 +536,7 @@ private void refreshAttributeFunctions(boolean graphHasChanged) {
             Set<Column> toRefreshColumns = new HashSet<Column>(forcedColumnsRefresh);
             for (Column column : columns) {
                 if (!columnObservers.containsKey(column)) {
-                    columnObservers.put(column, column.createColumnObserver());
+                    columnObservers.put(column, column.createColumnObserver(false));
                     toRefreshColumns.add(column);
                 } else if (columnObservers.get(column).hasColumnChanged() || graphHasChanged) {
                     toRefreshColumns.add(column);

File: modules/UIUtils/src/main/java/org/gephi/ui/utils/ColumnTitleValidator.java
Patch:
@@ -47,9 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.util.NbBundle;
 
 /**
- * Utils class to validate a string that contains a valid title for a column of
- * a
- * <code>AttributeTable</code>.
+ * Utils class to validate a string that contains a valid title for a column of a {@link Table}
  *
  * @author Eduardo Ramos
  */

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/bridge/DataBridge.java
Patch:
@@ -297,7 +297,7 @@ private void refreshNodeColumns(TextModelImpl textModelImpl) {
         nodeColumnHashCode = Arrays.hashCode(nodeColumns);
         nodeColumnObservers = new ColumnObserver[nodeColumns.length];
         for (int i = 0; i < nodeColumns.length; i++) {
-            nodeColumnObservers[i] = nodeColumns[i].createColumnObserver();
+            nodeColumnObservers[i] = nodeColumns[i].createColumnObserver(false);
         }
     }
 
@@ -314,7 +314,7 @@ private void refreshEdgeColumns(TextModelImpl textModelImpl) {
         edgeColumnHashCode = Arrays.hashCode(edgeColumns);
         edgeColumnObservers = new ColumnObserver[edgeColumns.length];
         for (int i = 0; i < edgeColumns.length; i++) {
-            edgeColumnObservers[i] = edgeColumns[i].createColumnObserver();
+            edgeColumnObservers[i] = edgeColumns[i].createColumnObserver(false);
         }
     }
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/NodeDraftImpl.java
Patch:
@@ -119,6 +119,7 @@ public boolean isFixed() {
         return fixed;
     }
 
+    @Override
     public boolean isCreatedAuto() {
         return createdAuto;
     }

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/AbstractProcessor.java
Patch:
@@ -108,7 +108,9 @@ protected void flushToNode(NodeDraft nodeDraft, Node node) {
         }
         
         if (nodeDraft.getLabel() != null) {
-            node.setLabel(nodeDraft.getLabel());
+            if (node.getLabel() == null || !nodeDraft.isCreatedAuto()) {
+                node.setLabel(nodeDraft.getLabel());
+            }
         }
         
         if (node.getTextProperties() != null) {

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/palette/PaletteManager.java
Patch:
@@ -58,7 +58,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Random;
 import java.util.prefs.BackingStoreException;
 import java.util.prefs.Preferences;
-import org.gephi.appearance.plugin.RankingElementColorTransformer;
 import org.openide.util.Exceptions;
 import org.openide.util.NbPreferences;
 
@@ -126,7 +125,7 @@ public Palette generatePalette(int colorCount, Preset preset) {
         } else if (colorCount > 300) {
             quality = 2;
         }
-        Color[] cls = PaletteGenerator.generatePalette(colorCount, quality, preset.toArray());
+        Color[] cls = PaletteGenerator.generatePalette(colorCount, quality, preset != null ? preset.toArray() : null);
         return new Palette(cls);
     }
 

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/Function.java
Patch:
@@ -67,9 +67,10 @@ public interface Function {
     /**
      * Returns the transformer associated with this function.
      *
+     * @param <T> transformer class
      * @return transformer
      */
-    public Transformer getTransformer();
+    public <T extends Transformer> T getTransformer();
 
     /**
      * Returns the transformer user interface associated with this function.

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/FunctionImpl.java
Patch:
@@ -95,6 +95,9 @@ public void transform(Element element, Graph graph) {
             ((SimpleTransformer) transformer).transform(element);
         } else if (isRanking()) {
             Number val = ranking.getValue(element, graph);
+            if (val == null) {
+                throw new NullPointerException("The element with id '" + element.getId() + "' has a null value for ranking");
+            }
             ((RankingTransformer) transformer).transform(element, ranking, interpolator, val);
         } else if (isPartition()) {
             Object val = partition.getValue(element, graph);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/CreateTimeIntervalUI.java
Patch:
@@ -84,6 +84,9 @@ public class CreateTimeIntervalUI extends javax.swing.JPanel implements Manipula
      */
     public CreateTimeIntervalUI() {
         initComponents();
+        
+        defaultStartDatePicker.setFormats("yyyy-MM-dd");
+        defaultEndDatePicker.setFormats("yyyy-MM-dd");
 
         //Add some common date formats to choose:
         dateFormatComboBox.addItem("yyyy-MM-dd");

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/api/ProjectControllerUI.java
Patch:
@@ -67,6 +67,8 @@ public interface ProjectControllerUI {
 
     public Workspace duplicateWorkspace();
 
+    public Project getCurrentProject();
+
     public Project newProject();
 
     public void deleteWorkspace();

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/InterEdgesBuilder.java
Patch:
@@ -160,7 +160,7 @@ public InterEdgesFilter(Column column, AppearanceModel model) {
 
         @Override
         public String getName() {
-            return NbBundle.getMessage(IntraEdgesBuilder.class, "InterEdgesBuilder.name") + " (" + partition.getColumn().getTitle() + ")";
+            return NbBundle.getMessage(IntraEdgesBuilder.class, "InterEdgesBuilder.name") + " (" + column.getTitle() + ")";
         }
 
         @Override

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/IntraEdgesBuilder.java
Patch:
@@ -160,7 +160,7 @@ public IntraEdgesFilter(Column column, AppearanceModel model) {
 
         @Override
         public String getName() {
-            return NbBundle.getMessage(IntraEdgesBuilder.class, "IntraEdgesBuilder.name") + " (" + partition.getColumn().getTitle() + ")";
+            return NbBundle.getMessage(IntraEdgesBuilder.class, "IntraEdgesBuilder.name") + " (" + column.getTitle() + ")";
         }
 
         @Override

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyAttributeRowsPersistenceProvider.java
Patch:
@@ -149,7 +149,7 @@ public void readRow(XMLStreamReader reader, Element element, Table table, Legacy
                         end = true;
                     }
                     if (!value.isEmpty() && index != null) {
-                        String id = mapHelper.indexToIds.get(index);
+                        String id = table.getElementClass().equals(Node.class) ? mapHelper.nodeIndexToIds.get(index) : mapHelper.edgeIndexToIds.get(index);
                         if (id != null) {
                             Column col = table.getColumn(id);
 

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyMapHelper.java
Patch:
@@ -18,7 +18,8 @@
  */
 public class LegacyMapHelper {
 
-    protected Map<Integer, String> indexToIds = new HashMap<Integer, String>();
+    protected Map<Integer, String> nodeIndexToIds = new HashMap<Integer, String>();
+    protected Map<Integer, String> edgeIndexToIds = new HashMap<Integer, String>();
     protected Map<Integer, Integer> preToIdMap = new HashMap<Integer, Integer>();
 
     protected static LegacyMapHelper get(Workspace workspace) {

File: modules/PreviewAPI/src/main/java/org/gephi/preview/G2DRenderTargetBuilder.java
Patch:
@@ -194,7 +194,6 @@ public void refresh(PreviewModel m, RenderTarget target) {
                 inited = true;
             }
 
-            g2.clearRect(0, 0, width, height);
             g2.setTransform(new AffineTransform());
 
             background = m.getProperties()

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/PNGExporter.java
Patch:
@@ -186,7 +186,7 @@ private synchronized void setExportProperties(PreviewModel m) {
         if (transparentBackground) {
             props.putValue(
                     PreviewProperty.BACKGROUND_COLOR,
-                    new Color(255, 255, 255, 0)); //White transparent
+                    null); //Transparent
         }
         props.putValue(PreviewProperty.MARGIN, new Float(margin));
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizController.java
Patch:
@@ -68,6 +68,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.visualization.swing.StandardGraphIO;
 import org.gephi.visualization.text.TextManager;
 import org.openide.util.Lookup;
+import org.openide.util.Utilities;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -120,6 +121,8 @@ public void initInstances() {
 
         if (vizConfig.isUseGLJPanel()) {
             //No more supported
+        } else if (Utilities.isMac()) {
+            drawable = createCanvas();
         } else {
             drawable = createNewtCanvas();
         }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/CollapsePanel.java
Patch:
@@ -97,8 +97,8 @@ public void actionPerformed(ActionEvent e) {
                 }
                 extendedPanel.setVisible(ext);
 
-                 // Workaround for JOGL bug 1274
-                ((NewtGraphCanvas)VizController.getInstance().getDrawable()).reinitWindow();
+                // Workaround for JOGL bug 1274
+                (VizController.getInstance().getDrawable()).reinitWindow();
             }
         });
         if (!extended) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizController.java
Patch:
@@ -68,6 +68,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.visualization.swing.StandardGraphIO;
 import org.gephi.visualization.text.TextManager;
 import org.openide.util.Lookup;
+import org.openide.util.Utilities;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -120,6 +121,8 @@ public void initInstances() {
 
         if (vizConfig.isUseGLJPanel()) {
             //No more supported
+        } else if (Utilities.isMac()) {
+            drawable = createCanvas();
         } else {
             drawable = createNewtCanvas();
         }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/CollapsePanel.java
Patch:
@@ -97,8 +97,8 @@ public void actionPerformed(ActionEvent e) {
                 }
                 extendedPanel.setVisible(ext);
 
-                 // Workaround for JOGL bug 1274
-                ((NewtGraphCanvas)VizController.getInstance().getDrawable()).reinitWindow();
+                // Workaround for JOGL bug 1274
+                (VizController.getInstance().getDrawable()).reinitWindow();
             }
         });
         if (!extended) {

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/FunctionImpl.java
Patch:
@@ -95,6 +95,9 @@ public void transform(Element element, Graph graph) {
             ((SimpleTransformer) transformer).transform(element);
         } else if (isRanking()) {
             Number val = ranking.getValue(element, graph);
+            if (val == null) {
+                throw new NullPointerException("The element with id '" + element.getId() + "' has a null value for ranking");
+            }
             ((RankingTransformer) transformer).transform(element, ranking, interpolator, val);
         } else if (isPartition()) {
             Object val = partition.getValue(element, graph);

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/ImportWizard.java
Patch:
@@ -80,8 +80,8 @@ public void actionPerformed(ActionEvent e) {
 
             //Get Importer
             WizardImporter importer = null;
-            for (WizardImporterBuilder spigotBuilder : Lookup.getDefault().lookupAll(WizardImporterBuilder.class)) {
-                WizardImporter im = spigotBuilder.buildImporter();
+            for (WizardImporterBuilder wizardBuilder : Lookup.getDefault().lookupAll(WizardImporterBuilder.class)) {
+                WizardImporter im = wizardBuilder.buildImporter();
                 if (wizardUI.isUIForImporter(im)) {
                     importer = im;
                 }
@@ -97,7 +97,7 @@ public void actionPerformed(ActionEvent e) {
             wizardIterator.unsetupPanels(importer);
 
             ImportControllerUI importControllerUI = Lookup.getDefault().lookup(ImportControllerUI.class);
-            importControllerUI.importSpigot(importer);
+            importControllerUI.importWizard(importer);
         }
     }
 }

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/WizardVisualPanel2.java
Patch:
@@ -45,9 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 
 public final class WizardVisualPanel2 extends JPanel {
 
-    /**
-     * Creates new form SpigotVisualPanel2
-     */
     public WizardVisualPanel2() {
         initComponents();
     }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/importer/api/ImportControllerUI.java
Patch:
@@ -46,8 +46,8 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.api.Database;
 import org.gephi.io.importer.api.ImportController;
 import org.gephi.io.importer.spi.DatabaseImporter;
-import org.gephi.io.importer.spi.SpigotImporter;
 import org.openide.filesystems.FileObject;
+import org.gephi.io.importer.spi.WizardImporter;
 
 /**
  *
@@ -67,7 +67,7 @@ public interface ImportControllerUI {
 
     public void importDatabase(DatabaseImporter importer);
 
-    public void importSpigot(SpigotImporter importer);
+    public void importWizard(WizardImporter importer);
 
     public ImportController getImportController();
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportController.java
Patch:
@@ -50,9 +50,9 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.spi.Importer;
 import org.gephi.io.importer.spi.ImporterUI;
 import org.gephi.io.importer.spi.ImporterWizardUI;
-import org.gephi.io.importer.spi.SpigotImporter;
 import org.gephi.io.processor.spi.Processor;
 import org.gephi.project.api.Workspace;
+import org.gephi.io.importer.spi.WizardImporter;
 
 /**
  * Manage and control the import execution low.
@@ -71,7 +71,7 @@ public interface ImportController {
 
     public Container importFile(InputStream stream, FileImporter importer);
 
-    public Container importSpigot(SpigotImporter importer);
+    public Container importWizard(WizardImporter importer);
 
     public FileImporter getFileImporter(File file);
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/ImporterWizardUI.java
Patch:
@@ -49,14 +49,14 @@ Development and Distribution License("CDDL") (collectively, the
  * Declared in the system as services (i.e. singleton), the role of UI classes
  * is to provide user interface to configure importers and remember last used
  * settings if needed. This service is designed to provide the different panels
- * part of a spigot import wizard.
+ * part of an import wizard.
  * <p>
  * To be recognized by the system, implementations must just add the following
  * annotation:
  * <pre>@ServiceProvider(service=ImporterWizardUI.class)</pre>
  *
  * @author Mathieu Bastian
- * @see SpigotImporter
+ * @see WizardImporter
  */
 public interface ImporterWizardUI {
 
@@ -105,7 +105,7 @@ public interface ImporterWizardUI {
      * @param importer the importer that settings are to be written
      * @param panel the panel that settings are read
      */
-    public void unsetup(SpigotImporter importer, WizardDescriptor.Panel panel);
+    public void unsetup(WizardImporter importer, WizardDescriptor.Panel panel);
 
     /**
      * Returns <code>true</code> if this UI belongs to the given importer.

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/WizardImporter.java
Patch:
@@ -42,11 +42,11 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.io.importer.spi;
 
 /**
- * Importers interface for importing data from spigots. Spigots are more complex
+ * Importers interface for importing data from wizards. Wizards are more complex
  * data source than a simple file or database, for instance web services or
  * directories.
  *
  * @author Mathieu Bastian
  */
-public interface SpigotImporter extends Importer {
+public interface WizardImporter extends Importer {
 }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/api/ProjectControllerUI.java
Patch:
@@ -67,6 +67,8 @@ public interface ProjectControllerUI {
 
     public Workspace duplicateWorkspace();
 
+    public Project getCurrentProject();
+
     public Project newProject();
 
     public void deleteWorkspace();

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyAttributeRowsPersistenceProvider.java
Patch:
@@ -149,7 +149,7 @@ public void readRow(XMLStreamReader reader, Element element, Table table, Legacy
                         end = true;
                     }
                     if (!value.isEmpty() && index != null) {
-                        String id = mapHelper.indexToIds.get(index);
+                        String id = table.getElementClass().equals(Node.class) ? mapHelper.nodeIndexToIds.get(index) : mapHelper.edgeIndexToIds.get(index);
                         if (id != null) {
                             Column col = table.getColumn(id);
 

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyMapHelper.java
Patch:
@@ -18,7 +18,8 @@
  */
 public class LegacyMapHelper {
 
-    protected Map<Integer, String> indexToIds = new HashMap<Integer, String>();
+    protected Map<Integer, String> nodeIndexToIds = new HashMap<Integer, String>();
+    protected Map<Integer, String> edgeIndexToIds = new HashMap<Integer, String>();
     protected Map<Integer, Integer> preToIdMap = new HashMap<Integer, Integer>();
 
     protected static LegacyMapHelper get(Workspace workspace) {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/CreateTimeIntervalUI.java
Patch:
@@ -84,6 +84,9 @@ public class CreateTimeIntervalUI extends javax.swing.JPanel implements Manipula
      */
     public CreateTimeIntervalUI() {
         initComponents();
+        
+        defaultStartDatePicker.setFormats("yyyy-MM-dd");
+        defaultEndDatePicker.setFormats("yyyy-MM-dd");
 
         //Add some common date formats to choose:
         dateFormatComboBox.addItem("yyyy-MM-dd");

File: modules/PreviewAPI/src/main/java/org/gephi/preview/G2DRenderTargetBuilder.java
Patch:
@@ -194,7 +194,6 @@ public void refresh(PreviewModel m, RenderTarget target) {
                 inited = true;
             }
 
-            g2.clearRect(0, 0, width, height);
             g2.setTransform(new AffineTransform());
 
             background = m.getProperties()

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/PNGExporter.java
Patch:
@@ -186,7 +186,7 @@ private synchronized void setExportProperties(PreviewModel m) {
         if (transparentBackground) {
             props.putValue(
                     PreviewProperty.BACKGROUND_COLOR,
-                    new Color(255, 255, 255, 0)); //White transparent
+                    null); //Transparent
         }
         props.putValue(PreviewProperty.MARGIN, new Float(margin));
     }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/InterEdgesBuilder.java
Patch:
@@ -160,7 +160,7 @@ public InterEdgesFilter(Column column, AppearanceModel model) {
 
         @Override
         public String getName() {
-            return NbBundle.getMessage(IntraEdgesBuilder.class, "InterEdgesBuilder.name") + " (" + partition.getColumn().getTitle() + ")";
+            return NbBundle.getMessage(IntraEdgesBuilder.class, "InterEdgesBuilder.name") + " (" + column.getTitle() + ")";
         }
 
         @Override

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/IntraEdgesBuilder.java
Patch:
@@ -160,7 +160,7 @@ public IntraEdgesFilter(Column column, AppearanceModel model) {
 
         @Override
         public String getName() {
-            return NbBundle.getMessage(IntraEdgesBuilder.class, "IntraEdgesBuilder.name") + " (" + partition.getColumn().getTitle() + ")";
+            return NbBundle.getMessage(IntraEdgesBuilder.class, "IntraEdgesBuilder.name") + " (" + column.getTitle() + ")";
         }
 
         @Override

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -557,9 +557,7 @@ private void refreshAttributeFunctions(boolean graphHasChanged) {
                             partition = new AttributePartitionImpl(column, graph);
                         }
                         partitions.put(getIdCol(column), partition);
-                    }
-                    
-                    if (forcedRanking.contains(id) || isRanking(graph, column)) {
+                    } else if (forcedRanking.contains(id) || (!forcedPartition.contains(id) && isRanking(graph, column))) {
                         if (column.isIndexed()) {
                             ranking = new AttributeRankingImpl(column, getIndex(localScale));
                         } else {

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/partition/PartitionPanel.java
Patch:
@@ -199,7 +199,7 @@ public Object getPart() {
 
         @Override
         public String toString() {
-            String percentageStr = FORMATTER.format(percentage);
+            String percentageStr = FORMATTER.format(percentage / 100f);
             return part.toString() + " (" + percentageStr + ")";
         }
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/LabelAttributesPanel.java
Patch:
@@ -133,10 +133,10 @@ private void refresh() {
             target = nodeCheckBoxs;
         } else {
             for (Column c : graphController.getGraphModel().getEdgeTable()) {
-                if (c.getOrigin().equals(Origin.DATA)) {
+                if (!c.isProperty()) {
                     availableColumns.add(c);
                 } else if (showProperties) {
-                    if (c.getId().equalsIgnoreCase("label")) {
+                    if (showProperties && c.isProperty() && !c.getId().equals("timeset")) {
                         availableColumns.add(c);
                     }
                 }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/partition/PartitionPanel.java
Patch:
@@ -199,7 +199,7 @@ public Object getPart() {
 
         @Override
         public String toString() {
-            String percentageStr = FORMATTER.format(percentage);
+            String percentageStr = FORMATTER.format(percentage / 100f);
             return part.toString() + " (" + percentageStr + ")";
         }
 

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -557,9 +557,7 @@ private void refreshAttributeFunctions(boolean graphHasChanged) {
                             partition = new AttributePartitionImpl(column, graph);
                         }
                         partitions.put(getIdCol(column), partition);
-                    }
-                    
-                    if (forcedRanking.contains(id) || isRanking(graph, column)) {
+                    } else if (forcedRanking.contains(id) || (!forcedPartition.contains(id) && isRanking(graph, column))) {
                         if (column.isIndexed()) {
                             ranking = new AttributeRankingImpl(column, getIndex(localScale));
                         } else {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/LabelAttributesPanel.java
Patch:
@@ -133,10 +133,10 @@ private void refresh() {
             target = nodeCheckBoxs;
         } else {
             for (Column c : graphController.getGraphModel().getEdgeTable()) {
-                if (c.getOrigin().equals(Origin.DATA)) {
+                if (!c.isProperty()) {
                     availableColumns.add(c);
                 } else if (showProperties) {
-                    if (c.getId().equalsIgnoreCase("label")) {
+                    if (showProperties && c.isProperty() && !c.getId().equals("timeset")) {
                         availableColumns.add(c);
                     }
                 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ColumnValuesFrequencyUI.java
Patch:
@@ -124,6 +124,7 @@ private void initComponents() {
         configurePieChartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/datalab/plugin/manipulators/resources/category.png"))); // NOI18N
         configurePieChartButton.setText(org.openide.util.NbBundle.getMessage(ColumnValuesFrequencyUI.class, "ColumnValuesFrequencyUI.configurePieChartButton.text")); // NOI18N
         configurePieChartButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 configurePieChartButtonActionPerformed(evt);
             }
@@ -132,6 +133,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         showReportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/datalab/plugin/manipulators/resources/application-block.png"))); // NOI18N
         showReportButton.setText(org.openide.util.NbBundle.getMessage(ColumnValuesFrequencyUI.class, "ColumnValuesFrequencyUI.showReportButton.text")); // NOI18N
         showReportButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 showReportButtonActionPerformed(evt);
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ConvertColumnToDynamicUI.java
Patch:
@@ -187,6 +187,7 @@ private void initComponents() {
         replaceColumnCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(ConvertColumnToDynamicUI.class, "ConvertColumnToDynamicUI.replaceColumnCheckbox.toolTipText")); // NOI18N
         replaceColumnCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
         replaceColumnCheckbox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 replaceColumnCheckboxActionPerformed(evt);
             }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java
Patch:
@@ -97,6 +97,7 @@ public void restored() {
 
         //Check for new major release:
         WindowManager.getDefault().invokeWhenUIReady(new Runnable() {
+            @Override
             public void run() {
                 new Thread() {
                     @Override
@@ -114,6 +115,7 @@ public void run() {
     private void initGephi() {
         final ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
         WindowManager.getDefault().invokeWhenUIReady(new Runnable() {
+            @Override
             public void run() {
                 pc.startup();
                 DragNDropFrameAdapter.register();

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/MemoryStarvationManager.java
Patch:
@@ -112,6 +112,7 @@ public void startup() {
         }
     }
 
+    @Override
     public void handleNotification(Notification n, Object o) {
         if (messageDelivered) {
             return;

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/CloseProject.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public final class CloseProject extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).closeProject();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/DeleteWorkspace.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public class DeleteWorkspace extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).deleteWorkspace();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/NewProject.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public final class NewProject extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).newProject();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/NewWorkspace.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public class NewWorkspace extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).newWorkspace();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/RenameWorkspace.java
Patch:
@@ -58,6 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class RenameWorkspace extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         String name = "";
         ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportController.java
Patch:
@@ -90,6 +90,7 @@ public class ReportController {
     public void sendReport(final Report report) {
         Thread thread = new Thread(new Runnable() {
 
+            @Override
             public void run() {
                 ProgressHandle handle = ProgressHandleFactory.createHandle(NbBundle.getMessage(ReportController.class, "ReportController.status.sending"));
                 try {

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportPanel.java
Patch:
@@ -64,6 +64,7 @@ public ReportPanel(Report report) {
         //Bind
         followCheckBox.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 labelEmail.setEnabled(followCheckBox.isSelected());
                 emailTextField.setEnabled(followCheckBox.isSelected());
@@ -75,6 +76,7 @@ public void actionPerformed(ActionEvent e) {
         helpLabel.setEnabled(followCheckBox.isSelected());
         viewDataButton.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 //Set
                 ReportPanel.this.report.setUserDescription(problemArea.getText());

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReporterHandler.java
Patch:
@@ -92,12 +92,14 @@ public void close() throws SecurityException {
         throwable = null;
     }
 
+    @Override
     public JButton call() throws Exception {
         JButton btn = new JButton(NbBundle.getMessage(ReporterHandler.class, "ReportHandler.button"));
         btn.addActionListener(this);
         return btn;
     }
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Report report = new Report();
         report.setThrowable(throwable);

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/api/TopDialog.java
Patch:
@@ -118,6 +118,7 @@ protected TopDialog(JDialog parent,
 
         Action cancelAction = new AbstractAction() {
 
+            @Override
             public void actionPerformed(ActionEvent ev) {
                 cancel();
             }
@@ -127,6 +128,7 @@ public void actionPerformed(ActionEvent ev) {
         addWindowListener(
                 new WindowAdapter() {
 
+                    @Override
                     public void windowClosing(WindowEvent ev) {
                         if (!haveFinalValue) {
                             TopDialog.this.nd.setValue(NotifyDescriptor.CLOSED_OPTION);
@@ -288,6 +290,7 @@ private void attachActionListener(Object comp, ActionListener l) {
     private ActionListener makeListener(final Object option) {
         return new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 //System.err.println("actionPerformed: " + option);
                 nd.setValue(option);

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/CategoryChildFactory.java
Patch:
@@ -69,6 +69,7 @@ protected boolean createKeys(List<Object> toPopulate) {
         Object[] children = utils.getChildren(category);
         Arrays.sort(children, new Comparator() {
 
+            @Override
             public int compare(Object o1, Object o2) {
                 String s1;
                 String s2;

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FilterBuilderNode.java
Patch:
@@ -109,15 +109,18 @@ public Transferable drag() throws IOException {
 
     private class FilterTransferable implements Transferable {
 
+        @Override
         public DataFlavor[] getTransferDataFlavors() {
             return new DataFlavor[]{DATA_FLAVOR};
         }
 
+        @Override
         public boolean isDataFlavorSupported(DataFlavor flavor) {
             return flavor == DATA_FLAVOR;
 
         }
 
+        @Override
         public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
             if (flavor == DATA_FLAVOR) {
                 return filterBuilder;

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FiltersExplorer.java
Patch:
@@ -224,6 +224,7 @@ public boolean isValid(Category category) {
     private void updateEnabled(final boolean enabled) {
         SwingUtilities.invokeLater(new Runnable() {
 
+            @Override
             public void run() {
                 setRootVisible(enabled);
                 setEnabled(enabled);

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/SavedQueryNode.java
Patch:
@@ -113,6 +113,7 @@ public RemoveAction() {
             super(NbBundle.getMessage(SavedQueryNode.class, "SavedQueryNode.actions.remove"));
         }
 
+        @Override
         public void actionPerformed(ActionEvent e) {
             FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
             FilterLibrary filterLibrary = filterController.getModel().getLibrary();

File: modules/DesktopGenerate/src/main/java/org/gephi/desktop/generate/Generate.java
Patch:
@@ -83,6 +83,7 @@ public JMenuItem getMenuPresenter() {
                 String menuName = gen.getName() + "...";
                 JMenuItem menuItem = new JMenuItem(new AbstractAction(menuName) {
 
+                    @Override
                     public void actionPerformed(ActionEvent e) {
                         generatorController.generate(gen);
                     }

File: modules/DesktopLayout/src/main/java/org/gephi/desktop/layout/LayoutPanel.java
Patch:
@@ -353,6 +353,7 @@ private void initComponents() {
         runButton.setIconTextGap(5);
         runButton.setMargin(new java.awt.Insets(2, 7, 2, 14));
         runButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 runButtonActionPerformed(evt);
             }
@@ -376,6 +377,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
 
         resetButton.setText(org.openide.util.NbBundle.getMessage(LayoutPanel.class, "LayoutPanel.resetButton.text")); // NOI18N
         resetButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 resetButtonActionPerformed(evt);
             }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewSettingsTopComponent.java
Patch:
@@ -382,6 +382,7 @@ private void initComponents() {
         saveButton.setFocusable(false);
         saveButton.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
         saveButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 saveButtonActionPerformed(evt);
             }
@@ -417,6 +418,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         refreshButton.setEnabled(false);
         refreshButton.setMargin(new java.awt.Insets(10, 14, 10, 14));
         refreshButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 refreshButtonActionPerformed(evt);
             }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -298,6 +298,7 @@ private void initComponents() {
 
         org.openide.awt.Mnemonics.setLocalizedText(refreshButton, org.openide.util.NbBundle.getMessage(PreviewTopComponent.class, "PreviewTopComponent.refreshButton.text")); // NOI18N
         refreshButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 refreshButtonActionPerformed(evt);
             }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/RendererManager.java
Patch:
@@ -297,6 +297,7 @@ private void initComponents() {
         restoreOrderButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
         restoreOrderButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
         restoreOrderButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 restoreOrderButtonActionPerformed(evt);
             }
@@ -309,6 +310,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         selectAllButton.setFocusable(false);
         selectAllButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
         selectAllButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 selectAllButtonActionPerformed(evt);
             }
@@ -320,6 +322,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         unselectAllButon.setFocusable(false);
         unselectAllButon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
         unselectAllButon.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 unselectAllButonActionPerformed(evt);
             }

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/AvailableStatisticsChooser.java
Patch:
@@ -77,6 +77,7 @@ public void setup(StatisticsModelUI model, StatisticsCategory[] categories) {
         //Sort categories by position
         Arrays.sort(categories, new Comparator() {
 
+            @Override
             public int compare(Object o1, Object o2) {
                 Integer p1 = ((StatisticsCategory) o1).getPosition();
                 Integer p2 = ((StatisticsCategory) o2).getPosition();
@@ -104,6 +105,7 @@ public int compare(Object o1, Object o2) {
             //Sort it by position
             Collections.sort(uis, new Comparator() {
 
+                @Override
                 public int compare(Object o1, Object o2) {
                     Integer p1 = ((StatisticsUI) o1).getPosition();
                     Integer p2 = ((StatisticsUI) o2).getPosition();

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/DynamicSettingsPanel.java
Patch:
@@ -435,6 +435,7 @@ public DateRangeValidator(ComboBoxModel comboBoxModel) {
             this.combo = comboBoxModel;
         }
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             Integer i = 0;
             try {
@@ -463,6 +464,7 @@ public TickUnderWindowValidator(boolean dates) {
             this.dates = dates;
         }
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             if (dates) {
                 Integer tick = 0;

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsPanel.java
Patch:
@@ -107,6 +107,7 @@ private void refreshFrontEnd() {
                 //Sort it by position
                 Collections.sort(uis, new Comparator() {
 
+                    @Override
                     public int compare(Object o1, Object o2) {
                         Integer p1 = ((UIFrontEnd) o1).getStatisticsUI().getPosition();
                         Integer p2 = ((UIFrontEnd) o2).getStatisticsUI().getPosition();
@@ -146,6 +147,7 @@ private void initFrontEnds() {
                 //Sort it by position
                 Collections.sort(uis, new Comparator() {
 
+                    @Override
                     public int compare(Object o1, Object o2) {
                         Integer p1 = ((StatisticsUI) o1).getPosition();
                         Integer p2 = ((StatisticsUI) o2).getPosition();

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/CustomBoundsDialog.java
Patch:
@@ -73,6 +73,7 @@ public CustomBoundsDialog() {
 
         resetDefaultsDate.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 setDefaults();
             }
@@ -186,6 +187,7 @@ public TimeValidator(JTextField other, boolean max) {
             this.max = max;
         }
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             double thisDate;
             double otherDate;
@@ -247,6 +249,7 @@ public boolean validate(Problems prblms, String string, String t) {
 
     private class FormatValidator implements Validator<String> {
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             if (model.getTimeFormat().equals(TimeFormat.DATE)) {
                 try {

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimelineWindowAction.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public final class TimelineWindowAction implements ActionListener {
     
+    @Override
     public void actionPerformed(ActionEvent e) {
         BottomComponentImpl bottomComponent = Lookup.getDefault().lookup(BottomComponentImpl.class);
         if (bottomComponent != null) {

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DelegatingChooserUI.java
Patch:
@@ -108,6 +108,7 @@ public static ComponentUI createUI(JComponent c) {
             fc.addPropertyChangeListener(
                     JFileChooser.FILE_SELECTION_MODE_CHANGED_PROPERTY,
                     new PropertyChangeListener () {
+                        @Override
                         public void propertyChange(PropertyChangeEvent evt) {
                             JFileChooser fileChooser = (JFileChooser)evt.getSource();
                             fileChooser.updateUI();

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DirectoryCellEditor.java
Patch:
@@ -72,10 +72,12 @@ public DirectoryCellEditor(JTree tree, JFileChooser fileChooser, final JTextFiel
         this.fileChooser = fileChooser;
     }
     
+    @Override
     public boolean isCellEditable(EventObject event) {
         return ((event instanceof MouseEvent) ? false : true);
     }
     
+    @Override
     public Component getTreeCellEditorComponent(JTree tree, Object value, boolean isSelected, boolean expanded, boolean leaf, int row) {
         Component c = super.getTreeCellEditorComponent(tree, value, isSelected, expanded, leaf, row);
         DirectoryNode node = (DirectoryNode)value;

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DirectoryNode.java
Patch:
@@ -238,6 +238,7 @@ private static FileObject convertToValidDir(File f) {
 
     private class DirectoryFilter implements FileFilter {
 
+        @Override
         public boolean accept(File f) {
             return f.isDirectory();
         }
@@ -250,6 +251,7 @@ public String getDescription() {
     /** Compares files ignoring case sensitivity */
     private static class FileNameComparator implements Comparator<File> {
 
+        @Override
         public int compare(File f1, File f2) {
             return String.CASE_INSENSITIVE_ORDER.compare(f1.getName(), f2.getName());
         }

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/Module.java
Patch:
@@ -91,6 +91,7 @@ public static void install() {
         }
         // #61147: prevent NB from switching to a different UI later (under GTK):
         uid.addPropertyChangeListener(pcl = new PropertyChangeListener() {
+            @Override
             public void propertyChange(PropertyChangeEvent evt) {
                 String name = evt.getPropertyName();
                 Object className = uid.get(KEY);

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterDLPanel.java
Patch:
@@ -81,13 +81,15 @@ private void initComponents() {
 
         matrixRadioButton.setText("Matrix");
         matrixRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 matrixRadioButtonActionPerformed(evt);
             }
         });
 
         listRadioButton.setText("List");
         listRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 listRadioButtonActionPerformed(evt);
             }

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGDFPanel.java
Patch:
@@ -106,6 +106,7 @@ private void initComponents() {
 
         quotesCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.quotesCheckbox.text")); // NOI18N
         quotesCheckbox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 quotesCheckboxActionPerformed(evt);
             }

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGMLPanel.java
Patch:
@@ -115,6 +115,7 @@ private void initComponents() {
 
         exportNotRecognizedCheckBox.setText(org.openide.util.NbBundle.getMessage(UIExporterGMLPanel.class, "UIExporterGML.attributes.text")); // NOI18N
         exportNotRecognizedCheckBox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 exportNotRecognizedCheckBoxActionPerformed(evt);
             }

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterVNAPanel.java
Patch:
@@ -108,6 +108,7 @@ private void initComponents() {
 
         exportAttributesCheckBox.setText(org.openide.util.NbBundle.getMessage(UIExporterVNAPanel.class, "UIExporterGML.attributes.text")); // NOI18N
         exportAttributesCheckBox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 exportAttributesCheckBoxActionPerformed(evt);
             }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/attribute/EqualStringPanel.java
Patch:
@@ -67,6 +67,7 @@ public EqualStringPanel() {
         okButton.addActionListener(this);
     }
 
+    @Override
     public void actionPerformed(ActionEvent evt) {
         FilterProperty pattern = filter.getProperties()[1];
         FilterProperty useRegex = filter.getProperties()[2];
@@ -102,6 +103,7 @@ public static ValidationPanel createValidationPanel(final EqualStringPanel inner
         ValidationGroup group = validationPanel.getValidationGroup();
         validationPanel.addChangeListener(new ChangeListener() {
 
+            @Override
             public void stateChanged(ChangeEvent e) {
                 innerPanel.okButton.setEnabled(!validationPanel.isProblem());
             }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/attribute/EqualStringUIImpl.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = EqualStringUI.class)
 public class EqualStringUIImpl implements EqualStringUI {
 
+    @Override
     public JPanel getPanel(EqualStringFilter filter) {
         EqualStringPanel panel = new EqualStringPanel();
         panel.setup(filter);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/dynamic/DynamicRangePanel.java
Patch:
@@ -72,6 +72,7 @@ public void setup(final DynamicRangeFilter filter) {
         timelineButton.setText(bottomComponent.isVisible() ? CLOSE : OPEN);
         timelineButton.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
 
                 if (!bottomComponent.isVisible()) {
@@ -86,6 +87,7 @@ public void actionPerformed(ActionEvent e) {
         keepEmptyCheckbox.setSelected(filter.isKeepNull());
         keepEmptyCheckbox.addItemListener(new ItemListener() {
 
+            @Override
             public void itemStateChanged(ItemEvent e) {
                 if (!filter.isKeepNull() == keepEmptyCheckbox.isSelected()) {
                     filter.getProperties()[1].setValue(keepEmptyCheckbox.isSelected());

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/dynamic/DynamicRangeUIImpl.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = DynamicRangeUI.class)
 public class DynamicRangeUIImpl implements DynamicRangeUI {
 
+    @Override
     public JPanel getPanel(DynamicRangeFilter filter) {
         DynamicRangePanel panel = new DynamicRangePanel();
         panel.setup(filter);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/graph/EgoUIImpl.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = EgoUI.class)
 public class EgoUIImpl implements EgoUI {
 
+    @Override
     public JPanel getPanel(EgoFilter egoFilter) {
         EgoPanel egoPanel = new EgoPanel();
         egoPanel.setup(egoFilter);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/graph/NeighborsPanel.java
Patch:
@@ -59,6 +59,7 @@ public NeighborsPanel() {
 
         depthComboBox.addItemListener(new ItemListener() {
 
+            @Override
             public void itemStateChanged(ItemEvent e) {
                 int depth = -1;
                 int index = depthComboBox.getSelectedIndex();
@@ -75,6 +76,7 @@ public void itemStateChanged(ItemEvent e) {
 
         withSelfCheckbox.addItemListener(new ItemListener() {
 
+            @Override
             public void itemStateChanged(ItemEvent e) {
                 if (!neighborsFilter.isSelf() == withSelfCheckbox.isSelected()) {
                     neighborsFilter.getProperties()[1].setValue(withSelfCheckbox.isSelected());

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/operator/MASKEdgePanel.java
Patch:
@@ -61,6 +61,7 @@ public MASKEdgePanel() {
         targetButton.addActionListener(this);
     }
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         if (operator != null) {
             MASKBuilderEdge.MaskEdgeOperator.EdgesOptions option = MASKBuilderEdge.MaskEdgeOperator.EdgesOptions.ANY;

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/operator/MASKEdgeUIImpl.java
Patch:
@@ -54,6 +54,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = MASKEdgeUI.class)
 public class MASKEdgeUIImpl implements MASKEdgeUI {
 
+    @Override
     public JPanel getPanel(MaskEdgeOperator filter) {
         MASKEdgePanel panel = new MASKEdgePanel();
         panel.setup(filter);

File: modules/ImportPluginUI/src/main/java/org/gephi/ui/importer/plugin/EdgeListPanel.java
Patch:
@@ -288,6 +288,7 @@ private void initComponents() {
 
         configurationCombo.setModel(new EdgeListPanel.ConfigurationComboModel());
         configurationCombo.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 configurationComboActionPerformed(evt);
             }
@@ -326,6 +327,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         testConnection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/ui/importer/plugin/resources/test_connection.png"))); // NOI18N
         testConnection.setText(org.openide.util.NbBundle.getMessage(EdgeListPanel.class, "EdgeListPanel.testConnection.text")); // NOI18N
         testConnection.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 testConnectionActionPerformed(evt);
             }
@@ -342,6 +344,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         removeConfigurationButton.setMargin(new java.awt.Insets(0, 4, 0, 2));
         removeConfigurationButton.setPreferredSize(new java.awt.Dimension(65, 29));
         removeConfigurationButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 removeConfigurationButtonActionPerformed(evt);
             }

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/ExporterBuilderPDF.java
Patch:
@@ -54,15 +54,18 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = VectorFileExporterBuilder.class)
 public class ExporterBuilderPDF implements VectorFileExporterBuilder {
 
+    @Override
     public VectorExporter buildExporter() {
         return new PDFExporter();
     }
 
+    @Override
     public FileType[] getFileTypes() {
         FileType ft = new FileType(".pdf", NbBundle.getMessage(ExporterBuilderPDF.class, "fileType_PDF_Name"));
         return new FileType[]{ft};
     }
 
+    @Override
     public String getName() {
         return NbBundle.getMessage(ExporterBuilderPDF.class, "ExporterPDF_name");
     }

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/ExporterBuilderSVG.java
Patch:
@@ -54,15 +54,18 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = VectorFileExporterBuilder.class)
 public class ExporterBuilderSVG implements VectorFileExporterBuilder {
 
+    @Override
     public VectorExporter buildExporter() {
         return new SVGExporter();
     }
 
+    @Override
     public FileType[] getFileTypes() {
         FileType ft = new FileType(".svg", NbBundle.getMessage(ExporterBuilderSVG.class, "fileType_SVG_Name"));
         return new FileType[]{ft};
     }
 
+    @Override
     public String getName() {
         return NbBundle.getMessage(ExporterBuilderSVG.class, "ExporterSVG_name");
     }

File: modules/ProjectUI/src/main/java/org/gephi/ui/project/ProjectPropertiesUIImpl.java
Patch:
@@ -55,15 +55,18 @@ public class ProjectPropertiesUIImpl implements ProjectPropertiesUI {
 
     private ProjectPropertiesEditor panel;
 
+    @Override
     public JPanel getPanel() {
         panel = new ProjectPropertiesEditor();
         return panel;
     }
 
+    @Override
     public void setup(Project project) {
         panel.load(project);
     }
 
+    @Override
     public void unsetup(Project project) {
         panel.save(project);
         panel = null;

File: modules/StatisticsAPI/src/main/java/org/gephi/statistics/StatisticsModelImpl.java
Patch:
@@ -82,6 +82,7 @@ public void addReport(Statistics statistics) {
         reportMap.put(statistics.getClass(), statistics.getReport());
     }
 
+    @Override
     public String getReport(Class<? extends Statistics> statisticsClass) {
         return reportMap.get(statisticsClass);
     }

File: modules/StatisticsAPI/src/main/java/org/gephi/statistics/spi/DynamicStatistics.java
Patch:
@@ -68,6 +68,7 @@ public interface DynamicStatistics extends Statistics {
      * graph structure and the attribute model the attribute columns.
      * @param graphModel the graph model
      */
+    @Override
     public void execute(GraphModel graphModel);
 
     /**

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbEdges.java
Patch:
@@ -135,6 +135,7 @@ public void loop(GraphView window, Interval interval) {
     public void end() {
     }
 
+    @Override
     public void setBounds(Interval bounds) {
         this.bounds = bounds;
     }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/EigenvectorCentralityPanel.java
Patch:
@@ -115,6 +115,7 @@ private void initComponents() {
         buttonGroup1.add(undirectedRadioButton);
         undirectedRadioButton.setText(org.openide.util.NbBundle.getMessage(EigenvectorCentralityPanel.class, "EigenvectorCentralityPanel.undirectedButton.text")); // NOI18N
         undirectedRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 undirectedRadioButtonActionPerformed(evt);
             }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/GraphDistancePanel.java
Patch:
@@ -104,6 +104,7 @@ private void initComponents() {
         directedButtonGroup.add(directedRadioButton);
         directedRadioButton.setText(org.openide.util.NbBundle.getMessage(GraphDistancePanel.class, "GraphDistancePanel.directedRadioButton.text")); // NOI18N
         directedRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 directedRadioButtonActionPerformed(evt);
             }

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/EdgePencilPanel.java
Patch:
@@ -127,6 +127,7 @@ private void initComponents() {
         labelColor.setText(org.openide.util.NbBundle.getMessage(EdgePencilPanel.class, "EdgePencilPanel.labelColor.text")); // NOI18N
 
         typeComboBox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 typeComboBoxActionPerformed(evt);
             }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/options/DefaultPanel.java
Patch:
@@ -197,6 +197,7 @@ private void initComponents() {
 
         org.openide.awt.Mnemonics.setLocalizedText(resetButton, org.openide.util.NbBundle.getMessage(DefaultPanel.class, "DefaultPanel.resetButton.text")); // NOI18N
         resetButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 resetButtonActionPerformed(evt);
             }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/options/OpenGLPanel.java
Patch:
@@ -102,6 +102,7 @@ private void initComponents() {
 
         org.openide.awt.Mnemonics.setLocalizedText(resetButton, org.openide.util.NbBundle.getMessage(OpenGLPanel.class, "OpenGLPanel.resetButton.text")); // NOI18N
         resetButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 resetButtonActionPerformed(evt);
             }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -146,7 +146,8 @@ Development and Distribution License("CDDL") (collectively, the
 public class DataTableTopComponent extends TopComponent implements AWTEventListener, DataTablesEventListener {
     private enum DisplayTable {
         NODE, EDGE
-    };
+    }
+
     //Settings
     private static final long AUTO_REFRESH_RATE_MILLISECONDS = 100;
     private static final String DATA_LABORATORY_DYNAMIC_FILTERING = "DataLaboratory_Dynamic_Filtering";

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/AddColumnUI.java
Patch:
@@ -69,7 +69,7 @@ public class AddColumnUI extends javax.swing.JPanel {
 
     public enum Mode {
 
-        NODES_TABLE, EDGES_TABLE;
+        NODES_TABLE, EDGES_TABLE
     }
 
     /**

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -87,7 +87,6 @@ public class StatisticsFrontEnd extends javax.swing.JPanel {
     private StatisticsModelUI currentModel;
 
     //Img
-    ;
 
     public StatisticsFrontEnd(StatisticsUI ui) {
         initComponents();

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/DateTick.java
Patch:
@@ -98,7 +98,7 @@ public static DateTick create(double min, double max, int width) {
         DateTime minDate = new DateTime((long) min);
         DateTime maxDate = new DateTime((long) max);
 
-        Period period = new Period(minDate, maxDate, PeriodType.yearMonthDayTime());;
+        Period period = new Period(minDate, maxDate, PeriodType.yearMonthDayTime());
         int years = period.getYears();
         int months = period.getMonths();
         int days = period.getDays();
@@ -177,7 +177,7 @@ public Interval[] getIntervals() {
             for (int i = 0; i < totalIntervals; i++) {
                 Interval currentInterval;
                 if (i == 0) {
-                    currentInterval = min.property(type).toInterval();;
+                    currentInterval = min.property(type).toInterval();
                 } else {
                     currentInterval = min.property(type).addToCopy(i).property(type).toInterval();
                 }

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TickParameters.java
Patch:
@@ -53,7 +53,8 @@ public class TickParameters {
     public enum TickType {
 
         DATE, DOUBLE, START_END
-    };
+    }
+
     private final TickType type;
     private int width, height;
     private int fontSize = 12;

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGDF.java
Patch:
@@ -757,7 +757,7 @@ private DataTypeGDF getDataTypeGDF(Class type) {
     private enum DataTypeGDF {
 
         VARCHAR, BOOL, BOOLEAN, INTEGER, TINYINT, INT, DOUBLE, FLOAT
-    };
+    }
 
     private abstract class NodeColumnsGDF {
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/MASKBuilderEdge.java
Patch:
@@ -111,7 +111,8 @@ public static class MaskEdgeOperator implements Operator {
         public enum EdgesOptions {
 
             SOURCE, TARGET, ANY, BOTH
-        };
+        }
+
         private EdgesOptions option = EdgesOptions.ANY;
         private FilterProperty[] filterProperties;
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/EdgeDirection.java
Patch:
@@ -53,5 +53,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public enum EdgeDirection {
 
-    DIRECTED, UNDIRECTED;
+    DIRECTED, UNDIRECTED
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/EdgeDirectionDefault.java
Patch:
@@ -49,5 +49,5 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public enum EdgeDirectionDefault {
 
-    DIRECTED, UNDIRECTED, MIXED;
+    DIRECTED, UNDIRECTED, MIXED
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/PropertiesAssociations.java
Patch:
@@ -53,12 +53,12 @@ public final class PropertiesAssociations implements Serializable {
 
     public enum NodeProperties {
 
-        X, Y, Z, R, G, B, COLOR, SIZE, ID, LABEL, FIXED, START, END, START_OPEN, END_OPEN;
+        X, Y, Z, R, G, B, COLOR, SIZE, ID, LABEL, FIXED, START, END, START_OPEN, END_OPEN
     }
 
     public enum EdgeProperties {
 
-        R, G, B, COLOR, WEIGHT, ID, LABEL, ALPHA, SOURCE, TARGET, START, END, START_OPEN, END_OPEN;
+        R, G, B, COLOR, WEIGHT, ID, LABEL, ALPHA, SOURCE, TARGET, START, END, START_OPEN, END_OPEN
     }
     //PropertiesAssociations association
     private final List<PropertyAssociation<NodeProperties>> nodePropertyAssociations = new LinkedList<PropertyAssociation<NodeProperties>>();

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDL.java
Patch:
@@ -72,7 +72,8 @@ public class ImporterDL implements FileImporter, LongTask {
     private enum Format {
 
         FULLMATRIX, EDGELIST1
-    };
+    }
+
     //Architecture
     private Reader reader;
     private ContainerLoader container;

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGDF.java
Patch:
@@ -561,12 +561,13 @@ private static class GDFColumn {
         public enum NodeGuessColumn {
 
             X, Y, VISIBLE, FIXED, STYLE, COLOR, WIDTH, HEIGHT, LABEL, LABELVISIBLE
-        };
+        }
 
         public enum EdgeGuessColumn {
 
             VISIBLE, COLOR, WEIGHT, DIRECTED, LABEL, LABELVISIBLE
-        };
+        }
+
         private ColumnDraft column;
         private NodeGuessColumn nodeColumn;
         private EdgeGuessColumn edgeColumn;

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/AutoLayout.java
Patch:
@@ -238,7 +238,7 @@ public static interface DynamicProperty {
     public enum Interpolation {
 
         LINEAR, LOG
-    };
+    }
 
     private static abstract class AbstractDynamicProperty implements DynamicProperty {
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/ForceFactory.java
Patch:
@@ -56,8 +56,6 @@ public class ForceFactory {
     private ForceFactory() {
     }
 
-    ;
-
     public RepulsionForce buildRepulsion(boolean adjustBySize, double coefficient) {
         if (adjustBySize) {
             return new linRepulsion_antiCollision(coefficient);

File: modules/PreviewAPI/src/main/java/org/gephi/preview/types/DependantColor.java
Patch:
@@ -53,7 +53,8 @@ public final class DependantColor {
     public enum Mode {
 
         PARENT, CUSTOM
-    };
+    }
+
     private final Color customColor;
     private final Mode mode;
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/types/DependantOriginalColor.java
Patch:
@@ -53,7 +53,8 @@ public final class DependantOriginalColor {
     public enum Mode {
 
         PARENT, CUSTOM, ORIGINAL
-    };
+    }
+
     private final Color customColor;
     private final Mode mode;
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/types/EdgeColor.java
Patch:
@@ -59,7 +59,8 @@ public class EdgeColor {
     public enum Mode {
 
         SOURCE, TARGET, MIXED, CUSTOM, ORIGINAL
-    };
+    }
+
     private Color customColor;
     private final Mode mode;
 

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectControllerImpl.java
Patch:
@@ -70,7 +70,8 @@ public class ProjectControllerImpl implements ProjectController {
     private enum EventType {
 
         INITIALIZE, SELECT, UNSELECT, CLOSE, DISABLE
-    };
+    }
+
     //Data
     private final ProjectsImpl projects = new ProjectsImpl();
     private final List<WorkspaceListener> listeners;

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectInformationImpl.java
Patch:
@@ -58,7 +58,8 @@ public class ProjectInformationImpl implements ProjectInformation {
     public enum Status {
 
         NEW, OPEN, CLOSED, INVALID
-    };
+    }
+
     //Data
     private final Project project;
     private String name;

File: modules/ProjectAPI/src/main/java/org/gephi/workspace/impl/WorkspaceInformationImpl.java
Patch:
@@ -56,7 +56,8 @@ public class WorkspaceInformationImpl implements WorkspaceInformation {
     public enum Status {
 
         OPEN, CLOSED, INVALID
-    };
+    }
+
     private String name;
     private Status status = Status.CLOSED;
     private String source;

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/Modularity.java
Patch:
@@ -617,7 +617,7 @@ private void saveValues(int[] struct, Graph hgraph, CommunityStructure theStruct
             modCol = nodeTable.addColumn(MODULARITY_CLASS, "Modularity Class", Integer.class, new Integer(0));
         }
         for (Node n : hgraph.getNodes()) {
-            int n_index = theStructure.map.get(n);;
+            int n_index = theStructure.map.get(n);
             n.setAttribute(modCol, struct[n_index]);
         }
     }

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/ClusteringCoefficientNGTest.java
Patch:
@@ -276,9 +276,9 @@ public void testSpecial3UndirectedGraphClusteringCoefficient() {
         undirectedGraph.addEdge(edge31);
         undirectedGraph.addEdge(edge14);
         undirectedGraph.addEdge(edge25);
-        undirectedGraph.addEdge(edge36);;
+        undirectedGraph.addEdge(edge36);
 
-        Graph hgraph = graphModel.getGraph();
+       Graph hgraph = graphModel.getGraph();
         ClusteringCoefficient cc = new ClusteringCoefficient();
 
         ArrayWrapper[] network = new ArrayWrapper[6];

File: modules/TimelineAPI/src/main/java/org/gephi/timeline/api/TimelineModel.java
Patch:
@@ -69,7 +69,7 @@ public enum PlayMode {
          * Both interval bounds are moved. The interval size remains unchanged.
          */
         TWO_BOUNDS
-    };
+    }
 
     /**
      * Returns <code>true</code> if the timeline is enabled. When enabled, the timeline

File: modules/TimelineAPI/src/main/java/org/gephi/timeline/api/TimelineModelEvent.java
Patch:
@@ -52,7 +52,8 @@ public final class TimelineModelEvent {
     public enum EventType {
 
         MODEL, MIN_MAX, INTERVAL, CUSTOM_BOUNDS, ENABLED, PLAY_START, PLAY_STOP, CHART, VALID_BOUNDS
-    };
+    }
+
     private final EventType type;
     private final TimelineModel source;
     private final Object data;

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JHTMLEditorPane.java
Patch:
@@ -614,7 +614,6 @@ public void deleteSelection() {
         } catch (Exception ex) {
         }
 
-        ;
     }
 
     @Override

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/AbstractAttributeColumnPropertyEditor.java
Patch:
@@ -59,12 +59,13 @@ abstract class AbstractAttributeColumnPropertyEditor extends PropertyEditorSuppo
     public enum EditorClass {
 
         NODE, EDGE, NODEEDGE
-    };
+    }
 
     public enum AttributeTypeClass {
 
         ALL, NUMBER, STRING, DYNAMIC_NUMBER, ALL_NUMBER
-    };
+    }
+
     private Column[] columns;
     private Column selectedColumn;
     private final EditorClass editorClass;

File: modules/Utils/src/main/java/org/gephi/utils/sparklines/SparklineParameters.java
Patch:
@@ -68,7 +68,7 @@ public enum HighlightTextMode {
 
         X_VALUES,
         Y_VALUES,
-        X_AND_Y_VALUES;
+        X_AND_Y_VALUES
     }
     public static final Color DEFAULT_LINE_COLOR = Color.BLUE;
     public static final Color DEFAULT_AREA_COLOR = new Color(DEFAULT_LINE_COLOR.getRed(), DEFAULT_LINE_COLOR.getRed(), DEFAULT_LINE_COLOR.getBlue(), 50);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizEvent.java
Patch:
@@ -66,7 +66,8 @@ public enum Type {
         MOUSE_RELEASED,
         NODE_LEFT_PRESS,
         NODE_LEFT_PRESSING,
-    };
+    }
+
     private Type type;
     private Object data;
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -75,7 +75,8 @@ public abstract class AbstractEngine implements Engine, VizArchitecture {
     public enum Limits {
 
         MIN_X, MAX_X, MIN_Y, MAX_Y, MIN_Z, MAX_Z
-    };
+    }
+
     //Architecture
     protected GraphDrawable graphDrawable;
     protected GraphIO graphIO;

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PDFRenderTargetBuilder.java
Patch:
@@ -187,7 +187,7 @@ public BaseFont getBaseFont(java.awt.Font font) {
                             PDFRenderTargetImpl.fontRegistered = true;
                         }
                     } else {
-                        com.itextpdf.text.Font itextFont = FontFactory.getFont(font.getFontName(), BaseFont.IDENTITY_H, font.getSize(), font.getStyle());
+                        com.itextpdf.text.Font itextFont = FontFactory.getFont(font.getFontName(), font.getSize(), font.getStyle());
                         baseFont = itextFont.getBaseFont();
                     }
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PDFRenderTargetBuilder.java
Patch:
@@ -187,7 +187,7 @@ public BaseFont getBaseFont(java.awt.Font font) {
                             PDFRenderTargetImpl.fontRegistered = true;
                         }
                     } else {
-                        com.itextpdf.text.Font itextFont = FontFactory.getFont(font.getFontName(), BaseFont.IDENTITY_H, font.getSize(), font.getStyle());
+                        com.itextpdf.text.Font itextFont = FontFactory.getFont(font.getFontName(), font.getSize(), font.getStyle());
                         baseFont = itextFont.getBaseFont();
                     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/InterEdgesBuilder.java
Patch:
@@ -88,6 +88,9 @@ public FilterBuilder[] getBuilders(Workspace workspace) {
         Graph graph = gm.getGraph();
         AppearanceModel am = Lookup.getDefault().lookup(AppearanceController.class).getModel(workspace);
 
+        //Force refresh
+        am.getNodeFunctions(graph);
+
         for (Column nodeCol : gm.getNodeTable()) {
             if (!nodeCol.isProperty()) {
                 if (am.getNodePartition(graph, nodeCol) != null) {

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/IntraEdgesBuilder.java
Patch:
@@ -88,6 +88,9 @@ public FilterBuilder[] getBuilders(Workspace workspace) {
         Graph graph = gm.getGraph();
         AppearanceModel am = Lookup.getDefault().lookup(AppearanceController.class).getModel(workspace);
 
+        //Force refresh
+        am.getNodeFunctions(graph);
+
         for (Column nodeCol : gm.getNodeTable()) {
             if (!nodeCol.isProperty()) {
                 if (am.getNodePartition(graph, nodeCol) != null) {

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/PartitionCountBuilder.java
Patch:
@@ -88,6 +88,9 @@ public FilterBuilder[] getBuilders(Workspace workspace) {
         Graph graph = gm.getGraph();
         AppearanceModel am = Lookup.getDefault().lookup(AppearanceController.class).getModel(workspace);
 
+        //Force refresh
+        am.getNodeFunctions(graph);
+
         for (Column nodeCol : gm.getNodeTable()) {
             if (!nodeCol.isProperty()) {
                 if (am.getNodePartition(graph, nodeCol) != null) {

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/FiltersTopComponent.java
Patch:
@@ -93,15 +93,15 @@ public FiltersTopComponent() {
 
             @Override
             public void initialize(Workspace workspace) {
-                workspace.add(new FilterUIModel());
+                workspace.add(new FilterUIModel(workspace));
             }
 
             @Override
             public void select(Workspace workspace) {
                 filterModel = workspace.getLookup().lookup(FilterModel.class);
                 uiModel = workspace.getLookup().lookup(FilterUIModel.class);
                 if (uiModel == null) {
-                    uiModel = new FilterUIModel();
+                    uiModel = new FilterUIModel(workspace);
                     workspace.add(uiModel);
                 }
                 refreshModel();
@@ -127,7 +127,7 @@ public void disable() {
             filterModel = workspace.getLookup().lookup(FilterModel.class);
             uiModel = workspace.getLookup().lookup(FilterUIModel.class);
             if (uiModel == null) {
-                uiModel = new FilterUIModel();
+                uiModel = new FilterUIModel(workspace);
                 workspace.add(uiModel);
             }
         }

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FiltersExplorer.java
Patch:
@@ -194,7 +194,7 @@ public Object[] getChildren(Category category) {
                     } else if (cb.getCategory().getParent() != null && cb.getCategory().getParent().getParent() == category) {
                         cats.add(cb.getCategory().getParent());
                     } else if (cb.getCategory() == category) {
-                        for (FilterBuilder fb : cb.getBuilders()) {
+                        for (FilterBuilder fb : cb.getBuilders(uiModel.getWorkspace())) {
                             cats.add(fb);
                         }
                     }

File: modules/FiltersAPI/src/main/java/org/gephi/filters/api/FilterModel.java
Patch:
@@ -43,6 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import javax.swing.event.ChangeListener;
 import org.gephi.filters.spi.FilterBuilder;
+import org.gephi.project.api.Workspace;
 
 /**
  * The Filter Model hosts the queries defined in the system and the currently
@@ -96,6 +97,8 @@ public interface FilterModel {
 
     public boolean isAutoRefresh();
 
+    public Workspace getWorkspace();
+
     public void addChangeListener(ChangeListener listener);
 
     public void removeChangeListener(ChangeListener listener);

File: modules/FiltersAPI/src/main/java/org/gephi/filters/spi/FilterBuilder.java
Patch:
@@ -44,6 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.Icon;
 import javax.swing.JPanel;
 import org.gephi.filters.api.FilterLibrary;
+import org.gephi.project.api.Workspace;
 
 /**
  * Filter builder, creating <code>Filter</code> instances for a <b>single</b>
@@ -96,9 +97,10 @@ public interface FilterBuilder {
     /**
      * Builds a new <code>Filter</code> instance.
      *
+     * @param workspace workspace
      * @return a new <code>Filter</code> object
      */
-    public Filter getFilter();
+    public Filter getFilter(Workspace workspace);
 
     /**
      * Returns the settings panel for the filter this builder is building, the

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterModelImpl.java
Patch:
@@ -80,7 +80,7 @@ public class FilterModelImpl implements FilterModel {
 
     public FilterModelImpl(Workspace workspace) {
         this.workspace = workspace;
-        filterLibraryImpl = new FilterLibraryImpl();
+        filterLibraryImpl = new FilterLibraryImpl(workspace);
         queries = new LinkedList<Query>();
         listeners = new ArrayList<ChangeListener>();
         autoRefresh = true;
@@ -289,6 +289,7 @@ public GraphModel getGraphModel() {
         return graphModel;
     }
 
+    @Override
     public Workspace getWorkspace() {
         return workspace;
     }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/EqualBooleanUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.filters.plugin.attribute;
 
 import javax.swing.JPanel;

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/EqualNumberUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.filters.plugin.attribute;
 
 import javax.swing.JPanel;
@@ -51,4 +51,3 @@ public interface EqualNumberUI {
 
     public JPanel getPanel(AttributeEqualBuilder.EqualNumberFilter filter);
 }
-

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/attribute/EqualStringUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.filters.plugin.attribute;
 
 import javax.swing.JPanel;

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/dynamic/DynamicRangeUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.filters.plugin.dynamic;
 
 import javax.swing.JPanel;

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/edge/EdgeTypeBuilder.java
Patch:
@@ -52,6 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -80,8 +81,8 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
-        GraphModel am = Lookup.getDefault().lookup(GraphController.class).getGraphModel();
+    public Filter getFilter(Workspace workspace) {
+        GraphModel am = Lookup.getDefault().lookup(GraphController.class).getGraphModel(workspace);
         return new EdgeTypeFilter(am);
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java
Patch:
@@ -52,6 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.spi.*;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -84,7 +85,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new EdgeWeightFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/edge/SelfLoopFilterBuilder.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.spi.*;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;
+import org.gephi.project.api.Workspace;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -78,7 +79,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new SelfLoopFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/DegreeRangeBuilder.java
Patch:
@@ -51,6 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.spi.*;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -83,7 +84,7 @@ public String getDescription() {
     }
 
     @Override
-    public DegreeRangeFilter getFilter() {
+    public DegreeRangeFilter getFilter(Workspace workspace) {
         return new DegreeRangeFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/EgoBuilder.java
Patch:
@@ -55,6 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.spi.FilterProperty;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -87,7 +88,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new EgoFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/EgoUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.filters.plugin.graph;
 
 import javax.swing.JPanel;

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/GiantComponentBuilder.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.UndirectedGraph;
+import org.gephi.project.api.Workspace;
 import org.gephi.statistics.plugin.ConnectedComponents;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -85,7 +86,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new GiantComponentFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/HasSelfLoopBuilder.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.EdgeIterable;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
+import org.gephi.project.api.Workspace;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -84,7 +85,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new HasSelfLoopFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/InDegreeRangeBuilder.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.plugin.AbstractFilter;
 import org.gephi.filters.spi.*;
 import org.gephi.graph.api.*;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -82,7 +83,7 @@ public String getDescription() {
     }
 
     @Override
-    public InDegreeRangeFilter getFilter() {
+    public InDegreeRangeFilter getFilter(Workspace workspace) {
         return new InDegreeRangeFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/KCoreBuilder.java
Patch:
@@ -51,6 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.spi.FilterProperty;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
@@ -84,7 +85,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new KCoreFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/MutualDegreeRangeBuilder.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.plugin.AbstractFilter;
 import org.gephi.filters.spi.*;
 import org.gephi.graph.api.*;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -82,7 +83,7 @@ public String getDescription() {
     }
 
     @Override
-    public MutualDegreeRangeFilter getFilter() {
+    public MutualDegreeRangeFilter getFilter(Workspace workspace) {
         return new MutualDegreeRangeFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/NeighborsBuilder.java
Patch:
@@ -56,6 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphView;
 import org.gephi.graph.api.Node;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -88,7 +89,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new NeighborsFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/NeighborsUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.filters.plugin.graph;
 
 import javax.swing.JPanel;

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.filters.plugin.AbstractFilter;
 import org.gephi.filters.spi.*;
 import org.gephi.graph.api.*;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
@@ -82,7 +83,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new OutDegreeRangeFilter();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/graph/RangeUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.filters.plugin.graph;
 
 import javax.swing.JPanel;

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/MASKBuilderEdge.java
Patch:
@@ -55,6 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.Subgraph;
+import org.gephi.project.api.Workspace;
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
@@ -88,7 +89,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new MaskEdgeOperator();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/NOTBuilderEdge.java
Patch:
@@ -55,6 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.Subgraph;
+import org.gephi.project.api.Workspace;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -86,7 +87,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new NotOperatorEdge();
     }
 

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/NOTBuilderNode.java
Patch:
@@ -55,6 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.Subgraph;
+import org.gephi.project.api.Workspace;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -86,7 +87,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new NOTOperatorNode();
     }
 
@@ -138,7 +139,7 @@ public Graph filter(Subgraph[] graphs) {
                 Node target = e.getTarget();
                 if (graph.contains(source) && graph.contains(target)) {
                     Edge edgeInGraph = graph.getEdge(source, target, e.getType());
-                    if(edgeInGraph == null) {
+                    if (edgeInGraph == null) {
                         graph.addEdge(e);
                     }
                 }

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/operator/UNIONBuilder.java
Patch:
@@ -57,6 +57,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.Subgraph;
+import org.gephi.project.api.Workspace;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -88,7 +89,7 @@ public String getDescription() {
     }
 
     @Override
-    public Filter getFilter() {
+    public Filter getFilter(Workspace workspace) {
         return new UnionOperator();
     }
 

File: modules/TimelineAPI/src/main/java/org/gephi/timeline/TimelineControllerImpl.java
Patch:
@@ -314,7 +314,7 @@ public void setInterval(double from, double to) {
                     if (dynamicQuery == null) {
                         //Create dynamic filter
                         DynamicRangeBuilder rangeBuilder = filterModel.getLibrary().getLookup().lookup(DynamicRangeBuilder.class);
-                        FilterBuilder[] fb = rangeBuilder.getBuilders();
+                        FilterBuilder[] fb = rangeBuilder.getBuilders(filterModel.getWorkspace());
                         if (fb.length > 0) {
                             dynamicQuery = filterController.createQuery(fb[0]);
                             filterController.add(dynamicQuery);

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsModelUIImpl.java
Patch:
@@ -165,7 +165,6 @@ public Workspace getWorkspace() {
 
     //PERSISTENCE
     public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
-        writer.writeStartElement("statisticsmodelui");
 
         writer.writeStartElement("results");
         for (Map.Entry<StatisticsUI, String> entry : resultMap.entrySet()) {
@@ -177,8 +176,6 @@ public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
             }
         }
         writer.writeEndElement();
-
-        writer.writeEndElement();
     }
 
     public void readXML(XMLStreamReader reader) throws XMLStreamException {

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterModelPersistenceProvider.java
Patch:
@@ -99,7 +99,6 @@ public String getIdentifier() {
     private int queryId = 0;
 
     public void writeXML(XMLStreamWriter writer, FilterModelImpl model) throws XMLStreamException {
-        writer.writeStartElement("filtermodel");
         writer.writeAttribute("autorefresh", String.valueOf(model.isAutoRefresh()));
 
         //Queries

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -557,7 +557,9 @@ private void refreshAttributeFunctions(boolean graphHasChanged) {
                             partition = new AttributePartitionImpl(column, graph);
                         }
                         partitions.put(getIdCol(column), partition);
-                    } else if (forcedRanking.contains(id) || isRanking(graph, column)) {
+                    }
+                    
+                    if (forcedRanking.contains(id) || isRanking(graph, column)) {
                         if (column.isIndexed()) {
                             ranking = new AttributeRankingImpl(column, getIndex(localScale));
                         } else {

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/EdgeWeightRankingImpl.java
Patch:
@@ -79,6 +79,9 @@ protected void refresh() {
                         minV = Math.min(numMin, minV);
                         maxV = Math.max(numMax, maxV);
                     }
+                } else {
+                    minV = e.getWeight();
+                    maxV = e.getWeight();
                 }
             }
             min = minV;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/RankingImpl.java
Patch:
@@ -70,6 +70,9 @@ public Number getMaxValue() {
 
     @Override
     public float normalize(Number value, Interpolator interpolator) {
+        if (min.equals(max)) {
+            return 1f;
+        }
         float normalizedValue = (float) (value.doubleValue() - min.doubleValue()) / (float) (max.doubleValue() - min.doubleValue());
         return interpolator.interpolate(normalizedValue);
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -135,7 +135,7 @@ public class VizConfig {
     public static final Color DEFAULT_RECTANGLE_SELECTION_COLOR = new Color(0.16f, 0.48f, 0.81f, 0.2f);
     public static final boolean DEFAULT_DRAGGING = true;
     public static final boolean DEFAULT_CAMERA_CONTROL = true;
-    public static final boolean DEFAULT_SHOW_FPS = true;
+    public static final boolean DEFAULT_SHOW_FPS = false;
     public static final boolean DEFAULT_REDUCE_FPS_MOUSE_OUT = true;
     public static final boolean DEFAULT_PAUSE_LOOP_MOUSE_OUT = false;
     public static final int DEFAULT_REDUCE_FPS_MOUSE_OUT_VALUE = 20;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/EdgeWeightRankingImpl.java
Patch:
@@ -79,6 +79,9 @@ protected void refresh() {
                         minV = Math.min(numMin, minV);
                         maxV = Math.max(numMax, maxV);
                     }
+                } else {
+                    minV = e.getWeight();
+                    maxV = e.getWeight();
                 }
             }
             min = minV;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/RankingImpl.java
Patch:
@@ -70,6 +70,9 @@ public Number getMaxValue() {
 
     @Override
     public float normalize(Number value, Interpolator interpolator) {
+        if (min.equals(max)) {
+            return 1f;
+        }
         float normalizedValue = (float) (value.doubleValue() - min.doubleValue()) / (float) (max.doubleValue() - min.doubleValue());
         return interpolator.interpolate(normalizedValue);
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -135,7 +135,7 @@ public class VizConfig {
     public static final Color DEFAULT_RECTANGLE_SELECTION_COLOR = new Color(0.16f, 0.48f, 0.81f, 0.2f);
     public static final boolean DEFAULT_DRAGGING = true;
     public static final boolean DEFAULT_CAMERA_CONTROL = true;
-    public static final boolean DEFAULT_SHOW_FPS = true;
+    public static final boolean DEFAULT_SHOW_FPS = false;
     public static final boolean DEFAULT_REDUCE_FPS_MOUSE_OUT = true;
     public static final boolean DEFAULT_PAUSE_LOOP_MOUSE_OUT = false;
     public static final int DEFAULT_REDUCE_FPS_MOUSE_OUT_VALUE = 20;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -557,7 +557,9 @@ private void refreshAttributeFunctions(boolean graphHasChanged) {
                             partition = new AttributePartitionImpl(column, graph);
                         }
                         partitions.put(getIdCol(column), partition);
-                    } else if (forcedRanking.contains(id) || isRanking(graph, column)) {
+                    }
+                    
+                    if (forcedRanking.contains(id) || isRanking(graph, column)) {
                         if (column.isIndexed()) {
                             ranking = new AttributeRankingImpl(column, getIndex(localScale));
                         } else {

File: modules/DesktopBanner/src/main/java/org/gephi/desktop/banner/BannerRootPanelLayout.java
Patch:
@@ -177,7 +177,6 @@ public void removeLayoutComponent(Component comp) {
 
     @Override
     public void addLayoutComponent(Component comp, Object constraints) {
-        System.out.println(comp);
     }
 
     @Override

File: modules/ImportPluginUI/src/main/java/org/gephi/ui/importer/plugin/EdgeListPanel.java
Patch:
@@ -49,6 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.sql.Connection;
 import java.sql.SQLException;
 import java.util.Collection;
+import java.util.logging.Logger;
 
 import javax.swing.DefaultComboBoxModel;
 
@@ -465,7 +466,7 @@ private void testConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GE
             if (conn != null) {
                 try {
                     conn.close();
-                    System.out.println("Database connection terminated");
+                    Logger.getLogger("").info("Database connection terminated");
                 } catch (Exception e) {
                     /* ignore close errors */ }
             }

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/RankingElementColorTransformer.java
Patch:
@@ -58,7 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = Transformer.class)
 public class RankingElementColorTransformer implements RankingTransformer<Element> {
 
-    protected final LinearGradient linearGradient = new LinearGradient(new Color[]{Color.WHITE, Color.BLACK}, new float[]{0f, 1f});
+    protected final LinearGradient linearGradient = new LinearGradient(new Color[]{new Color(0xEDF8FB), new Color(0x66C2A4), new Color(0x006D2C)}, new float[]{0f, 0.5f, 1f});
 
     @Override
     public void transform(Element element, Ranking ranking, Interpolator interpolator, Number value) {

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java
Patch:
@@ -155,6 +155,9 @@ public void disable() {
                 AppearanceModel appearanceModel = appearanceController.getModel(pc.getCurrentWorkspace());
                 model = new AppearanceUIModel(this, appearanceModel);
                 pc.getCurrentWorkspace().add(model);
+                model.select();
+                tableObserver = new TableChangeObserver(pc.getCurrentWorkspace());
+                tableObserver.start();
             }
         }
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -347,7 +347,7 @@ public void disable() {
         }
         
         observersTimer = new java.util.Timer("DataLaboratoryGraphObservers");
-        observersTimer.scheduleAtFixedRate(new TimerTask() {
+        observersTimer.schedule(new TimerTask() {
 
             @Override
             public void run() {

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/IntervalSetRenderer.java
Patch:
@@ -103,9 +103,9 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole
 
             double starts[] = new double[intervals.length / 2];
             double ends[] = new double[intervals.length / 2];
-            for (int i = 0; i < intervals.length; i+=2) {
-                starts[i] = intervals[i];
-                ends[i] = intervals[i + 1];
+            for (int i = 0, startIndex = 0; startIndex < intervals.length; i++, startIndex += 2) {
+                starts[i] = intervals[startIndex];
+                ends[i] = intervals[startIndex + 1];
             }
 
             final BufferedImage i = timeIntervalGraphics.createTimeIntervalImage(starts, ends, table.getColumnModel().getColumn(column).getWidth() - 1, table.getRowHeight(row) - 1, FILL_COLOR, BORDER_COLOR, background);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ContainerLoader.java
Patch:
@@ -41,7 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.io.importer.api;
 
-import org.gephi.graph.api.Interval;
 import org.gephi.graph.api.TimeFormat;
 import org.gephi.graph.api.TimeRepresentation;
 import org.gephi.io.importer.spi.Importer;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/bridge/DataBridge.java
Patch:
@@ -190,7 +190,7 @@ public synchronized boolean updateWorld() {
                 } else {
                     model = edges[id];
                 }
-                float w = (float) edge.getWeight();
+                float w = (float) edge.getWeight(graph.getView());
                 model.setWeight(w);
                 minWeight = Math.min(w, minWeight);
                 maxWeight = Math.max(w, maxWeight);

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -368,7 +368,7 @@ private void readNode(XMLStreamReader reader) throws Exception {
 
         //Parent
         if (!pid.isEmpty()) {
-            report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, "importerGEXF_error_pid"), Issue.Level.SEVERE));
+            report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, "importerGEXF_error_pid", id), Issue.Level.SEVERE));
         }
 
         if (!container.nodeExists(id)) {
@@ -760,7 +760,7 @@ private void readEdge(XMLStreamReader reader) throws Exception {
             } else if (edgeType.equalsIgnoreCase("directed")) {
                 edge.setDirection(EdgeDirection.DIRECTED);
             } else {
-                report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, "importerGEXF_error_edgetype", edgeType, edge), Issue.Level.SEVERE));
+                report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, "importerGEXF_error_edgetype", edgeType, edge.getId()), Issue.Level.SEVERE));
             }
         }
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -997,7 +997,7 @@ private void ensureLongSetArraySize(int type) {
     private long getLongId(EdgeDraftImpl edge) {
         EdgeDirection direction = edge.getDirection();
         boolean directed = edgeDefault.equals(EdgeDirectionDefault.DIRECTED)
-                || (!edgeDefault.equals(EdgeDirectionDefault.UNDIRECTED) && direction != null && direction == EdgeDirection.DIRECTED);
+                || (edgeDefault.equals(EdgeDirectionDefault.MIXED) && ((direction != null && direction == EdgeDirection.DIRECTED) || direction == null));
         return getLongId(edge.getSource(), edge.getTarget(), directed);
     }
 

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/Modularity.java
Patch:
@@ -588,14 +588,15 @@ private double finalQ(int[] struct, double[] degrees, Graph hgraph,
         double[] internal = new double[degrees.length];
         for (Node n : hgraph.getNodes()) {
             int n_index = theStructure.map.get(n);
-            for (Node neighbor : hgraph.getNeighbors(n)) {
+            for (Edge edge : hgraph.getEdges(n)) {
+                Node neighbor = hgraph.getOpposite(n, edge);
                 if (n == neighbor) {
                     continue;
                 }
                 int neigh_index = theStructure.map.get(neighbor);
                 if (struct[neigh_index] == struct[n_index]) {
                     if (weighted) {
-                        internal[struct[neigh_index]] += hgraph.getEdge(n, neighbor).getWeight(hgraph.getView());
+                        internal[struct[neigh_index]] += edge.getWeight(hgraph.getView());
                     } else {
                         internal[struct[neigh_index]]++;
                     }

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -411,7 +411,6 @@ private void initComponents() {
 
         centerScrollPane.setBorder(null);
         centerScrollPane.setOpaque(false);
-        centerScrollPane.setViewportView(null);
 
         backPanel.setLayout(new java.awt.GridBagLayout());
 

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/AbstractUniqueColorTransformer.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public class AbstractUniqueColorTransformer {
 
-    protected Color color = Color.BLACK;
+    protected Color color = Color.LIGHT_GRAY;
 
     public Color getColor() {
         return color;

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/palette/PaletteManager.java
Patch:
@@ -74,7 +74,7 @@ public synchronized static PaletteManager getInstance() {
     private final LinkedList<Palette> recentPalette;
     private final Color DEFAULT_COLOR = Color.LIGHT_GRAY;
 
-    public PaletteManager() {
+    private PaletteManager() {
         presets = loadPresets();
         defaultPalettes = loadDefaultPalettes();
         recentPalette = new LinkedList<Palette>();
@@ -145,6 +145,7 @@ public Collection<Palette> getDefaultPalette(int colorCount) {
     }
 
     public void addRecentPalette(Palette palette) {
+        recentPalette.remove(palette);
         if (recentPalette.size() == RECENT_PALETTE_SIZE) {
             recentPalette.removeLast();
         }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/PartitionImpl.java
Patch:
@@ -49,6 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Random;
 import org.gephi.appearance.api.Partition;
 
 /**

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/propertyeditors/DependantColorPropertyEditor.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.preview.propertyeditors;
 
 import java.awt.Component;
-import org.gephi.preview.types.propertyeditors.BasicDependantColorPropertyEditor;
+import org.gephi.preview.types.editors.BasicDependantColorPropertyEditor;
 
 /**
  *

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/propertyeditors/DependantOriginalColorPropertyEditor.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.preview.propertyeditors;
 
 import java.awt.Component;
-import org.gephi.preview.types.propertyeditors.BasicDependantOriginalColorPropertyEditor;
+import org.gephi.preview.types.editors.BasicDependantOriginalColorPropertyEditor;
 
 /**
  *

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/propertyeditors/EdgeColorPropertyEditor.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.preview.propertyeditors;
 
 import java.awt.Component;
-import org.gephi.preview.types.propertyeditors.BasicEdgeColorPropertyEditor;
+import org.gephi.preview.types.editors.BasicEdgeColorPropertyEditor;
 
 /**
  *

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/Report.java
Patch:
@@ -73,7 +73,6 @@ public Report() {
         try {
             f = File.createTempFile("tempreport", Long.toString(System.nanoTime()));
             f.deleteOnExit();
-            System.out.println("Report created at " + f.getAbsolutePath());
         } catch (IOException ex) {
             Exceptions.printStackTrace(ex);
         } finally {

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/Function.java
Patch:
@@ -124,7 +124,7 @@ public interface Function {
     /**
      * Returns the element class this function will be applied to.
      *
-     * @return
+     * @return element class
      */
     public Class<? extends Element> getElementClass();
 }

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/ContextMenuItemManipulator.java
Patch:
@@ -61,7 +61,7 @@ public interface ContextMenuItemManipulator extends Manipulator {
      * must return the subitem(s) with the mnemonic even when it has not been setup.
      * If you don't need a mnemonic, return null if the item is not setup.</p>
      * <p>Returned items have to be of the same type as the subinterface (NodesManipulator for example)</p>
-     * @return
+     * @return sub items
      */
     ContextMenuItemManipulator[] getSubItems();
 

File: modules/PerspectiveAPI/src/main/java/org/gephi/perspective/api/PerspectiveController.java
Patch:
@@ -57,7 +57,6 @@ Development and Distribution License("CDDL") (collectively, the
  * <li>org.gephi.perspective.default=PreviewGroup</li></ul>
  * 
  * @see Perspective
- * @see PerspectiveMember
  * @author Mathieu Bastian
  */
 public interface PerspectiveController {

File: modules/PerspectiveAPI/src/main/java/org/gephi/perspective/spi/Perspective.java
Patch:
@@ -54,7 +54,6 @@ Development and Distribution License("CDDL") (collectively, the
  * the system, like <b>@ServiceProvider(service = Perspective.class, position = 500)</b>.</li>
  * <li>Set the position to define the order of appearance, Overview is 100, Preview is 300.</li>
  * </ol>
- * @see PerspectiveMember
  * @author Mathieu Bastian
  */
 public interface Perspective {

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ColumnValuesFrequencyUI.java
Patch:
@@ -124,6 +124,7 @@ private void initComponents() {
         configurePieChartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/datalab/plugin/manipulators/resources/category.png"))); // NOI18N
         configurePieChartButton.setText(org.openide.util.NbBundle.getMessage(ColumnValuesFrequencyUI.class, "ColumnValuesFrequencyUI.configurePieChartButton.text")); // NOI18N
         configurePieChartButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 configurePieChartButtonActionPerformed(evt);
             }
@@ -132,6 +133,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         showReportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/datalab/plugin/manipulators/resources/application-block.png"))); // NOI18N
         showReportButton.setText(org.openide.util.NbBundle.getMessage(ColumnValuesFrequencyUI.class, "ColumnValuesFrequencyUI.showReportButton.text")); // NOI18N
         showReportButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 showReportButtonActionPerformed(evt);
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ConvertColumnToDynamicUI.java
Patch:
@@ -187,6 +187,7 @@ private void initComponents() {
         replaceColumnCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(ConvertColumnToDynamicUI.class, "ConvertColumnToDynamicUI.replaceColumnCheckbox.toolTipText")); // NOI18N
         replaceColumnCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
         replaceColumnCheckbox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 replaceColumnCheckboxActionPerformed(evt);
             }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java
Patch:
@@ -97,6 +97,7 @@ public void restored() {
 
         //Check for new major release:
         WindowManager.getDefault().invokeWhenUIReady(new Runnable() {
+            @Override
             public void run() {
                 new Thread() {
                     @Override
@@ -114,6 +115,7 @@ public void run() {
     private void initGephi() {
         final ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
         WindowManager.getDefault().invokeWhenUIReady(new Runnable() {
+            @Override
             public void run() {
                 pc.startup();
                 DragNDropFrameAdapter.register();

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/MemoryStarvationManager.java
Patch:
@@ -112,6 +112,7 @@ public void startup() {
         }
     }
 
+    @Override
     public void handleNotification(Notification n, Object o) {
         if (messageDelivered) {
             return;

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/CloseProject.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public final class CloseProject extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).closeProject();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/DeleteWorkspace.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public class DeleteWorkspace extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).deleteWorkspace();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/NewProject.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public final class NewProject extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).newProject();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/NewWorkspace.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public class NewWorkspace extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Lookup.getDefault().lookup(ProjectControllerUI.class).newWorkspace();
     }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/actions/RenameWorkspace.java
Patch:
@@ -58,6 +58,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class RenameWorkspace extends SystemAction {
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         String name = "";
         ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/multilingual/LanguageAction.java
Patch:
@@ -119,6 +119,7 @@ public JMenuItem getMenuPresenter() {
         for (final Language lang : Language.values()) {
             JMenuItem menuItem = new JMenuItem(new AbstractAction(lang.getName()) {
 
+                @Override
                 public void actionPerformed(ActionEvent e) {
                     String msg = NbBundle.getMessage(LanguageAction.class, "ChangeLang.Confirm.message" + (Utilities.isMac() || Utilities.isUnix() ? ".mac" : ""));
                     String title = NbBundle.getMessage(LanguageAction.class, "ChangeLang.Confirm.title");

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportController.java
Patch:
@@ -90,6 +90,7 @@ public class ReportController {
     public void sendReport(final Report report) {
         Thread thread = new Thread(new Runnable() {
 
+            @Override
             public void run() {
                 ProgressHandle handle = ProgressHandleFactory.createHandle(NbBundle.getMessage(ReportController.class, "ReportController.status.sending"));
                 try {

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReportPanel.java
Patch:
@@ -64,6 +64,7 @@ public ReportPanel(Report report) {
         //Bind
         followCheckBox.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 labelEmail.setEnabled(followCheckBox.isSelected());
                 emailTextField.setEnabled(followCheckBox.isSelected());
@@ -75,6 +76,7 @@ public void actionPerformed(ActionEvent e) {
         helpLabel.setEnabled(followCheckBox.isSelected());
         viewDataButton.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 //Set
                 ReportPanel.this.report.setUserDescription(problemArea.getText());

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/reporter/ReporterHandler.java
Patch:
@@ -92,12 +92,14 @@ public void close() throws SecurityException {
         throwable = null;
     }
 
+    @Override
     public JButton call() throws Exception {
         JButton btn = new JButton(NbBundle.getMessage(ReporterHandler.class, "ReportHandler.button"));
         btn.addActionListener(this);
         return btn;
     }
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         Report report = new Report();
         report.setThrowable(throwable);

File: modules/DesktopExport/src/main/java/org/gephi/desktop/io/export/api/TopDialog.java
Patch:
@@ -118,6 +118,7 @@ protected TopDialog(JDialog parent,
 
         Action cancelAction = new AbstractAction() {
 
+            @Override
             public void actionPerformed(ActionEvent ev) {
                 cancel();
             }
@@ -127,6 +128,7 @@ public void actionPerformed(ActionEvent ev) {
         addWindowListener(
                 new WindowAdapter() {
 
+                    @Override
                     public void windowClosing(WindowEvent ev) {
                         if (!haveFinalValue) {
                             TopDialog.this.nd.setValue(NotifyDescriptor.CLOSED_OPTION);
@@ -288,6 +290,7 @@ private void attachActionListener(Object comp, ActionListener l) {
     private ActionListener makeListener(final Object option) {
         return new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 //System.err.println("actionPerformed: " + option);
                 nd.setValue(option);

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/CategoryChildFactory.java
Patch:
@@ -69,6 +69,7 @@ protected boolean createKeys(List<Object> toPopulate) {
         Object[] children = utils.getChildren(category);
         Arrays.sort(children, new Comparator() {
 
+            @Override
             public int compare(Object o1, Object o2) {
                 String s1;
                 String s2;

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FilterBuilderNode.java
Patch:
@@ -109,15 +109,18 @@ public Transferable drag() throws IOException {
 
     private class FilterTransferable implements Transferable {
 
+        @Override
         public DataFlavor[] getTransferDataFlavors() {
             return new DataFlavor[]{DATA_FLAVOR};
         }
 
+        @Override
         public boolean isDataFlavorSupported(DataFlavor flavor) {
             return flavor == DATA_FLAVOR;
 
         }
 
+        @Override
         public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
             if (flavor == DATA_FLAVOR) {
                 return filterBuilder;

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FiltersExplorer.java
Patch:
@@ -224,6 +224,7 @@ public boolean isValid(Category category) {
     private void updateEnabled(final boolean enabled) {
         SwingUtilities.invokeLater(new Runnable() {
 
+            @Override
             public void run() {
                 setRootVisible(enabled);
                 setEnabled(enabled);

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/SavedQueryNode.java
Patch:
@@ -113,6 +113,7 @@ public RemoveAction() {
             super(NbBundle.getMessage(SavedQueryNode.class, "SavedQueryNode.actions.remove"));
         }
 
+        @Override
         public void actionPerformed(ActionEvent e) {
             FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
             FilterLibrary filterLibrary = filterController.getModel().getLibrary();

File: modules/DesktopGenerate/src/main/java/org/gephi/desktop/generate/Generate.java
Patch:
@@ -83,6 +83,7 @@ public JMenuItem getMenuPresenter() {
                 String menuName = gen.getName() + "...";
                 JMenuItem menuItem = new JMenuItem(new AbstractAction(menuName) {
 
+                    @Override
                     public void actionPerformed(ActionEvent e) {
                         generatorController.generate(gen);
                     }

File: modules/DesktopLayout/src/main/java/org/gephi/desktop/layout/LayoutPanel.java
Patch:
@@ -353,6 +353,7 @@ private void initComponents() {
         runButton.setIconTextGap(5);
         runButton.setMargin(new java.awt.Insets(2, 7, 2, 14));
         runButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 runButtonActionPerformed(evt);
             }
@@ -376,6 +377,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
 
         resetButton.setText(org.openide.util.NbBundle.getMessage(LayoutPanel.class, "LayoutPanel.resetButton.text")); // NOI18N
         resetButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 resetButtonActionPerformed(evt);
             }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewSettingsTopComponent.java
Patch:
@@ -382,6 +382,7 @@ private void initComponents() {
         saveButton.setFocusable(false);
         saveButton.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
         saveButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 saveButtonActionPerformed(evt);
             }
@@ -417,6 +418,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         refreshButton.setEnabled(false);
         refreshButton.setMargin(new java.awt.Insets(10, 14, 10, 14));
         refreshButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 refreshButtonActionPerformed(evt);
             }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -298,6 +298,7 @@ private void initComponents() {
 
         org.openide.awt.Mnemonics.setLocalizedText(refreshButton, org.openide.util.NbBundle.getMessage(PreviewTopComponent.class, "PreviewTopComponent.refreshButton.text")); // NOI18N
         refreshButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 refreshButtonActionPerformed(evt);
             }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/RendererManager.java
Patch:
@@ -297,6 +297,7 @@ private void initComponents() {
         restoreOrderButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
         restoreOrderButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
         restoreOrderButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 restoreOrderButtonActionPerformed(evt);
             }
@@ -309,6 +310,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         selectAllButton.setFocusable(false);
         selectAllButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
         selectAllButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 selectAllButtonActionPerformed(evt);
             }
@@ -320,6 +322,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         unselectAllButon.setFocusable(false);
         unselectAllButon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
         unselectAllButon.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 unselectAllButonActionPerformed(evt);
             }

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/AvailableStatisticsChooser.java
Patch:
@@ -77,6 +77,7 @@ public void setup(StatisticsModelUI model, StatisticsCategory[] categories) {
         //Sort categories by position
         Arrays.sort(categories, new Comparator() {
 
+            @Override
             public int compare(Object o1, Object o2) {
                 Integer p1 = ((StatisticsCategory) o1).getPosition();
                 Integer p2 = ((StatisticsCategory) o2).getPosition();
@@ -104,6 +105,7 @@ public int compare(Object o1, Object o2) {
             //Sort it by position
             Collections.sort(uis, new Comparator() {
 
+                @Override
                 public int compare(Object o1, Object o2) {
                     Integer p1 = ((StatisticsUI) o1).getPosition();
                     Integer p2 = ((StatisticsUI) o2).getPosition();

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/DynamicSettingsPanel.java
Patch:
@@ -430,6 +430,7 @@ public DateRangeValidator(ComboBoxModel comboBoxModel) {
             this.combo = comboBoxModel;
         }
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             Integer i = 0;
             try {
@@ -458,6 +459,7 @@ public TickUnderWindowValidator(boolean dates) {
             this.dates = dates;
         }
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             if (dates) {
                 Integer tick = 0;

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/StatisticsPanel.java
Patch:
@@ -107,6 +107,7 @@ private void refreshFrontEnd() {
                 //Sort it by position
                 Collections.sort(uis, new Comparator() {
 
+                    @Override
                     public int compare(Object o1, Object o2) {
                         Integer p1 = ((UIFrontEnd) o1).getStatisticsUI().getPosition();
                         Integer p2 = ((UIFrontEnd) o2).getStatisticsUI().getPosition();
@@ -146,6 +147,7 @@ private void initFrontEnds() {
                 //Sort it by position
                 Collections.sort(uis, new Comparator() {
 
+                    @Override
                     public int compare(Object o1, Object o2) {
                         Integer p1 = ((StatisticsUI) o1).getPosition();
                         Integer p2 = ((StatisticsUI) o2).getPosition();

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/CustomBoundsDialog.java
Patch:
@@ -73,6 +73,7 @@ public CustomBoundsDialog() {
 
         resetDefaultsDate.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
                 setDefaults();
             }
@@ -186,6 +187,7 @@ public TimeValidator(JTextField other, boolean max) {
             this.max = max;
         }
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             double thisDate;
             double otherDate;
@@ -247,6 +249,7 @@ public boolean validate(Problems prblms, String string, String t) {
 
     private class FormatValidator implements Validator<String> {
 
+        @Override
         public boolean validate(Problems prblms, String string, String t) {
             if (model.getTimeFormat().equals(TimeFormat.DATE)) {
                 try {

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimelineWindowAction.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 public final class TimelineWindowAction implements ActionListener {
     
+    @Override
     public void actionPerformed(ActionEvent e) {
         BottomComponentImpl bottomComponent = Lookup.getDefault().lookup(BottomComponentImpl.class);
         if (bottomComponent != null) {

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DelegatingChooserUI.java
Patch:
@@ -108,6 +108,7 @@ public static ComponentUI createUI(JComponent c) {
             fc.addPropertyChangeListener(
                     JFileChooser.FILE_SELECTION_MODE_CHANGED_PROPERTY,
                     new PropertyChangeListener () {
+                        @Override
                         public void propertyChange(PropertyChangeEvent evt) {
                             JFileChooser fileChooser = (JFileChooser)evt.getSource();
                             fileChooser.updateUI();

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DirectoryCellEditor.java
Patch:
@@ -72,10 +72,12 @@ public DirectoryCellEditor(JTree tree, JFileChooser fileChooser, final JTextFiel
         this.fileChooser = fileChooser;
     }
     
+    @Override
     public boolean isCellEditable(EventObject event) {
         return ((event instanceof MouseEvent) ? false : true);
     }
     
+    @Override
     public Component getTreeCellEditorComponent(JTree tree, Object value, boolean isSelected, boolean expanded, boolean leaf, int row) {
         Component c = super.getTreeCellEditorComponent(tree, value, isSelected, expanded, leaf, row);
         DirectoryNode node = (DirectoryNode)value;

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/DirectoryNode.java
Patch:
@@ -238,6 +238,7 @@ private static FileObject convertToValidDir(File f) {
 
     private class DirectoryFilter implements FileFilter {
 
+        @Override
         public boolean accept(File f) {
             return f.isDirectory();
         }
@@ -250,6 +251,7 @@ public String getDescription() {
     /** Compares files ignoring case sensitivity */
     private static class FileNameComparator implements Comparator<File> {
 
+        @Override
         public int compare(File f1, File f2) {
             return String.CASE_INSENSITIVE_ORDER.compare(f1.getName(), f2.getName());
         }

File: modules/DirectoryChooser/src/main/java/org/netbeans/swing/dirchooser/Module.java
Patch:
@@ -91,6 +91,7 @@ public static void install() {
         }
         // #61147: prevent NB from switching to a different UI later (under GTK):
         uid.addPropertyChangeListener(pcl = new PropertyChangeListener() {
+            @Override
             public void propertyChange(PropertyChangeEvent evt) {
                 String name = evt.getPropertyName();
                 Object className = uid.get(KEY);

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterDLPanel.java
Patch:
@@ -81,13 +81,15 @@ private void initComponents() {
 
         matrixRadioButton.setText("Matrix");
         matrixRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 matrixRadioButtonActionPerformed(evt);
             }
         });
 
         listRadioButton.setText("List");
         listRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 listRadioButtonActionPerformed(evt);
             }

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGDFPanel.java
Patch:
@@ -106,6 +106,7 @@ private void initComponents() {
 
         quotesCheckbox.setText(org.openide.util.NbBundle.getMessage(UIExporterGDFPanel.class, "UIExporterGDFPanel.quotesCheckbox.text")); // NOI18N
         quotesCheckbox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 quotesCheckboxActionPerformed(evt);
             }

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterGMLPanel.java
Patch:
@@ -115,6 +115,7 @@ private void initComponents() {
 
         exportNotRecognizedCheckBox.setText(org.openide.util.NbBundle.getMessage(UIExporterGMLPanel.class, "UIExporterGML.attributes.text")); // NOI18N
         exportNotRecognizedCheckBox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 exportNotRecognizedCheckBoxActionPerformed(evt);
             }

File: modules/ExportPluginUI/src/main/java/org/gephi/ui/exporter/plugin/UIExporterVNAPanel.java
Patch:
@@ -108,6 +108,7 @@ private void initComponents() {
 
         exportAttributesCheckBox.setText(org.openide.util.NbBundle.getMessage(UIExporterVNAPanel.class, "UIExporterGML.attributes.text")); // NOI18N
         exportAttributesCheckBox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 exportAttributesCheckBoxActionPerformed(evt);
             }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/attribute/EqualStringPanel.java
Patch:
@@ -67,6 +67,7 @@ public EqualStringPanel() {
         okButton.addActionListener(this);
     }
 
+    @Override
     public void actionPerformed(ActionEvent evt) {
         FilterProperty pattern = filter.getProperties()[1];
         FilterProperty useRegex = filter.getProperties()[2];
@@ -102,6 +103,7 @@ public static ValidationPanel createValidationPanel(final EqualStringPanel inner
         ValidationGroup group = validationPanel.getValidationGroup();
         validationPanel.addChangeListener(new ChangeListener() {
 
+            @Override
             public void stateChanged(ChangeEvent e) {
                 innerPanel.okButton.setEnabled(!validationPanel.isProblem());
             }

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/attribute/EqualStringUIImpl.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = EqualStringUI.class)
 public class EqualStringUIImpl implements EqualStringUI {
 
+    @Override
     public JPanel getPanel(EqualStringFilter filter) {
         EqualStringPanel panel = new EqualStringPanel();
         panel.setup(filter);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/dynamic/DynamicRangePanel.java
Patch:
@@ -72,6 +72,7 @@ public void setup(final DynamicRangeFilter filter) {
         timelineButton.setText(bottomComponent.isVisible() ? CLOSE : OPEN);
         timelineButton.addActionListener(new ActionListener() {
 
+            @Override
             public void actionPerformed(ActionEvent e) {
 
                 if (!bottomComponent.isVisible()) {
@@ -86,6 +87,7 @@ public void actionPerformed(ActionEvent e) {
         keepEmptyCheckbox.setSelected(filter.isKeepNull());
         keepEmptyCheckbox.addItemListener(new ItemListener() {
 
+            @Override
             public void itemStateChanged(ItemEvent e) {
                 if (!filter.isKeepNull() == keepEmptyCheckbox.isSelected()) {
                     filter.getProperties()[1].setValue(keepEmptyCheckbox.isSelected());

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/dynamic/DynamicRangeUIImpl.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = DynamicRangeUI.class)
 public class DynamicRangeUIImpl implements DynamicRangeUI {
 
+    @Override
     public JPanel getPanel(DynamicRangeFilter filter) {
         DynamicRangePanel panel = new DynamicRangePanel();
         panel.setup(filter);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/graph/EgoUIImpl.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = EgoUI.class)
 public class EgoUIImpl implements EgoUI {
 
+    @Override
     public JPanel getPanel(EgoFilter egoFilter) {
         EgoPanel egoPanel = new EgoPanel();
         egoPanel.setup(egoFilter);

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/graph/NeighborsPanel.java
Patch:
@@ -59,6 +59,7 @@ public NeighborsPanel() {
 
         depthComboBox.addItemListener(new ItemListener() {
 
+            @Override
             public void itemStateChanged(ItemEvent e) {
                 int depth = -1;
                 int index = depthComboBox.getSelectedIndex();
@@ -75,6 +76,7 @@ public void itemStateChanged(ItemEvent e) {
 
         withSelfCheckbox.addItemListener(new ItemListener() {
 
+            @Override
             public void itemStateChanged(ItemEvent e) {
                 if (!neighborsFilter.isSelf() == withSelfCheckbox.isSelected()) {
                     neighborsFilter.getProperties()[1].setValue(withSelfCheckbox.isSelected());

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/operator/MASKEdgePanel.java
Patch:
@@ -61,6 +61,7 @@ public MASKEdgePanel() {
         targetButton.addActionListener(this);
     }
 
+    @Override
     public void actionPerformed(ActionEvent e) {
         if (operator != null) {
             MASKBuilderEdge.MaskEdgeOperator.EdgesOptions option = MASKBuilderEdge.MaskEdgeOperator.EdgesOptions.ANY;

File: modules/FiltersPluginUI/src/main/java/org/gephi/ui/filters/plugin/operator/MASKEdgeUIImpl.java
Patch:
@@ -54,6 +54,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = MASKEdgeUI.class)
 public class MASKEdgeUIImpl implements MASKEdgeUI {
 
+    @Override
     public JPanel getPanel(MaskEdgeOperator filter) {
         MASKEdgePanel panel = new MASKEdgePanel();
         panel.setup(filter);

File: modules/ImportPluginUI/src/main/java/org/gephi/ui/importer/plugin/EdgeListPanel.java
Patch:
@@ -287,6 +287,7 @@ private void initComponents() {
 
         configurationCombo.setModel(new EdgeListPanel.ConfigurationComboModel());
         configurationCombo.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 configurationComboActionPerformed(evt);
             }
@@ -325,6 +326,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         testConnection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/ui/importer/plugin/resources/test_connection.png"))); // NOI18N
         testConnection.setText(org.openide.util.NbBundle.getMessage(EdgeListPanel.class, "EdgeListPanel.testConnection.text")); // NOI18N
         testConnection.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 testConnectionActionPerformed(evt);
             }
@@ -341,6 +343,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         removeConfigurationButton.setMargin(new java.awt.Insets(0, 4, 0, 2));
         removeConfigurationButton.setPreferredSize(new java.awt.Dimension(65, 29));
         removeConfigurationButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 removeConfigurationButtonActionPerformed(evt);
             }

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/ExporterBuilderPDF.java
Patch:
@@ -54,15 +54,18 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = VectorFileExporterBuilder.class)
 public class ExporterBuilderPDF implements VectorFileExporterBuilder {
 
+    @Override
     public VectorExporter buildExporter() {
         return new PDFExporter();
     }
 
+    @Override
     public FileType[] getFileTypes() {
         FileType ft = new FileType(".pdf", NbBundle.getMessage(ExporterBuilderPDF.class, "fileType_PDF_Name"));
         return new FileType[]{ft};
     }
 
+    @Override
     public String getName() {
         return NbBundle.getMessage(ExporterBuilderPDF.class, "ExporterPDF_name");
     }

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/ExporterBuilderSVG.java
Patch:
@@ -54,15 +54,18 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service = VectorFileExporterBuilder.class)
 public class ExporterBuilderSVG implements VectorFileExporterBuilder {
 
+    @Override
     public VectorExporter buildExporter() {
         return new SVGExporter();
     }
 
+    @Override
     public FileType[] getFileTypes() {
         FileType ft = new FileType(".svg", NbBundle.getMessage(ExporterBuilderSVG.class, "fileType_SVG_Name"));
         return new FileType[]{ft};
     }
 
+    @Override
     public String getName() {
         return NbBundle.getMessage(ExporterBuilderSVG.class, "ExporterSVG_name");
     }

File: modules/ProjectUI/src/main/java/org/gephi/ui/project/ProjectPropertiesUIImpl.java
Patch:
@@ -55,15 +55,18 @@ public class ProjectPropertiesUIImpl implements ProjectPropertiesUI {
 
     private ProjectPropertiesEditor panel;
 
+    @Override
     public JPanel getPanel() {
         panel = new ProjectPropertiesEditor();
         return panel;
     }
 
+    @Override
     public void setup(Project project) {
         panel.load(project);
     }
 
+    @Override
     public void unsetup(Project project) {
         panel.save(project);
         panel = null;

File: modules/StatisticsAPI/src/main/java/org/gephi/statistics/StatisticsModelImpl.java
Patch:
@@ -82,6 +82,7 @@ public void addReport(Statistics statistics) {
         reportMap.put(statistics.getClass(), statistics.getReport());
     }
 
+    @Override
     public String getReport(Class<? extends Statistics> statisticsClass) {
         return reportMap.get(statisticsClass);
     }

File: modules/StatisticsAPI/src/main/java/org/gephi/statistics/spi/DynamicStatistics.java
Patch:
@@ -68,6 +68,7 @@ public interface DynamicStatistics extends Statistics {
      * graph structure and the attribute model the attribute columns.
      * @param graphModel the graph model
      */
+    @Override
     public void execute(GraphModel graphModel);
 
     /**

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbEdges.java
Patch:
@@ -135,6 +135,7 @@ public void loop(GraphView window, Interval interval) {
     public void end() {
     }
 
+    @Override
     public void setBounds(Interval bounds) {
         this.bounds = bounds;
     }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/EigenvectorCentralityPanel.java
Patch:
@@ -115,6 +115,7 @@ private void initComponents() {
         buttonGroup1.add(undirectedRadioButton);
         undirectedRadioButton.setText(org.openide.util.NbBundle.getMessage(EigenvectorCentralityPanel.class, "EigenvectorCentralityPanel.undirectedButton.text")); // NOI18N
         undirectedRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 undirectedRadioButtonActionPerformed(evt);
             }

File: modules/StatisticsPluginUI/src/main/java/org/gephi/ui/statistics/plugin/GraphDistancePanel.java
Patch:
@@ -104,6 +104,7 @@ private void initComponents() {
         directedButtonGroup.add(directedRadioButton);
         directedRadioButton.setText(org.openide.util.NbBundle.getMessage(GraphDistancePanel.class, "GraphDistancePanel.directedRadioButton.text")); // NOI18N
         directedRadioButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 directedRadioButtonActionPerformed(evt);
             }

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/EdgePencilPanel.java
Patch:
@@ -127,6 +127,7 @@ private void initComponents() {
         labelColor.setText(org.openide.util.NbBundle.getMessage(EdgePencilPanel.class, "EdgePencilPanel.labelColor.text")); // NOI18N
 
         typeComboBox.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 typeComboBoxActionPerformed(evt);
             }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/options/DefaultPanel.java
Patch:
@@ -197,6 +197,7 @@ private void initComponents() {
 
         org.openide.awt.Mnemonics.setLocalizedText(resetButton, org.openide.util.NbBundle.getMessage(DefaultPanel.class, "DefaultPanel.resetButton.text")); // NOI18N
         resetButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 resetButtonActionPerformed(evt);
             }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/options/OpenGLPanel.java
Patch:
@@ -102,6 +102,7 @@ private void initComponents() {
 
         org.openide.awt.Mnemonics.setLocalizedText(resetButton, org.openide.util.NbBundle.getMessage(OpenGLPanel.class, "OpenGLPanel.resetButton.text")); // NOI18N
         resetButton.addActionListener(new java.awt.event.ActionListener() {
+            @Override
             public void actionPerformed(java.awt.event.ActionEvent evt) {
                 resetButtonActionPerformed(evt);
             }

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/Hits.java
Patch:
@@ -154,8 +154,8 @@ public void calculateHits(Graph hgraph, double[] hubValues, double[] authorityVa
             System.arraycopy(temp_authority, 0, authorityValues, 0, N);
             System.arraycopy(temp_hubs, 0, hubValues, 0, N);
 
-//            temp_authority = new double[N];
-//            temp_hubs = new double[N]
+            temp_authority = new double[N];
+            temp_hubs = new double[N];
 
             if ((done) || (isCanceled)) {
                 break;

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/builder/HitsBuilder.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
  *
  * @author pjmcswee
  */
-@ServiceProvider(service = StatisticsBuilder.class)
+//@ServiceProvider(service = StatisticsBuilder.class)
 public class HitsBuilder implements StatisticsBuilder {
 
     @Override

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/GraphDistanceNGTest.java
Patch:
@@ -122,7 +122,7 @@ public void testNullGraphAvPathLength() {
         d.calculateDistanceMetrics(graphModel.getGraph(), indicies, false, false);
 
         double averageDegree = d.getPathLength();
-        assertEquals(averageDegree, 0.0);
+        assertEquals(averageDegree, Double.NaN);
     }
 
     @Test

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/EigenvectorCentrality.java
Patch:
@@ -230,6 +230,8 @@ private double updateValues(Graph hgraph, double[] tempValues, double[] centrali
             if (max != 0) {
                 sumChanged += Math.abs(centralityValues[k] - (tempValues[k] / max));
                 centralityValues[k] = tempValues[k] / max;
+            } else {
+                centralityValues[k] = 0.0;
             }
             if (isCanceled) {
                 return sumChanged;

File: modules/StatisticsPlugin/src/test/java/org/gephi/statistics/plugin/EigenvectorCentralityNGTest.java
Patch:
@@ -132,6 +132,7 @@ public void testNullGraphEigenvectorCentrality() {
         UndirectedGraph hgraph = graphModel.getUndirectedGraph();
 
         EigenvectorCentrality ec = new EigenvectorCentrality();
+        ec.setDirected(false);
 
         double[] centralities = new double[5];
 
@@ -155,6 +156,7 @@ public void testCompleteUndirectedGraphEigenvectorCentrality() {
         UndirectedGraph hgraph = graphModel.getUndirectedGraph();
 
         EigenvectorCentrality ec = new EigenvectorCentrality();
+        ec.setDirected(false);
 
         double[] centralities = new double[5];
 

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/ClusteringCoefficient.java
Patch:
@@ -672,7 +672,7 @@ private Column initializeAttributeColunms(GraphModel graphModel) {
     }
 
     private void saveCalculatedValue(Node node, Column clusteringColumn,
-            float nodeClusteringCoefficient) {
+            double nodeClusteringCoefficient) {
 
         if (clusteringColumn == null) {
             return;

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -203,8 +203,8 @@ public Helper(
                     * weight.floatValue();
             float radius = -(properties.getFloatValue(PreviewProperty.EDGE_RADIUS)
                     + (Float) targetItem.getData(NodeItem.SIZE) / 2f
-                    + Math.max(0, properties.getFloatValue(
-                            PreviewProperty.NODE_BORDER_WIDTH)));
+                    + Math.max(0, properties.getFloatValue(PreviewProperty.NODE_BORDER_WIDTH)) / 2f //We have to divide by 2 because the border stroke is not only an outline but also draws the other half of the curve inside the node
+                    );
 
             //Avoid arrow from passing the node's center:
             if (radius > 0) {

File: modules/GraphAPI/src/main/java/org/gephi/graph/LegacyDataPersistenceProvider.java
Patch:
@@ -155,11 +155,11 @@ public void readEdgeData(XMLStreamReader reader, Edge edge) throws XMLStreamExce
                     float b = Float.parseFloat(reader.getAttributeValue(null, "b"));
                     float alpha = Float.parseFloat(reader.getAttributeValue(null, "a"));
                     
-                    //I have an old .gephi file with <color r="-1.0" g="0.0" b="0.0" a="1.0"> in every <edgedata>
-                    //So it seems that old versions of Gephi stored r = -1 sometimes. I guess it means no edge color set up? So use black instead.
+                    //Old gephi versions stored r = -1 to indicate that the edge had no color (use the node color)
+                    //Since Gephi 0.9, we do that with alpha = 0
                     if(r < 0 || g < 0 || b < 0){
                         r = g = b = 0;
-                        alpha = 1;
+                        alpha = 0;
                     }
                     
                     edge.setR(r);

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/EdgeLabelRenderer.java
Patch:
@@ -201,6 +201,9 @@ public void render(Item item, RenderTarget target, PreviewProperties properties)
         Float outlineSize = properties.getFloatValue(PreviewProperty.EDGE_LABEL_OUTLINE_SIZE);
         outlineSize = outlineSize * (font.getSize() / 32f);
         int outlineAlpha = (int) ((properties.getFloatValue(PreviewProperty.EDGE_LABEL_OUTLINE_OPACITY) / 100f) * 255f);
+        if (outlineAlpha < 0) {
+            outlineAlpha = 0;
+        }
         if (outlineAlpha > 255) {
             outlineAlpha = 255;
         }

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/NodeRenderer.java
Patch:
@@ -111,6 +111,9 @@ public void renderG2D(Item item, G2DTarget target, PreviewProperties properties)
         Color borderColor = ((DependantColor) properties.getValue(PreviewProperty.NODE_BORDER_COLOR)).getColor(color);
         float borderSize = properties.getFloatValue(PreviewProperty.NODE_BORDER_WIDTH);
         int alpha = (int) ((properties.getFloatValue(PreviewProperty.NODE_OPACITY) / 100f) * 255f);
+        if (alpha < 0) {
+            alpha = 0;
+        }
         if (alpha > 255) {
             alpha = 255;
         }

File: modules/PreviewAPI/src/main/java/org/gephi/preview/G2DRenderTargetBuilder.java
Patch:
@@ -87,13 +87,11 @@ public String getName() {
 
     public static class G2DTargetImpl extends AbstractRenderTarget implements G2DTarget {
 
-        private final PreviewController previewController;
         private final PreviewModel previewModel;
         private G2DGraphics graphics;
 
         public G2DTargetImpl(PreviewModel model, int width, int height) {
             graphics = new G2DGraphics(width, height);
-            previewController = Lookup.getDefault().lookup(PreviewController.class);
             previewModel = model;
         }
 
@@ -153,7 +151,7 @@ public void reset() {
         @Override
         public void refresh() {
             if (graphics != null) {
-                graphics.refresh(previewController.getModel(), this);
+                graphics.refresh(previewModel, this);
             }
         }
     }

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -305,6 +305,8 @@ private void readGraph(XMLStreamReader reader) throws Exception {
                 container.setElementIdType(ElementIdType.INTEGER);
             } else if (idType.equalsIgnoreCase("long")) {
                 container.setElementIdType(ElementIdType.LONG);
+            } else if (idType.equalsIgnoreCase("string")) {
+                container.setElementIdType(ElementIdType.STRING);
             } else {
                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, "importerGEXF_error_idtype_error", idType), Issue.Level.SEVERE));
             }

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -282,7 +282,9 @@ private JPopupMenu createPopup(final int colorsCount) {
                 menu.add("<html><i>" + NbBundle.getMessage(PartitionColorTransformerPanel.class, "PalettePopup.norecent") + "</i></html>");
             } else {
                 for (Palette pl : recentPalettes) {
-                    menu.add(new PaletteMenuItem(pl, Math.min(PALETTE_DISPLAY_LIMIT, colorsCount)));
+                    if (pl.size() >= colorsCount) {
+                        menu.add(new PaletteMenuItem(pl, Math.min(PALETTE_DISPLAY_LIMIT, colorsCount)));
+                    }
                 }
             }
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeModel.java
Patch:
@@ -41,7 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.node;
 
-import java.awt.geom.Rectangle2D;
 import org.gephi.graph.api.ElementProperties;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vecf;
@@ -165,7 +164,7 @@ public int getOctantId() {
 
     @Override
     public boolean hasCustomTextColor() {
-        return node.getTextProperties().getAlpha()> 0;
+        return node.getTextProperties().getAlpha() > 0;
     }
 
     @Override

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/InterEdgesBuilder.java
Patch:
@@ -167,8 +167,8 @@ public boolean init(Graph graph) {
 
         @Override
         public boolean evaluate(Graph graph, Edge edge) {
-            Object srcValue = partition.getValue(edge.getSource());
-            Object destValue = partition.getValue(edge.getTarget());
+            Object srcValue = partition.getValue(edge.getSource(), graph);
+            Object destValue = partition.getValue(edge.getTarget(), graph);
             srcValue = srcValue == null ? NULL : srcValue;
             destValue = destValue == null ? NULL : destValue;
             return parts.contains(srcValue) && parts.contains(destValue) && !srcValue.equals(destValue);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/IntraEdgesBuilder.java
Patch:
@@ -167,8 +167,8 @@ public boolean init(Graph graph) {
 
         @Override
         public boolean evaluate(Graph graph, Edge edge) {
-            Object srcValue = partition.getValue(edge.getSource());
-            Object destValue = partition.getValue(edge.getTarget());
+            Object srcValue = partition.getValue(edge.getSource(), graph);
+            Object destValue = partition.getValue(edge.getTarget(), graph);
             srcValue = srcValue == null ? NULL : srcValue;
             destValue = destValue == null ? NULL : destValue;
             return parts.contains(srcValue) && parts.contains(destValue) && srcValue.equals(destValue);

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/PartitionBuilder.java
Patch:
@@ -217,7 +217,7 @@ public String getName() {
         }
 
         public boolean evaluate(Graph graph, Node node) {
-            Object value = partition.getValue(node);
+            Object value = partition.getValue(node, graph);
             if (value == null) {
                 return parts.contains(NULL);
             } else {
@@ -226,7 +226,7 @@ public boolean evaluate(Graph graph, Node node) {
         }
 
         public boolean evaluate(Graph graph, Edge edge) {
-            Object value = partition.getValue(edge);
+            Object value = partition.getValue(edge, graph);
             if (value == null) {
                 return parts.contains(NULL);
             } else {

File: modules/FiltersPlugin/src/main/java/org/gephi/filters/plugin/partition/PartitionCountBuilder.java
Patch:
@@ -159,7 +159,7 @@ public boolean init(Graph graph) {
 
         @Override
         public boolean evaluate(Graph graph, Element element) {
-            Object p = partition.getValue(element);
+            Object p = partition.getValue(element, graph);
             if (p != null) {
                 int partCount = partition.count(p);
                 return range.isInRange(partCount);

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceTopComponent.java
Patch:
@@ -307,6 +307,7 @@ public void run() {
                         }
 
                     }
+                    localScaleButton.setSelected(model.isLocalScale());
                     return;
                 }
                 //Disable

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/TextModel.java
Patch:
@@ -4,7 +4,6 @@
  */
 package org.gephi.visualization.model;
 
-import java.awt.geom.Rectangle2D;
 import org.gephi.graph.api.ElementProperties;
 
 /**

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/EdgeModel.java
Patch:
@@ -100,7 +100,7 @@ public void setWeight(float weight) {
 
     @Override
     public boolean hasCustomTextColor() {
-        return edge.getTextProperties().getR() > 0;
+        return edge.getTextProperties().getAlpha()> 0;
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeModel.java
Patch:
@@ -165,7 +165,7 @@ public int getOctantId() {
 
     @Override
     public boolean hasCustomTextColor() {
-        return node.getTextProperties().getR() > 0;
+        return node.getTextProperties().getAlpha()> 0;
     }
 
     @Override

File: modules/DBDrivers/src/main/java/org/gephi/io/database/drivers/MySQLDriver.java
Patch:
@@ -44,13 +44,16 @@ Development and Distribution License("CDDL") (collectively, the
 import java.sql.Connection;
 import java.sql.DriverManager;
 import java.sql.SQLException;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service = SQLDriver.class, position = 10)
 public class MySQLDriver implements SQLDriver {
 
+    @Override
     public Connection getConnection(String connectionUrl, String username, String passwd) throws SQLException {
         return DriverManager.getConnection(connectionUrl, username, passwd);
     }

File: modules/DBDrivers/src/main/java/org/gephi/io/database/drivers/PostgreSQLDriver.java
Patch:
@@ -38,17 +38,19 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.io.database.drivers;
 
 import java.sql.Connection;
 import java.sql.DriverManager;
 import java.sql.SQLException;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service = SQLDriver.class, position = 30)
 public class PostgreSQLDriver implements SQLDriver {
 
     @Override

File: modules/DBDrivers/src/main/java/org/gephi/io/database/drivers/SQLiteDriver.java
Patch:
@@ -46,11 +46,13 @@ Development and Distribution License("CDDL") (collectively, the
 import java.sql.SQLException;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service = SQLDriver.class, position = 20)
 public class SQLiteDriver implements SQLDriver {
 
     public SQLiteDriver() {

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -211,7 +211,7 @@ public Container importDatabase(Database database, DatabaseImporter importer) {
 
         try {
             if (importer.execute(container.getLoader())) {
-                if (importer.getReport() != null) {
+                if (importer.getReport() != null && importer.getReport() != report) {
                     report.append(importer.getReport());
                 }
                 report.close();

File: modules/ImportPluginUI/src/main/java/org/gephi/ui/importer/plugin/EdgeListDatabaseManager.java
Patch:
@@ -95,8 +95,8 @@ public void persist() {
 
     private void load() {
         if (databaseConfigurations == null) {
-            databaseConfigurations =
-                    FileUtil.getConfigFile("EdgeListDatabase");
+            databaseConfigurations
+                    = FileUtil.getConfigFile("EdgeListDatabase");
         }
 
         if (databaseConfigurations != null) {

File: modules/DesktopTimeline/src/main/java/org/gephi/desktop/timeline/TimelineDrawer.java
Patch:
@@ -595,7 +595,6 @@ public void mouseDragged(MouseEvent evt) {
             to = Math.min(to, model.getCustomMax());
             if (from < to) {
                 controller.setInterval(from, to);
-                repaint();
             }
         }
     }

File: modules/TimelineAPI/src/main/java/org/gephi/timeline/TimelineControllerImpl.java
Patch:
@@ -325,6 +325,7 @@ public void setInterval(double from, double to) {
                         } else {
                             filterController.filterVisible(dynamicQuery);
                         }
+                        fireTimelineModelEvent(new TimelineModelEvent(TimelineModelEvent.EventType.INTERVAL, model, new double[]{from, to}));
                     }
                 }
             }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/NodesDataTable.java
Patch:
@@ -51,7 +51,9 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.event.ListSelectionListener;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.nodes.NodesManipulator;
+import org.gephi.desktop.datalab.DataTablesModel;
 import org.gephi.desktop.datalab.tables.popup.NodesPopupAdapter;
+import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.Node;
 import org.gephi.tools.api.EditWindowController;
 import org.openide.util.Lookup;
@@ -110,7 +112,7 @@ public void keyReleased(KeyEvent e) {
     private final List<PropertyDataColumn<Node>> propertiesColumns = new ArrayList<PropertyDataColumn<Node>>();
 
     @Override
-    public List<? extends ElementDataColumn<Node>> getFakeDataColumns() {
+    public List<? extends ElementDataColumn<Node>> getFakeDataColumns(GraphModel graphModel, DataTablesModel dataTablesModel) {
         return propertiesColumns;
     }
 }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/columns/ElementDataColumn.java
Patch:
@@ -41,6 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.datalab.tables.columns;
 
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 
 /**
@@ -58,4 +59,6 @@ public interface ElementDataColumn<T extends Element> {
     public void setValueFor(T element, Object value);
 
     public boolean isEditable();
+    
+    public Column getColumn();
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -425,6 +425,9 @@ protected void refreshFunctions() {
             graph.readLock();
             boolean graphHasChanged = graphObserver.isNew() || graphObserver.hasGraphChanged();
             if (graphHasChanged) {
+                if(graphObserver.isNew()) {
+                    graphObserver.hasGraphChanged();
+                }
                 refreshGraphFunctions();
             }
             refreshAttributeFunctions(graphHasChanged);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizModelPersistenceProvider.java
Patch:
@@ -73,7 +73,7 @@ public void writeXML(XMLStreamWriter writer, Workspace workspace) {
     public void readXML(XMLStreamReader reader, Workspace workspace) {
         VizModel vizModel = workspace.getLookup().lookup(VizModel.class);
         if (vizModel == null) {
-            vizModel = new VizModel();
+            vizModel = new VizModel(workspace);
             workspace.add(vizModel);
         }
         Lookup.getDefault().lookup(VizController.class).refreshWorkspace();//Necessary to get events from reading xml properties such as background color changed

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceToolbar.java
Patch:
@@ -475,6 +475,7 @@ private void clearControlButtons() {
         protected void setup() {
             clear();
             if (model != null) {
+                removeAll();
                 for (Enumeration<AbstractButton> btns = buttonGroups.getElements(); btns.hasMoreElements();) {
                     AbstractButton btn = btns.nextElement();
                     add(btn);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/GraphTopComponent.java
Patch:
@@ -104,8 +104,6 @@ public void run() {
                         requestActive();
                         add(drawable.getGraphComponent(), BorderLayout.CENTER);
                         remove(waitingLabel);
-
-                        engine.startDisplay();
                     }
                 });
             }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/NewtGraphCanvas.java
Patch:
@@ -48,7 +48,6 @@ Development and Distribution License("CDDL") (collectively, the
 import com.jogamp.opengl.GL2;
 import com.jogamp.opengl.glu.GLU;
 import java.awt.Dimension;
-import java.awt.Point;
 import javax.swing.JPopupMenu;
 import javax.swing.ToolTipManager;
 
@@ -90,6 +89,8 @@ public GLWindow getWindow() {
     @Override
     protected void init(GL2 gl) {
         globalScale = glWindow.getCurrentSurfaceScale(new float[2])[0];
+
+        engine.startDisplay();
     }
 
     public void reinitWindow() {

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -229,7 +229,7 @@ protected void nodeAttributes(StreamTokenizer streamTokenizer, final NodeDraft n
 
         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {
             return;
-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {
+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"') {
 
             if (streamTokenizer.sval.equalsIgnoreCase("label")) {
                 streamTokenizer.nextToken();
@@ -367,7 +367,7 @@ protected void edgeAttributes(StreamTokenizer streamTokenizer, final EdgeDraft e
 
         if (streamTokenizer.ttype == ']' || streamTokenizer.ttype == StreamTokenizer.TT_EOF) {
             return;
-        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {
+        } else if (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"') {
             if (streamTokenizer.sval.equalsIgnoreCase("label")) {
                 streamTokenizer.nextToken();
                 if (streamTokenizer.ttype == '=') {

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIModel.java
Patch:
@@ -328,7 +328,7 @@ private Map<String, Method[]> getProperties(Transformer transformer) {
             Method get = entry.getValue()[0];
             Method set = entry.getValue()[1];
             if (!(get != null && set != null
-                    && set.getParameterCount() == 1 && get.getParameterCount() == 0
+                    && set.getParameterTypes().length == 1 && get.getParameterTypes().length == 0
                     && set.getParameterTypes()[0].equals(get.getReturnType())
                     && isSupportedPropertyType(get.getReturnType()))) {
                 itr.remove();

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceControllerImpl.java
Patch:
@@ -48,6 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.ElementIterable;
 import org.gephi.graph.api.GraphModel;
+import org.gephi.graph.api.Node;
 import org.gephi.project.api.ProjectController;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.api.WorkspaceListener;
@@ -111,7 +112,7 @@ public void transform(Function function) {
         if (model != null) {
             GraphModel graphModel = model.getGraphModel();
             ElementIterable<? extends Element> iterable;
-            if (function.getTransformer().isNode()) {
+            if (function.getElementClass().equals(Node.class)) {
                 iterable = graphModel.getGraphVisible().getNodes();
             } else {
                 iterable = graphModel.getGraphVisible().getEdges();

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/SimpleFunctionImpl.java
Patch:
@@ -8,6 +8,7 @@
 import org.gephi.appearance.api.SimpleFunction;
 import org.gephi.appearance.spi.Transformer;
 import org.gephi.appearance.spi.TransformerUI;
+import org.gephi.graph.api.Element;
 import org.gephi.graph.api.Graph;
 
 /**
@@ -16,7 +17,7 @@
  */
 public class SimpleFunctionImpl extends FunctionImpl implements SimpleFunction {
 
-    public SimpleFunctionImpl(String id, Graph graph, Transformer transformer, TransformerUI transformerUI) {
-        super(id, null, graph, null, transformer, transformerUI, null, null, null);
+    public SimpleFunctionImpl(String id, Class<? extends Element> elementClass, Graph graph, Transformer transformer, TransformerUI transformerUI) {
+        super(id, null, elementClass, graph, null, transformer, transformerUI, null, null, null);
     }
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/Function.java
Patch:
@@ -67,4 +67,6 @@ public interface Function {
     public boolean isPartition();
 
     public Graph getGraph();
+
+    public Class<? extends Element> getElementClass();
 }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/Partition.java
Patch:
@@ -53,7 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 public interface Partition {
 
     public Collection getValues();
-    
+
     public Collection getSortedValues();
 
     public int getElementCount();

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceToolbar.java
Patch:
@@ -319,7 +319,7 @@ protected void refreshTransformers() {
                     for (Enumeration<AbstractButton> btns = g.getElements(); btns.hasMoreElements();) {
                         AbstractButton btn = btns.nextElement();
                         btn.setVisible(active);
-                        if (btn.getName().equals(selected)) {
+                        if (active && btn.getName().equals(selected)) {
                             g.setSelected(btn.getModel(), true);
                         }
                     }
@@ -417,7 +417,7 @@ protected void refreshTransformers() {
                         for (Enumeration<AbstractButton> btns = g.getElements(); btns.hasMoreElements();) {
                             AbstractButton btn = btns.nextElement();
                             btn.setVisible(active);
-                            if (t != null && btn.getName().equals(t.getDisplayName())) {
+                            if (t != null && active && btn.getName().equals(t.getDisplayName())) {
                                 g.setSelected(btn.getModel(), true);
                             }
                         }

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/PartitionColorTransformerPanel.java
Patch:
@@ -233,6 +233,7 @@ public void propertyChange(PropertyChangeEvent evt) {
                         if (partition.getColor(currentValue) == null || !partition.getColor(currentValue).equals(color)) {
                             function.getPartition().setColor(currentValue, (Color) evt.getNewValue());
                         }
+                        PartitionColorTransformerPanel.this.requestFocusInWindow();
                     }
                 }
             });

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -459,7 +459,7 @@ private void refreshAttributeFunctions(boolean graphHasChanged) {
                     if (isPartition(graph, column)) {
                         partition = new AttributePartitionImpl(column, getIndex(false));
                         partitions.put(getId(column), partition);
-                    } else {
+                    } else if (isRanking(graph, column)) {
                         ranking = new AttributeRankingImpl(column, getIndex(localScale));
                         rankings.put(getId(column), ranking);
                     }
@@ -582,7 +582,7 @@ private boolean isRanking(Graph graph, Column column) {
             } else {
                 index = localScale ? graphModel.getEdgeIndex(graph.getView()) : graphModel.getEdgeIndex();
             }
-            if (index.countValues(column) > 0 && !isPartition(graph, column)) {
+            if (index.countValues(column) > 0) {
                 return true;
             }
         }

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/library/FilterBuilderNodeDefaultAction.java
Patch:
@@ -72,7 +72,7 @@ public void actionPerformed(ActionEvent ev) {
         FilterBuilderNode node = (FilterBuilderNode) ev.getSource();
         FilterBuilder builder = node.getBuilder();
         FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
-        Query function = filterController.createQuery(builder.getFilter());
+        Query function = filterController.createQuery(builder);
         filterController.add(function);
     }
 }

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/QueryChildren.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.desktop.filters.query;
 
 import java.awt.datatransfer.Transferable;
@@ -127,7 +127,7 @@ public PasteType getDropType(Transferable t, int action, int index) {
                         @Override
                         public Transferable paste() throws IOException {
                             FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
-                            Query f = filterController.createQuery(fb.getFilter());
+                            Query f = filterController.createQuery(fb);
                             filterController.add(f);
                             return null;
                         }

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/RootNode.java
Patch:
@@ -83,7 +83,7 @@ public PasteType getDropType(Transferable t, int action, int index) {
                     @Override
                     public Transferable paste() throws IOException {
                         FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
-                        Query f = filterController.createQuery(fb.getFilter());
+                        Query f = filterController.createQuery(fb);
                         filterController.add(f);
                         return null;
                     }

File: modules/DesktopFilters/src/main/java/org/gephi/desktop/filters/query/SlotNode.java
Patch:
@@ -110,7 +110,7 @@ public Transferable paste() throws IOException {
                     try {
                         FilterBuilder builder = (FilterBuilder) t.getTransferData(FilterBuilderNode.DATA_FLAVOR);
                         FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
-                        Query query = filterController.createQuery(builder.getFilter());
+                        Query query = filterController.createQuery(builder);
                         filterController.setSubQuery(parent, query);
                     } catch (UnsupportedFlavorException ex) {
                         Exceptions.printStackTrace(ex);

File: modules/FiltersImpl/src/main/java/org/gephi/filters/AbstractQueryImpl.java
Patch:
@@ -150,7 +150,7 @@ public AbstractQueryImpl[] getLeaves() {
     public AbstractQueryImpl copy() {
         AbstractQueryImpl copy = null;
         if (this instanceof FilterQueryImpl) {
-            copy = new FilterQueryImpl(this.getFilter());
+            copy = new FilterQueryImpl(this.getBuilder(), this.getFilter());
         } else if (this instanceof OperatorQueryImpl) {
             copy = new OperatorQueryImpl((Operator) this.getFilter());
         }

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -140,11 +140,12 @@ public void disable() {
     }
 
     @Override
-    public Query createQuery(Filter filter) {
+    public Query createQuery(FilterBuilder builder) {
+        Filter filter = builder.getFilter();
         if (filter instanceof Operator) {
             return new OperatorQueryImpl((Operator) filter);
         }
-        return new FilterQueryImpl(filter);
+        return new FilterQueryImpl(builder, filter);
     }
 
     @Override

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterModelImpl.java
Patch:
@@ -311,7 +311,7 @@ private void destroyQuery(Query query) {
             for (Query q : absQuery.getDescendantsAndSelf()) {
                 if (q instanceof FilterQueryImpl) {
                     Filter f = ((FilterQueryImpl) q).getFilter();
-                    FilterBuilder builder = filterLibraryImpl.getBuilder(f);
+                    FilterBuilder builder = ((FilterQueryImpl) q).getBuilder();
                     if (builder != null) {
                         builder.destroy(f);
                     }

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterModelPersistenceProvider.java
Patch:
@@ -255,9 +255,8 @@ private Query readQuery(XMLStreamReader reader, FilterModelImpl model) throws XM
 
         if (builder != null) {
             //Create filter
-            Filter filter = builder.getFilter();
             FilterController fc = Lookup.getDefault().lookup(FilterController.class);
-            Query query = fc.createQuery(filter);
+            Query query = fc.createQuery(builder);
 
             FilterProperty property = null;
             boolean end = false;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ColumnValuesFrequencyUI.java
Patch:
@@ -49,6 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.GraphModel;
 import org.gephi.ui.components.JFreeChartDialog;
 import org.gephi.ui.components.SimpleHTMLReport;
 import org.jfree.chart.JFreeChart;
@@ -74,7 +75,7 @@ public ColumnValuesFrequencyUI() {
     }
 
     @Override
-    public void setup(AttributeColumnsManipulator m, Table table, Column column, DialogControls dialogControls) {
+    public void setup(AttributeColumnsManipulator m, GraphModel graphModel, Table table, Column column, DialogControls dialogControls) {
         this.table = table;
         this.column = column;
         this.manipulator = (ColumnValuesFrequency) m;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ConvertColumnToDynamicUI.java
Patch:
@@ -41,7 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.plugin.manipulators.columns.ui;
 
-import java.text.ParseException;
 import javax.swing.JPanel;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
@@ -52,11 +51,11 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
 import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.GraphModel;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.gephi.ui.utils.IntervalBoundValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;
-import org.openide.util.Exceptions;
 import org.openide.util.NbBundle;
 import org.openide.util.NbPreferences;
 
@@ -109,7 +108,7 @@ public void stateChanged(ChangeEvent e) {
     }
 
     @Override
-    public void setup(AttributeColumnsManipulator m, Table table, Column column, DialogControls dialogControls) {
+    public void setup(AttributeColumnsManipulator m, GraphModel graphModel, Table table, Column column, DialogControls dialogControls) {
         this.table = table;
         this.dialogControls = dialogControls;
         this.manipulator = (ConvertColumnToDynamic) m;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/CopyDataToOtherColumnUI.java
Patch:
@@ -50,6 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.GraphModel;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 
@@ -71,7 +72,7 @@ public CopyDataToOtherColumnUI() {
     }
 
     @Override
-    public void setup(AttributeColumnsManipulator m, Table table, Column column, DialogControls dialogControls) {
+    public void setup(AttributeColumnsManipulator m, GraphModel graphModel, Table table, Column column, DialogControls dialogControls) {
         this.manipulator = (CopyDataToOtherColumn) m;
 
         sourceColumnLabel.setText(NbBundle.getMessage(CopyDataToOtherColumnUI.class, "CopyDataToOtherColumnUI.sourceColumnLabel.text", column.getTitle()));

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/GeneralCreateColumnFromRegexUI.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulatorUI;
+import org.gephi.graph.api.GraphModel;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;
@@ -117,7 +118,7 @@ public void changedUpdate(DocumentEvent e) {
     }
 
     @Override
-    public void setup(AttributeColumnsManipulator m, Table table, Column column, DialogControls dialogControls) {
+    public void setup(AttributeColumnsManipulator m, GraphModel graphModel, Table table, Column column, DialogControls dialogControls) {
         this.manipulator = (GeneralCreateColumnFromRegex) m;
         this.table = table;
         this.dialogControls = dialogControls;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIVisualPanel1.java
Patch:
@@ -50,7 +50,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.HashSet;
-import java.util.LinkedHashSet;
 import java.util.Set;
 import javax.swing.JFileChooser;
 import javax.swing.JOptionPane;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinWithSeparator.java
Patch:
@@ -61,7 +61,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class JoinWithSeparator implements AttributeColumnsMergeStrategy {
 
     public static final String SEPARATOR_SAVED_PREFERENCES = "JoinWithSeparator_Separator";
-    private static final String DEFAULT_SEPARATOR = ",";
+    private static final String DEFAULT_SEPARATOR = ", ";
     private Table table;
     private Column[] columns;
     private String newColumnTitle, separator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/JoinWithSeparator.java
Patch:
@@ -59,7 +59,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class JoinWithSeparator implements AttributeRowsMergeStrategy {
 
     public static final String SEPARATOR_SAVED_PREFERENCES = "JoinWithSeparator_Separator";
-    private static final String DEFAULT_SEPARATOR = ",";
+    private static final String DEFAULT_SEPARATOR = ", ";
     private Element[] rows;
     private Column column;
     private String separator, result;

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewSketch.java
Patch:
@@ -115,14 +115,14 @@ public void mouseClicked(MouseEvent e) {
     public void mousePressed(MouseEvent e) {
         previewController.sendMouseEvent(buildPreviewMouseEvent(e, PreviewMouseEvent.Type.PRESSED));
         ref.set(e.getX(), e.getY());
-
+        lastMove.set(target.getTranslate());
+        
         refreshLoop.refreshSketch();
     }
 
     @Override
     public void mouseReleased(MouseEvent e) {
         if (!previewController.sendMouseEvent(buildPreviewMouseEvent(e, PreviewMouseEvent.Type.RELEASED))) {
-            lastMove.set(target.getTranslate());
             setMoving(false);
         }
 

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGDF.java
Patch:
@@ -320,7 +320,7 @@ private Column[] attributesNodeColumns(GraphModel graphModel) {
         List<Column> cols = new ArrayList<Column>();
         if (exportAttributes && graphModel != null) {
             for (Column column : graphModel.getNodeTable()) {
-                if (!isNodeDefaultColumn(column.getId())) {
+                if (!column.isProperty() && !isNodeDefaultColumn(column.getId())) {
                     cols.add(column);
                 }
             }
@@ -332,7 +332,7 @@ private Column[] attributesEdgeColumns(GraphModel graphModel) {
         List<Column> cols = new ArrayList<Column>();
         if (exportAttributes && graphModel != null) {
             for (Column column : graphModel.getEdgeTable()) {
-                if (!isEdgeDefaultColumn(column.getId())) {
+                if (!column.isProperty() && !isEdgeDefaultColumn(column.getId())) {
                     cols.add(column);
                 }
             }

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterGML.java
Patch:
@@ -41,6 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.io.exporter.plugin;
 
+import java.awt.Color;
 import java.io.IOException;
 import java.io.Writer;
 import java.util.logging.Level;
@@ -259,8 +260,8 @@ private void printNode(Node node, Graph graph) throws IOException {
                 }
             }
             if (exportColor) {
-                printTag("fill \"#" + Integer.toString((int) (node.r() * 255), 16)
-                        + Integer.toString((int) (node.g() * 255), 16) + Integer.toString((int) (node.b() * 255), 16) + "\"");
+                Color color = node.getColor();
+                printTag("fill \"" + String.format("#%02x%02x%02x", color.getRed(), color.getGreen(), color.getBlue()) + "\"");
             }
             printClose();
         }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/SearchReplaceUI.java
Patch:
@@ -41,11 +41,10 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.plugin.manipulators.general.ui;
 
-import com.sun.glass.events.KeyEvent;
 import java.awt.Color;
+import java.awt.event.KeyEvent;
 import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
-import javafx.scene.input.KeyCode;
 import javax.swing.JOptionPane;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java
Patch:
@@ -291,7 +291,7 @@ private boolean addEdgeAttributes(EdgeDraft edge, String prefix, ArrayList list)
             } else if ("directed".equalsIgnoreCase(key)) {
                 if (value instanceof Double) {
                     EdgeDirection type = ((Double) value) == 1 ? EdgeDirection.DIRECTED : EdgeDirection.UNDIRECTED;
-                    edge.setType(type);
+                    edge.setDirection(type);
                 } else {
                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGML.class, "importerGML_error_directedparse", edge.toString()), Issue.Level.WARNING));
                 }

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditToolTopComponent.java
Patch:
@@ -56,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 autostore = false)
 @TopComponent.Description(preferredID = "EditToolTopComponent",
 persistenceType = TopComponent.PERSISTENCE_ALWAYS)
-@TopComponent.Registration(mode = "rankingmode", openAtStartup = false, roles = {"overview"})
+@TopComponent.Registration(mode = "rankingmode", openAtStartup = false, roles = {"overview", "datalab"})
 @TopComponent.OpenActionRegistration(displayName = "#CTL_EditToolTopComponent",
 preferredID = "EditToolTopComponent")
 public final class EditToolTopComponent extends TopComponent {

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/AttributeColumnsMergeStrategiesControllerImpl.java
Patch:
@@ -100,7 +100,8 @@ public Column joinWithSeparatorMerge(Table table, Column[] columnsToMerge, Class
                     }
                 }
             }
-            row.setAttribute(newColumn, sb.toString());
+            
+            ac.setAttributeValue(sb.toString(), row, newColumn);
         }
 
         return newColumn;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinNumberColumns.java
Patch:
@@ -56,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * AttributeColumnsMergeStrategy that joins one or more number column into a number list column with AttributeType
- * <code>LIST_BIGDECIMAL</code>
+ * <code>double[]</code>
  *
  * @author Eduardo Ramos
  */
@@ -75,7 +75,7 @@ public void setup(Table table, Column[] columns) {
 
     @Override
     public void execute() {
-        Lookup.getDefault().lookup(AttributeColumnsMergeStrategiesController.class).joinWithSeparatorMerge(table, columns, BigDecimal[].class, columnTitle, SEPARATOR);
+        Lookup.getDefault().lookup(AttributeColumnsMergeStrategiesController.class).joinWithSeparatorMerge(table, columns, double[].class, columnTitle, SEPARATOR);
     }
 
     @Override

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/AvailableColumnsModel.java
Patch:
@@ -145,7 +145,6 @@ public synchronized void syncronizeTableColumns() {
         //Note: We need to remove all columns and add them all again because there could be a new column with the same title but different index 
         //if the old one with the same title was removed, and we should not keep the old column with same title.
         for (Column column : table) {
-
             if (availableColumnsCopy.contains(column) || !allKnownColumns.contains(column)) {
                 allKnownColumns.add(column);
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ElementFactoryImpl.java
Patch:
@@ -58,7 +58,7 @@ public ElementFactoryImpl(ImportContainerImpl container) {
 
     @Override
     public NodeDraftImpl newNodeDraft() {
-        NodeDraftImpl node = new NodeDraftImpl(container, "n" + NODE_IDS.getAndIncrement());
+        NodeDraftImpl node = new NodeDraftImpl(container, String.valueOf(NODE_IDS.getAndIncrement()));
         return node;
     }
 
@@ -74,7 +74,7 @@ public NodeDraftImpl newNodeDraft(String id) {
 
     @Override
     public EdgeDraftImpl newEdgeDraft() {
-        EdgeDraftImpl edge = new EdgeDraftImpl(container, "e" + EDGE_IDS.getAndIncrement());
+        EdgeDraftImpl edge = new EdgeDraftImpl(container, String.valueOf(EDGE_IDS.getAndIncrement()));
         return edge;
     }
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -499,13 +499,13 @@ private void refreshAppliedFilter() {
             return;
         }
         if (isShowingNodesTable()) {
-            if (nodeTable.setPattern(filterTextField.getText(), index)) {
+            if (nodeTable.setFilterPattern(filterTextField.getText(), index)) {
                 filterTextField.setBackground(Color.WHITE);
             } else {
                 filterTextField.setBackground(invalidFilterColor);
             }
         } else if (isShowingEdgesTable()) {
-            if (edgeTable.setPattern(filterTextField.getText(), index)) {
+            if (edgeTable.setFilterPattern(filterTextField.getText(), index)) {
                 filterTextField.setBackground(Color.WHITE);
             } else {
                 filterTextField.setBackground(invalidFilterColor);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ContainerUnloader.java
Patch:
@@ -88,6 +88,8 @@ public interface ContainerUnloader {
 
     public Class getEdgeTypeLabelClass();
 
+    public ElementIdType getElementIdType();
+
     //PARAMETERS GETTERS
     public boolean allowSelfLoop();
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -499,13 +499,13 @@ private void refreshAppliedFilter() {
             return;
         }
         if (isShowingNodesTable()) {
-            if (nodeTable.setPattern(filterTextField.getText(), index)) {
+            if (nodeTable.setFilterPattern(filterTextField.getText(), index)) {
                 filterTextField.setBackground(Color.WHITE);
             } else {
                 filterTextField.setBackground(invalidFilterColor);
             }
         } else if (isShowingEdgesTable()) {
-            if (edgeTable.setPattern(filterTextField.getText(), index)) {
+            if (edgeTable.setFilterPattern(filterTextField.getText(), index)) {
                 filterTextField.setBackground(Color.WHITE);
             } else {
                 filterTextField.setBackground(invalidFilterColor);

File: modules/FiltersImpl/src/main/java/org/gephi/filters/FilterAutoRefreshor.java
Patch:
@@ -58,7 +58,7 @@ public class FilterAutoRefreshor extends Thread {
     private boolean running = true;
 
     public FilterAutoRefreshor(FilterModelImpl filterModel, GraphModel graphModel) {
-        super("Filter Auto-Refresh");
+        super("Filter Auto-Refresh - " + filterModel.getWorkspace().toString());
         setDaemon(true);
         this.graphModel = graphModel;
         this.filterModel = filterModel;

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditWindowControllerImpl.java
Patch:
@@ -102,7 +102,7 @@ class IsOpenRunnable implements Runnable {
         @Override
         public void run() {
             EditToolTopComponent topComponent = findInstance();
-            open = topComponent.isOpened();
+            open = topComponent != null && topComponent.isOpened();
         }
     }
 

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/EdgeColumnAllNumbersEditor.java
Patch:
@@ -50,4 +50,4 @@ public class EdgeColumnAllNumbersEditor extends AbstractAttributeColumnPropertyE
     public EdgeColumnAllNumbersEditor() {
         super(EditorClass.EDGE, AttributeTypeClass.ALL_NUMBER);
     }
-}
\ No newline at end of file
+}

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/EdgeColumnNumbersEditor.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.ui.propertyeditor;
 
 /**

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/EdgeColumnStringEditor.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.ui.propertyeditor;
 
 /**

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/NodeColumnAllNumbersEditor.java
Patch:
@@ -50,4 +50,4 @@ public class NodeColumnAllNumbersEditor extends AbstractAttributeColumnPropertyE
     public NodeColumnAllNumbersEditor() {
         super(EditorClass.NODE, AttributeTypeClass.ALL_NUMBER);
     }
-}
\ No newline at end of file
+}

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/NodeColumnDynamicNumbersEditor.java
Patch:
@@ -50,4 +50,4 @@ public class NodeColumnDynamicNumbersEditor extends AbstractAttributeColumnPrope
     public NodeColumnDynamicNumbersEditor() {
         super(EditorClass.NODE, AttributeTypeClass.DYNAMIC_NUMBER);
     }
-}
\ No newline at end of file
+}

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/NodeColumnNumbersEditor.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.ui.propertyeditor;
 
 /**

File: modules/UIPropertyEditor/src/main/java/org/gephi/ui/propertyeditor/NodeColumnStringEditor.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.ui.propertyeditor;
 
 /**

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/AttributeColumnsController.java
Patch:
@@ -452,13 +452,13 @@ public interface AttributeColumnsController {
      * <p>The number of columns must be equal to the number of merge strategies provided</p>
      * <p>No parameters can be null except selectedRow (first row will be used in case selectedRow is null)</p>
      * <p>If any strategy is null, the value of the selectedRow will be used</p>
-     * @param table Table of the rows
-     * @param mergeStrategies Strategies for each column of the table
+     * @param columns Columns to apply a merge strategy in each row
+     * @param mergeStrategies Strategies for each column in {@code columns}
      * @param rows Rows to merge (at least 1)
      * @param selectedRow Main selected row or null (first row will be used in case selectedRow is null)
      * @param resultRow Already existing row to put the values on
      */
-    void mergeRowsValues(Table table, AttributeRowsMergeStrategy[] mergeStrategies, Element[] rows, Element selectedRow, Element resultRow);
+    void mergeRowsValues(Column[] columns, AttributeRowsMergeStrategy[] mergeStrategies, Element[] rows, Element selectedRow, Element resultRow);
     
     /**
      * <p>Finds and returns nodes duplicates based on the values of a given column of nodes table</p>

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -806,8 +806,8 @@ public void importCSVToEdgesTable(File file, Character separator, Charset charse
     }
 
     @Override
-    public void mergeRowsValues(Table table, AttributeRowsMergeStrategy[] mergeStrategies, Element[] rows, Element selectedRow, Element resultRow) {
-        if (table.countColumns() != mergeStrategies.length) {
+    public void mergeRowsValues(Column[] columns, AttributeRowsMergeStrategy[] mergeStrategies, Element[] rows, Element selectedRow, Element resultRow) {
+        if (columns.length != mergeStrategies.length) {
             throw new IllegalArgumentException("The number of columns must be equal to the number of merge strategies provided");
         }
         if (selectedRow == null) {
@@ -818,7 +818,7 @@ public void mergeRowsValues(Table table, AttributeRowsMergeStrategy[] mergeStrat
         Object value;
         
         int i = 0;
-        for (Column column : table) {
+        for (Column column : columns) {
             mergeStrategy = mergeStrategies[i];
             if (mergeStrategy != null) {
                 mergeStrategy.setup(rows, selectedRow, column);

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/AttributeColumnsController.java
Patch:
@@ -306,12 +306,14 @@ public interface AttributeColumnsController {
 
     /**
      * <p>Checks if the given table is nodes table.</p>
+     * @param table Table to check
      * @return True if the table is nodes table, false otherwise
      */
     boolean isNodeTable(Table table);
 
     /**
      * <p>Checks if the given table is edges table.</p>
+     * @param table Table to check
      * @return True if the table is edges table, false otherwise
      */
     boolean isEdgeTable(Table table);

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/GraphElementsControllerImpl.java
Patch:
@@ -68,7 +68,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class GraphElementsControllerImpl implements GraphElementsController {
 
     private static final float DEFAULT_NODE_SIZE = 10f;
-    private static final int DEFAULT_EDGE_TYPE = 1;
+    private static final int DEFAULT_EDGE_TYPE = 0;//0 is graphstore EdgeTypeStore.NULL_LABEL
     private static final float DEFAULT_EDGE_WEIGHT = 1f;
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/AddEdgeToGraph.java
Patch:
@@ -91,7 +91,7 @@ public boolean canExecute() {
     @Override
     public ManipulatorUI getUI() {
         GraphModel currentGraphModel = Lookup.getDefault().lookup(GraphController.class).getGraphModel();
-        if (graphModel != currentGraphModel) {//If graph model has changed since last execution, change default mode for edges to create in UI, else keep this parameter across calls
+        if (graphModel != null && graphModel != currentGraphModel) {//If graph model has changed since last execution, change default mode for edges to create in UI, else keep this parameter across calls
             directed = currentGraphModel.isDirected() || currentGraphModel.isMixed();//Get graph directed state. Set to true if graph is directed or mixed
             graphModel = currentGraphModel;
             source = null;

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -109,7 +109,7 @@ protected void processConfiguration(ContainerUnloader container, Workspace works
         Configuration configuration = new Configuration();
         configuration.setTimeRepresentation(container.getTimeRepresentation());
         if (container.getEdgeTypeLabelClass() != null) {
-            configuration.setEdgeLabelType(container.getEdgeTypeLabelClass());
+//            configuration.setEdgeLabelType(container.getEdgeTypeLabelClass());
         }
         graphController.getGraphModel(workspace).setConfiguration(configuration);
     }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ContainerUnloader.java
Patch:
@@ -86,6 +86,8 @@ public interface ContainerUnloader {
 
     public String getSource();
 
+    public Class getEdgeTypeLabelClass();
+
     //PARAMETERS GETTERS
     public boolean allowSelfLoop();
 

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -106,6 +106,9 @@ protected void processConfiguration(ContainerUnloader container, Workspace works
         GraphController graphController = Lookup.getDefault().lookup(GraphController.class);
         Configuration configuration = new Configuration();
         configuration.setTimeRepresentation(container.getTimeRepresentation());
+        if (container.getEdgeTypeLabelClass() != null) {
+            configuration.setEdgeLabelType(container.getEdgeTypeLabelClass());
+        }
         graphController.getGraphModel(workspace).setConfiguration(configuration);
     }
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -250,6 +250,9 @@ private void activateWorkspace(Workspace workspace){
         Lookup.getDefault().lookup(DataTablesController.class).setDataTablesEventListener(DataTableTopComponent.this);
 
         dataTablesModel = workspace.getLookup().lookup(DataTablesModel.class);
+        if (dataTablesModel == null) {
+            workspace.add(dataTablesModel = new DataTablesModel(workspace));
+        }
         nodeAvailableColumnsModel = dataTablesModel.getNodeAvailableColumnsModel();
         edgeAvailableColumnsModel = dataTablesModel.getEdgeAvailableColumnsModel();
         hideTable();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/contextmenuitems/CopyOrMoveToWorkspaceSubItem.java
Patch:
@@ -43,6 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.Arrays;
 import javax.swing.Icon;
+import org.gephi.datalab.spi.nodes.NodesManipulator;
 import org.gephi.desktop.project.api.ProjectControllerUI;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
@@ -54,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 
-public class CopyOrMoveToWorkspaceSubItem extends BasicItem {
+public class CopyOrMoveToWorkspaceSubItem extends BasicItem implements NodesManipulator {
 
     private final Workspace workspace;
     private final boolean canExecute;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -200,6 +200,7 @@ public boolean isRectangleSelection() {
 
     public void setRectangleSelection(boolean rectangleSelection) {
         vizConfig.setRectangleSelection(rectangleSelection);
+        initSelection();
         configChanged = true;
         lightenAnimationDelta = 0;
         vizConfig.setLightenNonSelected(false);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GLAbstractListener.java
Patch:
@@ -89,7 +89,7 @@ public abstract class GLAbstractListener implements GLEventListener, VizArchitec
     private volatile boolean resizing = false;
     public final float viewField = 30.0f;
     public final float nearDistance = 1.0f;
-    public final float farDistance = 100000f;
+    public final float farDistance = 150000f;
     private double aspectRatio = 0;
     protected float globalScale = 1f;
     protected FloatBuffer projMatrix = Buffers.newDirectFloatBuffer(16);

File: modules/ProjectAPI/src/main/java/org/gephi/project/impl/ProjectControllerImpl.java
Patch:
@@ -157,6 +157,9 @@ public void closeCurrentProject() {
             projects.closeCurrentProject();
 
             fireWorkspaceEvent(EventType.DISABLE, null);
+
+            //Remove
+            projects.removeProject(currentProject);
         }
     }
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -358,6 +358,9 @@ private FileImporterBuilder getMatchingImporter(FileObject fileObject) {
     }
 
     private FileImporterBuilder getMatchingImporter(String extension) {
+        if (extension.startsWith(".")) {
+            extension = extension.substring(1);
+        }
         for (FileImporterBuilder im : fileImporterBuilders) {
             for (FileType ft : im.getFileTypes()) {
                 for (String ext : ft.getExtensions()) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/Installer.java
Patch:
@@ -41,16 +41,15 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization;
 
-import com.jogamp.newt.NewtFactory;
 import com.jogamp.opengl.GLProfile;
 import org.openide.modules.ModuleInstall;
 
 public class Installer extends ModuleInstall {
 
     @Override
     public void restored() {
-        // Workaround for bug jogl 1163
-        NewtFactory.setWindowIcons(null);
+        // Disable JOGL's default icons
+        System.setProperty("newt.window.icons", "null,null");
 
         //Init JOGL, recommended
         GLProfile.initSingleton();

File: modules/DesktopGenerate/src/main/java/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -51,6 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.generator.spi.Generator;
 import org.gephi.io.generator.spi.GeneratorUI;
 import org.gephi.io.importer.api.Container;
+import org.gephi.io.importer.api.ContainerUnloader;
 import org.gephi.io.importer.api.Report;
 import org.gephi.io.processor.plugin.DefaultProcessor;
 import org.gephi.project.api.ProjectController;
@@ -152,7 +153,7 @@ private void finishGenerate(Container container) {
         container.closeLoader();
 
         DefaultProcessor defaultProcessor = new DefaultProcessor();
-        defaultProcessor.setContainer(container.getUnloader());
+        defaultProcessor.setContainers(new ContainerUnloader[] {container.getUnloader()});
         defaultProcessor.setWorkspace(workspace);
         defaultProcessor.process();
     }

File: modules/DesktopProject/src/main/java/org/gephi/desktop/importer/api/ImportControllerUI.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.desktop.importer.api;
 
 import java.io.InputStream;
@@ -57,6 +57,8 @@ public interface ImportControllerUI {
 
     public void importFile(FileObject fileObject);
 
+    public void importFiles(FileObject[] fileObjects);
+
     public void importStream(InputStream stream, String importerName);
 
     public void importFile(Reader reader, String importerName);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportController.java
Patch:
@@ -83,6 +83,8 @@ public interface ImportController {
 
     public void process(Container container, Processor processor, Workspace workspace);
 
+    public void process(Container[] containers, Processor processor, Workspace workspace);
+
     public FileType[] getFileTypes();
 
     public boolean isFileSupported(File file);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -341,6 +341,9 @@ private FileImporterBuilder getMatchingImporter(String extension) {
         for (FileImporterBuilder im : fileImporterBuilders) {
             for (FileType ft : im.getFileTypes()) {
                 for (String ext : ft.getExtensions()) {
+                    if (ext.startsWith(".")) {
+                        ext = ext.substring(1);
+                    }
                     if (ext.equalsIgnoreCase(extension)) {
                         return im;
                     }

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGDF.java
Patch:
@@ -165,6 +165,9 @@ private void importData(LineNumberReader reader) throws Exception {
             //Create Edge
             EdgeDraft edge = container.factory().newEdgeDraft();
 
+            //Default to undirected unless stated
+            edge.setDirection(EdgeDirection.UNDIRECTED);
+
             Matcher m = pattern.matcher(edgeLine);
             int count = 0;
             String id = "";

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -56,6 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Comparator;
 import java.util.Iterator;
 import java.util.List;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.TimeFormat;
 import org.gephi.graph.api.TimeRepresentation;
 import org.gephi.io.importer.api.ColumnDraft;
@@ -440,6 +441,7 @@ public ColumnDraft addNodeColumn(String key, Class typeClass) {
     @Override
     public ColumnDraft addNodeColumn(String key, Class typeClass, boolean dynamic) {
         ColumnDraft column = nodeColumns.get(key);
+        typeClass = AttributeUtils.getStandardizedType(typeClass);
         if (column == null) {
             int index = nodeColumns.size();
             column = new ColumnDraftImpl(key, index, dynamic, typeClass);
@@ -463,6 +465,7 @@ public ColumnDraft addEdgeColumn(String key, Class typeClass) {
     @Override
     public ColumnDraft addEdgeColumn(String key, Class typeClass, boolean dynamic) {
         ColumnDraft column = edgeColumns.get(key);
+        typeClass = AttributeUtils.getStandardizedType(typeClass);
         if (column == null) {
             int index = edgeColumns.size();
             column = new ColumnDraftImpl(key, index, dynamic, typeClass);

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -449,16 +449,19 @@ public void run() {
     private void finishImport(Container container) {
         if (container.verify()) {
             Report report = container.getReport();
+            report.close();
 
             //Report panel
             ReportPanel reportPanel = new ReportPanel();
             reportPanel.setData(report, container);
             DialogDescriptor dd = new DialogDescriptor(reportPanel, NbBundle.getMessage(DesktopImportControllerUI.class, "ReportPanel.title"));
             if (!DialogDisplayer.getDefault().notify(dd).equals(NotifyDescriptor.OK_OPTION)) {
                 reportPanel.destroy();
+                report.clean();
                 return;
             }
             reportPanel.destroy();
+            report.clean();
             final Processor processor = reportPanel.getProcessor();
 
             //Project

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -164,6 +164,7 @@ public Container importFile(Reader reader, FileImporter importer) {
                 if (importer.getReport() != null) {
                     report.append(importer.getReport());
                 }
+                report.close();
                 return container;
             }
         } catch (RuntimeException ex) {
@@ -200,6 +201,7 @@ public Container importDatabase(Database database, DatabaseImporter importer) {
                 if (importer.getReport() != null) {
                     report.append(importer.getReport());
                 }
+                report.close();
                 return container;
             }
         } catch (RuntimeException ex) {
@@ -224,6 +226,7 @@ public Container importSpigot(SpigotImporter importer) {
                 if (importer.getReport() != null) {
                     report.append(importer.getReport());
                 }
+                report.close();
                 return container;
             }
         } catch (RuntimeException ex) {

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterVNA.java
Patch:
@@ -292,9 +292,7 @@ private void addNodeProperties(String[] nodeProperties) {
                         node.setY(Float.parseFloat(nodeProperties[i]));
                         break;
                     case NODE_COLOR:
-                        // Add just shades of red as NetDraw VNA is not specific
-                        // about color.
-                        node.setColor(Integer.parseInt(nodeProperties[i]), 0, 0);
+                        node.setColor(nodeProperties[i]);
                         break;
                     case NODE_SIZE:
                         node.setSize(Float.parseFloat(nodeProperties[i]));

File: modules/DesktopGenerate/src/main/java/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -51,7 +51,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.generator.spi.Generator;
 import org.gephi.io.generator.spi.GeneratorUI;
 import org.gephi.io.importer.api.Container;
-import org.gephi.io.importer.api.ContainerFactory;
 import org.gephi.io.importer.api.Report;
 import org.gephi.io.processor.plugin.DefaultProcessor;
 import org.gephi.project.api.ProjectController;
@@ -107,7 +106,7 @@ public void stateChanged(ChangeEvent e) {
             ui.unsetup();
         }
 
-        final Container container = Lookup.getDefault().lookup(ContainerFactory.class).newContainer();
+        final Container container = Lookup.getDefault().lookup(Container.Factory.class).newContainer();
         container.setSource("" + generator.getName());
         container.setReport(new Report());
         String taskname = NbBundle.getMessage(DesktopGeneratorController.class, "DesktopGeneratorController.taskname", generator.getName());

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/Database.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.database.drivers.SQLDriver;
 
 /**
- * Database description and connexion details.
+ * Database description and connection details.
  *
  * @author Mathieu Bastian
  */

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/EdgeDirectionDefault.java
Patch:
@@ -38,12 +38,14 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.io.importer.api;
 
 /**
+ * Graph level setting that indicates the nature of its edges.
  *
  * @author Mathieu Bastian
+ * @see ContainerLoader
  */
 public enum EdgeDirectionDefault {
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/EdgeWeightMergeStrategy.java
Patch:
@@ -41,6 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.io.importer.api;
 
+/**
+ * Defines the way edge weights are merged.
+ */
 public enum EdgeWeightMergeStrategy {
 
     SUM, AVG, MAX, MIN

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ImportController.java
Patch:
@@ -55,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.project.api.Workspace;
 
 /**
- * Manage and control the import executionf low.
+ * Manage and control the import execution low.
  * <p>
  * This controller is a singleton and can therefore be found in Lookup:
  * <pre>ImportController ic = Lookup.getDefault().lookup(ImportController.class);</pre>

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/PropertiesAssociations.java
Patch:
@@ -61,8 +61,8 @@ public enum EdgeProperties {
         R, G, B, COLOR, WEIGHT, ID, LABEL, ALPHA, SOURCE, TARGET, START, END, START_OPEN, END_OPEN;
     }
     //PropertiesAssociations association
-    private List<PropertyAssociation<NodeProperties>> nodePropertyAssociations = new LinkedList<PropertyAssociation<NodeProperties>>();
-    private List<PropertyAssociation<EdgeProperties>> edgePropertyAssociations = new LinkedList<PropertyAssociation<EdgeProperties>>();
+    private final List<PropertyAssociation<NodeProperties>> nodePropertyAssociations = new LinkedList<PropertyAssociation<NodeProperties>>();
+    private final List<PropertyAssociation<EdgeProperties>> edgePropertyAssociations = new LinkedList<PropertyAssociation<EdgeProperties>>();
 
     public void addEdgePropertyAssociation(EdgeProperties property, String title) {
         PropertyAssociation<EdgeProperties> association = new PropertyAssociation<EdgeProperties>(property, title);

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -209,9 +209,10 @@ protected Color parseColor(StreamTokenizer streamTokenizer) throws Exception {
         } else if (colorTable.containsKey(streamTokenizer.sval)) {
             return colorTable.get(streamTokenizer.sval);
         } else {
-            String[] colors = streamTokenizer.sval.split(" ");
+            String toParse = streamTokenizer.sval.replace(", ", ",");
+            String[] colors = toParse.split(" ");
             if (colors.length != 3) {
-                colors = streamTokenizer.sval.split(",");
+                colors = toParse.split(",");
             }
             if (colors.length != 3) {
                 throw new ParseException();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java
Patch:
@@ -470,7 +470,7 @@ public void centerOnGraph() {
         float newCameraLocation = Math.max(newCameraLocationX, newCameraLocationY);
 
         graphDrawable.cameraLocation[0] = limits.getMinXoctree() + graphWidth / 2;
-        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphWidth / 2;
+        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphHeight / 2;
         graphDrawable.cameraLocation[2] = newCameraLocation;
 
         graphDrawable.cameraTarget[0] = graphDrawable.cameraLocation[0];

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -149,9 +149,7 @@ public void propertyChange(PropertyChangeEvent evt) {
 
     public abstract void initDisplayLists(GL2 gl, GLU glu);
 
-//    public abstract void addObject(int classID, Model obj);
-//    public abstract void removeObject(int classID, Model obj);
-    public abstract void updateObjectsPosition();
+    public abstract void updateLOD();
 
     public abstract boolean updateWorld();
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/screenshot/ScreenshotMaker.java
Patch:
@@ -187,6 +187,7 @@ public void reshape(final GLAutoDrawable drawable, final int x, final int y, fin
             renderer.setGLEventListener(preTileGLEL, null);
 
             vizConfig.setDisableLOD(true);
+            engine.updateLOD();
 
             // Render tiles
             while (!renderer.eot() && !cancel) {
@@ -205,6 +206,7 @@ public boolean run(final GLAutoDrawable drawable) {
             });
 
             vizConfig.setDisableLOD(false);
+            engine.updateLOD();
 
             if (!cancel) {
                 final GLPixelBuffer imageBuffer = renderer.getImageBuffer();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/selection/Cylinder.java
Patch:
@@ -105,9 +105,9 @@ public boolean mouseTest(Vecf distanceFromMouse, NodeModel nodeModel) {
             //Point
             return nodeModel.selectionTest(distanceFromMouse, 0);
         } else if (selectionManager.isMouseSelectionZoomProportionnal()) {
-            return nodeModel.selectionTest(distanceFromMouse, diameter * (float) Math.abs(drawable.getDraggingMarkerX()));
-        } else {
             return nodeModel.selectionTest(distanceFromMouse, diameter);
+        } else {
+            return nodeModel.selectionTest(distanceFromMouse, (float) (diameter / -drawable.getDraggingMarkerX()));
         }
     }
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/FixedSizeMode.java
Patch:
@@ -67,7 +67,7 @@ public float getSizeFactor2d(float sizeFactor, NodeModel model) {
 
     @Override
     public float getSizeFactor3d(float sizeFactor, NodeModel model) {
-        return sizeFactor / drawable.getViewportWidth() * model.getCameraDistance();
+        return sizeFactor / drawable.getViewportWidth() * drawable.getCameraLocation()[2];
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizArchitecture.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization;
 
 /**

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizModelPersistenceProvider.java
Patch:
@@ -81,7 +81,7 @@ public void readXML(XMLStreamReader reader, Workspace workspace) {
             vizModel.readXML(reader, workspace);
         } catch (XMLStreamException ex) {
             throw new RuntimeException(ex);
-        }    
+        }
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/selection/SelectionType.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.api.selection;
 
 /**

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/Engine.java
Patch:
@@ -38,8 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
-
+ */
 package org.gephi.visualization.apiimpl;
 
 /**

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/GraphDrawable.java
Patch:
@@ -44,6 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import com.jogamp.opengl.GL2;
 import com.jogamp.opengl.glu.GLU;
 import java.awt.Component;
+import java.awt.Point;
 import java.nio.FloatBuffer;
 import java.nio.IntBuffer;
 import org.gephi.lib.gleem.linalg.Vec3f;
@@ -94,4 +95,6 @@ public interface GraphDrawable {
     public GraphicalConfiguration getGraphicalConfiguration();
 
     public void destroy();
+
+    public Point getLocationOnScreen();
 }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/GraphIO.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.apiimpl;
 
 import java.awt.event.KeyListener;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/PropertiesBarAddon.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.apiimpl;
 
 import javax.swing.JComponent;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -101,6 +101,7 @@ public class VizConfig {
     public static final String VIZBAR = "VizConfig.showVizVar";
     public static final String CONTEXT_MENU = "VizConfig.contextMenu";
     public static final String TOOLBAR = "VizConfig.toolbar";
+    public static final String PROPERTIESBAR = "VizConfig.propertiesbar";
     public static final String MOUSE_SELECTION_DIAMETER = "VizConfig.mouseSelectionDiameter";
     public static final String MOUSE_SELECTION_ZOOM_PROPORTIONAL = "VizConfig.mouseSelectionZoomProportionnal";
     public static final String MOUSE_SELECTION_WHILE_DRAGGING = "VizConfig.mouseSelectionUpdateWhileDragging";
@@ -151,6 +152,7 @@ public class VizConfig {
     public static final boolean DEFAULT_VIZBAR = true;
     public static final boolean DEFAULT_CONTEXT_MENU = true;
     public static final boolean DEFAULT_TOOLBAR = true;
+    public static final boolean DEFAULT_PROPERTIESBAR = true;
     public static final int DEFAULT_MOUSE_SELECTION_DIAMETER = 1;
     public static final boolean DEFAULT_MOUSE_SELECTION_ZOOM_PROPORTIONAL = false;
     public static final boolean DEFAULT_MOUSE_SELECTION_WHILE_DRAGGING = false;
@@ -212,7 +214,7 @@ public class VizConfig {
     protected boolean showVizVar = NbPreferences.forModule(VizConfig.class).getBoolean(VIZBAR, DEFAULT_VIZBAR);
     protected boolean contextMenu = NbPreferences.forModule(VizConfig.class).getBoolean(CONTEXT_MENU, DEFAULT_CONTEXT_MENU);
     protected boolean toolbar = NbPreferences.forModule(VizConfig.class).getBoolean(TOOLBAR, DEFAULT_TOOLBAR);
-    protected boolean propertiesbar = NbPreferences.forModule(VizConfig.class).getBoolean(HIGHTLIGHT_ANIMATION, DEFAULT_HIGHTLIGHT_ANIMATION);
+    protected boolean propertiesbar = NbPreferences.forModule(VizConfig.class).getBoolean(PROPERTIESBAR, DEFAULT_PROPERTIESBAR);
     protected int mouseSelectionDiameter = NbPreferences.forModule(VizConfig.class).getInt(MOUSE_SELECTION_DIAMETER, DEFAULT_MOUSE_SELECTION_DIAMETER);
     protected boolean mouseSelectionZoomProportionnal = NbPreferences.forModule(VizConfig.class).getBoolean(MOUSE_SELECTION_ZOOM_PROPORTIONAL, DEFAULT_MOUSE_SELECTION_ZOOM_PROPORTIONAL);
     protected boolean mouseSelectionUpdateWhileDragging = NbPreferences.forModule(VizConfig.class).getBoolean(MOUSE_SELECTION_WHILE_DRAGGING, DEFAULT_MOUSE_SELECTION_WHILE_DRAGGING);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizEvent.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.apiimpl;
 
 import java.util.EventObject;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizEventListener.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.apiimpl;
 
 import java.util.EventListener;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizEventManager.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.apiimpl;
 
 import org.gephi.visualization.VizArchitecture;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/contextmenuitems/CopyToWorkspace.java
Patch:
@@ -38,8 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
-
+ */
 package org.gephi.visualization.apiimpl.contextmenuitems;
 
 import org.gephi.visualization.spi.GraphContextMenuItem;
@@ -51,7 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Eduardo
  */
 @ServiceProvider(service = GraphContextMenuItem.class)
-public class CopyToWorkspace extends CopyOrMoveToWorkspace{
+public class CopyToWorkspace extends CopyOrMoveToWorkspace {
 
     @Override
     protected boolean isCopy() {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/contextmenuitems/MoveToWorkspace.java
Patch:
@@ -50,7 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Eduardo
  */
 @ServiceProvider(service = GraphContextMenuItem.class)
-public class MoveToWorkspace extends CopyOrMoveToWorkspace{
+public class MoveToWorkspace extends CopyOrMoveToWorkspace {
 
     @Override
     protected boolean isCopy() {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -103,7 +103,6 @@ public void actionPerformed(ActionEvent e) {
          }
          });
          add(centerOnZeroButton);*/
-
         //Reset colors
         final JColorButton resetColorButton = new JColorButton(color, true, false);
         resetColorButton.setToolTipText(NbBundle.getMessage(ActionsToolbar.class, "ActionsToolbar.resetColors"));

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/SelectionPanel.java
Patch:
@@ -38,8 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
-
+ */
 package org.gephi.visualization.component;
 
 import javax.swing.JPanel;
@@ -51,6 +50,6 @@ Development and Distribution License("CDDL") (collectively, the
 public class SelectionPanel extends JPanel {
 
     public SelectionPanel() {
-        
+
     }
 }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/SelectionToolbar.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.component;
 
 import java.awt.Component;
@@ -65,7 +65,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class SelectionToolbar extends JToolBar {
 
-    private ButtonGroup buttonGroup;
+    private final ButtonGroup buttonGroup;
 
     public SelectionToolbar() {
         initDesign();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/VizBarController.java
Patch:
@@ -333,7 +333,6 @@ public void propertyChange(PropertyChangeEvent evt) {
             });
             components[1] = edgeHasNodeColorButton;
 
-
             //Show labels buttons
             final JToggleButton showLabelsButton = new JToggleButton();
             showLabelsButton.setSelected(vizModel.getTextModel().isShowEdgeLabels());

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/VizToolbar.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.component;
 
 import java.awt.Component;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/VizToolbarGroup.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.component;
 
 import javax.swing.JComponent;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/Modeler.java
Patch:
@@ -45,6 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 import com.jogamp.opengl.glu.GLU;
 import com.jogamp.opengl.glu.GLUquadric;
 import org.gephi.visualization.VizController;
+import org.gephi.visualization.apiimpl.GraphDrawable;
 import org.gephi.visualization.apiimpl.VizConfig;
 import org.gephi.visualization.opengl.CompatibilityEngine;
 
@@ -57,12 +58,14 @@ public abstract class Modeler {
     protected final CompatibilityEngine engine;
     protected final VizController controller;
     protected final VizConfig config;
+    protected final GraphDrawable drawable;
     protected boolean enabled = true;
 
     public Modeler(CompatibilityEngine engine) {
         this.engine = engine;
         this.controller = VizController.getInstance();
         this.config = VizController.getInstance().getVizConfig();
+        this.drawable = controller.getDrawable();
     }
 
     public abstract int initDisplayLists(GL2 gl, GLU glu, GLUquadric quadric, int ptr);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/TextModel.java
Patch:
@@ -23,6 +23,8 @@ public interface TextModel {
 
     public void setTextBounds(Rectangle2D bounds);
 
+    public Rectangle2D getTextBounds();
+
     public String getText();
 
     public float getTextSize();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/GraphicalConfigurationException.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.opengl;
 
 /**

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/options/DefaultOptionsPanelController.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.options;
 
 import java.beans.PropertyChangeListener;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/options/OpenGLOptionsPanelController.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.visualization.options;
 
 import java.beans.PropertyChangeListener;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GraphPanel.java
Patch:
@@ -78,7 +78,6 @@ public GraphPanel() {
 //            }
 //        };
         //gljPanel.setOpaque(false);
-
         graphComponent = gljPanel;
         gljPanel.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
 

File: modules/DesktopTools/src/main/java/org/gephi/desktop/tools/MouseSelectionPopupPanel.java
Patch:
@@ -61,6 +61,7 @@ public MouseSelectionPopupPanel() {
 
         diameterSlider.addChangeListener(new ChangeListener() {
 
+            @Override
             public void stateChanged(ChangeEvent e) {
                 JSlider source = (JSlider) e.getSource();
                 if (!source.getValueIsAdjusting()) {
@@ -71,6 +72,7 @@ public void stateChanged(ChangeEvent e) {
 
         proportionnalZoomCheckbox.addItemListener(new ItemListener() {
 
+            @Override
             public void itemStateChanged(ItemEvent e) {
                 fireChangeEvent(proportionnalZoomCheckbox);
             }

File: modules/DesktopTools/src/main/java/org/gephi/desktop/tools/SelectionBar.java
Patch:
@@ -67,6 +67,7 @@ public SelectionBar() {
         initComponents();
         VizController.getInstance().getSelectionManager().addChangeListener(new ChangeListener() {
 
+            @Override
             public void stateChanged(ChangeEvent e) {
                 refresh();
             }
@@ -97,6 +98,7 @@ public JPopupMenu createPopup() {
         popupPanel.setProportionnalToZoom(manager.isMouseSelectionZoomProportionnal());
         popupPanel.setChangeListener(new ChangeListener() {
 
+            @Override
             public void stateChanged(ChangeEvent e) {
                 SelectionManager manager = VizController.getInstance().getSelectionManager();
                 manager.setMouseSelectionDiameter(popupPanel.getDiameter());
@@ -174,6 +176,7 @@ private void initComponents() {
     public void setEnabled(final boolean enabled) {
         SwingUtilities.invokeLater(new Runnable() {
 
+            @Override
             public void run() {
                 for (Component c : getComponents()) {
                     c.setEnabled(enabled);

File: modules/DesktopTools/src/main/java/org/gephi/desktop/tools/Toolbar.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.desktop.tools;
 
 import java.awt.Component;
@@ -56,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public class Toolbar extends JToolBar {
 
-    private ButtonGroup buttonGroup;
+    private final ButtonGroup buttonGroup;
 
     public Toolbar() {
         initDesign();
@@ -75,6 +75,7 @@ private void initDesign() {
     public void setEnabled(final boolean enabled) {
         SwingUtilities.invokeLater(new Runnable() {
 
+            @Override
             public void run() {
                 for (Component c : getComponents()) {
                     c.setEnabled(enabled);

File: modules/ToolsAPI/src/main/java/org/gephi/tools/spi/NodePressingEventListener.java
Patch:
@@ -38,8 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
-
+ */
 package org.gephi.tools.spi;
 
 import org.gephi.graph.api.Node;
@@ -58,6 +57,7 @@ public interface NodePressingEventListener extends ToolEventListener {
 
     /**
      * Notify <code>nodes</code> are currently pressed.
+     *
      * @param nodes the pressed nodes array
      */
     public void pressingNodes(Node[] nodes);

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/DatabaseImporter.java
Patch:
@@ -53,13 +53,13 @@ Development and Distribution License("CDDL") (collectively, the
 public interface DatabaseImporter extends Importer {
 
     /**
-     * Sets the database description, connexion details and queries
+     * Sets the database description, connection details and queries
      * @param database  the database that is to be used to import
      */
     public void setDatabase(Database database);
 
     /**
-     * Returns the current database description, connexion details and queries
+     * Returns the current database description, connection details and queries
      * @return         the database that is to be used to import
      */
     public Database getDatabase();

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/FileImporter.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.io.importer.spi;
 
 import java.io.Reader;
@@ -52,7 +52,8 @@ public interface FileImporter extends Importer {
 
     /**
      * Sets the reader where characters can be retrieved.
-     * @param reader    the reader on data
+     *
+     * @param reader the reader on data
      */
     public void setReader(Reader reader);
 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/SpigotImporter.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.io.importer.spi;
 
 /**

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/spi/SpigotImporterBuilder.java
Patch:
@@ -38,7 +38,7 @@ Development and Distribution License("CDDL") (collectively, the
 Contributor(s):
 
 Portions Copyrighted 2011 Gephi Consortium.
-*/
+ */
 package org.gephi.io.importer.spi;
 
 /**
@@ -50,7 +50,8 @@ public interface SpigotImporterBuilder extends ImporterBuilder {
 
     /**
      * Builds a new spigot importer instance, ready to be used.
-     * @return  a new spigot importer
+     *
+     * @return a new spigot importer
      */
     @Override
     public SpigotImporter buildImporter();

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewUIControllerImpl.java
Patch:
@@ -102,7 +102,9 @@ public PreviewUIControllerImpl() {
         pc.addWorkspaceListener(new WorkspaceListener() {
             @Override
             public void initialize(Workspace workspace) {
-                workspace.add(new PreviewUIModelImpl());
+                if (workspace.getLookup().lookup(PreviewUIModelImpl.class) == null) {
+                    workspace.add(new PreviewUIModelImpl());
+                }
                 enableRefresh();
             }
 

File: modules/LayoutAPI/src/main/java/org/gephi/layout/LayoutControllerImpl.java
Patch:
@@ -70,7 +70,9 @@ public LayoutControllerImpl() {
 
             @Override
             public void initialize(Workspace workspace) {
-                workspace.add(new LayoutModelImpl());
+                if(workspace.getLookup().lookup(LayoutModelImpl.class) == null) {
+                    workspace.add(new LayoutModelImpl());
+                }
             }
 
             @Override

File: modules/StatisticsAPI/src/main/java/org/gephi/statistics/StatisticsControllerImpl.java
Patch:
@@ -85,7 +85,9 @@ public StatisticsControllerImpl() {
 
             @Override
             public void initialize(Workspace workspace) {
-                workspace.add(new StatisticsModelImpl());
+                if(workspace.getLookup().lookup(StatisticsModelImpl.class) == null) {
+                    workspace.add(new StatisticsModelImpl());
+                }
             }
 
             @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizController.java
Patch:
@@ -140,7 +140,9 @@ public void initInstances() {
         pc.addWorkspaceListener(new WorkspaceListener() {
             @Override
             public void initialize(Workspace workspace) {
-                workspace.add(new VizModel());
+                if(workspace.getLookup().lookup(VizModel.class) == null) {
+                  workspace.add(new VizModel());  
+                }
             }
 
             @Override

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java
Patch:
@@ -315,8 +315,8 @@ private class ColumnObserver extends TimerTask {
 
         public ColumnObserver(Workspace workspace) {
             timer = new Timer("RankingColumnObserver", true);
-            nodeObserver = gc.getGraphModel(workspace).getNodeTable().createTableObserver();
-            edgeObserver = gc.getGraphModel(workspace).getEdgeTable().createTableObserver();
+            nodeObserver = gc.getGraphModel(workspace).getNodeTable().createTableObserver(false);
+            edgeObserver = gc.getGraphModel(workspace).getEdgeTable().createTableObserver(false);
         }
 
         @Override

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -256,8 +256,8 @@ private void activateWorkspace(Workspace workspace){
         enableTableControls();
 
         graphModel = gc.getGraphModel(workspace);
-        nodesTableObserver = gc.getGraphModel(workspace).getNodeTable().createTableObserver();
-        edgesTableObserver = gc.getGraphModel(workspace).getEdgeTable().createTableObserver();
+        nodesTableObserver = gc.getGraphModel(workspace).getNodeTable().createTableObserver(false);
+        edgesTableObserver = gc.getGraphModel(workspace).getEdgeTable().createTableObserver(false);
         graphObserver = graphModel.createGraphObserver(graphModel.getGraph(), false);
 
         refreshAllOnce();

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java
Patch:
@@ -52,14 +52,15 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.GraphModel;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspacePersistenceProvider;
+import org.gephi.project.spi.WorkspaceXMLPersistenceProvider;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Eduardo
  */
 @ServiceProvider(service = WorkspacePersistenceProvider.class, position = 16000)
-public class DataLaboratoryPersistenceProvider implements WorkspacePersistenceProvider {
+public class DataLaboratoryPersistenceProvider implements WorkspaceXMLPersistenceProvider {
 
     private static final String AVAILABLE_COLUMNS = "availablecolumns";
     private static final String NODE_COLUMN = "nodecolumn";

File: modules/LayoutAPI/src/main/java/org/gephi/layout/LayoutModelPersistenceProvider.java
Patch:
@@ -46,14 +46,15 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.xml.stream.XMLStreamWriter;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspacePersistenceProvider;
+import org.gephi.project.spi.WorkspaceXMLPersistenceProvider;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
 @ServiceProvider(service = WorkspacePersistenceProvider.class)
-public class LayoutModelPersistenceProvider implements WorkspacePersistenceProvider {
+public class LayoutModelPersistenceProvider implements WorkspaceXMLPersistenceProvider {
 
     @Override
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PreviewPersistenceProvider.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.preview.api.PreviewController;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspacePersistenceProvider;
+import org.gephi.project.spi.WorkspaceXMLPersistenceProvider;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -55,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Mathieu Bastian
  */
 @ServiceProvider(service = WorkspacePersistenceProvider.class)
-public class PreviewPersistenceProvider implements WorkspacePersistenceProvider {
+public class PreviewPersistenceProvider implements WorkspaceXMLPersistenceProvider {
 
     @Override
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizModelPersistenceProvider.java
Patch:
@@ -46,6 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.xml.stream.XMLStreamWriter;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspacePersistenceProvider;
+import org.gephi.project.spi.WorkspaceXMLPersistenceProvider;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 
@@ -54,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Mathieu Bastian
  */
 @ServiceProvider(service = WorkspacePersistenceProvider.class)
-public class VizModelPersistenceProvider implements WorkspacePersistenceProvider {
+public class VizModelPersistenceProvider implements WorkspaceXMLPersistenceProvider {
 
     @Override
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/utils/SupportedColumnTypeWrapper.java
Patch:
@@ -52,7 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Eduardo Ramos
  */
 public class SupportedColumnTypeWrapper implements Comparable<SupportedColumnTypeWrapper> {
-    private final Class type;
+    private final Class<?> type;
 
     public SupportedColumnTypeWrapper(Class type) {
         this.type = type;
@@ -65,7 +65,7 @@ public String toString() {
         return name;
     }
 
-    public Class getType() {
+    public Class<?> getType() {
         return type;
     }
 
@@ -131,7 +131,7 @@ public int compareTo(SupportedColumnTypeWrapper other) {
     public static List<SupportedColumnTypeWrapper> buildOrderedSupportedTypesList(){
          List<SupportedColumnTypeWrapper> supportedTypesWrappers = new ArrayList<SupportedColumnTypeWrapper>();
         
-        for (Class type : AttributeUtils.getSupportedTypes()) {
+        for (Class<?> type : AttributeUtils.getSupportedTypes()) {
             if(AttributeUtils.isStandardizedType(type)){
                 supportedTypesWrappers.add(new SupportedColumnTypeWrapper(type));
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/MergeNodes.java
Patch:
@@ -83,7 +83,7 @@ public void setup(Node[] nodes, Node clickedNode) {
         selectedNode = clickedNode != null ? clickedNode : nodes[0];
         
         
-        columns = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable().getColumns();
+        columns = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable().toArray();
         mergeStrategies = new AttributeRowsMergeStrategy[columns.length];
         deleteMergedNodes = NbPreferences.forModule(MergeNodes.class).getBoolean(DELETE_MERGED_NODES_SAVED_PREFERENCES, true);
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/FirstQuartileNumber.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.Lookup;
@@ -91,7 +92,7 @@ public String getDescription() {
 
     @Override
     public boolean canExecute() {
-        return org.gephi.attribute.api.AttributeUtils.isNumberType(column.getTypeClass());
+        return AttributeUtils.isNumberType(column.getTypeClass());
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/InterQuartileRangeNumber.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.Lookup;
@@ -99,7 +100,7 @@ public String getDescription() {
 
     @Override
     public boolean canExecute() {
-        return org.gephi.attribute.api.AttributeUtils.isNumberType(column.getTypeClass());
+        return AttributeUtils.isNumberType(column.getTypeClass());
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MedianNumber.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.ImageUtilities;
@@ -92,7 +93,7 @@ public String getDescription() {
 
     @Override
     public boolean canExecute() {
-        return org.gephi.attribute.api.AttributeUtils.isNumberType(column.getTypeClass());
+        return AttributeUtils.isNumberType(column.getTypeClass());
     }
 
     @Override

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SumNumbers.java
Patch:
@@ -47,6 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.graph.api.Element;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.ImageUtilities;
@@ -92,7 +93,7 @@ public String getDescription() {
 
     @Override
     public boolean canExecute() {
-        return org.gephi.attribute.api.AttributeUtils.isNumberType(column.getTypeClass());
+        return AttributeUtils.isNumberType(column.getTypeClass());
     }
 
     @Override

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/FunctionImpl.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.appearance.spi.SimpleTransformer;
 import org.gephi.appearance.spi.Transformer;
 import org.gephi.appearance.spi.TransformerUI;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Element;
 
 /**

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/PartitionImpl.java
Patch:
@@ -45,8 +45,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashMap;
 import java.util.Map;
 import org.gephi.appearance.api.Partition;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Index;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Index;
 
 /**
  *

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/RankingImpl.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import org.gephi.appearance.api.Interpolator;
 import org.gephi.appearance.api.Ranking;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Index;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Index;
 
 /**
  *

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/AttributeFunction.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.appearance.api;
 
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 
 /**
  *

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/Partition.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.appearance.api;
 
 import java.awt.Color;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 
 /**
  *

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/AttributeColumnsController.java
Patch:
@@ -47,12 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.List;
 import java.util.Map;
 import java.util.regex.Pattern;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.Node;
+import org.gephi.graph.api.Table;
 
 /**
  * <p>This interface defines part of the Data Laboratory API basic actions.</p>

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/AttributeColumnsMergeStrategiesController.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.api;
 
 import java.text.SimpleDateFormat;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 
 /**
  * This interface defines part of the Data Laboratory API basic actions.

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/DataLaboratoryHelper.java
Patch:
@@ -53,8 +53,8 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JComponent;
 import javax.swing.JPanel;
 import javax.swing.SwingUtilities;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/SearchReplaceController.java
Patch:
@@ -44,7 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashSet;
 import java.util.Set;
 import java.util.regex.Pattern;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/datatables/AttributeTableCSVExporter.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.nio.charset.Charset;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/datatables/DataTablesController.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.api.datatables;
 
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 
 /**
  * <p>This interface defines part of the Data Laboratory API.</p>

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/DataTablesControllerImpl.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.impl;
 
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.api.datatables.DataTablesEventListener;

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/columns/AttributeColumnsManipulator.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.spi.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 
 /**
  * <p>Manipulation action to use for Data Laboratory column manipulator buttons.</p>

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/columns/AttributeColumnsManipulatorUI.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.spi.columns;
 
 import javax.swing.JPanel;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.spi.DialogControls;
 
 /**

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/columns/merge/AttributeColumnsMergeStrategy.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.spi.columns.merge;
 
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.spi.Manipulator;
 
 /**

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/rows/merge/AttributeRowsMergeStrategy.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.spi.rows.merge;
 
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.graph.api.Element;
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/values/AttributeValueManipulator.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.spi.values;
 
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.graph.api.Element;
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/utils/SupportedColumnTypeWrapper.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
-import org.gephi.attribute.api.AttributeUtils;
+import org.gephi.graph.api.AttributeUtils;
 
 /**
  * Simple wrapper class for column type selection in UI.

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/GeneralColumnsChooser.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.plugin.manipulators;
 
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.nodes.ClearNodesData;
 
 /**

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ClearColumnData.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.Image;
 import javax.swing.JOptionPane;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ColumnValuesFrequency.java
Patch:
@@ -49,8 +49,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.Map;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.ColumnValuesFrequencyUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ConvertColumnToDynamic.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.ConvertColumnToDynamicUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CopyDataToOtherColumn.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.CopyDataToOtherColumnUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CreateBooleanMatchesColumn.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.GeneralCreateColumnFromRegexUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/CreateFoundGroupsListColumn.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.GeneralCreateColumnFromRegexUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/DeleteColumn.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.Image;
 import javax.swing.JOptionPane;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/DuplicateColumn.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.ui.DuplicateColumnUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/FillColumnWithValue.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.awt.Image;
 import javax.swing.JOptionPane;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/NegateBooleanColumn.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/NumberColumnStatisticsReport.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns;
 
 import java.awt.Image;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralNumberListStatisticsReportUI;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/AverageNumber.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/BooleanLogicOperations.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController.BooleanOperations;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.BooleanLogicOperationsUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/CreateTimeInterval.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.text.SimpleDateFormat;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.CreateTimeIntervalUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/FirstQuartileNumber.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/GeneralColumnTitleChooser.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 
 /**
  * Interface that general merge strategies that only need to choose a title for the column to create

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/InterQuartileRangeNumber.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinNumberColumns.java
Patch:
@@ -43,9 +43,9 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinWithSeparator.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.JoinWithSeparatorUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MaximumNumber.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MedianNumber.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MinimumNumber.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/SumNumbers.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ThirdQuartileNumber.java
Patch:
@@ -42,9 +42,9 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.plugin.manipulators.columns.merge.ui.GeneralColumnTitleChooserUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/BooleanLogicOperationsUI.java
Patch:
@@ -46,8 +46,8 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController.BooleanOperations;
 import org.gephi.datalab.plugin.manipulators.columns.merge.BooleanLogicOperations;
 import org.gephi.datalab.spi.DialogControls;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/CreateTimeIntervalUI.java
Patch:
@@ -48,7 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.columns.merge.CreateTimeInterval;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/GeneralColumnTitleChooserUI.java
Patch:
@@ -44,7 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.merge.GeneralColumnTitleChooser;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/JoinWithSeparatorUI.java
Patch:
@@ -44,7 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.merge.JoinWithSeparator;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ColumnValuesFrequencyUI.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.Map;
 import javax.swing.JPanel;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.ColumnValuesFrequency;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ConvertColumnToDynamicUI.java
Patch:
@@ -45,8 +45,8 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.ConvertColumnToDynamic;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/CopyDataToOtherColumnUI.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.JPanel;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.columns.CopyDataToOtherColumn;
 import org.gephi.datalab.spi.DialogControls;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/DuplicateColumnUI.java
Patch:
@@ -45,8 +45,8 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.DuplicateColumn;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/GeneralCreateColumnFromRegexUI.java
Patch:
@@ -47,8 +47,8 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JPanel;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.columns.GeneralCreateColumnFromRegex;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.columns.AttributeColumnsManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/ClearEdgesData.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsChooser;
@@ -69,7 +69,7 @@ public void setup(Edge[] edges, Edge clickedEdge) {
         this.edges = edges;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
         ArrayList<Column> columnsToClearDataList = new ArrayList<Column>();
-        for (Column column : Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getEdgeTable()) {
+        for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getEdgeTable()) {
             if (ac.canClearColumnData(column)) {
                 columnsToClearDataList.add(column);
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/CopyEdgeDataToOtherEdges.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsAndRowChooser;
@@ -73,7 +73,7 @@ public void setup(Edge[] edges, Edge clickedEdge) {
         this.edges = edges;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
         ArrayList<Column> columnsToCopyDataList = new ArrayList<Column>();
-        for (Column column : Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getEdgeTable()) {
+        for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getEdgeTable()) {
             if (ac.canChangeColumnData(column)) {
                 columnsToCopyDataList.add(column);
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/MergeNodeDuplicates.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.List;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.GraphElementsController;
 import org.gephi.datalab.plugin.manipulators.general.ui.MergeNodeDuplicatesUI;
 import org.gephi.datalab.spi.ManipulatorUI;
@@ -103,7 +103,7 @@ public boolean canExecute() {
 
     @Override
     public ManipulatorUI getUI() {
-        Table nodeTable = Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getNodeTable();
+        Table nodeTable = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable();
         int cols = nodeTable.countColumns();
         
         columns = new Column[cols];

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/SearchReplace.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.general;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.general.ui.SearchReplaceUI;
@@ -124,9 +124,9 @@ private Table getCurrentTable() {
             return null;
         }
         if (dtc.isNodeTableMode()) {
-            return Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getNodeTable();
+            return Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable();
         } else {
-            return Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getEdgeTable();
+            return Lookup.getDefault().lookup(GraphController.class).getGraphModel().getEdgeTable();
         }
     }
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIVisualPanel2.java
Patch:
@@ -53,7 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.plugin.manipulators.general.ui.ImportCSVUIWizardAction.Mode;
 import org.gephi.datalab.utils.SupportedColumnTypeWrapper;
 import org.gephi.graph.api.GraphController;
@@ -103,12 +103,12 @@ public void reloadSettings() {
             loadDescription(settingsPanel);
             switch (mode) {
                 case NODES_TABLE:
-                    table = Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getNodeTable();
+                    table = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable();
                     loadColumns(settingsPanel);
                     loadNodesTableSettings(settingsPanel);
                     break;
                 case EDGES_TABLE:
-                    table = Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getEdgeTable();
+                    table = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getEdgeTable();
                     loadColumns(settingsPanel);
                     loadEdgesTableSettings(settingsPanel);
                     break;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/general/ui/MergeNodeDuplicatesUI.java
Patch:
@@ -54,7 +54,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.plugin.manipulators.general.MergeNodeDuplicates;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ClearNodesData.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsChooser;
@@ -69,7 +69,7 @@ public void setup(Node[] nodes, Node clickedNode) {
         this.nodes = nodes;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
         ArrayList<Column> columnsToClearDataList = new ArrayList<Column>();
-        for (Column column : Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getNodeTable()) {
+        for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable()) {
             if (ac.canClearColumnData(column)) {
                 columnsToClearDataList.add(column);
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/CopyNodeDataToOtherNodes.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsAndRowChooser;
@@ -72,7 +72,7 @@ public void setup(Node[] nodes, Node clickedNode) {
         this.nodes = nodes;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
         ArrayList<Column> columnsToCopyDataList = new ArrayList<Column>();
-        for (Column column : Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getNodeTable()) {
+        for (Column column : Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable()) {
             if (ac.canChangeColumnData(column)) {
                 columnsToCopyDataList.add(column);
             }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/MergeNodes.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.nodes;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.GraphElementsController;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.datalab.plugin.manipulators.nodes.ui.MergeNodesUI;
@@ -83,7 +83,7 @@ public void setup(Node[] nodes, Node clickedNode) {
         selectedNode = clickedNode != null ? clickedNode : nodes[0];
         
         
-        columns = Lookup.getDefault().lookup(GraphController.class).getAttributeModel().getNodeTable().getColumns();
+        columns = Lookup.getDefault().lookup(GraphController.class).getGraphModel().getNodeTable().getColumns();
         mergeStrategies = new AttributeRowsMergeStrategy[columns.length];
         deleteMergedNodes = NbPreferences.forModule(MergeNodes.class).getBoolean(DELETE_MERGED_NODES_SAVED_PREFERENCES, true);
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ui/MergeNodesUI.java
Patch:
@@ -54,7 +54,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.plugin.manipulators.nodes.MergeNodes;
 import org.gephi.datalab.spi.DialogControls;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/AverageNumber.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/FirstQuartileNumber.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/InterQuartileRangeNumber.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/JoinWithSeparator.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.rows.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.rows.merge.ui.JoinWithSeparatorUI;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/KeepSelectedRowValue.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.rows.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
 import org.gephi.graph.api.Element;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MaximumNumber.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MedianNumber.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MinimumNumber.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SetNull.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.rows.merge;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;
 import org.gephi.graph.api.Element;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SumNumbers.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/ThirdQuartileNumber.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.rows.merge.AttributeRowsMergeStrategy;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralChooseColumnsAndRowUI.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JCheckBox;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsAndRowChooser;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralChooseColumnsUI.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JCheckBox;
 import javax.swing.JPanel;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.plugin.manipulators.GeneralColumnsChooser;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/ui/GeneralNumberListStatisticsReportUI.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.math.BigDecimal;
 import javax.swing.JPanel;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.spi.DialogControls;
 import org.gephi.datalab.spi.Manipulator;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/ClearAttributeValue.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.values;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.spi.ManipulatorUI;
 import org.gephi.datalab.spi.values.AttributeValueManipulator;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/NumberListStatisticsReport.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.datalab.plugin.manipulators.values;
 
 import javax.swing.Icon;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.plugin.manipulators.ui.GeneralNumberListStatisticsReportUI;
 import org.gephi.datalab.spi.ManipulatorUI;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/AvailableColumnsModel.java
Patch:
@@ -45,8 +45,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 
 /**
  * Class to keep available state (in data laboratory) of the columns of a table of a workspace.

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/AvailableColumnsPanel.java
Patch:
@@ -45,8 +45,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.event.ActionListener;
 import javax.swing.JCheckBox;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.netbeans.validation.api.Problems;
 import org.netbeans.validation.api.Severity;
 import org.netbeans.validation.api.ui.ValidationGroup;
@@ -72,7 +72,7 @@ public AvailableColumnsPanel(Table table, AvailableColumnsModel availableColumns
         initComponents();
         this.table = table;
         this.availableColumnsModel = availableColumnsModel;
-        columns = table.getColumns();
+        columns = table.toArray();
         refreshColumns();
         refreshAvailableColumnsControls();
     }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/AddColumnUI.java
Patch:
@@ -45,11 +45,11 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JButton;
 import javax.swing.event.DocumentEvent;
 import javax.swing.event.DocumentListener;
-import org.gephi.attribute.api.AttributeModel;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.utils.SupportedColumnTypeWrapper;
 import org.gephi.graph.api.GraphController;
+import org.gephi.graph.api.GraphModel;
 import org.gephi.ui.utils.ColumnTitleValidator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;
@@ -109,7 +109,7 @@ public String getDisplayName() {
      * @param mode Mode
      */
     public void setup(Mode mode) {
-        AttributeModel am = Lookup.getDefault().lookup(GraphController.class).getAttributeModel();
+        GraphModel am = Lookup.getDefault().lookup(GraphController.class).getGraphModel();
         //Set description text for the mode of column creation:
         switch (mode) {
             case NODES_TABLE:

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/general/actions/CSVExportUI.java
Patch:
@@ -45,8 +45,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.ArrayList;
 import javax.swing.JCheckBox;
 import net.miginfocom.swing.MigLayout;
-import org.gephi.attribute.api.Column;
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Column;
+import org.gephi.graph.api.Table;
 import org.gephi.datalab.api.datatables.AttributeTableCSVExporter;
 import org.openide.util.NbBundle;
 import org.openide.util.NbPreferences;
@@ -69,7 +69,7 @@ public class CSVExportUI extends javax.swing.JPanel {
      */
     public CSVExportUI(Table table, boolean edgesTable) {
         initComponents();
-        this.columns = table.getColumns();
+        this.columns = table.toArray();
         this.edgesTable = edgesTable;
         separatorComboBox.addItem(new SeparatorWrapper((','), getMessage("CSVExportUI.comma")));
         separatorComboBox.addItem(new SeparatorWrapper((';'), getMessage("CSVExportUI.semicolon")));

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/AbstractElementsDataTable.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.List;
 import java.util.regex.PatternSyntaxException;
 import javax.swing.RowFilter;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.graph.api.Element;
 import org.jdesktop.swingx.JXTable;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/columns/AttributeDataColumn.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.datalab.tables.columns;
 
 import java.util.Arrays;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.graph.api.Element;
 

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/popup/EdgesPopupAdapter.java
Patch:
@@ -8,7 +8,7 @@
 import java.awt.Point;
 import java.util.List;
 import javax.swing.JPopupMenu;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.edges.EdgesManipulator;
 import org.gephi.desktop.datalab.tables.AbstractElementsDataTable;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/tables/popup/NodesPopupAdapter.java
Patch:
@@ -8,7 +8,7 @@
 import java.awt.Point;
 import java.util.List;
 import javax.swing.JPopupMenu;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.nodes.NodesManipulator;
 import org.gephi.desktop.datalab.tables.AbstractElementsDataTable;

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/utils/PopupMenuUtils.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.JMenu;
 import javax.swing.JMenuItem;
 import javax.swing.KeyStroke;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.DataLaboratoryHelper;
 import org.gephi.datalab.spi.ContextMenuItemManipulator;
 import org.gephi.datalab.spi.Manipulator;

File: modules/DynamicAPI/src/main/java/org/gephi/dynamic/utils/DynamicIntervalsParser.java
Patch:
@@ -48,8 +48,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.List;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.time.Interval;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Interval;
 
 /**
  * <p>

File: modules/DynamicAPI/src/main/java/org/gephi/dynamic/utils/IntervalWithValue.java
Patch:
@@ -1,6 +1,7 @@
 package org.gephi.dynamic.utils;
 
-import org.gephi.attribute.time.Interval;
+import org.gephi.graph.api.Interval;
+
 
 /**
  * Represents an Interval with an associated value for it

File: modules/ExportPlugin/src/main/java/org/gephi/io/exporter/plugin/ExporterDL.java
Patch:
@@ -47,7 +47,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashSet;
 import java.util.logging.Level;
 import java.util.logging.Logger;
-import org.gephi.attribute.api.AttributeModel;
 import org.gephi.graph.api.*;
 import org.gephi.io.exporter.spi.CharacterExporter;
 import org.gephi.io.exporter.spi.GraphExporter;
@@ -62,7 +61,6 @@ public class ExporterDL implements GraphExporter, CharacterExporter, LongTask {
     private Workspace workspace;
     private Writer writer;
     private GraphModel graphModel;
-    private AttributeModel attributeModel;
     private boolean cancel = false;
     ProgressTicket progressTicket;
     private boolean useMatrixFormat = false;
@@ -108,7 +106,6 @@ public boolean isExportVisible() {
     public boolean execute() {
         progressTicket.start();
         GraphController graphController = Lookup.getDefault().lookup(GraphController.class);
-        attributeModel = graphController.getAttributeModel(workspace);
         graphModel = graphController.getGraphModel(workspace);
         Graph graph = null;
         if (exportVisible) {

File: modules/GeneratorPlugin/src/main/java/org/gephi/io/generator/plugin/DynamicGraph.java
Patch:
@@ -87,8 +87,8 @@ public void generate(ContainerLoader container) {
         }
 
         if (wiringProbability > 0) {
-//            AttributeColumn oldWeight = container.getAttributeModel().getEdgeTable().getColumn(PropertiesColumn.EDGE_WEIGHT.getIndex());
-//            AttributeColumn weightCol = container.getAttributeModel().getEdgeTable().replaceColumn(oldWeight, PropertiesColumn.EDGE_WEIGHT.getId(), PropertiesColumn.EDGE_WEIGHT.getTitle(), AttributeType.DYNAMIC_FLOAT, AttributeOrigin.PROPERTY, null);
+//            AttributeColumn oldWeight = container.getGraphModel().getEdgeTable().getColumn(PropertiesColumn.EDGE_WEIGHT.getIndex());
+//            AttributeColumn weightCol = container.getGraphModel().getEdgeTable().replaceColumn(oldWeight, PropertiesColumn.EDGE_WEIGHT.getId(), PropertiesColumn.EDGE_WEIGHT.getTitle(), AttributeType.DYNAMIC_FLOAT, AttributeOrigin.PROPERTY, null);
 
             for (int i = 0; i < numberOfNodes - 1; i++) {
                 NodeDraft node1 = nodeArray[i];

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ContainerLoader.java
Patch:
@@ -41,8 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.io.importer.api;
 
-import org.gephi.attribute.api.AttributeModel;
-import org.gephi.attribute.api.TimeFormat;
+import org.gephi.graph.api.TimeFormat;
 import org.gephi.io.importer.spi.Importer;
 
 /**

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/ContainerUnloader.java
Patch:
@@ -41,7 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.io.importer.api;
 
-import org.gephi.attribute.api.TimeFormat;
+
+import org.gephi.graph.api.TimeFormat;
 import org.gephi.io.processor.spi.Processor;
 
 /**

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ColumnDraftImpl.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.io.importer.impl;
 
-import org.gephi.attribute.api.AttributeUtils;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.io.importer.api.ColumnDraft;
 
 /**

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ElementDraftImpl.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 import it.unimi.dsi.fastutil.doubles.Double2ObjectMap;
 import it.unimi.dsi.fastutil.doubles.Double2ObjectOpenHashMap;
 import java.awt.Color;
-import org.gephi.attribute.api.AttributeUtils;
+import org.gephi.graph.api.AttributeUtils;
 import org.gephi.io.importer.api.ColumnDraft;
 import org.gephi.io.importer.api.ElementDraft;
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -56,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Comparator;
 import java.util.Iterator;
 import java.util.List;
-import org.gephi.attribute.api.TimeFormat;
+import org.gephi.graph.api.TimeFormat;
 import org.gephi.io.importer.api.ColumnDraft;
 import org.gephi.io.importer.api.Container;
 import org.gephi.io.importer.api.ContainerLoader;

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/database/ImporterEdgeList.java
Patch:
@@ -50,7 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.sql.Time;
 import java.sql.Timestamp;
 import java.sql.Types;
-import org.gephi.attribute.api.TimeFormat;
+import org.gephi.graph.api.TimeFormat;
 import org.gephi.io.database.drivers.SQLUtils;
 import org.gephi.io.importer.api.ColumnDraft;
 import org.gephi.io.importer.api.ContainerLoader;

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.math.BigInteger;
 import javax.xml.stream.*;
 import javax.xml.stream.events.XMLEvent;
-import org.gephi.attribute.api.TimeFormat;
+import org.gephi.graph.api.TimeFormat;
 import org.gephi.io.importer.api.*;
 import org.gephi.io.importer.spi.FileImporter;
 import org.gephi.utils.longtask.spi.LongTask;
@@ -705,7 +705,7 @@ private void readEdgeAttValue(XMLStreamReader reader, EdgeDraft edge) {
                 edge.parseAndSetValue(column.getId(), value);
             }
 //            //Data attribute value
-//            AttributeColumn column = container.getAttributeModel().getEdgeTable().getColumn(fore);
+//            AttributeColumn column = container.getGraphModel().getEdgeTable().getColumn(fore);
 //            if (column != null) {
 //                if (!startDate.isEmpty() || !endDate.isEmpty()) {
 //                    //Dynamic

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/quadtree/QuadTree.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Set;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphView;
 import org.gephi.graph.api.Node;

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -45,7 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Point;
 import java.util.ArrayList;
 import java.util.LinkedHashMap;
-import org.gephi.attribute.api.AttributeModel;
 import org.gephi.graph.api.*;
 import org.gephi.preview.api.*;
 import org.gephi.preview.spi.*;
@@ -123,7 +122,6 @@ public void refreshPreview() {
     @Override
     public synchronized void refreshPreview(Workspace workspace) {
         GraphModel graphModel = graphController.getGraphModel(workspace);
-        AttributeModel attributeModel = graphController.getAttributeModel(model.getWorkspace());
         PreviewModelImpl previewModel = getModel(workspace);
         previewModel.clear();
 
@@ -169,7 +167,7 @@ public synchronized void refreshPreview(Workspace workspace) {
             //Only build items of this builder if some renderer needs it:
             if (isItemBuilderNeeded(b, previewModel.getProperties(), renderers)) {
                 try {
-                    Item[] items = b.getItems(graph, attributeModel);
+                    Item[] items = b.getItems(graph);
                     if (items != null) {
                         previewModel.loadItems(b.getType(), items);
                     }

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/EdgeBuilder.java
Patch:
@@ -41,7 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.preview.plugin.builders;
 
-import org.gephi.attribute.api.AttributeModel;
 import org.gephi.graph.api.*;
 import org.gephi.preview.api.Item;
 import org.gephi.preview.plugin.items.EdgeItem;
@@ -56,7 +55,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class EdgeBuilder implements ItemBuilder {
 
     @Override
-    public Item[] getItems(Graph graph, AttributeModel attributeModel) {
+    public Item[] getItems(Graph graph) {
 
         EdgeItem[] items = new EdgeItem[graph.getEdgeCount()];
         int i = 0;

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/EdgeLabelBuilder.java
Patch:
@@ -43,8 +43,6 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import java.util.List;
-import org.gephi.attribute.api.AttributeModel;
-import org.gephi.attribute.api.Column;
 import org.gephi.graph.api.*;
 import org.gephi.preview.api.Item;
 import org.gephi.preview.plugin.items.EdgeLabelItem;
@@ -61,7 +59,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class EdgeLabelBuilder implements ItemBuilder {
 
     @Override
-    public Item[] getItems(Graph graph, AttributeModel attributeModel) {
+    public Item[] getItems(Graph graph) {
 
         boolean useTextData = false;
         for (Edge e : graph.getEdges()) {

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/NodeBuilder.java
Patch:
@@ -41,7 +41,6 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.preview.plugin.builders;
 
-import org.gephi.attribute.api.AttributeModel;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
 import org.gephi.preview.api.Item;
@@ -57,7 +56,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class NodeBuilder implements ItemBuilder {
 
     @Override
-    public Item[] getItems(Graph graph, AttributeModel attributeModel) {
+    public Item[] getItems(Graph graph) {
 
         Item[] items = new NodeItem[graph.getNodeCount()];
         int i = 0;

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/builders/NodeLabelBuilder.java
Patch:
@@ -44,8 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.util.ArrayList;
 import java.util.List;
-import org.gephi.attribute.api.AttributeModel;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphView;
 import org.gephi.graph.api.Node;
@@ -65,7 +64,7 @@ Development and Distribution License("CDDL") (collectively, the
 public class NodeLabelBuilder implements ItemBuilder {
 
     @Override
-    public Item[] getItems(Graph graph, AttributeModel attributeModel) {
+    public Item[] getItems(Graph graph) {
 
         boolean useTextData = false;
         for (Node n : graph.getNodes()) {

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/AppendProcessor.java
Patch:
@@ -91,13 +91,12 @@ public void process() {
 
         //Architecture
         GraphController graphController = Lookup.getDefault().lookup(GraphController.class);
-        GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getGraphModel();
+        graphModel = graphController.getGraphModel();
 
         Graph graph = graphModel.getGraph();
         GraphFactory factory = graphModel.factory();
 
         //Attributes - Creates columns for properties
-        attributeModel = graphController.getAttributeModel();
         flushColumns();
 
         //Dynamic

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -84,13 +84,12 @@ public void process() {
 
         //Architecture
         GraphController graphController = Lookup.getDefault().lookup(GraphController.class);
-        GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getGraphModel();
+        graphModel = graphController.getGraphModel();
 
         Graph graph = graphModel.getGraph();;
         GraphFactory factory = graphModel.factory();
 
         //Attributes - Creates columns for properties
-        attributeModel = graphController.getAttributeModel();
         flushColumns();
 
         //Dynamic

File: modules/RankingAPI/src/main/java/org/gephi/ranking/ColumnObserver.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.Timer;
 import java.util.TimerTask;
-import org.gephi.attribute.api.AttributeModel;
+import org.gephi.graph.api.AttributeModel;
 import org.gephi.graph.api.GraphController;
 import org.gephi.ranking.api.RankingEvent;
 import org.openide.util.Lookup;

File: modules/RankingPlugin/src/main/java/org/gephi/ranking/plugin/AttributeRankingBuilder.java
Patch:
@@ -45,9 +45,9 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.Arrays;
 import java.util.Comparator;
 import java.util.List;
-import org.gephi.attribute.api.AttributeModel;
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeModel;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.attribute.time.TimestampValueSet;
 import org.gephi.graph.api.*;
 import org.gephi.ranking.api.Ranking;

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/GraphDensity.java
Patch:
@@ -43,7 +43,6 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.text.DecimalFormat;
 import java.text.NumberFormat;
-import org.gephi.attribute.api.AttributeModel;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
 import org.gephi.graph.api.GraphModel;
@@ -81,7 +80,7 @@ public double getDensity() {
     }
 
     @Override
-    public void execute(GraphModel graphModel, AttributeModel attributeModel) {
+    public void execute(GraphModel graphModel) {
         Graph graph;
         if (isDirected) {
             graph = graphModel.getDirectedGraphVisible();

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbEdges.java
Patch:
@@ -45,11 +45,10 @@ Development and Distribution License("CDDL") (collectively, the
 import java.text.NumberFormat;
 import java.util.HashMap;
 import java.util.Map;
-import org.gephi.attribute.api.AttributeModel;
-import org.gephi.attribute.time.Interval;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.GraphView;
+import org.gephi.graph.api.Interval;
 import org.gephi.statistics.plugin.ChartUtils;
 import org.gephi.statistics.spi.DynamicStatistics;
 import org.jfree.chart.ChartFactory;
@@ -74,7 +73,7 @@ public class DynamicNbEdges implements DynamicStatistics {
     private Map<Double, Integer> counts;
 
     @Override
-    public void execute(GraphModel graphModel, AttributeModel attributeModel) {
+    public void execute(GraphModel graphModel) {
         this.graphModel = graphModel;
         this.counts = new HashMap<Double, Integer>();
     }

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/dynamic/DynamicNbNodes.java
Patch:
@@ -45,11 +45,10 @@ Development and Distribution License("CDDL") (collectively, the
 import java.text.NumberFormat;
 import java.util.HashMap;
 import java.util.Map;
-import org.gephi.attribute.api.AttributeModel;
-import org.gephi.attribute.time.Interval;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.GraphView;
+import org.gephi.graph.api.Interval;
 import org.gephi.statistics.plugin.ChartUtils;
 import org.gephi.statistics.spi.DynamicStatistics;
 import org.jfree.chart.ChartFactory;
@@ -74,7 +73,7 @@ public class DynamicNbNodes implements DynamicStatistics {
     private Map<Double, Integer> counts;
 
     @Override
-    public void execute(GraphModel graphModel, AttributeModel attributeModel) {
+    public void execute(GraphModel graphModel) {
         this.graphModel = graphModel;
         this.counts = new HashMap<Double, Integer>();
     }

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditEdges.java
Patch:
@@ -44,7 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.beans.PropertyEditor;
 import java.beans.PropertyEditorManager;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.dynamic.api.DynamicController;
 import org.gephi.dynamic.api.DynamicModel;

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditNodes.java
Patch:
@@ -44,7 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.beans.PropertyEditor;
 import java.beans.PropertyEditorManager;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.dynamic.api.DynamicController;
 import org.gephi.dynamic.api.DynamicModel;

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/MultipleRowsAttributeValueWrapper.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.ui.tools.plugin.edit;
 
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.dynamic.api.DynamicModel.TimeFormat;
 import org.gephi.graph.api.Element;
 import org.gephi.ui.tools.plugin.edit.EditWindowUtils.AttributeValueWrapper;

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/SingleRowAttributeValueWrapper.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.ui.tools.plugin.edit;
 
-import org.gephi.attribute.api.AttributeUtils;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.AttributeUtils;
+import org.gephi.graph.api.Column;
 import org.gephi.dynamic.api.DynamicModel.TimeFormat;
 import org.gephi.graph.api.Element;
 

File: modules/UIUtils/src/main/java/org/gephi/ui/utils/ColumnTitleValidator.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.ui.utils;
 
-import org.gephi.attribute.api.Table;
+import org.gephi.graph.api.Table;
 import org.netbeans.validation.api.Problems;
 import org.netbeans.validation.api.Validator;
 import org.openide.util.NbBundle;

File: modules/VisualizationAPI/src/main/java/org/gephi/visualization/api/VisualizationController.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.api;
 
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizController.java
Patch:
@@ -41,7 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization;
 
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
 import org.gephi.project.api.ProjectController;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/TextManager.java
Patch:
@@ -48,7 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.beans.PropertyChangeListener;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import org.gephi.attribute.api.Column;
+import org.gephi.graph.api.Column;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Element;
 import org.gephi.graph.api.Node;

File: modules/UIComponents/src/main/java/org/gephi/ui/components/splineeditor/SplineEditor.java
Patch:
@@ -39,7 +39,7 @@ Development and Distribution License("CDDL") (collectively, the
 
  Portions Copyrighted 2011 Gephi Consortium.
  */
-package org.gephi.ui.components.splineEditor;
+package org.gephi.ui.components.splineeditor;
 
 import java.awt.BorderLayout;
 import java.awt.Component;

File: modules/UIComponents/src/main/java/org/gephi/ui/components/SplineEditor/SplineEditor.java
Patch:
@@ -39,7 +39,7 @@ Development and Distribution License("CDDL") (collectively, the
 
  Portions Copyrighted 2011 Gephi Consortium.
  */
-package org.gephi.ui.components.splineeditor;
+package org.gephi.ui.components.SplineEditor;
 
 import java.awt.BorderLayout;
 import java.awt.Component;

File: modules/PreviewAPI/src/main/java/org/gephi/preview/SVGRenderTargetBuilder.java
Patch:
@@ -186,7 +186,7 @@ public String toHexString(Color color) {
     /**
      * Implementation of the size of an export support.
      *
-     * @author Jérémy Subtil <jeremy.subtil@gephi.org>
+     * @author Jérémy Subtil
      */
     public static class SupportSize {
 
@@ -237,7 +237,7 @@ public String getHeight() {
     /**
      * Enum representing a set of lenght units.
      *
-     * @author Jérémy Subtil <jeremy.subtil@gephi.org>
+     * @author Jérémy Subtil
      */
     public enum LengthUnit {
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/api/PreviewProperty.java
Patch:
@@ -151,7 +151,7 @@ public class PreviewProperty {
      */
     public static final String NODE_LABEL_FONT = "node.label.font";
     /**
-     * Node Label <code>Boolean></code> property defining whether to use node's size
+     * Node Label <code>Boolean</code> property defining whether to use node's size
      * in label size calculation.
      */
     public static final String NODE_LABEL_PROPORTIONAL_SIZE = "node.label.proportinalSize";

File: modules/PreviewAPI/src/main/java/org/gephi/preview/api/SVGTarget.java
Patch:
@@ -64,7 +64,7 @@ Development and Distribution License("CDDL") (collectively, the
 public interface SVGTarget extends RenderTarget {
 
     /**
-     * SVG <code>Boolean<code> property whether to rescale stroke's width/thickness.
+     * SVG <code>Boolean</code> property whether to rescale stroke's width/thickness.
      */
     public static final String SCALE_STROKES = "svg.scale.strokes";
     /**

File: modules/PreviewAPI/src/main/java/org/gephi/preview/spi/Renderer.java
Patch:
@@ -126,7 +126,7 @@ public interface Renderer {
      * Render <code>item</code> to <code>target</code> using the global properties
      * and item data.
      * <p>
-     * The target can be one of the default target {@link ProcessingTarget}, 
+     * The target can be one of the default target {@link G2DTarget}, 
      * {@link SVGTarget} or {@link PDFTarget}. Each target contains an access to 
      * it's drawing canvas so the renderer can draw visual items.
      * @param item the item to be rendered

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/PDFExporter.java
Patch:
@@ -69,7 +69,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Class exporting the preview graph as a PDF file.
  *
- * @author Jérémy Subtil <jeremy.subtil@gephi.org>
+ * @author Jérémy Subtil
  * @author Mathieu Bastian
  */
 public class PDFExporter implements ByteExporter, VectorExporter, LongTask {

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/SVGExporter.java
Patch:
@@ -63,7 +63,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Class exporting the preview graph as an SVG image.
  *
- * @author Jérémy Subtil <jeremy.subtil@gephi.org>
+ * @author Jérémy Subtil
  */
 public class SVGExporter implements CharacterExporter, VectorExporter, LongTask {
 

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/util/LengthUnit.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Enum representing a set of lenght units.
  *
- * @author Jérémy Subtil <jeremy.subtil@gephi.org>
+ * @author Jérémy Subtil
  */
 public enum LengthUnit {
 

File: modules/PreviewExport/src/main/java/org/gephi/io/exporter/preview/util/SupportSize.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Implementation of the size of an export support.
  *
- * @author Jérémy Subtil <jeremy.subtil@gephi.org>
+ * @author Jérémy Subtil
  */
 public class SupportSize {
 

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/Xml10FilterReader.java
Patch:
@@ -27,7 +27,8 @@ public Xml10FilterReader(Reader in) {
 
     /**
      * Every overload of {@link Reader#read()} method delegates to this one so
-     * it is enough to override only this one. <br />
+     * it is enough to override only this one.
+     * <p>
      * To skip invalid characters this method shifts only valid chars to left
      * and returns decreased value of the original read method. So after last
      * valid character there will be some unused chars in the buffer.

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JDropDownButton.java
Patch:
@@ -82,7 +82,6 @@ public class JDropDownButton extends JButton {
     public static final String PROP_DROP_DOWN_MENU = "dropDownMenu";
     private PopupMenuListener menuListener;
 
-    /** Creates a new instance of MenuToggleButton */
     public JDropDownButton(Icon icon, JPopupMenu popup) {
         assert null != icon;
 

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JDropDownToggleButton.java
Patch:
@@ -84,7 +84,6 @@ public class JDropDownToggleButton extends JToggleButton {
     public static final String PROP_DROP_DOWN_MENU = "dropDownMenu";
     private PopupMenuListener menuListener;
 
-    /** Creates a new instance of DropDownToggleButton */
     public JDropDownToggleButton(Icon icon, JPopupMenu popup) {
         assert null != icon;
 

File: modules/VisualizationAPI/src/main/java/org/gephi/visualization/spi/GraphContextMenuItem.java
Patch:
@@ -75,7 +75,7 @@ Development and Distribution License("CDDL") (collectively, the
  * To provide a context menu item, a class has to implement this interface and
  * have a
  * <code>@ServiceProvider</code> annotation
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface GraphContextMenuItem {
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/selection/SelectionArea.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.api.selection;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.lib.gleem.linalg.Vecf;
 import org.gephi.visualization.model.node.NodeModel;
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/Scheduler.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.apiimpl;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 
 /**
  *

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -159,7 +159,6 @@ public class VizConfig {
     public static final boolean DEFAULT_DISABLE_LOD = false;
     public static final boolean DEFAULT_SHOW_HULLS = true;
     public static final float DEFAULT_EDGE_SCALE = 2f;
-    public static final float DEFAULT_META_EDGE_SCALE = 2f;
     //Default config - loaded in the VizModel
     protected boolean defaultUse3d = NbPreferences.forModule(VizConfig.class).getBoolean(USE_3D, DEFAULT_USE_3D);
     protected boolean defaultLighting = false;  //Overriden by use3d

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/Model.java
Patch:
@@ -1,7 +1,7 @@
 package org.gephi.visualization.model;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.visualization.VizModel;
 
 /**

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/ModelClass.java
Patch:
@@ -44,8 +44,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.api.initializer.Modeler;
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/Edge2dModel.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.edge;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vec2f;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/Edge3dModel.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.edge;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vec3f;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/EdgeModel.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.visualization.model.edge;
 
 import java.awt.geom.Rectangle2D;
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.ElementProperties;
 import org.gephi.visualization.VizModel;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/EdgeModeler.java
Patch:
@@ -41,9 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.edge;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
-import javax.media.opengl.glu.GLUquadric;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
+import com.jogamp.opengl.glu.GLUquadric;
 import org.gephi.graph.api.Edge;
 import org.gephi.visualization.api.initializer.Modeler;
 import org.gephi.visualization.model.Model;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/SelfLoop2dModel.java
Patch:
@@ -43,8 +43,8 @@ Development and Distribution License("CDDL") (collectively, the
 
 import com.jogamp.common.nio.Buffers;
 import java.nio.FloatBuffer;
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vec3f;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/edge/SelfLoop3dModel.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.edge;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vec3f;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModel.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.node;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vecf;
 import org.gephi.visualization.VizModel;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModeler.java
Patch:
@@ -41,9 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.node;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
-import javax.media.opengl.glu.GLUquadric;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
+import com.jogamp.opengl.glu.GLUquadric;
 import org.gephi.graph.api.Node;
 import org.gephi.visualization.model.Model;
 import org.gephi.visualization.opengl.CompatibilityEngine;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeModel.java
Patch:
@@ -75,7 +75,6 @@ public abstract class NodeModel implements Model, TextModel {
     //Edges
     protected EdgeModel[] edges;
     protected int edgeLength;
-    protected int edgeCount;
 
     public NodeModel(Node node) {
         this.node = node;
@@ -266,7 +265,6 @@ public void addEdge(EdgeModel model) {
         int id = edgeLength++;
         growEdges(id);
         edges[id] = model;
-        edgeCount++;
         if (model.getSourceModel() == this) {
             model.setOctantSourceId(id);
         } else {
@@ -282,7 +280,6 @@ public void removeEdge(EdgeModel model) {
             id = model.getOctantTargetId();
         }
         edges[id] = null;
-        edgeCount--;
     }
 
     public EdgeModel[] getEdges() {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeRectangeModel.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.node;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vecf;
 import org.gephi.visualization.VizController;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeRectangleModeler.java
Patch:
@@ -41,9 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.node;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
-import javax.media.opengl.glu.GLUquadric;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
+import com.jogamp.opengl.glu.GLUquadric;
 import org.gephi.graph.api.Node;
 import org.gephi.visualization.model.Model;
 import org.gephi.visualization.opengl.CompatibilityEngine;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModel.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.node;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.graph.api.Node;
 import org.gephi.lib.gleem.linalg.Vecf;
 import org.gephi.visualization.VizModel;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModeler.java
Patch:
@@ -41,9 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.model.node;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
-import javax.media.opengl.glu.GLUquadric;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
+import com.jogamp.opengl.glu.GLUquadric;
 import org.gephi.graph.api.Node;
 import org.gephi.visualization.model.Model;
 import org.gephi.visualization.opengl.CompatibilityEngine;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/octree/Octant.java
Patch:
@@ -1,8 +1,8 @@
 package org.gephi.visualization.octree;
 
 import com.jogamp.opengl.util.gl2.GLUT;
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.visualization.model.node.NodeModel;
 
 /**

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java
Patch:
@@ -45,9 +45,9 @@ Development and Distribution License("CDDL") (collectively, the
 import java.nio.FloatBuffer;
 import java.util.Arrays;
 import java.util.Iterator;
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
-import javax.media.opengl.glu.GLUquadric;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
+import com.jogamp.opengl.glu.GLUquadric;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.VizModel;
 import org.gephi.visualization.api.initializer.Modeler;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/Lighting.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 import java.util.ArrayList;
 import java.util.List;
-import javax.media.opengl.GL2;
+import com.jogamp.opengl.GL2;
 import org.gephi.ui.utils.PrefsUtils;
 import org.openide.util.NbPreferences;
 

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/screenshot/TileRenderer.java
Patch:
@@ -3,8 +3,8 @@
 import java.awt.Dimension;
 import java.nio.Buffer;
 
-import javax.media.opengl.*;
-import javax.media.opengl.glu.gl2.*;
+import com.jogamp.opengl.*;
+import com.jogamp.opengl.glu.gl2.*;
 
 /**
  * Note: Code copied from JOGL 2.0.2 sources http://jogamp.org/deployment/maven/org/jogamp/jogl/jogl/2.0.2/

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/selection/Cylinder.java
Patch:
@@ -41,8 +41,8 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.visualization.selection;
 
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.lib.gleem.linalg.Vecf;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.VizModel;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/selection/Rectangle.java
Patch:
@@ -42,8 +42,8 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.visualization.selection;
 
 import java.util.Arrays;
-import javax.media.opengl.GL2;
-import javax.media.opengl.glu.GLU;
+import com.jogamp.opengl.GL2;
+import com.jogamp.opengl.glu.GLU;
 import org.gephi.lib.gleem.linalg.Vecf;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.api.selection.SelectionArea;

File: modules/AttributesAPI/src/main/java/org/gephi/data/attributes/type/DynamicParser.java
Patch:
@@ -73,7 +73,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>Gephi will always format intervals in the correct way.</p>
  * 
  * <p>See https://gephi.org/users/supported-graph-formats/spreadsheet for more examples</p>
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public final class DynamicParser {
 

File: modules/AttributesAPI/src/test/java/org/gephi/data/attributes/type/DynamicParserTest.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class DynamicParserTest {
     

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/datatables/DataTablesController.java
Patch:
@@ -41,22 +41,22 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.api.datatables;
 
-import org.gephi.data.attributes.api.AttributeTable;
+import org.gephi.attribute.api.Table;
 
 /**
  * <p>This interface defines part of the Data Laboratory API.</p>
  * <p>It provides methods to control the Data Table UI that shows a table for nodes and edges.</p>
  * <p>This is done by registering the data table ui as a listener of these events that can be requested with this controller.
  * <b>Note that data table ui will not be registered to listen to the events of this controller until it is instanced opening Data Laboratory Group</b></p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface DataTablesController extends DataTablesCommonInterface {
 
     /**
      * Request the tables implementation to show the given table (nodes or edges table)
      * @param table Table to show
      */
-    void selectTable(AttributeTable table);
+    void selectTable(Table table);
 
     /**
      * Register a listener for these requests.

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/api/datatables/DataTablesEventListener.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>This is the interface for a listener of <code>DataTablesController</code> requests.</p>
  * <p><b>Only data table UI should be an implementation of this listener</b></p>
  * @see DataTablesController
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface DataTablesEventListener extends DataTablesCommonInterface {
     

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/ContextMenuItemManipulator.java
Patch:
@@ -48,7 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * <p>This interface defines a common extension for the manipulators that appear as context menu items
  * such as NodesManipulator, EdgesManipulator and GraphContextMenuItem (from Visualization API)</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  * @see NodesManipulator
  */
 public interface ContextMenuItemManipulator extends Manipulator {

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/DialogControls.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>An instance of this interface is passed to any type of manipulator UI, allowing the
  * UIs to enable/disable the dialog controls</p>
  * <p>For now allows to enable/disable the Ok button of the dialog</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface DialogControls {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/Manipulator.java
Patch:
@@ -59,7 +59,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>The only methods that are called before setting up a manipulator (subtypes have special setup methods) with the data are getType and getPosition.
  * This way, the other methods behaviour can depend on the data that has been setup before</p>
  * @see NodesManipulator
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface Manipulator {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/ManipulatorUI.java
Patch:
@@ -48,7 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>Must provide a JPanel, a window name/title and indicate if it is modal.</p>
  * <p>The panel will be shown in a dialog with Ok/Cancel options only.</p>
  * <p>The ok button can be enabled/disabled with the <code>DialogControls</code> instance passed at setup</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface ManipulatorUI {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/columns/merge/AttributeColumnsMergeStrategyBuilder.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>This interface is used for providing AttributeColumnsMergeStrategy instances
  * using the Netbeans Lookup but avoiding the singleton it causes.</p>
  * <p>Each AttributeColumnsMergeStrategy should have a AttributeColumnsMergeStrategyBuilder and publish it with <code>@ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)</code> annotation.</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface AttributeColumnsMergeStrategyBuilder {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/edges/EdgesManipulator.java
Patch:
@@ -49,7 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Manipulator for edges.
  * @see Manipulator
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface EdgesManipulator extends ContextMenuItemManipulator{
     /**

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/edges/EdgesManipulatorBuilder.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
  * using the Netbeans Lookup but avoiding the singleton it causes.</p>
  * <p>Each EdgesManipulator should have a EdgesManipulatorBuilder
  * with <code>@ServiceProvider(service=EdgesManipulatorBuilder.class)</code> annotation to be public.</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface EdgesManipulatorBuilder {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/general/GeneralActionsManipulator.java
Patch:
@@ -49,7 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>They are added as buttons in Data table toolbar.</p>
  * <p>The implementations don't need a builder and can simply be published with <code>@ServiceProvider(service = GeneralActionsManipulator.class)</code> annotation</p>
  * @see Manipulator
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface GeneralActionsManipulator extends Manipulator {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/general/PluginGeneralActionsManipulator.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>This interface defines the same service as GeneralActionsManipulator, with one
  * only change: the actions are shown in a drop down panel as plugins,
  * to tell the difference between normal, basic general actions in data laboratory and plugins.</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface PluginGeneralActionsManipulator extends Manipulator{
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/nodes/NodesManipulator.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
  * It is possible to reuse actions implementations by adding both <code>ServiceProvider</code> annotations.</b></p>
  * Manipulator for nodes.
  * @see Manipulator
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface NodesManipulator extends ContextMenuItemManipulator {
     /**

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/nodes/NodesManipulatorBuilder.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
  * using the Netbeans Lookup but avoiding the singleton it causes.</p>
  * <p>Each NodesManipulator should have a NodesManipulatorBuilder
  * with <code>@ServiceProvider(service=NodesManipulatorBuilder.class)</code> annotation to be public.</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface NodesManipulatorBuilder {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/rows/merge/AttributeRowsMergeStrategyBuilder.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>This interface is used for providing RowsMergeStrategy instances
  * using the Netbeans Lookup but avoiding the singleton it causes.</p>
  * <p>Each RowsMergeStrategy should have a RowsMergeStrategyBuilder and publish it with <code>@ServiceProvider(service=RowsMergeStrategyBuilder.class)</code> annotation.</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface AttributeRowsMergeStrategyBuilder {
 

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/spi/values/AttributeValueManipulatorBuilder.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
  * using the Netbeans Lookup but avoiding the singleton it causes.</p>
  * <p>Each AttributeValueManipulator should have a AttributeValueManipulatorBuilder
  * with <code>@ServiceProvider(service=AttributeValueManipulatorBuilder.class)</code> annotation to be public.</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface AttributeValueManipulatorBuilder {
 

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/GeneralCreateColumnFromRegex.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * General abstract class for AttributeColumnManipulators that create a new column from a regular expression and another column.
  * They need a title for the new column and a pattern (regex).
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public abstract class GeneralCreateColumnFromRegex implements AttributeColumnsManipulator{
     protected String title;

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/AverageNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for AverageNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class AverageNumberBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new AverageNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/BooleanLogicOperationsBuilder.java
Patch:
@@ -48,11 +48,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for BooleanLogicOperations AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class BooleanLogicOperationsBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new BooleanLogicOperations();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/CreateTimeIntervalBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for CreateTimeInterval AttributeColumnsMergeStrategyBuilder.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class CreateTimeIntervalBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new CreateTimeInterval();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/FirstQuartileNumberBuilder.java
Patch:
@@ -48,11 +48,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MedianNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class FirstQuartileNumberBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new FirstQuartileNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/GeneralColumnTitleChooser.java
Patch:
@@ -41,12 +41,12 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.datalab.plugin.manipulators.columns.merge;
 
-import org.gephi.data.attributes.api.AttributeTable;
+import org.gephi.attribute.api.Table;
 
 /**
  * Interface that general merge strategies that only need to choose a title for the column to create
  * should implement in order to be able to use GeneralColumnTitleChooserUI.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface GeneralColumnTitleChooser {
 
@@ -66,5 +66,5 @@ public interface GeneralColumnTitleChooser {
      * Manipulators must provide the table to use in the UI to validate the column title with this method.
      * @return Table for the new column
      */
-    AttributeTable getTable();
+    Table getTable();
 }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/InterQuartileRangeNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MedianNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class InterQuartileRangeNumberBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new InterQuartileRangeNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinNumberColumnsBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for JoinNumberColumns AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class JoinNumberColumnsBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new JoinNumberColumns();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/JoinWithSeparatorBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for JoinWithSeparator AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class JoinWithSeparatorBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new JoinWithSeparator();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MaximumNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MaximumNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class MaximumNumberBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new MaximumNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MedianNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MedianNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class MedianNumberBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new MedianNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/MinimumNumberBuilder.java
Patch:
@@ -48,11 +48,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MinimumNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class MinimumNumberBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new MinimumNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/SumNumbersBuilder.java
Patch:
@@ -48,11 +48,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SumNumbers AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class SumNumbersBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new SumNumbers();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ThirdQuartileNumberBuilder.java
Patch:
@@ -48,11 +48,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MedianNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeColumnsMergeStrategyBuilder.class)
 public class ThirdQuartileNumberBuilder implements AttributeColumnsMergeStrategyBuilder{
 
+    @Override
     public AttributeColumnsMergeStrategy getAttributeColumnsMergeStrategy() {
         return new ThirdQuartileNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/BasicEdgesManipulator.java
Patch:
@@ -50,14 +50,17 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public abstract class BasicEdgesManipulator implements EdgesManipulator{
 
+    @Override
     public boolean isAvailable() {
         return true;
     }
 
+    @Override
     public ContextMenuItemManipulator[] getSubItems() {
         return null;
     }
 
+    @Override
     public Integer getMnemonicKey() {
         return null;
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/ClearEdgesDataBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for ClearEdgesData edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class ClearEdgesDataBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new ClearEdgesData();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/CopyEdgeDataToOtherEdgesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for CopyEdgeDataToOtherEdges edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class CopyEdgeDataToOtherEdgesBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new CopyEdgeDataToOtherEdges();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/DeleteEdgesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for DeleteEdges edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class DeleteEdgesBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new DeleteEdges();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/DeleteEdgesWithNodesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for DeleteEdgesWithNodes edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class DeleteEdgesWithNodesBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new DeleteEdgesWithNodes();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/OpenInEditEdgeWindowBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for OpenInEditEdgeWindow edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class OpenInEditEdgeWindowBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new OpenInEditEdgeWindow();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/SelectNodesOnTableBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SelectNodesOnTable edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class SelectNodesOnTableBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new SelectNodesOnTable();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/SelectSourceOnGraphBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SelectSourceOnGraph edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class SelectSourceOnGraphBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new SelectSourceOnGraph();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/edges/SelectTargetOnGraphBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SelectTargetOnGraph edges manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=EdgesManipulatorBuilder.class)
 public class SelectTargetOnGraphBuilder implements EdgesManipulatorBuilder{
 
+    @Override
     public EdgesManipulator getEdgesManipulator() {
         return new SelectTargetOnGraph();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/BasicNodesManipulator.java
Patch:
@@ -50,14 +50,17 @@ Development and Distribution License("CDDL") (collectively, the
  */
 public abstract class BasicNodesManipulator implements NodesManipulator{
 
+    @Override
     public boolean isAvailable() {
         return true;
     }
 
+    @Override
     public ContextMenuItemManipulator[] getSubItems() {
         return null;
     }
 
+    @Override
     public Integer getMnemonicKey() {
         return null;
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/ClearNodesDataBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for ClearNodesData nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class ClearNodesDataBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new ClearNodesData();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/CopyNodeDataToOtherNodesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for CopyNodeDataToOtherNodes nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class CopyNodeDataToOtherNodesBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new CopyNodeDataToOtherNodes();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/CopyNodesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for CopyNodes nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class CopyNodesBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new CopyNodes();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/DeleteNodesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for DeleteNodes nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class DeleteNodesBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new DeleteNodes();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/FreeBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for Free nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class FreeBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new Free();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/LinkNodesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for LinkNodes nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class LinkNodesBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new LinkNodes();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/MergeNodesBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MergeNodes nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class MergeNodesBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new MergeNodes();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/OpenInEditNodeWindowBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for ClearNodesData nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class OpenInEditNodeWindowBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new OpenInEditNodeWindow();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SelectEdgesOnTableBuilder.java
Patch:
@@ -48,11 +48,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SelectEdgesOnTable nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class SelectEdgesOnTableBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new SelectEdgesOnTable();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SelectNeighboursOnTableBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SelectNeighboursOnTable nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class SelectNeighboursOnTableBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new SelectNeighboursOnTable();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SelectOnGraphBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SelectOnGraph nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class SelectOnGraphBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new SelectOnGraph();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SetNodesSizeBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SetNodesSize nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class SetNodesSizeBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new SetNodesSize();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/nodes/SettleBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for Settle nodes manipulator.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=NodesManipulatorBuilder.class)
 public class SettleBuilder implements NodesManipulatorBuilder{
 
+    @Override
     public NodesManipulator getNodesManipulator() {
         return new Settle();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/AverageNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for AverageNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class AverageNumberBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new AverageNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/FirstQuartileNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for FirstQuartileNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class FirstQuartileNumberBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new FirstQuartileNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/InterQuartileRangeNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for InterQuartileRangeNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class InterQuartileRangeNumberBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new InterQuartileRangeNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/JoinWithSeparatorBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for JoinWithSeparator AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class JoinWithSeparatorBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new JoinWithSeparator();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/KeepSelectedRowValueBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for KeepSelectedRowValue AttributeRowsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class KeepSelectedRowValueBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new KeepSelectedRowValue();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MaximumNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MaximumNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class MaximumNumberBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new MaximumNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MedianNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for AverageNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class MedianNumberBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new MedianNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/MinimumNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for MinimumNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class MinimumNumberBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new MinimumNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SetNullBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SetNull AttributeRowsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class SetNullBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new SetNull();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/SumNumbersBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for SumNumbers AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class SumNumbersBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new SumNumbers();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/rows/merge/ThirdQuartileNumberBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for ThirdQuartileNumber AttributeColumnsMergeStrategy.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeRowsMergeStrategyBuilder.class)
 public class ThirdQuartileNumberBuilder implements AttributeRowsMergeStrategyBuilder {
 
+    @Override
     public AttributeRowsMergeStrategy getAttributeRowsMergeStrategy() {
         return new ThirdQuartileNumber();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/ClearAttributeValueBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for ClearAttributeValue AttributeValueManipulatorBuilder.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeValueManipulatorBuilder.class)
 public class ClearAttributeValueBuilder implements AttributeValueManipulatorBuilder{
 
+    @Override
     public AttributeValueManipulator getAttributeValueManipulator() {
         return new ClearAttributeValue();
     }

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/values/NumberListStatisticsReportBuilder.java
Patch:
@@ -47,11 +47,12 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Builder for NumberListStatisticsReport AttributeValueManipulatorBuilder.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=AttributeValueManipulatorBuilder.class)
 public class NumberListStatisticsReportBuilder implements AttributeValueManipulatorBuilder{
 
+    @Override
     public AttributeValueManipulator getAttributeValueManipulator() {
         return new NumberListStatisticsReport();
     }

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DefaultDataTablesEventListenerBuilder.java
Patch:
@@ -53,6 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 @ServiceProvider(service=DataTablesEventListenerBuilder.class)
 public class DefaultDataTablesEventListenerBuilder implements DataTablesEventListenerBuilder{
 
+    @Override
     public DataTablesEventListener getDataTablesEventListener() {
         return (DataTableTopComponent)WindowManager.getDefault().findTopComponent("DataTableTopComponent");
     }

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/RendererManager.java
Patch:
@@ -71,7 +71,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * UI for managing preview renderers enabled state and execution order.
  *
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class RendererManager extends javax.swing.JPanel implements PropertyChangeListener {
 

File: modules/DesktopStatistics/src/main/java/org/gephi/desktop/statistics/DynamicSettingsPanel.java
Patch:
@@ -53,7 +53,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.attribute.api.AttributeModel;
 import org.gephi.attribute.api.TimeFormat;
 import org.gephi.attribute.time.Interval;
-import org.gephi.dynamic.DynamicUtilities;
 import org.gephi.dynamic.api.DynamicController;
 import org.gephi.dynamic.api.DynamicModel;
 import org.gephi.graph.api.GraphController;

File: modules/PreviewAPI/src/main/java/org/gephi/preview/PreviewWorkspaceDuplicateProvider.java
Patch:
@@ -52,7 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service=WorkspaceDuplicateProvider.class)
 public class PreviewWorkspaceDuplicateProvider implements WorkspaceDuplicateProvider{

File: modules/PreviewAPI/src/main/java/org/gephi/preview/api/ManagedRenderer.java
Patch:
@@ -49,7 +49,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <code>PreviewModel</code>.
  *
  * @see PreviewModel
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class ManagedRenderer {
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/api/PreviewMouseEvent.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>Mouse event for preview. Contains the event type and graph coordinates for the event.
  * If you attend a <code>PreviewMouseEvent</code>, it should be marked as consumed.</p>
  * <p>The public keyEvent field contains the keyboard state for the given mouse event. Can be null.</p>
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class PreviewMouseEvent {
 

File: modules/PreviewAPI/src/main/java/org/gephi/preview/spi/MouseResponsiveRenderer.java
Patch:
@@ -44,7 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * <b>Optionally</b> implement this interface in a <code>Renderer</code> that needs to be responsive to mouse events.
  * Only renderers that implement this interface will be drawn while mouse events are being attended (such as dragging).
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface MouseResponsiveRenderer {
     public boolean needsPreviewMouseListener(PreviewMouseListener previewMouseListener);

File: modules/PreviewAPI/src/main/java/org/gephi/preview/spi/PreviewMouseListener.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
  * 
  * <p>In order to enable a <code>PreviewMouseListener</code>, annotate it with <code>ServiceProvider</code> annotation and implement <code>MouseResponsiveRenderer</code> 
  * in a <code>Renderer</code> and return true for the listener in the <code>needsPreviewMouseListener</code> method.</p>
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface PreviewMouseListener {
     

File: modules/ToolsAPI/src/main/java/org/gephi/tools/api/EditWindowController.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Controller API for requesting the opening and usage of edit window.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface  EditWindowController {
     void openEditWindow();

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditWindowControllerImpl.java
Patch:
@@ -53,7 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Implementation of EditWindowController interface of Tools API.
  *
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 @ServiceProvider(service = EditWindowController.class)
 public class EditWindowControllerImpl implements EditWindowController {

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/EditWindowUtils.java
Patch:
@@ -46,7 +46,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class EditWindowUtils {
 

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/MultipleRowsAttributeValueWrapper.java
Patch:
@@ -50,7 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class MultipleRowsAttributeValueWrapper implements AttributeValueWrapper {
 

File: modules/ToolsPlugin/src/main/java/org/gephi/ui/tools/plugin/edit/SingleRowAttributeValueWrapper.java
Patch:
@@ -50,7 +50,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  *
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class SingleRowAttributeValueWrapper implements EditWindowUtils.AttributeValueWrapper {
 

File: modules/UIComponents/src/main/java/org/gephi/ui/components/JFreeChartDialog.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * UI for showing a JFreeChart with the advantages of ChartPanel and also allows to resize the chart up to a maximum dimension.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class JFreeChartDialog extends javax.swing.JDialog {
 

File: modules/UIUtils/src/main/java/org/gephi/ui/utils/ChartsUtils.java
Patch:
@@ -75,7 +75,7 @@ Development and Distribution License("CDDL") (collectively, the
 /**
  * Utils class to build and change charts.
  * Scatter plots implemented to be able to draw or not lines and linear regression.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class ChartsUtils {
 

File: modules/UIUtils/src/main/java/org/gephi/ui/utils/ColumnTitleValidator.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
  * a
  * <code>AttributeTable</code>.
  *
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class ColumnTitleValidator implements Validator<String> {
 

File: modules/Utils/src/main/java/org/gephi/utils/HTMLEscape.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Class for escaping html of a String to show it in a hrml report without problems
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class HTMLEscape {
 

File: modules/Utils/src/main/java/org/gephi/utils/Serialization.java
Patch:
@@ -47,7 +47,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Class for serialization utils such as writing any object value to a String and retrieving it by String + class name.
- * @author Eduardo Ramos<eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class Serialization {
     

File: modules/Utils/src/main/java/org/gephi/utils/StatisticsUtils.java
Patch:
@@ -48,7 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 /**
  * Class with some statistics methods for calculating values such as the average, median, sum, max and min of a list of numbers.
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class StatisticsUtils {
 

File: modules/Utils/src/main/java/org/gephi/utils/TimeIntervalGraphics.java
Patch:
@@ -51,7 +51,7 @@ Development and Distribution License("CDDL") (collectively, the
  *
  * <p>|{background color}|time-interval{fill color}|{background color}|</p>
  *
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class TimeIntervalGraphics {
 

File: modules/Utils/src/main/java/org/gephi/utils/sparklines/SparklineComponent.java
Patch:
@@ -52,7 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>Simple component that holds a <code>SparklineGraph</code> and auto-repaints it when mouse interaction happens if desired
  * (indicate it with <code>updateMouseXPosition</code> parameter in constructors).</p>
  * <p>It also takes care to update sparkline width and height to the component width and height when resized</p>
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class SparklineComponent extends JComponent {
 

File: modules/Utils/src/main/java/org/gephi/utils/sparklines/SparklineGraph.java
Patch:
@@ -54,7 +54,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <p>Use <code>SparklineComponent</code> class to easily include interactive sparklines in your GUI</p>
  *
  * @see SparklineParameters
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class SparklineGraph {
 

File: modules/Utils/src/main/java/org/gephi/utils/sparklines/SparklineParameters.java
Patch:
@@ -57,7 +57,7 @@ Development and Distribution License("CDDL") (collectively, the
  * </ul>
  * Several constructors are provided for various use cases.
  * @see SparklineGraph
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public class SparklineParameters {
 

File: modules/VisualizationAPI/src/main/java/org/gephi/visualization/spi/GraphContextMenuItem.java
Patch:
@@ -75,7 +75,7 @@ Development and Distribution License("CDDL") (collectively, the
  * To provide a context menu item, a class has to implement this interface and
  * have a
  * <code>@ServiceProvider</code> annotation
- * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @author Eduardo Ramos
  */
 public interface GraphContextMenuItem {
 

File: modules/DesktopProject/src/main/java/org/gephi/desktop/project/api/ProjectControllerUI.java
Patch:
@@ -73,8 +73,6 @@ public interface ProjectControllerUI {
 
     public void closeProject();
 
-    public void cleanWorkspace();
-
     public void renameWorkspace(final String name);
 
     public boolean canNewProject();
@@ -93,7 +91,7 @@ public interface ProjectControllerUI {
 
     public boolean canDeleteWorkspace();
 
-    public boolean canCleanWorkspace();
+    public boolean canRenameWorkspace();
 
     public boolean canProjectProperties();
 }

File: modules/DataLaboratoryAPI/src/main/java/org/gephi/datalab/impl/AttributeColumnsMergeStrategiesControllerImpl.java
Patch:
@@ -53,10 +53,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.datalab.api.AttributeColumnsMergeStrategiesController;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.graph.api.Element;
-import org.gephi.graph.api.Graph;
-import org.gephi.graph.api.GraphController;
 import org.gephi.graph.store.GraphStoreConfiguration;
-import org.gephi.graph.store.TimestampMap;
 import org.gephi.utils.StatisticsUtils;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java
Patch:
@@ -316,8 +316,8 @@ private class ColumnObserver extends TimerTask {
 
         public ColumnObserver(Workspace workspace) {
             timer = new Timer("RankingColumnObserver", true);
-            nodeObserver = gc.getAttributeModel(workspace).getNodeTable().newTableObserver();
-            edgeObserver = gc.getAttributeModel(workspace).getEdgeTable().newTableObserver();
+            nodeObserver = gc.getAttributeModel(workspace).getNodeTable().createTableObserver();
+            edgeObserver = gc.getAttributeModel(workspace).getEdgeTable().createTableObserver();
         }
 
         @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/config/GraphicalConfiguration.java
Patch:
@@ -98,7 +98,7 @@ public void checkGeneralCompatibility(GL2 gl) {
 
             //Pbuffer
 
-            pBufferSupport = GLDrawableFactory.getDesktopFactory().canCreateGLPbuffer(device);
+            pBufferSupport = GLDrawableFactory.getDesktopFactory().canCreateGLPbuffer(device, profile);
 
         } catch (final GraphicalConfigurationException exc) {
             messageDelivered = true;

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/api/Function.java
Patch:
@@ -43,13 +43,16 @@ Development and Distribution License("CDDL") (collectively, the
 
 import org.gephi.appearance.spi.Transformer;
 import org.gephi.appearance.spi.TransformerUI;
+import org.gephi.graph.api.Element;
 
 /**
  *
  * @author mbastian
  */
 public interface Function {
 
+    public void transform(Element element);
+
     public Transformer getTransformer();
 
     public TransformerUI getUI();

File: modules/AppearancePlugin/src/main/java/org/gephi/appearance/plugin/PartitionElementColorTransformer.java
Patch:
@@ -58,6 +58,9 @@ public class PartitionElementColorTransformer implements PartitionTransformer<El
     @Override
     public void transform(Element element, Partition partition, Object value) {
         Color color = partition.getColor(value);
+        if (color == null) {
+            color = Color.BLACK;
+        }
         element.setColor(color);
     }
 

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterVNA.java
Patch:
@@ -268,7 +268,7 @@ private void addNode(String[] nodeData) {
             node = container.getNode(id);
         }
         for (int i = 1; i < nodeDataColumns.length; i++) {
-            node.setValue(nodeDataColumns[i].getId(), nodeData[i]);
+            node.parseAndSetValue(nodeDataColumns[i].getId(), nodeData[i]);
         }
     }
 
@@ -340,7 +340,7 @@ private void addEdge(String[] edgeData) {
                         edge.setWeight(weight);
                         break;
                     case OTHER:
-                        edge.setValue(tieDataColumns[i].getId(), edgeData[i]);
+                        edge.parseAndSetValue(tieDataColumns[i].getId(), edgeData[i]);
                         break;
                 }
             }

File: modules/AppearanceAPI/src/main/java/org/gephi/appearance/AppearanceModelImpl.java
Patch:
@@ -149,7 +149,7 @@ private void refreshFunctions() {
             if (edgeFunctions != null) {
                 for (Function f : edgeFunctions) {
                     if (f.isAttribute()) {
-                        attributeEdgeFunctions.add(((AttributeFunction) f).getColumn());;
+                        attributeEdgeFunctions.add(((AttributeFunction) f).getColumn());
                     }
                 }
             }
@@ -187,7 +187,7 @@ private void refreshFunctions() {
                         }
                     }
                     if (transformer.isEdge()) {
-                        for (Column col : attributeModel.getNodeTable()) {
+                        for (Column col : attributeModel.getEdgeTable()) {
                             if (!col.isProperty() && col.isNumber()) {
                                 Index index = localScale ? graphModel.getEdgeIndex(graphModel.getVisibleView()) : graphModel.getEdgeIndex();
                                 if (transformer instanceof RankingTransformer && isRanking(col) && !attributeEdgeFunctions.contains(col)) {

File: modules/AppearancePluginUI/src/main/java/org/gephi/ui/appearance/plugin/UniqueElementColorTransformerUI.java
Patch:
@@ -42,7 +42,6 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.ui.appearance.plugin;
 
 import javax.swing.Icon;
-import javax.swing.ImageIcon;
 import javax.swing.JPanel;
 import org.gephi.appearance.api.Function;
 import org.gephi.appearance.api.SimpleFunction;
@@ -80,7 +79,7 @@ public String getDescription() {
 
     @Override
     public Icon getIcon() {
-        return new ImageIcon("resources/color.png");
+        return null;
     }
 
     @Override

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceToolbar.java
Patch:
@@ -359,7 +359,6 @@ public void actionPerformed(ActionEvent e) {
                             buttonGroup.add(btn);
                             add(btn);
                         }
-
                         buttonGroups.add(buttonGroup);
                     }
                 }

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceTopComponent.java
Patch:
@@ -101,6 +101,7 @@ public AppearanceTopComponent() {
         initSouth();
         if (UIUtils.isAquaLookAndFeel()) {
             mainPanel.setBackground(UIManager.getColor("NbExplorerView.background"));
+            centerPanel.setBackground(UIManager.getColor("NbExplorerView.background"));
         }
 
         refreshModel(model);
@@ -201,6 +202,7 @@ public void run() {
                         }
 
                         if (transformerPanel != null) {
+                            transformerPanel.setOpaque(false);
                             centerPanel.add(transformerPanel, BorderLayout.CENTER);
                         }
 

File: modules/DesktopAppearance/src/main/java/org/gephi/desktop/appearance/AppearanceUIController.java
Patch:
@@ -222,7 +222,7 @@ public void setSelectedTransformerUI(TransformerUI ui) {
     public void setSelectedFunction(Function function) {
         if (model != null) {
             Function oldValue = model.getSelectedFunction();
-            if ((oldValue == null && function != null) || (oldValue != null && function == null) || !oldValue.equals(function)) {
+            if ((oldValue == null && function != null) || (oldValue != null && function == null) || (function != null && oldValue != null && !oldValue.equals(function))) {
                 model.setSelectedFunction(function);
                 firePropertyChangeEvent(AppearanceUIModelEvent.SELECTED_FUNCTION, oldValue, function);
             }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ElementDraftImpl.java
Patch:
@@ -213,7 +213,7 @@ public void setValue(String key, Object value, double timestamp) {
 
     @Override
     public void parseAndSetValue(String key, String value) {
-        ColumnDraft column = getColumn(key, value.getClass());
+        ColumnDraft column = getColumn(key);
         Object val = AttributeUtils.parse(value, column.getTypeClass());
         setAttributeValue(((ColumnDraftImpl) column).getIndex(), val);
     }
@@ -225,7 +225,7 @@ public void parseAndSetValue(String key, String value, String dateTime) {
 
     @Override
     public void parseAndSetValue(String key, String value, double timestamp) {
-        ColumnDraft column = getColumn(key, value.getClass());
+        ColumnDraft column = getColumn(key);
         Object val = AttributeUtils.parse(value, column.getTypeClass());
         setAttributeValue(((ColumnDraftImpl) column).getIndex(), val, timestamp);
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/bridge/DataBridge.java
Patch:
@@ -181,8 +181,8 @@ public synchronized void reset() {
             observer.destroy();
             observer = null;
         }
-        nodes = new NodeModel[0];
-        edges = new EdgeModel[0];
+        nodes = new NodeModel[10];
+        edges = new EdgeModel[10];
         if (graphModel != null) {
             observer = graphModel.getGraphObserver(graph, false);
         }
@@ -207,7 +207,7 @@ private void growEdges(final int index) {
         if (edges == null) {
             edges = new EdgeModel[10];
         } else if (index >= edges.length) {
-            final int newLength = (int) Math.min(Math.max((ONEOVERPHI * nodes.length) >>> 16, index + 1), Integer.MAX_VALUE);
+            final int newLength = (int) Math.min(Math.max((ONEOVERPHI * edges.length) >>> 16, index + 1), Integer.MAX_VALUE);
             final EdgeModel t[] = new EdgeModel[newLength];
             System.arraycopy(edges, 0, t, 0, edges.length);
             edges = t;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java
Patch:
@@ -197,7 +197,7 @@ public void display(GL2 gl, GLU glu) {
         markTime++;
 
         //Arrows
-        if (vizConfig.isShowArrows() && dataBridge.isDirected()) {
+        if (edgeClass.isEnabled() && vizConfig.isShowArrows() && dataBridge.isDirected()) {
             gl.glBegin(GL2.GL_TRIANGLES);
             for (Iterator<EdgeModel> itr = octree.getEdgeIterator(); itr.hasNext();) {
                 EdgeModel obj = itr.next();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/VizController.java
Patch:
@@ -122,7 +122,8 @@ public void initInstances() {
         if (vizConfig.isUseGLJPanel()) {
             drawable = commander.createPanel();
         } else {
-            drawable = commander.createCanvas();
+//            drawable = commander.createCanvas();
+            drawable = commander.createNewtCanvas();
         }
         drawable.initArchitecture();
         engine.initArchitecture();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/GraphTopComponent.java
Patch:
@@ -315,6 +315,7 @@ protected void componentDeactivated() {
 
     @Override
     public void componentClosed() {
+        engine.stopDisplay();
     }
 
     void writeProperties(java.util.Properties p) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GraphDrawableImpl.java
Patch:
@@ -181,7 +181,6 @@ public void setCameraPosition(GL2 gl, GLU glu) {
     @Override
     protected void reshape3DScene(GL2 gl) {
         setCameraPosition(gl, glu);
-        graphComponent.invalidate();    //Force canvas to be laid out with the proper size
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/NewtGraphCanvas.java
Patch:
@@ -63,6 +63,8 @@ public NewtGraphCanvas() {
         super();
         GLWindow glWindow1 = GLWindow.create(getCaps());
         glCanvas = new NewtCanvasAWT(glWindow1);
+        glCanvas.setFocusable(true);
+        glCanvas.setIgnoreRepaint(true);
 
         super.initDrawable(glWindow1);
 //        glCanvas.setMinimumSize(new Dimension(0, 0));   //Fix Canvas resize Issue

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/LoadTask.java
Patch:
@@ -45,7 +45,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.io.File;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.nio.charset.Charset;
 import java.util.Enumeration;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -93,7 +92,7 @@ public void run() {
             ProjectImpl project = null;
             ZipFile zip = null;
             try {
-                zip = new ZipFile(file, Charset.forName("UTF-8"));
+                zip = new ZipFile(file);
 
                 //Reader
                 gephiReader = new GephiReader();

File: modules/ProjectAPI/src/main/java/org/gephi/project/io/SaveTask.java
Patch:
@@ -47,7 +47,6 @@ Development and Distribution License("CDDL") (collectively, the
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
-import java.nio.charset.Charset;
 import java.util.Map;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipOutputStream;
@@ -102,7 +101,7 @@ public void run() {
                 //Stream
                 int zipLevel = NbPreferences.forModule(SaveTask.class).getInt(ZIP_LEVEL_PREFERENCE, 9);
                 outputStream = new FileOutputStream(writeFile);
-                zipOut = new ZipOutputStream(outputStream, Charset.forName("UTF-8"));
+                zipOut = new ZipOutputStream(outputStream);
                 zipOut.setLevel(zipLevel);
                 bos = new BufferedOutputStream(zipOut);
                 dos = new DataOutputStream(bos);

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/NodeRenderer.java
Patch:
@@ -107,6 +107,7 @@ public void renderG2D(Item item, G2DTarget target, PreviewProperties properties)
         if (borderSize > 0) {
             graphics.setColor(new Color(borderColor.getRed(), borderColor.getGreen(), borderColor.getBlue(), alpha));
             graphics.setStroke(new BasicStroke(borderSize));
+            graphics.draw(ellipse);
         }
 
         graphics.setColor(new Color(color.getRed(), color.getGreen(), color.getBlue(), alpha));

File: modules/DesktopPreview/src/main/java/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -54,9 +54,9 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.swing.UIManager;
 import org.gephi.desktop.preview.api.PreviewUIController;
 import org.gephi.desktop.preview.api.PreviewUIModel;
+import org.gephi.preview.api.G2DTarget;
 import org.gephi.preview.api.PreviewController;
 import org.gephi.preview.api.PreviewProperty;
-import org.gephi.preview.api.G2DTarget;
 import org.gephi.preview.api.RenderTarget;
 import org.gephi.ui.components.JColorButton;
 import org.gephi.ui.utils.UIUtils;
@@ -178,7 +178,6 @@ public void run() {
     }
 
     public void initTarget(PreviewUIModel previewUIModel) {
-        System.out.println("INIT T");
         // inits the preview applet
         if (previewUIModel != null && target == null) {
             PreviewController previewController = Lookup.getDefault().lookup(PreviewController.class);

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -85,7 +85,7 @@ public void render(Item item, RenderTarget target, PreviewProperties properties)
             Item targetItem = item.getData(EdgeRenderer.TARGET);
 
             //Weight and color
-            Float weight = item.getData(EdgeItem.WEIGHT);
+            Double weight = item.getData(EdgeItem.WEIGHT);
             EdgeColor edgeColor = (EdgeColor) properties.getValue(PreviewProperty.EDGE_COLOR);
             Color color = edgeColor.getColor((Color) item.getData(EdgeItem.COLOR),
                     (Color) sourceItem.getData(NodeItem.COLOR),

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/EdgeRenderer.java
Patch:
@@ -149,13 +149,13 @@ public void preProcess(PreviewModel previewModel) {
                 if ((Boolean) item.getData(EdgeItem.DIRECTED) || edgeRadius > 0f) {
                     //Target
                     Item targetItem = (Item) item.getData(TARGET);
-                    Float weight = item.getData(EdgeItem.WEIGHT);
+                    Double weight = item.getData(EdgeItem.WEIGHT);
                     //Avoid negative arrow size:
                     float arrowSize = properties.getFloatValue(PreviewProperty.ARROW_SIZE);
                     if (arrowSize < 0) {
                         arrowSize = 0;
                     }
-                    float size = arrowSize * weight;
+                    float size = arrowSize * weight.floatValue();
                     targetRadius = -(edgeRadius + (Float) targetItem.getData(NodeItem.SIZE) / 2f + properties.getFloatValue(PreviewProperty.NODE_BORDER_WIDTH));
                     item.setData(TARGET_RADIUS, targetRadius - size);
                 }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -168,7 +168,7 @@ public void addNode(NodeDraft nodeDraft) {
     public NodeDraftImpl getNode(String id) {
         checkId(id);
 
-        int index = nodeMap.get(id);
+        int index = nodeMap.getInt(id);
         NodeDraftImpl node = null;
         if (index == NULL_INDEX) {
             if (parameters.isAutoNode()) {
@@ -374,7 +374,7 @@ public boolean edgeExists(String id) {
     public EdgeDraft getEdge(String id) {
         checkId(id);
 
-        int index = edgeMap.get(id);
+        int index = edgeMap.getInt(id);
         if (index == NULL_INDEX) {
             return null;
         }
@@ -622,7 +622,7 @@ public void closeLoader() {
             for (Iterator<NodeDraftImpl> itr = nodeList.iterator(); itr.hasNext();) {
                 NodeDraftImpl node = itr.next();
                 if (node != null && node.isCreatedAuto()) {
-                    int index = nodeMap.remove(node.getId());
+                    int index = nodeMap.removeInt(node.getId());
                     nodeList.set(index, null);
                 }
             }

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -173,6 +173,9 @@ protected void stmt(StreamTokenizer streamTokenizer) throws Exception {
             } else if (streamTokenizer.ttype == '[') {
                 NodeDraft nodeDraft = getOrCreateNode(nodeId);
                 nodeAttributes(streamTokenizer, nodeDraft);
+            } else {
+                getOrCreateNode(nodeId);
+                streamTokenizer.pushBack();
             }
         }
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -71,7 +71,7 @@ public class ActionsToolbar extends JToolBar {
 
     //Settings
     private Color color = new Color(0.6f, 0.6f, 0.6f);
-    private float size = 1f;
+    private float size = 10.0f;
 
     public ActionsToolbar() {
         initDesign();

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/ReportPanel.java
Patch:
@@ -579,6 +579,7 @@ private void initComponents() {
         statsPanel.add(multigraphLabel, gridBagConstraints);
 
         moreOptionsLink.setText(org.openide.util.NbBundle.getMessage(ReportPanel.class, "ReportPanel.moreOptionsLink.text")); // NOI18N
+        moreOptionsLink.setClickedColor(new java.awt.Color(0, 51, 255));
 
         moreOptionsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
 

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/api/EdgeDirectionDefault.java
Patch:
@@ -45,7 +45,7 @@ Development and Distribution License("CDDL") (collectively, the
  *
  * @author Mathieu Bastian
  */
-public enum EdgeDiretionDefault {
+public enum EdgeDirectionDefault {
 
     DIRECTED, UNDIRECTED, MIXED;
 }

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -48,7 +48,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.util.HashMap;
 import java.util.Map;
 import org.gephi.io.importer.api.ContainerLoader;
-import org.gephi.io.importer.api.EdgeDiretionDefault;
+import org.gephi.io.importer.api.EdgeDirectionDefault;
 import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.ImportUtils;
 import org.gephi.io.importer.api.Issue;
@@ -129,7 +129,7 @@ protected void graph(StreamTokenizer streamTokenizer) throws Exception {
             if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {
                 if (streamTokenizer.sval.equalsIgnoreCase("digraph") || streamTokenizer.sval.equalsIgnoreCase("graph")) {
                     found = true;
-                    container.setEdgeDefault(streamTokenizer.sval.equalsIgnoreCase("digraph") ? EdgeDiretionDefault.DIRECTED : EdgeDiretionDefault.UNDIRECTED);
+                    container.setEdgeDefault(streamTokenizer.sval.equalsIgnoreCase("digraph") ? EdgeDirectionDefault.DIRECTED : EdgeDirectionDefault.UNDIRECTED);
                     streamTokenizer.nextToken();
                     if (streamTokenizer.ttype == StreamTokenizer.TT_WORD) {
                         graphName = streamTokenizer.sval;

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -214,9 +214,9 @@ private void readGraph(XMLStreamReader reader) throws Exception {
         //Edge Type
         if (!defaultEdgeType.isEmpty()) {
             if (defaultEdgeType.equalsIgnoreCase("undirected")) {
-                container.setEdgeDefault(EdgeDiretionDefault.UNDIRECTED);
+                container.setEdgeDefault(EdgeDirectionDefault.UNDIRECTED);
             } else if (defaultEdgeType.equalsIgnoreCase("directed")) {
-                container.setEdgeDefault(EdgeDiretionDefault.DIRECTED);
+                container.setEdgeDefault(EdgeDirectionDefault.DIRECTED);
             } else if (defaultEdgeType.equalsIgnoreCase("mutual")) {
                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, "importerGEXF_error_edgedouble"), Issue.Level.WARNING));
             } else {

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGML.java
Patch:
@@ -161,7 +161,7 @@ private boolean parseGraph(ArrayList list) {
                 ret = parseEdge((ArrayList) value);
             } else if ("directed".equals(key)) {
                 if (value instanceof Double) {
-                    EdgeDiretionDefault edgeDefault = ((Double) value) == 1 ? EdgeDiretionDefault.DIRECTED : EdgeDiretionDefault.UNDIRECTED;
+                    EdgeDirectionDefault edgeDefault = ((Double) value) == 1 ? EdgeDirectionDefault.DIRECTED : EdgeDirectionDefault.UNDIRECTED;
                     container.setEdgeDefault(edgeDefault);
                 } else {
                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGML.class, "importerGML_error_directedgraphparse"), Issue.Level.WARNING));

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -54,7 +54,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.io.importer.api.ColumnDraft;
 import org.gephi.io.importer.api.ContainerLoader;
 import org.gephi.io.importer.api.EdgeDirection;
-import org.gephi.io.importer.api.EdgeDiretionDefault;
+import org.gephi.io.importer.api.EdgeDirectionDefault;
 import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.Issue;
 import org.gephi.io.importer.api.NodeDraft;
@@ -200,9 +200,9 @@ private void readGraph(XMLStreamReader reader) throws Exception {
         //Edge Type
         if (!defaultEdgeType.isEmpty()) {
             if (defaultEdgeType.equalsIgnoreCase("undirected")) {
-                container.setEdgeDefault(EdgeDiretionDefault.UNDIRECTED);
+                container.setEdgeDefault(EdgeDirectionDefault.UNDIRECTED);
             } else if (defaultEdgeType.equalsIgnoreCase("directed")) {
-                container.setEdgeDefault(EdgeDiretionDefault.DIRECTED);
+                container.setEdgeDefault(EdgeDirectionDefault.DIRECTED);
             } else {
                 report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_error_defaultedgetype", defaultEdgeType), Issue.Level.SEVERE));
             }

File: modules/DesktopImport/src/main/java/org/gephi/desktop/importer/ReportPanel.java
Patch:
@@ -106,6 +106,7 @@ public void run() {
                     initComponents();
                     initIcons();
                     initProcessors();
+                    initProcessorsUI();
                 }
             });
         } catch (InterruptedException ex) {
@@ -162,7 +163,6 @@ public void initIcons() {
 
     public void setData(Report report, Container container) {
         this.container = container;
-        initProcessorsUI();
 
         report.pruneReport(ISSUES_LIMIT);
         fillIssues(report);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GLAbstractListener.java
Patch:
@@ -45,11 +45,11 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.nio.DoubleBuffer;
 import java.nio.IntBuffer;
-import javax.media.opengl.GLAutoDrawable;
 import javax.media.opengl.GL2;
+import javax.media.opengl.GLAutoDrawable;
 import javax.media.opengl.GLCapabilities;
-import javax.media.opengl.GLProfile;
 import javax.media.opengl.GLEventListener;
+import javax.media.opengl.GLProfile;
 import javax.media.opengl.glu.GLU;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.config.GraphicalConfiguration;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GraphCanvas.java
Patch:
@@ -43,7 +43,6 @@ Development and Distribution License("CDDL") (collectively, the
 
 import com.jogamp.opengl.util.gl2.GLUT;
 import java.awt.Component;
-import java.awt.Cursor;
 import java.awt.Dimension;
 import java.text.NumberFormat;
 import javax.media.opengl.GL2;
@@ -72,7 +71,7 @@ public GraphCanvas() {
 
         //Basic init
         graphComponent = (Component) glCanvas;
-        graphComponent.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
+//        graphComponent.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
 
         //False lets the components appear on top of the canvas
         JPopupMenu.setDefaultLightWeightPopupEnabled(false);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GraphDrawableImpl.java
Patch:
@@ -51,12 +51,12 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.media.opengl.GL2;
 import javax.media.opengl.GLAutoDrawable;
 import javax.media.opengl.glu.GLU;
+import org.gephi.lib.gleem.linalg.Vec3f;
 import org.gephi.visualization.VizArchitecture;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.apiimpl.GraphDrawable;
-import org.gephi.visualization.opengl.AbstractEngine;
-import org.gephi.lib.gleem.linalg.Vec3f;
 import org.gephi.visualization.apiimpl.Scheduler;
+import org.gephi.visualization.opengl.AbstractEngine;
 
 /**
  *

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/UniqueColorMode.java
Patch:
@@ -76,7 +76,7 @@ public void defaultEdgeColor(Renderer renderer) {
 
     @Override
     public void textNodeColor(Renderer renderer, NodeModel nodeModel) {
-        textColor(renderer, nodeModel, nodeModel.isSelected());
+        textColor(renderer, nodeModel, nodeModel.isSelected() || nodeModel.isHighlight());
     }
 
     @Override

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/EdgeSettingsPanel.java
Patch:
@@ -220,7 +220,7 @@ private void initComponents() {
 
         showEdgesCheckbox = new javax.swing.JCheckBox();
         labelEdgeColor = new javax.swing.JLabel();
-        edgeColorButton = new JColorButton(Color.BLACK);
+        edgeColorButton = new JColorButton(Color.BLACK, false, true);
         sourceNodeColorCheckbox = new javax.swing.JCheckBox();
         selectionColorPanel = new javax.swing.JPanel();
         selectionColorCheckbox = new javax.swing.JCheckBox();

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -211,7 +211,7 @@ public class VizConfig {
     protected int reduceFpsWhenMouseOutValue = NbPreferences.forModule(VizConfig.class).getInt(REDUCE_FPS_MOUSE_OUT_VALUE, DEFAULT_REDUCE_FPS_MOUSE_OUT_VALUE);
     protected boolean pauseLoopWhenMouseOut = NbPreferences.forModule(VizConfig.class).getBoolean(PAUSE_LOOP_MOUSE_OUT, DEFAULT_PAUSE_LOOP_MOUSE_OUT);
     protected boolean showArrows = true;        //Overriden in Engine
-    protected boolean lightenNonSelected = true;        //Overriden in Engine
+    protected boolean lightenNonSelected = false;        //Overriden in Engine
     protected float[] lightenNonSelectedColor = ColorUtils.decode(NbPreferences.forModule(VizConfig.class).get(HIGHTLIGHT_COLOR, ColorUtils.encode(DEFAULT_HIGHTLIGHT_COLOR))).getRGBColorComponents(null);
     protected boolean lightenNonSelectedAnimation = NbPreferences.forModule(VizConfig.class).getBoolean(HIGHTLIGHT_ANIMATION, DEFAULT_HIGHTLIGHT_ANIMATION);
     protected float lightenNonSelectedFactor = 0.5f;        //Overriden in Engine

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -121,10 +121,10 @@ public void actionPerformed(ActionEvent evt) {
                     n.setAlpha(1f);
                 }
                 for (Edge e : graph.getEdges()) {
-                    e.setR(-1f);
+                    e.setR(color.getRed() / 255f);
                     e.setG(color.getGreen() / 255f);
                     e.setB(color.getBlue() / 255f);
-                    e.setAlpha(1f);
+                    e.setAlpha(0f);
                 }
             }
         });

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java
Patch:
@@ -434,8 +434,8 @@ public void mouseMove() {
                 if (!obj.isSelected()) {
                     //New selected
                     obj.setSelected(true);
-                    someSelection = true;
                 }
+                someSelection = true;
             } else if (obj.isSelected()) {
                 obj.setSelected(false);
             }
@@ -492,7 +492,7 @@ public void mouseMove() {
 //                vizConfig.setLightenNonSelected(someSelection);
 //            }
 //        }
-//        anySelected = someSelection;
+        anySelected = someSelection;
     }
 
     @Override

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -213,9 +213,9 @@ private boolean repulse(Node n1, Node n2) {
             double xDist = n2x - n1x;
             double yDist = n2y - n1y;
             double dist = Math.sqrt(xDist * xDist + yDist * yDist);
-            boolean sphereCollision = dist < radiusScale * ((n1.size() / 2f) + (n2.size() / 2f));
+            boolean sphereCollision = dist < radiusScale * (n1.size() + n2.size());
             if (sphereCollision) {
-                double f = 0.1 * (n1.size() / 2f) / dist;
+                double f = 0.1 * n1.size() / dist;
                 if (dist > 0) {
                     n2Data.dx = (float) (n2Data.dx + xDist / dist * f);
                     n2Data.dy = (float) (n2Data.dy + yDist / dist * f);
@@ -357,7 +357,7 @@ public void add(Node node) {
 //            float w = node.getTextData().getWidth();
 //            float h = node.getTextData().getHeight();
             float w = 0f, h = 0f;
-            float radius = node.size() / 2f;
+            float radius = node.size();
 
             // Get the rectangle occupied by the node (size + label)
             float nxmin = Math.min(x - w / 2, x - radius);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/initializer/Modeler.java
Patch:
@@ -81,6 +81,6 @@ protected float cameraDistance(NodeModel object) {
                 + Math.pow((double) object.getNode().z() - cameraLocation[2], 2d));
         object.setCameraDistance((float) distance);
 
-        return (float) distance - (object.getNode().size() / 2f);
+        return (float) distance - object.getNode().size();
     }
 }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModel.java
Patch:
@@ -155,6 +155,6 @@ public boolean selectionTest(Vecf distanceFromMouse, float selectionSize) {
 
     @Override
     public float getCollisionDistance(double angle) {
-        return node.size() / 2f;
+        return node.size();
     }
 }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModeler.java
Patch:
@@ -85,7 +85,7 @@ public void chooseModel(Model object3d) {
             return;
         }
 
-        float distance = cameraDistance(obj) / (obj.getNode().size() / 2f);
+        float distance = cameraDistance(obj) / obj.getNode().size();
         if (distance > 600) {
             obj.modelType = SHAPE_DIAMOND;
             obj.modelBorderType = -1;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeRectangleModeler.java
Patch:
@@ -74,7 +74,7 @@ public void chooseModel(Model object3d) {
             return;
         }
 
-        float distance = cameraDistance(obj) / (obj.getNode().size() / 2f);
+        float distance = cameraDistance(obj) / obj.getNode().size();
         if (distance > 600) {
             obj.border = false;
         } else {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModel.java
Patch:
@@ -139,6 +139,6 @@ public boolean selectionTest(Vecf distanceFromMouse, float selectionSize) {
 
     @Override
     public float getCollisionDistance(double angle) {
-        return node.size() / 2f;
+        return node.size();
     }
 }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModeler.java
Patch:
@@ -85,7 +85,7 @@ public void chooseModel(Model object3d) {
             return;
         }
 
-        float distance = cameraDistance(obj) / (obj.getNode().size() / 2f);
+        float distance = cameraDistance(obj) / obj.getNode().size();
         if (distance > 600) {
             obj.modelType = SHAPE_DIAMOND;
         } else if (distance > 50) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/TextManager.java
Patch:
@@ -300,7 +300,7 @@ public void drawTextNode(NodeModel objectModel) {
                 float height = sizeFactor * objectModel.getTextHeight();
                 float posX = node.x() + (float) width / -2 * sizeFactor;
                 float posY = node.y() + (float) height / -2 * sizeFactor;
-                float posZ = node.size() / 2f;
+                float posZ = node.size();
 
                 renderer.draw3D(txt, posX, posY, posZ, sizeFactor);
             }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeModeler.java
Patch:
@@ -22,12 +22,12 @@ public NodeModeler(CompatibilityEngine engine) {
 
     public abstract boolean is3d();
 
-    protected void setViewportPosition(NodeModel object) {
+    public void setViewportPosition(NodeModel object) {
         double[] res = controller.getDrawable().myGluProject(object.getNode().x(), object.getNode().y(), object.getNode().z());
         object.setViewportX((float) res[0]);
         object.setViewportY((float) res[1]);
 
-        res = controller.getDrawable().myGluProject(object.getNode().x() + (object.getNode().size() / 2f), object.getNode().y(), object.getNode().z());
+        res = controller.getDrawable().myGluProject(object.getNode().x() + object.getNode().size(), object.getNode().y(), object.getNode().z());
         float rad = Math.abs((float) res[0] - object.getViewportX());
         object.setViewportRadius(rad);
     }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/octree/Octant.java
Patch:
@@ -58,6 +58,7 @@ protected void addNode(NodeModel nodeModel) {
 
     protected void removeNode(NodeModel nodeModel) {
         int id = nodeModel.getOctantId();
+        nodeModel.setOctantId(Octree.NULL_ID);
         nodes[id] = null;
         nodeCount--;
         addGarbage(id);
@@ -156,7 +157,7 @@ private void addGarbage(int index) {
     }
 
     private int removeGarbage() {
-        return garbage[garbageLength--];
+        return garbage[--garbageLength];
     }
 
     private void growNodes(final int index) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/CompatibilityEngine.java
Patch:
@@ -100,7 +100,9 @@ public void updateSelection(GL2 gl, GLU glu) {
 
     @Override
     public boolean updateWorld() {
-        return dataBridge.updateWorld();
+        boolean repositioned = octree.repositionNodes();
+        boolean updated = dataBridge.updateWorld();
+        return repositioned || updated;
 //        boolean res = false;
 //        boolean newConfig = configChanged;
 //        if (newConfig) {

File: modules/ImportPlugin/src/main/java/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -174,6 +174,9 @@ protected void stmt(StreamTokenizer streamTokenizer) throws Exception {
             } else if (streamTokenizer.ttype == '[') {
                 NodeDraft nodeDraft = getOrCreateNode(nodeId);
                 nodeAttributes(streamTokenizer, nodeDraft);
+            } else {
+                getOrCreateNode(nodeId);
+                streamTokenizer.pushBack();
             }
         }
     }

File: modules/ImportAPI/src/main/java/org/gephi/io/importer/impl/ElementFactoryImpl.java
Patch:
@@ -51,8 +51,8 @@ Development and Distribution License("CDDL") (collectively, the
 public class ElementFactoryImpl implements ElementDraftFactory {
 
     protected final ImportContainerImpl container;
-    protected final AtomicInteger NODE_IDS = new AtomicInteger();
-    protected final AtomicInteger EDGE_IDS = new AtomicInteger();
+    protected final static AtomicInteger NODE_IDS = new AtomicInteger();
+    protected final static AtomicInteger EDGE_IDS = new AtomicInteger();
 
     public ElementFactoryImpl(ImportContainerImpl container) {
         this.container = container;

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -103,7 +103,6 @@ public void process() {
 
         int nodeCount = 0;
         //Create all nodes
-        //Create all nodes
         for (NodeDraft draftNode : container.getNodes()) {
             String id = draftNode.getId();
             Node node = factory.newNode(id);
@@ -129,7 +128,7 @@ public void process() {
                     edge = factory.newEdge(id, source, target, edgeType, draftEdge.getWeight(), true);
                     break;
                 case UNDIRECTED:
-                    edge = factory.newEdge(id, source, target, edgeType, draftEdge.getWeight(), true);
+                    edge = factory.newEdge(id, source, target, edgeType, draftEdge.getWeight(), false);
                     break;
                 case MIXED:
                     boolean directed = draftEdge.getDirection() != null && draftEdge.getDirection().equals(EdgeDirection.UNDIRECTED) ? false : true;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/ModelClass.java
Patch:
@@ -48,7 +48,6 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.media.opengl.glu.GLU;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.api.initializer.Modeler;
-import org.gephi.visualization.model.Model;
 
 /**
  *
@@ -80,7 +79,7 @@ public ModelClass(int classId, String name, boolean lod, boolean selectable, boo
         modelers = new ArrayList<Modeler>();
     }
 
-    public void lod(Iterator<Model> iterator) {
+    public void lod(Iterator<? extends Model> iterator) {
         for (; iterator.hasNext();) {
             Model obj = iterator.next();
             currentModeler.chooseModel(obj);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeModel.java
Patch:
@@ -67,8 +67,7 @@ public abstract class NodeModel implements Model, TextModel {
     //Flags
     protected boolean selected;
     protected boolean highlight;
-    public long markTime;
-    public long selectionMark;
+    public int markTime;
     public boolean mark;
     //Text
     protected Rectangle2D bounds;
@@ -81,7 +80,6 @@ public NodeModel(Node node) {
         selected = false;
         mark = false;
         markTime = 0;
-        selectionMark = 0;
     }
 
     public int octreePosition(float centerX, float centerY, float centerZ, float size) {

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/octree/Octant.java
Patch:
@@ -162,8 +162,8 @@ private int removeGarbage() {
     private void growNodes(final int index) {
         if (nodes == null) {
             nodes = new NodeModel[10];
-        } else if (index > nodes.length) {
-            final int newLength = (int) Math.min(Math.max((ONEOVERPHI * nodes.length) >>> 16, index), Integer.MAX_VALUE);
+        } else if (index >= nodes.length) {
+            final int newLength = (int) Math.min(Math.max((ONEOVERPHI * nodes.length) >>> 16, index + 1), Integer.MAX_VALUE);
             final NodeModel t[] = new NodeModel[newLength];
             System.arraycopy(nodes, 0, t, 0, nodes.length);
             nodes = t;

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/scheduler/CompatibilityScheduler.java
Patch:
@@ -138,8 +138,7 @@ public void display(GL2 gl, GLU glu) {
             //Objects iterators in octree are ready
 
             //Task MODEL - LOD
-//            pool1.execute(modelSegment);
-
+            engine.getNodeClass().lod(engine.getOctree().getNodeIterator());
         }
 
         //Task SELECTED

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/screenshot/ScreenshotMaker.java
Patch:
@@ -123,6 +123,7 @@ public ScreenshotMaker() {
         finishedMessage = NbPreferences.forModule(ScreenshotMaker.class).getBoolean(SHOW_MESSAGE, finishedMessage);
     }
 
+    @Override
     public void initArchitecture() {
         drawable = VizController.getInstance().getDrawable();
         engine = VizController.getInstance().getEngine();
@@ -313,6 +314,7 @@ private void afterTaking() {
         if (finishedMessage && file != null) {
             final String msg = NbBundle.getMessage(ScreenshotMaker.class, "ScreenshotMaker.finishedMessage.message", file.getName());
             SwingUtilities.invokeLater(new Runnable() {
+                @Override
                 public void run() {
                     JOptionPane.showMessageDialog(WindowManager.getDefault().getMainWindow(), msg, NbBundle.getMessage(ScreenshotMaker.class, "ScreenshotMaker.finishedMessage.title"), JOptionPane.INFORMATION_MESSAGE);
                 }

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GLAbstractListener.java
Patch:
@@ -259,6 +259,7 @@ public void display(GLAutoDrawable drawable) {
         render3DScene(gl, glu);
     }
 
+    @Override
     public void reshape(GLAutoDrawable drawable, int x, int y, int width, int height) {
         if (!resizing) {
             if (viewport.get(2) == width && viewport.get(3) == height)//NO need

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/GraphPanel.java
Patch:
@@ -67,6 +67,7 @@ public GraphPanel() {
         //Init GLJPanel as the drawable
         gljPanel = new GLJPanel(getCaps(), null, null) {
             //@Override
+            @Override
             public void paintComponent(Graphics g) {
                 Graphics2D g2d = (Graphics2D) g;
                 render2DBackground(g2d);

File: modules/ProcessorPlugin/src/main/java/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -132,7 +132,7 @@ public void process() {
                     edge = factory.newEdge(id, source, target, edgeType, draftEdge.getWeight(), true);
                     break;
                 case MIXED:
-                    boolean directed = draftEdge.getDirection().equals(EdgeDirection.UNDIRECTED) ? false : true;
+                    boolean directed = draftEdge.getDirection() != null && draftEdge.getDirection().equals(EdgeDirection.UNDIRECTED) ? false : true;
                     edge = factory.newEdge(id, source, target, edgeType, draftEdge.getWeight(), directed);
             }
             edgeCount++;

File: modules/DesktopContext/src/main/java/org/gephi/desktop/context/ContextPanel.java
Patch:
@@ -97,14 +97,15 @@ private class RefreshRunnable implements Runnable {
 
         @Override
         public void run() {
-            Graph visibleGraph = model.getGraph(model.getVisibleView());
-            Graph fullGraph = model.getGraph(model.getVisibleView());
+            Graph visibleGraph = model.getGraphVisible();
+            Graph fullGraph = model.getGraph();
             final int nodesFull = fullGraph.getNodeCount();
             final int nodesVisible = visibleGraph.getNodeCount();
             final int edgesFull = fullGraph.getEdgeCount();
             final int edgesVisible = visibleGraph.getEdgeCount();
             final GraphType graphType = model.isDirected() ? GraphType.DIRECTED : model.isUndirected() ? GraphType.UNDIRECTED : GraphType.MIXED;
             SwingUtilities.invokeLater(new Runnable() {
+                @Override
                 public void run() {
                     String visible = NbBundle.getMessage(ContextPanel.class, "ContextPanel.visible");
                     String nodeText = String.valueOf(nodesVisible);

File: modules/DesktopContext/src/main/java/org/gephi/desktop/context/ContextRefreshThread.java
Patch:
@@ -69,7 +69,7 @@ public ContextRefreshThread(GraphModel graphModel, Runnable listener) {
 
     private void initObserver() {
         if (observer == null || observer.isDestroyed()) {
-            observer = graphModel.getGraphObserver(graphModel.getGraph(graphModel.getVisibleView()), false);
+            observer = graphModel.getGraphObserver(graphModel.getGraphVisible(), false);
         }
     }
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java
Patch:
@@ -228,7 +228,7 @@ public void initAlgo() {
         if (graphModel == null) {
             return;
         }
-        graph = graphModel.getGraph(graphModel.getVisibleView());
+        graph = graphModel.getGraphVisible();
         energy = Float.POSITIVE_INFINITY;
         for (Node n : graph.getNodes()) {
             n.setLayoutData(new ForceVector());
@@ -247,7 +247,7 @@ public void endAlgo() {
 
     @Override
     public void goAlgo() {
-        graph = graphModel.getGraph(graphModel.getVisibleView());
+        graph = graphModel.getGraphVisible();
         graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         for (Node n : nodes) {

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -46,10 +46,9 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
-
 import org.gephi.layout.plugin.AbstractLayout;
-import org.gephi.layout.plugin.ForceVectorUtils;
 import org.gephi.layout.plugin.ForceVectorNodeLayoutData;
+import org.gephi.layout.plugin.ForceVectorUtils;
 import org.gephi.layout.spi.Layout;
 import org.gephi.layout.spi.LayoutBuilder;
 import org.gephi.layout.spi.LayoutProperty;
@@ -103,7 +102,7 @@ public void initAlgo() {
 
     @Override
     public void goAlgo() {
-        this.graph = graphModel.getGraph(graphModel.getVisibleView());
+        this.graph = graphModel.getGraphVisible();
         graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         Edge[] edges = graph.getEdges().toArray();

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/forceAtlas2/ForceAtlas2.java
Patch:
@@ -95,7 +95,7 @@ public ForceAtlas2(ForceAtlas2Builder layoutBuilder) {
     public void initAlgo() {
         speed = 1.;
 
-        graph = graphModel.getGraph(graphModel.getVisibleView());
+        graph = graphModel.getGraphVisible();
 
         graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
@@ -124,7 +124,7 @@ public void goAlgo() {
         if (graphModel == null) {
             return;
         }
-        graph = graphModel.getGraph(graphModel.getVisibleView());
+        graph = graphModel.getGraphVisible();
 
         graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
@@ -384,7 +384,7 @@ public void resetPropertiesValues() {
         int nodesCount = 0;
 
         if (graphModel != null) {
-            nodesCount = graphModel.getGraph(graphModel.getVisibleView()).getNodeCount();
+            nodesCount = graphModel.getGraphVisible().getNodeCount();
         }
 
         // Tuning

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/fruchterman/FruchtermanReingold.java
Patch:
@@ -85,7 +85,7 @@ public void initAlgo() {
 
     @Override
     public void goAlgo() {
-        this.graph = graphModel.getGraph(graphModel.getVisibleView());
+        this.graph = graphModel.getGraphVisible();
         graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         Edge[] edges = graph.getEdges().toArray();

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -87,7 +87,7 @@ public void initAlgo() {
 
     @Override
     public void goAlgo() {
-        this.graph = graphModel.getGraph(graphModel.getVisibleView());
+        this.graph = graphModel.getGraphVisible();
         graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
 

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/random/RandomLayout.java
Patch:
@@ -76,7 +76,7 @@ public void initAlgo() {
 
     @Override
     public void goAlgo() {
-        graph = graphModel.getGraph(graphModel.getVisibleView());
+        graph = graphModel.getGraphVisible();
         for (Node n : graph.getNodes()) {
             n.setX((float) (-size / 2 + size * random.nextDouble()));
             n.setY((float) (-size / 2 + size * random.nextDouble()));

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/rotate/RotateLayout.java
Patch:
@@ -73,7 +73,7 @@ public void initAlgo() {
 
     @Override
     public void goAlgo() {
-        graph = graphModel.getGraph(graphModel.getVisibleView());
+        graph = graphModel.getGraphVisible();
         double sin = Math.sin(getAngle() * Math.PI / 180);
         double cos = Math.cos(getAngle() * Math.PI / 180);
         double px = 0f;

File: modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/scale/ScaleLayout.java
Patch:
@@ -73,7 +73,7 @@ public void initAlgo() {
 
     @Override
     public void goAlgo() {
-        graph = graphModel.getGraph(graphModel.getVisibleView());
+        graph = graphModel.getGraphVisible();
         double xMean = 0, yMean = 0;
         for (Node n : graph.getNodes()) {
             xMean += n.x();

File: modules/DesktopPerspective/src/main/java/org/gephi/desktop/perspective/Installer.java
Patch:
@@ -66,7 +66,6 @@ private void initBanner() {
         //WindowManager.getDefault().invokeWhenUIReady(new Runnable() {});
         //Therefore use this:
         SwingUtilities.invokeLater(new Runnable() {
-
             @Override
             public void run() {
                 //Get the main window of the NetBeans Platform:
@@ -84,7 +83,6 @@ public void run() {
         });
 
         WindowManager.getDefault().invokeWhenUIReady(new Runnable() {
-
             @Override
             public void run() {
                 JFrame frame = (JFrame) WindowManager.getDefault().getMainWindow();
@@ -106,8 +104,8 @@ public void run() {
                     southPanel.add(statusLinePanel, BorderLayout.SOUTH);
                     if (bottomComponent != null) {
                         bottomComponent.setVisible(false);
+                        southPanel.add(bottomComponent, BorderLayout.CENTER);
                     }
-                    southPanel.add(bottomComponent, BorderLayout.CENTER);
                     frame.getContentPane().add(southPanel, BorderLayout.SOUTH);
                 }
 //                System.err.println(frame.getContentPane().getClass());

File: modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/Degree.java
Patch:
@@ -172,7 +172,7 @@ public void execute(HierarchicalGraph graph, AttributeModel attributeModel) {
             Progress.progress(progress, i);
         }
 
-        avgDegree /= (isDirected) ? 2 * graph.getNodeCount() : graph.getNodeCount();
+        avgDegree /= graph.getNodeCount();
         graph.getAttributes().setValue(avgDegreeCol.getIndex(), avgDegree);
 
         graph.readUnlockAll();

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/EdgeRenderer.java
Patch:
@@ -44,6 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import com.itextpdf.text.pdf.PdfContentByte;
 import com.itextpdf.text.pdf.PdfGState;
 import java.awt.Color;
+import java.text.DecimalFormat;
 import java.util.Locale;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
@@ -356,7 +357,8 @@ public void renderStraightEdge(Item edgeItem, Item sourceItem, Item targetItem,
             edgeElem.setAttribute("d", String.format(Locale.ENGLISH, "M %f,%f L %f,%f",
                     x1, y1, x2, y2));
             edgeElem.setAttribute("stroke", svgTarget.toHexString(color));
-            edgeElem.setAttribute("stroke-width", Float.toString(thickness * svgTarget.getScaleRatio()));
+            DecimalFormat df = new DecimalFormat("#.########");
+            edgeElem.setAttribute("stroke-width", df.format(thickness * svgTarget.getScaleRatio()));
             edgeElem.setAttribute("stroke-opacity", (color.getAlpha() / 255f) + "");
             edgeElem.setAttribute("fill", "none");
             svgTarget.getTopElement(SVGTarget.TOP_EDGES).appendChild(edgeElem);

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -70,7 +70,7 @@ public class ActionsToolbar extends JToolBar {
 
     //Settings
     private Color color = new Color(0.6f, 0.6f, 0.6f);
-    private float size = 1f;
+    private float size = 10.0f;
 
     public ActionsToolbar() {
         initDesign();

File: modules/PreviewPlugin/src/main/java/org/gephi/preview/plugin/renderers/EdgeRenderer.java
Patch:
@@ -44,6 +44,7 @@ Development and Distribution License("CDDL") (collectively, the
 import com.itextpdf.text.pdf.PdfContentByte;
 import com.itextpdf.text.pdf.PdfGState;
 import java.awt.Color;
+import java.text.DecimalFormat;
 import java.util.Locale;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
@@ -356,7 +357,8 @@ public void renderStraightEdge(Item edgeItem, Item sourceItem, Item targetItem,
             edgeElem.setAttribute("d", String.format(Locale.ENGLISH, "M %f,%f L %f,%f",
                     x1, y1, x2, y2));
             edgeElem.setAttribute("stroke", svgTarget.toHexString(color));
-            edgeElem.setAttribute("stroke-width", Float.toString(thickness * svgTarget.getScaleRatio()));
+            DecimalFormat df = new DecimalFormat("#.########");
+            edgeElem.setAttribute("stroke-width", df.format(thickness * svgTarget.getScaleRatio()));
             edgeElem.setAttribute("stroke-opacity", (color.getAlpha() / 255f) + "");
             edgeElem.setAttribute("fill", "none");
             svgTarget.getTopElement(SVGTarget.TOP_EDGES).appendChild(edgeElem);

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/merge/ui/CreateTimeIntervalUI.java
Patch:
@@ -57,6 +57,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.netbeans.validation.api.Validator;
 import org.netbeans.validation.api.ui.ValidationGroup;
 import org.netbeans.validation.api.ui.ValidationPanel;
+import org.openide.util.NbBundle;
 import org.openide.util.NbPreferences;
 
 /**
@@ -204,7 +205,7 @@ private void buildValidationPanel() {
             public boolean validate(Problems prblms, String string, String t) {
                 boolean valid = validateDateFormat(t);
                 if(!valid){
-                    prblms.add("Invalid date format");
+                    prblms.add(NbBundle.getMessage(CreateTimeIntervalUI.class, "CreateTimeIntervalUI.invalid.dateformat"));
                 }
                 return valid;
             }
@@ -215,7 +216,7 @@ public boolean validate(Problems prblms, String string, String t) {
             public boolean validate(Problems prblms, String string, String t) {
                 boolean valid = validateNumberOrEmpty(t);
                 if(!valid){
-                    prblms.add("Invalid number");
+                    prblms.add(NbBundle.getMessage(CreateTimeIntervalUI.class, "CreateTimeIntervalUI.invalid.number"));
                 }
                 return valid;
             }

File: modules/DesktopBranding/src/main/java/org/gephi/branding/desktop/Installer.java
Patch:
@@ -129,7 +129,7 @@ public boolean closing() {
         int option = JOptionPane.showConfirmDialog(WindowManager.getDefault().getMainWindow(), NbBundle.getMessage(Installer.class, "CloseConfirmation.message"), NbBundle.getMessage(Installer.class, "CloseConfirmation.message"), JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
         if (option == JOptionPane.YES_OPTION) {
             Lookup.getDefault().lookup(ProjectControllerUI.class).saveProject();
-        } else if (option == JOptionPane.CANCEL_OPTION) {
+        } else if (option == JOptionPane.CANCEL_OPTION || option == JOptionPane.CLOSED_OPTION) {
             return false;//Exit canceled
         }
         Lookup.getDefault().lookup(ProjectController.class).closeCurrentProject();

File: modules/DataLaboratoryPlugin/src/main/java/org/gephi/datalab/plugin/manipulators/columns/ui/ConvertColumnToDynamicUI.java
Patch:
@@ -132,8 +132,8 @@ public void unSetup() {
         boolean ropen = intervalEndOpenCheckbox.isSelected();
         boolean replaceColumn = replaceColumnCheckbox.isSelected();
         
-        NbPreferences.forModule(ConvertColumnToDynamicUI.class).put(INTERVAL_START_OPEN_PREFERENCE, intervalStart);
-        NbPreferences.forModule(ConvertColumnToDynamicUI.class).put(INTERVAL_START_OPEN_PREFERENCE, intervalEnd);
+        NbPreferences.forModule(ConvertColumnToDynamicUI.class).put(INTERVAL_START_PREFERENCE, intervalStart);
+        NbPreferences.forModule(ConvertColumnToDynamicUI.class).put(INTERVAL_END_PREFERENCE, intervalEnd);
         NbPreferences.forModule(ConvertColumnToDynamicUI.class).putBoolean(INTERVAL_START_OPEN_PREFERENCE, lopen);
         NbPreferences.forModule(ConvertColumnToDynamicUI.class).putBoolean(INTERVAL_END_OPEN_PREFERENCE, ropen);
         NbPreferences.forModule(ConvertColumnToDynamicUI.class).putBoolean(REPLACE_COLUMN_PREFERENCE, replaceColumn);

File: modules/AttributesAPI/src/main/java/org/gephi/data/attributes/api/AttributeType.java
Patch:
@@ -213,9 +213,9 @@ private Object parseDynamic(String str) {
         return createDynamicObject(intervals);
     }
 
-    private DynamicType createDynamicObject(List<Interval> in) {
+    public DynamicType createDynamicObject(List<Interval> in) {
         if (!this.isDynamicType()) {
-            return null;
+            throw new IllegalArgumentException("The attribute type is not dynamic");
         }
 
         switch (this) {

File: modules/AttributesAPI/src/main/java/org/gephi/data/attributes/type/DynamicParser.java
Patch:
@@ -311,7 +311,7 @@ public static double getDoubleFromXMLDateString(String str) throws ParseExceptio
         }
     }
 
-    private static double parseTime(String time) throws ParseException {
+    public static double parseTime(String time) throws ParseException {
         double value;
         try {
             //Try first to parse as a single double:

File: modules/AttributesAPI/src/main/java/org/gephi/data/attributes/type/DynamicParser.java
Patch:
@@ -1,6 +1,6 @@
 /*
- Copyright 2008-2010 Gephi
- Authors : Martin Škurla <bujacik@gmail.com>, Mathieu Bastian <mathieu.bastian@gephi.org>
+ Copyright 2008-2012 Gephi
+ Authors : Martin Škurla <bujacik@gmail.com>, Mathieu Bastian <mathieu.bastian@gephi.org>, Eduardo Ramos<eduramiba@gmail.com>
  Website : http://www.gephi.org
 
  This file is part of Gephi.

File: modules/DHNSGraph/src/main/java/org/gephi/graph/dhns/utils/DHNSSerializer.java
Patch:
@@ -50,7 +50,6 @@ Development and Distribution License("CDDL") (collectively, the
 import javax.xml.stream.XMLStreamReader;
 import javax.xml.stream.XMLStreamWriter;
 import javax.xml.stream.events.XMLEvent;
-import org.gephi.utils.collection.avl.ParamAVLIterator;
 import org.gephi.graph.dhns.core.Dhns;
 import org.gephi.graph.dhns.core.GraphFactoryImpl;
 import org.gephi.graph.dhns.core.GraphStructure;
@@ -65,6 +64,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.graph.dhns.edge.SelfLoopImpl;
 import org.gephi.graph.dhns.node.AbstractNode;
 import org.gephi.graph.dhns.node.iterators.TreeListIterator;
+import org.gephi.utils.collection.avl.ParamAVLIterator;
 
 /**
  *

File: modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/DataTablesModel.java
Patch:
@@ -49,7 +49,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.data.attributes.api.AttributeTable;
 import org.gephi.datalab.api.datatables.DataTablesController;
 import org.gephi.project.api.Workspace;
-import org.openide.util.ImageUtilities;
 import org.openide.util.Lookup;
 
 /**

File: modules/AttributesAPI/src/main/java/org/gephi/data/attributes/type/DynamicParser.java
Patch:
@@ -101,7 +101,6 @@ public static List<Interval> parseIntervals(AttributeType type, String input) th
         }
 
         List<Interval> intervals = new ArrayList<Interval>();
-        boolean lopen = true;
 
         StringReader reader = new StringReader(input + ' ');//Add 1 space so reader.skip function always works when necessary (end of string not reached).
 
@@ -111,9 +110,8 @@ public static List<Interval> parseIntervals(AttributeType type, String input) th
             c = (char) r;
             switch (c) {
                 case LCLOSE:
-                    lopen = false;
                 case LOPEN:
-                    intervals.add(parseInterval(type, reader, lopen));
+                    intervals.add(parseInterval(type, reader, c == LOPEN));
                     break;
                 default:
                     //Ignore other chars outside of intervals

File: modules/AttributesAPI/src/main/java/org/gephi/data/attributes/type/Interval.java
Patch:
@@ -291,7 +291,7 @@ public String toString(boolean timesAsDoubles) {
         if (value != null) {
             sb.append(", ");
             String stringValue = value.toString();
-            if (containsSpecialCharacters(stringValue)) {
+            if (containsSpecialCharacters(stringValue) || stringValue.trim().isEmpty()) {
                 sb.append('"');
                 sb.append(stringValue.replace("\\", "\\\\").replace("\"", "\\\""));
                 sb.append('"');

File: modules/VisualizationImpl/src/main/java/org/gephi/visualization/opengl/JOGLNativesInstaller.java
Patch:
@@ -68,7 +68,7 @@ public void restored() {
         if (System.getProperty("org.gephi.jogl.init", "true").equals("true")) {
             if (findCompatibleOsAndArch()) {
                 String nativeArch = nativeLibInfo.getSubDirectoryPath();
-                File joglDistFolder = InstalledFileLocator.getDefault().locate("modules/lib/" + nativeArch, "visualization-impl", false);
+                File joglDistFolder = InstalledFileLocator.getDefault().locate("modules/lib/" + nativeArch, "org-gephi-visualization-impl", false);
                 if (joglDistFolder != null) {
                     loadNatives(joglDistFolder);
                 } else {

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java
Patch:
@@ -66,10 +66,9 @@ public class DataLaboratoryPersistenceProvider implements WorkspacePersistencePr
     private static final String EDGE_COLUMN = "edgecolumn";
 
     public void writeXML(XMLStreamWriter writer, Workspace workspace) {
-        AttributeModel attributeModel = workspace.getLookup().lookup(AttributeModel.class);
         DataTablesModel dataTablesModel = workspace.getLookup().lookup(DataTablesModel.class);
         if (dataTablesModel == null) {
-            workspace.add(dataTablesModel = new DataTablesModel(attributeModel.getNodeTable(), attributeModel.getEdgeTable()));
+            workspace.add(dataTablesModel = new DataTablesModel(workspace));
         }
         try {
             writeDataTablesModel(writer, dataTablesModel);
@@ -114,7 +113,7 @@ private void readDataTablesModel(XMLStreamReader reader, Workspace workspace) th
         AttributeTable edgesTable = attributeModel.getEdgeTable();
         DataTablesModel dataTablesModel = workspace.getLookup().lookup(DataTablesModel.class);
         if (dataTablesModel == null) {
-            workspace.add(dataTablesModel = new DataTablesModel());
+            workspace.add(dataTablesModel = new DataTablesModel(workspace));
         }
         AvailableColumnsModel nodeColumns = dataTablesModel.getNodeAvailableColumnsModel();
         nodeColumns.removeAllColumns();

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -118,6 +118,7 @@ public void actionPerformed(ActionEvent e) {
     private void initUI(StatisticsUI ui) {
         this.statisticsUI = ui;
         displayLabel.setText(ui.getDisplayName());
+        displayLabel.setToolTipText(ui.getShortDescription());
         busyLabel.setVisible(false);
         runButton.setEnabled(false);
         runButton.setText(RUN);

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java
Patch:
@@ -122,7 +122,7 @@ public Number[] getValues(Graph graph) {
             HierarchicalDirectedGraph hgraph = (HierarchicalDirectedGraph) graph;
             List<Integer> values = new ArrayList<Integer>(((HierarchicalGraph) graph).getNodeCount());
             for (Node n : hgraph.getNodes()) {
-                int degree = hgraph.getMutualDegree(n);
+                int degree = hgraph.getTotalOutDegree(n);
                 values.add(degree);
             }
             return values.toArray(new Number[0]);

File: PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java
Patch:
@@ -261,6 +261,8 @@ public Part<Node> getPart(Node element) {
 
         public void setParts(PartImpl<Node>[] parts) {
             this.parts = parts;
+            nodeMap.clear();
+            valueMap.clear();
             List<Color> colors = getSequenceColors(parts.length);
             int i = 0;
             for (PartImpl<Node> p : parts) {

File: ToolsPlugin/src/org/gephi/tools/plugin/HeatMap.java
Patch:
@@ -139,8 +139,8 @@ public void clickNodes(Node[] nodes) {
                         maxDistance++;   //+1 to have the maxdistance nodes a ratio<1
                     }
                     if (maxDistance > 0) {
-                        for (Entry<Node, Double> entry : algorithm.getDistances().entrySet()) {
-                            NodeData node = entry.getKey().getNodeData();
+                        for (Entry<NodeData, Double> entry : algorithm.getDistances().entrySet()) {
+                            NodeData node = entry.getKey();
                             if (!Double.isInfinite(entry.getValue())) {
                                 float ratio = (float) (entry.getValue() / maxDistance);
                                 Color c = linearGradient.getValue(ratio);

File: ToolsPlugin/src/org/gephi/tools/plugin/ShortestPath.java
Patch:
@@ -116,20 +116,20 @@ public void clickNodes(Node[] nodes) {
                     GraphController gc = Lookup.getDefault().lookup(GraphController.class);
 
                     AbstractShortestPathAlgorithm algorithm;
-                    if (gc.getModel().getGraphVisible() instanceof DirectedGraph) {
+                if (gc.getModel().getGraphVisible() instanceof DirectedGraph) {
                         algorithm = new BellmanFordShortestPathAlgorithm((DirectedGraph) gc.getModel().getGraphVisible(), sourceNode);
                     } else {
                         algorithm = new DijkstraShortestPathAlgorithm(gc.getModel().getGraphVisible(), sourceNode);
                     }
                     algorithm.compute();
 
                     double distance;
-                    if ((distance = algorithm.getDistances().get(targetNode)) != Double.POSITIVE_INFINITY) {
+                    if ((distance = algorithm.getDistances().get(targetNode.getNodeData())) != Double.POSITIVE_INFINITY) {
                         targetNode.getNodeData().setColor(colorArray[0], colorArray[1], colorArray[2]);
                         VizController.getInstance().selectNode(targetNode);
                         Edge predecessorEdge = algorithm.getPredecessorIncoming(targetNode);
                         Node predecessor = algorithm.getPredecessor(targetNode);
-                        while (predecessorEdge != null && predecessor != sourceNode) {
+                        while (predecessorEdge != null && predecessor.getNodeData() != sourceNode.getNodeData()) {
                             predecessorEdge.getEdgeData().setColor(colorArray[0], colorArray[1], colorArray[2]);
                             VizController.getInstance().selectEdge(predecessorEdge);
                             predecessor.getNodeData().setColor(colorArray[0], colorArray[1], colorArray[2]);

File: Algorithms/src/org/gephi/algorithms/shortestpath/DijkstraShortestPathAlgorithm.java
Patch:
@@ -94,7 +94,9 @@ public void compute() {
                 Double dist = distances.get(k);
                 if (minDistanceNode == null) {
                     minDistanceNode = k;
-                } else if (dist.compareTo(minDistance) < 0) {
+                }
+                
+                if (dist.compareTo(minDistance) < 0) {
                     minDistance = dist;
                     minDistanceNode = k;
                 }

File: Algorithms/src/org/gephi/algorithms/shortestpath/DijkstraShortestPathAlgorithm.java
Patch:
@@ -94,7 +94,9 @@ public void compute() {
                 Double dist = distances.get(k);
                 if (minDistanceNode == null) {
                     minDistanceNode = k;
-                } else if (dist.compareTo(minDistance) < 0) {
+                }
+                
+                if (dist.compareTo(minDistance) < 0) {
                     minDistance = dist;
                     minDistanceNode = k;
                 }

File: PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java
Patch:
@@ -364,6 +364,7 @@ public Renderer[] getManagedEnabledRenderers() {
     public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
         writer.writeStartElement("previewmodel");
 
+        initProperties();
         //Write PreviewProperties:
         for (PreviewProperty property : properties.getProperties()) {
             String propertyName = property.getName();

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Modularity.java
Patch:
@@ -293,7 +293,7 @@ private void removeNodeFrom(int node, Community from) {
                 }
 
                 ///////////////////
-                //Remove Adjacency Community's connetion to this community
+                //Remove Adjacency Community's connection to this community
                 Modularity.Community adjCom = nodeCommunities[neighbor];
                 Float oEdgesto = adjCom.connectionsWeight.get(community);
                 Integer oCountEdgesto = adjCom.connectionsCount.get(community);

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Modularity.java
Patch:
@@ -293,7 +293,7 @@ private void removeNodeFrom(int node, Community from) {
                 }
 
                 ///////////////////
-                //Remove Adjacency Community's connetion to this community
+                //Remove Adjacency Community's connection to this community
                 Modularity.Community adjCom = nodeCommunities[neighbor];
                 Float oEdgesto = adjCom.connectionsWeight.get(community);
                 Integer oCountEdgesto = adjCom.connectionsCount.get(community);

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -121,7 +121,7 @@ private enum ClassDisplayed {
     private static final String DATA_LABORATORY_EDGES_NODES_LABELS = "DataLaboratory_showEdgesNodesLabels";
     private static final Color invalidFilterColor = new Color(254, 150, 150);
     private final boolean dynamicFiltering;
-    private boolean visibleOnly = false;
+    private boolean visibleOnly = true;
     private boolean useSparklines = false;
     private boolean timeIntervalGraphics = false;
     private boolean showEdgesNodesLabels = false;
@@ -150,7 +150,7 @@ public DataTableTopComponent() {
 
         //Get saved preferences if existing:
         dynamicFiltering = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_DYNAMIC_FILTERING, true);
-        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, false);
+        visibleOnly = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE, true);
         useSparklines = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_SPARKLINES, false);
         timeIntervalGraphics = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_TIME_INTERVAL_GRAPHICS, false);
         showEdgesNodesLabels = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_EDGES_NODES_LABELS, false);

File: StatisticsPlugin/src/org/gephi/statistics/plugin/ClusteringCoefficient.java
Patch:
@@ -458,8 +458,10 @@ public void triangles(HierarchicalGraph hgraph) {
         //Results and average
         avgClusteringCoeff = 0;
         totalTriangles = 0;
+        int numNodesDegreeGreaterThanOne = 0;
         for (int v = 0; v < N; v++) {
             if (network[v].length() > 1) {
+                numNodesDegreeGreaterThanOne++;
                 double cc = triangles[v];
                 totalTriangles += triangles[v];
                 cc /= (network[v].length() * (network[v].length() - 1));
@@ -477,7 +479,7 @@ public void triangles(HierarchicalGraph hgraph) {
             }
         }
         totalTriangles /= 3;
-        avgClusteringCoeff /= N;
+        avgClusteringCoeff /= numNodesDegreeGreaterThanOne;
 
         hgraph.readUnlock();
     }
@@ -524,8 +526,6 @@ private void bruteForce(HierarchicalGraph hgraph, AttributeModel attributeModel)
     }
     nodeCC /= 2.0;
     
-    
-    
     if (neighborhood > 1) {
     float cc = nodeCC / (.5f * neighborhood * (neighborhood - 1));
     if (isDirected) {

File: GraphAPI/src/org/gephi/graph/api/GraphView.java
Patch:
@@ -70,7 +70,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <ul><li>Create a new view, which duplicates the <b>main</b> view, with all
  * nodes and edges in it.</li>
  * <li>Remove nodes and edges in the view.</li>
- * <li>Set the view as the curently visible view.</li></ul>
+ * <li>Set the view as the currently visible view.</li></ul>
  * To set a view as the currently visible view, see
  * {@link GraphModel#setVisibleView(org.gephi.graph.api.GraphView)}.
  *

File: GraphAPI/src/org/gephi/graph/api/GraphView.java
Patch:
@@ -70,7 +70,7 @@ Development and Distribution License("CDDL") (collectively, the
  * <ul><li>Create a new view, which duplicates the <b>main</b> view, with all
  * nodes and edges in it.</li>
  * <li>Remove nodes and edges in the view.</li>
- * <li>Set the view as the curently visible view.</li></ul>
+ * <li>Set the view as the currently visible view.</li></ul>
  * To set a view as the currently visible view, see
  * {@link GraphModel#setVisibleView(org.gephi.graph.api.GraphView)}.
  *

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -201,6 +201,7 @@ protected Color parseColor(String sval) throws Exception {
                   String[] colors = sval.split(" ");
                   return Color.getHSBColor(Float.parseFloat(colors[0]), Float.parseFloat(colors[1]), Float.parseFloat(colors[2]));
             } catch (Exception e) {
+                  report.logIssue(new Issue(NbBundle.getMessage(ImporterDOT.class, "importerDOT_color_labelunreachable", streamTokenizer.lineno()), Issue.Level.WARNING));
             }
         }
         return null;

File: DynamicAPI/src/org/gephi/dynamic/api/DynamicModel.java
Patch:
@@ -82,11 +82,11 @@ public interface DynamicModel {
 
     /**
      * The way the time is represented, either a simple real value (DOUBLE),
-     * a date or a datetime.
+     * a unix timestamp, a date or a datetime.
      */
     public enum TimeFormat {
 
-        DATE, DATETIME, DOUBLE
+        DATE, DATETIME, DOUBLE, TIMESTAMP
     };
 
     /**

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java
Patch:
@@ -111,7 +111,7 @@ public EdgeDataTable() {
         table = new JXTable();
         prepareRenderers();
         table.setHighlighters(HighlighterFactory.createAlternateStriping());
-        table.setColumnControlVisible(true);
+        table.setColumnControlVisible(false);
         table.setSortable(true);
         table.setRowFilter(rowFilter);
 

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/NodeDataTable.java
Patch:
@@ -113,6 +113,7 @@ public NodeDataTable() {
         attributeColumnsController = Lookup.getDefault().lookup(AttributeColumnsController.class);
 
         outlineTable = new Outline();
+        outlineTable.setColumnHidingAllowed(false);
 
         quickFilter = new QuickFilter() {
 

File: PreviewAPI/src/org/gephi/preview/ProcessingGraphics.java
Patch:
@@ -86,7 +86,7 @@ public void refresh(PreviewModel previewModel, RenderTarget target) {
             g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_LCD_HRGB);
             rectMode(PGraphics.CENTER);
             if (background != null) {
-                background(background.getRed(), background.getGreen(), background.getBlue());
+                background(background.getRed(), background.getGreen(), background.getBlue(), background.getAlpha());
             }
             
             // user zoom

File: UIComponents/src/org/gephi/ui/components/SimpleHTMLReport.java
Patch:
@@ -299,8 +299,8 @@ private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FI
 
         final String path = NbPreferences.forModule(SimpleHTMLReport.class).get(LAST_PATH, null);
         JFileChooser fileChooser = new JFileChooser(path);
-        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
-        int result = fileChooser.showOpenDialog(WindowManager.getDefault().getMainWindow());
+      //fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
+        int result = fileChooser.showSaveDialog(WindowManager.getDefault().getMainWindow());
         if (result == JFileChooser.APPROVE_OPTION) {
             final File destinationFolder = fileChooser.getSelectedFile();
             NbPreferences.forModule(SimpleHTMLReport.class).put(LAST_PATH, destinationFolder.getAbsolutePath());

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Modularity.java
Patch:
@@ -374,7 +374,6 @@ private void zoomOut() {
                     else
                         weightSum += weight;
                     Modularity.ModEdge e = new Modularity.ModEdge(index, target, weight);
-                    System.out.println(e.source + " " + e.target + " " + e.weight);
                     newTopology[index].add(e);
                 }
                 weights[index] = weightSum;

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -118,6 +118,7 @@ public void actionPerformed(ActionEvent e) {
     private void initUI(StatisticsUI ui) {
         this.statisticsUI = ui;
         displayLabel.setText(ui.getDisplayName());
+        displayLabel.setToolTipText(ui.getShortDescription());
         busyLabel.setVisible(false);
         runButton.setEnabled(false);
         runButton.setText(RUN);

File: RankingPlugin/src/org/gephi/ranking/plugin/AttributeRankingBuilder.java
Patch:
@@ -301,15 +301,15 @@ public String getDisplayName() {
         @Override
         public Number getMaximumValue() {
             if (maximum == null) {
-                AbstractRanking.refreshMinMax(this, graph);
+                DynamicAttributeRanking.refreshMinMax(this, graph);
             }
             return maximum;
         }
 
         @Override
         public Number getMinimumValue() {
             if (minimum == null) {
-                AbstractRanking.refreshMinMax(this, graph);
+                DynamicAttributeRanking.refreshMinMax(this, graph);
             }
             return minimum;
         }

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -496,7 +496,7 @@ public boolean verify() {
                 }
             }
             for (AttributeColumn col : attributeModel.getEdgeTable().getColumns()) {
-                dynamicGraph = col.getType().isDynamicType();
+                dynamicGraph = dynamicGraph || col.getType().isDynamicType();
                 if (dynamicGraph) {
                     break;
                 }

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineDrawer.java
Patch:
@@ -41,11 +41,9 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.timeline;
 
-import java.awt.Color;
 import java.awt.Cursor;
 import java.awt.Graphics;
 import java.awt.Graphics2D;
-import java.awt.Point;
 import java.awt.event.MouseEvent;
 import java.awt.event.MouseListener;
 import java.awt.event.MouseMotionListener;
@@ -57,7 +55,6 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.timeline.api.TimelineController;
 import org.gephi.timeline.api.TimelineModel;
 import org.gephi.timeline.api.TimelineModelEvent;
-import org.gephi.ui.components.richtooltip.RichTooltip;
 import org.openide.util.Lookup;
 
 /**

File: DesktopTimeline/src/org/gephi/desktop/timeline/CustomBoundsDialog.java
Patch:
@@ -108,6 +108,7 @@ public void setDefaults() {
         } else {
             NumberFormat f = NumberFormat.getInstance(Locale.ENGLISH);
             f.setGroupingUsed(false);
+            f.setMaximumFractionDigits(20);
             minTextField.setText(f.format(model.getMin()));
             maxTextField.setText(f.format(model.getMax()));
             startTextField.setText(f.format(model.getMin()));
@@ -143,6 +144,7 @@ public void setup(TimelineModel timelineModel) {
         } else {
             NumberFormat f = NumberFormat.getInstance(Locale.ENGLISH);
             f.setGroupingUsed(false);
+            f.setMaximumFractionDigits(20);
             minTextField.setText(f.format(model.getCustomMin()));
             maxTextField.setText(f.format(model.getCustomMax()));
             startTextField.setText(f.format(model.getIntervalStart()));

File: FiltersImpl/src/org/gephi/filters/FilterProcessor.java
Patch:
@@ -285,7 +285,7 @@ public boolean init(Filter filter, Graph graph) {
                     rangeFilter.getRangeProperty().setValue(newRange);
                 } else if(previousRange != null && (previousRange.getMinimum() == null || previousRange.getMaximum() == null)) {
                     //Opening projects
-                    newRange = new Range(previousRange.getLowerBound(), previousRange.getUpperBound(), min, max, values);
+                    newRange = new Range(previousRange.getLowerBound(), previousRange.getUpperBound(), min, max, previousRange.isLeftInclusive(), previousRange.isRightInclusive(), values);
                     rangeFilter.getRangeProperty().setValue(newRange);
                 } else {
                     //Collect some info
@@ -314,7 +314,7 @@ public boolean init(Filter filter, Graph graph) {
                         lowerBound = min;
                     }
 
-                    newRange = new Range(lowerBound, upperBound, min, max, values);
+                    newRange = new Range(lowerBound, upperBound, min, max, previousRange.isLeftInclusive(), previousRange.isRightInclusive(), values);
                     if (!newRange.equals(previousRange)) {
                         rangeFilter.getRangeProperty().setValue(newRange);
                     }

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ModularityUI.java
Patch:
@@ -67,13 +67,15 @@ public void setup(Statistics statistics) {
             settings.load(mod);
             panel.setRandomize(mod.getRandom());
             panel.setUseWeight(mod.getUseWeight());
+            panel.setResolution(mod.getResolution());
         }
     }
 
     public void unsetup() {
         if (panel != null) {
             mod.setRandom(panel.isRandomize());
             mod.setUseWeight(panel.useWeight());
+            mod.setResolution(panel.resolution());
             settings.save(mod);
         }
         mod = null;

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineTooltip.java
Patch:
@@ -187,8 +187,6 @@ private RichTooltip buildTooltip() {
         if (getY() != null) {
             richTooltip.addFooterSection(model.getChart().getColumn().getTitle());
             richTooltip.addFooterSection(NbBundle.getMessage(TimelineTooltip.class, "TimelineTooltip.chart") + ": " + getY());
-            richTooltip.addFooterSection(NbBundle.getMessage(TimelineTooltip.class, "TimelineTooltip.chart") + ": " + getY());
-            richTooltip.addFooterSection(NbBundle.getMessage(TimelineTooltip.class, "TimelineTooltip.chart") + ": " + getY());
 
             //Img
             richTooltip.setFooterImage(ImageUtilities.loadImage("org/gephi/desktop/timeline/resources/chart.png"));

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -69,7 +69,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Yudi Xue, Mathieu Bastian
  */
 @ServiceProvider(service = Renderer.class, position = 200)
-public class ArrowRenderer implements Renderer, Renderer.NamedRenderer {
+public class ArrowRenderer implements Renderer {
 
     //Const
     protected final float BASE_RATIO = 0.5f;
@@ -192,7 +192,7 @@ public boolean isRendererForitem(Item item, PreviewProperties properties) {
                 && !properties.getBooleanValue(PreviewProperty.MOVING);
     }
 
-    public String getName() {
+    public String getDisplayName() {
         return NbBundle.getMessage(ArrowRenderer.class, "ArrowRenderer.name");
     }
 }

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/EdgeLabelRenderer.java
Patch:
@@ -83,7 +83,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Yudi Xue, Mathieu Bastian
  */
 @ServiceProvider(service = Renderer.class, position = 500)
-public class EdgeLabelRenderer implements Renderer , Renderer.NamedRenderer {
+public class EdgeLabelRenderer implements Renderer {
     //Custom properties
 
     public static final String EDGE_COLOR = "edge.label.edgeColor";
@@ -374,7 +374,7 @@ protected PVector linearInterpolation(float x1, float y1, float x2, float y2, fl
         return r;
     }
 
-    public String getName() {
+    public String getDisplayName() {
         return NbBundle.getMessage(EdgeLabelRenderer.class, "EdgeLabelRenderer.name");
     }
 }

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/EdgeRenderer.java
Patch:
@@ -70,7 +70,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Yudi Xue, Mathieu Bastian
  */
 @ServiceProvider(service = Renderer.class, position = 100)
-public class EdgeRenderer implements Renderer, Renderer.NamedRenderer {
+public class EdgeRenderer implements Renderer {
 
     //Custom properties
     public static final String EDGE_MIN_WEIGHT = "edge.min-weight";
@@ -425,7 +425,7 @@ public boolean isRendererForitem(Item item, PreviewProperties properties) {
         return false;
     }
 
-    public String getName() {
+    public String getDisplayName() {
         return NbBundle.getMessage(EdgeRenderer.class, "EdgeRenderer.name");
     }
 }

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/NodeLabelRenderer.java
Patch:
@@ -82,7 +82,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Yudi Xue, Mathieu Bastian
  */
 @ServiceProvider(service = Renderer.class, position = 400)
-public class NodeLabelRenderer implements Renderer , Renderer.NamedRenderer {
+public class NodeLabelRenderer implements Renderer {
     //Custom properties
 
     public static final String NODE_COLOR = "node.label.nodeColor";
@@ -408,7 +408,7 @@ public boolean isRendererForitem(Item item, PreviewProperties properties) {
                 && !properties.getBooleanValue(PreviewProperty.MOVING);
     }
 
-    public String getName() {
+    public String getDisplayName() {
         return NbBundle.getMessage(NodeLabelRenderer.class, "NodeLabelRenderer.name");
     }
 }

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/NodeRenderer.java
Patch:
@@ -66,7 +66,7 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Yudi Xue, Mathieu Bastian
  */
 @ServiceProvider(service = Renderer.class, position = 300)
-public class NodeRenderer implements Renderer , Renderer.NamedRenderer {
+public class NodeRenderer implements Renderer {
 
     //Default values
     protected float defaultBorderWidth = 1f;
@@ -199,7 +199,7 @@ public boolean isRendererForitem(Item item, PreviewProperties properties) {
         return false;
     }
 
-    public String getName() {
+    public String getDisplayName() {
         return NbBundle.getMessage(NodeRenderer.class, "NodeRenderer.name");
     }
 }

File: AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java
Patch:
@@ -57,11 +57,11 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Mathieu Bastian
  */
 @ServiceProvider(service = AttributeController.class)
-public class AttributeContollerImpl implements AttributeController {
+public class AttributeControllerImpl implements AttributeController {
 
     private ProjectController projectController;
 
-    public AttributeContollerImpl() {
+    public AttributeControllerImpl() {
         projectController = Lookup.getDefault().lookup(ProjectController.class);
         projectController.addWorkspaceListener(new WorkspaceListener() {
 

File: AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java
Patch:
@@ -57,11 +57,11 @@ Development and Distribution License("CDDL") (collectively, the
  * @author Mathieu Bastian
  */
 @ServiceProvider(service = AttributeController.class)
-public class AttributeContollerImpl implements AttributeController {
+public class AttributeControllerImpl implements AttributeController {
 
     private ProjectController projectController;
 
-    public AttributeContollerImpl() {
+    public AttributeControllerImpl() {
         projectController = Lookup.getDefault().lookup(ProjectController.class);
         projectController.addWorkspaceListener(new WorkspaceListener() {
 

File: FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionBuilder.java
Patch:
@@ -185,7 +185,7 @@ public PartitionFilter(Partition partition) {
         }
 
         public String getName() {
-            return NbBundle.getMessage(PartitionBuilder.class, "PartitionBuilder.name") + "( " + partition.getColumn().getTitle() + ")";
+            return NbBundle.getMessage(PartitionBuilder.class, "PartitionBuilder.name") + " (" + partition.getColumn().getTitle() + ")";
         }
 
         public boolean init(Graph graph) {

File: FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionCountBuilder.java
Patch:
@@ -129,6 +129,9 @@ public PartitionCountFilter(Partition partition) {
             super(NbBundle.getMessage(PartitionCountBuilder.class, "PartitionCountBuilder.name"),
                     partition.getColumn());
             this.partition = partition;
+            
+            //Add property
+            addProperty(Range.class, "range");
         }
 
         public boolean init(Graph graph) {

File: FiltersPluginUI/src/org/gephi/ui/filters/plugin/attribute/EqualNumberPanel.java
Patch:
@@ -79,8 +79,8 @@ public void run() {
                 setToolTipText(filter.getName() + " '" + filter.getColumn().getTitle() + "'");
                 Number match = filter.getMatch();
                 Number stepSize = null;
-                final Comparable min = (Comparable) filter.getMinimun();
-                final Comparable max = (Comparable) filter.getMaximum();
+                final Comparable min = (Comparable) filter.getRange().getMinimum();
+                final Comparable max = (Comparable) filter.getRange().getMaximum();
                 switch (filter.getColumn().getType()) {
                     case DOUBLE:
                         match = (match != null ? match : new Double((Double) min));

File: FiltersPlugin/src/org/gephi/filters/plugin/AbstractAttributeFilter.java
Patch:
@@ -18,10 +18,10 @@ public abstract class AbstractAttributeFilter extends AbstractFilter implements
     protected AbstractAttributeFilter.Type type;
 
     public AbstractAttributeFilter(String name, AttributeColumn column) {
-        super(name);
+        super(name + " (" + column.getTitle() + ")");
         this.column = column;
         this.type = AttributeUtils.getDefault().isNodeColumn(column) ? Type.NODE : Type.EDGE;
-        
+
         //Add column property
         addProperty(AttributeColumn.class, "column");
     }

File: PreviewAPI/src/org/gephi/preview/presets/DefaultPreset.java
Patch:
@@ -74,7 +74,7 @@ public DefaultPreset() {
         properties.put(PreviewProperty.EDGE_LABEL_MAX_CHAR, 30);
         properties.put(PreviewProperty.EDGE_LABEL_OUTLINE_COLOR, new DependantColor(Color.WHITE));
         properties.put(PreviewProperty.EDGE_LABEL_OUTLINE_OPACITY, 80f);
-        properties.put(PreviewProperty.EDGE_LABEL_OUTLINE_SIZE, 0);
+        properties.put(PreviewProperty.EDGE_LABEL_OUTLINE_SIZE, 0f);
         properties.put(PreviewProperty.EDGE_LABEL_SHORTEN, false);
 
         properties.put(PreviewProperty.NODE_BORDER_COLOR, new DependantColor(Color.BLACK));
@@ -88,7 +88,7 @@ public DefaultPreset() {
         properties.put(PreviewProperty.NODE_LABEL_MAX_CHAR, 30);
         properties.put(PreviewProperty.NODE_LABEL_OUTLINE_COLOR, new DependantColor(Color.WHITE));
         properties.put(PreviewProperty.NODE_LABEL_OUTLINE_OPACITY, 80f);
-        properties.put(PreviewProperty.NODE_LABEL_OUTLINE_SIZE, 0);
+        properties.put(PreviewProperty.NODE_LABEL_OUTLINE_SIZE, 0f);
         properties.put(PreviewProperty.NODE_LABEL_PROPORTIONAL_SIZE, true);
         properties.put(PreviewProperty.NODE_LABEL_SHORTEN, false);
         properties.put(PreviewProperty.NODE_LABEL_SHOW_BOX, false);

File: PreviewExport/src/org/gephi/io/exporter/preview/PDFExporter.java
Patch:
@@ -139,6 +139,7 @@ public boolean execute() {
         Progress.finish(progress);
 
         props.putValue(PDFTarget.PDF_CONTENT_BYTE, null);
+        props.putValue(PDFTarget.PAGESIZE, null);
 
         return !cancel;
     }

File: DesktopTimeline/src/org/gephi/desktop/timeline/TickGraph.java
Patch:
@@ -170,7 +170,7 @@ private void drawDate(Graphics2D g) {
                     if (bigFont != null) {
                         String label = dateTick.getTickValue(TOP_TICK, interval.getStart());
                         int xLabel = x + 4;
-                        g.setColor(parameters.getDateColor(1));
+                        g.setColor(parameters.getDateColor(TOP_TICK));
                         int y = (int) (fontSize * 4);
 
                         g.drawString(label, xLabel, y);
@@ -179,7 +179,7 @@ private void drawDate(Graphics2D g) {
 
                     if (bigFont != null) {
                         String label = dateTick.getTickValue(TOP_TICK, interval.getStart());
-                        g.setColor(parameters.getDateColor(1));
+                        g.setColor(parameters.getDateColor(TOP_TICK));
                         int y = (int) (fontSize * 4);
 
                         g.drawString(label, 4, y);

File: DesktopTimeline/src/org/gephi/desktop/timeline/TickParameters.java
Patch:
@@ -59,8 +59,8 @@ public enum TickType {
     private int fontSize = 12;
     private double fontFactor = 6.;
     private Font font = new Font("Helvetica", Font.PLAIN, fontSize);
-    private Color[] realColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A), new Color(0x1E1E1E)};
-    private Color[] dateColors = new Color[]{new Color(0x999999), new Color(0xCCCCCC)};
+        private Color[] realColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A), new Color(0x1E1E1E)};
+    private Color[] dateColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A)};
 
     public TickParameters(TickType type) {
         this.type = type;

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -494,9 +494,7 @@ private void writeNodePosition(XMLStreamWriter xmlWriter, Node node) throws Exce
             xmlWriter.writeStartElement(VIZ, NODE_POSITION, VIZ_NAMESPACE);
             xmlWriter.writeAttribute("x", "" + x);
             xmlWriter.writeAttribute("y", "" + y);
-            if (z != 0) {
-                xmlWriter.writeAttribute("z", "" + z);
-            }
+            xmlWriter.writeAttribute("z", "" + z);
             xmlWriter.writeEndElement();
         }
     }

File: ToolsPlugin/src/org/gephi/tools/plugin/NodePencil.java
Patch:
@@ -74,7 +74,7 @@ public class NodePencil implements Tool {
 
     public NodePencil() {
         //Default settings
-        color = Color.BLACK;
+        color = new Color(153, 153, 153);//Default gray of nodes
         size = 10f;
     }
 

File: TimelineAPI/src/org/gephi/timeline/TimelineControllerImpl.java
Patch:
@@ -283,7 +283,7 @@ public void selectColumn(final AttributeColumn column) {
         if (model != null) {
             if (!(model.getChart() == null && column == null)
                     || (model.getChart() != null && !model.getChart().getColumn().equals(column))) {
-                if (!attributeModel.getGraphTable().hasColumn(column.getId())) {
+                if(column != null && !attributeModel.getGraphTable().hasColumn(column.getId())) {
                     throw new IllegalArgumentException("Not a graph column");
                 }
                 Thread thread = new Thread(new Runnable() {

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -146,7 +146,7 @@ private enum ClassDisplayed {
     //Executor
     private RefreshOnceHelperThread refreshOnceHelperThread;
 
-    private DataTableTopComponent() {
+    public DataTableTopComponent() {
 
         //Get saved preferences if existing:
         dynamicFiltering = NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_DYNAMIC_FILTERING, true);

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewSettingsTopComponent.java
Patch:
@@ -98,7 +98,7 @@ public final class PreviewSettingsTopComponent extends TopComponent implements P
     //State
     private int defaultPresetLimit;
 
-    private PreviewSettingsTopComponent() {
+    public PreviewSettingsTopComponent() {
         initComponents();
         setName(NbBundle.getMessage(PreviewSettingsTopComponent.class, "CTL_PreviewSettingsTopComponent"));
 

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -91,7 +91,7 @@ public final class PreviewTopComponent extends TopComponent implements PropertyC
     private transient ProcessingTarget target;
     private transient PApplet sketch;
 
-    private PreviewTopComponent() {
+    public PreviewTopComponent() {
         initComponents();
         setName(NbBundle.getMessage(PreviewTopComponent.class, "CTL_PreviewTopComponent"));
 

File: DesktopPerspective/src/org/gephi/desktop/perspective/plugin/LaboratoryPerspective.java
Patch:
@@ -67,6 +67,6 @@ public String getDisplayName() {
 
     @Override
     public String getName() {
-        return "LaboratoryGroup";
+        return "datalab";
     }
 }

File: DesktopPerspective/src/org/gephi/desktop/perspective/plugin/OverviewPerspective.java
Patch:
@@ -68,6 +68,6 @@ public String getDisplayName() {
 
     @Override
     public String getName() {
-        return "OverviewGroup";
+        return "overview";
     }
 }

File: DesktopPerspective/src/org/gephi/desktop/perspective/plugin/PreviewPerspective.java
Patch:
@@ -67,6 +67,6 @@ public String getDisplayName() {
 
     @Override
     public String getName() {
-        return "PreviewGroup";
+        return "preview";
     }
 }

File: PerspectiveAPI/src/org/gephi/perspective/api/PerspectiveController.java
Patch:
@@ -42,7 +42,6 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.perspective.api;
 
 import org.gephi.perspective.spi.Perspective;
-import org.gephi.perspective.spi.PerspectiveMember;
 
 /**
  * Controller to manage the perspective system. A perspective is a set of panels

File: Utils/src/org/gephi/utils/sparklines/SparklineComponent.java
Patch:
@@ -101,19 +101,19 @@ class MouseEvents extends MouseAdapter implements MouseMotionListener {
 
         @Override
         public void mouseEntered(MouseEvent e) {
-            sparklineParameters.setHiglightedValueXPosition(e.getX());
+            sparklineParameters.setHighlightedValueXPosition(e.getX());
             repaint();
         }
 
         @Override
         public void mouseExited(MouseEvent e) {
-            sparklineParameters.setHiglightedValueXPosition(null);
+            sparklineParameters.setHighlightedValueXPosition(null);
             repaint();
         }
 
         @Override
         public void mouseMoved(MouseEvent e) {
-            sparklineParameters.setHiglightedValueXPosition(e.getX());
+            sparklineParameters.setHighlightedValueXPosition(e.getX());
             repaint();
         }
     }

File: DataLaboratoryPlugin/src/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIVisualPanel2.java
Patch:
@@ -133,6 +133,8 @@ private void loadDescription(JPanel settingsPanel) {
 
     private void loadColumns(JPanel settingsPanel) {
         try {
+            columnsCheckBoxes.clear();
+            columnsComboBoxes.clear();
             JLabel columnsLabel = new JLabel(getMessage("ImportCSVUIVisualPanel2.columnsLabel.text"));
             settingsPanel.add(columnsLabel, "wrap");
 

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeEvent.java
Patch:
@@ -75,7 +75,7 @@ public interface AttributeEvent {
      */
     public enum EventType {
 
-        ADD_COLUMN, REMOVE_COLUMN, SET_VALUE
+        ADD_COLUMN, REMOVE_COLUMN, REPLACE_COLUMN, SET_VALUE
     };
 
     public EventType getEventType();

File: AttributesImpl/src/org/gephi/data/attributes/AttributeTableImpl.java
Patch:
@@ -189,6 +189,9 @@ public synchronized AttributeColumn replaceColumn(AttributeColumn source, Attrib
         }
         columnsSet.put(targetImpl, targetImpl);
 
+        model.fireAttributeEvent(
+                new ColumnEvent(AttributeEvent.EventType.REPLACE_COLUMN, (AttributeColumnImpl) source));
+        
         //Version
         version++;
         return targetImpl;

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java
Patch:
@@ -243,6 +243,7 @@ private void prepareRenderers() {
         table.setDefaultRenderer(TimeInterval.class, timeIntervalsRenderer = new TimeIntervalsRenderer(min, max, timeIntervalGraphics));
 
         //Use default string editor for them:
+        table.setDefaultEditor(String.class, new DefaultCellEditor(new JTextField()));
         table.setDefaultEditor(NumberList.class, new DefaultCellEditor(new JTextField()));
         table.setDefaultEditor(DynamicBigDecimal.class, new DefaultCellEditor(new JTextField()));
         table.setDefaultEditor(DynamicBigInteger.class, new DefaultCellEditor(new JTextField()));

File: ImportPluginUI/src/org/gephi/ui/importer/plugin/EdgeListPanel.java
Patch:
@@ -605,7 +605,7 @@ public boolean validate(Problems problems, String compName, String model) {
             if (isSqlite(panel)) {
                 return Validators.FILE_MUST_BE_FILE.validate(problems, compName, model);
             } else {
-                return Validators.HOST_NAME_OR_IP_ADDRESS.validate(problems, compName, model);
+                return Validators.REQUIRE_NON_EMPTY_STRING.validate(problems, compName, model);
             }
         }
     }

File: ImportPlugin/src/org/gephi/io/importer/plugin/database/EdgeListDatabaseImpl.java
Patch:
@@ -64,6 +64,7 @@ public EdgeListDatabaseImpl() {
         properties.addNodePropertyAssociation(NodeProperties.X, "x");
         properties.addNodePropertyAssociation(NodeProperties.Y, "y");
         properties.addNodePropertyAssociation(NodeProperties.SIZE, "size");
+        properties.addNodePropertyAssociation(NodeProperties.COLOR, "color");
         properties.addNodePropertyAssociation(NodeProperties.START, "start");
         properties.addNodePropertyAssociation(NodeProperties.END, "end");
         properties.addNodePropertyAssociation(NodeProperties.START, "start_open");
@@ -75,6 +76,7 @@ public EdgeListDatabaseImpl() {
         properties.addEdgePropertyAssociation(EdgeProperties.TARGET, "target");
         properties.addEdgePropertyAssociation(EdgeProperties.LABEL, "label");
         properties.addEdgePropertyAssociation(EdgeProperties.WEIGHT, "weight");
+        properties.addNodePropertyAssociation(NodeProperties.COLOR, "color");
         properties.addEdgePropertyAssociation(EdgeProperties.START, "start");
         properties.addEdgePropertyAssociation(EdgeProperties.END, "end");
         properties.addEdgePropertyAssociation(EdgeProperties.START, "start_open");

File: DesktopLayout/src/org/gephi/desktop/layout/LayoutPanel.java
Patch:
@@ -117,7 +117,7 @@ public void itemStateChanged(ItemEvent e) {
             public void mouseEntered(MouseEvent e) {
                 if (infoLabel.isEnabled() && model != null && model.getSelectedLayout() != null) {
                     richTooltip = buildTooltip(model.getSelectedBuilder());
-                    richTooltip.showTooltip(infoLabel);
+                    richTooltip.showTooltip(infoLabel,e.getLocationOnScreen());
                 }
 
             }

File: DesktopStatistics/src/org/gephi/desktop/statistics/DynamicSettingsPanel.java
Patch:
@@ -93,7 +93,7 @@ public DynamicSettingsPanel() {
             public void mouseEntered(MouseEvent e) {
                 if (windowInfoLabel.isEnabled()) {
                     richTooltip = buildTooltip();
-                    richTooltip.showTooltip(windowInfoLabel);
+                    richTooltip.showTooltip(windowInfoLabel, e.getLocationOnScreen());
                 }
 
             }

File: UIComponents/src/org/gephi/ui/components/richtooltip/RichTooltip.java
Patch:
@@ -287,8 +287,8 @@ public void showTooltip(JComponent component, Point screenLocation) {
 
 
         // display directly below or above it
-        location.x = screenLocation.x;
-        location.y = screenLocation.y + component.getHeight();
+        location.x = screenLocation.x + 10;
+        location.y = screenLocation.y - 10;
         if ((location.y + size.height) > (sBounds.y + sBounds.height)) {
             location.y = screenLocation.y - size.height;
         }

File: DesktopTimeline/src/org/gephi/desktop/timeline/DrawerSettings.java
Patch:
@@ -104,7 +104,7 @@ void update(int width, int height) {
         lastWidth = width;
         lastHeight = height;
 
-        background.paint = new GradientPaint(0, 0, background.top, 0, height, background.bottom, true);
+//        background.paint = new GradientPaint(0, 0, background.top, 0, height, background.bottom, true);
         selection.paint = new GradientPaint(0, 0, selection.top, 0, height, selection.bottom, true);
         selection.mouseOverPaint = new GradientPaint(0, 0, selection.mouseOverTopColor, 0, height, selection.mouseOverBottomColor, true);
         selection.activatedPaint = new GradientPaint(0, 0, selection.activatedTopColor, 0, height, selection.activatedBottomColor, true);
@@ -119,7 +119,7 @@ public DrawerSettings() {
 //        background.top = new Color(151, 151, 151, 0);
         background.top = UIManager.getColor("NbExplorerView.background");
         background.bottom = new Color(97, 95, 93, 0);
-        background.paint = new GradientPaint(0, 0, background.top, 0, 20, background.bottom, true);
+//        background.paint = new GradientPaint(0, 0, background.top, 0, 20, background.bottom, true);
 
         //selection.top = new Color(89, 161, 235, 153);
         //selection.bottom = new Color(37, 104, 161, 153);

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineDrawer.java
Patch:
@@ -208,10 +208,10 @@ public void paintComponent(Graphics g) {
         int innerWidth = width - 1;
         int innerHeight = height - settings.tmMarginBottom - 2;
         int innerY = settings.tmMarginTop + 1;
-        g2d.setBackground(settings.background.top);
+//        g2d.setBackground(settings.background.top);
 //        g2d.setPaint(settings.background.paint);
-        g2d.setColor(settings.background.top);
-        g2d.fillRect(0, innerY, innerWidth, innerHeight);
+//        g2d.setColor(settings.background.top);
+//        g2d.fillRect(0, innerY, innerWidth, innerHeight);
 
         if (!this.isEnabled()) {
             return;

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Hits.java
Patch:
@@ -326,8 +326,8 @@ public String getReport() {
                 false);
         chart2.removeLegend();
         ChartUtils.decorateChart(chart2);
-        ChartUtils.scaleChart(chart, dAuthsSeries, true);
-        String imageFile2 = ChartUtils.renderChart(chart, "authorities.png");
+        ChartUtils.scaleChart(chart2, dAuthsSeries, true);
+        String imageFile2 = ChartUtils.renderChart(chart2, "authorities.png");
 
 
         String report = "<HTML> <BODY> <h1> HITS Metric Report </h1>"

File: DesktopTimeline/src/org/gephi/desktop/timeline/CustomBoundsDialog.java
Patch:
@@ -159,8 +159,8 @@ public void unsetup() {
                 double end = DynamicUtilities.getDoubleFromDate(DATE_FORMAT.parse(endTextField.getText()));
                 start = Math.max(min, start);
                 end = Math.min(max, end);
-                controller.setInterval(start, end);
                 controller.setCustomBounds(min, max);
+                controller.setInterval(start, end);
             } catch (ParseException ex) {
                 Exceptions.printStackTrace(ex);
             }
@@ -172,8 +172,8 @@ public void unsetup() {
                 double end = DynamicUtilities.getDoubleFromDate(DATETIME_FORMAT.parse(endTextField.getText()));
                 start = Math.max(min, start);
                 end = Math.min(max, end);
-                controller.setInterval(start, end);
                 controller.setCustomBounds(min, max);
+                controller.setInterval(start, end);
             } catch (ParseException ex) {
                 Exceptions.printStackTrace(ex);
             }

File: TimelineAPI/src/org/gephi/timeline/TimelineControllerImpl.java
Patch:
@@ -177,7 +177,9 @@ public void dynamicModelChanged(DynamicModelEvent event) {
             TimeInterval timeInterval = (TimeInterval) event.getData();
             double min = timeInterval.getLow();
             double max = timeInterval.getHigh();
-            setInterval(min, max);
+            if(!model.isPlaying()) {
+                setInterval(min, max);
+            }        
         } else if (event.getEventType().equals(DynamicModelEvent.EventType.TIME_FORMAT)) {
             DynamicModel.TimeFormat timeFormat = (DynamicModel.TimeFormat) event.getData();
             if (model != null && !model.getTimeFormat().equals(timeFormat)) {

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineDrawer.java
Patch:
@@ -165,6 +165,7 @@ public void setMinMax(double min, double max) {
     }
 
     public void setCustomBounds(double min, double max) {
+        repaint();
     }
 
     public void setInterval(double from, double to) {

File: TimelineAPI/src/org/gephi/timeline/TimelineChartImpl.java
Patch:
@@ -83,7 +83,7 @@ public Number getY(Number x) {
         int minIndex = -1;
         double minX = Double.POSITIVE_INFINITY;
         for (int i = 0; i < xs.length; i++) {
-            double diff = xs[i].doubleValue() - x.doubleValue();
+            double diff = Math.abs(xs[i].doubleValue() - x.doubleValue());
             if (diff < minX) {
                 minX = diff;
                 minIndex = i;

File: TimelineAPI/src/org/gephi/timeline/TimelineControllerImpl.java
Patch:
@@ -325,7 +325,9 @@ public void run() {
                                     ys[i] = y;
                                     i++;
                                 }
-                                chart = new TimelineChartImpl(column, xs, ys);
+                                if(xs.length > 0) {
+                                    chart = new TimelineChartImpl(column, xs, ys);
+                                }
                             }
                         }
                         model.setChart(chart);

File: TimelineAPI/src/org/gephi/timeline/TimelineControllerImpl.java
Patch:
@@ -269,7 +269,7 @@ public void setEnabled(boolean enabled) {
     @Override
     public void setInterval(double from, double to) {
         if (model != null) {
-            if (model.getIntervalStart() != from || model.getIntervalEnd() != to) {
+            if (dynamicModel.getVisibleInterval().getLow() != from || dynamicModel.getVisibleInterval().getHigh() != to) {
                 if (from >= to) {
                     throw new IllegalArgumentException("from should be less than to");
                 }

File: DesktopTimeline/src/org/gephi/desktop/timeline/DrawerSettings.java
Patch:
@@ -52,6 +52,7 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.image.Kernel;
 import java.util.HashMap;
 import java.util.Map;
+import javax.swing.UIManager;
 
 /**
  *
@@ -115,7 +116,8 @@ public DrawerSettings() {
         //background.bottom = new Color(47, 45, 43, 255);
         //background.top = new Color(131, 131, 131, 255);
         //background.bottom = new Color(77, 75, 73, 255);
-        background.top = new Color(151, 151, 151, 0);
+//        background.top = new Color(151, 151, 151, 0);
+        background.top = UIManager.getColor("NbExplorerView.background");
         background.bottom = new Color(97, 95, 93, 0);
         background.paint = new GradientPaint(0, 0, background.top, 0, 20, background.bottom, true);
 

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineDrawer.java
Patch:
@@ -41,6 +41,7 @@ Development and Distribution License("CDDL") (collectively, the
  */
 package org.gephi.desktop.timeline;
 
+import java.awt.Color;
 import java.awt.Cursor;
 import java.awt.Graphics;
 import java.awt.Graphics2D;
@@ -203,7 +204,8 @@ public void paintComponent(Graphics g) {
         int innerHeight = height - settings.tmMarginBottom - 2;
         int innerY = settings.tmMarginTop + 1;
         g2d.setBackground(settings.background.top);
-        g2d.setPaint(settings.background.paint);
+//        g2d.setPaint(settings.background.paint);
+        g2d.setColor(settings.background.top);
         g2d.fillRect(0, innerY, innerWidth, innerHeight);
 
         if (!this.isEnabled()) {

File: DesktopTimeline/src/org/gephi/desktop/timeline/DrawerSettings.java
Patch:
@@ -145,7 +145,7 @@ public DrawerSettings() {
         tmMarginTop = 0;
         tmMarginBottom = 0;
 
-        topChartMargin = 10;
+        topChartMargin = 16;
         
         //System.out.println("Generating filters for " + this);
         // filters

File: TimelineAPI/src/org/gephi/timeline/TimelineModelImpl.java
Patch:
@@ -179,6 +179,7 @@ public void setPlayDelay(int playDelay) {
         this.playDelay = playDelay;
     }
 
+    @Override
     public double getPlayStep() {
         return playStep;
     }

File: TimelineAPI/src/org/gephi/timeline/api/TimelineModel.java
Patch:
@@ -75,6 +75,8 @@ public enum PlayMode {
     public DynamicModel.TimeFormat getTimeFormat();
 
     public int getPlayDelay();
+    
+    public double getPlayStep();
 
     public boolean isPlaying();
 

File: DesktopTimeline/src/org/gephi/desktop/timeline/RealTick.java
Patch:
@@ -108,6 +108,9 @@ public double getTickPosition(int index) {
         return (index * tick - (min - minTick)) / (max - min);
     }
 
+    /**
+     * Return 2 if multiple of 10, 1 if multiple of 5, 0 otherwise 
+     */
     public int getTickRank(int index) {
         double t = minTick + (index * tick);
         t = round(t, exponent >= 0 ? 1 : Math.abs(exponent));

File: DesktopTimeline/src/org/gephi/desktop/timeline/TickParameters.java
Patch:
@@ -57,9 +57,9 @@ public enum TickType {
     private final TickType type;
     private int width, height;
     private int fontSize = 12;
-    private double fontFactor = 7.;
+    private double fontFactor = 6.;
     private Font font = new Font("Helvetica", Font.PLAIN, fontSize);
-    private Color[] realColors = new Color[]{new Color(0x1E1E1E), new Color(0x5A5A5A), new Color(0xB4B4B4)};
+    private Color[] realColors = new Color[]{new Color(0xB4B4B4), new Color(0x5A5A5A), new Color(0x1E1E1E)};
     private Color[] dateColors = new Color[]{new Color(0x999999), new Color(0xCCCCCC)};
 
     public TickParameters(TickType type) {

File: DesktopTimeline/src/org/gephi/desktop/timeline/Sparkline.java
Patch:
@@ -72,6 +72,7 @@ public BufferedImage getImage(TimelineModel model, int width, int height) {
             parameters.setWidth(width);
             parameters.setHeight(height);
             parameters.setTransparentBackground(true);
+            parameters.setDrawArea(true);
             if (chart != null) {
                 image = draw();
             } else {

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineDrawer.java
Patch:
@@ -229,7 +229,7 @@ public void paintComponent(Graphics g) {
         //SPARKLINE
         if (model.getChart() != null) {
             BufferedImage spImage = sparkline.getImage(model, innerWidth, innerHeight - settings.topChartMargin);
-            g2d.drawImage(spImage, 0, innerY - settings.topChartMargin, null);
+            g2d.drawImage(spImage, 0, innerY + settings.topChartMargin, null);
         }
 
         // VISIBLE HOOK (THE LITTLE GREEN RECTANGLE ON EACH SIDE) WIDTH

File: TimelineAPI/src/org/gephi/timeline/api/TimelineModelEvent.java
Patch:
@@ -49,7 +49,7 @@ public final class TimelineModelEvent {
 
     public enum EventType {
 
-        MODEL, MIN_MAX, INTERVAL, CUSTOM_BOUNDS, ENABLED, PLAY_START, PLAY_STOP, CHART
+        MODEL, MIN_MAX, INTERVAL, CUSTOM_BOUNDS, ENABLED, PLAY_START, PLAY_STOP, CHART, VALID_BOUNDS
     };
     private final EventType type;
     private final TimelineModel source;

File: DataLaboratoryAPI/src/org/gephi/datalab/api/GraphElementsController.java
Patch:
@@ -205,8 +205,8 @@ public interface GraphElementsController {
     /**
      * Merges 2 or more nodes into a new one node that has all the edges of the merged nodes.
      * An AttributeRowsMergeStrategy must be provided for each column of the nodes.
-     * @param nodes Nodes to merge
-     * @param selectedNode Main selected node of the nodes to merge
+     * @param nodes Nodes to merge (at least 1)
+     * @param selectedNode Main selected node of the nodes to merge (or null to use first node)
      * @param mergeStrategies Strategies to merge rows of each column of the nodes
      * @param deleteMergedNodes Indicates if merged nodes should be deleted
      * @return New resulting node

File: DataLaboratoryAPI/src/org/gephi/datalab/spi/rows/merge/AttributeRowsMergeStrategy.java
Patch:
@@ -58,7 +58,7 @@ public interface AttributeRowsMergeStrategy extends Manipulator{
      * Prepare column and rows for this merge strategy.
      * At least <b>1</b> row will be set up to merge always.
      * @param rows Rows to merge
-     * @param selectedRow Main row fo the row group to merge
+     * @param selectedRow Main row of the row group to merge
      * @param column Column to merge
      */
     void setup(Attributes[] rows, Attributes selectedRow, AttributeColumn column);

File: DataLaboratoryPlugin/src/org/gephi/datalab/plugin/manipulators/nodes/ui/MergeNodesUI.java
Patch:
@@ -79,7 +79,7 @@ public final class MergeNodesUI extends JPanel implements ManipulatorUI {
     private StrategyComboBox[] strategiesComboBoxes;
     private StrategyConfigurationButton[] strategiesConfigurationButtons;
 
-    /** Creates new form ImportCSVUIVisualPanel2 */
+    /** Creates new form MergeNodesUI */
     public MergeNodesUI() {
         initComponents();
     }

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -1063,7 +1063,7 @@ public JPopupPanel getPopupPanel(JCommandButton jcb) {
                         lastManipulatorType = m.getType();
                         pluginsPanel.addButtonToLastGroup(preparePluginGeneralActionsButton(m));
                     }
-                    JCommandPopupMenu popup = new JCommandPopupMenu(pluginsPanel, 8, 8);
+                    JCommandPopupMenu popup = new JCommandPopupMenu(pluginsPanel,4,20);
                     return popup;
                 }
             });
@@ -1083,7 +1083,7 @@ private JCommandButton preparePluginGeneralActionsButton(final PluginGeneralActi
         button.setDisplayState(CommandButtonDisplayState.BIG);
         button.setCommandButtonKind(JCommandButton.CommandButtonKind.ACTION_ONLY);
         if (m.getDescription() != null && !m.getDescription().isEmpty()) {
-            button.setToolTipText(m.getDescription());
+            button.setPopupRichTooltip(new RichTooltip(NbBundle.getMessage(DataTableTopComponent.class, "DataTableTopComponent.RichToolTip.title.text"), m.getDescription()));
         }
         if (m.canExecute()) {
             button.addActionListener(new ActionListener() {

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -99,7 +99,7 @@ public void render(Item item, RenderTarget target, PreviewProperties properties)
             float radius = properties.getFloatValue(PreviewProperty.EDGE_RADIUS);
 
             size *= weight;
-            radius = -(radius + (Float) targetItem.getData(NodeItem.SIZE) / 2f + properties.getFloatValue(PreviewProperty.NODE_BORDER_WIDTH));
+            radius = -(radius + (Float) targetItem.getData(NodeItem.SIZE) / 2f + Math.max(0, properties.getFloatValue(PreviewProperty.NODE_BORDER_WIDTH)));
 
             //Avoid arrow from passing the node's center:
             if (radius > 0) {

File: DataLaboratoryAPI/src/org/gephi/datalab/impl/GraphElementsControllerImpl.java
Patch:
@@ -518,8 +518,9 @@ private Node buildNode(String label) {
     }
 
     private Node buildNode(String label, String id) {
-        Node newNode = buildNode(label);
-        getGraph().setId(newNode, id);
+        Node newNode = Lookup.getDefault().lookup(GraphController.class).getModel().factory().newNode(id);
+        newNode.getNodeData().setSize(DEFAULT_NODE_SIZE);
+        newNode.getNodeData().setLabel(label);
         return newNode;
     }
 

File: DesktopPerspective/src/org/gephi/desktop/perspective/plugin/LaboratoryPerspective.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.perspective.plugin;
 
 import javax.swing.Icon;
-import org.gephi.desktop.perspective.spi.Perspective;
+import org.gephi.perspective.spi.Perspective;
 import org.openide.util.ImageUtilities;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;

File: DesktopPerspective/src/org/gephi/desktop/perspective/plugin/OverviewPerspective.java
Patch:
@@ -43,7 +43,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.perspective.plugin;
 
 import javax.swing.Icon;
-import org.gephi.desktop.perspective.spi.Perspective;
+import org.gephi.perspective.spi.Perspective;
 import org.openide.util.ImageUtilities;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;

File: DesktopPerspective/src/org/gephi/desktop/perspective/plugin/PreviewPerspective.java
Patch:
@@ -42,7 +42,7 @@ Development and Distribution License("CDDL") (collectively, the
 package org.gephi.desktop.perspective.plugin;
 
 import javax.swing.Icon;
-import org.gephi.desktop.perspective.spi.Perspective;
+import org.gephi.perspective.spi.Perspective;
 import org.openide.util.ImageUtilities;
 import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;

File: PerspectiveAPI/src/org/gephi/perspective/spi/Perspective.java
Patch:
@@ -39,7 +39,7 @@ Development and Distribution License("CDDL") (collectively, the
 
 Portions Copyrighted 2011 Gephi Consortium.
 */
-package org.gephi.desktop.perspective.spi;
+package org.gephi.perspective.spi;
 
 import javax.swing.Icon;
 

File: DataLaboratoryAPI/src/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -671,7 +671,7 @@ public void importCSVToEdgesTable(File file, Character separator, Charset charse
                     if (edge == null) {
                         //Not from source to target but undirected and reverse?
                         edge = graph.getEdge(target, source);
-                        if(edge.isDirected()){
+                        if(edge != null && edge.isDirected()){
                             edge=null;
                         }
                     }

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -187,7 +187,7 @@ public PreviewProperty[] getProperties() {
     }
 
     public boolean isRendererForitem(Item item, PreviewProperties properties) {
-        return item instanceof EdgeItem && properties.getBooleanValue(PreviewProperty.DIRECTED)
+        return item instanceof EdgeItem && properties.getBooleanValue(PreviewProperty.SHOW_EDGES) && properties.getBooleanValue(PreviewProperty.DIRECTED)
                 && (Boolean) item.getData(EdgeItem.DIRECTED) && !(Boolean) item.getData(EdgeItem.SELF_LOOP)
                 && !properties.getBooleanValue(PreviewProperty.MOVING);
     }

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -187,7 +187,8 @@ public PreviewProperty[] getProperties() {
     }
 
     public boolean isRendererForitem(Item item, PreviewProperties properties) {
-        return item instanceof EdgeItem && properties.getBooleanValue(PreviewProperty.DIRECTED)
+        return item instanceof EdgeItem && properties.getBooleanValue(PreviewProperty.SHOW_EDGES)
+                && properties.getBooleanValue(PreviewProperty.DIRECTED)
                 && (Boolean) item.getData(EdgeItem.DIRECTED) && !(Boolean) item.getData(EdgeItem.SELF_LOOP)
                 && !properties.getBooleanValue(PreviewProperty.MOVING);
     }

File: ProjectAPI/src/org/gephi/project/io/LoadTask.java
Patch:
@@ -100,7 +100,7 @@ public void report(String message, String errorType, Object relatedInformation,
                     System.out.println("Error:" + errorType + ", message : " + message);
                 }
             });
-            InputStreamReader isReader = new InputStreamReader(fileObject.getInputStream());
+            InputStreamReader isReader = new InputStreamReader(fileObject.getInputStream(), "UTF-8");
             Xml10FilterReader filterReader = new Xml10FilterReader(isReader);
             XMLStreamReader reader = inputFactory.createXMLStreamReader(filterReader);
 

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewUIControllerImpl.java
Patch:
@@ -154,6 +154,7 @@ public void disable() {
         previewController = Lookup.getDefault().lookup(PreviewController.class);
 
         //Register editors
+        //Overriding default Preview API basic editors that don't support CustomEditor
         PropertyEditorManager.registerEditor(EdgeColor.class, EdgeColorPropertyEditor.class);
         PropertyEditorManager.registerEditor(DependantOriginalColor.class, DependantOriginalColorPropertyEditor.class);
         PropertyEditorManager.registerEditor(DependantColor.class, DependantColorPropertyEditor.class);

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -185,8 +185,9 @@ public void initTarget(PreviewUIModel previewUIModel) {
                 sketch.registerPre(processingListener);
                 sketchPanel.add(sketch, BorderLayout.CENTER);
             }
-        } else if (previewUIModel == null && target != null) {
+        } else if (previewUIModel == null) {
             sketchPanel.remove(sketch);
+            target=null;
         }
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImpl.java
Patch:
@@ -175,7 +175,7 @@ public EdgeIterable getEdges() {
     //ClusteredGraph
     public EdgeIterable getEdgesTree() {
         readLock();
-        return dhns.newEdgeIterable(new EdgeIterator(structure, new TreeIterator(structure, true, Tautology.instance), false, Tautology.instance, Tautology.instance));
+        return dhns.newEdgeIterable(new EdgeIterator(structure, new TreeIterator(structure, false, Tautology.instance), false, Tautology.instance, Tautology.instance));
     }
 
     //Directed

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalMixedGraphImpl.java
Patch:
@@ -182,7 +182,7 @@ public EdgeIterable getEdges() {
 
     public EdgeIterable getEdgesTree() {
         readLock();
-        return dhns.newEdgeIterable(new EdgeIterator(structure, new TreeIterator(structure, true, Tautology.instance), false, Tautology.instance, Tautology.instance));
+        return dhns.newEdgeIterable(new EdgeIterator(structure, new TreeIterator(structure, false, Tautology.instance), false, Tautology.instance, Tautology.instance));
     }
 
     public NodeIterable getNeighbors(Node node) {

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImpl.java
Patch:
@@ -134,7 +134,7 @@ public EdgeIterable getEdges() {
 
     public EdgeIterable getEdgesTree() {
         readLock();
-        return dhns.newEdgeIterable(new EdgeIterator(structure, new TreeIterator(structure, true, Tautology.instance), true, Tautology.instance, Tautology.instance));
+        return dhns.newEdgeIterable(new EdgeIterator(structure, new TreeIterator(structure, false, Tautology.instance), true, Tautology.instance, Tautology.instance));
     }
 
     public EdgeIterable getEdges(Node node) {

File: ToolsPlugin/src/org/gephi/tools/plugin/HeatMap.java
Patch:
@@ -44,6 +44,8 @@ Development and Distribution License("CDDL") (collectively, the
 import java.awt.Color;
 import java.text.DecimalFormat;
 import java.util.Map.Entry;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 import javax.swing.Icon;
 import javax.swing.ImageIcon;
 import javax.swing.JPanel;
@@ -153,7 +155,7 @@ public void clickNodes(Node[] nodes) {
                     n.getNodeData().setColor(c.getRed() / 255f, c.getGreen() / 255f, c.getBlue() / 255f);
                     heatMapPanel.setStatus(NbBundle.getMessage(HeatMap.class, "HeatMap.status.maxdistance") + new DecimalFormat("#.##").format(algorithm.getMaxDistance()));
                 } catch (Exception e) {
-                    e.printStackTrace();
+                    Logger.getLogger("").log(Level.SEVERE, "", e);
                 }
             }
         };

File: AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java
Patch:
@@ -94,7 +94,7 @@ public void disable() {
         }
     }
 
-    public AttributeModel getModel() {
+    public synchronized AttributeModel getModel() {
         Workspace workspace = projectController.getCurrentWorkspace();
         if (workspace != null) {
             AttributeModel model = workspace.getLookup().lookup(AttributeModel.class);
@@ -108,7 +108,7 @@ public AttributeModel getModel() {
         return null;
     }
 
-    public AttributeModel getModel(Workspace workspace) {
+    public synchronized AttributeModel getModel(Workspace workspace) {
         AttributeModel model = workspace.getLookup().lookup(AttributeModel.class);
         if (model != null) {
             return model;

File: FiltersAPI/src/org/gephi/filters/api/Range.java
Patch:
@@ -52,6 +52,7 @@ public final class Range {
     private Number upperNumber;
     private Number min;
     private Number max;
+    private boolean autoUpdateBounds;
 
     public Range(Double lowerBound, Double upperBound) {
         lowerNumber = lowerBound;
@@ -206,9 +207,6 @@ public void setMinMax(Number min, Number max) {
         if (rangeType != min.getClass() || rangeType != max.getClass()) {
             throw new IllegalArgumentException("value must be " + rangeType.getName());
         }
-        if(min.equals(max) || lowerNumber.equals(upperNumber)) {
-            return;
-        }
         if (rangeType == Double.class) {
             Double minD = (Double) min;
             Double maxD = (Double) max;

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/NodeDataTable.java
Patch:
@@ -101,6 +101,7 @@ Development and Distribution License("CDDL") (collectively, the
 import org.gephi.desktop.datalab.utils.TimeIntervalsRenderer;
 import org.gephi.dynamic.api.DynamicController;
 import org.gephi.dynamic.api.DynamicModel;
+import org.netbeans.swing.etable.ETableColumnModel;
 
 /**
  *
@@ -266,6 +267,7 @@ public void refreshModel(HierarchicalGraph graph, AttributeColumn[] cols, final
         }
         NodeTreeModel nodeTreeModel = new NodeTreeModel(graph.wrapToTreeNode());
         final OutlineModel mdl = DefaultOutlineModel.createOutlineModel(nodeTreeModel, new NodeRowModel(cols), true);
+        ((ETableColumnModel)outlineTable.getColumnModel()).clearSortedColumns();//Outline has problems when a sorted column in the previous model is not in the new model
         outlineTable.setRootVisible(false);
         outlineTable.setRenderDataProvider(new NodeRenderer());
         outlineTable.setModel(mdl);

File: FiltersAPI/src/org/gephi/filters/api/Range.java
Patch:
@@ -206,6 +206,9 @@ public void setMinMax(Number min, Number max) {
         if (rangeType != min.getClass() || rangeType != max.getClass()) {
             throw new IllegalArgumentException("value must be " + rangeType.getName());
         }
+        if(min.equals(max) || lowerNumber.equals(upperNumber)) {
+            return;
+        }
         if (rangeType == Double.class) {
             Double minD = (Double) min;
             Double maxD = (Double) max;

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeRangeBuilder.java
Patch:
@@ -173,7 +173,7 @@ public static class AttributeRangeFilter implements RangeFilter, Filter {
         private AttributeColumn column;
         private DynamicAttributesHelper dynamicHelper = new DynamicAttributesHelper(this, null);
         //States
-        private Comparable[] values;
+        private Comparable[] values = new Comparable[0];
 
         public AttributeRangeFilter(AttributeColumn column) {
             this.column = column;
@@ -283,7 +283,7 @@ public Range getRange() {
         }
 
         public void setRange(Range range) {
-            if (range.getMinimum() == null && range.getMaximum() == null) {
+            if (range.getMinimum() == null && range.getMaximum() == null && this.range != null) {
                 //Opening project
                 this.range = new Range(range.getLowerBound(), range.getUpperBound(), this.range.getMinimum(), this.range.getMaximum());
             } else {

File: FiltersPlugin/src/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java
Patch:
@@ -106,7 +106,7 @@ public static class EdgeWeightFilter implements RangeFilter, EdgeFilter {
         private Range range;
         private DynamicAttributesHelper dynamicHelper = new DynamicAttributesHelper(this, null);
         //States
-        private List<Float> values;
+        private List<Float> values = new ArrayList<Float>();
 
         public String getName() {
             return NbBundle.getMessage(EdgeWeightBuilder.class, "EdgeWeightBuilder.name");
@@ -172,7 +172,7 @@ public Range getRange() {
         }
 
         public void setRange(Range range) {
-            if (range.getMinimum() == null && range.getMaximum() == null) {
+            if (range.getMinimum() == null && range.getMaximum() == null && this.range != null) {
                 //Opening project
                 this.range = new Range(range.getLowerBound(), range.getUpperBound(), this.range.getMinimum(), this.range.getMaximum());
             } else {

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/DegreeRangeBuilder.java
Patch:
@@ -103,7 +103,7 @@ public static class DegreeRangeFilter implements RangeFilter, NodeFilter {
 
         private Range range;
         //States
-        private List<Integer> values;
+        private List<Integer> values = new ArrayList<Integer>();
 
         public String getName() {
             return NbBundle.getMessage(DegreeRangeBuilder.class, "DegreeRangeBuilder.name");
@@ -169,7 +169,7 @@ public Range getRange() {
         }
 
         public void setRange(Range range) {
-            if (range.getMinimum() == null && range.getMaximum() == null) {
+            if (range.getMinimum() == null && range.getMaximum() == null && this.range != null) {
                 //Opening project
                 this.range = new Range(range.getLowerBound(), range.getUpperBound(), this.range.getMinimum(), this.range.getMaximum());
             } else {

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/InDegreeRangeBuilder.java
Patch:
@@ -105,7 +105,7 @@ public static class InDegreeRangeFilter implements RangeFilter, NodeFilter {
 
         private Range range;
         //States
-        private List<Integer> values;
+        private List<Integer> values = new ArrayList<Integer>();
 
         public String getName() {
             return NbBundle.getMessage(InDegreeRangeBuilder.class, "InDegreeRangeBuilder.name");
@@ -171,7 +171,7 @@ public Range getRange() {
         }
 
         public void setRange(Range range) {
-            if (range.getMinimum() == null && range.getMaximum() == null) {
+            if (range.getMinimum() == null && range.getMaximum() == null && this.range != null) {
                 //Opening project
                 this.range = new Range(range.getLowerBound(), range.getUpperBound(), this.range.getMinimum(), this.range.getMaximum());
             } else {

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/MutualDegreeRangeBuilder.java
Patch:
@@ -105,7 +105,7 @@ public static class MutualDegreeRangeFilter implements RangeFilter, NodeFilter {
 
         private Range range;
         //States
-        private List<Integer> values;
+        private List<Integer> values = new ArrayList<Integer>();
 
         public String getName() {
             return NbBundle.getMessage(MutualDegreeRangeFilter.class, "MutualDegreeRangeBuilder.name");
@@ -171,7 +171,7 @@ public Range getRange() {
         }
 
         public void setRange(Range range) {
-            if (range.getMinimum() == null && range.getMaximum() == null) {
+            if (range.getMinimum() == null && range.getMaximum() == null && this.range != null) {
                 //Opening project
                 this.range = new Range(range.getLowerBound(), range.getUpperBound(), this.range.getMinimum(), this.range.getMaximum());
             } else {

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/OutDegreeRangeBuilder.java
Patch:
@@ -107,7 +107,7 @@ public static class OutDegreeRangeFilter implements RangeFilter, NodeFilter {
 
         private Range range;
         //States
-        private List<Integer> values;
+        private List<Integer> values = new ArrayList<Integer>();
 
         public String getName() {
             return NbBundle.getMessage(OutDegreeRangeBuilder.class, "OutDegreeRangeBuilder.name");
@@ -173,7 +173,7 @@ public Range getRange() {
         }
 
         public void setRange(Range range) {
-            if (range.getMinimum() == null && range.getMaximum() == null) {
+            if (range.getMinimum() == null && range.getMaximum() == null && this.range != null) {
                 //Opening project
                 this.range = new Range(range.getLowerBound(), range.getUpperBound(), this.range.getMinimum(), this.range.getMaximum());
             } else {

File: FiltersPluginUI/src/org/gephi/ui/filters/plugin/graph/KCorePanel.java
Patch:
@@ -70,6 +70,7 @@ public void stateChanged(ChangeEvent evt) {
 
     public void setup(KCoreFilter filter) {
         this.filter = filter;
+        degreeSpinner.setModel(new javax.swing.SpinnerNumberModel(filter.getK(), Integer.valueOf(1), null, Integer.valueOf(1)));
         degreeSpinner.getModel().addChangeListener(WeakListeners.change(KCorePanel.this, degreeSpinner.getModel()));
     }
 

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/GiantComponentBuilder.java
Patch:
@@ -81,7 +81,6 @@ public static class GiantComponentFilter implements NodeFilter {
         private AttributeColumn column;
 
         public GiantComponentFilter() {
-            attributeModel = Lookup.getDefault().lookup(AttributeController.class).getModel();
         }
 
         public boolean init(Graph graph) {
@@ -93,6 +92,7 @@ public boolean init(Graph graph) {
                 undirectedGraph = graph.getView().getGraphModel().getHierarchicalUndirectedGraph(graph.getView());
             }
 
+            attributeModel = Lookup.getDefault().lookup(AttributeController.class).getModel(graph.getGraphModel().getWorkspace());
             cc.weaklyConnected(undirectedGraph, attributeModel);
             componentId = cc.getGiantComponent();
             column = attributeModel.getNodeTable().getColumn(ConnectedComponents.WEAKLY);

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingPersistenceProvider.java
Patch:
@@ -91,9 +91,9 @@ public void writeXML(RankingUIModel model, XMLStreamWriter writer) throws XMLStr
                 Transformer transformer = t.getValue();
                 if (transformer instanceof Serializable) {
                     writer.writeStartElement(TRANSFORMER);
-                    writer.writeAttribute("name", entry.getKey());
+                    writer.writeAttribute("name", t.getKey());
                     writer.writeAttribute(ELEMENT_TYPE, entry.getKey());
-                    if (model.currentTransformer.get(entry.getKey()).equals(t)) {
+                    if (model.currentTransformer.get(entry.getKey()).equals(transformer)) {
                         writer.writeAttribute(TRANSFORMER_CURRENT, "true");
                     }
 

File: RankingPlugin/src/org/gephi/ranking/plugin/transformer/AbstractTransformer.java
Patch:
@@ -62,6 +62,7 @@ public void setUpperBound(float upperBound) {
         this.upperBound = upperBound;
     }
 
+    @Override
     public boolean isInBounds(float value) {
         return value >= lowerBound && value <= upperBound;
     }

File: RankingPlugin/src/org/gephi/ranking/plugin/transformer/LabelColorTransformerBuilder.java
Patch:
@@ -51,7 +51,7 @@ public String getName() {
         return Transformer.LABEL_COLOR;
     }
 
-    public class LabelColorTransformer extends AbstractColorTransformer<Renderable> {
+    public static class LabelColorTransformer extends AbstractColorTransformer<Renderable> {
 
         @Override
         public Object transform(Renderable target, float normalizedValue) {

File: AttributesImpl/src/org/gephi/data/attributes/AttributeRowImpl.java
Patch:
@@ -107,7 +107,7 @@ public void setValue(AttributeValue value) {
         if (attributeTable.getColumn(column.getIndex()) != column) {
             column = attributeTable.getColumn(column);
             if (column == null) {
-                throw new IllegalArgumentException("The value column doesn't exist");
+                throw new IllegalArgumentException("The "+attributeTable.getName()+" value column "+value.getColumn().getId()+" with index "+value.getColumn().getIndex()+" doesn't exist");
             }
             value = attributeTable.getFactory().newValue(column, value.getValue());
         }

File: AttributesImpl/src/org/gephi/data/attributes/serialization/AttributeRowSerializer.java
Patch:
@@ -157,7 +157,7 @@ public void readRow(XMLStreamReader reader, AbstractAttributeModel model, Attrib
                         AttributeType type = col.getType();
                         Object v = type.parse(value);
                         v = model.getManagedValue(v, type);
-                        row.setValue(col, value);
+                        row.setValue(col, v);
                     }
                     value = "";
                     col = null;

File: DynamicImpl/src/org/gephi/dynamic/DynamicControllerImpl.java
Patch:
@@ -107,7 +107,7 @@ public void disable() {
     }
 
     @Override
-    public DynamicModel getModel() {
+    public synchronized DynamicModel getModel() {
         if (model == null) {
             ProjectController projectController = Lookup.getDefault().lookup(ProjectController.class);
             if (projectController.getCurrentWorkspace() != null) {
@@ -119,7 +119,7 @@ public DynamicModel getModel() {
     }
 
     @Override
-    public DynamicModel getModel(Workspace workspace) {
+    public synchronized  DynamicModel getModel(Workspace workspace) {
         if (workspace != null) {
             DynamicModel m = workspace.getLookup().lookup(DynamicModel.class);
             if (m != null) {

File: DynamicImpl/src/org/gephi/dynamic/DynamicModelImpl.java
Patch:
@@ -342,7 +342,8 @@ public void setVisibleTimeInterval(TimeInterval visibleTimeInterval) {
 
     @Override
     public boolean isDynamicGraph() {
-        return !Double.isInfinite(timeIntervalIndex.getMax()) || !Double.isInfinite(timeIntervalIndex.getMin());
+        boolean res = !Double.isInfinite(timeIntervalIndex.getMax()) || !Double.isInfinite(timeIntervalIndex.getMin());
+        return res || !nodeDynamicColumns.isEmpty() || !edgeDynamicColumns.isEmpty();
     }
 
     @Override

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphStructure.java
Patch:
@@ -106,8 +106,8 @@ public GraphViewImpl copyView(GraphViewImpl view) {
             if (!node.getEdgesOutTree().isEmpty()) {
                 for (edgeIterator.setNode(node.getEdgesOutTree()); edgeIterator.hasNext();) {
                     AbstractEdge edge = edgeIterator.next();
-                    AbstractNode sourceCopy = newStructure.getNodeAt(edge.getSource().getPre());
-                    AbstractNode targetCopy = newStructure.getNodeAt(edge.getTarget().getPre());
+                    AbstractNode sourceCopy = newStructure.getNodeAt(node.getPre());
+                    AbstractNode targetCopy = newStructure.getNodeAt(((AbstractNode) edge.getTarget().getNodeData().getNode(view.getViewId())).getPre());
                     sourceCopy.getEdgesOutTree().add(edge);
                     targetCopy.getEdgesInTree().add(edge);
                     addToDictionnary(edge);

File: DesktopTools/src/org/gephi/desktop/tools/SelectionBar.java
Patch:
@@ -103,7 +103,7 @@ public void refresh() {
             }
         } else {
             mouseSelection = false;
-            statusLabel.setText("No selection");
+            statusLabel.setText(NbBundle.getMessage(SelectionBar.class, "SelectionBar.statusLabel.noSelection"));
         }
     }
 
@@ -123,8 +123,7 @@ private void initComponents() {
         setPreferredSize(new java.awt.Dimension(150, 28));
         setLayout(new java.awt.GridBagLayout());
 
-        statusLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
-        statusLabel.setText(org.openide.util.NbBundle.getMessage(SelectionBar.class, "SelectionBar.statusLabel.text")); // NOI18N
+        statusLabel.setFont(statusLabel.getFont().deriveFont((float)10));
         statusLabel.setPreferredSize(new java.awt.Dimension(34, 28));
         gridBagConstraints = new java.awt.GridBagConstraints();
         gridBagConstraints.gridx = 0;

File: ToolsPlugin/src/org/gephi/ui/tools/plugin/PainterPanel.java
Patch:
@@ -57,7 +57,7 @@ private void initComponents() {
         colorButton.setContentAreaFilled(false);
         colorButton.setFocusPainted(false);
 
-        labelColor.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
+        labelColor.setFont(labelColor.getFont().deriveFont((float)10));
         labelColor.setText(org.openide.util.NbBundle.getMessage(PainterPanel.class, "PainterPanel.labelColor.text")); // NOI18N
 
         javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
@@ -69,7 +69,7 @@ private void initComponents() {
                 .addComponent(labelColor)
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                 .addComponent(colorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(468, Short.MAX_VALUE))
+                .addContainerGap(465, Short.MAX_VALUE))
         );
         layout.setVerticalGroup(
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)

File: ToolsPlugin/src/org/gephi/ui/tools/plugin/SizerPanel.java
Patch:
@@ -69,7 +69,7 @@ private void initComponents() {
 
         setLayout(new java.awt.GridBagLayout());
 
-        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
+        jLabel1.setFont(jLabel1.getFont().deriveFont((float)10));
         jLabel1.setText(org.openide.util.NbBundle.getMessage(SizerPanel.class, "SizerPanel.jLabel1.text")); // NOI18N
         gridBagConstraints = new java.awt.GridBagConstraints();
         gridBagConstraints.gridx = 0;
@@ -81,7 +81,7 @@ private void initComponents() {
         gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
         add(jLabel1, gridBagConstraints);
 
-        labelSize.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
+        labelSize.setFont(labelSize.getFont().deriveFont((float)10));
         labelSize.setText(org.openide.util.NbBundle.getMessage(SizerPanel.class, "SizerPanel.labelSize.text")); // NOI18N
         gridBagConstraints = new java.awt.GridBagConstraints();
         gridBagConstraints.gridx = 1;
@@ -90,7 +90,7 @@ private void initComponents() {
         gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
         add(labelSize, gridBagConstraints);
 
-        sizeLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
+        sizeLabel.setFont(sizeLabel.getFont().deriveFont((float)10));
         sizeLabel.setText(org.openide.util.NbBundle.getMessage(SizerPanel.class, "SizerPanel.sizeLabel.text")); // NOI18N
         gridBagConstraints = new java.awt.GridBagConstraints();
         gridBagConstraints.gridx = 2;

File: UIComponents/src/org/gephi/ui/components/JColorBlackWhiteSwitcher.java
Patch:
@@ -125,9 +125,9 @@ public void paintIcon(Component c, Graphics g, int x, int y) {
 
     private void refreshIcon() {
         if (color.equals(Color.WHITE)) {//White color, show a lightbulb on:
-            setIcon(ImageUtilities.loadImageIcon("/org/gephi/ui/components/resources/light-bulb.png", false));
+            setIcon(ImageUtilities.loadImageIcon("org/gephi/ui/components/resources/light-bulb.png", false));
         } else if (color.equals(Color.BLACK)) {//Black color, show a lightbulb off:
-            setIcon(ImageUtilities.loadImageIcon("/org/gephi/ui/components/resources/light-bulb-off.png", false));
+            setIcon(ImageUtilities.loadImageIcon("org/gephi/ui/components/resources/light-bulb-off.png", false));
         } else {
             setIcon(new ColorIcon());//Other color, show the color in a square as the icon
         }

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewUIControllerImpl.java
Patch:
@@ -39,6 +39,7 @@ License, or (at your option) any later version.
 import org.gephi.preview.api.PreviewModel;
 import org.gephi.preview.api.PreviewPreset;
 import org.gephi.preview.api.PreviewProperty;
+import org.gephi.preview.presets.DefaultCurved;
 import org.gephi.preview.presets.DefaultPreset;
 import org.gephi.preview.types.DependantColor;
 import org.gephi.preview.types.DependantOriginalColor;
@@ -258,7 +259,7 @@ public PreviewUIModel getModel() {
     }
 
     public PreviewPreset[] getDefaultPresets() {
-        return new PreviewPreset[]{new DefaultPreset()};
+        return new PreviewPreset[]{new DefaultPreset(), new DefaultCurved()};
     }
 
     public PreviewPreset[] getUserPresets() {

File: DesktopStatistics/src/org/gephi/desktop/statistics/DynamicSettingsPanel.java
Patch:
@@ -37,7 +37,6 @@ License, or (at your option) any later version.
 import org.gephi.lib.validation.PositiveNumberValidator;
 import org.gephi.statistics.spi.DynamicStatistics;
 import org.gephi.ui.components.richtooltip.RichTooltip;
-import org.gephi.ui.utils.UIUtils;
 import org.netbeans.validation.api.Problems;
 import org.netbeans.validation.api.Validator;
 import org.netbeans.validation.api.builtin.Validators;
@@ -47,7 +46,6 @@ License, or (at your option) any later version.
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.openide.util.NbPreferences;
-import org.openide.util.Utilities;
 
 /**
  *
@@ -130,7 +128,7 @@ public void setup(DynamicStatistics dynamicStatistics) {
         //Window and tick
         if (model.getTimeFormat().equals(DynamicModel.TimeFormat.DOUBLE)) {
             windowTextField.setText(dynamicStatistics.getWindow() + "");
-            tickTextField.setText(dynamicStatistics.getWindow() + "");
+            tickTextField.setText(dynamicStatistics.getTick() + "");
         } else {
             windowTextField.setText("" + windowTimeUnit.convert((long) dynamicStatistics.getWindow(), TimeUnit.MILLISECONDS));
             tickTextField.setText("" + tickTimeUnit.convert((long) dynamicStatistics.getTick(), TimeUnit.MILLISECONDS));

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -168,9 +168,9 @@ public void taskFinished(LongTask task) {
             JPanel settingsPanel = statisticsUI.getSettingsPanel();
             if (currentStatistics instanceof DynamicStatistics) {
                 DynamicSettingsPanel dynamicPanel = new DynamicSettingsPanel();
-                dynamicPanel.setup((DynamicStatistics) currentStatistics);
                 statisticsUI.setup(currentStatistics);
-
+                dynamicPanel.setup((DynamicStatistics) currentStatistics);
+                
                 JPanel dynamicSettingsPanel = DynamicSettingsPanel.createCounpoundPanel(dynamicPanel, settingsPanel);
                 final DialogDescriptor dd = new DialogDescriptor(dynamicSettingsPanel, NbBundle.getMessage(StatisticsTopComponent.class, "StatisticsFrontEnd.settingsPanel.title", builder.getName()));
                 if (dynamicSettingsPanel instanceof ValidationPanel) {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ModularityPanel.java
Patch:
@@ -65,12 +65,12 @@ private void initComponents() {
         this.setLayout(layout);
         layout.setHorizontalGroup(
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
+            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
             .addGroup(layout.createSequentialGroup()
                 .addContainerGap()
                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(randomizeCheckbox)
-                    .addComponent(desriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
+                    .addComponent(desriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                 .addContainerGap())
         );
         layout.setVerticalGroup(
@@ -80,7 +80,7 @@ private void initComponents() {
                 .addGap(18, 18, 18)
                 .addComponent(randomizeCheckbox)
                 .addGap(46, 46, 46)
-                .addComponent(desriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
+                .addComponent(desriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                 .addContainerGap())
         );
     }// </editor-fold>//GEN-END:initComponents

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/EdgeLabelRenderer.java
Patch:
@@ -69,7 +69,7 @@ public class EdgeLabelRenderer implements Renderer {
     public static final String LABEL_Y = "edge.label.y";
     //Default values
     protected final boolean defaultShowLabels = true;
-    protected final Font defaultFont = new Font(Font.SANS_SERIF, Font.PLAIN, 10);
+    protected final Font defaultFont = new Font("Arial", Font.PLAIN, 10);
     protected final boolean defaultShorten = false;
     protected final DependantOriginalColor defaultColor = new DependantOriginalColor(DependantOriginalColor.Mode.ORIGINAL);
     protected final int defaultMaxChar = 30;

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/NodeLabelRenderer.java
Patch:
@@ -71,7 +71,7 @@ public class NodeLabelRenderer implements Renderer {
     public static final String FONT_SIZE = "node.label.fontSize";
     //Default values
     protected final boolean defaultShowLabels = true;
-    protected final Font defaultFont = new Font(Font.SANS_SERIF, Font.PLAIN, 12);
+    protected final Font defaultFont = new Font("Arial", Font.PLAIN, 12);
     protected final boolean defaultShorten = false;
     protected final DependantOriginalColor defaultColor = new DependantOriginalColor(DependantOriginalColor.Mode.ORIGINAL);
     protected final int defaultMaxChar = 30;

File: PreviewAPI/src/org/gephi/preview/PDFRenderTargetBuilder.java
Patch:
@@ -103,7 +103,7 @@ public PDFRenderTargetImpl(PdfContentByte cb, double width, double height, doubl
             double scale = (float) (ratioWidth < ratioHeight ? ratioWidth : ratioHeight);
             double translateX = (marginLeft + pageWidth / 2.) / scale;
             double translateY = (marginBottom + pageHeight / 2.) / scale;
-            cb.transform(AffineTransform.getTranslateInstance(-centerX * scale, -centerY * scale));
+            cb.transform(AffineTransform.getTranslateInstance(-centerX * scale, centerY * scale));
             cb.transform(AffineTransform.getScaleInstance(scale, scale));
             cb.transform(AffineTransform.getTranslateInstance(translateX, translateY));
 

File: PreviewAPI/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -185,6 +185,7 @@ public void updateDimensions(PreviewModelImpl model, Item[] nodeItems) {
                 bottomRightY = y;
             }
         }
+
         float marginWidth = (bottomRightX - topLeftX) * (margin / 100f);
         float marginHeight = (bottomRightY - topLeftY) * (margin / 100f);
         topLeftX -= marginWidth;

File: PreviewAPI/src/org/gephi/preview/types/DependantOriginalColor.java
Patch:
@@ -55,7 +55,7 @@ public Mode getMode() {
     }
 
     public Color getColor(Color parentColor, Color originalColor) {
-        if (customColor == null) {
+        if (!mode.equals(Mode.CUSTOM)) {
             if (mode.equals(Mode.ORIGINAL) && originalColor != null) {
                 return originalColor;
             }

File: PreviewAPI/src/org/gephi/preview/types/EdgeColor.java
Patch:
@@ -39,11 +39,11 @@ public enum Mode {
 
         SOURCE, TARGET, MIXED, CUSTOM, ORIGINAL
     };
-    private Color customColor = Color.BLACK;
+    private Color customColor;
     private final Mode mode;
 
     public EdgeColor(Mode mode) {
-        customColor = null;
+        customColor = Color.BLACK;
         this.mode = mode;
     }
 

File: PreviewAPI/src/org/gephi/preview/types/DependantColor.java
Patch:
@@ -60,9 +60,9 @@ public Mode getMode() {
     }
     
     public Color getColor(Color parentColor) {
-        if (customColor == null) {
-            return parentColor;
+        if (mode.equals(Mode.CUSTOM) && customColor != null) {
+            return customColor;
         }
-        return customColor;
+        return parentColor;
     }
 }

File: PreviewAPI/src/org/gephi/preview/AbstractRenderTarget.java
Patch:
@@ -29,8 +29,8 @@ License, or (at your option) any later version.
  */
 public class AbstractRenderTarget implements LongTask {
 
-    private boolean cancel = false;
-    private ProgressTicket progressTicket;
+    protected boolean cancel = false;
+    protected ProgressTicket progressTicket;
 
     public boolean isCancelled() {
         return cancel;

File: PreviewAPI/src/org/gephi/preview/ProcessingRenderTargetBuilder.java
Patch:
@@ -20,18 +20,15 @@ License, or (at your option) any later version.
  */
 package org.gephi.preview;
 
-import java.awt.Color;
 import org.gephi.preview.api.PreviewController;
 import org.gephi.preview.api.PreviewModel;
-import org.gephi.preview.api.PreviewProperty;
 import org.gephi.preview.api.ProcessingTarget;
 import org.gephi.preview.api.RenderTarget;
 import org.gephi.preview.spi.RenderTargetBuilder;
 import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 import processing.core.PApplet;
 import processing.core.PGraphics;
-import processing.core.PGraphicsJava2D;
 
 /**
  *

File: PreviewAPI/src/org/gephi/preview/SVGRenderTargetBuilder.java
Patch:
@@ -120,6 +120,7 @@ public Element getTopElement(String name) {
             if (topElement == null) {
                 topElement = createElement("g");
                 topElement.setAttribute("id", name);
+                topElements.put(name, topElement);
                 document.getDocumentElement().appendChild(topElement);
             }
             return topElement;

File: PreviewAPI/src/org/gephi/preview/api/SVGTarget.java
Patch:
@@ -36,6 +36,7 @@ public interface SVGTarget extends RenderTarget {
     public static final String TOP_EDGES = "svg.top.edges";
     public static final String TOP_NODE_LABELS = "svg.top.node.labels";
     public static final String TOP_EDGE_LABELS = "svg.top.edge.labels";
+    public static final String TOP_ARROWS = "svg.top.arrows";
 
     public Element createElement(String qualifiedName);
 

File: PreviewAPI/src/org/gephi/preview/SVGRenderTargetBuilder.java
Patch:
@@ -34,8 +34,6 @@ License, or (at your option) any later version.
 import org.gephi.preview.api.RenderTarget;
 import org.gephi.preview.api.SVGTarget;
 import org.gephi.preview.spi.RenderTargetBuilder;
-import org.gephi.utils.longtask.spi.LongTask;
-import org.gephi.utils.progress.ProgressTicket;
 import org.openide.util.lookup.ServiceProvider;
 import org.w3c.dom.DOMImplementation;
 import org.w3c.dom.Document;

File: PreviewExport/src/org/gephi/io/exporter/preview/SVGExporter.java
Patch:
@@ -52,7 +52,6 @@ public class SVGExporter implements CharacterExporter, VectorExporter, LongTask
     private Writer writer;
     private SVGTarget target;
     //Settings
-    private final static float MARGIN = 25f;
     private boolean scaleStrokes = false;
 
     public boolean execute() {
@@ -71,7 +70,7 @@ public boolean execute() {
             t.addTranscodingHint(SVGTranscoder.KEY_XML_DECLARATION, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
 
             // sets transcoder input and output
-            TranscoderInput input = new TranscoderInput(doc);
+            TranscoderInput input = new TranscoderInput(target.getDocument());
 
             // performs transcoding
             try {

File: PreviewAPI/src/org/gephi/preview/PreviewModelImpl.java
Patch:
@@ -63,7 +63,7 @@ public PreviewModelImpl(Workspace workspace) {
         this.workspace = workspace;
     }
     
-    private void initProperties() {
+    private synchronized void initProperties() {
         if (properties == null) {
             properties = new PreviewProperties();
 

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/ArrowRenderer.java
Patch:
@@ -67,7 +67,7 @@ public void render(Item item, RenderTarget target, PreviewProperties properties)
         Color color = edgeColor.getColor((Color) item.getData(EdgeItem.COLOR),
                 (Color) sourceItem.getData(NodeItem.COLOR),
                 (Color) targetItem.getData(NodeItem.COLOR));
-        int alpha = (int) ((1f - properties.getFloatValue(PreviewProperty.EDGE_TRANSPARENCY)) * 255f);
+        int alpha = (int) ((properties.getFloatValue(PreviewProperty.EDGE_OPACITY) / 100f) * 255f);
         color = new Color(color.getRed(), color.getGreen(), color.getBlue(), alpha);
 
         //Size and radius

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingToolbar.java
Patch:
@@ -242,7 +242,7 @@ private DecoratedIcon getDecoratedIcon(Icon icon, final Transformer transformer)
         return new DecoratedIcon(icon, decoration, new DecoratedIcon.DecorationController() {
 
             public boolean isDecorated() {
-                return model.isAutoTransformer(transformer);
+                return model != null && model.isAutoTransformer(transformer);
             }
         });
     }

File: AttributesImpl/src/org/gephi/data/attributes/model/DataIndex.java
Patch:
@@ -54,8 +54,6 @@ License, or (at your option) any later version.
 public class DataIndex {
     @SuppressWarnings("rawtypes")
     private static final Class[] SUPPORTED_TYPES = {
-        Byte.class,       Short.class,          Integer.class,     Long.class,
-        Float.class,      Double.class,         Boolean.class,     Character.class,
         String.class,     BigInteger.class,     BigDecimal.class,  TimeInterval.class,
         ByteList.class,   ShortList.class,      IntegerList.class, LongList.class,
         FloatList.class,  DoubleList.class,     BooleanList.class, CharacterList.class,

File: PreviewAPI/src/org/gephi/preview/presets/DefaultPreset.java
Patch:
@@ -35,7 +35,7 @@ public class DefaultPreset extends PreviewPreset {
     public DefaultPreset() {
         super(NbBundle.getMessage(DefaultPreset.class, "Default.name"));
         
-        properties.put(PreviewProperty.EDGE_CURVED, Boolean.FALSE);
+        properties.put(PreviewProperty.EDGE_CURVED, Boolean.TRUE);
         properties.put(PreviewProperty.BACKGROUND_COLOR, Color.WHITE);
         properties.put(PreviewProperty.EDGE_RESCALE_WEIGHT, Boolean.FALSE);
         properties.put(PreviewProperty.NODE_LABEL_COLOR, new DependantOriginalColor(Color.BLACK));

File: PreviewPlugin/src/org/gephi/preview/plugin/renderers/EdgeRenderer.java
Patch:
@@ -181,7 +181,7 @@ public void renderSelfLoop(Item nodeItem, float thickness, Color color, PreviewP
     }
 
     public void renderCurvedEdge(Item edgeItem, Item sourceItem, Item targetItem, float thickness, Color color, PreviewProperties properties, RenderTarget renderTarget) {
-        Edge edge = (Edge) edgeItem;
+        Edge edge = (Edge) edgeItem.getSource();
         Float x1 = sourceItem.getData(NodeItem.X);
         Float x2 = targetItem.getData(NodeItem.X);
         Float y1 = sourceItem.getData(NodeItem.Y);

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Degree.java
Patch:
@@ -144,7 +144,7 @@ public void execute(HierarchicalGraph graph, AttributeModel attributeModel) {
             Progress.progress(progress, i);
         }
 
-        avgDegree /= graph.getNodeCount();
+        avgDegree /= (isDirected) ? 2 * graph.getNodeCount() : graph.getNodeCount();
 
         graph.readUnlockAll();
     }

File: DesktopPerspective/src/org/gephi/desktop/perspective/BannerComponent.java
Patch:
@@ -68,7 +68,7 @@ public void actionPerformed(ActionEvent e) {
         });
 
         //This defines the height of the banner bar
-        setPreferredSize(new Dimension(100, 45));
+        setPreferredSize(new Dimension(100, 35));
     }
 
     private void addGroupTabs() {

File: DesktopPerspective/src/org/gephi/desktop/perspective/BannerRootPanelLayout.java
Patch:
@@ -46,7 +46,7 @@ public Dimension preferredLayoutSize(Container parent) {
         int height = 0;
 
         JRootPane rootPane = (JRootPane) parent;
-        hideMenu(rootPane);
+//        hideMenu(rootPane);
 
         Insets insets = parent.getInsets();
         height += insets.top + insets.bottom;
@@ -106,7 +106,7 @@ public Dimension maximumLayoutSize(Container target) {
     @Override
     public void layoutContainer(Container parent) {
         JRootPane rootPane = (JRootPane) parent;
-        hideMenu(rootPane);
+//        hideMenu(rootPane);
         Rectangle bounds = rootPane.getBounds();
         Insets insets = rootPane.getInsets();
         int y = insets.top;
@@ -155,6 +155,7 @@ public void removeLayoutComponent(Component comp) {
 
     @Override
     public void addLayoutComponent(Component comp, Object constraints) {
+        System.out.println(comp);
     }
 
     @Override

File: PreviewAPI/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -110,8 +110,8 @@ public void refreshPreview(Workspace workspace) {
         AttributeModel attributeModel = attributeController.getModel(model.getWorkspace());
         PreviewModelImpl previewModel = getModel(workspace);
         previewModel.clear();
-        
-         //Directed graph?
+
+        //Directed graph?
         previewModel.getProperties().putValue(PreviewProperty.DIRECTED, graphModel.isDirected() || graphModel.isMixed());
 
         //Build items
@@ -173,7 +173,6 @@ public void render(RenderTarget target) {
 
             //Render items
             for (Renderer r : renderers) {
-                System.out.println("Renderer "+r);
                 for (String type : model.getItemTypes()) {
                     for (Item item : model.getItems(type)) {
                         if (r.isRendererForitem(item, properties)) {

File: PreviewAPI/src/org/gephi/preview/types/DependantOriginalColor.java
Patch:
@@ -36,7 +36,7 @@ public enum Mode {
     private final Mode mode;
 
     public DependantOriginalColor(Mode mode) {
-        customColor = null;
+        customColor = Color.BLACK;
         this.mode = mode;
     }
 

File: LayoutAPI/src/org/gephi/layout/LayoutControllerImpl.java
Patch:
@@ -60,7 +60,7 @@ public void select(Workspace workspace) {
             }
 
             public void unselect(Workspace workspace) {
-                if (model.getSelectedLayout() != null) {
+                if (model != null && model.getSelectedLayout() != null) {
                     model.saveProperties(model.getSelectedLayout());
                 }
             }

File: PreviewImpl/src/org/gephi/preview/EdgeArrowImpl.java
Patch:
@@ -89,7 +89,7 @@ public Color getColor() {
         return colorHolder.getComponent();
     }
 
-    public EdgeColorizerClient getParentEdge() {
+    public DirectedEdgeImpl getParentEdge() {
         return parent;
     }
 

File: PreviewImpl/src/org/gephi/preview/EdgeLabelImpl.java
Patch:
@@ -88,7 +88,7 @@ public Float getAngle() {
         return parent.getAngle();
     }
 
-    public EdgeColorizerClient getParentEdge() {
+    public EdgeImpl getParentEdge() {
         return parent;
     }
 

File: PreviewImpl/src/org/gephi/preview/EdgeMiniLabelImpl.java
Patch:
@@ -76,7 +76,7 @@ public Float getAngle() {
         return parent.getAngle();
     }
 
-    public EdgeColorizerClient getParentEdge() {
+    public DirectedEdgeImpl getParentEdge() {
         return parent;
     }
 

File: PreviewImpl/src/org/gephi/preview/NodeLabelBorderImpl.java
Patch:
@@ -36,4 +36,7 @@ public NodeLabelBorderImpl(NodeImpl parent) {
     public final NodeLabelImpl getLabel() {
         return parent.getLabel();
     }
+    public final String getId() {
+        return parent.getId();
+    }
 }

File: PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java
Patch:
@@ -216,6 +216,7 @@ private NodeImpl createPreviewNode(GraphImpl previewGraph, org.gephi.graph.api.N
 
         NodeImpl previewNode = new NodeImpl(
                 previewGraph,
+                sourceNodeData.getId(),
                 sourceNodeData.x(),
                 -sourceNodeData.y(), // different referential from the workspace one
                 sourceNodeData.getRadius(),

File: DataLaboratoryAPI/src/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -487,6 +487,7 @@ public void importCSVToNodesTable(File file, Character separator, Charset charse
             Node node;
             Attributes nodeAttributes;
             reader = new CsvReader(new FileInputStream(file), separator, charset);
+            reader.setTrimWhitespace(false);
             reader.readHeaders();
             while (reader.readRecord()) {
                 //Prepare the correct node to assign the attributes:
@@ -572,6 +573,7 @@ public void importCSVToEdgesTable(File file, Character separator, Charset charse
             boolean directed;
             Attributes edgeAttributes;
             reader = new CsvReader(new FileInputStream(file), separator, charset);
+            reader.setTrimWhitespace(false);
             reader.readHeaders();
             while (reader.readRecord()) {
                 sourceId = reader.get(sourceColumn);

File: RankingPlugin/src/org/gephi/ranking/plugin/transformer/RenderableSizeTransformerBuilder.java
Patch:
@@ -43,7 +43,7 @@ public Transformer buildTransformer() {
 
     @Override
     public boolean isTransformerForElement(String elementType) {
-        return elementType.equals(Ranking.NODE_ELEMENT) || elementType.equals(Ranking.EDGE_ELEMENT);
+        return elementType.equals(Ranking.NODE_ELEMENT);
     }
 
     @Override

File: VisualizationModule/src/org/gephi/visualization/VizModelPersistenceProvider.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import javax.xml.stream.XMLStreamWriter;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspacePersistenceProvider;
+import org.openide.util.Lookup;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -51,6 +52,7 @@ public void readXML(XMLStreamReader reader, Workspace workspace) {
             vizModel = new VizModel();
             workspace.add(vizModel);
         }
+        Lookup.getDefault().lookup(VizController.class).refreshWorkspace();//Necessary to get events from reading xml properties such as background color changed
         try {
             vizModel.readXML(reader, workspace);
         } catch (XMLStreamException ex) {

File: FiltersImpl/src/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -100,7 +100,7 @@ public void close(Workspace workspace) {
 
             public void disable() {
                 GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
-                if (model.getCurrentResult() != null && graphModel != null) {
+                if (model != null && model.getCurrentResult() != null && graphModel != null) {
                     graphModel.destroyView(model.getCurrentResult());
                     model.setCurrentResult(null);
                 }

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java
Patch:
@@ -387,7 +387,7 @@ public void refreshValues(HierarchicalGraph graph) {
 
             min = (Number) AttributeUtils.getDefault().getMin(column, values /*valuesArray*/);
             max = (Number) AttributeUtils.getDefault().getMax(column, values /*valuesArray*/);
-            match = Range.tribToBounds(min, max, match);
+            match = Range.trimToBounds(min, max, match);
         }
 
         public FilterProperty[] getProperties() {

File: VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -117,7 +117,7 @@ public class VizConfig {
     public static final Color DEFAULT_RECTANGLE_SELECTION_COLOR = new Color(0.16f, 0.48f, 0.81f, 0.2f);
     public static final boolean DEFAULT_DRAGGING = true;
     public static final boolean DEFAULT_CAMERA_CONTROL = true;
-    public static final boolean DEFAULT_SHOW_FPS = true;
+    public static final boolean DEFAULT_SHOW_FPS = false;
     public static final boolean DEFAULT_REDUCE_FPS_MOUSE_OUT = true;
     public static final boolean DEFAULT_PAUSE_LOOP_MOUSE_OUT = false;
     public static final int DEFAULT_REDUCE_FPS_MOUSE_OUT_VALUE = 20;

File: LongTaskAPI/src/org/gephi/utils/progress/ProgressTicket.java
Patch:
@@ -60,6 +60,8 @@ public interface ProgressTicket {
      * @param newDisplayName the new display name
      */
     void setDisplayName(String newDisplayName);
+    
+    String getDisplayName();
 
     /**
      * Start the progress indication for indeterminate task.

File: RankingPlugin/src/org/gephi/ranking/plugin/DegreeRankingBuilder.java
Patch:
@@ -116,7 +116,9 @@ public Number getMinimumValue() {
 
         @Override
         protected DegreeRanking clone() {
-            return new DegreeRanking(elementType, graph);
+            GraphModel graphModel = graph.getGraphModel();
+            Graph currentGraph = graphModel.getGraphVisible();
+            return new DegreeRanking(elementType, currentGraph);
         }
     }
 }

File: RankingPlugin/src/org/gephi/ranking/plugin/InDegreeRankingBuilder.java
Patch:
@@ -121,7 +121,9 @@ public Number getMinimumValue() {
 
         @Override
         protected InDegreeRanking clone() {
-            return new InDegreeRanking(elementType, graph);
+            GraphModel graphModel = graph.getGraphModel();
+            DirectedGraph currentGraph = graphModel.getDirectedGraphVisible();
+            return new InDegreeRanking(elementType, currentGraph);
         }
     }
 }

File: RankingPlugin/src/org/gephi/ranking/plugin/OutDegreeRankingBuilder.java
Patch:
@@ -121,7 +121,9 @@ public Number getMinimumValue() {
 
         @Override
         protected OutDegreeRanking clone() {
-            return new OutDegreeRanking(elementType, graph);
+            GraphModel graphModel = graph.getGraphModel();
+            DirectedGraph currentGraph = graphModel.getDirectedGraphVisible();
+            return new OutDegreeRanking(elementType, currentGraph);
         }
     }
 }

File: ImportPluginUI/src/org/gephi/ui/importer/plugin/EdgeListDatabaseImporterUI.java
Patch:
@@ -46,13 +46,14 @@ public void setup(Importer importer) {
         this.importer = (DatabaseImporter) importer;
         if (panel == null) {
             panel = new EdgeListPanel();
-        }
-        panel.setup();
+        }    
 
         //Driver Combo
         SQLDriver[] driverArray = new SQLDriver[0];
         driverArray = Lookup.getDefault().lookupAll(SQLDriver.class).toArray(driverArray);
         panel.setSQLDrivers(driverArray);
+        
+        panel.setup();
     }
 
     public JPanel getPanel() {

File: PreviewExportUI/src/org/gephi/ui/exporter/preview/UIExporterPNG.java
Patch:
@@ -44,7 +44,7 @@ public class UIExporterPNG implements ExporterUI {
     public JPanel getPanel() {
         panel = new UIExporterPNGPanel();
         validationPanel = UIExporterPNGPanel.createValidationPanel(panel);
-        return panel;
+        return validationPanel;
     }
 
     @Override

File: DHNSGraph/src/org/gephi/graph/dhns/utils/DHNSSerializer.java
Patch:
@@ -201,6 +201,7 @@ public void readEdges(XMLStreamReader reader, GraphStructure graphStructure, Gra
                     }
                     edge.setWeight(weight);
                     edge.getEdgeData().setAttributes(factory.newEdgeAttributes(edge.getEdgeData()));
+                    edge.getEdgeData().setId(String.valueOf(edge.getId()));//Set edge Id attribute the same as the int id at first because Id attribute is not serialized in DataSerializer if they are equal
                     edge.getEdgeData().setTextData(factory.newTextData());
                     srcNode.getEdgesOutTree().add(edge);
                     destNode.getEdgesInTree().add(edge);
@@ -271,6 +272,7 @@ public void readTreeStructure(XMLStreamReader reader, GraphStructure graphStruct
                         absNode.setEnabledOutDegree(outDegree);
                         absNode.setEnabledMutualDegree(mutualDegree);
                         absNode.getNodeData().setAttributes(factory.newNodeAttributes(absNode.getNodeData()));
+                        absNode.getNodeData().setId(String.valueOf(absNode.getId()));//Set node Id attribute the same as the int id at first because Id attribute is not serialized in DataSerializer if they are equal
                         absNode.getNodeData().setTextData(factory.newTextData());
                         treeStructure.insertAsChild(absNode, parentNode);
                         graphStructure.addToDictionnary(absNode);

File: DHNSGraph/src/org/gephi/graph/dhns/utils/DataSerializer.java
Patch:
@@ -110,7 +110,7 @@ public void writeNodeData(XMLStreamWriter writer, NodeDataImpl nodeData) throws
 
         writer.writeAttribute("nodepre", String.valueOf(node.getPre()));
 
-        if (nodeData.getId() != null && !nodeData.getId().equals("" + node.getId())) {
+        if (nodeData.getId() != null && !nodeData.getId().equals(String.valueOf(node.getId()))) {
             writer.writeAttribute("id", nodeData.getId());
         }
 
@@ -171,7 +171,7 @@ public void writeEdgeData(XMLStreamWriter writer, EdgeDataImpl edgeData) throws
         writer.writeAttribute("sourcepre", String.valueOf(edge.getSource().getPre()));
         writer.writeAttribute("targetpre", String.valueOf(edge.getTarget().getPre()));
 
-        if (edgeData.getId() != null && !edgeData.getId().equals("" + edge.getId())) {
+        if (edgeData.getId() != null && !edgeData.getId().equals(String.valueOf(edge.getId()))) {
             writer.writeAttribute("id", edgeData.getId());
         }
 

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingToolbar.java
Patch:
@@ -146,6 +146,7 @@ private void initTransformersUI() {
                 remove(btn);
             }
         }
+        buttonGroups.clear();
         if (model != null) {
             //Add transformers buttons, separate them by element group
             for (String elmtType : controller.getElementTypes()) {

File: RankingAPI/src/org/gephi/ranking/RankingModelImpl.java
Patch:
@@ -144,7 +144,7 @@ public void removeRankingListener(RankingListener listener) {
         listeners.remove(listener);
     }
     
-    private void fireRankingListener(RankingEvent rankingEvent) {
+    public void fireRankingListener(RankingEvent rankingEvent) {
         for (RankingListener listener : listeners) {
             listener.rankingChanged(rankingEvent);
         }

File: StatisticsAPI/src/org/gephi/statistics/StatisticsControllerImpl.java
Patch:
@@ -107,7 +107,7 @@ public void execute(final Statistics pStatistics, LongTaskListener listener) {
         model.setRunning(pStatistics, true);
 
         if (pStatistics instanceof LongTask) {
-            LongTaskExecutor executor = new LongTaskExecutor(true, builder.getName(), 10);
+            LongTaskExecutor executor = new LongTaskExecutor(true, "Statistics "+builder.getName(), 10);
 //            executor.addLongTaskListener(this);
             if (listener != null) {
                 executor.setLongTaskListener(listener);

File: DataLaboratoryPlugin/src/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIVisualPanel1.java
Patch:
@@ -458,7 +458,7 @@ public void itemStateChanged(java.awt.event.ItemEvent evt) {
     private void fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileButtonActionPerformed
         String lastPath = NbPreferences.forModule(ImportCSVUIVisualPanel1.class).get(LAST_PATH, null);
         final JFileChooser chooser = new JFileChooser(lastPath);
-        chooser.setAcceptAllFileFilterUsed(false);
+        chooser.setAcceptAllFileFilterUsed(true);
         DialogFileFilter dialogFileFilter = new DialogFileFilter(NbBundle.getMessage(ImportCSVUIVisualPanel1.class, "ImportCSVUIVisualPanel1.filechooser.csvDescription"));
         dialogFileFilter.addExtension("csv");
         chooser.addChoosableFileFilter(dialogFileFilter);

File: AttributesImpl/src/org/gephi/data/attributes/AttributeTableImpl.java
Patch:
@@ -107,7 +107,7 @@ private synchronized AttributeColumnImpl addColumn(String id, String title, Attr
         columns.add(column);
         columnsMap.put(id, column);
         if (title != null && !title.equals(id)) {
-            columnsMap.put(title.toLowerCase(), column);
+            columnsMap.put(title, column);
         }
         columnsSet.put(column, column);
 

File: ProjectAPI/src/org/gephi/project/io/LoadTask.java
Patch:
@@ -56,7 +56,7 @@ public LoadTask(File file) {
     public void run() {
         try {
             Progress.start(progressTicket);
-            Progress.setDisplayName(progressTicket, NbBundle.getMessage(SaveTask.class, "LoadTask.name"));
+            Progress.setDisplayName(progressTicket, NbBundle.getMessage(LoadTask.class, "LoadTask.name"));
             FileObject fileObject = FileUtil.toFileObject(file);
             if (FileUtil.isArchiveFile(fileObject)) {
                 //Unzip

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterCSV.java
Patch:
@@ -198,6 +198,7 @@ private void addEdge(String source, String target, float weight) {
             edge = container.factory().newEdgeDraft();
             edge.setSource(sourceNode);
             edge.setTarget(targetNode);
+            edge.setWeight(weight);
             container.addEdge(edge);
         } else {
             edge.setWeight(edge.getWeight() + weight);

File: DataLaboratoryAPI/src/org/gephi/datalab/impl/GraphElementsControllerImpl.java
Patch:
@@ -26,6 +26,7 @@ License, or (at your option) any later version.
 import java.util.Set;
 import org.gephi.data.attributes.api.AttributeOrigin;
 import org.gephi.data.attributes.api.AttributeRow;
+import org.gephi.data.properties.PropertiesColumn;
 import org.gephi.datalab.api.GraphElementsController;
 import org.gephi.graph.api.DirectedGraph;
 import org.gephi.graph.api.Edge;
@@ -464,7 +465,7 @@ private Node copyNodeRecursively(Node node, Node parent, HierarchicalGraph hg) {
         //Copy attributes:
         AttributeRow row = (AttributeRow) nodeData.getAttributes();
         for (int i = 0; i < row.countValues(); i++) {
-            if (row.getValues()[i].getColumn().getOrigin() == AttributeOrigin.DATA) {
+            if (row.getValues()[i].getColumn().getIndex()!=PropertiesColumn.NODE_ID.getIndex()) {
                 copyData.getAttributes().setValue(i, row.getValue(i));
             }
         }

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -1179,6 +1179,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         controlToolbar.add(edgesButton);
         controlToolbar.add(separator);
 
+        configurationButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
         configurationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/desktop/datalab/resources/gear-small.png"))); // NOI18N
         org.openide.awt.Mnemonics.setLocalizedText(configurationButton, org.openide.util.NbBundle.getMessage(DataTableTopComponent.class, "DataTableTopComponent.configurationButton.text")); // NOI18N
         configurationButton.setFocusable(false);

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/SparkLinesRenderer.java
Patch:
@@ -1,6 +1,6 @@
 /*
 Copyright 2008-2010 Gephi
-Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
+Authors : Eduardo Ramos
 Website : http://www.gephi.org
 
 This file is part of Gephi.
@@ -36,6 +36,7 @@ License, or (at your option) any later version.
 
 /**
  * TableCellRenderer for drawing sparklines from cells that have a NumberList or DynamicNumber as their value.
+ * @author Eduardo Ramos <eduramiba@gmail.com>
  */
 public class SparkLinesRenderer extends DefaultTableCellRenderer {
 

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/TimeIntervalGraphics.java
Patch:
@@ -1,6 +1,6 @@
 /*
 Copyright 2008-2010 Gephi
-Authors : Mathieu Bastian <mathieu.bastian@gephi.org>, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
+Authors : Eduardo Ramos
 Website : http://www.gephi.org
 
 This file is part of Gephi.

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/TimeIntervalsRenderer.java
Patch:
@@ -1,6 +1,6 @@
 /*
 Copyright 2008-2010 Gephi
-Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
+Authors : Eduardo Ramos
 Website : http://www.gephi.org
 
 This file is part of Gephi.
@@ -32,6 +32,7 @@ License, or (at your option) any later version.
 
 /**
  * TableCellRenderer for drawing time intervals graphics from cells that have a TimeInterval as their value.
+ * @author Eduardo Ramos <eduramiba@gmail.com>
  */
 public class TimeIntervalsRenderer extends DefaultTableCellRenderer {
 

File: LayoutPlugin/src/org/gephi/layout/plugin/rotate/ClockwiseRotate.java
Patch:
@@ -38,7 +38,7 @@ public class ClockwiseRotate implements LayoutBuilder {
     private ClockwiseRotateLayoutUI ui = new ClockwiseRotateLayoutUI();
 
     public Layout buildLayout() {
-        return new RotateLayout(this, -90);
+        return new RotateLayout(this, 90);
     }
 
     public String getName() {

File: DataLaboratoryAPI/src/org/gephi/datalab/api/AttributeColumnsController.java
Patch:
@@ -31,7 +31,6 @@ License, or (at your option) any later version.
 import org.gephi.graph.api.Attributes;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Node;
-import org.openide.util.Lookup;
 
 /**
  * <p>This interface defines part of the Data Laboratory API basic actions.</p>
@@ -359,7 +358,7 @@ public interface AttributeColumnsController {
      * <p>Method for importing csv data to edges table.</p>
      * <p>Column named 'Source' and 'Target' (case insensitive) should be provided. Any row that does not provide a source and target nodes ids will be ignored.</p>
      * <p>If no 'Type' (case insensitive) column is provided, all edges will be directed.</p>
-     * <p>If an edge already exists or cannot be created, it will be ignored, and no data will be updated.</p>
+     * <p>If an edge already exists and cannot be created, it will be ignored but the weight of the existing edge will be increased with each repetition.</p>
      *
      * <p>Special cases are id, source, target and type columns:
      * <ul>

File: PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java
Patch:
@@ -24,6 +24,7 @@ License, or (at your option) any later version.
 import org.gephi.data.attributes.type.TimeInterval;
 import org.gephi.dynamic.DynamicUtilities;
 import org.gephi.dynamic.api.DynamicController;
+import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.HierarchicalDirectedGraph;
 import org.gephi.graph.api.HierarchicalGraph;
 import org.gephi.graph.api.HierarchicalMixedGraph;
@@ -383,6 +384,7 @@ private boolean isBidirectional(org.gephi.graph.api.DirectedGraph sourceGraph, o
      * @return              true if the source edge is bidirectional
      */
     private boolean isBidirectional(org.gephi.graph.api.MixedGraph sourceGraph, org.gephi.graph.api.Edge sourceEdge) {
-        return sourceGraph.getEdge(sourceEdge.getTarget(), sourceEdge.getSource()) != null;
+        Edge edge=sourceGraph.getEdge(sourceEdge.getTarget(), sourceEdge.getSource());
+        return edge!=null && edge.getTarget()==sourceEdge.getSource();
     }
 }

File: PreviewImpl/src/org/gephi/preview/supervisors/EdgeSupervisorImpl.java
Patch:
@@ -63,8 +63,8 @@ public abstract class EdgeSupervisorImpl implements EdgeSupervisor {
     public void addEdge(EdgeImpl edge) {
         getSupervisedEdges().add(edge);
         colorEdge(edge);
-        colorEdgeLabel(edge);
         updateEdgeLabelValue(edge);
+        colorEdgeLabel(edge);
         adjustEdgeLabelFont(edge);
 
         if (visualizationController == null) {
@@ -278,7 +278,7 @@ private void shortenEdgeLabel(EdgeLabelImpl edgeLabel) {
      * @param edge  the edge to shorten the label
      */
     private void shortenEdgeLabel(EdgeImpl edge) {
-        if (edge.hasLabel()) {
+        if (edge.getLabel() != null && edge.getLabel().getOriginalValue() != null) {
             shortenEdgeLabel(edge.getLabel());
         }
     }
@@ -307,7 +307,7 @@ private void revertEdgeLabel(EdgeLabelImpl edgeLabel) {
      * @param edge  the edge to revert the label
      */
     private void revertEdgeLabel(EdgeImpl edge) {
-        if (edge.hasLabel()) {
+        if (edge.getLabel() != null && edge.getLabel().getOriginalValue() != null) {
             revertEdgeLabel(edge.getLabel());
         }
     }

File: DataLaboratoryPlugin/src/org/gephi/datalab/plugin/manipulators/columns/merge/SumNumbers.java
Patch:
@@ -37,7 +37,7 @@ License, or (at your option) any later version.
  * calculates the sum of all the values and creates a new BigDecimal column with the result of each row.
  * @author Eduardo Ramos <eduramiba@gmail.com>
  */
-public class SumNumbers implements AttributeColumnsMergeStrategy {
+public class SumNumbers implements AttributeColumnsMergeStrategy, GeneralColumnTitleChooser {
 
     private AttributeTable table;
     private AttributeColumn[] columns;

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java
Patch:
@@ -112,7 +112,7 @@ private void readDataTablesModel(XMLStreamReader reader, Workspace workspace) th
                         nodeColumns.addAvailableColumn(column);
                     }
                 } else if (EDGE_COLUMN.equalsIgnoreCase(name)) {
-                    String id = reader.getAttributeValue(null, "id");
+                    Integer id = Integer.parseInt(reader.getAttributeValue(null, "id"));
                     AttributeColumn column = edgesTable.getColumn(id);
                     if (column != null) {
                         edgeColumns.addAvailableColumn(column);

File: LayoutAPI/src/org/gephi/layout/LayoutModelImpl.java
Patch:
@@ -145,7 +145,7 @@ public void saveProperties(Layout layout) {
             try {
                 Object value = p.getProperty().getValue();
                 if (value != null) {
-                    savedProperties.put(new LayoutPropertyKey(p.getProperty().getName(), layout.getClass().getName()), value);
+                    savedProperties.put(new LayoutPropertyKey(p.getCanonicalName(), layout.getClass().getName()), value);
                 }
             } catch (Exception e) {
                 e.printStackTrace();
@@ -162,7 +162,8 @@ public void loadProperties(Layout layout) {
         }
         for (LayoutProperty property : layout.getProperties()) {
             for (LayoutPropertyKey l : layoutValues) {
-                if (property.getProperty().getName().equals(l.name)) {
+                if (property.getCanonicalName().equalsIgnoreCase(l.name) 
+                        || property.getProperty().getName().equalsIgnoreCase(l.name)) {//Also compare with property name to maintain compatibility with old saved properties
                     try {
                         property.getProperty().setValue(savedProperties.get(l));
                     } catch (Exception e) {

File: LayoutPlugin/src/org/gephi/layout/plugin/fruchterman/FruchtermanReingold.java
Patch:
@@ -172,18 +172,21 @@ public LayoutProperty[] getProperties() {
                     this, Float.class,
                     NbBundle.getMessage(FruchtermanReingold.class, "fruchtermanReingold.area.name"),
                     FRUCHTERMAN_REINGOLD,
+                    "fruchtermanReingold.area.name",
                     NbBundle.getMessage(FruchtermanReingold.class, "fruchtermanReingold.area.desc"),
                     "getArea", "setArea"));
             properties.add(LayoutProperty.createProperty(
                     this, Double.class,
                     NbBundle.getMessage(FruchtermanReingold.class, "fruchtermanReingold.gravity.name"),
                     FRUCHTERMAN_REINGOLD,
+                    "fruchtermanReingold.gravity.name",
                     NbBundle.getMessage(FruchtermanReingold.class, "fruchtermanReingold.gravity.desc"),
                     "getGravity", "setGravity"));
             properties.add(LayoutProperty.createProperty(
                     this, Double.class,
                     NbBundle.getMessage(FruchtermanReingold.class, "fruchtermanReingold.speed.name"),
                     FRUCHTERMAN_REINGOLD,
+                    "fruchtermanReingold.speed.name",
                     NbBundle.getMessage(FruchtermanReingold.class, "fruchtermanReingold.speed.desc"),
                     "getSpeed", "setSpeed"));
         } catch (Exception e) {

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -246,12 +246,14 @@ public LayoutProperty[] getProperties() {
                     this, Double.class,
                     NbBundle.getMessage(getClass(), "LabelAdjust.speed.name"),
                     LABELADJUST_CATEGORY,
+                    "LabelAdjust.speed.name",
                     NbBundle.getMessage(getClass(), "LabelAdjust.speed.desc"),
                     "getSpeed", "setSpeed"));
             properties.add(LayoutProperty.createProperty(
                     this, Boolean.class,
                     NbBundle.getMessage(getClass(), "LabelAdjust.adjustBySize.name"),
                     LABELADJUST_CATEGORY,
+                    "LabelAdjust.adjustBySize.name",
                     NbBundle.getMessage(getClass(), "LabelAdjust.adjustBySize.desc"),
                     "isAdjustBySize", "setAdjustBySize"));
         } catch (Exception e) {

File: LayoutPlugin/src/org/gephi/layout/plugin/random/RandomLayout.java
Patch:
@@ -77,6 +77,7 @@ public LayoutProperty[] getProperties() {
                     this, Double.class, 
                     NbBundle.getMessage(getClass(), "Random.spaceSize.name"),
                     null,
+                    "Random.spaceSize.name",
                     NbBundle.getMessage(getClass(), "Random.spaceSize.desc"),
                     "getSize", "setSize"));
         } catch (Exception e) {

File: LayoutPlugin/src/org/gephi/layout/plugin/rotate/RotateLayout.java
Patch:
@@ -79,6 +79,7 @@ public LayoutProperty[] getProperties() {
                     this, Double.class, 
                     NbBundle.getMessage(getClass(), "clockwise.angle.name"),
                     null,
+                    "clockwise.angle.name",
                     NbBundle.getMessage(getClass(), "clockwise.angle.desc"),
                     "getAngle", "setAngle"));
         } catch (Exception e) {

File: LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java
Patch:
@@ -80,6 +80,7 @@ public LayoutProperty[] getProperties() {
                     this, Double.class, 
                     NbBundle.getMessage(getClass(), "ScaleLayout.scaleFactor.name"),
                     null,
+                    "ScaleLayout.scaleFactor.name",
                     NbBundle.getMessage(getClass(), "ScaleLayout.scaleFactor.desc"),
                     "getScale", "setScale"));
         } catch (Exception e) {

File: FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java
Patch:
@@ -204,7 +204,7 @@ public void refreshValues(HierarchicalGraph graph) {
             }
             if (edgeColumn != null) {
                 for (Edge e : graph.getEdgesAndMetaEdges()) {
-                    Object obj = e.getEdgeData().getAttributes().getValue(nodeColumn.getIndex());
+                    Object obj = e.getEdgeData().getAttributes().getValue(edgeColumn.getIndex());
                     if (obj != null) {
                         TimeInterval timeInterval = (TimeInterval) obj;
                         min = Math.min(min, Double.isInfinite(timeInterval.getLow()) ? min : timeInterval.getLow());

File: VisualizationModule/src/org/gephi/visualization/component/GlobalSettingsPanel.java
Patch:
@@ -158,6 +158,7 @@ private void initComponents() {
         autoSelectNeigborCheckbox.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
         autoSelectNeigborCheckbox.setMargin(new java.awt.Insets(2, 0, 2, 2));
 
+        zoomPanel.setOpaque(false);
         zoomPanel.setLayout(new java.awt.GridBagLayout());
 
         labelZoom.setText(org.openide.util.NbBundle.getMessage(GlobalSettingsPanel.class, "GlobalSettingsPanel.labelZoom.text")); // NOI18N

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/NodeDataTable.java
Patch:
@@ -404,7 +404,7 @@ public String getColumnName(int column) {
         }
 
         private boolean outOfBounds(int position) {
-            return position >= length;
+            return position >= length || position < 0;
         }
     }
 

File: DesktopBranding/src/org/gephi/branding/desktop/multilingual/LanguageAction.java
Patch:
@@ -108,7 +108,7 @@ public void actionPerformed(ActionEvent e) {
 
     private void setLanguage(Language language) {
         String homePath;
-        if (Utilities.isMac()) {
+        if (Utilities.isMac() || Utilities.isUnix()) {
             homePath = System.getProperty("netbeans.home");
         } else {
             homePath = System.getProperty("user.dir");

File: DataLaboratoryPlugin/src/org/gephi/datalab/plugin/manipulators/general/ui/ImportCSVUIVisualPanel1.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2008 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
 Website : http://www.gephi.org
 

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/CSVExportUI.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2008 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
 Website : http://www.gephi.org
 

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/SparkLinesRenderer.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2008 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
 Website : http://www.gephi.org
 

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/TimeIntervalsRenderer.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2008 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Eduardo Ramos
 Website : http://www.gephi.org
 

File: RankingAPI/src/org/gephi/ranking/impl/AbstractColorTransformer.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2008 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
 Website : http://www.gephi.org
 

File: RankingAPI/src/org/gephi/ranking/impl/AbstractSizeTransformer.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2008 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
 Website : http://www.gephi.org
 

File: RankingAPI/src/org/gephi/ranking/impl/AbstractTransformer.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2008 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
 Website : http://www.gephi.org
 

File: TimelineAPI/src/org/gephi/timeline/api/TimelineController.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2010 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Patrick J. McSweeney
 Website : http://www.gephi.org
 

File: TimelineAPI/src/org/gephi/timeline/api/TimelineModelListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2010 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Patrick J. McSweeney
 Website : http://www.gephi.org
 

File: TimelineAPI/src/org/gephi/timeline/api/TimelinePlayMode.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2010 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Patrick J. McSweeney
 Website : http://www.gephi.org
 

File: TimelineAPI/src/org/gephi/timeline/spi/Timeline.java
Patch:
@@ -1,5 +1,5 @@
 /*
-Copyright 2010 WebAtlas
+Copyright 2008-2010 Gephi
 Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Patrick J. McSweeney
 Website : http://www.gephi.org
 

File: RankingAPI/src/org/gephi/ranking/impl/AbstractRanking.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.ranking.impl;
 
 import org.gephi.graph.api.Graph;

File: StatisticsPlugin/src/org/gephi/statistics/plugin/ConnectedComponents.java
Patch:
@@ -276,7 +276,9 @@ public String getReport() {
                 + "<br> <h2> Results: </h2>"
                 + "Weakly Connected Components: " + componentCount + "<br>"
                 + (isDirected ? "Stronlgy Connected Components: " + stronglyCount + "<br>" : "")
-                + "</BODY></HTML>";
+                + "<br />" + "<h2> Algorithm: </h2>"
+                + "Robert Tarjan, <i>Depth-First Search and Linear Graph Algorithms</i>, in SIAM Journal on Computing 1 (2): 146–160 (1972)<br />"
+                + "</BODY> </HTML>";
 
         return report;
     }

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Modularity.java
Patch:
@@ -502,7 +502,9 @@ public String getReport() {
                 + "<br> <h2> Results: </h2>"
                 + "Modularity: " + f.format(modularity) + "<br>"
                 + "Number of Communities: " + structure.communities.size()
-                + "</BODY></HTML>";
+                + "<br /><br />" + "<h2> Algorithm: </h2>"
+                + "Vincent D Blondel, Jean-Loup Guillaume, Renaud Lambiotte, Etienne Lefebvre, <i>Fast unfolding of communities in large networks</i>, in Journal of Statistical Mechanics: Theory and Experiment 2008 (10), P1000<br />"
+                + "</BODY> </HTML>";
 
         return report;
     }

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import javax.swing.Action;
 import org.gephi.filters.api.FilterController;
 import org.gephi.filters.api.FilterLibrary;
+import org.gephi.filters.api.FilterModel;
 import org.gephi.filters.api.Query;
 import org.openide.DialogDisplayer;
 import org.openide.NotifyDescriptor;
@@ -54,7 +55,8 @@ public String getHtmlDisplayName() {
 
     private boolean isSelected() {
         FilterController fc = Lookup.getDefault().lookup(FilterController.class);
-        return fc.getModel().getCurrentQuery() == query;
+        FilterModel fm = fc.getModel();
+        return (fm.isFiltering() || fm.isSelecting()) && fc.getModel().getCurrentQuery() == query;
         //return FiltersTopComponent.findInstance().getUiModel().getSelectedRoot() == query;
     }
 

File: FiltersAPI/src/org/gephi/filters/api/FilterController.java
Patch:
@@ -160,6 +160,8 @@ public interface FilterController {
 
     public void setAutoRefresh(boolean autoRefresh);
 
+    public void setCurrentQuery(Query query);
+
     /**
      * Returns the filter's model.
      * @return              the filter's model

File: FiltersAPI/src/org/gephi/filters/api/Range.java
Patch:
@@ -320,7 +320,7 @@ public Number getLowerBound() {
         return lowerNumber;
     }
 
-    public Object getUpperBound() {
+    public Number getUpperBound() {
         return upperNumber;
     }
 

File: DesktopExport/src/org/gephi/desktop/io/export/api/GraphFileExporterUI.java
Patch:
@@ -121,6 +121,8 @@ public void actionPerformed(ActionEvent e) {
             @Override
             protected JDialog createDialog(Component parent) throws HeadlessException {
                 JDialog dialog = super.createDialog(parent);
+                dialog.setSize(640, 480);
+                dialog.setResizable(true);
                 Component c = dialog.getContentPane().getComponent(0);
                 if (c != null && c instanceof JComponent) {
                     Insets insets = ((JComponent) c).getInsets();

File: UIComponents/src/org/gephi/ui/components/gradientslider/MultiThumbSliderUI.java
Patch:
@@ -166,7 +166,6 @@ private void polish() {
         /** Make the slider reflect this object */
         public void install() {
             polish();
-
             slider.setValues(positions, values);
             slider.setSelectedThumb(selectedThumb);
         }
@@ -495,9 +494,10 @@ public void mouseReleased(MouseEvent e) {
         if (slider.isEnabled() == false) {
             return;
         }
+        boolean mousDownFox = mouseIsDown;    //Mousedown fix
 
         mouseIsDown = false;
-        if (pressedState != null && slider.getThumbCount() <= pressedState.positions.length) {
+        if (mousDownFox && pressedState != null && slider.getThumbCount() <= pressedState.positions.length) {
             mouseDragged(e); //go ahead and commit this final location
         }
         if (slider.isValueAdjusting()) {

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java
Patch:
@@ -120,6 +120,8 @@ public Graph filter(Graph graph) {
 
             if (self) {
                 result.addAll(nodes);
+            } else {
+                result.removeAll(nodes);
             }
 
             for (Node node : hgraph.getNodes().toArray()) {

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeRangeBuilder.java
Patch:
@@ -163,7 +163,7 @@ public String getName() {
         }
 
         public boolean init(Graph graph) {
-            HierarchicalGraph hg = graph.getGraphModel().getHierarchicalGraphVisible();
+            HierarchicalGraph hg = (HierarchicalGraph)graph;
             if (AttributeUtils.getDefault().isNodeColumn(column)) {
                 if (graph.getNodeCount() == 0) {
                     return false;

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryExplorer.java
Patch:
@@ -130,7 +130,7 @@ public void stateChanged(ChangeEvent e) {
         SwingUtilities.invokeLater(new Runnable() {
 
             public void run() {
-                uiModel.setSelectedQuery(model.getCurrentQuery());
+                //uiModel.setSelectedQuery(model.getCurrentQuery());
                 saveExpandStatus(QueryExplorer.this.manager.getRootContext());
                 QueryExplorer.this.manager.setRootContext(new RootNode(new QueryChildren(QueryExplorer.this.model.getQueries())));
                 loadExpandStatus(QueryExplorer.this.manager.getRootContext());

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java
Patch:
@@ -314,7 +314,7 @@ private void exportData(Graph graph, AttributeModel attributeModel) throws Excep
 
     private void attributesNodeColumns(AttributeModel attributeModel) {
         List<AttributeColumn> cols = new ArrayList<AttributeColumn>();
-        if (attributeModel != null) {
+        if (exportAttributes && attributeModel != null) {
             for (AttributeColumn column : attributeModel.getNodeTable().getColumns()) {
                 if (!isNodeDefaultColumn(column.getId())) {
                     cols.add(column);
@@ -326,7 +326,7 @@ private void attributesNodeColumns(AttributeModel attributeModel) {
 
     private void attributesEdgeColumns(AttributeModel attributeModel) {
         List<AttributeColumn> cols = new ArrayList<AttributeColumn>();
-        if (attributeModel != null) {
+        if (exportAttributes && attributeModel != null) {
             for (AttributeColumn column : attributeModel.getEdgeTable().getColumns()) {
                 if (!isEdgeDefaultColumn(column.getId())) {
                     cols.add(column);

File: DHNSGraph/src/org/gephi/graph/dhns/node/NodeDataImpl.java
Patch:
@@ -45,9 +45,9 @@ public class NodeDataImpl implements NodeData, GroupData {
     protected float x;
     protected float y;
     protected float z;
-    protected float r = 0f;
-    protected float g = 0f;
-    protected float b = 0f;
+    protected float r = 0.6f;
+    protected float g = 0.6f;
+    protected float b = 0.6f;
     protected float alpha = 1f;
     protected float size = 1f;
     protected Model model;

File: VisualizationModule/src/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -48,7 +48,7 @@ License, or (at your option) any later version.
 public class ActionsToolbar extends JToolBar {
 
     //Settings
-    private Color color = Color.BLACK;
+    private Color color = new Color(0.6f, 0.6f, 0.6f);
     private float size = 1f;
 
     public ActionsToolbar() {

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java
Patch:
@@ -73,7 +73,7 @@ private void defaultValues() {
         edgeColor = vizConfig.getDefaultEdgeLabelColor().getRGBComponents(null);
         selectedOnly = vizConfig.isDefaultShowLabelOnSelectedOnly();
         colorMode = VizController.getInstance().getTextManager().getColorModes()[0];
-        sizeMode = VizController.getInstance().getTextManager().getSizeModes()[0];
+        sizeMode = VizController.getInstance().getTextManager().getSizeModes()[1];
     }
 
     //Event

File: PreviewImpl/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -189,7 +189,7 @@ public void buildGraph() {
             previewGraph = factory.createPreviewGraph(model, graphModel.getHierarchicalUndirectedGraphVisible());
         } else if (graphModel.isDirected()) {
             previewGraph = factory.createPreviewGraph(model, graphModel.getHierarchicalDirectedGraphVisible());
-        } else if (graphModel.isMixed()) {
+        } else {
             previewGraph = factory.createPreviewGraph(model, graphModel.getHierarchicalMixedGraphVisible());
         }
 

File: DynamicImpl/src/org/gephi/dynamic/DynamicModelPersistenceProvider.java
Patch:
@@ -97,8 +97,7 @@ public void readModel(XMLStreamReader reader, DynamicModelImpl model) throws XML
                         String val = reader.getAttributeValue(null, "value");
                         if (val.equalsIgnoreCase("date")) {
                             model.setTimeFormat(DynamicModel.TimeFormat.DATE);
-                        }
-                        if (val.equalsIgnoreCase("datetime")) {
+                        } else if (val.equalsIgnoreCase("datetime")) {
                             model.setTimeFormat(DynamicModel.TimeFormat.DATETIME);
                         } else {
                             model.setTimeFormat(DynamicModel.TimeFormat.DOUBLE);

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -372,7 +372,7 @@ public TimeFormat getTimeFormat() {
     }
 
     public void setTimeIntervalMax(String timeIntervalMax) {
-        if (timeFormat.equals(TimeFormat.DATE)) {
+        if (timeFormat.equals(TimeFormat.DATE) || timeFormat.equals(TimeFormat.DATETIME)) {
             try {
                 this.timeIntervalMax = DynamicUtilities.getDoubleFromXMLDateString(timeIntervalMax);
             } catch (Exception ex) {
@@ -388,7 +388,7 @@ public void setTimeIntervalMax(String timeIntervalMax) {
     }
 
     public void setTimeIntervalMin(String timeIntervalMin) {
-        if (timeFormat.equals(TimeFormat.DATE)) {
+        if (timeFormat.equals(TimeFormat.DATE) || timeFormat.equals(TimeFormat.DATETIME)) {
             try {
                 this.timeIntervalMin = DynamicUtilities.getDoubleFromXMLDateString(timeIntervalMin);
             } catch (Exception ex) {

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -372,7 +372,7 @@ public TimeFormat getTimeFormat() {
     }
 
     public void setTimeIntervalMax(String timeIntervalMax) {
-        if (timeFormat.equals(TimeFormat.DATE)) {
+        if (timeFormat.equals(TimeFormat.DATE) || timeFormat.equals(TimeFormat.DATETIME)) {
             try {
                 this.timeIntervalMax = DynamicUtilities.getDoubleFromXMLDateString(timeIntervalMax);
             } catch (Exception ex) {
@@ -388,7 +388,7 @@ public void setTimeIntervalMax(String timeIntervalMax) {
     }
 
     public void setTimeIntervalMin(String timeIntervalMin) {
-        if (timeFormat.equals(TimeFormat.DATE)) {
+        if (timeFormat.equals(TimeFormat.DATE) || timeFormat.equals(TimeFormat.DATETIME)) {
             try {
                 this.timeIntervalMin = DynamicUtilities.getDoubleFromXMLDateString(timeIntervalMin);
             } catch (Exception ex) {

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsPersistenceProvider.java
Patch:
@@ -50,14 +50,13 @@ public void writeXML(XMLStreamWriter writer, Workspace workspace) {
 
     public void readXML(XMLStreamReader reader, Workspace workspace) {
         DhnsGraphController graphController = Lookup.getDefault().lookup(DhnsGraphController.class);
-        Dhns dhns = new Dhns(graphController, workspace);
+        Dhns dhns = (Dhns) graphController.getModel(workspace);
         DHNSSerializer serializer = new DHNSSerializer();
         try {
             serializer.readDhns(reader, dhns);
         } catch (XMLStreamException ex) {
             throw new RuntimeException(ex);
         }
-        workspace.add(dhns);
     }
 
     public String getIdentifier() {

File: DynamicImpl/src/org/gephi/dynamic/DynamicModelPersistenceProvider.java
Patch:
@@ -76,6 +76,8 @@ public void writeModel(XMLStreamWriter writer, DynamicModelImpl model) throws XM
             writer.writeAttribute("value", "double");
         }
         writer.writeEndElement();
+
+        writer.writeEndElement();
     }
 
     public void readModel(XMLStreamReader reader, DynamicModelImpl model) throws XMLStreamException {

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java
Patch:
@@ -90,9 +90,9 @@ public Graph filter(Graph graph) {
 
             List<Node> nodes = new ArrayList<Node>();
             for (Node n : hgraph.getNodes()) {
-                if (n.getNodeData().getId().toLowerCase().contains(str)) {
+                if (n.getNodeData().getId().toLowerCase().equals(str)) {
                     nodes.add(n);
-                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {
+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().equals(str)) {
                     nodes.add(n);
                 }
             }

File: VisualizationModule/src/org/gephi/visualization/VizModel.java
Patch:
@@ -454,7 +454,6 @@ public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
 
         //TextModel
         textModel.writeXML(writer);
-        writer.writeEndElement();
 
         //Camera
         writer.writeStartElement("cameraposition");

File: VisualizationModule/src/org/gephi/visualization/TextDataPersistenceProvider.java
Patch:
@@ -160,7 +160,7 @@ private void readTextData(XMLStreamReader reader, TextData textData) throws XMLS
                     }
                     break;
                 case XMLStreamReader.END_ELEMENT:
-                    if (ELEMENT_EDGEDATA_TEXTDATA.equalsIgnoreCase(reader.getLocalName())) {
+                    if (ELEMENT_EDGEDATA_TEXTDATA.equalsIgnoreCase(reader.getLocalName())||ELEMENT_NODEDATA_TEXTDATA.equalsIgnoreCase(reader.getLocalName())) {
                         end = true;
                     }
                     break;

File: VisualizationModule/src/org/gephi/visualization/VizModel.java
Patch:
@@ -454,6 +454,7 @@ public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
 
         //TextModel
         textModel.writeXML(writer);
+        writer.writeEndElement();
 
         //Camera
         writer.writeStartElement("cameraposition");

File: VisualizationModule/src/org/gephi/visualization/VizModel.java
Patch:
@@ -454,7 +454,6 @@ public void writeXML(XMLStreamWriter writer) throws XMLStreamException {
 
         //TextModel
         textModel.writeXML(writer);
-        writer.writeEndElement();
 
         //Camera
         writer.writeStartElement("cameraposition");

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/persistence/DataLaboratoryPersistenceProvider.java
Patch:
@@ -106,7 +106,7 @@ private void readDataTablesModel(XMLStreamReader reader, Workspace workspace) th
             if (eventType.equals(XMLEvent.START_ELEMENT)) {
                 String name = reader.getLocalName();
                 if (NODE_COLUMN.equalsIgnoreCase(name)) {
-                    String id = reader.getAttributeValue(null, "id");
+                    Integer id = Integer.parseInt(reader.getAttributeValue(null, "id"));
                     AttributeColumn column = nodesTable.getColumn(id);
                     if (column != null) {
                         nodeColumns.addAvailableColumn(column);

File: FiltersImpl/src/org/gephi/filters/FilterModelPersistenceProvider.java
Patch:
@@ -99,14 +99,14 @@ private void writeQuery(XMLStreamWriter writer, Query query, int parentId) throw
         if (parentId != -1) {
             writer.writeAttribute("parent", String.valueOf(parentId));
         }
+        FilterBuilder builder = model.getLibrary().getBuilder(query.getFilter());
+        writer.writeAttribute("builder", builder.getClass().getName());
+
         //Params
         for (int i = 0; i < query.getPropertiesCount(); i++) {
             FilterProperty prop = query.getFilter().getProperties()[i];
             writeParameter(writer, i, prop);
         }
-        //Filter
-        FilterBuilder builder = model.getLibrary().getBuilder(query.getFilter());
-        writer.writeAttribute("builder", builder.getClass().getName());
 
         writer.writeEndElement();
 

File: ProjectAPI/src/org/gephi/project/io/SaveTask.java
Patch:
@@ -84,7 +84,7 @@ public void run() {
             //Create Writer and write project
             XMLOutputFactory outputFactory = XMLOutputFactory.newInstance();
             outputFactory.setProperty("javax.xml.stream.isRepairingNamespaces", Boolean.FALSE);
-            XMLStreamWriter writer = outputFactory.createXMLStreamWriter(zipOut);
+            XMLStreamWriter writer = outputFactory.createXMLStreamWriter(zipOut, "UTF-8");
             gephiWriter.writeAll(project, writer);
             writer.close();
 

File: VisualizationModule/src/org/gephi/visualization/VizModelPersistenceProvider.java
Patch:
@@ -48,7 +48,7 @@ public void writeXML(XMLStreamWriter writer, Workspace workspace) {
     public void readXML(XMLStreamReader reader, Workspace workspace) {
         VizModel vizModel = new VizModel();
         try {
-            vizModel.readXML(reader);
+            vizModel.readXML(reader, workspace);
         } catch (XMLStreamException ex) {
             throw new RuntimeException(ex);
         }

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java
Patch:
@@ -352,7 +352,7 @@ public void itemStateChanged(java.awt.event.ItemEvent evt) {
         });
 
         infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
-        infoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/ui/datatable/resources/info.png"))); // NOI18N
+        infoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/desktop/datalab/resources/info.png"))); // NOI18N
         infoLabel.setText(org.openide.util.NbBundle.getMessage(MergeColumnsUI.class, "MergeColumnsUI.infoLabel.text")); // NOI18N
         infoLabel.setEnabled(false);
 
@@ -386,7 +386,7 @@ public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                         .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                             .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-                                .addComponent(availableStrategiesComboBox, 0, 232, Short.MAX_VALUE)
+                                .addComponent(availableStrategiesComboBox, 0, 218, Short.MAX_VALUE)
                                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                 .addComponent(infoLabel)
                                 .addContainerGap())))))

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java
Patch:
@@ -271,10 +271,10 @@ public void refreshModel(HierarchicalGraph graph, AttributeColumn[] cols, DataTa
         }
 
         if (model == null) {
-            model = new EdgeDataTableModel(graph.getEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));
+            model = new EdgeDataTableModel(graph.getEdgesAndMetaEdges().toArray(), columns.toArray(new EdgeDataColumn[0]));
             table.setModel(model);
         } else {
-            model.setEdges(graph.getEdges().toArray());
+            model.setEdges(graph.getEdgesAndMetaEdges().toArray());
             model.setColumns(columns.toArray(new EdgeDataColumn[0]));
         }
 

File: StatisticsPlugin/src/org/gephi/statistics/plugin/ClusteringCoefficient.java
Patch:
@@ -217,10 +217,10 @@ public double getAverageClusteringCoefficient() {
 
     public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         HierarchicalGraph hgraph = null;
-        if (!isDirected) {
-            hgraph = graphModel.getHierarchicalUndirectedGraphVisible();
-        } else {
+        if (isDirected) {
             hgraph = graphModel.getHierarchicalDirectedGraphVisible();
+        } else {
+            hgraph = graphModel.getHierarchicalUndirectedGraphVisible();
         }
 
         execute(hgraph, attributeModel);

File: StatisticsPlugin/src/org/gephi/statistics/plugin/EigenvectorCentrality.java
Patch:
@@ -37,6 +37,7 @@ License, or (at your option) any later version.
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.HierarchicalDirectedGraph;
 import org.gephi.graph.api.HierarchicalGraph;
+import org.gephi.graph.api.HierarchicalUndirectedGraph;
 import org.gephi.graph.api.Node;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.utils.TempDirUtils;
@@ -156,7 +157,7 @@ public void execute(HierarchicalGraph hgraph, AttributeModel attributeModel) {
                 if (isDirected) {
                     iter = ((HierarchicalDirectedGraph) hgraph).getInEdgesAndMetaInEdges(u);
                 } else {
-                    iter = hgraph.getEdges(u);
+                    iter = ((HierarchicalUndirectedGraph) hgraph).getEdgesAndMetaEdges(u);
                 }
 
                 for (Edge e : iter) {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/DiameterUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.GraphDistance;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 @ServiceProvider(service = StatisticsUI.class)
@@ -65,7 +66,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Network Diameter";
+        return NbBundle.getMessage(getClass(), "DiameterUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/GraphDensityUI.java
Patch:
@@ -66,7 +66,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return NbBundle.getMessage(getClass(), "ConnectedComponentUI.name");
+        return NbBundle.getMessage(getClass(), "GraphDensityUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/HitsUI.java
Patch:
@@ -71,7 +71,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return NbBundle.getMessage(getClass(), "ConnectedComponentUI.name");
+        return NbBundle.getMessage(getClass(), "HitsUI.name");
     }
 
     public String getCategory() {

File: ToolsPlugin/src/org/gephi/ui/tools/plugin/HeatMapPanel.java
Patch:
@@ -65,7 +65,8 @@ public HeatMapPanel(Color[] gradientColors, float[] gradientPositions, boolean d
         dontPaintUnreachableCheckbox.setSelected(dontPaintUnreachable);
         dontPaintUnreachableCheckbox.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
         dontPaintUnreachableCheckbox.setText(org.openide.util.NbBundle.getMessage(HeatMapPanel.class, "HeatMapPanel.dontPaintUnreachableCheckbox.text")); // NOI18N
-        dontPaintUnreachableCheckbox.setPreferredSize(new java.awt.Dimension(139, 28));
+        dontPaintUnreachableCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(HeatMapPanel.class, "HeatMapPanel.dontPaintUnreachableCheckbox.text")); // NOI18N
+        dontPaintUnreachableCheckbox.setPreferredSize(new java.awt.Dimension(160, 28));
         gradientPanel.add(dontPaintUnreachableCheckbox);
 
         //Invert
@@ -118,6 +119,7 @@ public boolean isUsePalette() {
 
     public void setStatus(String status) {
         statusLabel.setText(status);
+        statusLabel.setToolTipText(status);
     }
 
     public Color[] getGradientColors() {

File: VisualizationModule/src/org/gephi/visualization/component/GlobalSettingsPanel.java
Patch:
@@ -191,8 +191,8 @@ private void initComponents() {
                 .addGap(27, 27, 27)
                 .addComponent(zoomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addGap(28, 28, 28)
-                .addComponent(hightlightCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addGap(50, 50, 50))
+                .addComponent(hightlightCheckBox)
+                .addGap(32, 32, 32))
         );
         layout.setVerticalGroup(
             layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ClusteringCoefficientUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.ClusteringCoefficient;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -67,7 +68,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Avg. Clustering Coefficient";
+        return NbBundle.getMessage(getClass(), "ClusteringCoefficientUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ConnectedComponentUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.ConnectedComponents;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -67,7 +68,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Connected Components";
+        return NbBundle.getMessage(getClass(), "ConnectedComponentUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/DegreeDistributionUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.DegreeDistribution;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 @ServiceProvider(service = StatisticsUI.class)
@@ -63,7 +64,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Degree Power Law";
+        return NbBundle.getMessage(getClass(), "DegreeDistributionUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/EigenvectorCentralityUI.java
Patch:
@@ -24,6 +24,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.EigenvectorCentrality;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -70,7 +71,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Eigenvector Centrality ";
+        return NbBundle.getMessage(getClass(), "EigenvectorCentralityUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/GraphDensityUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.GraphDensity;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 @ServiceProvider(service = StatisticsUI.class)
@@ -65,7 +66,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Graph Density";
+        return NbBundle.getMessage(getClass(), "ConnectedComponentUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/HitsUI.java
Patch:
@@ -24,6 +24,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.Hits;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -70,7 +71,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "HITS";
+        return NbBundle.getMessage(getClass(), "ConnectedComponentUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/InOutDegreeUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.InOutDegree;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -58,7 +59,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Average Degree";
+        return NbBundle.getMessage(getClass(), "InOutDegreeUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ModularityUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.Modularity;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 @ServiceProvider(service = StatisticsUI.class)
@@ -66,7 +67,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Modularity";
+        return NbBundle.getMessage(getClass(), "ModularityUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/PageRankUI.java
Patch:
@@ -24,6 +24,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.PageRank;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 @ServiceProvider(service = StatisticsUI.class)
@@ -68,7 +69,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "PageRank";
+        return NbBundle.getMessage(getClass(), "PageRankUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/PathLengthUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.GraphDistance;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 @ServiceProvider(service = StatisticsUI.class)
@@ -65,7 +66,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Average Path Length";
+        return NbBundle.getMessage(getClass(), "PathLengthUI.name");
     }
 
     public String getCategory() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/WeightedDegreeUI.java
Patch:
@@ -25,6 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.statistics.plugin.WeightedDegree;
 import org.gephi.statistics.spi.Statistics;
 import org.gephi.statistics.spi.StatisticsUI;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -58,7 +59,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Average Weighted Degree";
+        return NbBundle.getMessage(getClass(), "WeightedDegreeUI.name");
     }
 
     public String getCategory() {

File: VisualizationModule/src/org/gephi/visualization/apiimpl/contextmenuitems/SelectInDataLaboratory.java
Patch:
@@ -65,7 +65,7 @@ public boolean isAvailable() {
     }
 
     public boolean canExecute() {
-        return true;
+        return nodes.length>=1;
     }
 
     public int getType() {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java
Patch:
@@ -235,7 +235,7 @@ private boolean parseEdge(ArrayList list) {
             } else if ("target".equals(key)) {
                 NodeDraft target = container.getNode(value.toString());
                 edgeDraft.setTarget(target);
-            } else if ("value".equals(key)) {
+            } else if ("value".equals(key) || "weight".equals(key)) {
                 if (value instanceof Double) {
                     edgeDraft.setWeight(((Double) value).floatValue());
                 }
@@ -253,7 +253,7 @@ private boolean addEdgeAttributes(EdgeDraft edge, String prefix, ArrayList list)
         for (int i = 0; i < list.size(); i += 2) {
             String key = (String) list.get(i);
             Object value = list.get(i + 1);
-            if ("source".equals(key) || "target".equals(key) || "value".equals(key) || "label".equals(key)) {
+            if ("source".equals(key) || "target".equals(key) || "value".equals(key) || "weight".equals(key) || "label".equals(key)) {
                 continue; // already parsed
             }
             if (value instanceof ArrayList) {

File: StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java
Patch:
@@ -135,7 +135,7 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         execute(graph, attributeModel);
     }
 
-    public void execute(HierarchicalGraph graph, AttributeModel attributeModel) {
+    private void execute(HierarchicalGraph graph, AttributeModel attributeModel) {
         //Mark this as not yet canceled.
         isCanceled = false;
 

File: StatisticsPlugin/src/org/gephi/statistics/plugin/InOutDegree.java
Patch:
@@ -71,7 +71,7 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         execute(graph, attributeModel);
     }
 
-    public void execute(HierarchicalGraph graph, AttributeModel attributeModel) {
+    private void execute(HierarchicalGraph graph, AttributeModel attributeModel) {
         isCanceled = false;
         avgInDegree = avgOutDegree = 0.0;
 

File: StatisticsAPI/src/org/gephi/statistics/StatisticsControllerImpl.java
Patch:
@@ -126,15 +126,15 @@ public void run() {
             }, builder.getName(), null);
         } else {
             pStatistics.execute(graphModel, attributeModel);
-            if (listener != null) {
-                listener.taskFinished(null);
-            }
             model.setRunning(pStatistics, false);
             for (StatisticsUI s : uis) {              
                 model.addResult(s);
                 s.unsetup();
             }
             model.addReport(pStatistics);
+            if (listener != null) {
+                listener.taskFinished(null);
+            }
         }
     }
 

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/NeighborsBuilder.java
Patch:
@@ -35,6 +35,7 @@ License, or (at your option) any later version.
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphView;
+import org.gephi.graph.api.HierarchicalGraph;
 import org.gephi.graph.api.Node;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
@@ -86,7 +87,7 @@ public static class NeighborsFilter implements ComplexFilter {
         public Graph filter(Graph graph) {
 
             GraphView graphView = graph.getView();
-            Graph mainGraph = graphView.getGraphModel().getGraph();
+            HierarchicalGraph mainGraph = graphView.getGraphModel().getHierarchicalGraph();
 
             List<Node> nodes = new ArrayList<Node>();
             for (Node n : graph.getNodes()) {

File: GeneratorPlugin/src/org/gephi/io/generator/plugin/Kleinberg.java
Patch:
@@ -62,7 +62,7 @@ public class Kleinberg implements Generator {
 
     public void generate(ContainerLoader container) {
         Progress.start(progressTicket, n * n + n * n * (2 * p + 1) * (2 * p + 1)
-                + (int) Math.pow(n, 4) + n * n * q);
+                + (int) Math.pow(n, 3) + n * n * q);
         Random random = new Random();
 
         // Creating lattice n x n
@@ -106,8 +106,8 @@ && d(i, j, k, l) <= p && nodes[i][j] != nodes[(k + n) % n][(l + n) % n]) {
                         } else if (torusBased && dtb(i, j, k, l) > p) {
                             sum += Math.pow(dtb(i, j, k, l), -r);
                         }
-                        Progress.progress(progressTicket);
                     }
+					Progress.progress(progressTicket);
                 }
                 for (int m = 0; m < q && !cancel; ++m) {
                     double b = random.nextDouble();

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -481,7 +481,7 @@ private void readEdgeAttValue(XMLStreamReader reader, EdgeDraft edge) throws Exc
             }
 
             //Data attribute value
-            AttributeColumn column = container.getAttributeModel().getNodeTable().getColumn(fore);
+            AttributeColumn column = container.getAttributeModel().getEdgeTable().getColumn(fore);
             if (column != null) {
                 try {
                     Object val = column.getType().parse(value);

File: GeneratorPlugin/src/org/gephi/io/generator/plugin/BarabasiAlbert.java
Patch:
@@ -24,6 +24,7 @@
 import org.gephi.io.generator.spi.Generator;
 import org.gephi.io.generator.spi.GeneratorUI;
 import org.gephi.io.importer.api.ContainerLoader;
+import org.gephi.io.importer.api.EdgeDefault;
 import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.NodeDraft;
 import org.gephi.utils.progress.Progress;
@@ -32,7 +33,7 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- * Generates a directed connected graph.
+ * Generates an undirected connected graph.
  *
  * http://en.wikipedia.org/wiki/Barabási–Albert_model
  * http://www.barabasilab.com/pubs/CCNR-ALB_Publications/199910-15_Science-Emergence/199910-15_Science-Emergence.pdf
@@ -58,6 +59,7 @@ public class BarabasiAlbert implements Generator {
 	public void generate(ContainerLoader container) {
 		Progress.start(progressTicket, N + M);
 		Random random = new Random();
+		container.setEdgeDefault(EdgeDefault.UNDIRECTED);
 
 		NodeDraft[] nodes = new NodeDraft[N];
 		int[] degrees = new int[N];

File: GeneratorPlugin/src/org/gephi/io/generator/plugin/BarabasiAlbertGeneralized.java
Patch:
@@ -24,6 +24,7 @@
 import org.gephi.io.generator.spi.Generator;
 import org.gephi.io.generator.spi.GeneratorUI;
 import org.gephi.io.importer.api.ContainerLoader;
+import org.gephi.io.importer.api.EdgeDefault;
 import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.NodeDraft;
 import org.gephi.utils.progress.Progress;
@@ -32,7 +33,7 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- * Generates a directed not necessarily connected graph.
+ * Generates an undirected not necessarily connected graph.
  *
  * http://en.wikipedia.org/wiki/Barabási–Albert_model
  * http://www.barabasilab.com/pubs/CCNR-ALB_Publications/199910-15_Science-Emergence/199910-15_Science-Emergence.pdf
@@ -62,6 +63,7 @@ public class BarabasiAlbertGeneralized implements Generator {
 	public void generate(ContainerLoader container) {
 		Progress.start(progressTicket, N);
 		Random random = new Random();
+		container.setEdgeDefault(EdgeDefault.UNDIRECTED);
 
 		NodeDraft[] nodes = new NodeDraft[N + 1];
 		int[] degrees = new int[N + 1];

File: GeneratorPlugin/src/org/gephi/io/generator/plugin/BarabasiAlbertSimplifiedA.java
Patch:
@@ -24,6 +24,7 @@
 import org.gephi.io.generator.spi.Generator;
 import org.gephi.io.generator.spi.GeneratorUI;
 import org.gephi.io.importer.api.ContainerLoader;
+import org.gephi.io.importer.api.EdgeDefault;
 import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.NodeDraft;
 import org.gephi.utils.progress.Progress;
@@ -32,7 +33,7 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- * Generates a directed connected graph.
+ * Generates an undirected connected graph.
  *
  * http://en.wikipedia.org/wiki/Barabási–Albert_model
  * http://www.barabasilab.com/pubs/CCNR-ALB_Publications/199910-15_Science-Emergence/199910-15_Science-Emergence.pdf
@@ -58,6 +59,7 @@ public class BarabasiAlbertSimplifiedA implements Generator {
 	public void generate(ContainerLoader container) {
 		Progress.start(progressTicket, N + M);
 		Random random = new Random();
+		container.setEdgeDefault(EdgeDefault.UNDIRECTED);
 
 		NodeDraft[] nodes = new NodeDraft[N];
 

File: GeneratorPlugin/src/org/gephi/io/generator/plugin/BarabasiAlbertSimplifiedB.java
Patch:
@@ -24,6 +24,7 @@
 import org.gephi.io.generator.spi.Generator;
 import org.gephi.io.generator.spi.GeneratorUI;
 import org.gephi.io.importer.api.ContainerLoader;
+import org.gephi.io.importer.api.EdgeDefault;
 import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.NodeDraft;
 import org.gephi.utils.progress.Progress;
@@ -32,7 +33,7 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- * Generates a directed not necessarily connected graph.
+ * Generates an undirected not necessarily connected graph.
  *
  * http://en.wikipedia.org/wiki/Barabási–Albert_model
  * http://www.barabasilab.com/pubs/CCNR-ALB_Publications/199910-15_Science-Emergence/199910-15_Science-Emergence.pdf
@@ -57,6 +58,7 @@ public class BarabasiAlbertSimplifiedB implements Generator {
 	public void generate(ContainerLoader container) {
 		Progress.start(progressTicket, N + M);
 		Random random = new Random();
+		container.setEdgeDefault(EdgeDefault.UNDIRECTED);
 
 		NodeDraft[] nodes = new NodeDraft[N];
 		int[] degrees = new int[N];

File: GeneratorPlugin/src/org/gephi/io/generator/plugin/ErdosRenyiGnp.java
Patch:
@@ -24,6 +24,7 @@
 import org.gephi.io.generator.spi.Generator;
 import org.gephi.io.generator.spi.GeneratorUI;
 import org.gephi.io.importer.api.ContainerLoader;
+import org.gephi.io.importer.api.EdgeDefault;
 import org.gephi.io.importer.api.EdgeDraft;
 import org.gephi.io.importer.api.NodeDraft;
 import org.gephi.utils.progress.Progress;
@@ -32,7 +33,7 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- * Generates a directed not necessarily connected graph.
+ * Generates an undirected not necessarily connected graph.
  *
  * http://www.math-inst.hu/~p_erdos/1960-10.pdf
  * http://www.inf.uni-konstanz.de/algo/publications/bb-eglrn-05.pdf
@@ -55,6 +56,7 @@ public class ErdosRenyiGnp implements Generator {
 	public void generate(ContainerLoader container) {
 		Progress.start(progressTicket, n + n * n);
 		Random random = new Random();
+		container.setEdgeDefault(EdgeDefault.UNDIRECTED);
 
 		NodeDraft[] nodes = new NodeDraft[n];
 

File: GeneratorPlugin/src/org/gephi/io/generator/plugin/WattsStrogatzAlpha.java
Patch:
@@ -28,8 +28,9 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
+ * http://en.wikipedia.org/wiki/Watts_and_Strogatz_model
  * http://tam.cornell.edu/tam/cms/manage/upload/SS_nature_smallworld.pdf
- *http://www.bsos.umd.edu/socy/alan/stats/network-grad/summaries/Watts-Six%20Degrees-Ghosh.pdf
+ * http://www.bsos.umd.edu/socy/alan/stats/network-grad/summaries/Watts-Six%20Degrees-Ghosh.pdf
  *
  * @author Cezary Bartosiak
  */

File: AttributesImpl/src/org/gephi/data/attributes/event/AttributeEventManager.java
Patch:
@@ -83,7 +83,6 @@ public void run() {
                         }
 
                         eventCompress.add(evt.getData());
-                        eventQueue.poll();
                     } else {
                         break;
                     }

File: DHNSGraph/src/org/gephi/graph/dhns/core/EventManager.java
Patch:
@@ -80,9 +80,7 @@ public void run() {
                             eventCompress = new ArrayList<Object>();
                             eventCompress.add(precEvt.getData());
                         }
-
                         eventCompress.add(evt.getData());
-                        eventQueue.poll();
                     } else {
                         break;
                     }
@@ -162,7 +160,7 @@ public void stop(boolean stop) {
     }
 
     public void fireEvent(AbstractEvent event) {
-        eventQueue.add(event);
+        //eventQueue.add(event);
         synchronized (lock) {
             lock.notifyAll();
         }

File: AttributesImpl/src/org/gephi/data/attributes/AttributeModelDuplicateProvider.java
Patch:
@@ -31,7 +31,7 @@ License, or (at your option) any later version.
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = WorkspaceDuplicateProvider.class, position = 100)
+@ServiceProvider(service = WorkspaceDuplicateProvider.class, position = 10)
 public class AttributeModelDuplicateProvider implements WorkspaceDuplicateProvider {
 
     public void duplicate(Workspace source, Workspace destination) {

File: AttributesImpl/src/org/gephi/data/attributes/event/AttributeEventManager.java
Patch:
@@ -83,6 +83,7 @@ public void run() {
                         }
 
                         eventCompress.add(evt.getData());
+                        eventQueue.poll();
                     } else {
                         break;
                     }

File: DHNSGraph/src/org/gephi/graph/dhns/core/EventManager.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.graph.dhns.core;
 
 import java.util.ArrayList;
@@ -75,13 +75,14 @@ public void run() {
             AbstractEvent evt = null;
             while ((evt = eventQueue.peek()) != null) {
                 if (precEvt != null) {
-                    if ((evt instanceof NodeEvent || evt instanceof EdgeEvent) && precEvt.getEventType().equals(evt.getEventType()) && precEvt.getView()==evt.getView()) {     //Same type
+                    if ((evt instanceof NodeEvent || evt instanceof EdgeEvent) && precEvt.getEventType().equals(evt.getEventType()) && precEvt.getView() == evt.getView()) {     //Same type
                         if (eventCompress == null) {
                             eventCompress = new ArrayList<Object>();
                             eventCompress.add(precEvt.getData());
                         }
 
                         eventCompress.add(evt.getData());
+                        eventQueue.poll();
                     } else {
                         break;
                     }

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphViewImpl.java
Patch:
@@ -48,7 +48,7 @@ public class GraphViewImpl implements GraphView {
     public GraphViewImpl(Dhns dhns, int viewId) {
         this.dhns = dhns;
         this.viewId = viewId;
-        this.structure = new TreeStructure(viewId);
+        this.structure = new TreeStructure(this);
         this.structureModifier = new StructureModifier(dhns, this);
     }
 

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestClusteredGraph.java
Patch:
@@ -146,7 +146,7 @@ public void tearDown() {
     @Test
     public void testMoveDurableTreeList() {
 
-        TreeStructure treeStructure = new TreeStructure(0);
+        TreeStructure treeStructure = new TreeStructure(null);
 
         AbstractNode p0 = treeStructure.getRoot();
         AbstractNode p1 = new AbstractNode(1, 0, 0, 0, 0, null);

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestDirectedGraph.java
Patch:
@@ -126,7 +126,7 @@ public void tearDown() {
 
     @Test
     public void testTreeList() {
-        DurableTreeList durableTreeList = new DurableTreeList();
+        DurableTreeList durableTreeList = new DurableTreeList(null);
         List<AbstractNode> expected = new ArrayList<AbstractNode>();
         for (int i = 0; i < 10; i++) {
             AbstractNode node = new AbstractNode(i, 0, 0, 0, 0, null);

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java
Patch:
@@ -214,21 +214,21 @@ private void createKeys(Document document, Element root) {
             Element colorRKeyE = document.createElement("key");
             colorRKeyE.setAttribute("id", "r");
             colorRKeyE.setAttribute("attr.name", "r");
-            colorRKeyE.setAttribute("attr.type", "integer");
+            colorRKeyE.setAttribute("attr.type", "int");
             colorRKeyE.setAttribute("for", "node");
             root.appendChild(colorRKeyE);
 
             Element colorGKeyE = document.createElement("key");
             colorGKeyE.setAttribute("id", "g");
             colorGKeyE.setAttribute("attr.name", "g");
-            colorGKeyE.setAttribute("attr.type", "integer");
+            colorGKeyE.setAttribute("attr.type", "int");
             colorGKeyE.setAttribute("for", "node");
             root.appendChild(colorGKeyE);
 
             Element colorBKeyE = document.createElement("key");
             colorBKeyE.setAttribute("id", "b");
             colorBKeyE.setAttribute("attr.name", "b");
-            colorBKeyE.setAttribute("attr.type", "integer");
+            colorBKeyE.setAttribute("attr.type", "int");
             colorBKeyE.setAttribute("for", "node");
             root.appendChild(colorBKeyE);
         }

File: StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDistance.java
Patch:
@@ -239,7 +239,7 @@ public void execute(Graph graph, AttributeModel attributeModel) {
             }
             if (this.mRelativeValues) {
                 mCloseness[s_index] = (mCloseness[s_index] == 0) ? 0 : 1.0 / mCloseness[s_index];
-                mBetweenness[s_index] /= ((mN - 1) * (mN - 2)) / 2;
+                mBetweenness[s_index] /= mDirected ? (mN - 1) * (mN - 2) : (mN - 1) * (mN - 2) / 2;
             }
             row.setValue(eccentricityCol, mEccentricity[s_index]);
             row.setValue(closenessCol, mCloseness[s_index]);

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterCSV.java
Patch:
@@ -133,7 +133,7 @@ private void exportData(Graph graph) throws Exception {
                     for (int j = 0; j < nodes.length; j++) {
                         Node m = nodes[j];
                         Edge e = directedGraph.getEdge(n, m);
-                        e = e == null ? ((HierarchicalDirectedGraph) directedGraph).getMetaEdge(n, m) : null;
+                        e = e == null ? ((HierarchicalDirectedGraph) directedGraph).getMetaEdge(n, m) : e;
                         writeEdge(e, j < nodes.length - 1);
                     }
                     Progress.progress(progressTicket);
@@ -150,7 +150,7 @@ private void exportData(Graph graph) throws Exception {
                     for (int j = 0; j < nodes.length; j++) {
                         Node m = nodes[j];
                         Edge e = undirectedGraph.getEdge(n, m);
-                        e = e == null ? ((HierarchicalUndirectedGraph) undirectedGraph).getMetaEdge(n, m) : null;
+                        e = e == null ? ((HierarchicalUndirectedGraph) undirectedGraph).getMetaEdge(n, m) : e;
                         writeEdge(e, j < nodes.length - 1);
                     }
                     Progress.progress(progressTicket);
@@ -167,7 +167,7 @@ private void exportData(Graph graph) throws Exception {
                     for (int j = 0; j < nodes.length; j++) {
                         Node m = nodes[j];
                         Edge e = mixedGraph.getEdge(n, m);
-                        e = e == null ? ((HierarchicalMixedGraph) mixedGraph).getMetaEdge(n, m) : null;
+                        e = e == null ? ((HierarchicalMixedGraph) mixedGraph).getMetaEdge(n, m) : e;
                         writeEdge(e, j < nodes.length - 1);
                     }
                     Progress.progress(progressTicket);

File: StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDistance.java
Patch:
@@ -238,7 +238,7 @@ public void execute(Graph graph, AttributeModel attributeModel) {
                 mBetweenness[s_index] /= 2;
             }
             if (this.mRelativeValues) {
-                mCloseness[s_index] = 1.0 / mCloseness[s_index];
+                mCloseness[s_index] = (mCloseness[s_index] == 0) ? 0 : 1.0 / mCloseness[s_index];
                 mBetweenness[s_index] /= ((mN - 1) * (mN - 2)) / 2;
             }
             row.setValue(eccentricityCol, mEccentricity[s_index]);

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -284,7 +284,8 @@ private void writeAttributes(XMLStreamWriter xmlWriter, AttributeTable table) th
                 } else {
                     staticCols.add(col);
                 }
-            } else if (exportDynamic && col.getType().isDynamicType() && col.getOrigin().equals(AttributeOrigin.PROPERTY) && col.getIndex() == PropertiesColumn.EDGE_WEIGHT.getIndex()) {
+            } else if (exportDynamic && col.getType().isDynamicType() && col.getType() != AttributeType.TIME_INTERVAL
+                    && col.getOrigin().equals(AttributeOrigin.PROPERTY) && col.getIndex() == PropertiesColumn.EDGE_WEIGHT.getIndex()) {
                 dynamicCols.add(col);
             }
         }

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -541,6 +541,7 @@ private FileObject getArchivedFile(FileObject fileObject) {
                         }
                     }
                     tempFile.deleteOnExit();
+                    tempFile = FileUtil.normalizeFile(tempFile);
                     fileObject = FileUtil.toFileObject(tempFile);
                 } catch (IOException ex) {
                     Exceptions.printStackTrace(ex);

File: ImportAPI/src/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -20,10 +20,8 @@ License, or (at your option) any later version.
  */
 package org.gephi.io.importer.impl;
 
-import java.io.BufferedWriter;
 import java.io.File;
 import java.io.FileNotFoundException;
-import java.io.FileWriter;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.Reader;
@@ -255,6 +253,7 @@ private FileObject getArchivedFile(FileObject fileObject) {
                         tempFile = File.createTempFile(fileObject.getName().replaceAll("\\.(gz|bz2)$", ""), "." + fileExt1);
                     }
                     tempFile.deleteOnExit();
+                    tempFile = FileUtil.normalizeFile(tempFile);
                     fileObject = FileUtil.toFileObject(tempFile);
                 } catch (IOException ex) {
                     Exceptions.printStackTrace(ex);

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -30,7 +30,7 @@ public final class PreviewTopComponent extends TopComponent {
     private static PreviewTopComponent instance;
     static final String ICON_PATH = "org/gephi/desktop/preview/resources/preview.png";
     private static final String PREFERRED_ID = "PreviewTopComponent";
-    private final ProcessingPreview sketch = new ProcessingPreview();
+    private final ProcessingPreview sketch;
     private final ProcessingListener processingListener = new ProcessingListener();
 
     private PreviewTopComponent() {
@@ -48,6 +48,7 @@ private PreviewTopComponent() {
         bannerPanel.setVisible(false);
 
         // inits the preview applet
+        sketch = new ProcessingPreview();
         sketchPanel.add(sketch, BorderLayout.CENTER);
         sketch.init();
         sketch.registerPost(processingListener);
@@ -201,6 +202,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         previewPanel.setLayout(new java.awt.CardLayout());
 
         sketchPanel.setBackground(new java.awt.Color(255, 255, 255));
+        sketchPanel.setPreferredSize(new java.awt.Dimension(500, 500));
         sketchPanel.setLayout(new java.awt.BorderLayout());
         previewPanel.add(sketchPanel, "previewCard");
 

File: PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java
Patch:
@@ -265,7 +265,7 @@ private UnidirectionalEdgeImpl createPreviewUnidirectionalEdge(GraphImpl preview
         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();
 
         String label = sourceEdgeData.getLabel();
-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {
+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {
             label = sourceEdgeTextData.getText();
         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {
             label = null;
@@ -302,7 +302,7 @@ private BidirectionalEdgeImpl createPreviewBidirectionalEdge(GraphImpl previewGr
         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();
 
         String label = sourceEdgeData.getLabel();
-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {
+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {
             label = sourceEdgeTextData.getText();
         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {
             label = null;
@@ -339,7 +339,7 @@ private UndirectedEdgeImpl createPreviewUndirectedEdge(GraphImpl previewGraph, o
         org.gephi.graph.api.TextData sourceEdgeTextData = sourceEdgeData.getTextData();
 
         String label = sourceEdgeData.getLabel();
-        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {
+        if (sourceEdgeTextData != null && sourceEdgeTextData.getText() != null && !sourceEdgeTextData.getText().isEmpty() && sourceEdgeTextData.isVisible()) {
             label = sourceEdgeTextData.getText();
         } else if (sourceEdgeTextData != null && !sourceEdgeTextData.isVisible()) {
             label = null;

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterBuilderDOT.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.io.importer.plugin.file;
 
 import org.gephi.io.importer.api.FileType;
@@ -45,11 +45,11 @@ public String getName() {
     }
 
     public FileType[] getFileTypes() {
-        FileType ft = new FileType(".dot", NbBundle.getMessage(getClass(), "fileType_DOT_Name"));
+        FileType ft = new FileType(new String[]{".dot", ".gv"}, NbBundle.getMessage(getClass(), "fileType_GraphViz_Name"));
         return new FileType[]{ft};
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.getExt().equalsIgnoreCase("dot");
+        return fileObject.getExt().equalsIgnoreCase("dot") || fileObject.getExt().equalsIgnoreCase("gv");
     }
 }

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -616,6 +616,7 @@ public void closeLoader() {
                     edge.setType(EdgeDraft.EdgeType.UNDIRECTED);
                 }
                 if (edge.getType().equals(EdgeDraft.EdgeType.UNDIRECTED)) {
+                    String myKey = edge.getSource().getId() + "-" + edge.getTarget().getId();
                     String oppositekey = edge.getTarget().getId() + "-" + edge.getSource().getId();
                     EdgeDraftImpl opposite = edgeSourceTargetMap.get(oppositekey);
                     if (opposite != null) {
@@ -624,8 +625,8 @@ public void closeLoader() {
                         } else {
                             edge.setWeight(Math.max(edge.getWeight(), opposite.getWeight()));
                         }
-                        edgeMap.remove(opposite.getId());
-                        edgeSourceTargetMap.remove(oppositekey);
+                        edgeMap.remove(edge.getId());
+                        edgeSourceTargetMap.remove(myKey);
                     }
                 }
             }

File: AttributesAPI/src/org/gephi/data/attributes/type/DynamicDouble.java
Patch:
@@ -21,6 +21,7 @@ License, or (at your option) any later version.
 package org.gephi.data.attributes.type;
 
 import java.math.BigDecimal;
+import java.math.RoundingMode;
 import java.util.Hashtable;
 import java.util.List;
 import org.gephi.data.attributes.api.Estimator;
@@ -135,7 +136,7 @@ public Double getValue(Interval interval, Estimator estimator) {
 				BigDecimal total = new BigDecimal(0);
 				for (int i = 0; i < values.size(); ++i)
 					total = total.add(BigDecimal.valueOf(values.get(i)));
-				return total.divide(BigDecimal.valueOf((long)values.size())).doubleValue();
+				return total.divide(BigDecimal.valueOf((long)values.size()), 10, RoundingMode.HALF_EVEN).doubleValue();
 			case MEDIAN:
 				if (values.size() % 2 == 1)
 					return values.get(values.size() / 2);

File: AttributesAPI/src/org/gephi/data/attributes/type/DynamicFloat.java
Patch:
@@ -136,7 +136,7 @@ public Float getValue(Interval interval, Estimator estimator) {
 				BigDecimal total = new BigDecimal(0);
 				for (int i = 0; i < values.size(); ++i)
 					total = total.add(BigDecimal.valueOf(values.get(i).doubleValue()));
-				return total.divide(BigDecimal.valueOf((long)values.size()), RoundingMode.HALF_UP).floatValue();
+				return total.divide(BigDecimal.valueOf((long)values.size()), 10, RoundingMode.HALF_EVEN).floatValue();
 			case MEDIAN:
 				if (values.size() % 2 == 1)
 					return values.get(values.size() / 2);

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -384,6 +384,9 @@ private void refreshOnce(boolean refreshTableOnly) {
     /****************Table related methods:*****************/
     private void refreshFilter() {
         int index = columnComboBox.getSelectedIndex();
+        if (index < 0) {
+            return;
+        }
         if (classDisplayed.equals(ClassDisplayed.NODE)) {
             if (nodeTable.setFilter(filterTextField.getText(), index)) {
                 filterTextField.setBackground(Color.WHITE);

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/EgoBuilder.java
Patch:
@@ -90,7 +90,7 @@ public Graph filter(Graph graph) {
             for (Node n : graph.getNodes()) {
                 if (n.getNodeData().getId().toLowerCase().contains(str)) {
                     nodes.add(n);
-                } else if (n.getNodeData().getLabel().toLowerCase().contains(str)) {
+                } else if ((n.getNodeData().getLabel() != null) && n.getNodeData().getLabel().toLowerCase().contains(str)) {
                     nodes.add(n);
                 }
             }
@@ -130,7 +130,7 @@ public Graph filter(Graph graph) {
         }
 
         public String getName() {
-            return NbBundle.getMessage(DegreeRangeBuilder.class, "EgoBuilder.name");
+            return NbBundle.getMessage(EgoBuilder.class, "EgoBuilder.name");
         }
 
         public FilterProperty[] getProperties() {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -89,6 +89,8 @@ public ImporterGraphML() {
         properties.addNodePropertyAssociation(NodeProperties.LABEL, "d3");  // Default node label used by yEd from yworks.com.
         properties.addNodePropertyAssociation(NodeProperties.X, "x");
         properties.addNodePropertyAssociation(NodeProperties.Y, "y");
+        properties.addNodePropertyAssociation(NodeProperties.X, "xpos");
+        properties.addNodePropertyAssociation(NodeProperties.Y, "ypos");
         properties.addNodePropertyAssociation(NodeProperties.Z, "z");
         properties.addNodePropertyAssociation(NodeProperties.SIZE, "size");
         properties.addNodePropertyAssociation(NodeProperties.R, "r");
@@ -100,6 +102,7 @@ public ImporterGraphML() {
         properties.addEdgePropertyAssociation(EdgeProperties.LABEL, "edgelabel");
         properties.addEdgePropertyAssociation(EdgeProperties.LABEL, "d7");  // Default edge label used by yEd from yworks.com.
         properties.addEdgePropertyAssociation(EdgeProperties.WEIGHT, "weight");
+        properties.addEdgePropertyAssociation(EdgeProperties.WEIGHT, "Edge Weight");
         properties.addEdgePropertyAssociation(EdgeProperties.ID, "id");
         properties.addEdgePropertyAssociation(EdgeProperties.ID, "edgeid");
         properties.addEdgePropertyAssociation(EdgeProperties.R, "r");

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/EdgeDataTable.java
Patch:
@@ -238,7 +238,7 @@ public JXTable getTable() {
 
     public boolean setPattern(String regularExpr, int column) {
         try {
-            if (regularExpr.startsWith("(?i)")) {   //CASE_INSENSITIVE
+            if (!regularExpr.startsWith("(?i)")) {   //CASE_INSENSITIVE
                 regularExpr = "(?i)" + regularExpr;
             }
             rowFilter = RowFilter.regexFilter(regularExpr, column);

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/NodeDataTable.java
Patch:
@@ -105,7 +105,7 @@ public class NodeDataTable {
     private TimeFormat currentTimeFormat;
 
     public NodeDataTable() {
-        attributeUtils=AttributeUtils.getDefault();
+        attributeUtils = AttributeUtils.getDefault();
         attributeColumnsController = Lookup.getDefault().lookup(AttributeColumnsController.class);
 
         outlineTable = new Outline();
@@ -114,7 +114,7 @@ public NodeDataTable() {
 
             public boolean accept(Object value) {
                 if (value == null) {
-                    return false;
+                    value = "";
                 }
                 if (value instanceof ImmutableTreeNode) {
                     String label = ((ImmutableTreeNode) value).getNode().getNodeData().getLabel();
@@ -440,7 +440,7 @@ public Object getValueFor(ImmutableTreeNode node) {
                 return value;
             } else if (attributeUtils.isNumberColumn(column)) {
                 return value;
-            }else {
+            } else {
                 //Show values as Strings like in Edit window and other parts of the program to be consistent
                 if (value != null) {
                     if (value instanceof DynamicType) {//When type is dynamic, take care to show proper time format

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/Arrow2dModel.java
Patch:
@@ -218,7 +218,7 @@ public boolean isInOctreeLeaf(Octant leaf) {
     @Override
     public int[] octreePosition(float centerX, float centerY, float centerZ,
             float size) {
-        return null;
+        return new int[] {};
     }
 
     @Override

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/SelfLoop2dModel.java
Patch:
@@ -230,7 +230,7 @@ public boolean isInOctreeLeaf(Octant leaf) {
     @Override
     public int[] octreePosition(float centerX, float centerY, float centerZ,
             float size) {
-        return null;
+        return new int[] {};
     }
 
     @Override

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -648,7 +648,7 @@ private void readAttribute(XMLStreamReader reader) throws Exception {
                 report.log(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_log_nodeattribute", title, attributeType.getTypeString()));
             } else if ("edge".equalsIgnoreCase(forStr) || "all".equalsIgnoreCase(forStr)) {
                 if (container.getAttributeModel().getEdgeTable().hasColumn(id) || container.getAttributeModel().getEdgeTable().hasColumn(title)) {
-                    report.log(NbBundle.getMessage(ImporterGraphML.class, "importerGraphMLF_error_attributecolumn_exist", id));
+                    report.log(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_error_attributecolumn_exist", id));
                     return;
                 }
                 container.getAttributeModel().getEdgeTable().addColumn(id, title, attributeType, AttributeOrigin.DATA, defaultValue);

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -356,7 +356,7 @@ private void writeNodes(XMLStreamWriter xmlWriter, HierarchicalGraph graph) thro
 
             String id = node.getNodeData().getId();
             xmlWriter.writeAttribute(NODE_ID, id);
-            if (node.getNodeData().getLabel() != null && !node.getNodeData().getLabel().isEmpty() && !node.getNodeData().getLabel().equals(id)) {
+            if (node.getNodeData().getLabel() != null && !node.getNodeData().getLabel().isEmpty()) {
                 xmlWriter.writeAttribute(NODE_LABEL, node.getNodeData().getLabel());
             }
 

File: DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java
Patch:
@@ -304,6 +304,7 @@ public void flatten() {
                     for (int i = 0; i < newEdges.length; i++) {
                         AbstractEdge e = newEdges[i];
                         if (e != null) {
+                            dhns.getGraphStructure().addToDictionnary(e);
                             dhns.getEventManager().fireEvent(new EdgeEvent(EventType.ADD_EDGES, e, view));
                         }
                     }

File: VisualizationModule/src/org/gephi/visualization/apiimpl/ModelImpl.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.visualization.apiimpl;
 
 import javax.media.opengl.GL;
@@ -110,7 +110,7 @@ public void setOctant(Octant octant) {
 
     public void resetOctant() {
         if (this.octants != null) {
-            this.octants[0] = null;
+            this.octants = new Octant[]{null};
         }
     }
 

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/ConvexHullModel.java
Patch:
@@ -156,7 +156,9 @@ public Octant[] getOctants() {
 
     @Override
     public void resetOctant() {
-        octants = null;
+        if (this.octants != null) {
+            this.octants[0] = null;
+        }
     }
 
     @Override

File: DataLaboratoryAPI/src/org/gephi/datalab/api/AttributeColumnsController.java
Patch:
@@ -54,7 +54,9 @@ public interface AttributeColumnsController {
     /**
      * <p>Adds a new column to the specified table with the given title and type of column.</p>
      * <p>The title for the new column can't be repeated in the table, null or an empty string.</p>.
-     * <p>The id of the column will be set to the title.</p>
+     * <p>The id of the column will be set to the same as the title,
+     * but if the first TimeInterval column of the table is created
+     * it will be given the default dynamic time interval id to be able to use dynamic filters.</p>
      * <p>The <code>AttributeOrigin</code> of the column will be set to <code>DATA</code>.</p>
      * <p>Default column value will be set to null.</p>
      * @param table Table to add the column

File: DataLaboratoryAPI/src/org/gephi/datalab/api/AttributeColumnsController.java
Patch:
@@ -60,7 +60,7 @@ public interface AttributeColumnsController {
      * @param table Table to add the column
      * @param title Title for the new column, can't be repeated in the table, null or empty string
      * @param type Type for the new column
-     * @return The created column or null if title is not correct
+     * @return The created column or null if the column could not be created
      */
     AttributeColumn addAttributeColumn(AttributeTable table, String title, AttributeType type);
 
@@ -75,7 +75,7 @@ public interface AttributeColumnsController {
      * @param column Column to duplicate
      * @param title Title for the new column
      * @param type AttributeType for the new column
-     * @return The created column or null if title is not correct
+     * @return The created column or null if the column could not be created
      */
     AttributeColumn duplicateColumn(AttributeTable table, AttributeColumn column, String title, AttributeType type);
 

File: DataLaboratoryAPI/src/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -47,7 +47,6 @@ License, or (at your option) any later version.
 import org.gephi.data.properties.PropertiesColumn;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.GraphElementsController;
-import org.gephi.dynamic.api.DynamicController;
 import org.gephi.graph.api.Attributes;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;

File: Utils/src/org/gephi/utils/TableCSVExporter.java
Patch:
@@ -66,9 +66,9 @@ public static void writeCSVFile(JTable table, File file, Character separator, Ch
         //Write rows:
         Object value;
         String text;
-        for (int row = 0; row < model.getRowCount(); row++) {
+        for (int row = 0; row < table.getRowCount(); row++) {
             for (int column = 0; column < columnsToExport.length; column++) {
-                value = model.getValueAt(row, columnsToExport[column]);
+                value = model.getValueAt(table.convertRowIndexToModel(row), columnsToExport[column]);
                 if (value != null) {
                     text = value.toString();
                 } else {

File: DataLaboratoryAPI/src/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -47,6 +47,7 @@ License, or (at your option) any later version.
 import org.gephi.data.properties.PropertiesColumn;
 import org.gephi.datalab.api.AttributeColumnsController;
 import org.gephi.datalab.api.GraphElementsController;
+import org.gephi.dynamic.api.DynamicController;
 import org.gephi.graph.api.Attributes;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.Graph;

File: GraphAPI/src/org/gephi/graph/api/TextData.java
Patch:
@@ -47,6 +47,8 @@ public interface TextData {
 
     public boolean isVisible();
 
+    public void setText(String text);
+
     public void setColor(float r, float g, float b, float alpha);
 
     public void setColor(Color color);

File: VisualizationModule/src/org/gephi/visualization/TextDataPersistenceProvider.java
Patch:
@@ -25,7 +25,7 @@ License, or (at your option) any later version.
 import org.gephi.graph.api.HierarchicalGraph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.TextData;
-import org.gephi.visualization.opengl.text.TextDataImpl;
+import org.gephi.visualization.impl.TextDataImpl;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.spi.WorkspacePersistenceProvider;
 import org.openide.util.lookup.ServiceProvider;

File: VisualizationModule/src/org/gephi/visualization/opengl/text/ColorMode.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.visualization.opengl.text;
 
+import org.gephi.visualization.impl.TextDataImpl;
 import javax.swing.ImageIcon;
 import org.gephi.visualization.apiimpl.ModelImpl;
 import org.gephi.visualization.opengl.text.TextManager.Renderer;

File: VisualizationModule/src/org/gephi/visualization/opengl/text/FixedSizeMode.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.visualization.opengl.text;
 
+import org.gephi.visualization.impl.TextDataImpl;
 import javax.swing.ImageIcon;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.apiimpl.GraphDrawable;

File: VisualizationModule/src/org/gephi/visualization/opengl/text/ProportionalSizeMode.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.visualization.opengl.text;
 
+import org.gephi.visualization.impl.TextDataImpl;
 import javax.swing.ImageIcon;
 import org.gephi.visualization.apiimpl.ModelImpl;
 

File: VisualizationModule/src/org/gephi/visualization/opengl/text/ScaledSizeMode.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.visualization.opengl.text;
 
+import org.gephi.visualization.impl.TextDataImpl;
 import javax.swing.ImageIcon;
 import org.gephi.visualization.apiimpl.ModelImpl;
 

File: VisualizationModule/src/org/gephi/visualization/opengl/text/SizeMode.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.visualization.opengl.text;
 
+import org.gephi.visualization.impl.TextDataImpl;
 import javax.swing.ImageIcon;
 import org.gephi.visualization.apiimpl.ModelImpl;
 

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextUtils.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.visualization.opengl.text;
 
+import org.gephi.visualization.impl.TextDataImpl;
 import com.sun.opengl.util.j2d.TextRenderer;
 import java.awt.font.FontRenderContext;
 import java.awt.font.LineBreakMeasurer;
@@ -48,7 +49,7 @@ public void reflow(TextManager.Renderer renderer, int width, TextDataImpl text)
         TextRenderer joglRenderer = renderer.getJOGLRenderer();
         FontRenderContext frc = joglRenderer.getFontRenderContext();
 
-        String paragraph = text.getLine().text;
+        String paragraph = text.getLine().getText();
         Map attrs = new HashMap();
         attrs.put(TextAttribute.FONT, joglRenderer.getFont());
         AttributedString str = new AttributedString(paragraph, attrs);

File: DHNSGraph/src/org/gephi/graph/dhns/core/Dhns.java
Patch:
@@ -161,7 +161,7 @@ public void readLock() {
         }
         System.err.println("WARNING: readLock() on the EDT - " + r.getStackTrace()[i].toString());
         }*/
-        String t = Thread.currentThread().toString();
+        //String t = Thread.currentThread().toString();
         //Logger.getLogger("").log(Level.WARNING, "{0} read lock", Thread.currentThread());
         readWriteLock.readLock().lock();
     }

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -216,12 +216,15 @@ public boolean execute() {
             xmlWriter.close();
 
         } catch (Exception e) {
+            graph.readUnlockAll();
             if (e instanceof RuntimeException) {
                 throw (RuntimeException) e;
             }
             throw new RuntimeException(e);
         }
 
+        graph.readUnlock();
+
         Progress.finish(progress);
         return !cancel;
     }

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java
Patch:
@@ -107,6 +107,7 @@ public boolean execute() {
         try {
             exportData(createDocument(), graph, attributeModel);
         } catch (Exception e) {
+            graph.readUnlockAll();
             throw new RuntimeException(e);
         }
 

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -109,6 +109,7 @@ public void goAlgo() {
         }
 
         if (correctNodes.isEmpty()) {
+            graph.readUnlock();
             return;
         }
 

File: DataLaboratoryAPI/src/org/gephi/datalab/api/GraphElementsController.java
Patch:
@@ -65,7 +65,6 @@ public interface GraphElementsController {
 
     /**
      * <p>Creates and edge between source and target node (if it does not already exist), directed or undirected.</p>
-     * This will not create a self-loop.
      * @param source Source node
      * @param target Target node
      * @param directed Indicates if the edge has to be directed
@@ -76,7 +75,6 @@ public interface GraphElementsController {
     /**
      * <p>Creates and edge between source and target node (if it does not already exist), directed or undirected.</p>
      * <p>If a edge with the given id already exists, no edge will be created.</p>
-     * <p>This will not create a self-loop.</p>
      * @param source Source node
      * @param target Target node
      * @param directed Indicates if the edge has to be directed

File: DynamicImpl/src/org/gephi/dynamic/DynamicModelImpl.java
Patch:
@@ -300,7 +300,7 @@ public void setVisibleTimeInterval(TimeInterval visibleTimeInterval) {
                 Query query = filterModel.getCurrentQuery();
                 Query[] dynamicQueries = query.getQueries(DynamicRangeFilter.class);
                 if (dynamicQueries.length > 0) {
-                    dynamicQuery = dynamicQueries[0];
+                    dynamicQuery = query;
                     selecting = filterModel.isSelecting();
                 }
             } else if (filterModel.getQueries().length == 1) {

File: PreviewImpl/src/org/gephi/preview/DirectedEdgeImpl.java
Patch:
@@ -58,10 +58,10 @@ protected DirectedEdgeImpl(GraphImpl parent, Edge edge, float thickness, NodeImp
         arrows.add(new EdgeArrowB2In(this));
 
         // generate mini-labels
-        if (node1.hasLabel()) {
+        if (node2.hasLabel()) {
             miniLabels.add(new EdgeMiniLabelB1(this));
         }
-        if (node2.hasLabel()) {
+        if (node1.hasLabel()) {
             miniLabels.add(new EdgeMiniLabelB2(this));
         }
     }

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/AvailableColumnsModel.java
Patch:
@@ -30,7 +30,7 @@ License, or (at your option) any later version.
  */
 public class AvailableColumnsModel {
 
-    private static final int MAX_AVAILABLE_COLUMNS = 35;
+    private static final int MAX_AVAILABLE_COLUMNS = 20;
     private ArrayList<AttributeColumn> availableColumns = new ArrayList<AttributeColumn>();
 
     public boolean isColumnAvailable(AttributeColumn column) {

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java
Patch:
@@ -133,7 +133,7 @@ public void process() {
                         attributeModel.getEdgeTable().addColumn(column.getId(), column.getTitle(), column.getType(), column.getOrigin(), column.getDefaultValue());
                     }
                 }
-            } else if (PropertiesColumn.EDGE_WEIGHT.getId().equals(column.getId())) {
+            } else if (PropertiesColumn.EDGE_WEIGHT.getId().equals(column.getId()) && !existingCol.getType().isDynamicType()) {
                 attributeModel.getEdgeTable().replaceColumn(attributeModel.getEdgeTable().getColumn(PropertiesColumn.EDGE_WEIGHT.getIndex()), PropertiesColumn.EDGE_WEIGHT.getId(), PropertiesColumn.EDGE_WEIGHT.getTitle(), AttributeType.DYNAMIC_FLOAT, AttributeOrigin.PROPERTY, null);
             }
         }

File: WelcomeScreen/src/org/gephi/desktop/welcome/WelcomeTopComponent.java
Patch:
@@ -166,7 +166,7 @@ public void actionPerformed(ActionEvent e) {
                         try {
                             stream.reset();
                         } catch (IOException ex) {
-                            Exceptions.printStackTrace(ex);
+                            //Exceptions.printStackTrace(ex);
                         }
                         ImportControllerUI importController = Lookup.getDefault().lookup(ImportControllerUI.class);
                         importController.importStream(stream, importer);

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineTopComponent.java
Patch:
@@ -158,7 +158,8 @@ private void initComponents() {
         timelinePanel = new javax.swing.JPanel();
         closeButton = new CloseButton();
 
-        setMaximumSize(new java.awt.Dimension(32767, 48));
+        setMaximumSize(new java.awt.Dimension(32767, 58));
+        setMinimumSize(new java.awt.Dimension(414, 58));
         setLayout(new java.awt.GridBagLayout());
 
         enableButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/desktop/timeline/resources/disabled.png"))); // NOI18N

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineTopComponent.java
Patch:
@@ -158,9 +158,7 @@ private void initComponents() {
         timelinePanel = new javax.swing.JPanel();
         closeButton = new CloseButton();
 
-        setMaximumSize(new java.awt.Dimension(2147483647, 27));
-        setMinimumSize(new java.awt.Dimension(128, 16));
-        setPreferredSize(new java.awt.Dimension(800, 24));
+        setMaximumSize(new java.awt.Dimension(32767, 48));
         setLayout(new java.awt.GridBagLayout());
 
         enableButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/desktop/timeline/resources/disabled.png"))); // NOI18N

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewSettingsTopComponent.java
Patch:
@@ -52,6 +52,7 @@ private PreviewSettingsTopComponent() {
         // property sheet
         propertySheet = new PropertySheet();
         propertySheet.setNodes(new Node[]{new PreviewNode()});
+        propertySheet.setDescriptionAreaVisible(false);
         propertiesPanel.add(propertySheet, BorderLayout.CENTER);
 
         // checks the state of the workspace

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeTable.java
Patch:
@@ -124,7 +124,6 @@ public interface AttributeTable {
      * @param id                             the identifier of the column
      * @param title                          the title of the column
      * @param type                           the type of the column
-     * @param attributeValueDelegateProvider the attribute value delegate provider of the column
      * @param defaultValue                   the default value of the column
      * @return                               the newly created column, or
      * <code>null</code> if <code>source</code> can't be found

File: DataLaboratoryAPI/src/org/gephi/datalab/api/GraphElementsController.java
Patch:
@@ -107,13 +107,13 @@ public interface GraphElementsController {
 
     /**
      * Tries to delete an edge checking first if it is on the graph.
-     * @param node Edge to delete
+     * @param edge Edge to delete
      */
     void deleteEdge(Edge edge);
 
     /**
      * Tries to delete an array of edges checking first if they are on the graph.
-     * @param nodes Array of edges to delete
+     * @param edges Array of edges to delete
      */
     void deleteEdges(Edge[] edges);
 
@@ -151,7 +151,7 @@ public interface GraphElementsController {
 
     /**
      * Ungroups a node if it forms a group.
-     * @param nodes Node to ungroup
+     * @param node Node to ungroup
      * @return True if the node was succesfully ungrouped, false otherwise
      */
     boolean ungroupNode(Node node);

File: DataLaboratoryAPI/src/org/gephi/datalab/spi/DialogControls.java
Patch:
@@ -36,7 +36,7 @@ public interface DialogControls {
 
     /**
      * Indicates if ok button is enabled for this dialog at the moment
-     * @return
+     * @return <code>true</code> if ok button is enabled
      */
     boolean isOkButtonEnabled();
 }

File: DataLaboratoryAPI/src/org/gephi/datalab/spi/ManipulatorUI.java
Patch:
@@ -33,7 +33,7 @@ public interface ManipulatorUI {
 
     /**
      * Prepare this UI to be able to interact with its Manipulator.
-     * @param gem Manipulator for the UI
+     * @param m Manipulator for the UI
      * @param dialogControls Used to enable/disable the dialog controls
      */
     void setup(Manipulator m, DialogControls dialogControls);

File: DynamicAPI/src/org/gephi/dynamic/api/DynamicController.java
Patch:
@@ -80,14 +80,14 @@ public interface DynamicController {
 
     /**
      * Sets the current <code>ESTIMATOR</code> used to get values from
-     * {@link DynamicType}. Default is <b><code>Estimator.FIRST</code></b>.
+     * {@link org.gephi.data.attributes.type.DynamicType}. Default is <b><code>Estimator.FIRST</code></b>.
      * @param estimator     the estimator that is to be set
      */
     public void setEstimator(Estimator estimator);
 
     /**
      * Sets the current number <code>ESTIMATOR</code> used to get values from
-     * {@link DynamicType}. Default is <b><code>Estimator.AVERAGE</code></b>.
+     * {@link org.gephi.data.attributes.type.DynamicType}. Default is <b><code>Estimator.AVERAGE</code></b>.
      * @param estimator     the number estimator that is to be set
      */
     public void setNumberEstimator(Estimator estimator);

File: DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java
Patch:
@@ -159,7 +159,6 @@ public void clearEdges() {
         if (clearedEdges != null) {
             for (int i = 0; i < clearedEdges.length; i++) {
                 if (clearedEdges[i] != null) {
-                    dhns.getGraphStructure().removeFromDictionnary(clearedEdges[i]);
                     dhns.getEventManager().fireEvent(new EdgeEvent(EventType.REMOVE_EDGES, clearedEdges[i], view));
                 }
             }

File: DynamicImpl/src/org/gephi/dynamic/DynamicModelImpl.java
Patch:
@@ -218,9 +218,6 @@ public void graphChanged(GraphEvent event) {
                                 }
                             }
                             break;
-                        case CLEAR_NODES:
-                            timeIntervalIndex.clear();
-                            break;
                         default:
                             break;
                     }

File: DHNSGraph/src/org/gephi/graph/dhns/core/Dhns.java
Patch:
@@ -21,8 +21,6 @@ License, or (at your option) any later version.
 package org.gephi.graph.dhns.core;
 
 import java.util.concurrent.locks.ReentrantReadWriteLock;
-import java.util.logging.Level;
-import java.util.logging.Logger;
 import org.gephi.data.attributes.api.AttributeController;
 import org.gephi.data.attributes.api.AttributeModel;
 import org.gephi.data.attributes.api.AttributeRowFactory;

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSEventBridge.java
Patch:
@@ -427,14 +427,15 @@ public void copyToWorkspace(Workspace workspace) {
 
         GraphModel sourceModel = graphController.getModel(currentWorkspace);
         GraphModel destModel = graphController.getModel(workspace);
+        Graph destGraph = destModel.getHierarchicalGraphVisible();
         Graph sourceGraph = sourceModel.getHierarchicalGraphVisible();
 
         ModelImpl[] selectedNodeModels = engine.getSelectedObjects(AbstractEngine.CLASS_NODE);
         List<Node> nodes = new ArrayList<Node>();
         for (ModelImpl metaModelImpl : selectedNodeModels) {
             NodeData nodeData = (NodeData) metaModelImpl.getObj();
             Node node = nodeData.getNode(sourceGraph.getView().getViewId());
-            if (node != null) {
+            if (node != null && destGraph.getNode(node.getNodeData().getId()) == null) {
                 nodes.add(node);
             }
         }

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -86,7 +86,9 @@ public void process() {
         //Dynamic
         if (container.getTimeFormat() != null) {
             DynamicController dynamicController = Lookup.getDefault().lookup(DynamicController.class);
-            dynamicController.setTimeFormat(container.getTimeFormat());
+            if (dynamicController != null) {
+                dynamicController.setTimeFormat(container.getTimeFormat());
+            }
         }
 
         int nodeCount = 0;

File: PreviewImpl/src/org/gephi/preview/supervisors/EdgeSupervisorImpl.java
Patch:
@@ -79,7 +79,7 @@ public void addEdge(EdgeImpl edge) {
             weight = (weight - min) * ratio + GraphImpl.WEIGHT_MINIMUM;
         }
 
-        if (edge.getMetaEdge()) {
+        if (edge.getMetaEdge() && visualizationController != null) {
             weight *= visualizationController.getMetaEdgeScale();
         }
 

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGDF.java
Patch:
@@ -224,7 +224,7 @@ private void exportData(Graph graph, AttributeModel attributeModel) throws Excep
 
         //Attributes Edge columns
         for (AttributeColumn c : edgeColumns) {
-            if (c.getOrigin().equals(AttributeOrigin.PROPERTY)) {
+            if (!c.getOrigin().equals(AttributeOrigin.PROPERTY)) {
                 stringBuilder.append(c.getTitle());
                 stringBuilder.append(" ");
                 DataTypeGDF dataTypeGDF = getDataTypeGDF(c.getType());
@@ -587,7 +587,7 @@ public void writeData(StringBuilder builder, Edge edge) {
 
             @Override
             public boolean isEnable() {
-                return true;
+                return exportVisibility;
             }
 
             @Override
@@ -600,7 +600,7 @@ public void writeData(StringBuilder builder, Edge edge) {
 
             @Override
             public boolean isEnable() {
-                return true;
+                return exportVisibility;
             }
 
             @Override

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -427,7 +427,7 @@ private void writeAttValue(XMLStreamWriter xmlWriter, AttributeRow row, TimeInte
                         if (interval == null) {
                             interval = new TimeInterval();
                         }
-                        Object value = DynamicUtilities.getDynamicValue(val, interval.getLow(), interval.getHigh());
+                        Object value = DynamicUtilities.getDynamicValue(dynamicValue, interval.getLow(), interval.getHigh());
                         if (value != null) {
                             xmlWriter.writeStartElement(ATTVALUE);
                             xmlWriter.writeAttribute(ATTVALUE_FOR, val.getColumn().getId());

File: FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java
Patch:
@@ -202,10 +202,10 @@ public boolean evaluate(Graph graph, Edge edge) {
 
         public void finish() {
             if (!Double.isInfinite(min)) {
-                timelineController.setMin(min);
+                //timelineController.setMin(min);
             }
             if (!Double.isInfinite(max)) {
-                timelineController.setMax(max);
+                //timelineController.setMax(max);
             }
         }
 

File: VisualizationAPI/src/org/gephi/visualization/api/VisualizationController.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.visualization.api;
 
 import org.gephi.graph.api.Edge;

File: AttributesImpl/src/org/gephi/data/attributes/AttributeUtilsImpl.java
Patch:
@@ -151,7 +151,7 @@ public boolean areAllDynamicNumberColumns(AttributeColumn[] columns){
     @Override
     @SuppressWarnings({"rawtypes", "unchecked"})
     public Comparable getMin(AttributeColumn column, Comparable[] values) {
-        if (!isNumberColumn(column)) {
+        if (!isNumberColumn(column) && !isDynamicNumberColumn(column)) {
             throw new IllegalArgumentException("Colun must be a number column");
         }
 
@@ -178,7 +178,7 @@ public Comparable getMin(AttributeColumn column, Comparable[] values) {
     @Override
     @SuppressWarnings({"rawtypes", "unchecked"})
     public Comparable getMax(AttributeColumn column, Comparable[] values) {
-        if (!isNumberColumn(column)) {
+        if (!isNumberColumn(column) && !isDynamicNumberColumn(column)) {
             throw new IllegalArgumentException("Colun must be a number column");
         }
 

File: PartitionAPI/src/org/gephi/partition/api/PartitionController.java
Patch:
@@ -21,7 +21,6 @@ License, or (at your option) any later version.
 package org.gephi.partition.api;
 
 import org.gephi.data.attributes.api.AttributeColumn;
-import org.gephi.data.attributes.api.Estimator;
 import org.gephi.graph.api.Graph;
 import org.gephi.partition.spi.Transformer;
 import org.gephi.partition.spi.TransformerBuilder;
@@ -55,6 +54,4 @@ public interface PartitionController {
     public void showPie(boolean showPie);
 
     public PartitionModel getModel();
-
-    public void setDefaultEstimator(Estimator estimator);
 }

File: RankingAPI/src/org/gephi/ranking/api/RankingModel.java
Patch:
@@ -22,7 +22,6 @@ License, or (at your option) any later version.
 
 import javax.swing.event.ChangeListener;
 import org.gephi.data.attributes.api.AttributeColumn;
-import org.gephi.data.attributes.api.Estimator;
 
 /**
  *
@@ -44,8 +43,6 @@ public interface RankingModel {
 
     public EdgeRanking[] getEdgeRanking();
 
-    public void setDefaultEstimator(Estimator estimator);
-
     public void addChangeListener(ChangeListener changeListener);
 
     public void removeChangeListener(ChangeListener changeListener);

File: DynamicImpl/src/org/gephi/dynamic/DynamicIndex.java
Patch:
@@ -104,11 +104,11 @@ public synchronized void clear() {
     }
 
     public synchronized double getMin() {
-        return lowMap.isEmpty() ? Double.NEGATIVE_INFINITY : lowMap.firstKey();
+        return lowMap.isEmpty() ? (highMap.isEmpty() ? Double.NEGATIVE_INFINITY : highMap.firstKey()) : lowMap.firstKey();
     }
 
     public synchronized double getMax() {
-        return highMap.isEmpty() ? Double.POSITIVE_INFINITY : highMap.lastKey();
+        return highMap.isEmpty() ? (lowMap.isEmpty() ? Double.POSITIVE_INFINITY : lowMap.lastKey()) : highMap.lastKey();
     }
 
     private void fireEvent(DynamicModelEvent event) {

File: DHNSGraph/src/org/gephi/graph/dhns/core/EdgeProcessor.java
Patch:
@@ -39,7 +39,6 @@ public class EdgeProcessor {
 
     //Architecture
     private final TreeStructure treeStructure;
-    private final IDGen idGen;
     private final Dhns dhns;
     private final GraphViewImpl view;
     private final int viewId;
@@ -49,7 +48,6 @@ public class EdgeProcessor {
     public EdgeProcessor(Dhns dhns, GraphViewImpl view) {
         this.dhns = dhns;
         this.treeStructure = view.getStructure();
-        this.idGen = dhns.getIdGen();
         this.view = view;
         this.viewId = view.getViewId();
         this.edgeIterator = new ParamAVLIterator<AbstractEdge>();

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -237,7 +237,6 @@ public void unselect(Workspace workspace) {
             }
 
             public void close(Workspace workspace) {
-                clearAll();
             }
 
             public void disable() {

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -78,7 +78,7 @@ public class ExporterGEXF implements GraphExporter, CharacterExporter, LongTask
     private static final String VIZ_NAMESPACE = "http://www.gexf.net/1.1draft/viz";
     private static final String GEXF_VERSION = "version";
     private static final String GRAPH = "graph";
-    private static final String GRAPH_MODE = "dynamic";
+    private static final String GRAPH_MODE = "mode";
     private static final String GRAPH_DEFAULT_EDGETYPE = "defaultedgetype";
     private static final String GRAPH_START = "start";
     private static final String GRAPH_END = "end";

File: AttributesImpl/src/org/gephi/data/attributes/AttributeTableImpl.java
Patch:
@@ -200,7 +200,7 @@ public synchronized AttributeColumn getColumn(AttributeColumn column) {
     }
 
     public synchronized boolean hasColumn(String title) {
-        return columnsMap.containsKey(title.toLowerCase());
+        return columnsMap.containsKey(title) || columnsMap.containsKey(title.toLowerCase());
     }
 
     public synchronized int getVersion() {

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/TimeIntervalGraphics.java
Patch:
@@ -112,10 +112,10 @@ public BufferedImage createTimeIntervalImage(double start, double end, int width
             throw new IllegalArgumentException("start should be less or equal than end");
         }
         if (start < min) {
-            throw new IllegalArgumentException("start should be greater or equal than the minimum time set");
+            throw new IllegalArgumentException("start should be greater or equal than the minimum time set, "+start+"<"+min);
         }
         if (end > max) {
-            throw new IllegalArgumentException("end should be lesser or equal than the maximum time set");
+            throw new IllegalArgumentException("end should be lesser or equal than the maximum time set, "+end+">"+max);
         }
 
         if (fill == null) {

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineAnimatorImpl.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.desktop.timeline;
 
 import java.awt.event.ActionEvent;

File: DynamicImpl/src/org/gephi/dynamic/DynamicControllerImpl.java
Patch:
@@ -60,7 +60,6 @@ public DynamicControllerImpl() {
         projectController.addWorkspaceListener(new WorkspaceListener() {
             @Override
             public void initialize(Workspace workspace) {
-                workspace.add(new DynamicModelImpl(DynamicControllerImpl.this, workspace));
             }
 
             @Override

File: TimelineAPI/src/org/gephi/timeline/api/TimelineModelEvent.java
Patch:
@@ -28,7 +28,7 @@ public final class TimelineModelEvent {
 
     public enum EventType {
 
-        INIT, VISIBLE_INTERVAL, MIN_CHANGED, MAX_CHANGED
+        VISIBLE_INTERVAL, MIN_CHANGED, MAX_CHANGED
     };
     private final EventType type;
     private final TimelineModel source;

File: PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java
Patch:
@@ -161,6 +161,9 @@ private void calculateMinMaxWeight(HierarchicalGraph sourceGraph, GraphImpl prev
         if (dynamicController != null) {
             timeInterval = DynamicUtilities.getVisibleInterval(dynamicController.getModel(sourceGraph.getGraphModel().getWorkspace()));
         }
+        if(timeInterval==null) {
+            timeInterval = new TimeInterval();
+        }
 
         //Min/Max weight
         float minWeight = Float.POSITIVE_INFINITY;

File: PartitionPlugin/src/org/gephi/partition/plugin/EdgeColorTransformer.java
Patch:
@@ -64,6 +64,7 @@ public void transform(Partition partition) {
             if (color == null) {
                 color = DEFAULT_COLOR;
             }
+            part.setColor(color);
             float r = color.getRed() / 255f;
             float g = color.getGreen() / 255f;
             float b = color.getBlue() / 255f;

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/TimeIntervalGraphics.java
Patch:
@@ -104,6 +104,7 @@ public BufferedImage createTimeIntervalImage(double start, double end, int width
     public BufferedImage createTimeIntervalImage(double start, double end, int width, int height, Color fill, Color border, Color background) {
         start=normalize(start);
         end=normalize(end);
+
         if (start > end) {
             throw new IllegalArgumentException("start should be less or equal than end");
         }

File: DataLaboratoryAPI/src/org/gephi/datalab/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -722,7 +722,7 @@ private ArrayList<Number> getDynamicNumberColumnNumbers(Attributes row, Attribut
     }
 
     private void checkColumnsAreNumberOrNumberList(AttributeColumn[] columns) {
-        if (columns == null || !AttributeUtils.getDefault().areAllNumberOrNumberListColumns(columns)) {
+        if (columns == null || (!AttributeUtils.getDefault().areAllNumberOrNumberListColumns(columns)&&!AttributeUtils.getDefault().areAllDynamicNumberColumns(columns))) {
             throw new IllegalArgumentException("All columns have to be number or number list columns and can't be null");
         }
     }

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/SparkLinesRenderer.java
Patch:
@@ -45,7 +45,7 @@ public class SparkLinesRenderer extends DefaultTableCellRenderer {
     public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
         if (value == null) {
             //Render empty string when null
-            return super.getTableCellRendererComponent(table, "", isSelected, hasFocus, row, column);
+            return super.getTableCellRendererComponent(table, null, isSelected, hasFocus, row, column);
         }
 
         Number[] numbers=null;

File: WorkspaceUI/src/org/gephi/ui/workspace/WorkspacePanePanel.java
Patch:
@@ -41,7 +41,7 @@ License, or (at your option) any later version.
  */
 public final class WorkspacePanePanel extends javax.swing.JPanel implements MouseListener {
 
-    private Workspace workspace;
+    private final Workspace workspace;
 
     public WorkspacePanePanel(Workspace workspace) {
         this.workspace = workspace;

File: DynamicImpl/src/org/gephi/dynamic/DynamicModelImpl.java
Patch:
@@ -250,6 +250,8 @@ public void setVisibleTimeInterval(TimeInterval visibleTimeInterval) {
             //Filters
             Query dynamicQuery = null;
             boolean selecting = false;
+
+            //Get or create Dynamic Query
             if (filterModel.getCurrentQuery() != null) {
                 //Look if current query is dynamic - filtering must be active
                 Query query = filterModel.getCurrentQuery();
@@ -265,6 +267,7 @@ public void setVisibleTimeInterval(TimeInterval visibleTimeInterval) {
                     dynamicQuery = query;
                 }
             }
+
             if (Double.isInfinite(visibleTimeInterval.getLow()) && Double.isInfinite(visibleTimeInterval.getHigh())) {
                 if (dynamicQuery != null) {
                     filterController.remove(dynamicQuery);

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML2.java
Patch:
@@ -643,14 +643,14 @@ private void readAttribute(XMLStreamReader reader) throws Exception {
 
             //Add to model
             if ("node".equalsIgnoreCase(forStr) || "all".equalsIgnoreCase(forStr)) {
-                if (container.getAttributeModel().getNodeTable().hasColumn(id)) {
+                if (container.getAttributeModel().getNodeTable().hasColumn(id) || container.getAttributeModel().getNodeTable().hasColumn(title)) {
                     report.log(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_error_attributecolumn_exist", id));
                     return;
                 }
                 container.getAttributeModel().getNodeTable().addColumn(id, title, attributeType, AttributeOrigin.DATA, defaultValue);
                 report.log(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_log_nodeattribute", title, attributeType.getTypeString()));
             } else if ("edge".equalsIgnoreCase(forStr) || "all".equalsIgnoreCase(forStr)) {
-                if (container.getAttributeModel().getEdgeTable().hasColumn(id)) {
+                if (container.getAttributeModel().getEdgeTable().hasColumn(id) || container.getAttributeModel().getEdgeTable().hasColumn(title)) {
                     report.log(NbBundle.getMessage(ImporterGraphML.class, "importerGraphMLF_error_attributecolumn_exist", id));
                     return;
                 }

File: ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java
Patch:
@@ -162,7 +162,7 @@ public void addAttributeValue(AttributeColumn column, Object value) {
         if (column.getType().isDynamicType() && !(value instanceof DynamicType)) {
             if (value instanceof String && !column.getType().equals(AttributeType.DYNAMIC_STRING)) {
                 //Value needs to be parsed
-                value = TypeConvertor.getStaticType(column.getType()).parse(value);
+                value = TypeConvertor.getStaticType(column.getType()).parse((String) value);
             }
             //Wrap value in a dynamic type
             value = DynamicUtilities.createDynamicObject(column.getType(), new Interval(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, value));
@@ -203,7 +203,7 @@ public void addAttributeValue(AttributeColumn column, Object value, String dateF
         }
         if (value instanceof String && !column.getType().equals(AttributeType.DYNAMIC_STRING)) {
             //Value needs to be parsed
-            value = TypeConvertor.getStaticType(column.getType()).parse(value);
+            value = TypeConvertor.getStaticType(column.getType()).parse((String) value);
         }
         Object sourceVal = attributeRow.getValue(column);
         if (sourceVal != null && sourceVal instanceof DynamicType) {

File: ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java
Patch:
@@ -207,7 +207,7 @@ public void addAttributeValue(AttributeColumn column, Object value) {
         if (column.getType().isDynamicType() && !(value instanceof DynamicType)) {
             if (value instanceof String && !column.getType().equals(AttributeType.DYNAMIC_STRING)) {
                 //Value needs to be parsed
-                value = TypeConvertor.getStaticType(column.getType()).parse(value);
+                value = TypeConvertor.getStaticType(column.getType()).parse((String) value);
             }
             //Wrap value in a dynamic type
             value = DynamicUtilities.createDynamicObject(column.getType(), new Interval(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, value));

File: PartitionPluginUI/src/org/gephi/ui/partition/plugin/EdgeColorTransformerUIImpl.java
Patch:
@@ -52,7 +52,7 @@ public JPanel getPanel() {
     }
 
     public void setup(Partition partition, Transformer transformer) {
-        panel.setup(partition, transformer);
+        panel.setup(partition, transformer, true);
     }
 
     public void unsetup() {

File: PartitionPluginUI/src/org/gephi/ui/partition/plugin/NodeColorTransformerUIImpl.java
Patch:
@@ -52,7 +52,7 @@ public JPanel getPanel() {
     }
 
     public void setup(Partition partition, Transformer transformer) {
-        panel.setup(partition, transformer);
+        panel.setup(partition, transformer, true);
     }
 
     public void unsetup() {

File: PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java
Patch:
@@ -63,7 +63,7 @@ public static boolean isNodePartitionColumn(AttributeColumn column, Graph graph)
                 }
                 values.add(value);
             }
-            if (values.size() < 9f / 10f * nonNullvalues) {      //If #different values is < 2:3 of total non-null values
+            if (values.size() < 9f / 10f * nonNullvalues) {      //If #different values is < 9:10 of total non-null values
                 return true;
             }
         }
@@ -83,7 +83,7 @@ public static boolean isEdgePartitionColumn(AttributeColumn column, Graph graph)
                 }
                 values.add(value);
             }
-            if (values.size() < 2f / 3f * nonNullvalues) {      //If #different values is < 2:3 of total non-null values
+            if (values.size() < 9f / 10f * nonNullvalues) {      //If #different values is < 9:10 of total non-null values
                 return true;
             }
         }

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/DataTableTopComponent.java
Patch:
@@ -677,7 +677,7 @@ public JPopupPanel getPopupPanel(JCommandButton jcb) {
                         button.addActionListener(new ActionListener() {
 
                             public void actionPerformed(ActionEvent e) {
-                                Lookup.getDefault().lookup(DataLaboratoryHelper.class).executeAttributeColumnsManipulator(acm, table, column);
+                                new DataLaboratoryHelper().executeAttributeColumnsManipulator(acm, table, column);
                             }
                         });
                         popup.addMenuButton(button);
@@ -871,7 +871,7 @@ private JCommandButton preparePluginGeneralActionsButton(final PluginGeneralActi
             button.addActionListener(new ActionListener() {
 
                 public void actionPerformed(ActionEvent e) {
-                    Lookup.getDefault().lookup(DataLaboratoryHelper.class).executeManipulator(m);
+                    new DataLaboratoryHelper().executeManipulator(m);
                 }
             });
         } else {

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/general/actions/MergeColumnsUI.java
Patch:
@@ -205,7 +205,7 @@ public void setup(Mode mode) {
     public void execute() {
         int index = availableStrategiesComboBox.getSelectedIndex();
         if (index != -1) {
-            Lookup.getDefault().lookup(DataLaboratoryHelper.class).executeManipulator(availableMergeStrategies[index]);
+            new DataLaboratoryHelper().executeManipulator(availableMergeStrategies[index]);
         }
     }
 

File: RankingAPI/src/org/gephi/ranking/impl/RankingModelImpl.java
Patch:
@@ -208,7 +208,7 @@ public void removeChangeListener(ChangeListener changeListener) {
         listeners.remove(changeListener);
     }
 
-    private void fireChangeEvent() {
+    public void fireChangeEvent() {
         ChangeEvent changeEvent = new ChangeEvent(this);
         for (ChangeListener changeListener : listeners) {
             changeListener.stateChanged(changeEvent);

File: DesktopDataLaboratory/src/org/gephi/desktop/datalab/utils/DataLaboratoryHelper.java
Patch:
@@ -201,7 +201,7 @@ public void run() {
                     final ManipulatorUI ui = m.getUI();
                     //Show a dialog for the manipulator UI if it provides one. If not, execute the manipulator directly:
                     if (ui != null) {
-                        final JButton okButton = new JButton(NbBundle.getMessage(DataLaboratoryHelper.class, "DataLaboratoryHelperImpl.ui.okButton.text"));
+                        final JButton okButton = new JButton(NbBundle.getMessage(DataLaboratoryHelper.class, "DataLaboratoryHelper.ui.okButton.text"));
                         DialogControls dialogControls = new DialogControlsImpl(okButton);
                         ui.setup(m, dialogControls);
                         JPanel settingsPanel = ui.getSettingsPanel();

File: AttributesImpl/src/org/gephi/data/attributes/AttributeRowImpl.java
Patch:
@@ -121,7 +121,7 @@ private void setValue(int index, AttributeValueImpl value) {
 
         this.values[index] = value;
 
-        if (!((oldValue == null && value == null) || (oldValue != null && oldValue.equals(value.getValue())))) {
+        if (!((oldValue == null && value == null) || (oldValue != null && oldValue.equals(value)))) {
             attributeTable.model.fireAttributeEvent(new ValueEvent(EventType.SET_VALUE, attributeTable, object, value));
         }
     }

File: RankingAPI/src/org/gephi/ranking/impl/AbstractSizeTransformer.java
Patch:
@@ -64,6 +64,6 @@ public float getSize(float normalizedValue) {
         if (interpolator != null) {
             normalizedValue = interpolator.interpolate(normalizedValue);
         }
-        return normalizedValue * maxSize + minSize;
+        return normalizedValue * (maxSize - minSize) + minSize;
     }
 }

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/generalactions/AddEdgeToGraph.java
Patch:
@@ -65,7 +65,7 @@ public boolean canExecute() {
     public ManipulatorUI getUI() {
         GraphModel currentGraphModel=Lookup.getDefault().lookup(GraphController.class).getModel();
         if(graphModel!=currentGraphModel){//If graph model has changed since last execution, change default mode for edges to create in UI, else keep this parameter across calls
-            directed=currentGraphModel.isDirected()||graphModel.isMixed();//Get graph directed state. Set to true if graph is directed or mixed
+            directed=currentGraphModel.isDirected()||currentGraphModel.isMixed();//Get graph directed state. Set to true if graph is directed or mixed
             graphModel=currentGraphModel;
         }
         return new AddEdgeToGraphUI();

File: DesktopFilters/src/org/gephi/desktop/filters/FiltersPanel.java
Patch:
@@ -85,6 +85,7 @@ public void actionPerformed(ActionEvent e) {
                 uiModel.setSelectedQuery(null);
                 controller.selectVisible(null);
                 controller.filterVisible(null);
+                ((FiltersExplorer) libraryTree).setup(manager, filterModel, uiModel);
             }
         });
         filterButton.addActionListener(new ActionListener() {

File: DesktopTimeline/src/org/gephi/desktop/timeline/MinimalDrawerSettings.java
Patch:
@@ -18,7 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.ui.timeline.plugin.drawers.minimal;
+package org.gephi.desktop.timeline;
 
 import java.awt.BasicStroke;
 import java.awt.Color;

File: DynamicAPI/src/org/gephi/dynamic/api/DynamicModel.java
Patch:
@@ -42,7 +42,7 @@ public interface DynamicModel {
      * The way the time is represented, either a simple real value (DOUBLE) or
      * a date.
      */
-    public enum TimeFormat { DATE, DOUBLE};
+    public enum TimeFormat { DATE, DOUBLE };
 
     /**
      * Builds a new {@code DynamicGraph} from the given {@code Graph} instance.

File: DynamicAPI/src/org/gephi/dynamic/api/DynamicModelEvent.java
Patch:
@@ -28,7 +28,7 @@ public final class DynamicModelEvent {
 
     public enum EventType {
 
-        VISIBLE_INTERVAL, IS_DYNAMIC
+        VISIBLE_INTERVAL, IS_DYNAMIC, MIN_CHANGED, MAX_CHANGED
     };
     private final EventType type;
     private final DynamicModel source;

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF2.java
Patch:
@@ -191,6 +191,7 @@ public boolean execute() {
             if (exportColors || exportPosition || exportSize) {
                 xmlWriter.writeNamespace(VIZ, VIZ_NAMESPACE);
             }
+            xmlWriter.writeAttribute("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
             xmlWriter.writeAttribute("xsi:schemaLocation", GEXF_NAMESPACE_LOCATION);
 
             if (exportDynamic) {

File: FiltersPlugin/src/org/gephi/filters/plugin/operator/MASKBuilderEdge.java
Patch:
@@ -74,6 +74,9 @@ public JPanel getPanel(Filter filter) {
         return null;
     }
 
+    public void destroy(Filter filter) {
+    }
+
     public static class MaskEdgeOperator implements Operator {
 
         public enum EdgesOptions {

File: FiltersPlugin/src/org/gephi/filters/plugin/operator/NOTBuilderEdge.java
Patch:
@@ -66,6 +66,9 @@ public JPanel getPanel(Filter filter) {
         return null;
     }
 
+    public void destroy(Filter filter) {
+    }
+
     public static class NotOperatorEdge implements Operator {
 
         public int getInputCount() {

File: FiltersPlugin/src/org/gephi/filters/plugin/operator/NOTBuilderNode.java
Patch:
@@ -66,6 +66,9 @@ public JPanel getPanel(Filter filter) {
         return null;
     }
 
+    public void destroy(Filter filter) {
+    }
+
     public static class NOTOperatorNode implements Operator {
 
         public int getInputCount() {

File: TimelineAPI/src/org/gephi/timeline/api/TimelineModel.java
Patch:
@@ -34,8 +34,6 @@ public interface TimelineModel {
 
     public void unsetup();
 
-    public boolean isEnabled();
-
     /**
      *
      * @return

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF2.java
Patch:
@@ -191,6 +191,7 @@ public boolean execute() {
             if (exportColors || exportPosition || exportSize) {
                 xmlWriter.writeNamespace(VIZ, VIZ_NAMESPACE);
             }
+            xmlWriter.writeAttribute("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
             xmlWriter.writeAttribute("xsi:schemaLocation", GEXF_NAMESPACE_LOCATION);
 
             if (exportDynamic) {

File: FiltersImpl/src/org/gephi/filters/FilterLibraryImpl.java
Patch:
@@ -60,9 +60,6 @@ public FilterLibraryImpl() {
         }
 
         content.add(new HierarchicalGraphMask());
-
-        //Put in map
-        buildBuildersMap();
     }
 
     private void buildBuildersMap() {
@@ -108,6 +105,9 @@ public void unregisterMask(FilterLibraryMask mask) {
     }
 
     public FilterBuilder getBuilder(Filter filter) {
+        if (buildersMap == null) {
+            buildBuildersMap();
+        }
         if (buildersMap.get(filter.getClass()) != null) {
             return buildersMap.get(filter.getClass());
         }

File: FiltersPlugin/src/org/gephi/filters/plugin/dynamic/DynamicRangeBuilder.java
Patch:
@@ -229,7 +229,7 @@ public void dynamicModelChanged(DynamicModelEvent event) {
             switch (event.getEventType()) {
                 case VISIBLE_INTERVAL:
                     TimeInterval interval = (TimeInterval) event.getData();
-                    setRange(new Range(interval.getLow(), interval.getHigh()));
+                    filterProperties[0].setValue(new Range(interval.getLow(), interval.getHigh()));
                     break;
             }
         }

File: DynamicImpl/src/org/gephi/dynamic/DynamicIndex.java
Patch:
@@ -44,7 +44,7 @@ public void remove(Interval interval) {
             if (existingInterval.getValue().intValue() == 1) {
                 intervalTree.delete(existingInterval);
             } else {
-                Integer counter = new Integer(1 - existingInterval.getValue());
+                Integer counter = new Integer(existingInterval.getValue() - 1);
                 intervalTree.delete(existingInterval);
                 existingInterval = new Interval<Integer>(existingInterval.getLow(), existingInterval.getHigh(), existingInterval.isLowExcluded(), existingInterval.isHighExcluded(), counter);
                 intervalTree.insert(existingInterval);

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java
Patch:
@@ -244,8 +244,6 @@ public String getDisplayName() {
 
     public String getDate() {
         return date;
-
-
     }
 
     public void setDate(String date) {

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/nodes/LinkNodes.java
Patch:
@@ -50,7 +50,7 @@ public void setup(Node[] nodes, Node clickedNode) {
 
         GraphModel currentGraphModel=Lookup.getDefault().lookup(GraphController.class).getModel();
         if(graphModel!=currentGraphModel){//If graph model has changed since last execution, change default mode for edges to create in UI, else keep this parameter across calls
-            directed=currentGraphModel.isDirected()||graphModel.isMixed();//Get graph directed state. Set to true if graph is directed or mixed
+            directed=currentGraphModel.isDirected()||currentGraphModel.isMixed();//Get graph directed state. Set to true if graph is directed or mixed
             graphModel=currentGraphModel;
         }
     }

File: DataTableUI/src/org/gephi/ui/datatable/NodeDataTable.java
Patch:
@@ -469,7 +469,10 @@ public void run() {
                         });
                     }
                 }).start();
+            } else {
+                outlineTable.getSelectionModel().clearSelection();
             }
+            outlineTable.repaint();
             e.consume();
         }
 

File: DynamicAPI/test/unit/src/org/gephi/dynamic/DynamicUtilitiesTest.java
Patch:
@@ -21,7 +21,6 @@
 package org.gephi.dynamic;
 
 import org.gephi.data.attributes.type.DynamicDouble;
-import javax.xml.datatype.DatatypeConfigurationException;
 import org.gephi.data.attributes.api.AttributeType;
 import org.gephi.data.attributes.type.DynamicType;
 import org.gephi.data.attributes.type.Interval;

File: PreviewImpl/src/org/gephi/preview/supervisors/BidirectionalEdgeSupervisorImpl.java
Patch:
@@ -64,7 +64,7 @@ public void defaultValues() {
         arrowSize = 20f;
         arrowColorizer = new ParentColorMode();
         edgeScale = new Float(1f);
-        rescaleWeight = Boolean.TRUE;
+        rescaleWeight = Boolean.FALSE;
     }
 
     @Override

File: PreviewImpl/src/org/gephi/preview/supervisors/SelfLoopSupervisorImpl.java
Patch:
@@ -60,7 +60,7 @@ public void defaultValues() {
         show = true;
         colorizer = new CustomColorMode(0, 0, 0);
         edgeScale = new Float(1f);
-        rescaleWeight = Boolean.TRUE;
+        rescaleWeight = Boolean.FALSE;
     }
 
     public Float getEdgeScale() {

File: PreviewImpl/src/org/gephi/preview/supervisors/UndirectedEdgeSupervisorImpl.java
Patch:
@@ -61,7 +61,7 @@ public void defaultValues() {
         baseLabelFont = new Font(Font.SANS_SERIF, Font.PLAIN, 10);
         labelColorizer = new ParentColorMode();
         edgeScale = new Float(1f);
-        rescaleWeight = Boolean.TRUE;
+        rescaleWeight = Boolean.FALSE;
     }
 
     @Override

File: PreviewImpl/src/org/gephi/preview/supervisors/UnidirectionalEdgeSupervisorImpl.java
Patch:
@@ -59,6 +59,6 @@ public void defaultValues() {
         arrowSize = 20f;
         arrowColorizer = new ParentColorMode();
         edgeScale = new Float(1f);
-        rescaleWeight = Boolean.TRUE;
+        rescaleWeight = Boolean.FALSE;
     }
 }

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/AppendProcessor.java
Patch:
@@ -36,6 +36,7 @@ License, or (at your option) any later version.
 import org.gephi.io.processor.spi.Processor;
 import org.gephi.project.api.ProjectController;
 import org.openide.util.Lookup;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -46,7 +47,7 @@ License, or (at your option) any later version.
 public class AppendProcessor extends AbstractProcessor implements Processor {
 
     public String getDisplayName() {
-        return "Append graph";
+        return NbBundle.getMessage(AppendProcessor.class, "AppendProcessor.displayName");
     }
 
     public void process() {

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -33,6 +33,7 @@ License, or (at your option) any later version.
 import org.gephi.io.processor.spi.Processor;
 import org.gephi.project.api.ProjectController;
 import org.openide.util.Lookup;
+import org.openide.util.NbBundle;
 import org.openide.util.lookup.ServiceProvider;
 
 /**
@@ -43,7 +44,7 @@ License, or (at your option) any later version.
 public class DefaultProcessor extends AbstractProcessor implements Processor {
 
     public String getDisplayName() {
-        return "Add full graph";
+        return NbBundle.getMessage(DefaultProcessor.class, "DefaultProcessor.displayName");
     }
 
     public void process() {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/Arrow2dModel.java
Patch:
@@ -210,6 +210,9 @@ public float getCollisionDistance(double angle) {
 
     @Override
     public boolean isInOctreeLeaf(Octant leaf) {
+        if (obj.getModel() == null) {
+            return false;
+        }
         return ((ModelImpl) obj.getModel()).getOctants()[0] == leaf;
     }
 

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -381,8 +381,6 @@ public boolean verify() {
                     edgeMap.remove(id);
                     edgeSourceTargetMap.remove(sourceTargetId);
                     report.logIssue(new Issue(NbBundle.getMessage(ImportContainerImpl.class, "ImportContainerException_Weight_Zero_Ignored", id), Level.SEVERE));
-                } else {
-                    report.logIssue(new Issue(NbBundle.getMessage(ImportContainerImpl.class, "ImportContainerException_Weight_Zero", id), Level.WARNING));
                 }
             }
         }

File: PreviewImpl/src/org/gephi/preview/supervisors/BidirectionalEdgeSupervisorImpl.java
Patch:
@@ -64,6 +64,7 @@ public void defaultValues() {
         arrowSize = 20f;
         arrowColorizer = new ParentColorMode();
         edgeScale = new Float(1f);
+        rescaleWeight = Boolean.TRUE;
     }
 
     @Override
@@ -73,6 +74,7 @@ public SupervisorPropery[] getProperties() {
             return new SupervisorPropery[]{
                         SupervisorPropery.createProperty(this, Boolean.class, "Bidirectional_curvedFlag", CATEGORY, "Curved", "getCurvedFlag", "setCurvedFlag"),
                         SupervisorPropery.createProperty(this, Float.class, "Bidirectional_edgeScale", CATEGORY, "Thickness", "getEdgeScale", "setEdgeScale"),
+                        SupervisorPropery.createProperty(this, Boolean.class, "Bidirectional_rescaleWeight", CATEGORY, "Rescale Weight", "getRescaleWeight", "setRescaleWeight"),
                         SupervisorPropery.createProperty(this, EdgeColorizer.class, "Bidirectional_colorizer", CATEGORY, "Color", "getColorizer", "setColorizer", EdgeColorizerPropertyEditor.class),
                         SupervisorPropery.createProperty(this, Boolean.class, "Bidirectional_showLabelsFlag", CATEGORY, "Labels", "getShowLabelsFlag", "setShowLabelsFlag"),
                         SupervisorPropery.createProperty(this, Boolean.class, "Bidirectional_shortenLabelsFlag", CATEGORY, "Shorten labels", "getShortenLabelsFlag", "setShortenLabelsFlag"),

File: PreviewImpl/src/org/gephi/preview/supervisors/DirectedEdgeSupervisorImpl.java
Patch:
@@ -364,6 +364,7 @@ public SupervisorPropery[] getProperties() {
             return new SupervisorPropery[]{
                         SupervisorPropery.createProperty(this, Boolean.class, "Directed_curvedFlag", CATEGORY, "Curved", "getCurvedFlag", "setCurvedFlag"),
                         SupervisorPropery.createProperty(this, Float.class, "Directed_edgeScale", CATEGORY, "Thickness", "getEdgeScale", "setEdgeScale"),
+                        SupervisorPropery.createProperty(this, Boolean.class, "Directed_rescaleWeight", CATEGORY, "Rescale Weight", "getRescaleWeight", "setRescaleWeight"),
                         SupervisorPropery.createProperty(this, EdgeColorizer.class, "Directed_colorizer", CATEGORY, "Color", "getColorizer", "setColorizer", EdgeColorizerPropertyEditor.class),
                         SupervisorPropery.createProperty(this, Boolean.class, "Directed_showLabelsFlag", CATEGORY, "Labels", "getShowLabelsFlag", "setShowLabelsFlag"),
                         SupervisorPropery.createProperty(this, Boolean.class, "Directed_shortenLabelsFlag", CATEGORY, "Shorten labels", "getShortenLabelsFlag", "setShortenLabelsFlag"),

File: PreviewImpl/src/org/gephi/preview/supervisors/UndirectedEdgeSupervisorImpl.java
Patch:
@@ -61,6 +61,7 @@ public void defaultValues() {
         baseLabelFont = new Font(Font.SANS_SERIF, Font.PLAIN, 10);
         labelColorizer = new ParentColorMode();
         edgeScale = new Float(1f);
+        rescaleWeight = Boolean.TRUE;
     }
 
     @Override
@@ -74,6 +75,7 @@ public SupervisorPropery[] getProperties() {
             return new SupervisorPropery[]{
                         SupervisorPropery.createProperty(this, Boolean.class, "Undirected_curvedFlag", CATEGORY, "Curved", "getCurvedFlag", "setCurvedFlag"),
                         SupervisorPropery.createProperty(this, Float.class, "Undirected_edgeScale", CATEGORY, "Thickness", "getEdgeScale", "setEdgeScale"),
+                        SupervisorPropery.createProperty(this, Boolean.class, "Undirected_rescaleWeight", CATEGORY, "Rescale Weight", "getRescaleWeight", "setRescaleWeight"),
                         SupervisorPropery.createProperty(this, EdgeColorizer.class, "Undirected_colorizer", CATEGORY, "Color", "getColorizer", "setColorizer", EdgeColorizerPropertyEditor.class),
                         SupervisorPropery.createProperty(this, Boolean.class, "Undirected_showLabelsFlag", CATEGORY, "Show labels", "getShowLabelsFlag", "setShowLabelsFlag"),
                         SupervisorPropery.createProperty(this, Boolean.class, "Undirected_shortenLabelsFlag", CATEGORY, "Shorten labels", "getShortenLabelsFlag", "setShortenLabelsFlag"),

File: PreviewImpl/src/org/gephi/preview/supervisors/UnidirectionalEdgeSupervisorImpl.java
Patch:
@@ -59,5 +59,6 @@ public void defaultValues() {
         arrowSize = 20f;
         arrowColorizer = new ParentColorMode();
         edgeScale = new Float(1f);
+        rescaleWeight = Boolean.TRUE;
     }
 }

File: DesktopHierarchy/src/org/gephi/desktop/hierarchy/HierarchyControlPanel.java
Patch:
@@ -148,7 +148,7 @@ private void initLevelsLinks(HierarchicalGraph graph) {
         String nodesStr = NbBundle.getMessage(HierarchyControlPanel.class, "HierarchyControlPanel.linkLevel.nodes");
         String leavesStr = NbBundle.getMessage(HierarchyControlPanel.class, "HierarchyControlPanel.linkLevel.leaves");
 
-        //Level links
+        //Level links    
         for (int i = 0; i < height + 1; i++) {
             graph.readLock();
             int levelSize = graph.getLevelSize(i);
@@ -334,8 +334,7 @@ private void initComponents() {
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                 .addComponent(labelView)
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
-                .addComponent(levelViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addContainerGap(137, Short.MAX_VALUE))
+                .addComponent(levelViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
         );
     }// </editor-fold>//GEN-END:initComponents
     // Variables declaration - do not modify//GEN-BEGIN:variables

File: DesktopBranding/src/org/gephi/branding/desktop/Installer.java
Patch:
@@ -41,6 +41,9 @@ public void restored() {
         //TopTab
         UIManager.put("ViewTabDisplayerUI", "org.gephi.branding.desktop.NoTabsTabDisplayerUI");
 
+        //GTK Slider issue #529913
+        UIManager.put("Slider.paintValue", Boolean.FALSE);
+
         //Handler
         Logger.getLogger("").addHandler(new ReporterHandler());
     }

File: PreviewAPI/src/org/gephi/preview/api/Edge.java
Patch:
@@ -55,6 +55,8 @@ public interface Edge {
      */
     public Color getColor();
 
+    public java.awt.Color getOriginalColor();
+
     /**
      * Returns the edge's label.
      *

File: PreviewAPI/src/org/gephi/preview/api/EdgeColorizerClient.java
Patch:
@@ -29,4 +29,6 @@ public interface EdgeColorizerClient extends ColorizerClient {
     public Node getNode1();
 
     public Node getNode2();
+
+    public java.awt.Color getOriginalColor();
 }

File: PreviewAPI/src/org/gephi/preview/api/SelfLoop.java
Patch:
@@ -55,6 +55,8 @@ public interface SelfLoop {
      */
     public Color getColor();
 
+    public java.awt.Color getOriginalColor();
+
     /**
      * Returns the self-loop's curve.
      *

File: PreviewImpl/src/org/gephi/preview/BidirectionalEdgeImpl.java
Patch:
@@ -20,9 +20,9 @@ License, or (at your option) any later version.
 */
 package org.gephi.preview;
 
+import org.gephi.graph.api.Edge;
 import org.gephi.preview.api.BidirectionalEdge;
 import org.gephi.preview.supervisors.DirectedEdgeSupervisorImpl;
-import org.gephi.preview.util.Vector;
 
 /**
  * Implementation of a bidirectional edge.
@@ -42,8 +42,8 @@ public class BidirectionalEdgeImpl extends DirectedEdgeImpl
      * @param label      the edge's label
      * @param labelSize  the edge's label size
      */
-    public BidirectionalEdgeImpl(GraphImpl parent, float thickness, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
-        super(parent, thickness, node1, node2, label, labelSize);
+    public BidirectionalEdgeImpl(GraphImpl parent, Edge edge, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
+        super(parent, edge, node1, node2, label, labelSize);
 
         // generate arrows
         arrows.add(new EdgeArrowB2Out(this));

File: PreviewImpl/src/org/gephi/preview/DirectedEdgeImpl.java
Patch:
@@ -22,6 +22,7 @@ License, or (at your option) any later version.
 
 import java.awt.Font;
 import java.util.ArrayList;
+import org.gephi.graph.api.Edge;
 import org.gephi.preview.api.DirectedEdge;
 import org.gephi.preview.api.EdgeArrow;
 import org.gephi.preview.api.EdgeMiniLabel;
@@ -49,8 +50,8 @@ public abstract class DirectedEdgeImpl extends EdgeImpl implements DirectedEdge
      * @param label      the edge's label
      * @param labelSize  the edge's label size
      */
-    protected DirectedEdgeImpl(GraphImpl parent, float thickness, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
-        super(parent, thickness, node1, node2, label, labelSize);
+    protected DirectedEdgeImpl(GraphImpl parent, Edge edge, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
+        super(parent, edge, node1, node2, label, labelSize);
 
         // generate arrows
         arrows.add(new EdgeArrowB1Out(this));

File: PreviewImpl/src/org/gephi/preview/UndirectedEdgeImpl.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.preview;
 
+import org.gephi.graph.api.Edge;
 import org.gephi.preview.api.UndirectedEdge;
 import org.gephi.preview.supervisors.EdgeSupervisorImpl;
 import org.gephi.preview.supervisors.UndirectedEdgeSupervisorImpl;
@@ -41,8 +42,8 @@ public class UndirectedEdgeImpl extends EdgeImpl implements UndirectedEdge {
      * @param label      the edge's label
      * @param labelSize  the edge's label size
      */
-    public UndirectedEdgeImpl(GraphImpl parent, float thickness, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
-        super(parent, thickness, node1, node2, label, labelSize);
+    public UndirectedEdgeImpl(GraphImpl parent, Edge edge, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
+        super(parent, edge, node1, node2, label, labelSize);
 
         getUndirectedEdgeSupervisor().addEdge(this);
     }

File: PreviewImpl/src/org/gephi/preview/UnidirectionalEdgeImpl.java
Patch:
@@ -20,6 +20,7 @@ License, or (at your option) any later version.
 */
 package org.gephi.preview;
 
+import org.gephi.graph.api.Edge;
 import org.gephi.preview.api.UnidirectionalEdge;
 import org.gephi.preview.supervisors.DirectedEdgeSupervisorImpl;
 
@@ -41,8 +42,8 @@ public class UnidirectionalEdgeImpl extends DirectedEdgeImpl
      * @param label      the edge's label
      * @param labelSize  the edge's label size
      */
-    public UnidirectionalEdgeImpl(GraphImpl parent, float thickness, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
-        super(parent, thickness, node1, node2, label, labelSize);
+    public UnidirectionalEdgeImpl(GraphImpl parent, Edge edge, NodeImpl node1, NodeImpl node2, String label, float labelSize) {
+        super(parent, edge, node1, node2, label, labelSize);
 
         getDirectedEdgeSupervisor().addEdge(this);
     }

File: PreviewImpl/src/org/gephi/preview/propertyeditors/EdgeChildColorizerPropertyEditor.java
Patch:
@@ -48,6 +48,7 @@ public Component getCustomEditor() {
         ColorModePanel p;
         p = (ColorModePanel) super.getCustomEditor();
         p = new EdgeBothBColorModePanelDecorator(this, p);
+        p = new EdgeOriginalColorModePanelDecorator(this, p);
         p = new EdgeB2ColorModePanelDecorator(this, p);
         p = new EdgeB1ColorModePanelDecorator(this, p);
         p = new ParentColorModePanelDecorator(this, p);

File: PreviewImpl/src/org/gephi/preview/PreviewGraphFactory.java
Patch:
@@ -167,7 +167,7 @@ private NodeImpl createPreviewNode(GraphImpl previewGraph, org.gephi.graph.api.N
         org.gephi.graph.api.TextData sourceNodeTextData = sourceNodeData.getTextData();
 
         String label = sourceNodeData.getLabel();
-        if (sourceNodeTextData != null && sourceNodeTextData.getText() != null && sourceNodeTextData.getText().isEmpty()) {
+        if (sourceNodeTextData != null && sourceNodeTextData.getText() != null && !sourceNodeTextData.getText().isEmpty()) {
             label = sourceNodeTextData.getText();
         }
 

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/generalactions/ui/ImportCSVUIWizardAction.java
Patch:
@@ -87,6 +87,8 @@ public void performAction() {
             }
             Lookup.getDefault().lookup(DataTablesController.class).refreshCurrentTable();
         }
+        step1.unSetup();
+        step2.unSetup();
     }
 
     /**

File: PartitionAPI/src/org/gephi/partition/impl/PartitionFactory.java
Patch:
@@ -63,7 +63,7 @@ public static boolean isNodePartitionColumn(AttributeColumn column, Graph graph)
                 }
                 values.add(value);
             }
-            if (values.size() < 2f / 3f * nonNullvalues) {      //If #different values is < 2:3 of total non-null values
+            if (values.size() < 9f / 10f * nonNullvalues) {      //If #different values is < 2:3 of total non-null values
                 return true;
             }
         }

File: FiltersImpl/src/org/gephi/filters/FilterModelImpl.java
Patch:
@@ -260,7 +260,9 @@ public void addChangeListener(ChangeListener listener) {
     }
 
     public void removeChangeListener(ChangeListener listener) {
-        listeners.remove(listener);
+        if (listeners != null) {
+            listeners.remove(listener);
+        }
     }
 
     private void fireChangeEvent() {

File: PreviewImpl/src/org/gephi/preview/EdgeImpl.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.preview;
 
 import java.awt.Font;
@@ -173,7 +173,7 @@ public Boolean isCurved() {
     }
 
     public Boolean showLabel() {
-        if (!hasLabel()) {
+        if (!hasLabel() || getLabel().getFont() == null) {
             return false;
         }
 

File: DesktopFilters/src/org/gephi/desktop/filters/library/CategoryNode.java
Patch:
@@ -90,7 +90,7 @@ public Transferable paste() throws IOException {
                     QueryNode queryNode = (QueryNode) dropNode;
                     FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
                     FilterLibrary library = filterController.getModel().getLibrary();
-                    library.saveQuery(queryNode.qetQuery());
+                    library.saveQuery(queryNode.getQuery());
                     return null;
                 }
             };

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java
Patch:
@@ -95,7 +95,7 @@ public Action[] getActions(boolean context) {
         return new Action[]{new RemoveAction(), new RenameAction()};
     }
 
-    public Query qetQuery() {
+    public Query getQuery() {
         return query;
     }
 

File: DesktopFilters/src/org/gephi/desktop/filters/query/SlotNode.java
Patch:
@@ -72,7 +72,7 @@ public PasteType getDropType(final Transferable t, int action, int index) {
                 public Transferable paste() throws IOException {
                     QueryNode queryNode = (QueryNode) dropNode;
                     FilterController filterController = Lookup.getDefault().lookup(FilterController.class);
-                    filterController.setSubQuery(parent, queryNode.qetQuery());
+                    filterController.setSubQuery(parent, queryNode.getQuery());
                     return null;
                 }
             };

File: FiltersImpl/src/org/gephi/filters/FilterModelImpl.java
Patch:
@@ -127,13 +127,15 @@ public void setSubQuery(Query query, Query subQuery) {
         AbstractQueryImpl impl = (AbstractQueryImpl) query;
         impl.addSubQuery(subQuery);
         fireChangeEvent();
+        autoRefreshor.manualRefresh();
     }
 
     public void removeSubQuery(Query query, Query parent) {
         AbstractQueryImpl impl = (AbstractQueryImpl) parent;
         impl.removeSubQuery(query);
         ((AbstractQueryImpl) query).setParent(null);
         fireChangeEvent();
+        autoRefreshor.manualRefresh();
     }
 
     public int getIndex(Query function) {

File: PreviewExport/src/org/gephi/io/exporter/preview/ExporterBuilderSVG.java
Patch:
@@ -38,7 +38,7 @@ public VectorExporter buildExporter() {
     }
 
     public FileType[] getFileTypes() {
-        FileType ft = new FileType(".SVG", NbBundle.getMessage(ExporterBuilderSVG.class, "fileType_SVG_Name"));
+        FileType ft = new FileType(".svg", NbBundle.getMessage(ExporterBuilderSVG.class, "fileType_SVG_Name"));
         return new FileType[]{ft};
     }
 

File: UIUtils/src/org/gephi/ui/utils/DialogFileFilter.java
Patch:
@@ -53,9 +53,9 @@ public boolean accept(File file)
 		if(file.isDirectory() || extensions.size()==0) {
 			return true;
 		}
-		String nomFichier = file.getName().toLowerCase();
+		String fileName = file.getName().toLowerCase();
 		for(String extension : extensions){
-			if(nomFichier.endsWith(extension)){
+			if(fileName.endsWith(extension)){
 				return true;
 			}
 		}

File: PreviewExport/src/org/gephi/io/exporter/preview/util/LengthUnit.java
Patch:
@@ -10,6 +10,7 @@ public enum LengthUnit {
     CENTIMETER,
     MILLIMETER,
     INCH,
+    PIXELS,
     PERCENTAGE;
 
     @Override
@@ -21,6 +22,8 @@ public String toString() {
                 return "mm";
             case INCH:
                 return "in";
+            case PIXELS:
+                return "px";
             default:
             case PERCENTAGE:
                 return "%";

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -124,11 +124,12 @@ private void refreshResult(StatisticsModel model) {
 
         if (result != null) {
             resultLabel.setText(result);
-            reportButton.setEnabled(true);
         } else {
             resultLabel.setText("");
-            reportButton.setEnabled(false);
         }
+
+        String report = model.getReport(statisticsUI);
+        reportButton.setEnabled(report != null);
     }
 
     private void run() {

File: StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java
Patch:
@@ -255,7 +255,6 @@ private String unembedImages(String report) {
         if (result.length == 0) {
             return report;
         }
-        boolean first = true;
         try {
             TempDir tempDir = TempDirUtils.createTempDir();
 

File: StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java
Patch:
@@ -98,7 +98,8 @@ public String getReport() {
                 + "<h2> Parameters: </h2>"
                 + "Network Interpretation:  " + (this.mDirected ? "directed" : "undirected") + "<br>"
                 + "<br> <h2> Results: </h2>"
-                + "Density: " + mDensity);
+                + "Density: " + mDensity
+                + "</BODY></HTML>");
         return report;
     }
 }

File: StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java
Patch:
@@ -165,7 +165,7 @@ public Element writeXML(Document document) {
                 Element reportE = document.createElement("report");
                 reportE.setAttribute("class", entry.getKey().getName());
                 reportE.setAttribute("value", entry.getValue());
-                resultsE.appendChild(reportE);
+                reportsE.appendChild(reportE);
             }
         }
         modelE.appendChild(reportsE);

File: StatisticsAPI/src/org/gephi/statistics/StatisticsModelImpl.java
Patch:
@@ -83,7 +83,7 @@ public boolean isStatisticsUIVisible(StatisticsUI statisticsUI) {
 
     public boolean isRunning(StatisticsUI statisticsUI) {
         for (Statistics s : runningList.toArray(new Statistics[0])) {
-            if (statisticsUI.getStatisticsClass().equals(s)) {
+            if (statisticsUI.getStatisticsClass().equals(s.getClass())) {
                 return true;
             }
         }

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -209,7 +209,7 @@ private void updateEdges(HierarchicalGraph graph) {
                     arrowObj.setCacheMarker(cacheMarker);
                 }
             } else {
-                if (!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop()) {
+                if (!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop() && edge.isDirected()) {
                     ModelImpl arrowObj = ((Edge2dModel) obj).getArrow();
                     arrowObj.setCacheMarker(cacheMarker);
                 }

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ConnectedComponentUI.java
Patch:
@@ -50,8 +50,7 @@ public void setup(Statistics statistics) {
     }
 
     public void unsetup() {
-        //Set params
-        connectedComponents.setDirected(panel.isDirected());
+        connectedComponents = null;
         panel = null;
     }
 

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/DegreeDistributionUI.java
Patch:
@@ -46,8 +46,7 @@ public void setup(Statistics statistics) {
     }
 
     public void unsetup() {
-        //Set params
-        degreeDistribution.setDirected(panel.isDirected());
+        degreeDistribution = null;
         panel = null;
     }
 

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/EigenvectorCenralityUI.java
Patch:
@@ -51,9 +51,8 @@ public void setup(Statistics statistics) {
     }
 
     public void unsetup() {
-        //Set params
-        eigen.setNumRuns(panel.getNumRuns());
-        eigen.setDirected(panel.isDirected());
+        panel = null;
+        eigen = null;
     }
 
     public Class<? extends Statistics> getStatisticsClass() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/HitsUI.java
Patch:
@@ -50,9 +50,8 @@ public void setup(Statistics statistics) {
     }
 
     public void unsetup() {
-        //Set params
-        hits.setEpsilon(panel.getEpsilon());
-        hits.setUndirected(!panel.isDirected());
+        panel = null;
+        hits = null;
     }
 
     public Class<? extends Statistics> getStatisticsClass() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/InOutDegreeUI.java
Patch:
@@ -45,6 +45,7 @@ public void setup(Statistics statistics) {
     }
 
     public void unsetup() {
+        inOutDegree = null;
     }
 
     public Class<? extends Statistics> getStatisticsClass() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ModularityUI.java
Patch:
@@ -46,7 +46,7 @@ public void setup(Statistics statistics) {
     }
 
     public void unsetup() {
-        mod.setRandom(panel.isRandomize());
+        mod = null;
         panel = null;
     }
 

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/PathLengthUI.java
Patch:
@@ -47,9 +47,7 @@ public void setup(Statistics statistics) {
     }
 
     public void unsetup() {
-        //Set params
-        graphDistance.setDirected(panel.isDirected());
-        graphDistance.setRelative(panel.normalize());
+        graphDistance = null;
         panel = null;
     }
 

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java
Patch:
@@ -74,7 +74,7 @@ public class ImporterGEXF2 implements FileImporter, LongTask {
     private static final String EDGE_TYPE = "type";
     private static final String EDGE_WEIGHT = "weight";
     private static final String EDGE_START = "start";
-    private static final String EDGE_COLOR = "viz:color";
+    private static final String EDGE_COLOR = "color";
     private static final String EDGE_END = "end";
     private static final String EDGE_SLICE = "slice";
     private static final String ATTRIBUTE = "attribute";

File: DataTableUI/src/org/gephi/ui/datatable/EdgeDataTable.java
Patch:
@@ -379,7 +379,7 @@ public String getColumnName() {
 
         public Object getValueFor(Edge edge) {
             Object value = edge.getEdgeData().getAttributes().getValue(column.getIndex());
-            if (useSparklines && AttributeUtils.getDefault().isNumberListColumn(column)) {
+            if (useSparklines && (AttributeUtils.getDefault().isNumberListColumn(column)||AttributeUtils.getDefault().isDynamicNumberColumn(column))) {
                 return value;
             } else {
                 return value != null ? value.toString() : null;//Show values as Strings like in Edit window and other parts of the program to be consistent

File: DataTableUI/src/org/gephi/ui/datatable/NodeDataTable.java
Patch:
@@ -384,7 +384,7 @@ public Object getValueFor(ImmutableTreeNode node) {
             Attributes row = graphNode.getNodeData().getAttributes();
             Object value = row.getValue(column.getIndex());
 
-            if (useSparklines && AttributeUtils.getDefault().isNumberListColumn(column)) {
+            if (useSparklines && (AttributeUtils.getDefault().isNumberListColumn(column)||AttributeUtils.getDefault().isDynamicNumberColumn(column))) {
                 return value;
             } else {
                 return value != null ? value.toString() : null;//Show values as Strings like in Edit window and other parts of the program to be consistent

File: VisualizationModule/src/org/gephi/visualization/VizModel.java
Patch:
@@ -338,7 +338,7 @@ public float getCameraDistance() {
     }
 
     public void setCameraDistance(float distance) {
-        fireProperyChange("cameraDistance", null, distance);
+        
     }
 
     //EVENTS

File: VisualizationModule/src/org/gephi/visualization/component/GlobalSettingsPanel.java
Patch:
@@ -50,7 +50,6 @@ public void setup() {
             public void propertyChange(PropertyChangeEvent evt) {
                 if (evt.getPropertyName().equals("init")) {
                     refreshSharedConfig();
-                    refreshZoom();
                 } else if (evt.getPropertyName().equals("backgroundColor")) {
                     refreshSharedConfig();
                 } else if (evt.getPropertyName().equals("autoSelectNeighbor")) {
@@ -59,8 +58,6 @@ public void propertyChange(PropertyChangeEvent evt) {
                     refreshSharedConfig();
                 } else if (evt.getPropertyName().equals("use3d")) {
                     refreshSharedConfig();
-                } else if (evt.getPropertyName().equals("cameraDistance")) {
-                    refreshZoom();
                 }
             }
         });

File: AttributesImpl/src/org/gephi/data/attributes/event/AttributeEventManager.java
Patch:
@@ -111,7 +111,7 @@ public void run() {
 
     private AttributeEvent createEvent(AbstractEvent event, List<Object> compress, List<Object> compressObjects) {
         final AttributeEventDataImpl eventData = new AttributeEventDataImpl();
-        final AttributeEventImpl attributeEvent = new AttributeEventImpl(event.getEventType(), null, eventData);
+        final AttributeEventImpl attributeEvent = new AttributeEventImpl(event.getEventType(), event.getAttributeTable(), eventData);
         if (event instanceof ValueEvent) {
             AttributeValue[] values;
             Object[] objects;

File: AttributesImpl/src/org/gephi/data/attributes/model/IndexedAttributeModel.java
Patch:
@@ -37,6 +37,8 @@ public IndexedAttributeModel() {
         dataIndex = new DataIndex();
         eventManager = new AttributeEventManager(this);
         createPropertiesColumn();
+
+        eventManager.start();
     }
 
     @Override

File: GraphAPI/src/org/gephi/graph/api/EdgeData.java
Patch:
@@ -55,6 +55,8 @@ public interface EdgeData extends Renderable {
      * Returns the string identifier of this edge. This identifier can be set
      * by users, in contrario of {@link Edge#getId()} which is set by the system.
      * <p>
+     * Use <code>Graph.getEdge(String)</code> to find edges from this id.
+     * <p>
      * If no identifier has been set, returns the system integer identifier.
      * @return              the node identifier
      */

File: GraphAPI/src/org/gephi/graph/api/NodeData.java
Patch:
@@ -70,6 +70,8 @@ public interface NodeData extends Renderable {
      * Returns the string identifier of this node. This identifier can be set
      * by users, in contrario of {@link Node#getId()} which is set by the system.
      * <p>
+     * Use <code>Graph.getNode(String)</code> to find nodes from this id.
+     * <p>
      * If no identifier has been set, returns the system integer identifier.
      * @return              the node identifier
      */

File: ImportAPI/src/org/gephi/io/importer/impl/EdgeDraftImpl.java
Patch:
@@ -173,8 +173,8 @@ public void addAttributeValue(AttributeColumn column, Object value, String dateF
         if (!column.getType().isDynamicType()) {
             throw new IllegalArgumentException("The column must be dynamic");
         }
-        Double start = null;
-        Double end = null;
+        Double start = Double.NEGATIVE_INFINITY;
+        Double end = Double.POSITIVE_INFINITY;
         if (dateFrom != null && !dateFrom.isEmpty()) {
             try {
                 start = DynamicUtilities.getDoubleFromXMLDateString(dateFrom);
@@ -197,7 +197,7 @@ public void addAttributeValue(AttributeColumn column, Object value, String dateF
                 }
             }
         }
-        if (start == null && end == null) {
+        if ((start == null && end == null) || (start == Double.NEGATIVE_INFINITY && end == Double.POSITIVE_INFINITY)) {
             throw new IllegalArgumentException(NbBundle.getMessage(EdgeDraftImpl.class, "ImportContainerException_TimeInterval_Empty"));
         }
         if (value instanceof String && !column.getType().equals(AttributeType.DYNAMIC_STRING)) {

File: ImportAPI/src/org/gephi/io/importer/impl/NodeDraftImpl.java
Patch:
@@ -218,8 +218,8 @@ public void addAttributeValue(AttributeColumn column, Object value, String dateF
         if (!column.getType().isDynamicType()) {
             throw new IllegalArgumentException("The column must be dynamic");
         }
-        Double start = null;
-        Double end = null;
+        Double start = Double.NEGATIVE_INFINITY;
+        Double end = Double.POSITIVE_INFINITY;
         if (dateFrom != null && !dateFrom.isEmpty()) {
             try {
                 start = DynamicUtilities.getDoubleFromXMLDateString(dateFrom);
@@ -242,7 +242,7 @@ public void addAttributeValue(AttributeColumn column, Object value, String dateF
                 }
             }
         }
-        if (start == null && end == null) {
+        if ((start == null && end == null) || (start == Double.NEGATIVE_INFINITY && end == Double.POSITIVE_INFINITY)) {
             throw new IllegalArgumentException(NbBundle.getMessage(NodeDraftImpl.class, "ImportContainerException_TimeInterval_Empty"));
         }
         if (value instanceof String && !column.getType().equals(AttributeType.DYNAMIC_STRING)) {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java
Patch:
@@ -81,11 +81,11 @@ public class ImporterGEXF2 implements FileImporter, LongTask {
     private static final String ATTRIBUTE_ID = "id";
     private static final String ATTRIBUTE_TITLE = "title";
     private static final String ATTRIBUTE_TYPE = "type";
-    private static final String ATTRIBUTE_TYPE2 = "mode";
     private static final String ATTRIBUTE_DEFAULT = "default";
     private static final String ATTRIBUTES = "attributes";
     private static final String ATTRIBUTES_CLASS = "class";
     private static final String ATTRIBUTES_TYPE = "type";
+    private static final String ATTRIBUTES_TYPE2 = "mode";
     private static final String ATTVALUE = "attvalue";
     private static final String ATTVALUE_FOR = "for";
     private static final String ATTVALUE_FOR2 = "id";
@@ -667,7 +667,7 @@ private void readAttributes(XMLStreamReader reader) throws Exception {
             String attName = reader.getAttributeName(i).getLocalPart();
             if (ATTRIBUTES_CLASS.equalsIgnoreCase(attName)) {
                 classAtt = reader.getAttributeValue(i);
-            } else if (ATTRIBUTES_TYPE.equalsIgnoreCase(attName)) {
+            } else if (ATTRIBUTES_TYPE.equalsIgnoreCase(attName) || ATTRIBUTES_TYPE2.equalsIgnoreCase(attName)) {
                 typeAtt = reader.getAttributeValue(i);
             }
         }
@@ -700,7 +700,7 @@ private void readAttribute(XMLStreamReader reader, String classAtt, String typeA
             String attName = reader.getAttributeName(i).getLocalPart();
             if (ATTRIBUTE_ID.equalsIgnoreCase(attName)) {
                 id = reader.getAttributeValue(i);
-            } else if (ATTRIBUTE_TYPE.equalsIgnoreCase(attName) || ATTRIBUTE_TYPE2.equalsIgnoreCase(attName)) {
+            } else if (ATTRIBUTE_TYPE.equalsIgnoreCase(attName)) {
                 type = reader.getAttributeValue(i);
             } else if (ATTRIBUTE_TITLE.equalsIgnoreCase(attName)) {
                 title = reader.getAttributeValue(i);

File: AttributesAPI/src/org/gephi/data/attributes/type/DynamicType.java
Patch:
@@ -76,7 +76,8 @@ public DynamicType(List<Interval<T>> in) {
 	public DynamicType(DynamicType<T> source) {
 		if (source == null)
 			intervalTree = new IntervalTree<T>();
-		else intervalTree = source.intervalTree;
+		else 
+                    intervalTree = new IntervalTree<T>(source.intervalTree);
 	}
 
 	/**

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/DynamicProcessor.java
Patch:
@@ -231,7 +231,7 @@ private TimeInterval removePoint(TimeInterval source, double point) {
 
             Double[] toAdd = new Double[]{toRemove[0], excludingPoint};
 
-            return new TimeInterval(source, toAdd[0], toAdd[1], toRemove[0], toRemove[0]);
+            return new TimeInterval(source, toAdd[0], toAdd[1], toRemove[0], toRemove[1]);
         }
         return source;
 

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -443,6 +443,7 @@ public void stateChanged(ChangeEvent e) {
                                             dd2.setValid(!((ValidationPanel) e.getSource()).isProblem());
                                         }
                                     });
+                                    dd2.setValid(!vp.isProblem());
                                 }
                                 Object result = DialogDisplayer.getDefault().notify(dd2);
                                 if (result.equals(NotifyDescriptor.CANCEL_OPTION) || result.equals(NotifyDescriptor.CLOSED_OPTION)) {

File: ImportAPI/src/org/gephi/io/importer/impl/ImportControllerImpl.java
Patch:
@@ -213,7 +213,9 @@ public void process(Container container, Processor processor, Workspace workspac
                 scaler.doScale(container);
             }
         }
-        processor.process(container.getUnloader(), workspace);
+        processor.setContainer(container.getUnloader());
+        processor.setWorkspace(workspace);
+        processor.process();
     }
 
     private FileObject getArchivedFile(FileObject fileObject) {

File: ToolsPlugin/src/org/gephi/tools/plugin/Edit.java
Patch:
@@ -44,7 +44,7 @@ public class Edit implements Tool {
     private EditToolTopComponent topComponent;
 
     public void select() {
-        topComponent = (EditToolTopComponent) WindowManager.getDefault().findTopComponent("EditToolTopComponent");
+        topComponent = EditToolTopComponent.findInstance();
         topComponent.open();
         topComponent.requestActive();
     }

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java
Patch:
@@ -748,9 +748,9 @@ private void readAttribute(XMLStreamReader reader, String classAtt, String typeA
 
             //Type
             AttributeType attributeType = AttributeType.STRING;
-            if (type.equalsIgnoreCase("boolean")) {
+            if (type.equalsIgnoreCase("boolean") || type.equalsIgnoreCase("bool")) {
                 attributeType = dynamic ? AttributeType.DYNAMIC_BOOLEAN : AttributeType.BOOLEAN;
-            } else if (type.equalsIgnoreCase("integer")) {
+            } else if (type.equalsIgnoreCase("integer") || type.equalsIgnoreCase("int")) {
                 attributeType = dynamic ? AttributeType.DYNAMIC_INT : AttributeType.INT;
             } else if (type.equalsIgnoreCase("long")) {
                 attributeType = dynamic ? AttributeType.DYNAMIC_LONG : AttributeType.LONG;

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGraphML.java
Patch:
@@ -202,7 +202,7 @@ private void createKeys(Document document, Element root) {
             positionKey2E.setAttribute("attr.type", "float");
             positionKey2E.setAttribute("for", "node");
             root.appendChild(positionKey2E);
-            if (minZ != 0f && maxZ != 0f) {
+            if (minZ != 0f || maxZ != 0f) {
                 Element positionKey3E = document.createElement("key");
                 positionKey3E.setAttribute("id", "z");
                 positionKey3E.setAttribute("attr.name", "z");
@@ -388,7 +388,7 @@ private Element createNode(Document document, Graph graph, Node n) throws Except
             nodeE.appendChild(positionXE);
             Element positionYE = createNodePositionY(document, n);
             nodeE.appendChild(positionYE);
-            if (minZ != 0f && maxZ != 0f) {
+            if (minZ != 0f || maxZ != 0f) {
                 Element positionZE = createNodePositionZ(document, n);
                 nodeE.appendChild(positionZE);
             }

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeNonNullBuilder.java
Patch:
@@ -88,7 +88,8 @@ public Category getCategory() {
 
         public String getName() {
             return "<font color='#000000'>" + column.getTitle() + "</font> "
-                    + "<font color='#999999'><i>" + column.getType().toString() + "</i></font>";
+                    + "<font color='#999999'><i>" + column.getType().toString() + " "
+                    + (AttributeUtils.getDefault().isNodeColumn(column) ? "(Node)" : "(Edge)") + "</i></font>";
         }
 
         public Icon getIcon() {

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeRangeBuilder.java
Patch:
@@ -97,7 +97,8 @@ public Category getCategory() {
 
         public String getName() {
             return "<font color='#000000'>" + column.getTitle() + "</font> "
-                    + "<font color='#999999'><i>" + column.getType().toString() + "</i></font>";
+                    + "<font color='#999999'><i>" + column.getType().toString() + " "
+                    + (AttributeUtils.getDefault().isNodeColumn(column) ? "(Node)" : "(Edge)") + "</i></font>";
         }
 
         public Icon getIcon() {

File: LayoutAPI/src/org/gephi/layout/LayoutModelImpl.java
Patch:
@@ -94,7 +94,7 @@ public Layout getLayout(LayoutBuilder layoutBuilder) {
     protected void setSelectedLayout(Layout selectedLayout) {
         Layout oldValue = this.selectedLayout;
         this.selectedLayout = selectedLayout;
-        this.selectedBuilder = selectedLayout.getBuilder();
+        this.selectedBuilder = selectedLayout != null ? selectedLayout.getBuilder() : null;
         if (oldValue != null) {
             saveProperties(oldValue);
         }

File: DynamicImpl/test/unit/src/org/gephi/dynamic/DynamicGraphImplTest.java
Patch:
@@ -21,8 +21,6 @@
 package org.gephi.dynamic;
 
 import javax.xml.datatype.DatatypeConfigurationException;
-import org.gephi.io.importer.plugin.file.ImporterGEXF2;
-import java.io.FileReader;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.GraphController;
 import org.gephi.project.api.ProjectController;
@@ -59,7 +57,7 @@ public DynamicGraphImplTest() {
 		Container container;
 		try {
 			File file = new File(getClass().getResource("/org/gephi/dynamic/test_graph.gexf").toURI());
-			container = importController.importFile(new FileReader(file), new ImporterGEXF2());
+			container = importController.importFile(file);
 		}
 		catch (Exception ex) {
 			Exceptions.printStackTrace(ex);

File: WorkspaceUI/src/org/gephi/ui/workspace/WorkspaceUISelector.java
Patch:
@@ -59,6 +59,7 @@ public void unselect(Workspace workspace) {
     }
 
     public void close(Workspace workspace) {
+        panel.refreshList();
     }
 
     public void disable() {

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/nodes/Settle.java
Patch:
@@ -62,7 +62,7 @@ public String getDescription() {
 
     public boolean canExecute() {
         GraphElementsController gec = Lookup.getDefault().lookup(GraphElementsController.class);
-        return gec.isNodeFixed(clickedNode);
+        return !gec.isNodeFixed(clickedNode);
     }
 
     public ManipulatorUI getUI() {

File: DataTableUI/src/org/gephi/ui/datatable/DataTableTopComponent.java
Patch:
@@ -74,6 +74,7 @@
 import org.gephi.ui.utils.BusyUtils;
 import org.gephi.project.api.Workspace;
 import org.gephi.project.api.WorkspaceListener;
+import org.gephi.ui.components.WrapLayout;
 import org.gephi.ui.general.actions.AddColumnUI;
 import org.gephi.ui.general.actions.CSVExportUI;
 import org.gephi.ui.general.actions.MergeColumnsUI;
@@ -146,6 +147,7 @@ public Thread newThread(Runnable r) {
         });
 
         initComponents();
+        columnManipulatorsPanel.setLayout(new WrapLayout(WrapLayout.CENTER, 25, 20));
         setName(NbBundle.getMessage(DataTableTopComponent.class, "CTL_DataTableTopComponent"));
 //        setToolTipText(NbBundle.getMessage(DataTableTopComponent.class, "HINT_DataTableTopComponent"));
         setIcon(ImageUtilities.loadImage(ICON_PATH));
@@ -1068,7 +1070,6 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         attributeColumnsScrollPane.setPreferredSize(new java.awt.Dimension(200, 130));
 
         columnManipulatorsPanel.setMinimumSize(new java.awt.Dimension(200, 100));
-        columnManipulatorsPanel.setPreferredSize(new java.awt.Dimension(200, 100));
         columnManipulatorsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 20));
         attributeColumnsScrollPane.setViewportView(columnManipulatorsPanel);
 

File: UIComponents/src/org/gephi/ui/components/WrapLayout.java
Patch:
@@ -210,4 +210,3 @@ private void addRow(Dimension dim, int rowWidth, int rowHeight) {
         dim.height += rowHeight;
     }
 }
-

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -73,6 +73,7 @@ public class ImporterGraphML implements FileImporter, LongTask {
     public ImporterGraphML() {
         //Default node associations
         properties.addNodePropertyAssociation(NodeProperties.LABEL, "label");
+        properties.addNodePropertyAssociation(NodeProperties.LABEL, "d3");  // Default node label used by yEd from yworks.com.
         properties.addNodePropertyAssociation(NodeProperties.X, "x");
         properties.addNodePropertyAssociation(NodeProperties.Y, "y");
         properties.addNodePropertyAssociation(NodeProperties.Z, "z");
@@ -81,6 +82,7 @@ public ImporterGraphML() {
         //Default edge associations
         properties.addEdgePropertyAssociation(EdgeProperties.LABEL, "label");
         properties.addEdgePropertyAssociation(EdgeProperties.LABEL, "edgelabel");
+        properties.addEdgePropertyAssociation(EdgeProperties.LABEL, "d7");  // Default edge label used by yEd from yworks.com.
         properties.addEdgePropertyAssociation(EdgeProperties.WEIGHT, "weight");
         properties.addEdgePropertyAssociation(EdgeProperties.ID, "id");
         properties.addEdgePropertyAssociation(EdgeProperties.ID, "edgeid");

File: ExportAPI/src/org/gephi/io/exporter/impl/ExportControllerImpl.java
Patch:
@@ -21,12 +21,11 @@ License, or (at your option) any later version.
 package org.gephi.io.exporter.impl;
 
 import java.io.BufferedOutputStream;
-import java.io.BufferedWriter;
 import java.io.File;
 import java.io.FileOutputStream;
-import java.io.FileWriter;
 import java.io.IOException;
 import java.io.OutputStream;
+import java.io.OutputStreamWriter;
 import java.io.Writer;
 import org.gephi.io.exporter.api.ExportController;
 import org.gephi.io.exporter.api.FileType;
@@ -105,7 +104,7 @@ public void exportFile(File file, Exporter fileExporter) throws IOException {
             } catch (IOException ex) {
             }
         } else if (fileExporter instanceof CharacterExporter) {
-            Writer writer = new BufferedWriter(new FileWriter(file));
+            Writer writer = new OutputStreamWriter(new FileOutputStream(file), "UTF-8");
             ((CharacterExporter) fileExporter).setWriter(writer);
             try {
                 fileExporter.execute();

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/generalactions/ui/ImportCSVUIWizardAction.java
Patch:
@@ -224,10 +224,10 @@ private void importToEdgesTable() {
                     continue;//Ignore this edge row, since no new nodes should be created.
                 } else {//Create new nodes when they don't exist already
                     if (source == null) {
-                        source = gec.createNode(null);
+                        source = gec.createNode(null,reader.get(sourceColumn));
                     }
                     if (target == null) {
-                        target = gec.createNode(null);
+                        target = gec.createNode(null,reader.get(targetColumn));
                     }
                 }
 

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/generalactions/ui/ImportCSVUIWizardPanel2.java
Patch:
@@ -104,6 +104,7 @@ public void storeSettings(Object settings) {
         wizardDescriptor.putProperty("columns-names", component.getColumnsToImport());
         wizardDescriptor.putProperty("columns-types", component.getColumnsToImportTypes());
         wizardDescriptor.putProperty("assign-new-node-ids", component.getAssignNewNodeIds());
+        wizardDescriptor.putProperty("create-new-nodes", component.getCreateNewNodes());
     }
 
     public void setWizardDescriptor(WizardDescriptor wizardDescriptor) {

File: DataTableUI/src/org/gephi/ui/datatable/EdgeDataTable.java
Patch:
@@ -102,7 +102,7 @@ public Class getColumnClass() {
 
             @Override
             public Object getValueFor(Edge edge) {
-                return edge.getSource().getId() + " - " + edge.getSource().getNodeData().getLabel();
+                return edge.getSource().getNodeData().getId();
             }
         };
 
@@ -115,7 +115,7 @@ public Class getColumnClass() {
 
             @Override
             public Object getValueFor(Edge edge) {
-                return edge.getTarget().getId() + " - " + edge.getTarget().getNodeData().getLabel();
+                return edge.getTarget().getNodeData().getId();
             }
         };
         propertiesColumns[2] = new PropertyEdgeDataColumn(NbBundle.getMessage(EdgeDataTable.class, "EdgeDataTable.type.column.text")) {

File: PartitionAPI/src/org/gephi/partition/impl/PartitionControllerImpl.java
Patch:
@@ -94,11 +94,12 @@ public void disable() {
             }
         });
         if (pc.getCurrentWorkspace() != null) {
+            refreshPartitions=true;
             model = pc.getCurrentWorkspace().getLookup().lookup(PartitionModelImpl.class);
             if (model == null) {
                 model = new PartitionModelImpl();
                 Workspace workspace = pc.getCurrentWorkspace();
-                pc.getCurrentWorkspace().add(new PartitionModelImpl());
+                pc.getCurrentWorkspace().add(model);
                 GraphModel gm = Lookup.getDefault().lookup(GraphController.class).getModel(workspace);
                 trachViewChange(gm);
 

File: DataTableUI/src/org/gephi/ui/datatable/DataTableTopComponent.java
Patch:
@@ -857,7 +857,7 @@ public void actionPerformed(ActionEvent e) {
     class RefreshOnceHelperThread extends Thread {
 
         private static final int CHECK_TIME_INTERVAL = 100;//100 ms.
-        private boolean moreEvents = false;
+        private volatile boolean moreEvents = false;
 
         @Override
         public void run() {

File: PreviewImpl/src/org/gephi/preview/BidirectionalEdgeImpl.java
Patch:
@@ -41,7 +41,7 @@ public DirectedEdgeSupervisorImpl getDirectedEdgeSupervisor() {
      * Generates a curve from node 1 to node 2 and a another one from node 2 to
      * node 1, then adds them to the curve list.
      */
-    @Override
+    /*@Override
     protected void genCurves() {
         super.genCurves();
 
@@ -68,5 +68,5 @@ protected void genCurves() {
                 new PointImpl(v1),
                 new PointImpl(v2),
                 node2.getPosition()));
-    }
+    }*/
 }

File: PreviewImpl/src/org/gephi/preview/BidirectionalEdgeImpl.java
Patch:
@@ -41,7 +41,7 @@ public DirectedEdgeSupervisorImpl getDirectedEdgeSupervisor() {
      * Generates a curve from node 1 to node 2 and a another one from node 2 to
      * node 1, then adds them to the curve list.
      */
-    @Override
+    /*@Override
     protected void genCurves() {
         super.genCurves();
 
@@ -68,5 +68,5 @@ protected void genCurves() {
                 new PointImpl(v1),
                 new PointImpl(v2),
                 node2.getPosition()));
-    }
+    }*/
 }

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -136,7 +136,7 @@ public NodeDraftImpl getNode(String id) {
                 node.setId(id);
                 addNode(node);
                 node.setCreatedAuto(true);
-                report.logIssue(new Issue("Unknown node id, creates node from id='" + id+"'", Level.INFO));
+                report.logIssue(new Issue("Unknown node id, creates node from id='" + id + "'", Level.INFO));
             } else {
                 String message = NbBundle.getMessage(ImportContainerImpl.class, "ImportContainerException_UnknowNodeId", id);
                 report.logIssue(new Issue(message, Level.SEVERE));
@@ -435,11 +435,11 @@ public boolean verify() {
             for (NodeDraftImpl node : nodeMap.values()) {
                 boolean issue = false;
 
-                if (timeIntervalMin != null && node.getTimeInterval().getLow() < timeIntervalMin) {
+                if (timeIntervalMin != null && node.getTimeInterval() != null && node.getTimeInterval().getLow() < timeIntervalMin) {
                     node.setTimeInterval((TimeInterval) DynamicUtilities.fitToInterval(node.getTimeInterval(), timeIntervalMin, node.getTimeInterval().getHigh()));
                     issue = true;
                 }
-                if (timeIntervalMax != null && node.getTimeInterval().getHigh() > timeIntervalMax) {
+                if (timeIntervalMax != null && node.getTimeInterval() != null && node.getTimeInterval().getHigh() > timeIntervalMax) {
                     node.setTimeInterval((TimeInterval) DynamicUtilities.fitToInterval(node.getTimeInterval(), node.getTimeInterval().getLow(), timeIntervalMax));
                     issue = true;
                 }

File: PreviewExport/src/org/gephi/io/exporter/preview/PDFExporter.java
Patch:
@@ -1,5 +1,6 @@
 package org.gephi.io.exporter.preview;
 
+import com.itextpdf.text.BaseColor;
 import com.itextpdf.text.Document;
 import com.itextpdf.text.DocumentException;
 import com.itextpdf.text.PageSize;
@@ -101,7 +102,7 @@ private void exportData(Graph graph) throws Exception {
         if (landscape) {
             size = new Rectangle(pageSize.rotate());
         }
-        //size.setBackgroundColor(new BaseColor(controller.getModel().getBackgroundColor()));
+        size.setBackgroundColor(new BaseColor(Lookup.getDefault().lookup(PreviewController.class).getModel().getBackgroundColor()));
         document = new Document(size);
         PdfWriter pdfWriter = PdfWriter.getInstance(document, stream);
         document.open();

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphFactoryImpl.java
Patch:
@@ -133,9 +133,9 @@ public AbstractEdge newEdge(String id, Node source, Node target, float weight, b
         } else {
             edge = new MixedEdgeImpl(idGen.newEdgeId(), nodeSource, nodeTarget, directed);
         }
-        edge.setWeight(weight);
 
         edge.setAttributes(newEdgeAttributes());
+        edge.setWeight(weight);
         edge.getEdgeData().setTextData(newTextData());
         if (id != null) {
             edge.getEdgeData().setId(id);

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/AbstractProcessor.java
Patch:
@@ -101,7 +101,7 @@ protected void flushToNode(NodeDraftGetter nodeDraft, Node node) {
         if (node.getNodeData().getAttributes() != null) {
             AttributeRow row = (AttributeRow) node.getNodeData().getAttributes();
             for (AttributeValue val : nodeDraft.getAttributeRow().getValues()) {
-                if (val.getValue() != null) {
+                if (!val.getColumn().getOrigin().equals(AttributeOrigin.PROPERTY) && val.getValue() != null) {
                     row.setValue(val.getColumn(), val.getValue());
                 }
             }
@@ -148,7 +148,7 @@ protected void flushToEdge(EdgeDraftGetter edgeDraft, Edge edge) {
         if (edge.getEdgeData().getAttributes() != null) {
             AttributeRow row = (AttributeRow) edge.getEdgeData().getAttributes();
             for (AttributeValue val : edgeDraft.getAttributeRow().getValues()) {
-                if (val.getValue() != null) {
+                if (!val.getColumn().getOrigin().equals(AttributeOrigin.PROPERTY) && val.getValue() != null) {
                     row.setValue(val.getColumn(), val.getValue());
                 }
             }

File: AttributesAPI/src/org/gephi/data/attributes/type/AbstractList.java
Patch:
@@ -152,7 +152,9 @@ public boolean equals(Object obj) {
 
         for (int i = 0; i < list.length; i++) {
             if (this.getItem(i) != s.getItem(i)) {
-                if (!this.getItem(i).equals(s.getItem(i))) {
+                if (this.getItem(i)!=null&&!this.getItem(i).equals(s.getItem(i))) {
+                    return false;
+                }else if(s.getItem(i)!=null&&!s.getItem(i).equals(this.getItem(i))){
                     return false;
                 }
             }

File: AttributesAPI/src/org/gephi/data/attributes/type/TypeConvertor.java
Patch:
@@ -122,10 +122,8 @@ public static <T> T createInstanceFromString(String input, Class<T> finalType) {
 
                 throw new IllegalArgumentException(errorMessage);
             } catch (Exception e2) {
-                e2.printStackTrace();
             }
         } catch (Exception e) {
-            e.printStackTrace();
         }
         return resultValue;
     }

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/utils/MathUtils.java
Patch:
@@ -26,7 +26,7 @@
 import java.util.Collection;
 
 /**
- * Class with some mathematic methods for calculating values such as the average, median and min of a list of numbers.
+ * Class with some mathematic methods for calculating values such as the average, median, sum, max and min of a list of numbers.
  * @author Eduardo Ramos <eduramiba@gmail.com>
  */
 public class MathUtils {

File: FiltersImpl/src/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -286,6 +286,8 @@ public void setValue(FilterProperty property, Object value, Callback callback) {
                 callback.setValue(value);
                 model.updateParameters(query);
             }
+        } else {
+            callback.setValue(value);
         }
     }
 }

File: FiltersImpl/src/org/gephi/filters/FilterModelImpl.java
Patch:
@@ -342,6 +342,7 @@ private Query readQuery(Element queryE) {
                             String textValue = paramE.getTextContent();
                             editor.setAsText(textValue);
                             property.setValue(editor.getValue());
+                            updateParameters(query);
                         }
                     } catch (Exception e) {
                         e.printStackTrace();

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java
Patch:
@@ -268,10 +268,10 @@ public void readXML(Element textModelElement) {
         if (sizeModeClass.equals("FixedSizeMode")) {
 //            sizeMode = new FixedSizeMode(this);
             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[0];
-        } else if (colorModeClass.equals("ProportionalSizeMode")) {
+        } else if (sizeModeClass.equals("ProportionalSizeMode")) {
 //            sizeMode = new ProportionalSizeMode(this);
             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[2];
-        } else if (colorModeClass.equals("ScaledSizeMode")) {
+        } else if (sizeModeClass.equals("ScaledSizeMode")) {
 //            sizeMode = new ScaledSizeMode(this);
             sizeMode = VizController.getInstance().getTextManager().getSizeModes()[1];
         }

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterBuilderGEXF.java
Patch:
@@ -17,7 +17,7 @@ License, or (at your option) any later version.
 
 You should have received a copy of the GNU Affero General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
-*/
+ */
 package org.gephi.io.importer.plugin.file;
 
 import org.gephi.io.importer.api.FileType;
@@ -37,7 +37,7 @@ public class ImporterBuilderGEXF implements FileImporterBuilder {
     public static final String IDENTIFER = "gexf";
 
     public FileImporter buildImporter() {
-        return new ImporterGEXF();
+        return new ImporterGEXF2();
     }
 
     public String getName() {

File: AttributesAPI/src/org/gephi/data/properties/PropertiesColumn.java
Patch:
@@ -40,7 +40,7 @@ public enum PropertiesColumn {
     NODE_LABEL             (1, "label",         AttributeType.STRING, AttributeOrigin.PROPERTY, null),
     EDGE_ID                (0, "id",            AttributeType.STRING, AttributeOrigin.PROPERTY, null),
     EDGE_LABEL             (1, "label",         AttributeType.STRING, AttributeOrigin.PROPERTY, null),
-    EDGE_WEIGHT            (2, "weight",        AttributeType.FLOAT, AttributeOrigin.PROPERTY, null),
+    EDGE_WEIGHT            (2, "weight",        AttributeType.FLOAT, AttributeOrigin.PROPERTY, 1f),
     NEO4J_RELATIONSHIP_TYPE(3, "neo4j_rt",      AttributeType.STRING, AttributeOrigin.DELEGATE, null){
         @Override
         public String getTitle() {

File: AttributesImpl/src/org/gephi/data/attributes/AttributeTableImpl.java
Patch:
@@ -123,7 +123,6 @@ private synchronized AttributeColumnImpl addColumn(String id, String title, Attr
     }
 
     public synchronized void removeColumn(AttributeColumn column) {
-
         int index = columns.indexOf(column);
         if (index == -1) {
             return;

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/attributecolumns/mergestrategies/AverageNumber.java
Patch:
@@ -33,7 +33,8 @@
 import org.openide.util.NbBundle;
 
 /**
- *
+ * AttributeColumnsMergeStrategy for any combination of number or number list columns that
+ * calculates the average of all the values and creates a new BigDecimal column with the result of each row.
  * @author Eduardo Ramos <eduramiba@gmail.com>
  */
 public class AverageNumber implements AttributeColumnsMergeStrategy{

File: AttributesImpl/src/org/gephi/data/attributes/AttributeColumnImpl.java
Patch:
@@ -33,7 +33,7 @@ License, or (at your option) any later version.
 public class AttributeColumnImpl implements AttributeColumn {
 
     protected final AttributeTableImpl table;
-    protected final int index;
+    protected int index;
     protected final String id;
     protected final String title;
     protected final AttributeType type;

File: AttributesImpl/src/org/gephi/data/attributes/AttributeColumnImpl.java
Patch:
@@ -33,7 +33,7 @@
 public class AttributeColumnImpl implements AttributeColumn {
 
     protected final AttributeTableImpl table;
-    protected final int index;
+    protected int index;
     protected final String id;
     protected final String title;
     protected final AttributeType type;

File: AttributesAPI/src/org/gephi/data/properties/PropertiesColumn.java
Patch:
@@ -40,7 +40,8 @@ public enum PropertiesColumn {
     NODE_LABEL             (1, "label",         AttributeType.STRING, AttributeOrigin.PROPERTY, null),
     EDGE_ID                (0, "id",            AttributeType.STRING, AttributeOrigin.PROPERTY, null),
     EDGE_LABEL             (1, "label",         AttributeType.STRING, AttributeOrigin.PROPERTY, null),
-    NEO4J_RELATIONSHIP_TYPE(2, "neo4j_rt",      AttributeType.STRING, AttributeOrigin.DELEGATE, null){
+    EDGE_WEIGHT            (2, "weight",        AttributeType.FLOAT, AttributeOrigin.PROPERTY, null),
+    NEO4J_RELATIONSHIP_TYPE(3, "neo4j_rt",      AttributeType.STRING, AttributeOrigin.DELEGATE, null){
         @Override
         public String getTitle() {
             return "Neo4j Relationship Type";

File: AttributesImpl/src/org/gephi/data/attributes/AbstractAttributeModel.java
Patch:
@@ -60,7 +60,8 @@ protected void createPropertiesColumn() {
         PropertiesColumn[] columnsForNodeTable = {PropertiesColumn.NODE_ID,
                                                   PropertiesColumn.NODE_LABEL};
         PropertiesColumn[] columnsForEdgeTable = {PropertiesColumn.EDGE_ID,
-                                                  PropertiesColumn.EDGE_LABEL};
+                                                  PropertiesColumn.EDGE_LABEL,
+                                                  PropertiesColumn.EDGE_WEIGHT};
 
         for (PropertiesColumn columnForNodeTable : columnsForNodeTable)
             nodeTable.addPropertiesColumn(columnForNodeTable);

File: DHNSGraph/src/org/gephi/graph/dhns/edge/AverageMetaEdgeBuilder.java
Patch:
@@ -44,7 +44,7 @@ public AverageMetaEdgeBuilder(float minimum, float limit, float divisor) {
     }
 
     public void pushEdge(AbstractEdge edge, AbstractNode source, AbstractNode target, MetaEdgeImpl metaEdge) {
-        float edgeWeight = edge.weight;
+        float edgeWeight = edge.getWeight();
         float metaWeight = metaEdge.getWeight();
         float edgeCount = metaEdge.getCount();
         float div = 1f;
@@ -63,7 +63,7 @@ public void pushEdge(AbstractEdge edge, AbstractNode source, AbstractNode target
     }
 
     public void pullEdge(AbstractEdge edge, AbstractNode source, AbstractNode target, MetaEdgeImpl metaEdge) {
-        float edgeWeight = edge.weight;
+        float edgeWeight = edge.getWeight();
         float metaWeight = metaEdge.getWeight();
         float edgeCount = metaEdge.getCount();
         float div = 1f;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/MetaEdgeImpl.java
Patch:
@@ -35,7 +35,7 @@ public class MetaEdgeImpl extends AbstractEdge implements MetaEdge {
 
     public MetaEdgeImpl(int ID, AbstractNode source, AbstractNode target) {
         super(ID, source, target);
-        this.weight = 0f;
+        setWeight(0f);
     }
 
     public boolean addEdge(AbstractEdge edge) {

File: DHNSGraph/src/org/gephi/graph/dhns/edge/SumMetaEdgeBuilder.java
Patch:
@@ -44,7 +44,7 @@ public SumMetaEdgeBuilder(float minimum, float limit, float divisor) {
     }
 
     public void pushEdge(AbstractEdge edge, AbstractNode source, AbstractNode target, MetaEdgeImpl metaEdge) {
-        float edgeWeight = edge.weight;
+        float edgeWeight = edge.getWeight();
         float metaWeight = metaEdge.getWeight();
         float div = 1f;
         if (edge.getSource() == metaEdge.getSource()
@@ -61,7 +61,7 @@ public void pushEdge(AbstractEdge edge, AbstractNode source, AbstractNode target
     }
 
     public void pullEdge(AbstractEdge edge, AbstractNode source, AbstractNode target, MetaEdgeImpl metaEdge) {
-        float edgeWeight = edge.weight;
+        float edgeWeight = edge.getWeight();
         float metaWeight = metaEdge.getWeight();
         float div = 1f;
         if (source == metaEdge.getSource()

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java
Patch:
@@ -276,7 +276,7 @@ public void drawTextEdge(ModelImpl objectModel) {
             TextDataImpl textData = (TextDataImpl) renderable.getTextData();
             if (textData != null) {
                 model.colorMode.textColor(this, textData, objectModel);
-                model.sizeMode.setSizeFactor2d(model.edgeSizeFactor, textData, objectModel);
+                model.sizeMode.setSizeFactor3d(model.edgeSizeFactor, textData, objectModel);
                 if (edgeRefresh) {
                     builder.buildNodeText((NodeData) renderable, textData, model);
                 }

File: DesktopImport/src/org/gephi/desktop/importer/ReportPanel.java
Patch:
@@ -447,9 +447,9 @@ private void initComponents() {
                     .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                         .addComponent(createMissingNodesCheckbox)
                         .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
-                        .addComponent(processorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
-                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
-                .addContainerGap())
+                        .addComponent(processorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
+                        .addContainerGap())
+                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
         );
     }// </editor-fold>//GEN-END:initComponents
     // Variables declaration - do not modify//GEN-BEGIN:variables

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/AttributeColumnsControllerImpl.java
Patch:
@@ -255,8 +255,7 @@ public boolean canChangeColumnData(AttributeColumn column) {
      * @return Array with all graph nodes
      */
     private Node[] getNodesArray() {
-        Graph graph = Lookup.getDefault().lookup(GraphController.class).getModel().getGraph();
-        return graph.getNodes().toArray();
+        return Lookup.getDefault().lookup(GraphController.class).getModel().getHierarchicalGraph().getNodesTree().toArray();
     }
 
     /**

File: AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java
Patch:
@@ -21,8 +21,6 @@
 package org.gephi.data.attributes;
 
 import org.gephi.data.attributes.api.AttributeController;
-import org.gephi.data.attributes.api.AttributeRowFactory;
-import org.gephi.data.attributes.api.AttributeValueFactory;
 import org.gephi.data.attributes.api.AttributeModel;
 import org.gephi.data.attributes.model.IndexedAttributeModel;
 import org.gephi.data.attributes.model.TemporaryAttributeModel;

File: AttributesImpl/src/org/gephi/data/attributes/AttributeFactoryImpl.java
Patch:
@@ -41,6 +41,7 @@ public AttributeValue newValue(AttributeColumn column, Object value) {
         if (value == null) {
             return new AttributeValueImpl((AttributeColumnImpl) column, null);
         }
+
         if (value.getClass() != column.getType().getType() && value.getClass() == String.class) {
             value = column.getType().parse((String) value);
         }

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/SearchReplaceControllerImpl.java
Patch:
@@ -89,7 +89,7 @@ public boolean canReplace(SearchResult result) {
             table= ac.getModel().getEdgeTable();
             column = table.getColumn(result.getFoundColumnIndex());
         }
-        return Lookup.getDefault().lookup(AttributeColumnsController.class).canChangeColumnData(table, column);
+        return Lookup.getDefault().lookup(AttributeColumnsController.class).canChangeColumnData(column);
     }
 
     public SearchResult replace(SearchResult result, String replacement) {

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/attributecolumns/ClearColumnData.java
Patch:
@@ -59,7 +59,7 @@ public String getDescription() {
     public boolean canManipulateColumn(AttributeTable table, AttributeColumn column) {
         boolean result;
         AttributeColumnsController ac = Lookup.getDefault().lookup(AttributeColumnsController.class);
-        result=ac.canChangeColumnData(table, column);
+        result=ac.canChangeColumnData(column);
         return result&&ac.getTableRowsCount(table)>0;//Also make sure that there is at least 1 row
     }
 

File: DataTableUI/src/org/gephi/ui/datatable/EdgeDataTable.java
Patch:
@@ -39,9 +39,7 @@
 import javax.swing.event.PopupMenuListener;
 import javax.swing.event.TableModelListener;
 import javax.swing.table.TableModel;
-import org.gephi.data.attributes.api.AttributeController;
 import org.gephi.data.attributes.api.AttributeColumn;
-import org.gephi.data.attributes.api.AttributeTable;
 import org.gephi.datalaboratory.api.AttributeColumnsController;
 import org.gephi.datalaboratory.api.DataLaboratoryHelper;
 import org.gephi.datalaboratory.spi.edges.EdgesManipulator;
@@ -319,7 +317,7 @@ public void setValueFor(Edge edge, Object value) {
         }
 
         public boolean isEditable() {
-            return attributeColumnsController.canChangeColumnData(false, column);
+            return attributeColumnsController.canChangeColumnData(column);
         }
     }
 

File: DataTableUI/src/org/gephi/ui/datatable/NodeDataTable.java
Patch:
@@ -45,8 +45,6 @@
 import javax.swing.tree.TreeNode;
 import javax.swing.tree.TreePath;
 import org.gephi.data.attributes.api.AttributeColumn;
-import org.gephi.data.attributes.api.AttributeController;
-import org.gephi.data.attributes.api.AttributeTable;
 import org.gephi.datalaboratory.api.AttributeColumnsController;
 import org.gephi.graph.api.HierarchicalGraph;
 import org.gephi.graph.api.ImmutableTreeNode;
@@ -339,7 +337,7 @@ public void setValueFor(ImmutableTreeNode node, Object value) {
         }
 
         public boolean isEditable() {
-            return attributeColumnsController.canChangeColumnData(true, column);
+            return attributeColumnsController.canChangeColumnData(column);
         }
     }
 

File: ImportAPI/src/org/gephi/io/importer/api/ContainerUnloader.java
Patch:
@@ -44,9 +44,9 @@ public interface ContainerUnloader {
 
     public AttributeModel getAttributeModel();
 
-    public String getTimeIntervalMin();
+    public Double getTimeIntervalMin();
 
-    public String getTimeIntervalMax();
+    public Double getTimeIntervalMax();
 
     public boolean allowSelfLoop();
 

File: ImportAPI/src/org/gephi/io/importer/api/EdgeDraft.java
Patch:
@@ -79,5 +79,7 @@ public enum EdgeType {
 
     public void addAttributeValue(AttributeColumn column, Object value);
 
-    public void addTimeSlice(String dateFrom, String dateTo);
+    public void addAttributeValue(AttributeColumn column, Object value, String start, String end) throws IllegalArgumentException;
+
+    public void addTimeInterval(String start, String end) throws IllegalArgumentException;
 }

File: ImportAPI/src/org/gephi/io/importer/api/NodeDraft.java
Patch:
@@ -74,9 +74,11 @@ public interface NodeDraft {
 
     public void addAttributeValue(AttributeColumn column, Object value);
 
+    public void addAttributeValue(AttributeColumn column, Object value, String start, String end) throws IllegalArgumentException;
+
     public void addChild(NodeDraft child);
 
     public void setParent(NodeDraft draft);
 
-    public void addTimeSlice(String dateFrom, String dateTo);
+    public void addTimeInterval(String start, String end) throws IllegalArgumentException;
 }

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -388,7 +388,7 @@ private void parseNodes(NodeList nodeListE, String parent) throws Exception {
                 }
 
                 if (nodeStart != null || nodeEnd != null) {
-                    node.addTimeSlice(nodeStart, nodeEnd);
+                    node.addTimeInterval(nodeStart, nodeEnd);
                 }
             }
 
@@ -541,7 +541,7 @@ private void parseEdges(NodeList edgeListE, String parent) {
                 }
 
                 if (edgeStart != null || edgeEnd != null) {
-                    edge.addTimeSlice(edgeStart, edgeEnd);
+                    edge.addTimeInterval(edgeStart, edgeEnd);
                 }
             }
 

File: ToolsPlugin/src/org/gephi/ui/tools/plugin/edit/EditNode.java
Patch:
@@ -86,7 +86,7 @@ private Sheet.Set prepareNodeAttributes() {
                 AttributeValueWrapper wrap = new AttributeValueWrapper(row, value.getColumn().getIndex());
                 AttributeType type = value.getColumn().getType();
                 Property p;
-                if (ac.canChangeColumnData(true, value.getColumn())) {
+                if (ac.canChangeColumnData(value.getColumn())) {
                     //Editable column, provide "set" method:
                     if (!AttributeValueWrapper.notSupportedTypes.contains(type)) {//The AttributeType can be edited by default:
                         p = new PropertySupport.Reflection(wrap, type.getType(), "getValue" + type.getType().getSimpleName(), "setValue" + type.getType().getSimpleName());

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF2.java
Patch:
@@ -197,7 +197,7 @@ private void readNode(XMLStreamReader reader) throws Exception {
 
 
         //Dynamic
-        if (!slices && (startDate != null || endDate != null)) {
+        if (!slices && (!startDate.isEmpty() || !endDate.isEmpty())) {
             try {
                 node.addTimeInterval(startDate, endDate);
             } catch (IllegalArgumentException e) {
@@ -456,7 +456,7 @@ private void readEdge(XMLStreamReader reader) throws Exception {
         }
 
         //Dynamic
-        if (!slices && (startDate != null || endDate != null)) {
+        if (!slices && (!startDate.isEmpty() || !endDate.isEmpty())) {
             try {
                 edge.addTimeInterval(startDate, endDate);
             } catch (IllegalArgumentException e) {

File: DynamicAPI/src/org/gephi/dynamic/DynamicUtilities.java
Patch:
@@ -208,7 +208,7 @@ public static DynamicType createDynamicObject(AttributeType type, DynamicType so
 	 */
 	public static DynamicType createDynamicObject(AttributeType type, DynamicType source, List<Interval> in,
 			List<Interval> out) {
-		if (!AttributeType.isDynamicType(type))
+		if (!type.isDynamicType())
 			return null;
 
 		switch (type) {

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeRow.java
Patch:
@@ -1,6 +1,6 @@
 /*
 Copyright 2008 WebAtlas
-Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
+Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Cezary Bartosiak
 Website : http://www.gephi.org
 
 This file is part of Gephi.
@@ -48,6 +48,7 @@
  * <code>AttributesRow</code> to profit from the complete API.
  *
  * @author Mathieu Bastian
+ * @author Cezary Bartosiak
  * @see AttributeColumn
  * @see AttributeTable
  * @see AttributeValue

File: AttributesImpl/src/org/gephi/data/attributes/AttributeRowImpl.java
Patch:
@@ -1,6 +1,6 @@
 /*
 Copyright 2008 WebAtlas
-Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
+Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Cezary Bartosiak
 Website : http://www.gephi.org
 
 This file is part of Gephi.
@@ -28,6 +28,7 @@
 /**
  *
  * @author Mathieu Bastian
+ * @author Cezary Bartosiak
  */
 public class AttributeRowImpl implements AttributeRow {
 

File: LayoutPlugin/src/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java
Patch:
@@ -190,6 +190,7 @@ public void endAlgo() {
 
     public void goAlgo() {
         graph = graphModel.getHierarchicalGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         for (Node n : nodes) {
             if (n.getNodeData().getLayoutData() == null || !(n.getNodeData().getLayoutData() instanceof ForceVector)) {
@@ -252,6 +253,7 @@ public void goAlgo() {
 //        springEnergy = energy - electricEnergy;
 //        System.out.println("electric: " + electricEnergy + "    spring: " + springEnergy);
 //        System.out.println("energy0 = " + energy0 + "   energy = " + energy);
+        graph.readUnlock();
     }
 
 

File: LayoutPlugin/src/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -86,6 +86,7 @@ public void initAlgo() {
 
     public void goAlgo() {
         this.graph = graphModel.getHierarchicalGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         Edge[] edges = graph.getEdgesAndMetaEdges().toArray();
 
@@ -205,6 +206,7 @@ public void goAlgo() {
                 nData.setY(y);
             }
         }
+        graph.readUnlock();
     }
 
     public void endAlgo() {

File: LayoutPlugin/src/org/gephi/layout/plugin/fruchterman/FruchtermanReingold.java
Patch:
@@ -52,6 +52,7 @@ public void initAlgo() {
 
     public void goAlgo() {
         this.graph = graphModel.getHierarchicalGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         Edge[] edges = graph.getEdgesAndMetaEdges().toArray();
 
@@ -132,6 +133,7 @@ public void goAlgo() {
                 n.getNodeData().setY(n.getNodeData().y() + yDist / dist * limitedDist);
             }
         }
+        graph.readUnlock();
     }
 
     public void endAlgo() {

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -63,6 +63,7 @@ public void initAlgo() {
     public void goAlgo() {
         boolean somethingMoved = false;
         this.graph = graphModel.getGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
 
         //Reset Layout Data
@@ -237,6 +238,7 @@ public void goAlgo() {
         if (!somethingMoved) {
             setConverged(true);
         }
+        graph.readUnlock();
     }
 
     public void endAlgo() {

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/EigenvectorCenralityUI.java
Patch:
@@ -18,6 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
+
 package org.gephi.ui.statistics.plugin;
 
 import javax.swing.JPanel;
@@ -64,7 +65,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Eigenvector Centrality";
+        return "Eigenvector Centrality ";
     }
 
     public String getCategory() {
@@ -74,4 +75,5 @@ public String getCategory() {
     public int getPosition() {
         return 1000;
     }
+
 }

File: VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -125,7 +125,7 @@ public class VizConfig {
     public static final Color DEFAULT_NODE_SELECTED_UNIQUE_COLOR = new Color(0.8f, 0.2f, 0.2f);
     public static final Color DEFAULT_NODE_NEIGHBOR_SELECTED_UNIQUE_COLOR = new Color(0.2f, 1f, 0.3f);
     public static final int DEFAULT_OCTREE_DEPTH = 5;
-    public static final int DEFAULT_OCTREE_WIDTH = 10000;
+    public static final int DEFAULT_OCTREE_WIDTH = 50000;
     public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;
     public static final boolean DEFAULT_LABEL_MIPMAP = true;
     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeRow.java
Patch:
@@ -1,6 +1,6 @@
 /*
 Copyright 2008 WebAtlas
-Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
+Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Cezary Bartosiak
 Website : http://www.gephi.org
 
 This file is part of Gephi.
@@ -48,6 +48,7 @@
  * <code>AttributesRow</code> to profit from the complete API.
  *
  * @author Mathieu Bastian
+ * @author Cezary Bartosiak
  * @see AttributeColumn
  * @see AttributeTable
  * @see AttributeValue

File: AttributesImpl/src/org/gephi/data/attributes/AttributeRowImpl.java
Patch:
@@ -1,6 +1,6 @@
 /*
 Copyright 2008 WebAtlas
-Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke
+Authors : Mathieu Bastian, Mathieu Jacomy, Julian Bilcke, Cezary Bartosiak
 Website : http://www.gephi.org
 
 This file is part of Gephi.
@@ -28,6 +28,7 @@
 /**
  *
  * @author Mathieu Bastian
+ * @author Cezary Bartosiak
  */
 public class AttributeRowImpl implements AttributeRow {
 

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/EigenvectorCenralityUI.java
Patch:
@@ -18,6 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
+
 package org.gephi.ui.statistics.plugin;
 
 import javax.swing.JPanel;
@@ -64,7 +65,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Eigenvector Centrality";
+        return "Eigenvector Centrality ";
     }
 
     public String getCategory() {
@@ -74,4 +75,5 @@ public String getCategory() {
     public int getPosition() {
         return 1000;
     }
+
 }

File: LayoutPlugin/src/org/gephi/layout/plugin/force/yifanHu/YifanHuLayout.java
Patch:
@@ -190,6 +190,7 @@ public void endAlgo() {
 
     public void goAlgo() {
         graph = graphModel.getHierarchicalGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         for (Node n : nodes) {
             if (n.getNodeData().getLayoutData() == null || !(n.getNodeData().getLayoutData() instanceof ForceVector)) {
@@ -252,6 +253,7 @@ public void goAlgo() {
 //        springEnergy = energy - electricEnergy;
 //        System.out.println("electric: " + electricEnergy + "    spring: " + springEnergy);
 //        System.out.println("energy0 = " + energy0 + "   energy = " + energy);
+        graph.readUnlock();
     }
 
 

File: LayoutPlugin/src/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -86,6 +86,7 @@ public void initAlgo() {
 
     public void goAlgo() {
         this.graph = graphModel.getHierarchicalGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         Edge[] edges = graph.getEdgesAndMetaEdges().toArray();
 
@@ -205,6 +206,7 @@ public void goAlgo() {
                 nData.setY(y);
             }
         }
+        graph.readUnlock();
     }
 
     public void endAlgo() {

File: LayoutPlugin/src/org/gephi/layout/plugin/fruchterman/FruchtermanReingold.java
Patch:
@@ -52,6 +52,7 @@ public void initAlgo() {
 
     public void goAlgo() {
         this.graph = graphModel.getHierarchicalGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
         Edge[] edges = graph.getEdgesAndMetaEdges().toArray();
 
@@ -132,6 +133,7 @@ public void goAlgo() {
                 n.getNodeData().setY(n.getNodeData().y() + yDist / dist * limitedDist);
             }
         }
+        graph.readUnlock();
     }
 
     public void endAlgo() {

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -63,6 +63,7 @@ public void initAlgo() {
     public void goAlgo() {
         boolean somethingMoved = false;
         this.graph = graphModel.getGraphVisible();
+        graph.readLock();
         Node[] nodes = graph.getNodes().toArray();
 
         //Reset Layout Data
@@ -237,6 +238,7 @@ public void goAlgo() {
         if (!somethingMoved) {
             setConverged(true);
         }
+        graph.readUnlock();
     }
 
     public void endAlgo() {

File: DataTableUI/src/org/gephi/ui/datatable/DataTableTopComponent.java
Patch:
@@ -183,6 +183,9 @@ public void initialize(Workspace workspace) {
             }
 
             public void select(Workspace workspace) {
+                //Prepare DataTablesEvent listener
+                Lookup.getDefault().lookup(DataTablesController.class).setDataTablesEventListener(DataTableTopComponent.this);
+                
                 hideTable();
                 enableTableControls();
                 bannerPanel.setVisible(false);

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/SearchReplaceControllerImpl.java
Patch:
@@ -37,7 +37,9 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- *
+ * Implementation of the SearchReplaceController interface
+ * declared in the Data Laboratory API.
+ * @see SearchReplaceController
  * @author Eduardo Ramos <eduramiba@gmail.com>
  */
 @ServiceProvider(service = SearchReplaceController.class)

File: VisualizationModule/src/org/gephi/visualization/apiimpl/VizConfig.java
Patch:
@@ -125,7 +125,7 @@ public class VizConfig {
     public static final Color DEFAULT_NODE_SELECTED_UNIQUE_COLOR = new Color(0.8f, 0.2f, 0.2f);
     public static final Color DEFAULT_NODE_NEIGHBOR_SELECTED_UNIQUE_COLOR = new Color(0.2f, 1f, 0.3f);
     public static final int DEFAULT_OCTREE_DEPTH = 5;
-    public static final int DEFAULT_OCTREE_WIDTH = 10000;
+    public static final int DEFAULT_OCTREE_WIDTH = 50000;
     public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;
     public static final boolean DEFAULT_LABEL_MIPMAP = true;
     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;

File: Data Laboratory API/src/org/gephi/datalaboratory/api/SearchReplaceController.java
Patch:
@@ -60,7 +60,7 @@ public interface SearchReplaceController {
     /**
      * Replaces a SearchResult with the given replacement String.
      * Also tries to find next search result and returns it.
-     * Can throw IllegalArgumentException if the given SearchResult cannot be replaced, is null, or does not match the value.
+     * If the data has changed and the replacement can't be done it will just return next SearchResult.
      * @param result SearchResult to replace
      * @param replacement Replacement String
      * @return Next SearchResult or null if not successful

File: FiltersPlugin/src/org/gephi/filters/plugin/operator/INTERSECTIONBuilder.java
Patch:
@@ -68,7 +68,7 @@ public JPanel getPanel(Filter filter) {
         return null;
     }
 
-    private static class IntersectionOperator implements Operator {
+    public static class IntersectionOperator implements Operator {
 
         public int getInputCount() {
             return Integer.MAX_VALUE;

File: FiltersPlugin/src/org/gephi/filters/plugin/operator/UNIONBuilder.java
Patch:
@@ -68,7 +68,7 @@ public JPanel getPanel(Filter filter) {
         return null;
     }
 
-    private static class UnionOperator implements Operator {
+    public static class UnionOperator implements Operator {
 
         public int getInputCount() {
             return Integer.MAX_VALUE;

File: FiltersPlugin/src/org/gephi/filters/plugin/partition/PartitionBuilder.java
Patch:
@@ -148,7 +148,7 @@ public EdgePartitionFilter(Partition partition) {
         }
     }
 
-    public static class PartitionFilter implements Filter {
+    public static abstract class PartitionFilter implements Filter {
 
         private Partition partition;
         private FilterProperty[] filterProperties;

File: ToolsPlugin/src/org/gephi/ui/tools/plugin/HeatMapPanel.java
Patch:
@@ -36,8 +36,8 @@
 import javax.swing.JList;
 import javax.swing.ListCellRenderer;
 import org.gephi.ui.components.gradientslider.GradientSlider;
-import org.gephi.ui.utils.PaletteUtils;
-import org.gephi.ui.utils.PaletteUtils.Palette;
+import org.gephi.utils.PaletteUtils;
+import org.gephi.utils.PaletteUtils.Palette;
 
 /**
  *

File: RankingPluginUI/src/org/gephi/ui/ranking/plugin/ColorTransformerPanel.java
Patch:
@@ -40,9 +40,8 @@
 import org.gephi.ui.components.JRangeSlider;
 import org.gephi.ui.components.PaletteIcon;
 import org.gephi.ui.components.gradientslider.GradientSlider;
-import org.gephi.ui.utils.PaletteUtils;
-import org.gephi.ui.utils.PaletteUtils.Palette;
-import org.openide.util.Exceptions;
+import org.gephi.utils.PaletteUtils;
+import org.gephi.utils.PaletteUtils.Palette;
 import org.openide.util.NbBundle;
 import org.openide.util.NbPreferences;
 

File: StatisticsPlugin/src/org/gephi/statistics/plugin/InOutDegree.java
Patch:
@@ -97,7 +97,7 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
                 break;
             }
             i++;
-            mProgress.progress(i);
+            Progress.progress(mProgress, i);
         }
 
         mAvgDegree = mAvgInDegree + mAvgOutDegree;

File: ImportAPI/src/org/gephi/io/importer/api/Container.java
Patch:
@@ -75,6 +75,8 @@ public interface Container {
 
     public void setAllowParallelEdge(boolean value);
 
+    public void setUndirectedSumDirectedEdgesWeight(boolean value);
+
     /**
      * Set a report this container can use to report issues detected when loading the container. Report
      * are used to log info and issues during import process. Only one report can be associated to a

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImpl.java
Patch:
@@ -87,8 +87,7 @@ public boolean addEdge(Node source, Node target) {
     //Directed
     public boolean removeEdge(Edge edge) {
         AbstractEdge absEdge = checkEdge(edge);
-        AbstractEdge undirected = absEdge.getUndirected(view.getViewId());      //Ensure that the edge with the min id is removed before his mutual with a greater id
-        return view.getStructureModifier().deleteEdge(undirected);
+        return view.getStructureModifier().deleteEdge(absEdge);
     }
 
     //Directed

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestClusteredGraph.java
Patch:
@@ -247,7 +247,7 @@ public void testGroup() {
 
         AbstractNode group = (AbstractNode) graphGlobal.groupNodes(groupArray);
 
-        assertEquals(oldSize + 1, graphGlobal.getNodeCount());
+        assertEquals(oldSize + 1 - groupArray.length, graphGlobal.getNodeCount());
         assertEquals(groupArray.length, group.size);
         assertEquals(graphGlobal.getHeight(), 1);
 
@@ -286,7 +286,7 @@ public void testUnGroup() {
             assertEquals(1, pn.level);
             assertSame(treeStructure.getRoot(), pn.parent);
         }
-
+        treeStructure.showTreeAsTable();
         assertEquals(oldSize, graphGlobal.getNodeCount());
 
         try {

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/SearchReplaceControllerImpl.java
Patch:
@@ -194,7 +194,7 @@ private SearchResult matchRegex(Object value, SearchOptions searchOptions, int r
         if (found) {
             searchOptions.setStartingRow(rowIndex);//For next search
             searchOptions.setStartingColumn(columnIndex);//For next search
-            searchOptions.setRegionStart(matcher.end() + 1);//Start next search after this match in this value. (If it is greater than the length of the value, it will be discarded at the beginning of this method next time)
+            searchOptions.setRegionStart(matcher.end());//Start next search after this match in this value. (If it is greater than the length of the value, it will be discarded at the beginning of this method next time)
             return new SearchResult(searchOptions, null, null, rowIndex, columnIndex, matcher.start(), matcher.end());//Set node or edge values later
         } else {
             return null;

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/generalactions/SearchReplace.java
Patch:
@@ -50,7 +50,7 @@ public void execute() {
             ui.setMode(SearchReplaceUI.Mode.EDGES_TABLE);
         }
         DialogDescriptor dd=new DialogDescriptor(ui, getName());
-        dd.setModal(false);
+        dd.setModal(true);
         dd.setOptions(new Object[]{NbBundle.getMessage(SearchReplace.class, "SearchReplace.window.close")});
         DialogDisplayer.getDefault().notify(dd);
     }

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/attributecolumns/ColumnValuesFrequency.java
Patch:
@@ -39,8 +39,7 @@
 import org.openide.windows.WindowManager;
 
 /**
- * AttributeColumnsManipulator that duplicate a AttributeColumn of a AttributeTable setting the same values for the rows.
- * Allow the user to select the title and AttributeType of the new column in the UI
+ * AttributeColumnsManipulator that shows a report with a list of the different values of a column and their frequency of appearance.
  * @author Eduardo Ramos <eduramiba@gmail.com>
  */
 @ServiceProvider(service = AttributeColumnsManipulator.class)

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/attributecolumns/DuplicateColumn.java
Patch:
@@ -35,7 +35,7 @@
 
 /**
  * AttributeColumnsManipulator that duplicate a AttributeColumn of a AttributeTable setting the same values for the rows.
- * Allow the user to select the title and AttributeType of the new column in the UI
+ * Allows the user to select the title and AttributeType of the new column in the UI
  * @author Eduardo Ramos <eduramiba@gmail.com>
  */
 @ServiceProvider(service = AttributeColumnsManipulator.class)

File: DataTableUI/src/org/gephi/ui/datatable/DataTableTopComponent.java
Patch:
@@ -710,15 +710,15 @@ public void actionPerformed(ActionEvent e) {
      * It takes care to only refresh the UI once (the last one) when a lot of events come in a short period of time.
      */
     class RefreshOnceHelperThread extends Thread {
-
+        private static final int CHECK_TIME_INTERVAL=50;//50 ms.
         private boolean moreEvents = false;
 
         @Override
         public void run() {
             try {
                 do {
-                    Thread.sleep(100);
                     moreEvents = false;
+                    Thread.sleep(CHECK_TIME_INTERVAL);
                 } while (moreEvents);
                 DataTableTopComponent.this.refreshAll();
             } catch (InterruptedException ex) {

File: AttributesImpl/src/org/gephi/data/attributes/AttributeTableImpl.java
Patch:
@@ -203,6 +203,7 @@ protected class AttributeEventDispatchThread extends Thread {
 
         public AttributeEventDispatchThread() {
             super("AttributeEvent Dispatch Thread " + name);
+            setDaemon(true);
             this.eventQueue = new LinkedBlockingQueue<AttributeEvent>();
         }
 

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphStructure.java
Patch:
@@ -219,6 +219,7 @@ private static class ViewDestructorThread extends Thread {
 
         public ViewDestructorThread(GraphStructure graphStructure) {
             super("DHNS View Destructor");
+            setDaemon(true);
             structureReference = new WeakReference<GraphStructure>(graphStructure);
         }
 

File: DesktopContext/src/org/gephi/desktop/context/ContextPanel.java
Patch:
@@ -61,7 +61,9 @@ public void actionPerformed(ActionEvent e) {
         consumerThread = new ThreadPoolExecutor(0, 1, 60, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(5), new ThreadFactory() {
 
             public Thread newThread(Runnable r) {
-                return new Thread(r, "Context Panel consumer thread");
+                Thread t = new Thread(r, "Context Panel consumer thread");
+                t.setDaemon(true);
+                return t;
             }
         }, new ThreadPoolExecutor.DiscardOldestPolicy());
     }

File: FiltersImpl/src/org/gephi/filters/FilterThread.java
Patch:
@@ -36,6 +36,7 @@ public class FilterThread extends Thread {
 
     public FilterThread(FilterModelImpl model) {
         super("Filter Thread");
+        setDaemon(true);
         this.model = model;
         this.filtering = model.isFiltering();
         rootQuery = new AtomicReference<AbstractQueryImpl>();

File: VisualizationModule/src/org/gephi/visualization/scheduler/SimpleFPSAnimator.java
Patch:
@@ -40,6 +40,7 @@ public class SimpleFPSAnimator extends Thread {
 
     public SimpleFPSAnimator(Scheduler scheduler, GraphDrawableImpl drawble, float fps) {
         super("SimpleFPSAnimator");
+        setDaemon(true);
         this.drawable = drawble;
         this.scheduler = scheduler;
         this.animating = new AtomicBoolean();

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeType.java
Patch:
@@ -187,8 +187,6 @@ public Object parse(String str) {
      * @return      the compatible <code>AttributeType</code>, or <code>null</code>
      */
     public static AttributeType parse(Object obj) {
-        System.out.println("parse: " + obj.getClass());
-
         Class<?> type = obj.getClass();
 
         for (AttributeType attributeType : values()) {

File: AttributesImpl/src/org/gephi/data/attributes/AttributeValueImpl.java
Patch:
@@ -23,7 +23,7 @@
 import org.gephi.data.attributes.api.AttributeOrigin;
 import org.gephi.data.attributes.api.AttributeValue;
 import org.gephi.data.attributes.spi.AttributeValueDelegateProvider;
-import org.gephi.data.attributes.type.AbstractList;
+import org.gephi.data.attributes.type.ListFactory;
 
 /**
  *
@@ -63,7 +63,7 @@ else if (AttributeUtilsImpl.getDefault().isNodeColumn(column))
                 throw new AssertionError();
 
             if (result.getClass().isArray())
-                result = AbstractList.fromArray(result);
+                result = ListFactory.fromArray(result);
 
             return result;
         }

File: Desktop Neo4j/src/org/gephi/desktop/neo4j/ui/TraversalPanel.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author Martin Šlurla
+ * @author Martin Škurla
  */
 public class TraversalPanel extends javax.swing.JPanel {
     private final GraphDatabaseService graphDB;

File: Neo4j support/src/org/gephi/neo4j/impl/Neo4jImporterImpl.java
Patch:
@@ -111,6 +111,7 @@ private void importGraph() {
         createNewProject();
 
         graphModelConvertor = GraphModelConvertor.getInstance(graphDB);
+        graphModelConvertor.createNeo4jRelationshipTypeGephiColumn();
 
         if (traverser == null) {
             for (org.neo4j.graphdb.Node node : graphDB.getAllNodes()) {

File: Desktop Neo4j/src/org/gephi/desktop/neo4j/Neo4jImportExportAction.java
Patch:
@@ -60,6 +60,9 @@ public void actionPerformed(ActionEvent e) {
                 fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
 
                 int dialogResult = fileChooser.showOpenDialog(null);
+
+                Neo4jCustomDirectoryProvider.setEnabled(false);
+
                 if (dialogResult == JFileChooser.CANCEL_OPTION)
                     return;
 
@@ -91,8 +94,6 @@ public void run() {
                         });
                     }
                 }
-
-                Neo4jCustomDirectoryProvider.setEnabled(false);
             }
         });
 

File: Desktop Neo4j/src/org/gephi/desktop/neo4j/Neo4jImportExportAction.java
Patch:
@@ -85,7 +85,8 @@ public void run() {
                                 neo4jImporter.importDatabase(graphDB,
                                                              traversalPanel.getStartNodeId(),
                                                              traversalPanel.getOrder(),
-                                                             traversalPanel.getMaxDepth());
+                                                             traversalPanel.getMaxDepth(),
+                                                             traversalPanel.getRelationshipInfos());
                             }
                         });
                     }

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/attributecolumns/DuplicateColumn.java
Patch:
@@ -64,11 +64,11 @@ public AttributeColumnsManipulatorUI getUI() {
     }
 
     public int getType() {
-        return 100;
+        return 0;
     }
 
     public int getPosition() {
-        return 0;
+        return 200;
     }
 
     public Image getIcon() {

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/generalactions/AddNodeToGraph.java
Patch:
@@ -18,7 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.datalaboratory.impl.generalactions;
+package org.gephi.datalaboratory.impl.manipulators.generalactions;
 
 import javax.swing.Icon;
 import javax.swing.JOptionPane;

File: Data Laboratory API/src/org/gephi/datalaboratory/spi/Manipulator.java
Patch:
@@ -83,7 +83,7 @@ public interface Manipulator {
 
     /**
      * Returns a position value that indicates the position
-     * of this Manipulator in the context menu. Less means upper.
+     * of this Manipulator in its type group. Less means upper.
      * @return This Manipulator position
      */
     int getPosition();

File: MostRecentFilesAPI/src/org/gephi/desktop/mrufiles/impl/MostRecentFilesImpl.java
Patch:
@@ -15,6 +15,7 @@
 import org.openide.util.NbPreferences;
 import org.openide.util.lookup.ServiceProvider;
 
+
 /**
  *
  * @author Mathieu Bastian

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -175,7 +175,7 @@ public void stateChanged(ChangeEvent e) {
             }
 
             //Execute task
-            final String containerSource = "Stream " + importer;
+            final String containerSource = "Stream " + importerName;
             executor.execute(task, new Runnable() {
 
                 public void run() {
@@ -234,7 +234,7 @@ public void stateChanged(ChangeEvent e) {
             }
 
             //Execute task
-            final String containerSource = "Stream " + importer;
+            final String containerSource = "Stream " + importerName;
             executor.execute(task, new Runnable() {
 
                 public void run() {

File: ExportPluginUI/src/org/gephi/ui/exporter/plugin/UIExporterGDF.java
Patch:
@@ -36,7 +36,7 @@ public class UIExporterGDF implements ExporterUI {
 
     private UIExporterGDFPanel panel;
     private ExporterGDF exporterGDF;
-    private ExporterGDFSettings settings;
+    private ExporterGDFSettings settings = new ExporterGDFSettings();
 
     public void setup(Exporter exporter) {
         exporterGDF = (ExporterGDF) exporter;

File: ExportPluginUI/src/org/gephi/ui/exporter/plugin/UIExporterGEXF.java
Patch:
@@ -36,7 +36,7 @@ public class UIExporterGEXF implements ExporterUI {
 
     private UIExporterGEXFPanel panel;
     private ExporterGEXF exporterGEXF;
-    private ExporterGEXFSettings settings;
+    private ExporterGEXFSettings settings =  new ExporterGEXFSettings();
 
     public void setup(Exporter exporter) {
         exporterGEXF = (ExporterGEXF) exporter;

File: ExportPluginUI/src/org/gephi/ui/exporter/plugin/UIExporterGraphML.java
Patch:
@@ -20,7 +20,7 @@ public class UIExporterGraphML implements ExporterUI {
 
     private UIExporterGraphMLPanel panel;
     private ExporterGraphML exporterGraphML;
-    private ExporterGraphMLSettings settings;
+    private ExporterGraphMLSettings settings =  new ExporterGraphMLSettings();
 
     public void setup(Exporter exporter) {
         exporterGraphML = (ExporterGraphML) exporter;

File: AttributesImpl/src/org/gephi/data/attributes/AttributeColumnImpl.java
Patch:
@@ -28,6 +28,7 @@
 /**
  *
  * @author Mathieu Bastian
+ * @author Martin Škurla
  */
 public class AttributeColumnImpl implements AttributeColumn {
 
@@ -38,7 +39,7 @@ public class AttributeColumnImpl implements AttributeColumn {
     protected final AttributeType type;
     protected final AttributeOrigin origin;
     protected final AttributeValueImpl defaultValue;
-    protected final AttributeValueDelegateProvider attributeValueDelegateProvider;//TODO added
+    protected final AttributeValueDelegateProvider attributeValueDelegateProvider;
 
     public AttributeColumnImpl(AttributeTableImpl table, int index, String id, String title, AttributeType attributeType, AttributeOrigin origin, Object defaultValue, AttributeValueDelegateProvider attributeValueDelegateProvider) {
         this.table = table;

File: AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java
Patch:
@@ -21,8 +21,6 @@
 package org.gephi.data.attributes;
 
 import org.gephi.data.attributes.api.AttributeController;
-import org.gephi.data.attributes.api.AttributeRowFactory;
-import org.gephi.data.attributes.api.AttributeValueFactory;
 import org.gephi.data.attributes.api.AttributeModel;
 import org.gephi.data.attributes.model.IndexedAttributeModel;
 import org.gephi.data.attributes.model.TemporaryAttributeModel;

File: AttributesImpl/src/org/gephi/data/attributes/AttributeRowImpl.java
Patch:
@@ -28,7 +28,6 @@
 /**
  *
  * @author Mathieu Bastian
- * @author Martin Škurla
  */
 public class AttributeRowImpl implements AttributeRow {
 
@@ -80,6 +79,7 @@ public void setValue(String column, Object value) {
         } else {
             //add column
             AttributeType type = AttributeType.parse(value);
+            System.out.println("parsed value type: " + value.getClass());
             if (type != null) {
                 attributeColumn = attributeTable.addColumn(column, type);
                 setValue(attributeColumn, value);

File: Desktop Neo4j/src/org/gephi/desktop/neo4j/Neo4jImportExportAction.java
Patch:
@@ -125,7 +125,6 @@ public void run() {
         String remoteExportMessage = NbBundle.getMessage(Neo4jImportExportAction.class, "CTL_Neo4j_RemoteExportMenuLabel");
         JMenuItem remoteExport = new JMenuItem(new AbstractAction(remoteExportMessage) {
             public void actionPerformed(ActionEvent e) {
-                //TODO implement
             }
         });
         

File: AttributesAPI/src/org/gephi/data/properties/PropertiesColumn.java
Patch:
@@ -40,7 +40,6 @@ public enum PropertiesColumn {
     NODE_LABEL(1,  "label",   AttributeType.STRING, AttributeOrigin.PROPERTY, null),
     EDGE_ID   (0,  "id",      AttributeType.STRING, AttributeOrigin.PROPERTY, null),
     EDGE_LABEL(1,  "label",   AttributeType.STRING, AttributeOrigin.PROPERTY, null);
-//    NEO4J_ID  (-1, "neo4jId", AttributeType.LONG,   AttributeOrigin.DELEGATE, null);//TODO mozno zakomentovat
     
     private final int index;
     private final String id;

File: AttributesImpl/src/org/gephi/data/attributes/AttributeUtilsImpl.java
Patch:
@@ -78,7 +78,7 @@ private Comparable<?> getMaxValueAccordingToAttributeType(AttributeType attribut
     }
 
     @Override
-    @SuppressWarnings("rawtypes")
+    @SuppressWarnings({"rawtypes", "unchecked"})
     public Comparable getMin(AttributeColumn column, Comparable[] values) {
         if (!isNumberColumn(column)) {
             throw new IllegalArgumentException("Colun must be a number column");
@@ -134,7 +134,7 @@ public Comparable getMin(AttributeColumn column, Comparable[] values) {
     }
 
     @Override
-    @SuppressWarnings("rawtypes")
+    @SuppressWarnings({"rawtypes", "unchecked"})
     public Comparable getMax(AttributeColumn column, Comparable[] values) {
         if (!isNumberColumn(column)) {
             throw new IllegalArgumentException("Colun must be a number column");

File: Neo4j support/src/org/gephi/neo4j/impl/Neo4jExporterImpl.java
Patch:
@@ -91,7 +91,6 @@ private void exportGraph() {
         graphModelConvertor = GraphModelConvertor.getInstance(graphDB);
         GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
 
-        // the algorithm traverses through all edges
         for (Edge gephiEdge : graphModel.getGraph().getEdges()) {
             org.neo4j.graphdb.Node neoStartNode =
                     graphModelConvertor.createNeoNodeFromGephiNode(gephiEdge.getSource());

File: Data Laboratory API/src/org/gephi/datalaboratory/api/GraphElementsController.java
Patch:
@@ -181,6 +181,8 @@ public interface GraphElementsController {
      */
     boolean isNodeFixed(Node node);
 
+    Node[] getNodeNeighbours(Node node);
+
     /*****************
      * The next methods that check if nodes and edges are in the graph,
      * are necessary because the table in DataLaboratory is not refreshed

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/AttributesControllerImpl.java
Patch:
@@ -32,8 +32,10 @@
 import org.openide.util.lookup.ServiceProvider;
 
 /**
- *
+ * Implementation of the AttributesController interface
+ * declared in the Data Laboratory API.
  * @author Eduardo Ramos <eduramiba@gmail.com>
+ * @see AttributesController
  */
 @ServiceProvider(service = AttributesController.class)
 public class AttributesControllerImpl implements AttributesController {

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/edges/ClearEdgesData.java
Patch:
@@ -23,6 +23,7 @@
 import javax.swing.Icon;
 import javax.swing.JOptionPane;
 import org.gephi.datalaboratory.api.AttributesController;
+import org.gephi.datalaboratory.api.DataTablesController;
 import org.gephi.datalaboratory.api.GraphElementsController;
 import org.gephi.datalaboratory.spi.ManipulatorUI;
 import org.gephi.datalaboratory.spi.edges.EdgesManipulator;
@@ -47,6 +48,7 @@ public void execute() {
         if (JOptionPane.showConfirmDialog(null, NbBundle.getMessage(ClearEdgesData.class, "ClearEdgesData.confirmation.message"), getName(), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
             AttributesController ac = Lookup.getDefault().lookup(AttributesController.class);
             ac.clearEdgesData(edges);
+            Lookup.getDefault().lookup(DataTablesController.class).refreshCurrentTable();
         }
     }
 

File: Data Laboratory Impl/src/org/gephi/datalaboratory/impl/manipulators/nodes/ClearNodesData.java
Patch:
@@ -23,6 +23,7 @@
 import javax.swing.Icon;
 import javax.swing.JOptionPane;
 import org.gephi.datalaboratory.api.AttributesController;
+import org.gephi.datalaboratory.api.DataTablesController;
 import org.gephi.datalaboratory.api.GraphElementsController;
 import org.gephi.datalaboratory.spi.ManipulatorUI;
 import org.gephi.datalaboratory.spi.nodes.NodesManipulator;
@@ -47,6 +48,7 @@ public void execute() {
         if (JOptionPane.showConfirmDialog(null, NbBundle.getMessage(ClearNodesData.class, "ClearNodesData.confirmation.message"), getName(), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
             AttributesController ac = Lookup.getDefault().lookup(AttributesController.class);
             ac.clearNodesData(nodes);
+            Lookup.getDefault().lookup(DataTablesController.class).refreshCurrentTable();
         }
     }
 

File: Utils/src/org/gephi/utils/CharsetToolkit.java
Patch:
@@ -383,7 +383,7 @@ public boolean hasUTF16BEBom() {
      * @return a <code>BufferedReader</code>
      * @throws FileNotFoundException if the file is not found.
      */
-    public BufferedReader getReader() throws FileNotFoundException {
+    public BufferedReader getReader() {
         LineNumberReader reader = new LineNumberReader(new InputStreamReader(input, getCharset()));
         if (hasUTF8Bom() || hasUTF16LEBom() || hasUTF16BEBom()) {
             try {

File: Data Laboratory API/src/org/gephi/datalaboratory/spi/Manipulator.java
Patch:
@@ -55,7 +55,6 @@ public interface Manipulator {
 
     /**
      * Description of the Manipulator.
-     * TODO: Maybe show as tooltip?
      * @return Description
      */
     String getDescription();

File: UIComponents/src/org/gephi/ui/components/gradientslider/MultiThumbSliderUI.java
Patch:
@@ -352,6 +352,9 @@ private int getIndex(MouseEvent e) {
                 return -1;
             }
         }
+        if(thumbPositions.length==0) {
+            return -1;
+        }
         int min = Math.abs(v - thumbPositions[0]);
         int minIndex = 0;
         for (int a = 1; a < thumbPositions.length; a++) {

File: DesktopProject/src/org/gephi/desktop/project/ProjectControllerUIImpl.java
Patch:
@@ -100,7 +100,7 @@ public void run() {
                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, "ProjectControllerUI.status.saved", fileName));
             }
         };
-        if (saveRunnable instanceof LongTask) {
+        if (saveTask instanceof LongTask) {
             longTaskExecutor.execute((LongTask) saveTask, saveRunnable);
         } else {
             longTaskExecutor.execute(null, saveRunnable);
@@ -291,7 +291,7 @@ public void run() {
                 StatusDisplayer.getDefault().setStatusText(NbBundle.getMessage(ProjectControllerUIImpl.class, "ProjectControllerUI.status.opened", fileName));
             }
         };
-        if (loadRunnable instanceof LongTask) {
+        if (loadTask instanceof LongTask) {
             longTaskExecutor.execute((LongTask) loadTask, loadRunnable);
         } else {
             longTaskExecutor.execute(null, loadRunnable);

File: DesktopBranding/src/org/gephi/branding/desktop/DragNDropFrameAdapter.java
Patch:
@@ -70,6 +70,9 @@ public boolean importData(TransferHandler.TransferSupport support) {
                     List data = (List) support.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                     File file = (File) data.get(0);
                     FileObject fileObject = FileUtil.toFileObject(file);
+                    if(!file.exists()) {
+                        return false;
+                    }
                     if (fileObject.hasExt(GEPHI_EXTENSION)) {
 
                         ProjectControllerUI pc = Lookup.getDefault().lookup(ProjectControllerUI.class);

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeAndMetaEdgeIterator.java
Patch:
@@ -77,7 +77,7 @@ public boolean hasNext() {
 
             pointer = edgeIterator.next();
             if (!metaEdge) {
-                if (!nodePredicate.evaluate(pointer.getTarget())) {
+                if (!nodePredicate.evaluate(pointer.getTarget(currentNode.getViewId()))) {
                     pointer = null;
                 }
             }

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeIterator.java
Patch:
@@ -69,7 +69,7 @@ public boolean hasNext() {
             }
 
             pointer = edgeIterator.next();
-            if (!nodePredicate.evaluate(pointer.getTarget())) {
+            if (!nodePredicate.evaluate(pointer.getTarget(currentNode.getViewId()))) {
                 pointer = null;
             }
         }

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeNodeIterator.java
Patch:
@@ -79,7 +79,7 @@ public boolean hasNext() {
             } else {
                 if (edgeIterator.hasNext()) {
                     pointer = edgeIterator.next();
-                    if (!nodePredicate.evaluate(mode.equals(EdgeNodeIteratorMode.IN) ? pointer.getSource() : pointer.getTarget())) {
+                    if (!nodePredicate.evaluate(mode.equals(EdgeNodeIteratorMode.IN) ? pointer.getSource(viewId) : pointer.getTarget(viewId))) {
                         pointer = null;
                     }
                 } else {

File: PartitionAPI/src/org/gephi/partition/impl/PartitionControllerImpl.java
Patch:
@@ -118,7 +118,7 @@ private void trachViewChange(final GraphModel graphModel) {
         graphListener = new GraphListener() {
 
             public void graphChanged(GraphEvent event) {
-                if (event.getEventType().equals(GraphEvent.EventType.VIEWS_UPDATED)) {
+                if (event.is(GraphEvent.EventType.VISIBLE_VIEW)) {
                     if (model.getVisibleViewId() != graphModel.getVisibleView().getViewId()) {
                         //View has been updated
                         model.setVisibleViewId(graphModel.getVisibleView().getViewId());

File: DataTableUI/src/org/gephi/ui/datatable/EdgeDataTable.java
Patch:
@@ -334,6 +334,7 @@ private JPopupMenu createPopup(Point p) {
         private JMenuItem createMenuItemFromEdgesManipulator(final EdgesManipulator em) {
             JMenuItem menuItem = new JMenuItem();
             menuItem.setText(em.getName());
+            menuItem.setIcon(em.getIcon());
             menuItem.addActionListener(new ActionListener() {
 
                 public void actionPerformed(ActionEvent e) {

File: DataTableUI/src/org/gephi/ui/datatable/NodeDataTable.java
Patch:
@@ -279,7 +279,6 @@ public java.awt.Color getForeground(Object o) {
         @Override
         public javax.swing.Icon getIcon(Object o) {
             return null;
-
         }
 
         @Override
@@ -365,6 +364,7 @@ private JPopupMenu createPopup(Point p) {
         private JMenuItem createMenuItemFromNodesManipulator(final NodesManipulator nm) {
             JMenuItem menuItem = new JMenuItem();
             menuItem.setText(nm.getName());
+            menuItem.setIcon(nm.getIcon());
             menuItem.addActionListener(new ActionListener() {
 
                 public void actionPerformed(ActionEvent e) {

File: Data Laboratory API/src/org/gephi/datalaboratory/api/DataLaboratoryHelper.java
Patch:
@@ -32,13 +32,15 @@ public interface DataLaboratoryHelper {
     /**
      * Prepares an array with one new instance of every NodesManipulator
      * that has a builder registered and returns it.
+     * It also must ensure to return the manipulators ordered first by type and then by position
      * @return Array of all NodesManipulator implementations
      */
     NodesManipulator[] getNodesManipulators();
 
     /**
      * Prepares an array with one new instance of every EdgesManipulator
      * that has a builder registered and returns it.
+     * It also must ensure to return the manipulators ordered first by type and then by position
      * @return Array of all EdgesManipulator implementations
      */
     EdgesManipulator[] getEdgesManipulators();

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewSettingsTopComponent.java
Patch:
@@ -10,7 +10,6 @@
 import java.util.logging.Logger;
 import javax.swing.DefaultComboBoxModel;
 import javax.swing.UIManager;
-import javax.swing.border.Border;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
 import org.gephi.desktop.io.export.api.VectorialFileExporterUI;
@@ -58,7 +57,7 @@ private PreviewSettingsTopComponent() {
         // checks the state of the workspace
         ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
         if (pc.getCurrentWorkspace() != null) {
-            refreshButton.setEnabled(true);
+            enableRefreshButton();
         }
 
         // forces the controller instanciation

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeTable.java
Patch:
@@ -25,9 +25,8 @@
  * appened with different level of details. The table maintains a map with
  * column identifier and title (header) in order they can be retrieved efficiently.
  * <p>
- * Tracking added or removed columlns can be performed by creating a
- * <code>LookupListener</code> on this table lookup, with <code>AttributeColumn</code>
- * as lookup result. See {@link #getLookup()}.
+ * Tracking added or removed columns can be performed by adding an
+ * {@link AttributeListener} to this table.
  *
  * @author Mathieu Bastian
  * @see AttributeColumn

File: ExportAPI/src/org/gephi/io/exporter/api/FileType.java
Patch:
@@ -21,14 +21,11 @@
 
 package org.gephi.io.exporter.api;
 
-import org.gephi.io.exporter.spi.CharacterExporter;
-
 /**
  * File type definition. A simple class which contains a <b>name</b> and 
  * <b>extension</b> for a file type.
  *
  * @author Mathieu Bastian
- * @see CharactersExporter
  */
 public final class FileType
 {

File: ImportAPI/src/org/gephi/io/importer/api/FileType.java
Patch:
@@ -24,7 +24,6 @@
  * File type definition. A simple class which contains a <b>name</b> and <b>extension</b> for a file type/
  *
  * @author Mathieu Bastian
- * @see FileFormatImporter
  */
 public final class FileType {
 

File: ImportAPI/src/org/gephi/io/importer/spi/FileImporter.java
Patch:
@@ -31,7 +31,7 @@ public interface FileImporter extends Importer {
 
     /**
      * Sets the reader where characters can be retrieved.
-     * @param stream    the reader on data
+     * @param reader    the reader on data
      */
     public void setReader(Reader reader);
 }

File: ImportAPI/src/org/gephi/io/processor/spi/Processor.java
Patch:
@@ -50,7 +50,7 @@ public interface Processor {
 
     /**
      * Returns the processor name.
-     * @return
+     * @return the processor display name
      */
     public String getDisplayName();
 }

File: DHNSGraph/src/org/gephi/graph/dhns/core/DuplicateManager.java
Patch:
@@ -46,7 +46,7 @@ public void duplicate(Dhns destination, GraphViewImpl view) {
             nodeCopy.setEnabledMutualDegree(node.getEnabledMutualDegree());
             AbstractNode parentCopy = node.parent != null ? newStructure.getNodeAt(node.parent.getPre()) : null;
             newStructure.insertAsChild(nodeCopy, parentCopy);
-            newGraphStructure.getNodeDictionnary().add(nodeCopy);
+            newGraphStructure.addToDictionnary(nodeCopy);
         }
 
         //Edges
@@ -60,7 +60,7 @@ public void duplicate(Dhns destination, GraphViewImpl view) {
                     AbstractNode sourceCopy = newStructure.getNodeAt(edge.getSource(view.getViewId()).getPre());
                     AbstractNode targetCopy = newStructure.getNodeAt(edge.getTarget(view.getViewId()).getPre());
                     if (edge.isMixed()) {
-                        edgeCopy = factory.newEdge(sourceCopy, targetCopy, edge.getWeight(), edge.isDirected());
+                        edgeCopy = factory.newEdge(edge.getEdgeData().getId(), sourceCopy, targetCopy, edge.getWeight(), edge.isDirected());
                         if (edge.isDirected()) {
                             destination.touchDirected();
                         } else {
@@ -74,7 +74,7 @@ public void duplicate(Dhns destination, GraphViewImpl view) {
                     duplicateEdgeData(edge.getEdgeData(), edgeCopy.getEdgeData());
                     sourceCopy.getEdgesOutTree().add(edgeCopy);
                     targetCopy.getEdgesInTree().add(edgeCopy);
-                    newGraphStructure.getEdgeDictionnary().add(edgeCopy);
+                    newGraphStructure.addToDictionnary(edgeCopy);
                 }
             }
         }

File: DHNSGraph/src/org/gephi/graph/dhns/core/EdgeProcessor.java
Patch:
@@ -77,7 +77,7 @@ public void clearEdges(AbstractNode node) {
                 }
 
                 source.getEdgesOutTree().remove(edge);
-                dhns.getGraphStructure().getEdgeDictionnary().remove(edge);
+                dhns.getGraphStructure().removeFromDictionnary(edge);
             }
             node.getEdgesInTree().clear();
         }
@@ -99,7 +99,7 @@ public void clearEdges(AbstractNode node) {
                 }
 
                 edge.getTarget(viewId).getEdgesInTree().remove(edge);
-                dhns.getGraphStructure().getEdgeDictionnary().remove(edge);
+                dhns.getGraphStructure().removeFromDictionnary(edge);
             }
             node.getEdgesOutTree().clear();
         }
@@ -187,7 +187,7 @@ public void clearAllEdges() {
         view.setEdgesCountEnabled(0);
         view.setMutualEdgesEnabled(0);
         view.setMutualEdgesTotal(0);
-        dhns.getGraphStructure().getEdgeDictionnary().clear();
+        dhns.getGraphStructure().clearEdgeDictionnary();
     }
 
     public void clearAllMetaEdges() {

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphViewImpl.java
Patch:
@@ -150,7 +150,7 @@ public void setNodesEnabled(int nodesEnabled) {
         this.nodesEnabled = nodesEnabled;
     }
 
-    public GraphModel getGraphModel() {
+    public Dhns getGraphModel() {
         return dhns;
     }
 }

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalMixedGraphImpl.java
Patch:
@@ -98,7 +98,7 @@ public boolean addEdge(Node source, Node target, boolean directed) {
             return false;
         }
 
-        AbstractEdge edge = dhns.factory().newEdge(source, target, 1.0f, directed);
+        AbstractEdge edge = dhns.factory().newEdge(null, source, target, 1.0f, directed);
         view.getStructureModifier().addEdge(edge);
         if (directed) {
             dhns.touchDirected();

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImpl.java
Patch:
@@ -76,7 +76,7 @@ public boolean addEdge(Node node1, Node node2) {
             //Edge already exist
             return false;
         }
-        AbstractEdge edge = dhns.factory().newEdge(absNode1, absNode2, 1.0f, false);
+        AbstractEdge edge = dhns.factory().newEdge(null, absNode1, absNode2, 1.0f, false);
         view.getStructureModifier().addEdge(edge);
         dhns.touchUndirected();
         return true;

File: DHNSGraph/src/org/gephi/graph/dhns/utils/DHNSSerializer.java
Patch:
@@ -193,7 +193,7 @@ public void readEdges(Element edgesE, GraphStructure graphStructure, GraphFactor
                 edge.getEdgeData().setTextData(factory.newTextData());
                 source.getEdgesOutTree().add(edge);
                 target.getEdgesInTree().add(edge);
-                graphStructure.getEdgeDictionnary().add(edge);
+                graphStructure.addToDictionnary(edge);
             }
         }
         graphStructure.getMainView().getStructureModifier().getEdgeProcessor().computeMetaEdges();
@@ -260,7 +260,7 @@ public void readTreeStructure(Element treeStructureE, GraphStructure graphStruct
                     absNode.getNodeData().setAttributes(factory.newNodeAttributes());
                     absNode.getNodeData().setTextData(factory.newTextData());
                     treeStructure.insertAsChild(absNode, parentNode);
-                    graphStructure.getNodeDictionnary().add(absNode);
+                    graphStructure.addToDictionnary(absNode);
                 }
             }
         }
@@ -335,7 +335,7 @@ public void readGraphView(Element graphViewE, GraphStructure graphStructure) {
                     treeStructure.insertAsChild(node, parentNode);
                 } else if (((Element) nodesE.item(i)).getTagName().equals(ELEMENT_VIEW_EDGE)) {
                     Element edgeViewE = (Element) nodesE.item(i);
-                    AbstractEdge edge = graphStructure.getEdgeDictionnary().get(Integer.parseInt(edgeViewE.getAttribute("id")));
+                    AbstractEdge edge = graphStructure.getEdgeFromDictionnary(Integer.parseInt(edgeViewE.getAttribute("id")));
                     AbstractNode source = treeStructure.getNodeAt(Integer.parseInt(edgeViewE.getAttribute("source")));
                     AbstractNode target = treeStructure.getNodeAt(Integer.parseInt(edgeViewE.getAttribute("target")));
                     source.getEdgesOutTree().add(edge);

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/AppendProcessor.java
Patch:
@@ -132,13 +132,13 @@ public void process(ContainerUnloader container, Workspace workspace) {
             Edge e = null;
             switch (container.getEdgeDefault()) {
                 case DIRECTED:
-                    e = factory.newEdge(source, target, edge.getWeight(), true);
+                    e = factory.newEdge(edge.getId(), source, target, edge.getWeight(), true);
                     break;
                 case UNDIRECTED:
-                    e = factory.newEdge(source, target, edge.getWeight(), false);
+                    e = factory.newEdge(edge.getId(), source, target, edge.getWeight(), false);
                     break;
                 case MIXED:
-                    e = factory.newEdge(source, target, edge.getWeight(), edge.getType().equals(EdgeType.UNDIRECTED) ? false : true);
+                    e = factory.newEdge(edge.getId(), source, target, edge.getWeight(), edge.getType().equals(EdgeType.UNDIRECTED) ? false : true);
                     break;
             }
 

File: DesktopProject/src/org/gephi/desktop/importer/api/ImportControllerUI.java
Patch:
@@ -9,7 +9,7 @@
 import org.gephi.io.importer.api.Database;
 import org.gephi.io.importer.api.ImportController;
 import org.gephi.io.importer.spi.DatabaseImporter;
-import org.gephi.io.importer.spi.FileImporter;
+import org.gephi.io.importer.spi.SpigotImporter;
 import org.openide.filesystems.FileObject;
 
 /**
@@ -28,5 +28,7 @@ public interface ImportControllerUI {
 
     public void importDatabase(DatabaseImporter importer);
 
+    public void importSpigot(SpigotImporter importer);
+
     public ImportController getImportController();
 }

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -100,6 +100,9 @@ public void refreshModel(StatisticsModel model) {
             busyLabel.setBusy(true);
             reportButton.setEnabled(false);
             resultLabel.setText("");
+            if (currentStatistics == null) {
+                currentStatistics = currentModel.getStatistics(statisticsUI);
+            }
         } else {
             runButton.setText(RUN);
             busyLabel.setBusy(false);

File: ImportAPI/src/org/gephi/io/importer/api/ImportController.java
Patch:
@@ -28,6 +28,7 @@
 import org.gephi.io.importer.spi.FileImporter;
 import org.gephi.io.importer.spi.Importer;
 import org.gephi.io.importer.spi.ImporterUI;
+import org.gephi.io.importer.spi.SpigotImporter;
 import org.gephi.io.processor.spi.Processor;
 import org.gephi.project.api.Workspace;
 
@@ -48,6 +49,8 @@ public interface ImportController {
 
     public Container importFile(InputStream stream, FileImporter importer);
 
+    public Container importSpigot(SpigotImporter importer);
+
     public FileImporter getFileImporter(File file);
 
     public FileImporter getFileImporter(String importerName);

File: StatisticsAPI/src/org/gephi/statistics/StatisticsControllerImpl.java
Patch:
@@ -98,6 +98,8 @@ public void execute(final Statistics pStatistics, LongTaskListener listener) {
         final AttributeModel attributeModel = Lookup.getDefault().lookup(AttributeController.class).getModel();
         StatisticsBuilder builder = getBuilder(pStatistics.getClass());
         final StatisticsUI[] uis = getUI(pStatistics);
+
+        model.addStatistics(pStatistics);
         for (StatisticsUI s : uis) {
             s.setup(pStatistics);
             model.setRunning(s, true);
@@ -116,7 +118,6 @@ public void run() {
                     for (StatisticsUI s : uis) {
                         model.setRunning(s, false);
                     }
-                    model.addStatistics(pStatistics);
                 }
             }, builder.getName(), null);
         } else {
@@ -127,7 +128,6 @@ public void run() {
             for (StatisticsUI s : uis) {
                 model.setRunning(s, false);
             }
-            model.addStatistics(pStatistics);
         }
     }
 

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -100,6 +100,9 @@ public void refreshModel(StatisticsModel model) {
             busyLabel.setBusy(true);
             reportButton.setEnabled(false);
             resultLabel.setText("");
+            if (currentStatistics == null) {
+                currentStatistics = currentModel.getStatistics(statisticsUI);
+            }
         } else {
             runButton.setText(RUN);
             busyLabel.setBusy(false);

File: StatisticsAPI/src/org/gephi/statistics/StatisticsControllerImpl.java
Patch:
@@ -98,6 +98,8 @@ public void execute(final Statistics pStatistics, LongTaskListener listener) {
         final AttributeModel attributeModel = Lookup.getDefault().lookup(AttributeController.class).getModel();
         StatisticsBuilder builder = getBuilder(pStatistics.getClass());
         final StatisticsUI[] uis = getUI(pStatistics);
+
+        model.addStatistics(pStatistics);
         for (StatisticsUI s : uis) {
             s.setup(pStatistics);
             model.setRunning(s, true);
@@ -116,7 +118,6 @@ public void run() {
                     for (StatisticsUI s : uis) {
                         model.setRunning(s, false);
                     }
-                    model.addStatistics(pStatistics);
                 }
             }, builder.getName(), null);
         } else {
@@ -127,7 +128,6 @@ public void run() {
             for (StatisticsUI s : uis) {
                 model.setRunning(s, false);
             }
-            model.addStatistics(pStatistics);
         }
     }
 

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -327,7 +327,7 @@ public void importSpigot(final SpigotImporter importer) {
             ImporterUI ui = controller.getUI(importer);
             if (ui != null) {
                 ui.setup(importer);
-                String title = NbBundle.getMessage(DesktopImportControllerUI.class, "DesktopImportControllerUI.spigot.ui.dialog.title");
+                String title = NbBundle.getMessage(DesktopImportControllerUI.class, "DesktopImportControllerUI.spigot.ui.dialog.title", ui.getDisplayName());
                 JPanel panel = ui.getPanel();
                 final DialogDescriptor dd = new DialogDescriptor(panel, title);
                 if (panel instanceof ValidationPanel) {

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -100,6 +100,9 @@ public void refreshModel(StatisticsModel model) {
             busyLabel.setBusy(true);
             reportButton.setEnabled(false);
             resultLabel.setText("");
+            if (currentStatistics == null) {
+                currentStatistics = currentModel.getStatistics(statisticsUI);
+            }
         } else {
             runButton.setText(RUN);
             busyLabel.setBusy(false);

File: StatisticsAPI/src/org/gephi/statistics/StatisticsControllerImpl.java
Patch:
@@ -98,6 +98,8 @@ public void execute(final Statistics pStatistics, LongTaskListener listener) {
         final AttributeModel attributeModel = Lookup.getDefault().lookup(AttributeController.class).getModel();
         StatisticsBuilder builder = getBuilder(pStatistics.getClass());
         final StatisticsUI[] uis = getUI(pStatistics);
+
+        model.addStatistics(pStatistics);
         for (StatisticsUI s : uis) {
             s.setup(pStatistics);
             model.setRunning(s, true);
@@ -116,7 +118,6 @@ public void run() {
                     for (StatisticsUI s : uis) {
                         model.setRunning(s, false);
                     }
-                    model.addStatistics(pStatistics);
                 }
             }, builder.getName(), null);
         } else {
@@ -127,7 +128,6 @@ public void run() {
             for (StatisticsUI s : uis) {
                 model.setRunning(s, false);
             }
-            model.addStatistics(pStatistics);
         }
     }
 

File: StatisticsPlugin/src/org/gephi/statistics/plugin/ConnectedComponents.java
Patch:
@@ -248,7 +248,7 @@ public boolean isDirected() {
      * @return
      */
     public String getReport() {
-        String report = new String("<HTML> <BODY> <h1>Graph Distance  Report </h1> "
+        String report = new String("<HTML> <BODY> <h1>Connected Components Report </h1> "
                 + "<hr> <br> <h2>Network Revision Number:</h2>"
                 + mGraphRevision
                 + "<br>"

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/EigenvectorCenralityUI.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.ui.statistics.plugin;
 
 import javax.swing.JPanel;
@@ -65,7 +64,7 @@ public String getValue() {
     }
 
     public String getDisplayName() {
-        return "Eigenvector Centrality ";
+        return "Eigenvector Centrality";
     }
 
     public String getCategory() {
@@ -75,5 +74,4 @@ public String getCategory() {
     public int getPosition() {
         return 1000;
     }
-
 }

File: DHNSGraph/src/org/gephi/graph/dhns/utils/DataSerializer.java
Patch:
@@ -107,7 +107,7 @@ public Element writeNodeData(Document document, NodeDataImpl nodeData) {
 
         nodeDataE.setAttribute("nodepre", String.valueOf(node.getPre()));
 
-        if (!nodeData.getId().equals("" + node.getId())) {
+        if (nodeData.getId() != null && !nodeData.getId().equals("" + node.getId())) {
             nodeDataE.setAttribute("id", nodeData.getId());
         }
 
@@ -163,7 +163,7 @@ public Element writeEdgeData(Document document, EdgeDataImpl edgeData) {
         edgeDataE.setAttribute("sourcepre", String.valueOf(edge.getSource().getPre()));
         edgeDataE.setAttribute("targetpre", String.valueOf(edge.getTarget().getPre()));
 
-        if (!edgeData.getId().equals("" + edge.getId())) {
+        if (edgeData.getId() != null && !edgeData.getId().equals("" + edge.getId())) {
             edgeDataE.setAttribute("id", edgeData.getId());
         }
 

File: LayoutAPI/src/org/gephi/layout/LayoutModelImpl.java
Patch:
@@ -94,6 +94,7 @@ public Layout getLayout(LayoutBuilder layoutBuilder) {
     protected void setSelectedLayout(Layout selectedLayout) {
         Layout oldValue = this.selectedLayout;
         this.selectedLayout = selectedLayout;
+        this.selectedBuilder = selectedLayout.getBuilder();
         if (oldValue != null) {
             saveProperties(oldValue);
         }

File: LayoutAPI/src/org/gephi/layout/LayoutModelImpl.java
Patch:
@@ -94,6 +94,7 @@ public Layout getLayout(LayoutBuilder layoutBuilder) {
     protected void setSelectedLayout(Layout selectedLayout) {
         Layout oldValue = this.selectedLayout;
         this.selectedLayout = selectedLayout;
+        this.selectedBuilder = selectedLayout.getBuilder();
         if (oldValue != null) {
             saveProperties(oldValue);
         }

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -171,7 +171,9 @@ public void stateChanged(ChangeEvent e) {
                         }
                     });
                 }
-                if (DialogDisplayer.getDefault().notify(dd).equals(NotifyDescriptor.CANCEL_OPTION)) {
+
+                Object result = DialogDisplayer.getDefault().notify(dd);
+                if (result.equals(NotifyDescriptor.CANCEL_OPTION) || result.equals(NotifyDescriptor.CLOSED_OPTION)) {
                     return;
                 }
                 ui.unsetup();

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Hits.java
Patch:
@@ -224,7 +224,7 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         AttributeColumn authorityCol = nodeTable.getColumn("authority");
         AttributeColumn hubsCol = nodeTable.getColumn("hub");
         if (authorityCol == null) {
-            authorityCol = nodeTable.addColumn("authority", "Authortiy", AttributeType.FLOAT, AttributeOrigin.COMPUTED, new Float(0));
+            authorityCol = nodeTable.addColumn("authority", "Authority", AttributeType.FLOAT, AttributeOrigin.COMPUTED, new Float(0));
         }
         if (hubsCol == null) {
             hubsCol = nodeTable.addColumn("hub", "Hub", AttributeType.FLOAT, AttributeOrigin.COMPUTED, new Float(0));
@@ -265,7 +265,7 @@ public String getReport() {
 
             JFreeChart chart = ChartFactory.createXYLineChart(
                     "Hubs",
-                    "Node",
+                    "Nodes",
                     "hubs",
                     dataset,
                     PlotOrientation.VERTICAL,
@@ -299,7 +299,7 @@ public String getReport() {
 
             JFreeChart chart2 = ChartFactory.createXYLineChart(
                     "Authority",
-                    "Node",
+                    "Nodes",
                     "Authority",
                     dataset2,
                     PlotOrientation.VERTICAL,

File: StatisticsPlugin/src/org/gephi/statistics/plugin/Modularity.java
Patch:
@@ -599,7 +599,8 @@ public String getReport() {
                 + "<h2> Parameters: </h2>"
                 + "Randomize:  " + (this.mRandomize ? "On" : "Off") + "<br>"
                 + "<br> <h2> Results: </h2>"
-                + "Modularity: " + mModularity
+                + "Modularity: " + mModularity + "<br>"
+                + "Number of Communities: " + mStructure.mCommunities.size()
                 + "</BODY></HTML>");
 
         return report;

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/ClusteringCoefficientUI.java
Patch:
@@ -46,14 +46,14 @@ public void setup(Statistics statistics) {
         this.clusteringCoefficient = (ClusteringCoefficient) statistics;
         if (panel != null) {
             panel.setDirected(clusteringCoefficient.isDirected());
-            panel.setBruteForce(clusteringCoefficient.isBruteForce());
+           // panel.setBruteForce(clusteringCoefficient.isBruteForce());
         }
     }
 
     public void unsetup() {
         //Set params
         clusteringCoefficient.setDirected(panel.isDirected());
-        clusteringCoefficient.setBruteForce(panel.isBruteForce());
+        //clusteringCoefficient.setBruteForce(panel.isBruteForce());
         panel = null;
     }
 

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/DiameterUI.java
Patch:
@@ -42,12 +42,14 @@ public void setup(Statistics statistics) {
         this.graphDistance = (GraphDistance) statistics;
         if (panel != null) {
             panel.setDirected(graphDistance.isDirected());
+            panel.doNormalize(graphDistance.useRelative());
         }
     }
 
     public void unsetup() {
         //Set params
         graphDistance.setDirected(panel.isDirected());
+        graphDistance.setRelative(panel.normalize());
         panel = null;
     }
 

File: StatisticsPluginUI/src/org/gephi/ui/statistics/plugin/PathLengthUI.java
Patch:
@@ -42,12 +42,14 @@ public void setup(Statistics statistics) {
         this.graphDistance = (GraphDistance) statistics;
         if (panel != null) {
             panel.setDirected(graphDistance.isDirected());
+            panel.doNormalize(graphDistance.useRelative());
         }
     }
 
     public void unsetup() {
         //Set params
         graphDistance.setDirected(panel.isDirected());
+        graphDistance.setRelative(panel.normalize());
         panel = null;
     }
 

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -171,7 +171,9 @@ public void stateChanged(ChangeEvent e) {
                         }
                     });
                 }
-                if (DialogDisplayer.getDefault().notify(dd).equals(NotifyDescriptor.CANCEL_OPTION)) {
+
+                Object result = DialogDisplayer.getDefault().notify(dd);
+                if (result.equals(NotifyDescriptor.CANCEL_OPTION) || result.equals(NotifyDescriptor.CLOSED_OPTION)) {
                     return;
                 }
                 ui.unsetup();

File: AttributesAPI/src/org/gephi/data/attributes/type/BigDecimalList.java
Patch:
@@ -23,6 +23,8 @@
 import java.math.BigDecimal;
 
 /**
+ * Complex type that define a list of BigDecimal items. Can be created from a BigDecimal
+ * array or from single string using either given or default separators.
  * 
  * @author Martin Škurla
  */

File: AttributesAPI/src/org/gephi/data/attributes/type/BigIntegerList.java
Patch:
@@ -23,7 +23,9 @@
 import java.math.BigInteger;
 
 /**
- *
+ * Complex type that define a list of BigInteger items. Can be created from a BigInteger
+ * array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class BigIntegerList extends NumberList<BigInteger> {

File: AttributesAPI/src/org/gephi/data/attributes/type/BooleanList.java
Patch:
@@ -21,7 +21,9 @@
 package org.gephi.data.attributes.type;
 
 /**
- *
+ * Complex type that define a list of Boolean items. Can be created from a boolean
+ * array, from a Boolean array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class BooleanList extends AbstractList<Boolean> {

File: AttributesAPI/src/org/gephi/data/attributes/type/ByteList.java
Patch:
@@ -21,7 +21,9 @@
 package org.gephi.data.attributes.type;
 
 /**
- *
+ * Complex type that define a list of Byte items. Can be created from a byte
+ * array, from a Byte array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class ByteList extends NumberList<Byte> {

File: AttributesAPI/src/org/gephi/data/attributes/type/CharacterList.java
Patch:
@@ -21,6 +21,8 @@
 package org.gephi.data.attributes.type;
 
 /**
+ * Complex type that define a list of Character items. Can be created from a char
+ * array, from a Character array or from single string using either given or default separators.
  *
  * @author Martin Škurla
  */

File: AttributesAPI/src/org/gephi/data/attributes/type/DoubleList.java
Patch:
@@ -21,7 +21,9 @@
 package org.gephi.data.attributes.type;
 
 /**
- *
+ * Complex type that define a list of Double items. Can be created from a double
+ * array, from a Double array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class DoubleList extends NumberList<Double> {

File: AttributesAPI/src/org/gephi/data/attributes/type/FloatList.java
Patch:
@@ -21,7 +21,9 @@
 package org.gephi.data.attributes.type;
 
 /**
- *
+ * Complex type that define a list of Float items. Can be created from a float
+ * array, from a Float array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class FloatList extends NumberList<Float> {

File: AttributesAPI/src/org/gephi/data/attributes/type/IntegerList.java
Patch:
@@ -21,7 +21,9 @@
 package org.gephi.data.attributes.type;
 
 /**
- *
+ * Complex type that define a list of Integer items. Can be created from a int
+ * array, from a Integer array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class IntegerList extends NumberList<Integer> {

File: AttributesAPI/src/org/gephi/data/attributes/type/LongList.java
Patch:
@@ -21,7 +21,9 @@
 package org.gephi.data.attributes.type;
 
 /**
- *
+ * Complex type that define a list of Long items. Can be created from a long
+ * array, from a Long array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class LongList extends NumberList<Long> {

File: AttributesAPI/src/org/gephi/data/attributes/type/NumberList.java
Patch:
@@ -21,8 +21,10 @@
 package org.gephi.data.attributes.type;
 
 /**
+ * Complex type that defines list of items that are numbers.
  *
- * @param <T> 
+ * @param <T> type parameter restricted to types extending Number type
+ * 
  * @author Martin Škurla
  */
 public abstract class NumberList<T extends Number> extends AbstractList<T> {

File: AttributesAPI/src/org/gephi/data/attributes/type/ShortList.java
Patch:
@@ -21,7 +21,9 @@
 package org.gephi.data.attributes.type;
 
 /**
- *
+ * Complex type that define a list of Short items. Can be created from a short
+ * array, from a Short array or from single string using either given or default separators.
+ * 
  * @author Martin Škurla
  */
 public final class ShortList extends NumberList<Short> {

File: AttributesAPI/src/org/gephi/data/attributes/type/StringList.java
Patch:
@@ -23,8 +23,8 @@
 import org.gephi.data.attributes.api.AttributeType;
 
 /**
- * Complex type that define a list of string items. Can be created from a string
- * array or by using separators.
+ * Complex type that define a list of String items. Can be created from a String
+ * array, from a char array or from single string using either given or default separators.
  * <p>
  * String list is useful when, for a particular type, the number of string
  * that define an element is not known by advance.

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportControllerUI.java
Patch:
@@ -171,6 +171,7 @@ public void stateChanged(ChangeEvent e) {
                         }
                     });
                 }
+
                 Object result = DialogDisplayer.getDefault().notify(dd);
                 if (result.equals(NotifyDescriptor.CANCEL_OPTION) || result.equals(NotifyDescriptor.CLOSED_OPTION)) {
                     return;

File: PreviewImpl/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -160,11 +160,11 @@ public void buildGraph() {
         graphModel.getGraph().readLock();
 
         if (graphModel.isUndirected()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getUndirectedGraphVisible());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getHierarchicalUndirectedGraphVisible());
         } else if (graphModel.isDirected()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getDirectedGraphVisible());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getHierarchicalDirectedGraphVisible());
         } else if (graphModel.isMixed()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getMixedGraphVisible());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getHierarchicalMixedGraphVisible());
         }
 
         graphModel.getGraph().readUnlockAll();

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeRangeBuilder.java
Patch:
@@ -160,7 +160,7 @@ public String getName() {
         private void refreshRange() {
             if (range == null) {
                 range = new Range(min, max);
-            } else {
+            } else if (!min.equals(max)) {
                 range.trimBounds(min, max);
             }
         }

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/Edge2dModel.java
Patch:
@@ -107,6 +107,9 @@ public int[] octreePosition(float centerX, float centerY, float centerZ, float s
     public boolean isInOctreeLeaf(Octant leaf) {
         NodeData nodeFrom = obj.getSource();
         NodeData nodeTo = obj.getTarget();
+        if(nodeFrom.getModel()==null || nodeTo.getModel()==null) {
+            return false;
+        }
         boolean res = true;
         if (octants[0] == leaf) {
             if (octants[0] != ((ModelImpl) nodeFrom.getModel()).getOctants()[0]) //0 = nodeFrom

File: ExportPlugin/src/org/gephi/io/exporter/plugin/ExporterGEXF.java
Patch:
@@ -409,10 +409,10 @@ private Element createEdge(Document document, Edge e) throws Exception {
         edgeE.setAttribute("source", e.getSource().getNodeData().getId());
         edgeE.setAttribute("target", e.getTarget().getNodeData().getId());
 
-        if( e.isDirected() && !graphModel.isDirected() ) {
+        if( e.isDirected() && graphModel.isMixed() ) {
             edgeE.setAttribute("type", "directed");
         }
-        else if( !e.isDirected() && graphModel.isDirected() ) {
+        else if( !e.isDirected() && graphModel.isMixed() ) {
             edgeE.setAttribute("type", "undirected");
         }
 

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -60,6 +60,7 @@ public void process(ContainerUnloader container, Workspace workspace) {
         if (container.getSource() != null) {
             pc.setSource(workspace, container.getSource());
         }
+        this.workspace = workspace;
 
         //Architecture
         GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -422,6 +422,9 @@ private void setNodeData(Element dataE, NodeDraft nodeDraft, String nodeId) {
                         case SIZE:
                             nodeDraft.setSize(parseFloat(dataValue));
                             break;
+                        case LABEL:
+                            nodeDraft.setLabel(dataValue);
+                            break;
                     }
                 } catch (Exception e) {
                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGraphML.class, "importerGraphML_error_datavalue1", dataKey, nodeId, prop.toString()), Issue.Level.SEVERE));

File: DBDrivers/src/org/gephi/io/database/drivers/SQLDriver.java
Patch:
@@ -20,14 +20,15 @@
  */
 package org.gephi.io.database.drivers;
 
+import java.io.Serializable;
 import java.sql.Connection;
 import java.sql.SQLException;
 
 /**
  *
  * @author Mathieu Bastian
  */
-public interface SQLDriver {
+public interface SQLDriver extends Serializable {
 
     public String getPrefix();
 

File: ImportAPI/src/org/gephi/io/importer/api/AbstractDatabase.java
Patch:
@@ -21,7 +21,6 @@
 package org.gephi.io.importer.api;
 
 import org.gephi.io.database.drivers.SQLDriver;
-import org.gephi.io.importer.api.PropertiesAssociations;
 
 /**
  *

File: ImportAPI/src/org/gephi/io/importer/api/Database.java
Patch:
@@ -20,14 +20,16 @@
  */
 package org.gephi.io.importer.api;
 
+import java.io.Serializable;
+
 import org.gephi.io.database.drivers.SQLDriver;
 
 /**
  * Database description and connexion details.
  *
  * @author Mathieu Bastian
  */
-public interface Database {
+public interface Database extends Serializable {
 
     public String getName();
 

File: ImportAPI/src/org/gephi/io/importer/api/PropertiesAssociations.java
Patch:
@@ -20,6 +20,7 @@
  */
 package org.gephi.io.importer.api;
 
+import java.io.Serializable;
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
@@ -28,7 +29,7 @@
  *
  * @author Mathieu Bastian
  */
-public final class PropertiesAssociations {
+public final class PropertiesAssociations implements Serializable {
 
     public enum NodeProperties {
 

File: ImportAPI/src/org/gephi/io/importer/api/PropertyAssociation.java
Patch:
@@ -20,11 +20,13 @@
  */
 package org.gephi.io.importer.api;
 
+import java.io.Serializable;
+
 /**
  *
  * @author Mathieu Bastian
  */
-public final class PropertyAssociation<Property> {
+public final class PropertyAssociation<Property> implements Serializable {
 
     private final Property property;
     private final String title;

File: ImportAPI/src/org/gephi/io/importer/api/NodeDraftGetter.java
Patch:
@@ -64,4 +64,6 @@ public interface NodeDraftGetter extends NodeDraft {
     public NodeDraftGetter[] getParents();
 
     public List<String[]> getSlices();
+
+    public int getHeight();
 }

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -411,7 +411,7 @@ public void closeLoader() {
         Collections.sort(sortedMapValues, new Comparator<NodeDraftImpl>() {
 
             public int compare(NodeDraftImpl o1, NodeDraftImpl o2) {
-                return new Integer(o1.getHeight()).compareTo(o2.getHeight());
+                return new Integer(o2.getHeight()).compareTo(o1.getHeight());
             }
         });
         for (NodeDraftImpl n : sortedMapValues) {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -488,7 +488,7 @@ private void parseEdges(NodeList edgeListE, String parent) {
                     edge.setType(EdgeDraft.EdgeType.UNDIRECTED);
                 } else if (edgeType.equals("directed")) {
                     edge.setType(EdgeDraft.EdgeType.DIRECTED);
-                } else if (edgeType.equals("double")) {
+                } else if (edgeType.equals("mutual")) {
                     edge.setType(EdgeDraft.EdgeType.MUTUAL);
                 } else {
                     report.logIssue(new Issue(NbBundle.getMessage(ImporterGEXF.class, "importerGEXF_error_edgetype", edgeType, edgeId), Issue.Level.SEVERE));

File: StatisticsPlugin/src/org/gephi/statistics/plugin/InOutDegree.java
Patch:
@@ -63,6 +63,7 @@ public double getAverageDegree() {
      */
     public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         mIsCanceled = false;
+        mAvgInDegree = mAvgOutDegree = 0.0;
 
         //Attributes cols
         AttributeTable nodeTable = attributeModel.getNodeTable();
@@ -97,7 +98,7 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
             mProgress.progress(i);
         }
 
-        mAvgDegree += mAvgInDegree + mAvgOutDegree;
+        mAvgDegree = mAvgInDegree + mAvgOutDegree;
         mAvgInDegree /= graph.getNodeCount();
         mAvgOutDegree /= graph.getNodeCount();
         mAvgDegree /= graph.getNodeCount();

File: ImportAPI/src/org/gephi/io/importer/api/Report.java
Patch:
@@ -22,6 +22,8 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Queue;
+import java.util.concurrent.ConcurrentLinkedQueue;
 import org.gephi.io.importer.api.Issue.Level;
 
 /**
@@ -32,7 +34,7 @@
  */
 public final class Report {
 
-    private final List<ReportEntry> entries = new ArrayList<ReportEntry>();
+    private final Queue<ReportEntry> entries = new ConcurrentLinkedQueue<ReportEntry>();
     private Issue.Level exceptionLevel = Issue.Level.CRITICAL;
 
     /**

File: StatisticsPlugin/src/org/gephi/statistics/plugin/InOutDegree.java
Patch:
@@ -63,6 +63,7 @@ public double getAverageDegree() {
      */
     public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         mIsCanceled = false;
+        mAvgInDegree = mAvgOutDegree = 0.0;
 
         //Attributes cols
         AttributeTable nodeTable = attributeModel.getNodeTable();
@@ -97,7 +98,7 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
             mProgress.progress(i);
         }
 
-        mAvgDegree += mAvgInDegree + mAvgOutDegree;
+        mAvgDegree = mAvgInDegree + mAvgOutDegree;
         mAvgInDegree /= graph.getNodeCount();
         mAvgOutDegree /= graph.getNodeCount();
         mAvgDegree /= graph.getNodeCount();

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java
Patch:
@@ -53,7 +53,7 @@ public String getHtmlDisplayName() {
     }
 
     private boolean isSelected() {
-        return FiltersTopComponent.findInstance().getUiModel().getSelectedQuery() == query;
+        return FiltersTopComponent.findInstance().getUiModel().getSelectedRoot() == query;
     }
 
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/AbstractGraphImpl.java
Patch:
@@ -20,7 +20,6 @@
  */
 package org.gephi.graph.dhns.graph;
 
-import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import javax.swing.SwingUtilities;
 import org.gephi.graph.api.Edge;
@@ -49,6 +48,7 @@ public AbstractGraphImpl(Dhns dhns, GraphViewImpl view) {
         this.dhns = dhns;
         this.view = view;
         this.structure = view.getStructure();
+        view.addGraphReference(this);
     }
 
     public GraphModel getGraphModel() {

File: DesktopFilters/src/org/gephi/desktop/filters/query/ParameterChildren.java
Patch:
@@ -34,7 +34,7 @@ public class ParameterChildren extends Children.Keys<Integer> {
 
     public ParameterChildren(Query function) {
         this.function = function;
-        Integer[] indexes = new Integer[function.getParametersCount()];
+        Integer[] indexes = new Integer[function.getPropertiesCount()];
         for (int i = 0; i < indexes.length; i++) {
             indexes[i] = i;
         }
@@ -43,6 +43,6 @@ public ParameterChildren(Query function) {
 
     @Override
     protected Node[] createNodes(Integer key) {
-        return new Node[]{new ParameterNode(function.getParameterName(key), function.getParameterValue(key))};
+        return new Node[]{new ParameterNode(function.getPropertyName(key), function.getPropertyValue(key))};
     }
 }

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryChildren.java
Patch:
@@ -63,7 +63,7 @@ protected Collection<Node> initCollection() {
             nodesChildren.add(new HelpNode());
         } else {
             Query[] children = topQuery != null ? topQuery : query.getChildren();
-            boolean hasParameters = query == null ? false : query.getParametersCount() > 0;
+            boolean hasParameters = query == null ? false : query.getPropertiesCount() > 0;
             int slots = topQuery != null ? topQuery.length : query.getChildrenSlotsCount();
 
             if (slots == Integer.MAX_VALUE) {

File: FiltersAPI/src/org/gephi/filters/spi/Filter.java
Patch:
@@ -27,12 +27,14 @@
  * filters conditions. Filters are predicates or functions that reduce the graph
  * and therefore create sub-graphs.
  * <p>
- * Filters are the basic building blocks that are assembled in a {@link Query} to
+ * Filters are the basic building blocks that are wrapped in queries and assembled to
  * make simple or complex conditions on nodes and edges.
  * <p>
  * Filters objects are built in {@link FilterBuilder}. Implementors should define
  * their own <code>FilterBuilder</code> class to propose new filter to users.
+ *
  * @author Mathieu Bastian
+ * @see Query
  */
 public interface Filter {
 

File: FiltersImpl/src/org/gephi/filters/FilterControllerImpl.java
Patch:
@@ -117,12 +117,14 @@ public Query createQuery(Filter filter) {
     }
 
     public void add(Query query) {
+        query = ((AbstractQueryImpl)query).getRoot();
         if (!model.hasQuery(query)) {
             model.addFirst(query);
         }
     }
 
     public void remove(Query query) {
+        query = ((AbstractQueryImpl)query).getRoot();
         model.remove(query);
     }
 

File: FiltersImpl/src/org/gephi/filters/FilterModelImpl.java
Patch:
@@ -248,7 +248,7 @@ private void writeQuery(Document document, Element parentElement, Query query, i
             queryE.setAttribute("parent", String.valueOf(parentId));
         }
         //Params
-        for (int i = 0; i < query.getParametersCount(); i++) {
+        for (int i = 0; i < query.getPropertiesCount(); i++) {
             FilterProperty prop = query.getFilter().getProperties()[i];
             Element paramE = writeParameter(document, i, prop);
             if (paramE != null) {

File: FiltersImpl/src/org/gephi/filters/FilterQueryImpl.java
Patch:
@@ -64,15 +64,15 @@ public void setName(String name) {
         this.name = name;
     }
 
-    public int getParametersCount() {
+    public int getPropertiesCount() {
         return parameters.length;
     }
 
-    public String getParameterName(int index) {
+    public String getPropertyName(int index) {
         return parameters[index].getKey();
     }
 
-    public Object getParameterValue(int index) {
+    public Object getPropertyValue(int index) {
         return parameters[index].getValue();
     }
 

File: FiltersImpl/src/org/gephi/filters/OperatorQueryImpl.java
Patch:
@@ -49,15 +49,15 @@ public String getName() {
     public void setName(String name) {
     }
 
-    public int getParametersCount() {
+    public int getPropertiesCount() {
         return 0;
     }
 
-    public String getParameterName(int index) {
+    public String getPropertyName(int index) {
         return null;
     }
 
-    public Object getParameterValue(int index) {
+    public Object getPropertyValue(int index) {
         return null;
     }
 

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -42,7 +42,7 @@ public class LabelAdjust extends AbstractLayout implements Layout {
     protected Graph graph;
     //Settings
     private double speed = 1;
-    private final double RADIUS_SCALE = 1.2;
+    private final double RADIUS_SCALE = 2;
     private double xmin;
     private double xmax;
     private double ymin;
@@ -182,8 +182,8 @@ public void goAlgo() {
                 // Check labels, but when no label keep a rectangle equivalent to the sphere
                 double n1xmin = n1x - 0.5 * n1w;
                 double n2xmin = n2x - 0.5 * n2w;
-                double n1ymin = n1.getNodeData().y() - 0.5 * n1h;
-                double n2ymin = n2.getNodeData().y() - 0.5 * n2h;
+                double n1ymin = n1y - 0.5 * n1h;
+                double n2ymin = n2y - 0.5 * n2h;
                 double n1xmax = n1x + 0.5 * n1w;
                 double n2xmax = n2x + 0.5 * n2w;
                 double n1ymax = n1y + 0.5 * n1h;

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -57,6 +57,7 @@ public void resetPropertiesValues() {
     }
 
     public void initAlgo() {
+        setConverged(false);
     }
 
     public void goAlgo() {

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -24,7 +24,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Stack;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.Node;
 import org.gephi.layout.plugin.AbstractLayout;
@@ -270,12 +269,12 @@ private class SpatialGrid {
         //Param
         private final int COLUMNS_ROWS = 20;
         //Data
-        private Map<Cell, Stack<Node>> data = new HashMap<Cell, Stack<Node>>();
+        private Map<Cell, List<Node>> data = new HashMap<Cell, List<Node>>();
 
         public SpatialGrid() {
             for (int row = 0; row < COLUMNS_ROWS; row++) {
                 for (int col = 0; col < COLUMNS_ROWS; col++) {
-                    Stack<Node> localnodes = new Stack();
+                    List<Node> localnodes = new ArrayList<Node>();
                     data.put(new Cell(row, col), localnodes);
                 }
             }

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextDataImpl.java
Patch:
@@ -50,7 +50,7 @@ public void setWrappedLines(TextDataImpl.TextLine[] lines) {
     }
 
     public void setLine(String line) {
-        this.line = new TextLine(line);
+        this.line = new TextLine(line, this.line.bounds);
     }
 
     public boolean hasCustomColor() {
@@ -136,8 +136,9 @@ public static class TextLine {
         public TextLine() {
         }
 
-        public TextLine(String text) {
+        public TextLine(String text, Rectangle2D bounds) {
             this.text = text;
+            this.bounds = bounds;
         }
 
         public String getText() {

File: PreviewExport/src/org/gephi/io/exporter/preview/PDFExporter.java
Patch:
@@ -208,10 +208,12 @@ public void renderNodeLabel(NodeLabel label) {
         try {
             BaseFont bf = genBaseFont(font);
             float ascent = bf.getAscentPoint(label.getValue(), font.getSize());
+            float descent = bf.getDescentPoint(label.getValue(), font.getSize());
+            float textHeight = (ascent - descent)/2f;
 
             cb.beginText();
             cb.setFontAndSize(bf, font.getSize());
-            cb.showTextAligned(PdfContentByte.ALIGN_CENTER, label.getValue(), p.getX() - ascent / 2, -p.getY(), 0);
+            cb.showTextAligned(PdfContentByte.ALIGN_CENTER, label.getValue(), p.getX(), -p.getY()-textHeight , 0);
             cb.endText();
         } catch (Exception ex) {
             Exceptions.printStackTrace(ex);

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java
Patch:
@@ -170,7 +170,7 @@ public Node getOpposite(Node node, Edge edge) {
         checkNode(node);
         AbstractEdge absEdge = checkEdge(edge);
         if (absEdge.getSource(view.getViewId()) == node) {
-            return absEdge.getTarget();
+            return absEdge.getTarget(view.getViewId());
         } else if (absEdge.getTarget(view.getViewId()) == node) {
             return absEdge.getSource(view.getViewId());
         }

File: LayoutPlugin/src/org/gephi/layout/plugin/scale/ScaleLayout.java
Patch:
@@ -54,7 +54,7 @@ public void goAlgo() {
         double xMean = 0, yMean = 0;
         for (Node n : graph.getNodes()) {
             xMean += n.getNodeData().x();
-            yMean += n.getNodeData().x();
+            yMean += n.getNodeData().y();
         }
         xMean /= graph.getNodeCount();
         yMean /= graph.getNodeCount();

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -86,6 +86,7 @@ protected void setSyntax(StreamTokenizer tk) {
         tk.ordinaryChar('>');
         tk.ordinaryChar('/');
         tk.ordinaryChar('*');
+        tk.ordinaryChar(',');
         tk.quoteChar('"');
         tk.whitespaceChars(';', ';');
         tk.ordinaryChar('=');

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java
Patch:
@@ -494,7 +494,7 @@ public boolean isFileSupported(FileObject fileObject) {
                 return true;
             }
         }
-        if (fileObject.hasExt("zip")) {
+        if (fileObject.hasExt("zip") || fileObject.hasExt("ZIP")) {
             return true;
         }
         return false;

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterCSV.java
Patch:
@@ -125,7 +125,7 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("csv");
+        return fileObject.hasExt("csv") || fileObject.hasExt("CSV");
     }
 
     public boolean cancel() {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterDL.java
Patch:
@@ -306,7 +306,7 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("dl");
+        return fileObject.hasExt("dl") || fileObject.hasExt("DL");
     }
 
     public boolean cancel() {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterDOT.java
Patch:
@@ -333,7 +333,7 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("dot");
+        return fileObject.hasExt("dot") || fileObject.hasExt("DOT");
     }
 
     public boolean cancel() {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGDF.java
Patch:
@@ -562,6 +562,6 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("gdf");
+        return fileObject.hasExt("gdf") || fileObject.hasExt("GDF");
     }
 }

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGEXF.java
Patch:
@@ -764,7 +764,7 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("gexf");
+        return fileObject.hasExt("gexf") || fileObject.hasExt("GEXF");
     }
 
     public boolean cancel() {

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGML.java
Patch:
@@ -309,6 +309,6 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("gml");
+        return fileObject.hasExt("gml") || fileObject.hasExt("GML");
     }
 }

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterGraphML.java
Patch:
@@ -476,6 +476,6 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("graphml");
+        return fileObject.hasExt("graphml")  || fileObject.hasExt("GRAPHML");
     }
 }

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterPajek.java
Patch:
@@ -327,6 +327,6 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("net");
+        return fileObject.hasExt("net") || fileObject.hasExt("NET");
     }
 }

File: ImportPlugin/src/org/gephi/io/importer/plugin/file/ImporterTLP.java
Patch:
@@ -145,7 +145,7 @@ public FileType[] getFileTypes() {
     }
 
     public boolean isMatchingImporter(FileObject fileObject) {
-        return fileObject.hasExt("tlp");
+        return fileObject.hasExt("tlp") || fileObject.hasExt("TLP");
     }
 
     public boolean cancel() {

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java
Patch:
@@ -34,6 +34,7 @@
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
 import org.gephi.desktop.mrufiles.api.MostRecentFiles;
+import org.gephi.desktop.project.api.ProjectControllerUI;
 import org.gephi.io.importer.api.Container;
 import org.gephi.io.importer.api.ContainerFactory;
 import org.gephi.io.importer.api.Database;
@@ -323,9 +324,10 @@ private void finishImport(Container container) {
             reportPanel.destroy();
 
             ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
+            ProjectControllerUI pcui = Lookup.getDefault().lookup(ProjectControllerUI.class);
             Workspace workspace;
             if (pc.getCurrentProject() == null) {
-                pc.newProject();
+                pcui.newProject();
                 workspace = pc.getCurrentWorkspace();
             } else {
                 if (reportPanel.getProcessorStrategy().equals(ProcessorStrategyEnum.FULL)) {

File: DesktopBranding/src/org/gephi/branding/desktop/CommandLineProcessor.java
Patch:
@@ -100,6 +100,7 @@ public void process(Env env, Map values) throws CommandException {
             NotifyDescriptor nd = new NotifyDescriptor.Message(MEMORY_ERROR, NotifyDescriptor.ERROR_MESSAGE);
             DialogDisplayer.getDefault().notify(nd);
         } catch (Exception ex) {
+            ex.printStackTrace();
             NotifyDescriptor nd = new NotifyDescriptor.Message("CommandLineParsing " + ex.getMessage(), NotifyDescriptor.ERROR_MESSAGE);
             DialogDisplayer.getDefault().notify(nd);
         }

File: PartitionAPI/src/org/gephi/partition/impl/PartitionControllerImpl.java
Patch:
@@ -122,7 +122,7 @@ public void setSelectedPartition(final Partition partition) {
             Thread t = new Thread(new Runnable() {
 
                 public void run() {
-                    if (partition != null && !PartitionFactory.isPartitionBuilt(partition)) {
+                    if (partition != null) {
                         GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
                         PartitionFactory.buildNodePartition((NodePartition) partition, graphModel.getGraphVisible());
                     }
@@ -146,7 +146,7 @@ public void run() {
             Thread t = new Thread(new Runnable() {
 
                 public void run() {
-                    if (partition != null && !PartitionFactory.isPartitionBuilt(partition)) {
+                    if (partition != null) {
                         GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
                         PartitionFactory.buildEdgePartition((EdgePartition) partition, graphModel.getGraphVisible());
                     }

File: StatisticsPlugin/src/org/gephi/statistics/plugin/DegreeDistribution.java
Patch:
@@ -127,7 +127,7 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         if (this.mDirected) {
             graph = graphModel.getDirectedGraphVisible();
         } else {
-            graph = graphModel.getUndirectedGraph();
+            graph = graphModel.getUndirectedGraphVisible();
         }
 
         graph.readLock();

File: StatisticsPlugin/src/org/gephi/statistics/plugin/GraphDensity.java
Patch:
@@ -70,9 +70,9 @@ public void execute(GraphModel graphModel, AttributeModel attributeModel) {
         Graph graph;
 
         if (mDirected) {
-            graph = graphModel.getDirectedGraph();
+            graph = graphModel.getDirectedGraphVisible();
         } else {
-            graph = graphModel.getUndirectedGraph();
+            graph = graphModel.getUndirectedGraphVisible();
         }
 
         this.mGraphRevision = "(" + graph.getNodeVersion() + ", " + graph.getEdgeVersion() + ")";

File: VisualizationModule/src/org/gephi/visualization/component/VizBarController.java
Patch:
@@ -83,12 +83,12 @@ public void propertyChange(PropertyChangeEvent evt) {
                 }
             }
         });
-
     }
 
     public VizToolbar getToolbar() {
+        VizModel model = VizController.getInstance().getVizModel();
         toolbar = new VizToolbar(groups);
-        toolbar.setEnable(false);
+        toolbar.setEnable(!model.isDefaultModel());
         return toolbar;
     }
 

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java
Patch:
@@ -231,13 +231,13 @@ public void readXML(Element textModelElement) {
         String nodeFontName = nodeFontE.getAttribute("name");
         int nodeFontSize = Integer.parseInt(nodeFontE.getAttribute("size"));
         int nodeFontStyle = Integer.parseInt(nodeFontE.getAttribute("style"));
-        nodeFont = new Font(nodeFontName, nodeFontSize, nodeFontStyle);
+        nodeFont = new Font(nodeFontName, nodeFontStyle, nodeFontSize);
 
         Element edgeFontE = (Element) textModelElement.getElementsByTagName("edgefont").item(0);
         String edgeFontName = edgeFontE.getAttribute("name");
         int edgeFontSize = Integer.parseInt(edgeFontE.getAttribute("size"));
         int edgeFontStyle = Integer.parseInt(edgeFontE.getAttribute("style"));
-        edgeFont = new Font(edgeFontName, edgeFontSize, edgeFontStyle);
+        edgeFont = new Font(edgeFontName, edgeFontStyle, edgeFontSize);
 
         //Color
         Element nodeColorE = (Element) textModelElement.getElementsByTagName("nodecolor").item(0);

File: ProjectAPI/src/org/gephi/project/impl/ProjectControllerImpl.java
Patch:
@@ -487,7 +487,7 @@ public Workspace duplicateWorkspace(Workspace workspace) {
     }
 
     public void renameProject(Project project, final String name) {
-        project.getLookup().lookup(ProjectInformationImpl.class);
+        project.getLookup().lookup(ProjectInformationImpl.class).setName(name);
 
         //Title bar
         SwingUtilities.invokeLater(new Runnable() {

File: ProjectUI/src/org/gephi/ui/project/ProjectPropertiesEditor.java
Patch:
@@ -58,14 +58,14 @@ public void load(Project project) {
     public void save(Project project) {
         ProjectInformation info = project.getLookup().lookup(ProjectInformation.class);
         if (info != null) {
-            if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(info.getName())) {
+            if (!nameTextField.getText().isEmpty() && !nameTextField.getText().equals(info.getName())) {
                 ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
-                pc.renameProject(project, titleTextField.getText());
+                pc.renameProject(project, nameTextField.getText());
             }
         }
         ProjectMetaData metaData = project.getLookup().lookup(ProjectMetaData.class);
         if (metaData != null) {
-            metaData.setTitle(nameTextField.getText());
+            metaData.setTitle(titleTextField.getText());
 
             metaData.setAuthor(authorTextField.getText());
             metaData.setKeywords(keywordsTextField.getText());

File: VisualizationModule/src/org/gephi/visualization/api/selection/SelectionManager.java
Patch:
@@ -101,6 +101,7 @@ public void setDirectMouseSelection() {
     public void setDraggingMouseSelection() {
         engine.setRectangleSelection(false);
         vizConfig.setDraggingEnable(true);
+        vizConfig.setMouseSelectionUpdateWhileDragging(false);
         vizConfig.setSelectionEnable(true);
         vizConfig.setCustomSelection(false);
         this.blocked = false;

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java
Patch:
@@ -119,7 +119,7 @@ public void propertyChange(PropertyChangeEvent evt) {
                     TextManager.this.model = VizController.getInstance().getVizModel().getTextModel();
 
                     //Initialize columns if needed
-                    if (model.getNodeTextColumns() == null) {
+                    if (model.getNodeTextColumns() == null || model.getNodeTextColumns().length == 0) {
                         AttributeController attributeController = Lookup.getDefault().lookup(AttributeController.class);
                         if (attributeController != null && attributeController.getModel() != null) {
                             AttributeModel attributeModel = attributeController.getModel();

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java
Patch:
@@ -56,8 +56,8 @@ public class TextModel {
     protected float nodeSizeFactor = 0.5f;//Between 0 and 1
     protected float edgeSizeFactor = 0.5f;
     protected List<ChangeListener> listeners = new ArrayList<ChangeListener>();
-    protected AttributeColumn[] nodeTextColumns;
-    protected AttributeColumn[] edgeTextColumns;
+    protected AttributeColumn[] nodeTextColumns = new AttributeColumn[0];
+    protected AttributeColumn[] edgeTextColumns = new AttributeColumn[0];
 
     public TextModel() {
         defaultValues();

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsPersistenceProvider.java
Patch:
@@ -37,7 +37,8 @@
 public class DhnsPersistenceProvider implements WorkspacePersistenceProvider {
 
     public Element writeXML(Document document, Workspace workspace) {
-        Dhns dhns = workspace.getLookup().lookup(Dhns.class);
+        DhnsGraphController graphController = Lookup.getDefault().lookup(DhnsGraphController.class);
+        Dhns dhns = (Dhns)graphController.getModel(workspace);
         DHNSSerializer serializer = new DHNSSerializer();
         return serializer.writeDhns(document, dhns);
     }

File: DesktopExport/src/org/gephi/desktop/io/export/api/GraphFileExporterUI.java
Patch:
@@ -153,7 +153,7 @@ public void propertyChange(PropertyChangeEvent evt) {
                 }
 
                 //Selected file extension change
-                if (selectedFile != null) {
+                if (selectedFile != null && fileFilter != null) {
                     String filePath = selectedFile.getAbsolutePath();
                     filePath = filePath.substring(0, filePath.lastIndexOf("."));
                     filePath = filePath.concat(fileFilter.getExtensions().get(0));
@@ -177,7 +177,7 @@ public void propertyChange(PropertyChangeEvent evt) {
             for (FileType fileType : graphFileExporter.getFileTypes()) {
                 DialogFileFilter dialogFileFilter = new DialogFileFilter(fileType.getName());
                 dialogFileFilter.addExtensions(fileType.getExtensions());
-                if(defaultFilter==null) {
+                if (defaultFilter == null) {
                     defaultFilter = dialogFileFilter;
                 }
                 chooser.addChoosableFileFilter(dialogFileFilter);

File: DesktopExport/src/org/gephi/desktop/io/export/api/VectorialFileExporterUI.java
Patch:
@@ -147,7 +147,7 @@ public void propertyChange(PropertyChangeEvent evt) {
                 }
 
                 //Selected file extension change
-                if (selectedFile != null) {
+                if (selectedFile != null && fileFilter != null) {
                     String filePath = selectedFile.getAbsolutePath();
                     filePath = filePath.substring(0, filePath.lastIndexOf("."));
                     filePath = filePath.concat(fileFilter.getExtensions().get(0));

File: ProjectAPI/src/org/gephi/project/io/GephiReader.java
Patch:
@@ -70,7 +70,7 @@ public Project readAll(Element root, Project project) throws Exception {
         //XPath
         XPathFactory factory = XPathFactory.newInstance();
         XPath xpath = factory.newXPath();
-
+        
         //Calculate the task max
         readCore(xpath, root);
 

File: ProjectAPI/src/org/gephi/project/io/SaveTask.java
Patch:
@@ -72,6 +72,7 @@ public void run() {
         File writeFile = null;
         try {
             Progress.start(progressTicket);
+            Progress.setDisplayName(progressTicket, NbBundle.getMessage(SaveTask.class, "SaveTask.name"));
             FileObject fileObject = dataObject.getPrimaryFile();
             File outputFile = FileUtil.toFile(fileObject);
             writeFile = outputFile;

File: PartitionAPI/src/org/gephi/partition/impl/PartitionControllerImpl.java
Patch:
@@ -239,7 +239,9 @@ public void refreshPartitions() {
     }
 
     public void transform(Partition partition, Transformer transformer) {
-        transformer.transform(partition);
+        if (transformer != null && partition != null) {
+            transformer.transform(partition);
+        }
     }
 
     public boolean isGroupable(Partition partition) {

File: DesktopBranding/src/org/gephi/branding/desktop/BannerTopComponent.java
Patch:
@@ -310,7 +310,7 @@ public JGroupButton(String text, Icon icon) {
             } else if (UIUtils.isAquaLookAndFeel()) {
                 setIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/aqua-enabled.png"),
                         ImageUtilities.icon2Image(icon), 6, 3)));
-                setRolloverIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/aqua-mousover.png"),
+                setRolloverIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/aqua-mouseover.png"),
                         ImageUtilities.icon2Image(icon), 6, 3)));
                 setSelectedIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/aqua-selected.png"),
                         ImageUtilities.icon2Image(icon), 6, 3)));

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingChooser.java
Patch:
@@ -140,7 +140,7 @@ public void actionPerformed(ActionEvent e) {
         });
     }
 
-    private synchronized void refreshModel() {
+    public synchronized void refreshModel() {
         refreshSelectedRankings();
         Ranking[] rankings = new Ranking[0];
         if (modelUI.getRanking() == RankingUIModel.NODE_RANKING) {

File: RankingAPI/src/org/gephi/ranking/impl/RankingControllerImpl.java
Patch:
@@ -63,8 +63,8 @@ public void transform(Transformer transformer) {
 
         Graph graph = Lookup.getDefault().lookup(GraphController.class).getModel().getGraphVisible();
         if (ranking instanceof NodeRanking) {
-            ((AbstractRanking)ranking).setGraph(graph);
-            for (Node node : graph.getNodes().toArray()) {  
+            ((AbstractRanking) ranking).setGraph(graph);
+            for (Node node : graph.getNodes().toArray()) {
                 Object rank = ranking.getValue(node);
                 Object result = null;
                 if (rank != null) {
@@ -76,7 +76,7 @@ public void transform(Transformer transformer) {
                 rankingResult.addResult(node, rank, result);
             }
         } else {
-            ((AbstractRanking)ranking).setGraph(graph);
+            ((AbstractRanking) ranking).setGraph(graph);
             for (Edge edge : graph.getEdges().toArray()) {
                 Object rank = ranking.getValue(edge);
                 Object result = null;

File: DesktopFilters/src/org/gephi/filters/impl/FilterControllerImpl.java
Patch:
@@ -93,7 +93,7 @@ public void close(Workspace workspace) {
 
             public void disable() {
                 GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
-                if (model.getCurrentResult() != null) {
+                if (model.getCurrentResult() != null && graphModel != null) {
                     graphModel.destroyView(model.getCurrentResult());
                     model.setCurrentResult(null);
                 }

File: DHNSGraph/src/org/gephi/graph/dhns/utils/DHNSSerializer.java
Patch:
@@ -196,6 +196,7 @@ public void readEdges(Element edgesE, GraphStructure graphStructure, GraphFactor
                 graphStructure.getEdgeDictionnary().add(edge);
             }
         }
+        graphStructure.getMainView().getStructureModifier().getEdgeProcessor().computeMetaEdges();
     }
 
     public Element writeTreeStructure(Document document, GraphViewImpl view) {
@@ -299,6 +300,7 @@ public Element writeGraphView(Document document, GraphViewImpl graphView) {
                 edgeE.setAttribute("id", String.valueOf(edge.getId()));
             }
         }
+        graphView.getStructureModifier().getEdgeProcessor().computeMetaEdges();
 
         return viewE;
     }

File: DHNSGraph/src/org/gephi/graph/dhns/core/EdgeProcessor.java
Patch:
@@ -276,7 +276,7 @@ private MetaEdgeImpl createMetaEdge(AbstractNode source, AbstractNode target) {
         if (source == target) {
             return null;
         }
-        MetaEdgeImpl newEdge = new MetaEdgeImpl(idGen.newEdgeId(), source, target);
+        MetaEdgeImpl newEdge = dhns.factory().newMetaEdge(source, target);
         source.getMetaEdgesOutTree().add(newEdge);
         target.getMetaEdgesInTree().add(newEdge);
         return newEdge;

File: FiltersPlugin/src/org/gephi/filters/plugin/edge/EdgeWeightBuilder.java
Patch:
@@ -122,7 +122,7 @@ public Object[] getValues() {
                 refreshRange();
                 return weights;
             } else {
-                return values.toArray(new Integer[0]);
+                return values.toArray(new Float[0]);
             }
         }
 

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestSerializer.java
Patch:
@@ -123,11 +123,11 @@ public void tearDown() {
     @Test
     public void testTreeStructureSerializer() {
         DHNSSerializer dHNSSerializer = new DHNSSerializer();
-        Element e1 = dHNSSerializer.writeTreeStructure(dHNSSerializer.createDocument(), dhns1.getGraphStructure().getMainView().getStructure());
+        Element e1 = dHNSSerializer.writeTreeStructure(dHNSSerializer.createDocument(), dhns1.getGraphStructure().getMainView());
         String s1 = printXML(e1);
         graph1.clear();
         dHNSSerializer.readTreeStructure(e1, dhns1.getGraphStructure(), dhns1.factory());
-        Element e2 = dHNSSerializer.writeTreeStructure(dHNSSerializer.createDocument(), dhns1.getGraphStructure().getMainView().getStructure());
+        Element e2 = dHNSSerializer.writeTreeStructure(dHNSSerializer.createDocument(), dhns1.getGraphStructure().getMainView());
         String s2 = printXML(e2);
         assertEquals(s1, s2);
     }

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsGraphController.java
Patch:
@@ -46,7 +46,7 @@
     @ServiceProvider(service = WorkspaceDuplicateProvider.class, position = 1000)})
 public class DhnsGraphController implements GraphController, WorkspaceDuplicateProvider {
 
-    private static final int EVENTBUS_BOUND = 30;
+    private static final int EVENTBUS_BOUND = 10;
     //Common architecture
     protected IDGen iDGen;
     private Executor eventBus;
@@ -75,7 +75,7 @@ public IDGen getIDGen() {
         return iDGen;
     }
 
-    private Dhns getCurrentDhns() {
+    private synchronized Dhns getCurrentDhns() {
         Workspace currentWorkspace = Lookup.getDefault().lookup(ProjectController.class).getCurrentWorkspace();
         if (currentWorkspace == null) {
             return null;

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphFactoryImpl.java
Patch:
@@ -110,9 +110,8 @@ public AbstractEdge newEdge(Node source, Node target, float weight, boolean dire
         } else {
             edge = new MixedEdgeImpl(idGen.newEdgeId(), nodeSource, nodeTarget, directed);
         }
-        if (weight != 0) {
-            edge.setWeight(weight);
-        }
+        edge.setWeight(weight);
+
         edge.setAttributes(newEdgeAttributes());
         edge.getEdgeData().setTextData(newTextData());
         return edge;

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java
Patch:
@@ -122,7 +122,8 @@ public NodeIterable getNodesTree() {
     }
 
     public int getNodeCount() {
-        int count = structure.getTreeSize() - 1;// -1 Exclude virtual root
+        //int count = structure.getTreeSize() - 1;// -1 Exclude virtual root
+        int count = view.getNodesEnabled();
         return count;
     }
 

File: DesktopBranding/test/unit/src/org/gephi/branding/desktop/reporter/ReportControllerTest.java
Patch:
@@ -43,7 +43,7 @@ public void tearDown() {
     public void testSend() {
         ReportController reportController = new ReportController();
         Report report = new Report();
-        report.setUserDescription("test");
+        report.setUserDescription("test & more < >");
         Document doc = reportController.buildReportDocument(report);
         reportController.sendDocument(doc);
     }

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -330,7 +330,6 @@ public Object readResolve() {
      * Refresh the preview applet.
      */
     public void refreshPreview() {
-        System.out.println("sketch refresh "+sketch);
         sketch.refresh();
     }
 

File: DesktopTimeline/src/org/gephi/desktop/timeline/TimelineTopComponent.java
Patch:
@@ -139,6 +139,9 @@ private void initComponents() {
         settingsButton = new javax.swing.JButton();
         timelinePanel = new javax.swing.JPanel();
 
+        setMaximumSize(new java.awt.Dimension(2147483647, 27));
+        setMinimumSize(new java.awt.Dimension(128, 16));
+        setPreferredSize(new java.awt.Dimension(800, 24));
         setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
 
         timelineToolbar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(5, 4, 3)));

File: ImportAPI/src/org/gephi/io/importer/api/EdgeDraftGetter.java
Patch:
@@ -53,4 +53,6 @@ public interface EdgeDraftGetter extends EdgeDraft {
     public NodeDraftGetter getSource();
 
     public NodeDraftGetter getTarget();
+
+    public List<String[]> getSlices();
 }

File: PreviewImpl/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -152,11 +152,11 @@ public void buildGraph() {
         model.clearSupervisors();
 
         if (graphModel.isUndirected()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getUndirectedGraph());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getUndirectedGraphVisible());
         } else if (graphModel.isDirected()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getDirectedGraph());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getDirectedGraphVisible());
         } else if (graphModel.isMixed()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getMixedGraph());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getMixedGraphVisible());
         }
         model.setUpdateFlag(true);
     }

File: DesktopBranding/src/org/gephi/branding/desktop/actions/OpenProject.java
Patch:
@@ -48,7 +48,9 @@ public boolean isEnabled() {
     public void actionPerformed(ActionEvent e) {
 
         ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
-        pc.closeCurrentProject();
+        if(!pc.closeCurrentProject()) {
+            return;
+        }
 
         //Open Dialog
         DialogFileFilter filter = new DialogFileFilter(NbBundle.getMessage(OpenProject.class, "OpenProject_filechooser_filter"));

File: ProjectAPI/src/org/gephi/project/api/ProjectController.java
Patch:
@@ -45,7 +45,7 @@ public interface ProjectController {
 
     public void saveAsProject(Project project);
 
-    public void closeCurrentProject();
+    public boolean closeCurrentProject();
 
     public void removeProject(Project project);
 

File: ImportAPI/src/org/gephi/io/importer/api/EdgeDraftGetter.java
Patch:
@@ -53,4 +53,6 @@ public interface EdgeDraftGetter extends EdgeDraft {
     public NodeDraftGetter getSource();
 
     public NodeDraftGetter getTarget();
+
+    public List<String[]> getSlices();
 }

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsGraphController.java
Patch:
@@ -46,7 +46,7 @@
     @ServiceProvider(service = WorkspaceDuplicateProvider.class, position = 1000)})
 public class DhnsGraphController implements GraphController, WorkspaceDuplicateProvider {
 
-    private static final int EVENTBUS_BOUND = 30;
+    private static final int EVENTBUS_BOUND = 10;
     //Common architecture
     protected IDGen iDGen;
     private Executor eventBus;
@@ -75,7 +75,7 @@ public IDGen getIDGen() {
         return iDGen;
     }
 
-    private Dhns getCurrentDhns() {
+    private synchronized Dhns getCurrentDhns() {
         Workspace currentWorkspace = Lookup.getDefault().lookup(ProjectController.class).getCurrentWorkspace();
         if (currentWorkspace == null) {
             return null;

File: DHNSGraph/src/org/gephi/graph/dhns/core/DuplicateManager.java
Patch:
@@ -78,6 +78,7 @@ public void duplicate(Dhns destination, GraphViewImpl view) {
                 }
             }
         }
+        newGraphStructure.getMainView().setNodesEnabled(view.getNodesEnabled());
         newGraphStructure.getMainView().setEdgesCountTotal(view.getEdgesCountTotal());
         newGraphStructure.getMainView().setEdgesCountEnabled(view.getEdgesCountEnabled());
         newGraphStructure.getMainView().setMutualEdgesTotal(view.getMutualEdgesTotal());

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphStructure.java
Patch:
@@ -101,6 +101,7 @@ public GraphViewImpl getNewView() {
                 }
             }
         }
+        view.setNodesEnabled(mainView.getNodesEnabled());
         view.setEdgesCountTotal(mainView.getEdgesCountTotal());
         view.setEdgesCountEnabled(mainView.getEdgesCountEnabled());
         view.setMutualEdgesTotal(mainView.getMutualEdgesTotal());

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java
Patch:
@@ -122,7 +122,8 @@ public NodeIterable getNodesTree() {
     }
 
     public int getNodeCount() {
-        int count = structure.getTreeSize() - 1;// -1 Exclude virtual root
+        //int count = structure.getTreeSize() - 1;// -1 Exclude virtual root
+        int count = view.getNodesEnabled();
         return count;
     }
 

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeRangeBuilder.java
Patch:
@@ -132,7 +132,7 @@ public AttributeRangelFilter(AttributeColumn column) {
         }
 
         public String getName() {
-            return NbBundle.getMessage(AttributeRangeBuilder.class, "AttributeRangeBuilder.name");
+            return column.getTitle() + " " + NbBundle.getMessage(AttributeRangeBuilder.class, "AttributeRangeBuilder.name");
         }
 
         private void refreshRange() {

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -330,7 +330,6 @@ public Object readResolve() {
      * Refresh the preview applet.
      */
     public void refreshPreview() {
-        System.out.println("sketch refresh "+sketch);
         sketch.refresh();
     }
 

File: PreviewImpl/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -152,11 +152,11 @@ public void buildGraph() {
         model.clearSupervisors();
 
         if (graphModel.isUndirected()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getUndirectedGraph());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getUndirectedGraphVisible());
         } else if (graphModel.isDirected()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getDirectedGraph());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getDirectedGraphVisible());
         } else if (graphModel.isMixed()) {
-            previewGraph = factory.createPreviewGraph(model, graphModel.getMixedGraph());
+            previewGraph = factory.createPreviewGraph(model, graphModel.getMixedGraphVisible());
         }
         model.setUpdateFlag(true);
     }

File: DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java
Patch:
@@ -339,7 +339,7 @@ private void addEdge(AbstractEdge edge) {
             if (enabled) {
                 view.incEdgesCountEnabled(1);
                 sourceNode.incEnabledOutDegree();
-                sourceNode.incEnabledInDegree();
+                targetNode.incEnabledInDegree();
             }
 
             dhns.getGraphStructure().getEdgeDictionnary().add(edge);
@@ -376,7 +376,9 @@ private boolean delEdge(AbstractEdge edge) {
                 if (enabled) {
                     view.decMutualEdgesEnabled(1);
                     source.decEnabledMutualDegree();
+                    target.decEnabledMutualDegree();
                 }
+                view.decMutualEdgesTotal(1);
             }
 
             view.decEdgesCountTotal(1);

File: DesktopBranding/test/unit/src/org/gephi/branding/desktop/reporter/ReportControllerTest.java
Patch:
@@ -43,7 +43,7 @@ public void tearDown() {
     public void testSend() {
         ReportController reportController = new ReportController();
         Report report = new Report();
-        report.setUserDescription("test");
+        report.setUserDescription("test & more < >");
         Document doc = reportController.buildReportDocument(report);
         reportController.sendDocument(doc);
     }

File: DesktopBranding/src/org/gephi/branding/desktop/BannerTopComponent.java
Patch:
@@ -317,7 +317,7 @@ public JGroupButton(String text, Icon icon) {
             } else {
                 setIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/nimbus-enabled.png"),
                         ImageUtilities.icon2Image(icon), 6, 3)));
-                setRolloverIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/nimbus-mousover.png"),
+                setRolloverIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/nimbus-mouseover.png"),
                         ImageUtilities.icon2Image(icon), 6, 3)));
                 setSelectedIcon(ImageUtilities.image2Icon(ImageUtilities.mergeImages(ImageUtilities.loadImage("org/gephi/branding/desktop/resources/nimbus-selected.png"),
                         ImageUtilities.icon2Image(icon), 6, 3)));

File: DesktopContext/src/org/gephi/desktop/context/ContextPanel.java
Patch:
@@ -137,6 +137,7 @@ private void initComponents() {
         edgeLabel = new javax.swing.JLabel();
         graphTypeLabel = new javax.swing.JLabel();
 
+        setOpaque(false);
         setLayout(new java.awt.GridBagLayout());
 
         commandToolbar.setFloatable(false);

File: DesktopContext/src/org/gephi/desktop/context/ContextTopComponent.java
Patch:
@@ -40,7 +40,7 @@ public ContextTopComponent() {
 //        setIcon(ImageUtilities.loadImage(ICON_PATH, true));
         putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
         if (UIUtils.isAquaLookAndFeel()) {
-            setBackground(UIManager.getColor("NbExplorerView.background"));
+            mainPanel.setBackground(UIManager.getColor("NbExplorerView.background"));
         }
         mainPanel.add(contextPanel, BorderLayout.CENTER);
 

File: ClusteringPlugin/src/org/gephi/clustering/plugin/mcl/MarkovClustering.java
Patch:
@@ -100,7 +100,7 @@ public void execute(GraphModel graphModel) {
         HashMap<Integer, Node> nodeMap = new HashMap<Integer, Node>();
         HashMap<Node, Integer> intMap = new HashMap<Node, Integer>();
 
-        Graph graph = graphModel.getGraph();
+        Graph graph = graphModel.getGraphVisible();
         graph.readLock();
 
         //Load matrix

File: DHNSGraph/src/org/gephi/graph/dhns/graph/AbstractGraphImpl.java
Patch:
@@ -69,7 +69,7 @@ public void readLock() {
                     break;
                 }
             }
-            System.err.println("WARNING: readLock() on the EDT - " + r.getStackTrace()[i].toString());
+            //System.err.println("WARNING: readLock() on the EDT - " + r.getStackTrace()[i].toString());
         }
         dhns.getReadLock().lock();
     }
@@ -96,7 +96,7 @@ public void writeLock() {
                     break;
                 }
             }
-            System.err.println("WARNING: readLock() on the EDT - " + r.getStackTrace()[i].toString());
+            //System.err.println("WARNING: readLock() on the EDT - " + r.getStackTrace()[i].toString());
         }
         //System.out.println(Thread.currentThread()+ "write lock");
         dhns.getWriteLock().lock();

File: RankingAPI/src/org/gephi/ranking/impl/RankingModelImpl.java
Patch:
@@ -132,7 +132,7 @@ public NodeRanking[] getNodeRanking() {
 
     public EdgeRanking[] getEdgeRanking() {
         AttributeController attributeController = Lookup.getDefault().lookup(AttributeController.class);
-        Graph graph = Lookup.getDefault().lookup(GraphController.class).getModel().getGraph();
+        Graph graph = Lookup.getDefault().lookup(GraphController.class).getModel().getGraphVisible();
         List<Ranking> rankingList = new ArrayList<Ranking>();
         for (AttributeColumn column : attributeController.getModel().getEdgeTable().getColumns()) {
             if (RankingFactory.isNumberColumn(column)) {

File: ToolsPlugin/src/org/gephi/tools/plugin/HeatMap.java
Patch:
@@ -91,8 +91,8 @@ public void clickNodes(Node[] nodes) {
                     }
                     GraphController gc = Lookup.getDefault().lookup(GraphController.class);
                     DirectedGraph graph = null;
-                    if (gc.getModel().getGraph() instanceof DirectedGraph) {
-                        graph = (DirectedGraph) gc.getModel().getGraph();
+                    if (gc.getModel().getGraphVisible() instanceof DirectedGraph) {
+                        graph = (DirectedGraph) gc.getModel().getGraphVisible();
                     } else {
                         return;
                     }

File: ToolsPlugin/src/org/gephi/tools/plugin/ShortestPath.java
Patch:
@@ -92,8 +92,8 @@ public void clickNodes(Node[] nodes) {
                     Node targetNode = n;
                     GraphController gc = Lookup.getDefault().lookup(GraphController.class);
                     DirectedGraph graph = null;
-                    if (gc.getModel().getGraph() instanceof DirectedGraph) {
-                        graph = (DirectedGraph) gc.getModel().getGraph();
+                    if (gc.getModel().getGraphVisible() instanceof DirectedGraph) {
+                        graph = (DirectedGraph) gc.getModel().getGraphVisible();
                     } else {
                         return;
                     }

File: ToolsPlugin/src/org/gephi/tools/plugin/Sizer.java
Patch:
@@ -110,7 +110,7 @@ public String getName() {
             }
 
             public Icon getIcon() {
-                return new ImageIcon(getClass().getResource("/org/gephi/tools/plugin/resources/painter.png"));
+                return new ImageIcon(getClass().getResource("/org/gephi/tools/plugin/resources/sizer.png"));
             }
 
             public String getDescription() {

File: ToolsPlugin/src/org/gephi/ui/tools/plugin/BrushPanel.java
Patch:
@@ -129,7 +129,7 @@ private void initComponents() {
                 .addComponent(labelColor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addComponent(colorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addComponent(labelIntensity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
-                .addComponent(intensitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
+                .addComponent(intensitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addComponent(jLabel1))
             .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                 .addComponent(diffusionCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)

File: FiltersPlugin/src/org/gephi/filters/plugin/hierarchy/LevelBuilder.java
Patch:
@@ -23,7 +23,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = FilterBuilder.class)
+//@ServiceProvider(service = FilterBuilder.class)
 public class LevelBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -179,7 +179,9 @@ private void updateEdges(HierarchicalGraph graph) {
         edgeIterable = graph.getEdges();
 
         for (Edge edge : edgeIterable) {
-            assert edge.getSource().getNodeData().getModel() != null && edge.getTarget().getNodeData().getModel() != null;
+            if(edge.getSource().getNodeData().getModel() == null || edge.getTarget().getNodeData().getModel() == null) {
+                continue;
+            }
             Model obj = edge.getEdgeData().getModel();
             if (obj == null) {
                 //Model is null, ADD

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingChooser.java
Patch:
@@ -338,7 +338,7 @@ private void initComponents() {
         controlPanel.setOpaque(false);
         controlPanel.setLayout(new java.awt.GridBagLayout());
 
-        applyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/ui/ranking/apply.gif"))); // NOI18N
+        applyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/desktop/ranking/resources/apply.gif"))); // NOI18N
         applyButton.setText(org.openide.util.NbBundle.getMessage(RankingChooser.class, "RankingChooser.applyButton.text")); // NOI18N
         applyButton.setToolTipText(org.openide.util.NbBundle.getMessage(RankingChooser.class, "RankingChooser.applyButton.toolTipText")); // NOI18N
         applyButton.setMargin(new java.awt.Insets(0, 14, 0, 14));

File: RankingPluginUI/src/org/gephi/ui/ranking/plugin/ColorTransformerUI.java
Patch:
@@ -36,11 +36,11 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = TransformerUI.class)
+@ServiceProvider(service = TransformerUI.class, position = 100)
 public class ColorTransformerUI implements TransformerUI {
 
     public Icon getIcon() {
-        return new ImageIcon(getClass().getResource("/org/gephi/ui/ranking/plugin/resourcescolor.png"));
+        return new ImageIcon(getClass().getResource("/org/gephi/ui/ranking/plugin/resources/color.png"));
     }
 
     public String getName() {

File: RankingPluginUI/src/org/gephi/ui/ranking/plugin/LabelColorTransformerUI.java
Patch:
@@ -36,7 +36,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = TransformerUI.class)
+@ServiceProvider(service = TransformerUI.class, position = 300)
 public class LabelColorTransformerUI implements TransformerUI {
 
     public Icon getIcon() {

File: RankingPluginUI/src/org/gephi/ui/ranking/plugin/LabelSizeTransformerUI.java
Patch:
@@ -36,7 +36,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = TransformerUI.class)
+@ServiceProvider(service = TransformerUI.class, position = 400)
 public class LabelSizeTransformerUI implements TransformerUI {
 
     public Icon getIcon() {

File: RankingPluginUI/src/org/gephi/ui/ranking/plugin/SizeTransformerUI.java
Patch:
@@ -36,11 +36,11 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = TransformerUI.class)
+@ServiceProvider(service = TransformerUI.class, position = 200)
 public class SizeTransformerUI implements TransformerUI {
 
     public Icon getIcon() {
-        return new ImageIcon(getClass().getResource("/org/gephi/ui/ranking/plugn/resources/size.png"));
+        return new ImageIcon(getClass().getResource("/org/gephi/ui/ranking/plugin/resources/size.png"));
     }
 
     public String getName() {

File: ProjectAPI/src/org/gephi/project/io/SaveTask.java
Patch:
@@ -82,7 +82,7 @@ public void run() {
             }
 
             //Stream
-            int zipLevel = NbPreferences.forModule(SaveTask.class).getInt(ZIP_LEVEL_PREFERENCE, 0);
+            int zipLevel = NbPreferences.forModule(SaveTask.class).getInt(ZIP_LEVEL_PREFERENCE, 9);
             FileOutputStream outputStream = new FileOutputStream(writeFile);
             zipOut = new ZipOutputStream(outputStream);
             zipOut.setLevel(zipLevel);

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewTopComponent.java
Patch:
@@ -330,6 +330,7 @@ public Object readResolve() {
      * Refresh the preview applet.
      */
     public void refreshPreview() {
+        System.out.println("sketch refresh "+sketch);
         sketch.refresh();
     }
 

File: PreviewImpl/src/org/gephi/preview/PreviewModelImpl.java
Patch:
@@ -62,6 +62,7 @@ public PreviewModelImpl() {
         biEdgeSupervisor = new BidirectionalEdgeSupervisorImpl();
         undirectedEdgeSupervisor = new UndirectedEdgeSupervisorImpl();
         currentPreset = new DefaultPreset();
+        applyPreset(currentPreset);
     }
 
     public void select(Workspace workspace) {

File: PreviewImpl/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -111,7 +111,7 @@ public Graph getPartialGraph(float visibilityRatio) {
     }
 
     public GraphSheet getGraphSheet() {
-        if (model != null) {
+        if (model != null && previewGraph != null) {
             if (model.isUpdateFlag() || null == graphSheet || graphSheet.getGraph() != previewGraph) {
                 graphSheet = new GraphSheetImpl(getGraph());
             }
@@ -121,7 +121,7 @@ public GraphSheet getGraphSheet() {
     }
 
     public GraphSheet getPartialGraphSheet(float visibilityRatio) {
-        if (model != null) {
+        if (model != null && previewGraph != null) {
             if (model.isUpdateFlag() || null == partialGraphSheet
                     || ((PartialGraphImpl) partialGraphSheet.getGraph()).getVisibilityRatio() != visibilityRatio) {
                 partialGraphSheet = new GraphSheetImpl(getPartialGraph(visibilityRatio));
@@ -140,7 +140,6 @@ public GraphSheet getPartialGraphSheet(float visibilityRatio) {
      * @see PreviewController#buildGraph()
      */
     public void buildGraph() {
-        System.out.println("preview build graph");
         GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
         model.clearSupervisors();
 

File: PreviewImpl/src/org/gephi/preview/supervisors/GlobalEdgeSupervisorImpl.java
Patch:
@@ -66,7 +66,7 @@ public SupervisorPropery[] getProperties() {
         final String CATEGORY = "Edge";
         try {
             return new SupervisorPropery[]{
-                        SupervisorPropery.createProperty(this, Boolean.class, "showFlag", CATEGORY, "Show")};
+                        SupervisorPropery.createProperty(this, Boolean.class, "GlobalEdge_showFlag", CATEGORY, "Show", "getShowFlag", "setShowFlag")};
         } catch (Exception e) {
             e.printStackTrace();
         }

File: PreviewImpl/src/org/gephi/preview/supervisors/SelfLoopSupervisorImpl.java
Patch:
@@ -120,9 +120,9 @@ public SupervisorPropery[] getProperties() {
         final String CATEGORY = "Self-Loop";
         try {
             return new SupervisorPropery[]{
-                        SupervisorPropery.createProperty(this, Boolean.class, "showFlag", CATEGORY, "Show"),
-                        SupervisorPropery.createProperty(this, Float.class, "edgeScale", CATEGORY, "Thickness"),
-                        SupervisorPropery.createProperty(this, EdgeColorizer.class, "colorizer", CATEGORY, "Color", EdgeColorizerPropertyEditor.class)};
+                        SupervisorPropery.createProperty(this, Boolean.class, "SelfLoop_showFlag", CATEGORY, "Show", "getShowFlag", "setShowFlag"),
+                        SupervisorPropery.createProperty(this, Float.class, "SelfLoop_edgeScale", CATEGORY, "Thickness", "getEdgeScale", "setEdgeScale"),
+                        SupervisorPropery.createProperty(this, EdgeColorizer.class, "SelfLoop_colorizer", CATEGORY, "Color", "getColorizer", "setColorizer", EdgeColorizerPropertyEditor.class)};
         } catch (Exception e) {
             e.printStackTrace();
         }

File: LayoutPlugin/src/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -63,7 +63,7 @@ public ForceAtlasLayout(LayoutBuilder layoutBuilder) {
 
     public void resetPropertiesValues() {
         inertia = 0.1;
-        setRepulsionStrength(5000d);
+        setRepulsionStrength(200d);
         setAttractionStrength(10d);
         setMaxDisplacement(10d);
         setFreezeBalance(true);

File: TimelinePluginUI/src/org/gephi/ui/timeline/plugin/drawers/minimal/MinimalDrawerSettings.java
Patch:
@@ -154,10 +154,10 @@ public MinimalDrawerSettings() {
 
         tip.fontSize = 12;
         tip.font = new Font("DejaVu Sans Mono", 0, graduations.fontSize);
-        tip.fontColor = new Color(25, 25, 25, 180);
+        tip.fontColor = new Color(25, 25, 25, 160);
         tip.fontMetrics = new FontMetrics(graduations.font) {
         };
-        tip.backgroundColor = new Color(255, 255, 255, 180);
+        tip.backgroundColor = new Color(255, 255, 255, 160);
 
         hookLength = 16;
 

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -317,6 +317,9 @@ public void closeLoader() {
         } else if (parameters.getEdgeDefault().equals(EdgeDefault.MIXED)) {
             //Clean undirected edges when graph is mixed
             for (EdgeDraftImpl edge : edgeMap.values().toArray(new EdgeDraftImpl[0])) {
+                if(edge.getType()==null) {
+                    edge.setType(EdgeDraft.EdgeType.UNDIRECTED);
+                }
                 if (edge.getType().equals(EdgeDraft.EdgeType.UNDIRECTED)) {
                     String oppositekey = edge.getTarget().getId() + "-" + edge.getSource().getId();
                     EdgeDraftImpl opposite = edgeSourceTargetMap.get(oppositekey);

File: DHNSGraph/src/org/gephi/graph/dhns/edge/MetaEdgeImpl.java
Patch:
@@ -76,7 +76,7 @@ public AbstractEdge getUndirected() {
         if (source == target) {
             return this;
         }
-        AbstractEdge mutual = source.getEdgesInTree().getItem(target.getNumber());
+        AbstractEdge mutual = source.getMetaEdgesInTree().getItem(target.getNumber());
         if (mutual != null && mutual.getId() < ID) {
             return mutual;
         }

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImpl.java
Patch:
@@ -237,14 +237,14 @@ public boolean isDirected(Edge edge) {
     public EdgeIterable getInnerEdges(Node nodeGroup) {
         readLock();
         AbstractNode absNode = checkNode(nodeGroup);
-        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, absNode, absNode, true, false, Tautology.instance, Tautology.instance));
+        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, view.getViewId(), absNode, absNode, true, false, Tautology.instance, Tautology.instance));
     }
 
     //ClusteredGraph
     public EdgeIterable getOuterEdges(Node nodeGroup) {
         readLock();
         AbstractNode absNode = checkNode(nodeGroup);
-        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, absNode, absNode, false, false, Tautology.instance, Tautology.instance));
+        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, view.getViewId(), absNode, absNode, false, false, Tautology.instance, Tautology.instance));
     }
 
     //ClusteredGraph

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImpl.java
Patch:
@@ -189,13 +189,13 @@ public Edge getEdge(Node node1, Node node2) {
     public EdgeIterable getInnerEdges(Node nodeGroup) {
         readLock();
         AbstractNode absNode = checkNode(nodeGroup);
-        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, absNode, absNode, true, true, Tautology.instance, Tautology.instance));
+        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, view.getViewId(), absNode, absNode, true, true, Tautology.instance, Tautology.instance));
     }
 
     public EdgeIterable getOuterEdges(Node nodeGroup) {
         readLock();
         AbstractNode absNode = checkNode(nodeGroup);
-        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, absNode, absNode, false, true, Tautology.instance, Tautology.instance));
+        return dhns.newEdgeIterable(new RangeEdgeIterator(structure, view.getViewId(), absNode, absNode, false, true, Tautology.instance, Tautology.instance));
     }
 
     public int getMetaDegree(Node node) {

File: ProcessorPlugin/src/org/gephi/io/processor/plugin/DefaultProcessor.java
Patch:
@@ -69,15 +69,15 @@ public void process(Workspace workspace, ContainerUnloader container) {
             case MIXED:
                 graph = graphModel.getHierarchicalMixedGraph();
                 break;
+            default:
+                graph = graphModel.getHierarchicalMixedGraph();
+                break;
         }
         GraphFactory factory = graphModel.factory();
 
         //Attributes - Creates columns for properties
         AttributeModel attributeModel = Lookup.getDefault().lookup(AttributeController.class).getModel();
         attributeModel.mergeModel(container.getAttributeModel());
-        //nodeLabelColumn = attributeController.getTemporaryAttributeManager().getNodeTable().addColumn("label", AttributeType.STRING);
-        //edgeLabelColumn = attributeController.getTemporaryAttributeManager().getEdgeTable().addColumn("label", AttributeType.STRING);
-        //edgeWeightColumn = attributeController.getTemporaryAttributeManager().getEdgeTable().addColumn("weight", AttributeType.FLOAT);
 
         int nodeCount = 0;
         //Create all nodes

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java
Patch:
@@ -23,6 +23,7 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.InputStreamReader;
 import java.io.LineNumberReader;
 import java.util.ArrayList;
 import java.util.logging.Level;
@@ -320,7 +321,7 @@ private void finishImport(Container container) {
     private LineNumberReader getTextReader(FileObject fileObject) throws RuntimeException {
         try {
             LineNumberReader reader;
-            CharsetToolkit charsetToolkit = new CharsetToolkit(FileUtil.toFile(fileObject));
+            CharsetToolkit charsetToolkit = new CharsetToolkit(fileObject);
             reader = (LineNumberReader) charsetToolkit.getReader();
             return reader;
         } catch (FileNotFoundException ex) {

File: TimelinePluginUI/src/org/gephi/ui/timeline/plugin/drawers/minimal/MinimalDrawer.java
Patch:
@@ -106,7 +106,7 @@ public TimelineAnimator getAnimator() {
     private static Cursor CURSOR_CENTRAL_HOOK = new Cursor(Cursor.MOVE_CURSOR);
     private static Cursor CURSOR_RIGHT_HOOK = new Cursor(Cursor.W_RESIZE_CURSOR);
 
-    private static Locale LOCALE = Locale.FRENCH;
+    private static Locale LOCALE = Locale.ENGLISH;
     
     public void mouseClicked(MouseEvent e) {
         //throw new UnsupportedOperationException("Not supported yet.");

File: DesktopGenerate/src/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -126,6 +126,6 @@ private void finishGenerate(Container container) {
             pc.setSource(workspace, container.getSource());
         }
 
-        Lookup.getDefault().lookup(Processor.class).process(container.getUnloader());
+        Lookup.getDefault().lookup(Processor.class).process(workspace, container.getUnloader());
     }
 }

File: DesktopImport/src/org/gephi/desktop/importer/DesktopImportController.java
Patch:
@@ -306,7 +306,7 @@ private void finishImport(Container container) {
                     scaler.doScale(container);
                 }
             }
-            Lookup.getDefault().lookup(Processor.class).process(container.getUnloader());
+            Lookup.getDefault().lookup(Processor.class).process(workspace, container.getUnloader());
 
             //StatusLine notify
             String source = container.getSource();

File: ImportAPI/src/org/gephi/io/importer/api/EdgeDraft.java
Patch:
@@ -76,4 +76,6 @@ public enum EdgeType {
     public void setTarget(NodeDraft nodeTarget);
 
     public void addAttributeValue(AttributeColumn column, Object value);
+
+    public void addTimeSlice(String dateFrom, String dateTo);
 }

File: ImportAPI/src/org/gephi/io/importer/api/NodeDraft.java
Patch:
@@ -78,7 +78,5 @@ public interface NodeDraft {
 
     public void setParent(NodeDraft draft);
 
-    public void setDynamicFrom(float from);
-
-    public void setDynamicTo(float to);
+    public void addTimeSlice(String dateFrom, String dateTo);
 }

File: ImportAPI/src/org/gephi/io/importer/api/NodeDraftGetter.java
Patch:
@@ -63,7 +63,5 @@ public interface NodeDraftGetter extends NodeDraft {
 
     public NodeDraftGetter[] getParents();
 
-    public float getDynamicFrom();
-
-    public float getDynamicTo();
+    public List<String[]> getSlices();
 }

File: ImportAPI/src/org/gephi/io/importer/impl/ImportContainerImpl.java
Patch:
@@ -111,7 +111,7 @@ public void addNode(NodeDraft nodeDraft) {
             return;
         }
 
-        if (nodeDraftImpl.getDynamicFrom() != -1 || nodeDraftImpl.getDynamicTo() != -1) {
+        if (nodeDraftImpl.getSlices() != null) {
             dynamicGraph = true;
         }
 

File: ImportAPI/src/org/gephi/io/processor/spi/Processor.java
Patch:
@@ -21,12 +21,13 @@
 package org.gephi.io.processor.spi;
 
 import org.gephi.io.importer.api.ContainerUnloader;
+import org.gephi.project.api.Workspace;
 
 /**
  *
  * @author Mathieu Bastian
  */
 public interface Processor {
 
-    public void process(ContainerUnloader container);
+    public void process(Workspace workspace, ContainerUnloader container);
 }

File: TimelinePluginUI/src/org/gephi/ui/timeline/plugin/drawers/minimal/MinimalDrawer.java
Patch:
@@ -561,6 +561,7 @@ public void mouseReleased(MouseEvent evt) {
     }
 
     public void mouseMoved(MouseEvent evt) {
+    if (model==null) return;
 
         //System.out.println("mouse moved");
         int x = evt.getX();

File: TimelineAPI/src/org/gephi/timeline/api/TimelineModel.java
Patch:
@@ -55,7 +55,7 @@ public interface TimelineModel {
 
     // set the range using real values
     public void setRangeFromRealValues(double from, double to);
-    public void setRangeFromFloatValues(double from, double to);
+    public void setRangeFromFloat(double from, double to);
 
     public void setFromFloat(double from);
     public void setToFloat(double to);

File: DesktopPreview/src/org/gephi/desktop/preview/PreviewSettingsTopComponent.java
Patch:
@@ -89,6 +89,7 @@ public void itemStateChanged(ItemEvent e) {
                 }
             }
         });
+        refreshModel();
     }
 
     public void refreshModel() {

File: LayoutPlugin/src/org/gephi/layout/plugin/forceAtlas/ForceAtlasLayout.java
Patch:
@@ -198,6 +198,9 @@ public void goAlgo() {
     }
 
     public void endAlgo() {
+        for (Node n : graph.getNodes()) {
+            n.getNodeData().setLayoutData(null);
+        }
     }
 
     @Override

File: LayoutPlugin/src/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
Patch:
@@ -99,6 +99,9 @@ public void goAlgo() {
     }
 
     public void endAlgo() {
+        for (Node n : graph.getNodes()) {
+            n.getNodeData().setLayoutData(null);
+        }
     }
 
     public LayoutProperty[] getProperties() {

File: UIComponents/src/org/gephi/ui/components/JLazyComboBox.java
Patch:
@@ -121,10 +121,10 @@ public LazyComboBoxModel() {
         void populate() {
             final Object[] list = loadItems();
             reset = false;
+            removeAllElements();
             SwingUtilities.invokeLater(new Runnable() {
 
                 public void run() {
-                    removeAllElements();
                     addElement(getInitialSelection());
                     for (Object o : list) {
                         addElement(o);

File: DesktopFilters/src/org/gephi/filters/impl/FilterThread.java
Patch:
@@ -106,6 +106,7 @@ private void select(AbstractQueryImpl query) {
         System.out.println("#Nodes: " + result.getNodeCount());
         System.out.println("#Edges: " + result.getEdgeCount());
         if (running) {
+            VizController.getInstance().getVizModel().setAutoSelectNeighbor(false);
             VizController.getInstance().getSelectionManager().selectNodes(result.getNodes().toArray());
             VizController.getInstance().getSelectionManager().selectEdges(result.getEdges().toArray());
         } else {

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -92,7 +92,7 @@ public class VizConfig {
     public static final boolean DEFAULT_EDGE_LABELS = false;
     public static final boolean DEFAULT_SHOW_EDGES = true;
     public static final boolean DEFAULT_HIGHLIGHT = true;
-    public static final boolean DEFAULT_NEIGHBOUR_SELECT = true;
+    public static final boolean DEFAULT_NEIGHBOUR_SELECT = false;
     public static final boolean DEFAULT_HIDE_NONSELECTED_EDGES = false;
     public static final boolean DEFAULT_SELECTEDNODE_UNIQUE_COLOR = false;
     public static final boolean DEFAULT_EDGE_HAS_UNIQUE_COLOR = false;

File: DesktopFilters/src/org/gephi/filters/impl/FilterThread.java
Patch:
@@ -106,6 +106,7 @@ private void select(AbstractQueryImpl query) {
         System.out.println("#Nodes: " + result.getNodeCount());
         System.out.println("#Edges: " + result.getEdgeCount());
         if (running) {
+            VizController.getInstance().getVizModel().setAutoSelectNeighbor(false);
             VizController.getInstance().getSelectionManager().selectNodes(result.getNodes().toArray());
             VizController.getInstance().getSelectionManager().selectEdges(result.getEdges().toArray());
         } else {

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -92,7 +92,7 @@ public class VizConfig {
     public static final boolean DEFAULT_EDGE_LABELS = false;
     public static final boolean DEFAULT_SHOW_EDGES = true;
     public static final boolean DEFAULT_HIGHLIGHT = true;
-    public static final boolean DEFAULT_NEIGHBOUR_SELECT = true;
+    public static final boolean DEFAULT_NEIGHBOUR_SELECT = false;
     public static final boolean DEFAULT_HIDE_NONSELECTED_EDGES = false;
     public static final boolean DEFAULT_SELECTEDNODE_UNIQUE_COLOR = false;
     public static final boolean DEFAULT_EDGE_HAS_UNIQUE_COLOR = false;

File: DesktopBranding/src/org/gephi/branding/desktop/group/LaboratoryGroup.java
Patch:
@@ -21,6 +21,7 @@
 package org.gephi.branding.desktop.group;
 
 import javax.swing.Icon;
+import org.openide.util.ImageUtilities;
 
 /**
  *
@@ -29,7 +30,7 @@
 public class LaboratoryGroup implements ComponentGroup {
 
     public Icon getIcon() {
-        return null;
+        return ImageUtilities.loadImageIcon("org/gephi/branding/desktop/group/laboratory.png", false);
     }
 
     public String getDisplayName() {

File: DesktopBranding/src/org/gephi/branding/desktop/group/OverviewGroup.java
Patch:
@@ -21,6 +21,7 @@
 package org.gephi.branding.desktop.group;
 
 import javax.swing.Icon;
+import org.openide.util.ImageUtilities;
 
 /**
  *
@@ -29,7 +30,7 @@
 public class OverviewGroup implements ComponentGroup {
 
     public Icon getIcon() {
-        return null;
+        return ImageUtilities.loadImageIcon("org/gephi/branding/desktop/group/overview.png", false);
     }
 
     public String getDisplayName() {

File: DesktopBranding/src/org/gephi/branding/desktop/group/PreviewGroup.java
Patch:
@@ -21,6 +21,7 @@
 package org.gephi.branding.desktop.group;
 
 import javax.swing.Icon;
+import org.openide.util.ImageUtilities;
 
 /**
  *
@@ -29,7 +30,7 @@
 public class PreviewGroup implements ComponentGroup {
 
     public Icon getIcon() {
-        return null;
+        return ImageUtilities.loadImageIcon("org/gephi/branding/desktop/group/preview.png", false);
     }
 
     public String getDisplayName() {

File: LayoutAPI/src/org/gephi/layout/LayoutModelImpl.java
Patch:
@@ -71,7 +71,7 @@ public void taskFinished(LongTask task) {
         executor.setDefaultErrorHandler(new LongTaskErrorHandler() {
 
             public void fatalError(Throwable t) {
-                Logger.getLogger("").log(Level.SEVERE, "", t.getCause());
+                Logger.getLogger("").log(Level.SEVERE, "", t.getCause() != null ? t.getCause() : t);
             }
         });
     }

File: AttributesImpl/src/org/gephi/data/attributes/AttributeModelDuplicateProvider.java
Patch:
@@ -13,7 +13,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = WorkspaceDuplicateProvider.class)
+@ServiceProvider(service = WorkspaceDuplicateProvider.class, position = 100)
 public class AttributeModelDuplicateProvider implements WorkspaceDuplicateProvider {
 
     public void duplicate(Workspace source, Workspace destination) {

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsGraphController.java
Patch:
@@ -43,7 +43,7 @@
  */
 @ServiceProviders({
     @ServiceProvider(service = GraphController.class),
-    @ServiceProvider(service = WorkspaceDuplicateProvider.class)})
+    @ServiceProvider(service = WorkspaceDuplicateProvider.class, position = 1000)})
 public class DhnsGraphController implements GraphController, WorkspaceDuplicateProvider {
 
     //Common architecture

File: DHNSGraph/src/org/gephi/graph/dhns/core/DuplicateManager.java
Patch:
@@ -25,7 +25,7 @@ public DuplicateManager(Dhns dhns) {
     }
 
     public void duplicate(Dhns destination) {
-        //duplicate(destination, dhns.getGraphStructure().getMainView());
+//        duplicate(destination, dhns.getGraphStructure().getMainView());
     }
 
     public void duplicate(Dhns destination, GraphViewImpl view) {

File: ProjectAPI/src/org/gephi/project/impl/ProjectControllerImpl.java
Patch:
@@ -469,7 +469,7 @@ public Workspace duplicateWorkspace(Workspace workspace) {
             for (WorkspaceDuplicateProvider dp : Lookup.getDefault().lookupAll(WorkspaceDuplicateProvider.class)) {
                 dp.duplicate(workspace, duplicate);
             }
-            openWorkspace(workspace);
+            openWorkspace(duplicate);
             return duplicate;
         }
         return null;

File: DHNSGraph/src/org/gephi/graph/dhns/core/Dhns.java
Patch:
@@ -28,6 +28,7 @@
 import org.gephi.graph.api.DirectedGraph;
 import org.gephi.graph.api.EdgeIterable;
 import org.gephi.graph.api.Graph;
+import org.gephi.graph.api.GraphEvent.EventType;
 import org.gephi.graph.api.GraphListener;
 import org.gephi.graph.api.GraphModel;
 import org.gephi.graph.api.GraphSettings;
@@ -404,6 +405,8 @@ public void pushFrom(Graph graph) {
         }
         Dhns source = (Dhns) graphImpl.getGraphModel();
         source.getDuplicateManager().duplicate(this, (GraphViewImpl) graphImpl.getView());
+        graphVersion.incNodeAndEdgeVersion();
+        eventManager.fireEvent(EventType.NODES_AND_EDGES_UPDATED);
     }
 
     public void clear() {

File: VisualizationModule/src/org/gephi/visualization/VizController.java
Patch:
@@ -131,6 +131,7 @@ public void initialize(Workspace workspace) {
 
             public void select(Workspace workspace) {
                 engine.reinit();
+                dataBridge.resetGraph();
             }
 
             public void unselect(Workspace workspace) {

File: VisualizationModule/src/org/gephi/visualization/bridge/DataBridge.java
Patch:
@@ -33,4 +33,6 @@ public interface DataBridge {
     public boolean requireUpdate();
 
     public void reset();
+
+    public void resetGraph();
 }

File: AttributesImpl/src/org/gephi/data/attributes/AttributeFactoryImpl.java
Patch:
@@ -38,6 +38,9 @@ public AttributeFactoryImpl(AbstractAttributeModel model) {
     }
 
     public AttributeValue newValue(AttributeColumn column, Object value) {
+        if (value == null) {
+            return new AttributeValueImpl((AttributeColumnImpl) column, null);
+        }
         if (value.getClass() != column.getType().getType() && value.getClass() == String.class) {
             value = column.getType().parse((String) value);
         }

File: ClusteringAPI/src/org/gephi/clustering/api/ClusteringController.java
Patch:
@@ -30,6 +30,8 @@ public interface ClusteringController {
 
     public void clusterize(Clusterer clusterer);
 
+    public void cancelClusterize(Clusterer clusterer);
+
     public void selectCluster(Cluster cluster);
 
     public void groupCluster(Cluster cluster);

File: ClusteringAPI/src/org/gephi/clustering/spi/Clusterer.java
Patch:
@@ -21,15 +21,15 @@
 package org.gephi.clustering.spi;
 
 import org.gephi.clustering.api.Cluster;
-import org.gephi.graph.api.Graph;
+import org.gephi.graph.api.GraphModel;
 
 /**
  *
  * @author Mathieu Bastian
  */
 public interface Clusterer {
 
-    public void execute(Graph graph);
+    public void execute(GraphModel graphModel);
 
     public Cluster[] getClusters();
 }

File: DesktopLayout/src/org/gephi/desktop/layout/LayoutPanel.java
Patch:
@@ -228,7 +228,7 @@ private void refreshEnable() {
     }
 
     private void setSelectedLayout(LayoutBuilder builder) {
-        controller.setLayout(model.getLayout(builder));
+        controller.setLayout(builder != null ? model.getLayout(builder) : null);
     }
 
     private void reset() {

File: AttributesImpl/src/org/gephi/data/attributes/model/IndexedAttributeModel.java
Patch:
@@ -23,6 +23,7 @@
 import org.gephi.data.attributes.AbstractAttributeModel;
 import org.gephi.data.attributes.api.AttributeType;
 import org.gephi.data.attributes.type.StringList;
+import org.gephi.data.attributes.type.TimeInterval;
 
 /**
  *
@@ -50,6 +51,8 @@ public Object getManagedValue(Object obj, AttributeType attributeType) {
                 return dataIndex.pushData((String) obj);
             case LIST_STRING:
                 return dataIndex.pushData((StringList) obj);
+            case TIME_INTERVAL:
+                return dataIndex.pushData((TimeInterval) obj);
         }
         return obj;
     }

File: ClusteringAPI/src/org/gephi/clustering/api/Cluster.java
Patch:
@@ -18,7 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.api;
+package org.gephi.clustering.api;
 
 import org.gephi.graph.api.Node;
 

File: ClusteringAPI/src/org/gephi/clustering/api/ClusteringController.java
Patch:
@@ -18,7 +18,9 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.api;
+package org.gephi.clustering.api;
+
+import org.gephi.clustering.spi.Clusterer;
 
 /**
  *

File: ClusteringAPI/src/org/gephi/clustering/api/ClusteringModel.java
Patch:
@@ -18,9 +18,10 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.api;
+package org.gephi.clustering.api;
 
 import javax.swing.event.ChangeListener;
+import org.gephi.clustering.spi.Clusterer;
 
 /**
  *

File: ClusteringAPI/src/org/gephi/clustering/spi/Clusterer.java
Patch:
@@ -18,8 +18,9 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.api;
+package org.gephi.clustering.spi;
 
+import org.gephi.clustering.api.Cluster;
 import org.gephi.graph.api.Graph;
 
 /**

File: ClusteringAPI/src/org/gephi/clustering/spi/ClustererBuilder.java
Patch:
@@ -18,7 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.api;
+package org.gephi.clustering.spi;
 
 /**
  *

File: ClusteringAPI/src/org/gephi/clustering/spi/ClustererUI.java
Patch:
@@ -18,7 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.api;
+package org.gephi.clustering.spi;
 
 import javax.swing.JPanel;
 

File: ClusteringPlugin/src/org/gephi/clustering/plugin/mcl/MarkovClusteringPanel.java
Patch:
@@ -18,9 +18,9 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.mcl;
+package org.gephi.clustering.plugin.mcl;
 
-import org.gephi.algorithms.cluster.api.Clusterer;
+import org.gephi.clustering.spi.Clusterer;
 
 /**
  *

File: ClusteringPlugin/src/org/gephi/clustering/plugin/mcl/SparseMatrix.java
Patch:
@@ -18,7 +18,7 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.mcl;
+package org.gephi.clustering.plugin.mcl;
 
 import java.util.ArrayList;
 import java.util.Collections;

File: ClusteringPlugin/src/org/gephi/clustering/plugin/mcl/SparseVector.java
Patch:
@@ -18,12 +18,11 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.algorithms.cluster.mcl;
+package org.gephi.clustering.plugin.mcl;
 
 import java.util.HashMap;
 import java.util.Iterator;
 
-
 /**
  * SparseVector represents a sparse vector.
  * <p>
@@ -280,7 +279,6 @@ public String toString() {
         return sb.toString();
     }
 
-
     /**
      * get dense represenation
      *

File: DesktopClustering/src/org/gephi/desktop/clustering/ClusterExplorer.java
Patch:
@@ -18,10 +18,10 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.desktop.algorithms.cluster;
+package org.gephi.desktop.clustering;
 
 import javax.swing.JPanel;
-import org.gephi.algorithms.cluster.api.Cluster;
+import org.gephi.clustering.api.Cluster;
 import org.openide.explorer.ExplorerManager;
 import org.openide.explorer.view.BeanTreeView;
 import org.openide.nodes.AbstractNode;

File: DesktopClustering/src/org/gephi/desktop/clustering/ClustersChildren.java
Patch:
@@ -18,9 +18,9 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.desktop.algorithms.cluster;
+package org.gephi.desktop.clustering;
 
-import org.gephi.algorithms.cluster.api.Cluster;
+import org.gephi.clustering.api.Cluster;
 import org.openide.nodes.Children;
 import org.openide.nodes.Node;
 

File: DesktopPartition/src/org/gephi/desktop/partition/PartitionChooser.java
Patch:
@@ -371,6 +371,7 @@ private JLazyComboBox.LazyComboBoxModel newLazyModel() {
             protected Object[] loadItems() {
                 PartitionController pc = Lookup.getDefault().lookup(PartitionController.class);
                 pc.refreshPartitions();
+                
                 if (model.getSelectedPartitioning() == PartitionModel.NODE_PARTITIONING) {
                     return model.getNodePartitions();
                 } else if (model.getSelectedPartitioning() == PartitionModel.EDGE_PARTITIONING) {

File: ProjectAPI/src/org/gephi/project/io/GephiDataLoader.java
Patch:
@@ -35,7 +35,7 @@ public class GephiDataLoader extends UniFileLoader {
     public static final String REQUIRED_MIME = "application/gephi";
 
     public GephiDataLoader() {
-        super("org.gephi.io.project.GephiDataObject");
+        super("org.gephi.project.io.GephiDataObject");
     }
 
     @Override

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java
Patch:
@@ -289,6 +289,7 @@ public String getName() {
         }
 
         public boolean init(Graph graph) {
+            values = new ArrayList<Object>();
             return true;
         }
 

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java
Patch:
@@ -281,7 +281,7 @@ public EqualNumberFilter(AttributeColumn column) {
             }
             Object[] valuesArray = vals.toArray();
             min = AttributeUtils.getDefault().getMin(column, valuesArray);
-            max = AttributeUtils.getDefault().getMin(column, valuesArray);
+            max = AttributeUtils.getDefault().getMax(column, valuesArray);
         }
 
         public String getName() {

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java
Patch:
@@ -163,7 +163,6 @@ public boolean evaluate(Graph graph, Edge edge) {
         }
 
         public void finish() {
-            throw new UnsupportedOperationException("Not supported yet.");
         }
 
         public FilterProperty[] getProperties() {

File: GraphAPI/src/org/gephi/graph/api/GraphModel.java
Patch:
@@ -41,6 +41,8 @@ public interface GraphModel {
 
     public void setVisibleView(GraphView view);
 
+    public GraphView getVisibleView();
+
     public Graph getGraph();
 
     public DirectedGraph getDirectedGraph();

File: DHNSGraph/src/org/gephi/graph/dhns/core/SettingsManager.java
Patch:
@@ -35,7 +35,6 @@
 public class SettingsManager implements GraphSettings {
 
     private Dhns dhns;
-
     //Settings
     private Boolean allowMultilevel;
     private Boolean autoMetaEdgeCreation;

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImpl.java
Patch:
@@ -147,8 +147,8 @@ public int getLevelSize(int level) {
         int res = structure.getLevelSize(level);
         /*int res = 0;
         for (LevelIterator itr = new LevelIterator(structure, level, Tautology.instance); itr.hasNext();) {
-            itr.next();
-            res++;
+        itr.next();
+        res++;
         }*/
         return res;
     }

File: DHNSGraph/src/org/gephi/graph/dhns/core/Dhns.java
Patch:
@@ -223,7 +223,7 @@ public void setMixed(boolean mixed) {
     }
 
     public boolean isHierarchical() {
-        return graphStructure.getMainView().getStructure().treeHeight - 1 > 0;       //height>0
+        return graphStructure.getMainView().getStructure().getTreeHeight() - 1 > 0;       //height>0
     }
 
     public boolean isDynamic() {

File: DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java
Patch:
@@ -60,7 +60,7 @@ public EdgeProcessor getEdgeProcessor() {
 
     public void expand(AbstractNode node) {
         dhns.getWriteLock().lock();
-        if (node.level < treeStructure.treeHeight) {
+        if (node.level < treeStructure.getTreeHeight()) {
             business.expand(node);
         }
         graphVersion.incNodeAndEdgeVersion();
@@ -70,7 +70,7 @@ public void expand(AbstractNode node) {
 
     public void retract(AbstractNode node) {
         dhns.getWriteLock().lock();
-        if (node.level < treeStructure.treeHeight) {
+        if (node.level < treeStructure.getTreeHeight()) {
             business.retract(node);
         }
         graphVersion.incNodeAndEdgeVersion();

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestClusteredGraph.java
Patch:
@@ -651,7 +651,9 @@ public void testLevel() {
         graphGlobal2Directed.moveToGroup(nodeLevel0, graphGlobal2Directed.getTopNodes().toArray()[1]);
         assertEquals(2, graphGlobal2Directed.getHeight());
 
-        //graphGlobal2Directed.getNodes(2);
+        //Level after cancel the last move
+        graphGlobal2Directed.moveToGroup(nodeLevel0, dhnsGlobal2.getGraphStructure().getMainView().getStructure().getRoot());
+        assertEquals(1, graphGlobal2Directed.getHeight());
     }
 
     @Test

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImpl.java
Patch:
@@ -138,7 +138,7 @@ public int getMutualDegree(Node node) {
         int count = 0;
         if (absNode.getEdgesOutTree().getCount() > 0 && absNode.getEdgesInTree().getCount() > 0) {
             EdgeOppositeTree inTree = absNode.getEdgesInTree();
-            for (ParamAVLIterator<AbstractEdge> itr = new ParamAVLIterator<AbstractEdge>(); itr.hasNext();) {
+            for (ParamAVLIterator<AbstractEdge> itr = new ParamAVLIterator<AbstractEdge>(absNode.getEdgesOutTree()); itr.hasNext();) {
                 AbstractEdge edge = itr.next();
                 if (!edge.isSelfLoop()) {
                     if (inTree.hasNeighbour(edge.getTarget())) {

File: FiltersPlugin/src/org/gephi/filters/plugin/graph/MutualDegreeRangeBuilder.java
Patch:
@@ -31,6 +31,7 @@
 import org.gephi.filters.spi.Filter;
 import org.gephi.filters.spi.FilterBuilder;
 import org.gephi.filters.spi.FilterProperty;
+import org.gephi.filters.spi.NodeFilter;
 import org.gephi.graph.api.DirectedGraph;
 import org.gephi.graph.api.Graph;
 import org.gephi.graph.api.GraphController;
@@ -76,7 +77,7 @@ public JPanel getPanel(Filter filter) {
         return null;
     }
 
-    public static class MutualDegreeRangeFilter implements RangeFilter {
+    public static class MutualDegreeRangeFilter implements RangeFilter, NodeFilter {
 
         private Integer min = 0;
         private Integer max = 0;

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryExplorer.java
Patch:
@@ -110,7 +110,7 @@ public void propertyChange(PropertyChangeEvent evt) {
     }
 
     public void stateChanged(ChangeEvent e) {
-        System.out.println("model updated");
+        //System.out.println("model updated");
         saveExpandStatus(QueryExplorer.this.manager.getRootContext());
         QueryExplorer.this.manager.setRootContext(new RootNode(new QueryChildren(QueryExplorer.this.model.getQueries())));
         loadExpandStatus(QueryExplorer.this.manager.getRootContext());

File: DHNSGraph/src/org/gephi/graph/dhns/core/Dhns.java
Patch:
@@ -41,7 +41,6 @@
 import org.gephi.graph.api.Predicate;
 import org.gephi.graph.api.UndirectedGraph;
 import org.gephi.graph.api.GraphView;
-import org.gephi.graph.api.Views;
 import org.gephi.graph.dhns.DhnsGraphController;
 import org.gephi.graph.dhns.edge.AbstractEdge;
 import org.gephi.graph.dhns.edge.iterators.AbstractEdgeIterator;
@@ -403,6 +402,6 @@ public GraphView newView() {
     }
 
     public void setVisibleView(GraphView view) {
-        graphStructure.setVisibleView((GraphViewImpl)view);
+        graphStructure.setVisibleView(view != null ? (GraphViewImpl) view : null);
     }
 }

File: DesktopFilters/src/org/gephi/desktop/filters/FilterPanelPanel.java
Patch:
@@ -91,6 +91,7 @@ private void setQuery(Query query) {
                     setBorder(javax.swing.BorderFactory.createTitledBorder(query.getFilter().getName() + " " + settingsString));
                 }
             } catch (Exception e) {
+                e.printStackTrace();
             }
         }
 

File: DesktopFilters/src/org/gephi/filters/impl/FilterProcessor.java
Patch:
@@ -79,9 +79,11 @@ public Graph process(AbstractQueryImpl query, GraphModel graphModel) {
                 } else if (filter instanceof EdgeFilter) {
                     processEdgeFilter((EdgeFilter) filter, input[0]);
                     q.setResult(input[0]);
-                } else {
+                } else if(filter instanceof ComplexFilter) {
                     ComplexFilter cf = (ComplexFilter) filter;
                     q.setResult(cf.filter(input[0]));
+                } else {
+                    q.setResult(input[0]);  //Put input as result, the filter don't do anything
                 }
             }
         }

File: FiltersPlugin/src/org/gephi/filters/plugin/attribute/AttributeEqualBuilder.java
Patch:
@@ -136,6 +136,9 @@ public String getName() {
         }
 
         public boolean evaluate(Graph graph, Node node) {
+            if(pattern==null) {
+                return true;
+            }
             Object val = node.getNodeData().getAttributes().getValue(column.getIndex());
             if (val != null && useRegex) {
                 return regex.matcher((String) val).matches();

File: DesktopFilters/src/org/gephi/filters/impl/FilterProcessor.java
Patch:
@@ -85,7 +85,7 @@ public Graph process(AbstractQueryImpl query, GraphModel graphModel) {
                 }
             }
         }
-        Graph finalResult = tree[tree.length - 1].result;
+        Graph finalResult = tree[0].result;
         return finalResult;
     }
 

File: PreviewAPI/src/org/gephi/preview/api/PreviewModel.java
Patch:
@@ -2,7 +2,6 @@
  * To change this template, choose Tools | Templates
  * and open the template in the editor.
  */
-
 package org.gephi.preview.api;
 
 import org.gephi.preview.api.supervisors.DirectedEdgeSupervisor;
@@ -60,4 +59,6 @@ public interface PreviewModel {
     public UndirectedEdgeSupervisor getUndirectedEdgeSupervisor();
 
     public float getVisibilityRatio();
+
+    public PreviewPreset getCurrentPreset();
 }

File: PreviewAPI/src/org/gephi/preview/api/SupervisorPropery.java
Patch:
@@ -54,6 +54,7 @@ public static SupervisorPropery createProperty(Supervisor supervisor, Class valu
                 supervisor, valueType, propertyName);
 
         property.setName(propertyName);
+        property.setDisplayName(propertyDescription);
         property.setShortDescription(propertyDescription);
 
         return new SupervisorPropery(property, propertyCategory);

File: PreviewImpl/src/org/gephi/preview/EdgeImpl.java
Patch:
@@ -21,7 +21,7 @@ public abstract class EdgeImpl extends AbstractEdge implements Edge {
     protected final Vector direction;
     protected final float length;
     protected final ArrayList<CubicBezierCurve> curves = new ArrayList<CubicBezierCurve>();
-    private EdgeLabelImpl label = null;
+    private final EdgeLabelImpl label;
     protected static final float BEZIER_CURVE_FACTOR = 0.2f;
 
     /**
@@ -51,6 +51,8 @@ protected EdgeImpl(GraphImpl parent, float thickness, NodeImpl node1, NodeImpl n
         // generate label
         if (null != label) {
             this.label = new EdgeLabelImpl(this, label, labelSize);
+        } else {
+            this.label = null;
         }
     }
 

File: ToolsStandard/src/org/gephi/tools/Brush.java
Patch:
@@ -49,7 +49,7 @@ public class Brush implements Tool {
     private BrushPanel brushPanel;
     //Settings
     private float[] color = {1f, 0f, 0f};
-    private float intensity = 0.1f;
+    private float intensity = 0.3f;
     private DiffusionMethods.DiffusionMethod diffusionMethod = DiffusionMethods.DiffusionMethod.NEIGHBORS;
 
     public void select() {

File: ToolsStandard/src/org/gephi/tools/Painter.java
Patch:
@@ -45,7 +45,7 @@ public class Painter implements Tool {
     private PainterPanel painterPanel;
     //Settings
     private float[] color = {1f, 0f, 0f};
-    private float intensity = 0.1f;
+    private float intensity = 0.3f;
 
     public void select() {
     }

File: VisualizationModule/src/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -197,7 +197,7 @@ public void reinit() {
     }
 
     protected boolean isUnderMouse(ModelImpl obj) {
-        if (obj.isAutoSelected()) {
+        if (vizConfig.isEnableAutoSelect() && obj.isAutoSelected()) {
             return true;
         }
         if (obj.onlyAutoSelect()) {

File: DesktopTools/src/org/gephi/desktop/tools/DesktopToolController.java
Patch:
@@ -91,7 +91,7 @@ public void select(Tool tool) {
                 h.select();
                 handlers.add(h);
             } else if (toolListener instanceof NodePressAndDraggingEventListener) {
-                NodeClickAndDraggingEventHandler h = new NodeClickAndDraggingEventHandler(toolListener);
+                NodePressAndDraggingEventHandler h = new NodePressAndDraggingEventHandler(toolListener);
                 h.select();
                 handlers.add(h);
 
@@ -280,12 +280,12 @@ public void unselect() {
         }
     }
 
-    private static class NodeClickAndDraggingEventHandler implements ToolEventHandler {
+    private static class NodePressAndDraggingEventHandler implements ToolEventHandler {
 
         private NodePressAndDraggingEventListener toolEventListener;
         private VizEventListener[] currentListeners;
 
-        public NodeClickAndDraggingEventHandler(ToolEventListener toolListener) {
+        public NodePressAndDraggingEventHandler(ToolEventListener toolListener) {
             this.toolEventListener = (NodePressAndDraggingEventListener) toolListener;
         }
 

File: FiltersStandard/src/org/gephi/filters/attribute/AttributeNonNullBuilder.java
Patch:
@@ -12,7 +12,7 @@
 import org.gephi.data.attributes.api.AttributeController;
 import org.gephi.data.attributes.api.AttributeModel;
 import org.gephi.filters.api.FilterLibrary;
-import org.gephi.filters.attribute.AttributeEqualBuilder.AttributeEqualFilter;
+import org.gephi.filters.attribute.AttributeEqualBuilder.EqualStringFilter;
 import org.gephi.filters.spi.Category;
 import org.gephi.filters.spi.CategoryBuilder;
 import org.gephi.filters.spi.Filter;
@@ -63,7 +63,8 @@ public Category getCategory() {
         }
 
         public String getName() {
-            return column.getTitle();
+            return "<font color='#000000'>" + column.getTitle() + "</font> "
+                    + "<font color='#999999'><i>" + column.getType().toString() + "</i></font>";
         }
 
         public Icon getIcon() {

File: FiltersStandard/src/org/gephi/filters/attribute/AttributeRangeBuilder.java
Patch:
@@ -88,7 +88,8 @@ public Category getCategory() {
         }
 
         public String getName() {
-            return column.getTitle();
+            return "<font color='#000000'>" + column.getTitle() + "</font> "
+                    + "<font color='#999999'><i>" + column.getType().toString() + "</i></font>";
         }
 
         public Icon getIcon() {

File: FiltersStandard/src/org/gephi/filters/attribute/EqualBooleanUI.java
Patch:
@@ -21,13 +21,12 @@
 package org.gephi.filters.attribute;
 
 import javax.swing.JPanel;
-import org.gephi.filters.attribute.AttributeEqualBuilder.AttributeEqualFilter;
 
 /**
  *
  * @author Mathieu Bastian
  */
-public interface AttributeEqualUI {
+public interface EqualBooleanUI {
 
-    public JPanel getPanel(AttributeEqualFilter filter);
+    public JPanel getPanel(AttributeEqualBuilder.EqualBooleanFilter filter);
 }

File: DesktopFilters/src/org/gephi/desktop/filters/FiltersPanel.java
Patch:
@@ -141,14 +141,14 @@ private void initComponents() {
         gridBagConstraints.weighty = 1.0;
         add(splitPane, gridBagConstraints);
 
-        filtersUIPanel.setPreferredSize(new java.awt.Dimension(0, 50));
         filtersUIPanel.setLayout(new java.awt.BorderLayout());
         gridBagConstraints = new java.awt.GridBagConstraints();
         gridBagConstraints.gridx = 0;
         gridBagConstraints.gridy = 3;
         gridBagConstraints.gridwidth = 3;
         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
         gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
+        gridBagConstraints.weightx = 1.0;
         gridBagConstraints.insets = new java.awt.Insets(5, 5, 1, 5);
         add(filtersUIPanel, gridBagConstraints);
 

File: DesktopFilters/src/org/gephi/desktop/filters/FiltersPanel.java
Patch:
@@ -132,7 +132,7 @@ private void initComponents() {
         gridBagConstraints.weightx = 1.0;
         add(toolbar, gridBagConstraints);
 
-        splitPane.setDividerLocation(150);
+        splitPane.setDividerLocation(260);
         splitPane.setDividerSize(3);
         splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
 

File: DesktopFilters/src/org/gephi/desktop/filters/library/FilterBuilderNode.java
Patch:
@@ -55,7 +55,7 @@ public Image getIcon(int type) {
             }
         } catch (Exception e) {
         }
-        return ImageUtilities.loadImage("filtersui/desktop/library/resources/filter.png");
+        return ImageUtilities.loadImage("org/gephi/desktop/filters/library/resources/filter.png");
     }
 
     @Override

File: DesktopFilters/src/org/gephi/desktop/filters/library/SavedQueryNode.java
Patch:
@@ -65,6 +65,8 @@ private String getQueryName(Query query) {
         if (query.getChildren() != null) {
             if (query.getParametersCount() == 0) {
                 res += "(";
+            } else {
+                res += ",";
             }
             for (Query child : query.getChildren()) {
                 res += getQueryName(child);

File: DesktopFilters/src/org/gephi/desktop/filters/query/ParameterNode.java
Patch:
@@ -36,13 +36,13 @@ public ParameterNode(String key, Object value) {
         super(Children.LEAF);
         String valStr = value == null ? "null" : value.toString();
         setName(key + ": " + valStr);
-        setIconBaseWithExtension("filtersui/desktop/query/resources/parameter.png");
+        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/parameter.png");
     }
 
     public ParameterNode(Query function) {
         super(new ParameterChildren(function));
         setName(NbBundle.getMessage(ParameterNode.class, "ParametersNode.name"));
-        setIconBaseWithExtension("filtersui/desktop/query/resources/parameters.png");
+        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/parameters.png");
     }
 
     @Override

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryChildren.java
Patch:
@@ -88,7 +88,7 @@ private static class HelpNode extends AbstractNode {
 
         public HelpNode() {
             super(Children.LEAF);
-            setIconBaseWithExtension("filtersui/desktop/query/resources/drop.png");
+            setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/drop.png");
         }
 
         @Override

File: DesktopFilters/src/org/gephi/desktop/filters/query/QueryNode.java
Patch:
@@ -43,7 +43,7 @@ public QueryNode(Query query) {
         super(new QueryChildren(query));
         this.query = query;
         setName(query.getName());
-        setIconBaseWithExtension("filtersui/desktop/query/resources/query.png");
+        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/query.png");
     }
 
     /*@Override
@@ -89,7 +89,7 @@ public Query qetQuery() {
     private class RemoveAction extends AbstractAction {
 
         public RemoveAction() {
-            super("Remove");
+            super(NbBundle.getMessage(QueryNode.class, "QueryNode.actions.remove"));
         }
 
         public void actionPerformed(ActionEvent e) {

File: DesktopFilters/src/org/gephi/desktop/filters/query/RootNode.java
Patch:
@@ -47,7 +47,7 @@ public class RootNode extends AbstractNode {
     public RootNode(Children children) {
         super(children);
         setName(NbBundle.getMessage(RootNode.class, "RootNode.name"));
-        setIconBaseWithExtension("filtersui/desktop/query/resources/queries.png");
+        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/queries.png");
     }
 
     @Override

File: DesktopFilters/src/org/gephi/desktop/filters/query/SlotNode.java
Patch:
@@ -49,7 +49,7 @@ public class SlotNode extends AbstractNode {
     public SlotNode(Query parent) {
         super(Children.LEAF);
         this.parent = parent;
-        setIconBaseWithExtension("filtersui/desktop/query/resources/drop.png");
+        setIconBaseWithExtension("org/gephi/desktop/filters/query/resources/drop.png");
     }
 
     @Override

File: DesktopFilters/src/org/gephi/filters/impl/FilterControllerImpl.java
Patch:
@@ -28,11 +28,13 @@
 import org.gephi.filters.spi.Filter;
 import org.gephi.filters.spi.FilterProperty;
 import org.gephi.filters.spi.Operator;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterController.class)
 public class FilterControllerImpl implements FilterController {
 
     private FilterModelImpl model;

File: FiltersStandard/src/org/gephi/filters/attribute/AttributeEqualBuilder.java
Patch:
@@ -30,11 +30,13 @@
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterBuilder.class)
 public class AttributeEqualBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: FiltersStandard/src/org/gephi/filters/operator/INTERSECTIONBuilder.java
Patch:
@@ -27,11 +27,13 @@
 import org.gephi.filters.spi.FilterBuilder;
 import org.gephi.filters.spi.FilterProperty;
 import org.gephi.filters.spi.Operator;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterBuilder.class)
 public class INTERSECTIONBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: FiltersStandard/src/org/gephi/filters/operator/UNIONBuilder.java
Patch:
@@ -27,11 +27,13 @@
 import org.gephi.filters.spi.FilterBuilder;
 import org.gephi.filters.spi.FilterProperty;
 import org.gephi.filters.spi.Operator;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterBuilder.class)
 public class UNIONBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: FiltersStandard/src/org/gephi/filters/topology/DegreeRangeBuilder.java
Patch:
@@ -31,11 +31,13 @@
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterBuilder.class)
 public class DegreeRangeBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: FiltersStandard/src/org/gephi/filters/topology/InDegreeRangeBuilder.java
Patch:
@@ -31,11 +31,13 @@
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterBuilder.class)
 public class InDegreeRangeBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: FiltersStandard/src/org/gephi/filters/topology/MutualDegreeRangeBuilder.java
Patch:
@@ -31,11 +31,13 @@
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterBuilder.class)
 public class MutualDegreeRangeBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: FiltersStandard/src/org/gephi/filters/topology/OutDegreeRangeBuilder.java
Patch:
@@ -31,11 +31,13 @@
 import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author Mathieu Bastian
  */
+@ServiceProvider(service=FilterBuilder.class)
 public class OutDegreeRangeBuilder implements FilterBuilder {
 
     public Category getCategory() {

File: ToolsStandard/src/org/gephi/tools/Brush.java
Patch:
@@ -115,15 +115,13 @@ public ToolEventListener[] getListeners() {
         listeners[0] = new NodePressingEventListener() {
 
             public void pressingNodes(Node[] nodes) {
-                System.out.println("-------Nodes pressed");
                 diffusionMethod = brushPanel.getDiffusionMethod();
                 color = brushPanel.getColor().getColorComponents(color);
                 intensity = brushPanel.getIntensity();
                 brush(nodes);
             }
 
             public void released() {
-                System.out.println("-----released");
             }
         };
         return listeners;

File: VisualizationModule/src/org/gephi/visualization/api/VizEvent.java
Patch:
@@ -43,6 +43,7 @@ public enum Type {
         NODE_LEFT_CLICK,
         MOUSE_LEFT_PRESSING,
         MOUSE_RELEASED,
+        NODE_LEFT_PRESS,
         NODE_LEFT_PRESSING,
     };
     private Type type;

File: DesktopGenerate/src/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -20,6 +20,8 @@
  */
 package org.gephi.desktop.generate;
 
+import java.util.logging.Level;
+import java.util.logging.Logger;
 import javax.swing.JPanel;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
@@ -89,9 +91,7 @@ public void stateChanged(ChangeEvent e) {
         LongTaskErrorHandler errorHandler = new LongTaskErrorHandler() {
 
             public void fatalError(Throwable t) {
-                NotifyDescriptor.Exception ex = new NotifyDescriptor.Exception(t);
-                DialogDisplayer.getDefault().notify(ex);
-                t.printStackTrace();
+                Logger.getLogger("").log(Level.WARNING, "", t.getCause());
             }
         };
 

File: ProjectImpl/src/org/gephi/project/ProjectControllerImpl.java
Patch:
@@ -23,6 +23,8 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 import javax.swing.JFileChooser;
 import javax.swing.JFrame;
 import javax.swing.JOptionPane;
@@ -92,9 +94,7 @@ public ProjectControllerImpl() {
 
             public void fatalError(Throwable t) {
                 unlockProjectActions();
-                NotifyDescriptor.Exception ex = new NotifyDescriptor.Exception(t);
-                DialogDisplayer.getDefault().notify(ex);
-                t.printStackTrace();
+                Logger.getLogger("").log(Level.WARNING, "", t.getCause());
             }
         });
         longTaskExecutor.setLongTaskListener(new LongTaskListener() {

File: VisualizationModule/src/org/gephi/visualization/options/OpenGLPanel.java
Patch:
@@ -52,6 +52,8 @@ final class OpenGLPanel extends javax.swing.JPanel {
             public void actionPerformed(ActionEvent arg0) {
                 if (antialisaingCombobox.getSelectedIndex() > 0) {
                     antiAliasing = (int) Math.pow(2, antialisaingCombobox.getSelectedIndex());
+                } else {
+                    antiAliasing = 0;
                 }
             }
         });

File: VisualizationModule/src/org/gephi/visualization/swing/GLAbstractListener.java
Patch:
@@ -59,7 +59,9 @@ protected GLCapabilities getCaps() {
 
         //FSAA
         int antialisaing = vizController.getVizConfig().getAntialiasing();
-        if (antialisaing == 2) {
+        if (antialisaing == 0) {
+            caps.setSampleBuffers(false);
+        } else if (antialisaing == 2) {
             caps.setSampleBuffers(true);
             caps.setNumSamples(2);
         } else if (antialisaing == 4) {

File: ToolsAPI/src/org/gephi/tools/spi/ToolSelectionType.java
Patch:
@@ -23,13 +23,14 @@
 /**
  * Enum setting for {@link Tool} implementations.
  * <ul><li>
- * <b>NO_SELECTION:</b> Selection is disabled when the tool is used.</li>
+ * <b>NONE:</b> Selection features are disabled when the tool is used.</li>
  * <li><b>SELECTION:</b> Selection is enabled when the tool is used.</li>
+ * <li><b>SELECTION_AND_DRAGGING:</b> Selection and dragging is enabled when the tool is used.</li>
  * </ul>
  *
  * @author Mathieu Bastian
  */
 public enum ToolSelectionType {
 
-    NO_SELECTION, SELECTION;
+    NONE, SELECTION, SELECTION_AND_DRAGGING
 }

File: ToolsStandard/src/org/gephi/tools/Brush.java
Patch:
@@ -41,7 +41,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service=Tool.class)
+@ServiceProvider(service = Tool.class)
 public class Brush implements Tool {
 
     //Architecture

File: ToolsStandard/src/org/gephi/tools/EdgePencil.java
Patch:
@@ -44,7 +44,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service=Tool.class)
+@ServiceProvider(service = Tool.class)
 public class EdgePencil implements Tool {
 
     //Architecture

File: ToolsStandard/src/org/gephi/tools/NodePencil.java
Patch:
@@ -41,13 +41,12 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service=Tool.class)
+@ServiceProvider(service = Tool.class)
 public class NodePencil implements Tool {
 
     //Architecture
     private ToolEventListener[] listeners;
     private NodePencilPanel nodePencilPanel;
-
     //Settings
     private Color color;
     private float size;
@@ -117,6 +116,6 @@ public int getPosition() {
     }
 
     public ToolSelectionType getSelectionType() {
-        return ToolSelectionType.NO_SELECTION;
+        return ToolSelectionType.NONE;
     }
 }

File: ToolsStandard/src/org/gephi/tools/Painter.java
Patch:
@@ -38,7 +38,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service=Tool.class)
+@ServiceProvider(service = Tool.class)
 public class Painter implements Tool {
 
     private ToolEventListener[] listeners;
@@ -97,6 +97,6 @@ public int getPosition() {
     }
 
     public ToolSelectionType getSelectionType() {
-        return ToolSelectionType.SELECTION;
+        return ToolSelectionType.SELECTION_AND_DRAGGING;
     }
 }

File: ToolsStandard/src/org/gephi/tools/ShortestPath.java
Patch:
@@ -45,16 +45,14 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service=Tool.class)
+@ServiceProvider(service = Tool.class)
 public class ShortestPath implements Tool {
 
     //Architecture
     private ToolEventListener[] listeners;
     private ShortestPathPanel shortestPathPanel;
-
     //Settings
     private Color color;
-
     //State
     private Node sourceNode;
 

File: ImportAPI/src/org/gephi/io/importer/DatabaseImporter.java
Patch:
@@ -38,9 +38,10 @@ public interface DatabaseImporter extends Importer {
      * @param database the database description, connexion details and queries
      * @param container container loading interface
      * @param report the import report for logging informations and issues
+     * @return <code>true</code> if the import is successfull and can be processed or <code>false</code> otherwise
      * @throws java.lang.Exception for catching eventual exceptions
      */
-    public void importData(Database database, ContainerLoader container, Report report) throws Exception;
+    public boolean importData(Database database, ContainerLoader container, Report report) throws Exception;
 
     /**
      * Returns <code>true</code> if this importer can import <code>databaseType</code>. Called from

File: ImportAPI/src/org/gephi/io/importer/StreamImporter.java
Patch:
@@ -25,6 +25,7 @@
 import org.gephi.io.logging.Report;
 
 /**
+ * Importers interface for {@link InputStream} input.
  *
  * @author Mathieu Bastian
  */
@@ -36,7 +37,8 @@ public interface StreamImporter extends Importer {
      * @param stream the input stream where data are pushed
      * @param container container loading interface
      * @param report the import report for logging informations and issues
+     * @return <code>true</code> if the import is successfull and can be processed or <code>false</code> otherwise
      * @throws java.lang.Exception for catching eventual exceptions
      */
-    public void importData(InputStream stream, ContainerLoader containter, Report report) throws Exception;
+    public boolean importData(InputStream stream, ContainerLoader container, Report report) throws Exception;
 }

File: ImportAPI/src/org/gephi/io/importer/TextImporter.java
Patch:
@@ -37,7 +37,8 @@ public interface TextImporter extends FileFormatImporter {
      * @param reader the reader on text data
      * @param container container loading interface
      * @param report the import report for logging informations and issues
+     * @return <code>true</code> if the import is successfull and can be processed or <code>false</code> otherwise
      * @throws java.lang.Exception for catching eventual exceptions
      */
-    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception;
+    public boolean importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception;
 }

File: ImportAPI/src/org/gephi/io/importer/XMLImporter.java
Patch:
@@ -37,7 +37,8 @@ public interface XMLImporter extends FileFormatImporter {
      * @param document the XML document
      * @param container container loading interface
      * @param report the import report for logging informations and issues
+     * @return <code>true</code> if the import is successfull and can be processed or <code>false</code> otherwise
      * @throws java.lang.Exception for catching eventual exceptions
      */
-    public void importData(Document document, ContainerLoader container, Report report) throws Exception;
+    public boolean importData(Document document, ContainerLoader container, Report report) throws Exception;
 }

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGDF.java
Patch:
@@ -72,7 +72,7 @@ public ImporterGDF() {
         edgeLineStart = new String[]{"edgedef>", "Edgedef>"};
     }
 
-    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
+    public boolean importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
         this.container = container;
         this.report = report;
 
@@ -82,7 +82,9 @@ public void importData(LineNumberReader reader, ContainerLoader container, Repor
             clean();
             throw e;
         }
+        boolean result = !cancel;
         clean();
+        return result;
     }
 
     private void clean() {

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGML.java
Patch:
@@ -55,7 +55,7 @@ public class ImporterGML implements TextImporter, LongTask {
     private ProgressTicket progressTicket;
     private boolean cancel = false;
 
-    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
+    public boolean importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
         this.container = container;
         this.report = report;
 
@@ -65,7 +65,9 @@ public void importData(LineNumberReader reader, ContainerLoader container, Repor
             clean();
             throw e;
         }
+        boolean result = !cancel;
         clean();
+        return result;
     }
 
     private void clean() {

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGraphML.java
Patch:
@@ -85,7 +85,7 @@ public ImporterGraphML() {
         properties.addEdgePropertyAssociation(EdgeProperties.WEIGHT, "weight");
     }
 
-    public void importData(Document document, ContainerLoader container, Report report) throws Exception {
+    public boolean importData(Document document, ContainerLoader container, Report report) throws Exception {
         this.container = container;
         this.report = report;
         this.nodePropertiesAttributes = new HashMap<String, NodeProperties>();
@@ -97,7 +97,9 @@ public void importData(Document document, ContainerLoader container, Report repo
             clean();
             throw e;
         }
+        boolean result = !cancel;
         clean();
+        return result;
     }
 
     private void clean() {

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterPajek.java
Patch:
@@ -55,7 +55,7 @@ public class ImporterPajek implements TextImporter, LongTask {
     private LineNumberReader reader;
     private NodeDraft[] verticesArray;
 
-    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
+    public boolean importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
         this.container = container;
         this.report = report;
         this.reader = reader;
@@ -66,7 +66,9 @@ public void importData(LineNumberReader reader, ContainerLoader container, Repor
             clean();
             throw e;
         }
+        boolean result = !cancel;
         clean();
+        return result;
     }
 
     private void clean() {

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterTLP.java
Patch:
@@ -50,7 +50,7 @@ public class ImporterTLP implements TextImporter, LongTask {
     private ProgressTicket progressTicket;
     private boolean cancel = false;
 
-    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
+    public boolean importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
         this.container = container;
         this.report = report;
 
@@ -60,7 +60,9 @@ public void importData(LineNumberReader reader, ContainerLoader container, Repor
             clean();
             throw e;
         }
+        boolean result = !cancel;
         clean();
+        return result;
     }
 
     private void clean() {

File: DesktopExport/src/org/gephi/desktop/io/export/GraphFileExporterUI.java
Patch:
@@ -69,7 +69,7 @@ public String getName() {
     }
 
     public boolean isEnable() {
-        return !Lookup.getDefault().lookupAll(GraphFileExporter.class).isEmpty();
+        return true;
     }
 
     public void action() {

File: ExportStandard/src/org/gephi/io/exporter/standard/ExporterGDF.java
Patch:
@@ -34,7 +34,6 @@
 import org.gephi.graph.api.HierarchicalGraph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.NodeData;
-import org.gephi.io.exporter.FileExporter;
 import org.gephi.io.exporter.FileType;
 import org.gephi.io.exporter.GraphFileExporterSettings;
 import org.gephi.io.exporter.TextGraphFileExporter;
@@ -48,7 +47,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = FileExporter.class)
+@ServiceProvider(service = TextGraphFileExporter.class)
 public class ExporterGDF implements TextGraphFileExporter, LongTask {
 
     private boolean cancel = false;

File: ExportStandard/src/org/gephi/io/exporter/standard/ExporterGEXF.java
Patch:
@@ -33,7 +33,6 @@
 import org.gephi.graph.api.HierarchicalGraph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.NodeData;
-import org.gephi.io.exporter.FileExporter;
 import org.gephi.io.exporter.FileType;
 import org.gephi.io.exporter.GraphFileExporterSettings;
 import org.gephi.io.exporter.XMLGraphFileExporter;
@@ -50,7 +49,7 @@
  *
  * @author Sebastien Heymann
  */
-@ServiceProvider(service=FileExporter.class)
+@ServiceProvider(service=XMLGraphFileExporter.class)
 public class ExporterGEXF implements XMLGraphFileExporter, LongTask {
 
     private boolean cancel = false;

File: PreviewExport/src/org/gephi/io/exporter/preview/SVGExporter.java
Patch:
@@ -394,6 +394,8 @@ private void exportData(File file, SupportSize supportSize) throws Exception {
         GraphSheet graphSheet = controller.getGraphSheet();
         Graph graph = graphSheet.getGraph();
 
+        Progress.start(progress);
+
         // calculates progress units count
         int max = 0;
         if (graph.showNodes()) {

File: PreviewImpl/src/org/gephi/preview/DirectedEdgeImpl.java
Patch:
@@ -69,13 +69,14 @@ public Font getMiniLabelFont() {
 
     public Boolean showArrows() {
         DirectedEdgeSupervisor supervisor = getDirectedEdgeSupervisor();
-        float minlength = node1.getRadius() + node2.getRadius() + 2 * supervisor.getArrowAddedRadius() + 2 * supervisor.getArrowSize();
+        float minlength = node1.getRadius() + node2.getRadius() + 2 * supervisor.getArrowAddedRadius() + 2 * supervisor.getArrowSize() + 30;
         return supervisor.getShowArrowsFlag() && length >= minlength;
     }
 
     public Boolean showMiniLabels() {
         DirectedEdgeSupervisor supervisor = getDirectedEdgeSupervisor();
-        float minlength = node1.getRadius() + node2.getRadius() + 2 * 0.65f * supervisor.getMiniLabelMaxChar() * supervisor.getMiniLabelFont().getSize();
+        int labelSize = supervisor.getShortenMiniLabelsFlag() ? supervisor.getMiniLabelMaxChar() : 10;
+        float minlength = node1.getRadius() + node2.getRadius() + 2 * 0.65f * labelSize * supervisor.getMiniLabelFont().getSize() + 30;
         return supervisor.getShowMiniLabelsFlag() && length >= minlength;
     }
 

File: PreviewImpl/src/org/gephi/preview/EdgeImpl.java
Patch:
@@ -147,7 +147,8 @@ public Boolean isCurved() {
 
     public Boolean showLabel() {
         EdgeSupervisor supervisor = getEdgeSupervisor();
-        float minlength = node1.getRadius() + node2.getRadius() + 0.65f * supervisor.getLabelMaxChar() * supervisor.getLabelFont().getSize();
+        int labelSize = supervisor.getShortenLabelsFlag() ? supervisor.getLabelMaxChar() : 10;
+        float minlength = node1.getRadius() + node2.getRadius() + 0.65f * labelSize * supervisor.getLabelFont().getSize();
         return supervisor.getShowLabelsFlag() && length >= minlength;
     }
 

File: PreviewImpl/src/org/gephi/preview/PreviewControllerImpl.java
Patch:
@@ -154,8 +154,6 @@ public GraphSheet getPartialGraphSheet(float visibilityRatio) {
      * @see PreviewController#buildGraph()
      */
     public void buildGraph() {
-        GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getModel();
-
         clearSupervisors();
 
         if (graphModel.isUndirected()) {

File: DesktopExport/src/org/gephi/desktop/io/export/GraphFileExporterUI.java
Patch:
@@ -65,11 +65,11 @@ public class GraphFileExporterUI implements ExporterClassUI {
     private boolean visibleOnlyGraph = false;
 
     public String getName() {
-        return NbBundle.getMessage(VectorialFileExporterUI.class, "GraphFileExporterUI_title");
+        return NbBundle.getMessage(GraphFileExporterUI.class, "GraphFileExporterUI_title");
     }
 
     public boolean isEnable() {
-        return true;
+        return !Lookup.getDefault().lookupAll(GraphFileExporter.class).isEmpty();
     }
 
     public void action() {

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImplFiltered.java
Patch:
@@ -93,7 +93,7 @@ public int getOutDegree(Node node) {
     public int getDegree(Node node) {
         view.checkUpdate();
         AbstractNode absNode = checkNode(node);
-        int count = view.getClusteredLayerInDegree(absNode);
+        int count = view.getClusteredLayerDegree(absNode);
         return count;
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImplFiltered.java
Patch:
@@ -98,7 +98,7 @@ public int getEdgeCount() {
     public int getDegree(Node node) {
         view.checkUpdate();
         AbstractNode absNode = checkNode(node);
-        int count = view.getClusteredLayerInDegree(absNode);
+        int count = view.getClusteredLayerDegree(absNode);
         return count;
     }
 

File: LayoutUI/src/org/gephi/ui/layout/LayoutTopComponent.java
Patch:
@@ -78,7 +78,7 @@ public void disable() {
         });
 
         ProjectController projectController = Lookup.getDefault().lookup(ProjectController.class);
-        if(projectController.getCurrentWorkspace()!=null) {
+        if (projectController.getCurrentWorkspace() != null) {
             model = projectController.getCurrentWorkspace().getLookup().lookup(LayoutModel.class);
         }
         refreshModel();

File: LongTaskAPI/src/org/gephi/utils/longtask/LongTaskExecutor.java
Patch:
@@ -234,11 +234,11 @@ public void run() {
         }
 
         public boolean cancel() {
-            if (inBackground) {
+            /*if (inBackground) {
                 if (future != null && future.cancel(false)) {
                     return true;
                 }
-            }
+            }*/
             if (task != null) {
                 return task.cancel();
             }

File: DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java
Patch:
@@ -202,7 +202,7 @@ public void setId(String id) {
 
     public String getId() {
         String id = (String) attributes.getValue(PropertiesColumn.EDGE_ID.getIndex());
-        if (id != null && id.isEmpty()) {
+        if (id == null || id.isEmpty()) {
             return Integer.toString(edge.getId());
         }
         return id;

File: DHNSGraph/src/org/gephi/graph/dhns/node/NodeDataImpl.java
Patch:
@@ -182,7 +182,7 @@ public String getLabel() {
 
     public String getId() {
         String id = (String) attributes.getValue(PropertiesColumn.NODE_ID.getIndex());
-        if (id != null && id.isEmpty()) {
+        if (id == null || id.isEmpty()) {
             return Integer.toString(node.getId());
         }
         return id;
@@ -200,7 +200,6 @@ public void setFixed(boolean fixed) {
         this.fixed = fixed;
     }
 
-
     public TextData getTextData() {
         return textData;
     }

File: RankingUI/src/org/gephi/ui/ranking/RankingChooser.java
Patch:
@@ -141,7 +141,6 @@ public void actionPerformed(ActionEvent e) {
     }
 
     private synchronized void refreshModel() {
-        System.out.println("refreshmodel");
         refreshSelectedRankings();
         Ranking[] rankings = new Ranking[0];
         if (modelUI.getRanking() == RankingUIModel.NODE_RANKING) {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -370,7 +370,7 @@ public void display(GL gl, GLU glu) {
 
     @Override
     public void afterDisplay(GL gl, GLU glu) {
-        if (vizConfig.isSelectionEnable()) {
+        if (vizConfig.isSelectionEnable() && currentSelectionArea != null) {
             gl.glMatrixMode(GL.GL_PROJECTION);
             gl.glPushMatrix();
             gl.glLoadIdentity();

File: DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java
Patch:
@@ -202,7 +202,7 @@ public void setId(String id) {
 
     public String getId() {
         String id = (String) attributes.getValue(PropertiesColumn.EDGE_ID.getIndex());
-        if (id.isEmpty()) {
+        if (id != null && id.isEmpty()) {
             return Integer.toString(edge.getId());
         }
         return id;

File: DHNSGraph/src/org/gephi/graph/dhns/node/NodeDataImpl.java
Patch:
@@ -182,7 +182,7 @@ public String getLabel() {
 
     public String getId() {
         String id = (String) attributes.getValue(PropertiesColumn.NODE_ID.getIndex());
-        if (id.isEmpty()) {
+        if (id != null && id.isEmpty()) {
             return Integer.toString(node.getId());
         }
         return id;

File: ExportStandard/src/org/gephi/io/exporter/standard/ExporterGDF.java
Patch:
@@ -93,7 +93,7 @@ public boolean exportData(BufferedWriter writer, Container container) throws Exc
         }
         boolean c = cancel;
         clean();
-        return c;
+        return !c;
     }
 
     private void clean() {

File: ExportStandard/src/org/gephi/io/exporter/standard/ExporterGEXF.java
Patch:
@@ -93,7 +93,7 @@ public boolean exportData(Document document, Container container) throws Excepti
         }
         boolean c = cancel;
         clean();
-        return c;
+        return !c;
     }
 
     private void clean() {

File: LayoutStandard/src/org/gephi/layout/labelAdjust/LabelAdjust.java
Patch:
@@ -80,7 +80,7 @@ public void goAlgo() {
                     double label_occupied_height = 0.5 * ((n1.getNodeData().getTextData().getHeight()) + n2.getNodeData().getTextData().getHeight());
                     boolean collision = (xDist < label_occupied_width && yDist < label_occupied_height);
                     if (collision) {
-                        ForceVectorUtils.fcBiRepulsor_y(n1.getNodeData(), n2.getNodeData(), (0.8 + 0.4 * Math.random()) * repulsionStrength, label_occupied_width);
+                        ForceVectorUtils.fcBiRepulsor_y(n1.getNodeData(), n2.getNodeData(), (0.8 + 0.4 * Math.random()) * repulsionStrength, 0.005*label_occupied_width);
                         somethingMoved = true;
                     }
                 }

File: PreviewUI/src/org/gephi/ui/preview/ProcessingPreview.java
Patch:
@@ -297,7 +297,7 @@ public void drawEdge(Edge edge) {
             }
 
             // draw its label
-            if (edge.showLabel()) {
+            if (edge.showLabel() && edge.hasLabel()) {
                 textFont(edgeLabelFont);
                 textAlign(CENTER, BASELINE);
                 drawEdgeLabel(edge.getLabel());

File: RankingUI/src/org/gephi/ui/ranking/RankingToolbar.java
Patch:
@@ -72,8 +72,7 @@ private void refreshModel() {
 
         nodeTransformerGroup.clearSelection();
         edgeTransformerGroup.clearSelection();
-
-        model.setSelectedNodeRanking(TOOL_TIP_TEXT_KEY);
+        
         if (model.getNodeTransformer() == null) {
             TransformerUI[] allTrans = Lookup.getDefault().lookupAll(TransformerUI.class).toArray(new TransformerUI[0]);
             for(int i=0;i<allTrans.length;i++) {

File: DesktopPartition/src/org/gephi/desktop/partition/PartitionChooser.java
Patch:
@@ -52,7 +52,6 @@ public class PartitionChooser extends javax.swing.JPanel implements PropertyChan
     private final String UNGROUP_LABEL;
     private final String SHOW_PIE;
     private final String HIDE_PIE;
-
     //Architecture
     private PartitionModel model;
 
@@ -386,7 +385,6 @@ protected Object getInitialSelection() {
             }
         };
     }
-
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton applyButton;
     private javax.swing.JScrollPane centerScrollPane;

File: PartitionImpl/src/org/gephi/partition/PartitionModelImpl.java
Patch:
@@ -40,7 +40,6 @@ public class PartitionModelImpl implements PartitionModel {
 
     //Architecture
     private List<PropertyChangeListener> listeners;
-
     //Data
     private int selectedPartitioning = NODE_PARTITIONING;
     private Partition nodePartition;

File: RankingAPI/src/org/gephi/ranking/api/RankingUIModel.java
Patch:
@@ -24,6 +24,7 @@
 import java.beans.PropertyChangeListener;
 import java.util.ArrayList;
 import java.util.List;
+import org.openide.util.Lookup;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
 

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsControllerImpl.java
Patch:
@@ -55,7 +55,6 @@ public StatisticsControllerImpl() {
         pc.addWorkspaceListener(new WorkspaceListener() {
 
             public void initialize(Workspace workspace) {
-                workspace.add(new StatisticsModelImpl());
             }
 
             public void select(Workspace workspace) {

File: DesktopStatistics/src/org/gephi/desktop/statistics/StatisticsFrontEnd.java
Patch:
@@ -112,7 +112,9 @@ public void refreshModel(StatisticsModel model) {
     private void refreshResult(StatisticsModel model) {
         //Find a computed stats
         Statistics statistics = model.getStatistics(statisticsUI);
+
         if (statistics != null) {
+            statisticsUI.setup(statistics);     //TODO doing this here may not be appropriate, move it to controller?
             resultLabel.setText(statisticsUI.getValue());
             reportButton.setEnabled(true);
         } else {
@@ -158,7 +160,7 @@ private void showReport() {
         Statistics statistics = currentModel.getStatistics(statisticsUI);
         if (statistics != null) {
             final String report = statistics.getReport();
-            if(report!=null) {
+            if (report != null) {
                 SwingUtilities.invokeLater(new Runnable() {
 
                     public void run() {

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalUndirectedGraphImpl.java
Patch:
@@ -29,6 +29,7 @@
 import org.gephi.graph.dhns.core.Dhns;
 import org.gephi.graph.dhns.core.GraphStructure;
 import org.gephi.graph.dhns.edge.AbstractEdge;
+import org.gephi.graph.dhns.edge.MixedEdgeImpl;
 import org.gephi.graph.dhns.edge.iterators.EdgeAndMetaEdgeIterator;
 import org.gephi.graph.dhns.edge.iterators.EdgeIterator;
 import org.gephi.graph.dhns.edge.iterators.EdgeNodeIterator;
@@ -52,7 +53,7 @@ public HierarchicalUndirectedGraphImpl(Dhns dhns, GraphStructure structure) {
 
     public boolean addEdge(Edge edge) {
         AbstractEdge absEdge = checkEdge(edge);
-        if (edge.isDirected() && !absEdge.isSelfLoop()) {
+        if (absEdge instanceof MixedEdgeImpl && edge.isDirected() && !absEdge.isSelfLoop()) {
             throw new IllegalArgumentException("Can't add a directed egde");
         }
         if (checkEdgeExist(absEdge.getSource(), absEdge.getTarget()) || checkEdgeExist(absEdge.getTarget(), absEdge.getSource())) {

File: ImportContainerStandard/src/org/gephi/io/container/standard/ImportContainerImpl.java
Patch:
@@ -314,7 +314,7 @@ public void closeLoader() {
                     edgeSourceTargetMap.remove(oppositekey);
                 }
             }
-        } else if (parameters.getEdgeDefault().equals(EdgeDefault.UNDIRECTED)) {
+        } else if (parameters.getEdgeDefault().equals(EdgeDefault.MIXED)) {
             //Clean undirected edges when graph is mixed
             for (EdgeDraftImpl edge : edgeMap.values().toArray(new EdgeDraftImpl[0])) {
                 if (edge.getType().equals(EdgeDraft.EdgeType.UNDIRECTED)) {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -365,7 +365,7 @@ public void display(GL gl, GLU glu) {
         }
 
 
-        octree.displayOctree(gl, glu);
+        //octree.displayOctree(gl, glu);
     }
 
     @Override

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextDataImpl.java
Patch:
@@ -36,10 +36,10 @@ public class TextDataImpl implements TextData {
     float r = -1;
     float g;
     float b;
-    float a;
+    float a = 1f;
     float size = 1f;
     float sizeFactor = 1f;
-    boolean visible;
+    boolean visible = true;
 
     public TextLine getLine() {
         return line;

File: PartitionImpl/src/org/gephi/ui/partition/transformer/NodeColorTransformerPanel.java
Patch:
@@ -115,6 +115,7 @@ public void actionPerformed(ActionEvent e) {
                 repaint();
             }
         });
+        popupMenu.add(randomizeItem);
         JMenuItem allBlackItem = new JMenuItem(NbBundle.getMessage(NodeColorTransformerPanel.class, "NodeColorTransformerPanel.action.allBlacks"));
         allBlackItem.addActionListener(new ActionListener() {
 
@@ -127,7 +128,7 @@ public void actionPerformed(ActionEvent e) {
                 repaint();
             }
         });
-        popupMenu.add(randomizeItem);
+        popupMenu.add(allBlackItem);
     }
 
     /** This method is called from within the constructor to

File: AttributesImpl/src/org/gephi/data/attributes/model/IndexedAttributeModel.java
Patch:
@@ -34,6 +34,7 @@ public class IndexedAttributeModel extends AbstractAttributeModel {
 
     public IndexedAttributeModel() {
         dataIndex = new DataIndex();
+        createPropertiesColumn();
     }
 
     @Override

File: AttributesImpl/src/org/gephi/data/attributes/model/TemporaryAttributeModel.java
Patch:
@@ -34,7 +34,7 @@
 public class TemporaryAttributeModel extends AbstractAttributeModel {
 
     public TemporaryAttributeModel() {
-
+        createPropertiesColumn();
     }
 
     @Override

File: AttributesImpl/src/org/gephi/data/attributes/serialization/AttributeModelSerializer.java
Patch:
@@ -193,6 +193,8 @@ public void readColumn(Element columnE, AttributeTableImpl table) {
                 }
             }
         }
-        table.addColumn(id, title, type, origin, defaultValue);
+        if (!table.hasColumn(title)) {
+            table.addColumn(id, title, type, origin, defaultValue);
+        }
     }
 }

File: DHNSGraph/src/org/gephi/graph/dhns/node/NodeDataImpl.java
Patch:
@@ -182,7 +182,7 @@ public String getLabel() {
     }
 
     public String getId() {
-        if(id.isEmpty()) {
+        if (id.isEmpty()) {
             return Integer.toString(node.getId());
         }
         return id;

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -199,9 +199,8 @@ private void updateEdges() {
     public void updateMetaEdges() {
         Modeler edgeInit = engine.getModelClasses()[AbstractEngine.CLASS_EDGE].getCurrentModeler();
 
-
         for (Edge edge : graph.getMetaEdges()) {
-
+            assert edge.getSource().getNodeData().getModel() != null && edge.getTarget().getNodeData().getModel() != null;
             Model obj = edge.getEdgeData().getModel();
             if (obj == null) {
                 //Model is null, ADD

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalGraphImplFiltered.java
Patch:
@@ -160,6 +160,7 @@ public Node getParent(Node node) {
 
     @Override
     public NodeIterable getTopNodes() {
+        readLock();
         view.checkUpdate();
         return dhns.newNodeIterable(new ChildrenIterator(structure.getStructure(), view.getHierarchyLayerNodePredicate()));
     }

File: VisualizationModule/src/org/gephi/visualization/opengl/octree/Octree.java
Patch:
@@ -104,7 +104,7 @@ public void addObject(int classID, ModelImpl obj) {
         Octant[] octants = obj.getOctants();
         boolean manualAdd = true;
         for (int i = 0; i < octants.length; i++) {
-            Octant o = obj.getOctants()[i];
+            Octant o = octants[i];
             if (o != null) {
                 o.addObject(classID, obj);
                 manualAdd = false;

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -365,7 +365,7 @@ public void display(GL gl, GLU glu) {
         }
 
 
-        octree.displayOctree(gl);
+        octree.displayOctree(gl, glu);
     }
 
     @Override

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -121,7 +121,7 @@ public class VizConfig {
     public static final Color DEFAULT_NODE_NEIGHBOR_SELECTED_UNIQUE_COLOR = new Color(0.2f, 1f, 0.3f);
     public static final int DEFAULT_OCTREE_DEPTH = 5;
     public static final int DEFAULT_OCTREE_WIDTH = 10000;
-    public static final boolean DEFAULT_CLEAN_DELETED_MODELS = false;
+    public static final boolean DEFAULT_CLEAN_DELETED_MODELS = true;
     public static final boolean DEFAULT_LABEL_MIPMAP = true;
     public static final boolean DEFAULT_LABEL_ANTIALIASED = true;
     public static final boolean DEFAULT_LABEL_FRACTIONAL_METRICS = true;

File: VisualizationModule/src/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -288,7 +288,7 @@ public void setInited() {
             if (!inited) {
                 inited = true;
                 if (requestAnimation) {
-                    graphDrawable.display();
+                    //graphDrawable.display();
                     startAnimating();
                     requestAnimation = false;
                 }

File: VisualizationModule/src/org/gephi/visualization/opengl/octree/Octant.java
Patch:
@@ -28,7 +28,6 @@
 import org.gephi.datastructure.avl.param.AVLItemAccessor;
 import org.gephi.datastructure.avl.param.ParamAVLTree;
 import org.gephi.datastructure.avl.simple.AVLItem;
-import org.gephi.visualization.VizController;
 import org.gephi.visualization.api.ModelImpl;
 
 /**

File: VisualizationModule/src/org/gephi/visualization/opengl/octree/Octant.java
Patch:
@@ -241,7 +241,6 @@ public boolean isRequiringUpdatePosition() {
     }
 
     public void requireUpdatePosition() {
-        updateFlag.set(true);
         if (!updateFlag.getAndSet(true)) {
             octree.vizController.getScheduler().requireUpdatePosition();
         }

File: ProcessorStandard/src/org/gephi/io/processor/standard/DefaultProcessor.java
Patch:
@@ -36,11 +36,13 @@
 import org.gephi.io.processor.NodeDraftGetter;
 import org.gephi.io.processor.Processor;
 import org.openide.util.Lookup;
+import org.openide.util.lookup.ServiceProvider;
 
 /**
  *
  * @author  Mathieu Bastian
  */
+@ServiceProvider(service=Processor.class)
 public class DefaultProcessor implements Processor {
 
     public void process(ContainerUnloader container) {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/Edge2dModel.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class Edge2dModel extends ModelImpl<EdgeData> {
 
-    protected static float CARDINAL_DIV = 1f;  //Set the size of edges according to cardinal
+    protected static float WEIGHT_DIV = 1f;  //Set the size of edges according to cardinal
 
     //An edge is set in both source node and target node octant. Hence edges are not drawn when none of
     //these octants are visible.
@@ -138,8 +138,8 @@ public void display(GL gl, GLU glu, VizModel vizModel) {
         float x2 = obj.getTarget().x();
         float y1 = obj.getSource().y();
         float y2 = obj.getTarget().y();
-        float t1 = obj.getEdge().getWeight() / CARDINAL_DIV;
-        float t2 = obj.getEdge().getWeight() / CARDINAL_DIV;
+        float t1 = obj.getEdge().getWeight() / WEIGHT_DIV;
+        float t2 = obj.getEdge().getWeight() / WEIGHT_DIV;
 
         float sideVectorX = y1 - y2;
         float sideVectorY = x2 - x1;

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/Edge3dModel.java
Patch:
@@ -61,8 +61,8 @@ public void display(GL gl, GLU glu, VizModel vizModel) {
         float y2 = obj.getTarget().y();
         float z1 = obj.getSource().z();
         float z2 = obj.getTarget().z();
-        float t1 = obj.getEdge().getWeight() / CARDINAL_DIV;
-        float t2 = obj.getEdge().getWeight() / CARDINAL_DIV;
+        float t1 = obj.getEdge().getWeight() / WEIGHT_DIV;
+        float t2 = obj.getEdge().getWeight() / WEIGHT_DIV;
 
         //CameraVector, from camera location to any point on the line
         float cameraVectorX = x1 - cameraLocation[0];

File: ExportStandard/src/org/gephi/io/exporter/standard/ExporterGDF.java
Patch:
@@ -312,7 +312,7 @@ public boolean isEnable() {
             @Override
             public void writeData(StringBuilder builder, Node node) {
                 float x = node.getNodeData().x();
-                if (normalize) {
+                if (normalize && x != 0.0) {
                     x = (x - minX) / (maxX - minX);
                 }
                 builder.append(x);
@@ -329,7 +329,7 @@ public boolean isEnable() {
             @Override
             public void writeData(StringBuilder builder, Node node) {
                 float y = node.getNodeData().y();
-                if (normalize) {
+                if (normalize && y != 0.0) {
                     y = (y - minY) / (maxY - minY);
                 }
                 builder.append(y);

File: AttributesImpl/src/org/gephi/data/attributes/serialization/AttributeModelPersistenceProvider.java
Patch:
@@ -18,8 +18,9 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.data.attributes;
+package org.gephi.data.attributes.serialization;
 
+import org.gephi.data.attributes.AbstractAttributeModel;
 import org.gephi.data.attributes.api.AttributeModel;
 import org.gephi.data.attributes.model.IndexedAttributeModel;
 import org.gephi.workspace.api.Workspace;

File: AttributesImpl/test/unit/src/org/gephi/data/attributes/AttributeModelSerializerTest.java
Patch:
@@ -20,6 +20,7 @@
  */
 package org.gephi.data.attributes;
 
+import org.gephi.data.attributes.serialization.AttributeModelSerializer;
 import java.io.StringWriter;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Result;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/AbstractEdge.java
Patch:
@@ -74,7 +74,7 @@ public int getNumber() {
         return ID;
     }
 
-    public EdgeData getEdgeData() {
+    public EdgeDataImpl getEdgeData() {
         return edgeData;
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/node/PreNode.java
Patch:
@@ -148,7 +148,7 @@ public boolean isClone() {
     }
 
     @Override
-    public NodeData getNodeData() {
+    public NodeDataImpl getNodeData() {
         return nodeData;
     }
 

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestSerializer.java
Patch:
@@ -126,7 +126,7 @@ public void testTreeStructureSerializer() {
         Element e1 = dHNSSerializer.writeTreeStructure(dHNSSerializer.createDocument(), dhns1.getGraphStructure().getStructure());
         String s1 = printXML(e1);
         graph1.clear();
-        dHNSSerializer.readTreeStructure(e1, dhns1.getGraphStructure());
+        dHNSSerializer.readTreeStructure(e1, dhns1.getGraphStructure(), dhns1.factory());
         Element e2 = dHNSSerializer.writeTreeStructure(dHNSSerializer.createDocument(), dhns1.getGraphStructure().getStructure());
         String s2 = printXML(e2);
         assertEquals(s1, s2);
@@ -138,7 +138,7 @@ public void testEdgesSerializer() {
         Element e1 = dHNSSerializer.writeEdges(dHNSSerializer.createDocument(), dhns2.getGraphStructure().getStructure());
         String s1 = printXML(e1);
         graph2.clearEdges();
-        dHNSSerializer.readEdges(e1, dhns2.getGraphStructure());
+        dHNSSerializer.readEdges(e1, dhns2.getGraphStructure(), dhns2.factory());
         Element e2 = dHNSSerializer.writeEdges(dHNSSerializer.createDocument(), dhns2.getGraphStructure().getStructure());
         String s2 = printXML(e2);
         assertEquals(s1, s2);

File: VisualizationModule/src/org/gephi/visualization/component/LabelSettingsPanel.java
Patch:
@@ -104,7 +104,9 @@ public void propertyChange(PropertyChangeEvent evt) {
 
             public void stateChanged(ChangeEvent e) {
                 TextModel model = VizController.getInstance().getVizModel().getTextModel();
-                model.setNodeSizeFactor(nodeSizeSlider.getValue() / 100f);
+                if (model.getNodeSizeFactor() != nodeSizeSlider.getValue() + 100f) {
+                    model.setNodeSizeFactor(nodeSizeSlider.getValue() / 100f);
+                }
             }
         });
 

File: VisualizationModule/src/org/gephi/visualization/component/VizBarController.java
Patch:
@@ -423,7 +423,7 @@ public void stateChanged(ChangeEvent e) {
 
                 public void stateChanged(ChangeEvent e) {
                     TextModel model = VizController.getInstance().getVizModel().getTextModel();
-                    if(((int)(model.getNodeSizeFactor() * 100f))!=fontSizeSlider.getValue()) {
+                    if (((int) (model.getNodeSizeFactor() * 100f)) != fontSizeSlider.getValue()) {
                         fontSizeSlider.setValue((int) (model.getNodeSizeFactor() * 100f));
                     }
                 }

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsPersistenceProvider.java
Patch:
@@ -33,7 +33,7 @@
  *
  * @author Mathieu Bastian
  */
-@ServiceProvider(service = WorkspacePersistenceProvider.class)
+@ServiceProvider(service = WorkspacePersistenceProvider.class, position=10000)
 public class DhnsPersistenceProvider implements WorkspacePersistenceProvider {
 
     public Element writeXML(Document document, Workspace workspace) {

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsPersistenceProvider.java
Patch:
@@ -47,9 +47,10 @@ public void readXML(Element element, Workspace workspace) {
         Dhns dhns = new Dhns(graphController, workspace);
         DHNSSerializer serializer = new DHNSSerializer();
         serializer.readDhns(element, dhns);
+        workspace.add(dhns);
     }
 
     public String getIdentifier() {
-        return "dhns";
+        return "Dhns";
     }
 }

File: DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java
Patch:
@@ -220,6 +220,9 @@ public void setId(String id) {
     }
 
     public String getId() {
+        if(id.isEmpty()) {
+            return Integer.toString(edge.getId());
+        }
         return id;
     }
 }

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalDirectedGraphImpl.java
Patch:
@@ -216,7 +216,7 @@ public boolean isAdjacent(Node node1, Node node2) {
 
     //Graph
     public boolean isDirected(Edge edge) {
-        checkEdge(edge);
+        checkEdgeOrMetaEdge(edge);
         return true;
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/HierarchicalMixedGraphImpl.java
Patch:
@@ -126,7 +126,7 @@ public EdgeIterable getUndirectedEdges() {
     }
 
     public boolean isDirected(Edge edge) {
-        AbstractEdge absEdge = checkEdge(edge);
+        AbstractEdge absEdge = checkEdgeOrMetaEdge(edge);
         return absEdge.isDirected();
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/node/NodeDataImpl.java
Patch:
@@ -182,6 +182,9 @@ public String getLabel() {
     }
 
     public String getId() {
+        if(id.isEmpty()) {
+            return Integer.toString(node.getId());
+        }
         return id;
     }
 

File: ExportStandard/src/org/gephi/io/exporter/standard/ExporterGEXF.java
Patch:
@@ -33,14 +33,15 @@
 import org.gephi.utils.progress.Progress;
 import org.gephi.utils.progress.ProgressTicket;
 import org.openide.util.NbBundle;
+import org.openide.util.lookup.ServiceProvider;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;
-import org.w3c.dom.Text;
 
 /**
  *
  * @author Sebastien Heymann
  */
+@ServiceProvider(service=GraphFileExporter.class)
 public class ExporterGEXF implements GraphFileExporter, XMLExporter, LongTask {
 
     private boolean cancel = false;

File: ProcessorStandard/src/org/gephi/io/processor/standard/DefaultProcessor.java
Patch:
@@ -166,9 +166,9 @@ private void flushToNode(NodeDraftGetter nodeDraft, Node node) {
     }
 
     private void flushToNodeAfter(NodeDraftGetter nodeDraft, Node node, Graph graph) {
-        if (!nodeDraft.isVisible()) {
-            graph.setVisible(node, false);
-        }
+//        if (!nodeDraft.isVisible()) {
+//            graph.setVisible(node, false);
+//        }
     }
 
     private void flushToEdge(EdgeDraftGetter edgeDraft, Edge edge) {

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -156,9 +156,9 @@ private void updateNodes() {
             //Modeaction
             if (modeManager.getMode().equals(ModeManager.AVAILABLE_MODES.HIGHLIGHT)) {
                 ModelImpl impl = (ModelImpl) obj;
-                if (!node.isVisible()) {
-                    ColorLayer.layerColor(impl, 0.8f, 0.8f, 0.8f);
-                }
+//                if (!node.isVisible()) {
+//                    ColorLayer.layerColor(impl, 0.8f, 0.8f, 0.8f);
+//                }
             }
         }
     }

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeRowFactory.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.data.attributes.api;
 
 /**

File: AttributesImpl/src/org/gephi/data/attributes/AttributeRowImpl.java
Patch:
@@ -93,6 +93,7 @@ public void setValue(AttributeValue value) {
             if (column == null) {
                 throw new IllegalArgumentException("The value column doesn't exist");
             }
+            value = attributeTable.getFactory().newValue(column, value.getValue());
         }
         setValue(column.getIndex(), (AttributeValueImpl) value);
     }

File: AttributesImpl/src/org/gephi/data/attributes/AttributeTableImpl.java
Patch:
@@ -162,7 +162,7 @@ public AttributeFactoryImpl getFactory() {
 
     public synchronized void mergeTable(AttributeTable table) {
         for (AttributeColumn column : table.getColumns()) {
-            AttributeColumn existingCol = getColumn(column.getId(), column.getType());
+            AttributeColumn existingCol = getColumn(column);
             if (existingCol == null) {
                 addColumn(column.getId(), column.getTitle(), column.getType(), column.getOrigin(), column.getDefaultValue());
             }

File: PartitionImpl/src/org/gephi/partition/PartitionControllerImpl.java
Patch:
@@ -80,6 +80,7 @@ public void disable() {
         if (pc.getCurrentWorkspace() != null) {
             model = pc.getCurrentWorkspace().getLookup().lookup(PartitionModelImpl.class);
             if (model == null) {
+                model = new PartitionModelImpl();
                 pc.getCurrentWorkspace().add(new PartitionModelImpl());
             }
         }

File: ExportStandard/src/org/gephi/io/exporter/standard/ExporterGEXF.java
Patch:
@@ -201,9 +201,9 @@ private Element createNodeSize(Document document, Node n) throws Exception {
 
     private Element createNodeColors(Document document, Node n) throws Exception {
         Element colorE = document.createElement("viz:color");
-        colorE.setAttribute("r", ""+(n.getNodeData().r() * 255f));
-        colorE.setAttribute("g", ""+(n.getNodeData().g() * 255f));
-        colorE.setAttribute("b", ""+(n.getNodeData().b() * 255f));
+        colorE.setAttribute("r", ""+(Math.round(n.getNodeData().r() * 255f)));
+        colorE.setAttribute("g", ""+(Math.round(n.getNodeData().g() * 255f)));
+        colorE.setAttribute("b", ""+(Math.round(n.getNodeData().b() * 255f)));
 
         return colorE;
     }

File: ProjectImpl/src/org/gephi/project/ProjectControllerImpl.java
Patch:
@@ -398,6 +398,8 @@ public void openProject(Project project) {
                 Workspace workspace = workspaceProviderImpl.getWorkspaces()[0];
                 openWorkspace(workspace);
             }
+        } else {
+            fireWorkspaceEvent(EventType.SELECT, workspaceProviderImpl.getCurrentWorkspace());
         }
 
         saveProject = true;

File: DesktopBranding/src/org/gephi/branding/desktop/actions/ProjectProperties.java
Patch:
@@ -62,11 +62,11 @@ public void actionPerformed(ActionEvent ev) {
         ProjectPropertiesUI ui = Lookup.getDefault().lookup(ProjectPropertiesUI.class);
         if (ui != null) {
             JPanel panel = ui.getPanel();
-            ui.load(project);
+            ui.setup(project);
             DialogDescriptor dd = new DialogDescriptor(panel, NbBundle.getMessage(ProjectProperties.class, "ProjectProperties_dialog_title"));
             Object result = DialogDisplayer.getDefault().notify(dd);
             if (result == NotifyDescriptor.OK_OPTION) {
-                ui.save(project);
+                ui.unsetup(project);
             }
         }
     }

File: DesktopClustering/src/org/gephi/desktop/algorithms/cluster/ClusteringControllerImpl.java
Patch:
@@ -35,7 +35,6 @@
 import org.gephi.utils.longtask.LongTaskExecutor;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.api.selection.SelectionManager;
-import org.gephi.workspace.api.WorkspaceDataKey;
 import org.openide.DialogDisplayer;
 import org.openide.NotifyDescriptor;
 import org.openide.util.Lookup;
@@ -68,8 +67,7 @@ public void clusterize(final Clusterer clusterer) {
         final Graph graph = gc.getModel().getGraph();
 
         //Model
-        WorkspaceDataKey<ClusteringModel> key = Lookup.getDefault().lookup(ClusteringModelWorkspaceDataProvider.class).getWorkspaceDataKey();
-        final ClusteringModel model = Lookup.getDefault().lookup(ProjectController.class).getCurrentWorkspace().getWorkspaceData().getData(key);
+        final ClusteringModel model = Lookup.getDefault().lookup(ProjectController.class).getCurrentWorkspace().getLookup().lookup(ClusteringModel.class);
 
         //LongTask
         LongTask task = null;

File: ProjectAPI/src/org/gephi/project/api/ProjectMetaData.java
Patch:
@@ -33,5 +33,4 @@ public interface ProjectMetaData {
     public String getDescription();
 
     public String getTitle();
-
 }

File: ProjectAPI/src/org/gephi/project/api/ProjectPropertiesUI.java
Patch:
@@ -30,7 +30,7 @@ public interface ProjectPropertiesUI {
 
     public JPanel getPanel();
 
-    public void load(Project project);
+    public void setup(Project project);
 
-    public void save(Project project);
+    public void unsetup(Project project);
 }

File: ProjectImpl/src/org/gephi/io/project/LoadTask.java
Patch:
@@ -23,6 +23,7 @@
 import javax.xml.parsers.DocumentBuilder;
 import javax.xml.parsers.DocumentBuilderFactory;
 import org.gephi.project.ProjectImpl;
+import org.gephi.project.ProjectInformationImpl;
 import org.gephi.project.api.Project;
 import org.gephi.project.api.ProjectController;
 import org.gephi.utils.longtask.LongTask;
@@ -67,7 +68,7 @@ public void run() {
             if (project == null) {
                 project = new ProjectImpl();
             }
-            ((ProjectImpl) project).setDataObject(dataObject);
+            project.getLookup().lookup(ProjectInformationImpl.class).setDataObject(dataObject);
             dataObject.setProject(project);
 
             //GephiReader

File: ProjectImpl/src/org/gephi/ui/project/ProjectPropertiesUIImpl.java
Patch:
@@ -37,11 +37,11 @@ public JPanel getPanel() {
         return panel;
     }
 
-    public void load(Project project) {
+    public void setup(Project project) {
         panel.load(project);
     }
 
-    public void save(Project project) {
+    public void unsetup(Project project) {
         panel.save(project);
         panel = null;
     }

File: RankingAPI/src/org/gephi/ranking/api/RankingUIModel.java
Patch:
@@ -36,7 +36,6 @@ public class RankingUIModel {
     //Const
     public static final int NODE_RANKING = 1;
     public static final int EDGE_RANKING = 2;
-
     //Model
     protected int ranking;
     protected boolean barChartVisible;
@@ -47,7 +46,6 @@ public class RankingUIModel {
     protected List<Transformer> edgeTransformers;
     protected String selectedNodeRanking;
     protected String selectedEdgeRanking;
-
     //Listener
     protected List<PropertyChangeListener> listeners = new ArrayList<PropertyChangeListener>();
 

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -82,7 +82,6 @@ public class VizConfig {
     public static final String MOUSE_SELECTION_DIAMETER = "VizConfig.mouseSelectionDiameter";
     public static final String MOUSE_SELECTION_ZOOM_PROPORTIONAL = "VizConfig.mouseSelectionZoomProportionnal";
     public static final String DISABLE_LOD = "VizConfig.disableLOD";
-
     //Default values
     public static final boolean DEFAULT_USE_3D = false;
     public static final Color DEFAULT_BACKGROUND_COLOR = Color.WHITE;
@@ -132,7 +131,6 @@ public class VizConfig {
     public static final int DEFAULT_MOUSE_SELECTION_DIAMETER = 1;
     public static final boolean DEFAULT_MOUSE_SELECTION_ZOOM_PROPORTIONAL = false;
     public static final boolean DEFAULT_DISABLE_LOD = false;
-
     //Default config - loaded in the VizModel
     protected boolean defaultUse3d = NbPreferences.forModule(VizConfig.class).getBoolean(USE_3D, DEFAULT_USE_3D);
     protected boolean defaultLighting = false;  //Overriden by use3d
@@ -162,7 +160,6 @@ public class VizConfig {
     protected Color defaultEdgeInSelectedColor = ColorUtils.decode(NbPreferences.forModule(VizConfig.class).get(SELECTEDEDGE_IN_COLOR, ColorUtils.encode(DEFAULT_SELECTEDEDGE_IN_COLOR)));
     protected Color defaultEdgeOutSelectedColor = ColorUtils.decode(NbPreferences.forModule(VizConfig.class).get(SELECTEDEDGE_OUT_COLOR, ColorUtils.encode(DEFAULT_SELECTEDEDGE_OUT_COLOR)));
     protected Color defaultEdgeBothSelectedColor = ColorUtils.decode(NbPreferences.forModule(VizConfig.class).get(SELECTEDEDGE_BOTH_COLOR, ColorUtils.encode(DEFAULT_SELECTEDEDGE_BOTH_COLOR)));
-
     //Preferences
     protected int antialiasing = NbPreferences.forModule(VizConfig.class).getInt(ANTIALIASING, DEFAULT_ANTIALIASING);
     protected boolean lineSmooth = false;       //Not useful, GL_LINES

File: DesktopGenerate/src/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -121,7 +121,7 @@ private void finishGenerate(Container container) {
             }
         }
         if (container.getSource() != null) {
-            workspace.setSource(container.getSource());
+            pc.setSource(workspace, container.getSource());
         }
 
         Lookup.getDefault().lookup(Processor.class).process(container.getUnloader());

File: DesktopImport/src/org/gephi/io/desktop/DesktopImportController.java
Patch:
@@ -301,7 +301,7 @@ private void finishImport(Container container) {
                 }
             }
             if (container.getSource() != null) {
-                workspace.setSource(container.getSource());
+                pc.setSource(workspace, container.getSource());
             }
 
             container.closeLoader();

File: ProjectImpl/src/org/gephi/ui/project/ProjectPropertiesEditor.java
Patch:
@@ -20,6 +20,7 @@
  */
 package org.gephi.ui.project;
 
+import org.gephi.project.ProjectImpl.ProjectMetaDataImpl;
 import org.gephi.project.api.Project;
 import org.gephi.project.api.ProjectController;
 import org.gephi.project.api.ProjectMetaData;
@@ -49,7 +50,7 @@ public void load(Project project) {
     }
 
     public void save(Project project) {
-        ProjectMetaData metaData = project.getMetaData();
+        ProjectMetaDataImpl metaData = (ProjectMetaDataImpl)project.getMetaData();
         metaData.setTitle(nameTextField.getText());
         if (!titleTextField.getText().isEmpty() && !titleTextField.getText().equals(project.getName())) {
             ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);

File: VisualizationModule/src/org/gephi/visualization/VizModel.java
Patch:
@@ -116,7 +116,7 @@ private void defaultValues() {
         edgeHasUniColor = config.isDefaultEdgeHasUniColor();
         edgeUniColor = config.getDefaultEdgeUniColor().getRGBComponents(null);
         adjustByText = config.isDefaultAdjustByText();
-        nodeModeler = use3d?"CompatibilityNodeSphereModeler":"CompatibilityNodeDiskModeler";
+        nodeModeler = use3d ? "CompatibilityNodeSphereModeler" : "CompatibilityNodeDiskModeler";
         edgeSelectionColor = config.isDefaultEdgeSelectionColor();
         edgeInSelectionColor = config.getDefaultEdgeInSelectedColor().getRGBComponents(null);
         edgeOutSelectionColor = config.getDefaultEdgeOutSelectedColor().getRGBComponents(null);

File: VisualizationModule/src/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -80,7 +80,7 @@ public void actionPerformed(ActionEvent e) {
         add(centerOnZeroButton);
 
         //Reset colors
-        final JColorButton resetColorButton = new JColorButton(color, true);
+        final JColorButton resetColorButton = new JColorButton(color, true, false);
         resetColorButton.setToolTipText(NbBundle.getMessage(ActionsToolbar.class, "ActionsToolbar.resetColors"));
         resetColorButton.addActionListener(new ActionListener() {
 

File: VisualizationModule/src/org/gephi/visualization/swing/GLAbstractListener.java
Patch:
@@ -258,6 +258,7 @@ public void reshape(GLAutoDrawable drawable, int x, int y, int width, int height
                 System.err.println("GL_RENDERER: " + gl.glGetString(GL.GL_RENDERER));
                 System.err.println("GL_VERSION: " + gl.glGetString(GL.GL_VERSION));
             }
+            
             resizing = false;
         }
     }

File: VisualizationModule/src/org/gephi/visualization/swing/GraphCanvas.java
Patch:
@@ -24,6 +24,7 @@
 import java.awt.Component;
 
 import java.awt.Cursor;
+import java.awt.Dimension;
 import javax.media.opengl.GL;
 import javax.media.opengl.GLCanvas;
 import javax.media.opengl.glu.GLU;
@@ -43,6 +44,7 @@ public GraphCanvas() {
         super();
         glCanvas = new GLCanvas(getCaps());
         super.initDrawable(glCanvas);
+        glCanvas.setMinimumSize(new Dimension(0, 0));   //Fix Canvas resize Issue
 
         //Basic init
         graphComponent = (Component) glCanvas;

File: VisualizationModule/src/org/gephi/visualization/swing/GraphDrawableImpl.java
Patch:
@@ -23,6 +23,7 @@
 import com.sun.opengl.util.BufferUtil;
 import java.awt.Component;
 import java.awt.Cursor;
+import java.awt.Dimension;
 import java.awt.event.MouseAdapter;
 import java.awt.event.MouseEvent;
 import java.nio.DoubleBuffer;
@@ -126,6 +127,7 @@ public void setCameraPosition(GL gl, GLU glu) {
     @Override
     protected void reshape3DScene(GL gl) {
         setCameraPosition(gl, glu);
+        graphComponent.invalidate();    //Force canvas to be laid out with the proper size
     }
 
     @Override

File: VisualizationModule/src/org/gephi/visualization/opengl/octree/Octree.java
Patch:
@@ -241,7 +241,7 @@ public void cleanDeletedObjects(int classID) {
                 if (!obj.isCacheMatching(cacheMarker)) {
                     removeObject(classID, obj);
                     obj.resetOctant();
-                    if(vizController.getVizConfig().isCleanDeletedModels()) {
+                    if (vizController.getVizConfig().isCleanDeletedModels()) {
                         obj.getObj().setModel(null);
                     }
                 }

File: VisualizationModule/src/org/gephi/visualization/selection/Rectangle.java
Patch:
@@ -22,6 +22,7 @@
 
 import java.util.Arrays;
 import javax.media.opengl.GL;
+import javax.media.opengl.GLPbuffer;
 import javax.media.opengl.glu.GLU;
 import org.gephi.graph.api.Renderable;
 import org.gephi.visualization.VizController;
@@ -84,7 +85,7 @@ public boolean mouseTest(Vecf distanceFromMouse, ModelImpl object) {
         float x = object.getViewportX();
         float y = object.getViewportY();
         float rad = object.getViewportRadius();
-        //System.out.println(rectangle[0]+"   "+rectangle[1]);
+
         boolean res = true;
         if (startPosition[0] > rectangle[0]) {
             if (x - rad > startPosition[0] || x + rad < rectangle[0]) {

File: VisualizationModule/src/org/gephi/visualization/component/ActionsToolbar.java
Patch:
@@ -95,7 +95,7 @@ public void actionPerformed(ActionEvent evt) {
                     n.getNodeData().setAlpha(1f);
                 }
                 for (Edge e : graph.getEdges().toArray()) {
-                    e.getEdgeData().setR(color.getRed() / 255f);
+                    e.getEdgeData().setR(-1f);
                     e.getEdgeData().setG(color.getGreen() / 255f);
                     e.getEdgeData().setB(color.getBlue() / 255f);
                     e.getEdgeData().setAlpha(1f);

File: ImportAPI/src/org/gephi/io/importer/TextImporter.java
Patch:
@@ -20,7 +20,7 @@
  */
 package org.gephi.io.importer;
 
-import java.io.BufferedReader;
+import java.io.LineNumberReader;
 import org.gephi.io.container.ContainerLoader;
 import org.gephi.io.logging.Report;
 
@@ -39,5 +39,5 @@ public interface TextImporter extends FileFormatImporter {
      * @param report the import report for logging informations and issues
      * @throws java.lang.Exception for catching eventual exceptions
      */
-    public void importData(BufferedReader reader, ContainerLoader container, Report report) throws Exception;
+    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception;
 }

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGDF.java
Patch:
@@ -21,6 +21,7 @@
 package org.gephi.io.importer.standard;
 
 import java.io.BufferedReader;
+import java.io.LineNumberReader;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.regex.Matcher;
@@ -71,7 +72,7 @@ public ImporterGDF() {
         edgeLineStart = new String[]{"edgedef>", "Edgedef>"};
     }
 
-    public void importData(BufferedReader reader, ContainerLoader container, Report report) throws Exception {
+    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
         this.container = container;
         this.report = report;
 
@@ -96,7 +97,7 @@ private void clean() {
         this.cancel = false;
     }
 
-    private void importData(BufferedReader reader) throws Exception {
+    private void importData(LineNumberReader reader) throws Exception {
         Progress.start(progressTicket);        //Progress
 
         //Verify a node line exists and puts nodes and edges lines in arrays

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGML.java
Patch:
@@ -21,8 +21,8 @@
 package org.gephi.io.importer.standard;
 
 import java.awt.Color;
-import java.io.BufferedReader;
 import java.io.IOException;
+import java.io.LineNumberReader;
 import java.io.StreamTokenizer;
 import java.util.ArrayList;
 import org.gephi.data.attributes.api.AttributeClass;
@@ -53,7 +53,7 @@ public class ImporterGML implements TextImporter, LongTask {
     private ProgressTicket progressTicket;
     private boolean cancel = false;
 
-    public void importData(BufferedReader reader, ContainerLoader container, Report report) throws Exception {
+    public void importData(LineNumberReader reader, ContainerLoader container, Report report) throws Exception {
         this.container = container;
         this.report = report;
 
@@ -73,7 +73,7 @@ private void clean() {
         this.cancel = false;
     }
 
-    private void importData(BufferedReader reader) throws Exception {
+    private void importData(LineNumberReader reader) throws Exception {
         Progress.start(progressTicket);
 
         ArrayList list;

File: PartitionImpl/src/org/gephi/partition/PartitionModelImpl.java
Patch:
@@ -42,7 +42,7 @@ public class PartitionModelImpl implements PartitionModel {
     private List<ChangeListener> listeners;
 
     //Data
-    private int selectedPartitioning = -1;
+    private int selectedPartitioning = NODE_PARTITIONING;
     private Partition nodePartition;
     private Partition edgePartition;
     private TransformerBuilder nodeBuilder;

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingTopComponent.java
Patch:
@@ -112,6 +112,7 @@ private void initEvents() {
         pc.addWorkspaceListener(new WorkspaceListener() {
 
             public void initialize(Workspace workspace) {
+                workspace.getWorkspaceData().setData(key, new RankingUIModel());
             }
 
             public void select(Workspace workspace) {

File: ClusteringAPI/src/org/gephi/algorithms/cluster/api/ClusteringController.java
Patch:
@@ -27,4 +27,6 @@
 public interface ClusteringController {
 
     public void clusterize(Clusterer clusterer);
+
+    public void selectCluster(Cluster cluster);
 }

File: ClusteringStandard/src/org/gephi/algorithms/cluster/mcl/MarkovClustering.java
Patch:
@@ -138,6 +138,7 @@ public void execute(Graph graph) {
                 for (Integer in : c) {
                     Node node = nodeMap.get(in);
                     nodes[i] = node;
+                    i++;
                 }
                 clustersList.add(new MCLCluster(nodes, clusterNumber));
                 clusterNumber++;
@@ -167,7 +168,7 @@ private static class MCLCluster implements Cluster {
 
         public MCLCluster(Node[] nodes, int number) {
             this.nodes = nodes;
-            this.name = "Cluster "+number;
+            this.name = "Cluster " + number;
         }
 
         public Node[] getNodes() {

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -77,7 +77,7 @@ public class VizConfig {
     protected boolean cameraControlEnable = true;
     protected boolean showFPS = true;
     protected boolean reduceFpsWhenMouseOut = true;
-    protected int reduceFpsWhenMouseOutValue = 1;
+    protected int reduceFpsWhenMouseOutValue = 20;
     protected boolean showArrows = true;
     protected boolean lightenNonSelected = true;
     protected float[] lightenNonSelectedColor = {0.95f, 0.95f, 0.95f, 1f};

File: VisualizationModule/src/org/gephi/visualization/api/selection/SelectionManager.java
Patch:
@@ -114,6 +114,7 @@ public void resetSelection() {
             vizConfig.setCustomSelection(false);
             setDirectMouseSelection();
         }
+        engine.resetSelection();
     }
 
     public void selectNode(Node node) {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -775,13 +775,13 @@ public void initSelection() {
             rectangleSelection = false;
             currentSelectionArea = null;
         } else if (vizConfig.isRectangleSelection()) {
+            currentSelectionArea = new Rectangle();
             rectangleSelection = true;
             customSelection = false;
-            currentSelectionArea = new Rectangle();
         } else {
-            rectangleSelection = false;
-            customSelection = false;
             currentSelectionArea = new Cylinder();
+            rectangleSelection = false;
+            customSelection = false;       
         }
     }
 

File: VisualizationModule/src/org/gephi/visualization/swing/StandardGraphIO.java
Patch:
@@ -179,7 +179,7 @@ public void mouseMoved(MouseEvent e) {
      */
     public void mouseClicked(MouseEvent e) {
         if (SwingUtilities.isLeftMouseButton(e)) {
-            if (vizController.getVizConfig().isSelectionEnable() && vizController.getVizConfig().isRectangleSelection()) {
+            if (vizController.getVizConfig().isSelectionEnable() && engine.isRectangleSelection()) {
                 Rectangle r = (Rectangle) engine.getCurrentSelectionArea();
                 boolean ctrl = (e.getModifiers() & InputEvent.CTRL_DOWN_MASK) != 0 || (e.getModifiers() & InputEvent.CTRL_MASK) != 0;
                 r.setCtrl(ctrl);

File: DesktopHierarchy/src/org/gephi/desktop/hierarchy/HierarchyControlPanel.java
Patch:
@@ -80,6 +80,7 @@ public void mouseClicked(MouseEvent e) {
                 TopComponent tc = WindowManager.getDefault().findTopComponent("HierarchyTopComponent");
                 if(tc!=null) {
                     tc.open();
+                    tc.requestActive();
                     HierarchyTopComponent hierarchyTopComponent = (HierarchyTopComponent)tc;
                     hierarchyTopComponent.refresh();
                 }

File: DesktopHierarchy/src/org/gephi/desktop/hierarchy/HierarchyTopComponent.java
Patch:
@@ -53,7 +53,6 @@ public void actionPerformed(ActionEvent e) {
         levelLimitCombo.addItemListener(new ItemListener() {
 
             public void itemStateChanged(ItemEvent e) {
-                int height = levelLimitCombo.getModel().getSize();
                 int lvl = levelLimitCombo.getSelectedIndex();
                 if (lvl != dendrogram.getMaxHeight()) {
                     dendrogram.setMaxHeight(lvl);
@@ -66,11 +65,11 @@ public void itemStateChanged(ItemEvent e) {
     private void refreshLevelLimit(HierarchicalGraph graph) {
         int h = graph.getHeight();
         DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel();
+        comboBoxModel.addElement(NbBundle.getMessage(HierarchyTopComponent.class, "HierarchyTopComponent.bar.levelmax"));
         String levelStr = NbBundle.getMessage(HierarchyTopComponent.class, "HierarchyTopComponent.bar.level");
         for (int i = 1; i <= h; i++) {
             comboBoxModel.addElement(levelStr + " " + i);
         }
-        comboBoxModel.addElement(NbBundle.getMessage(HierarchyTopComponent.class, "HierarchyTopComponent.bar.levelmax"));
         levelLimitCombo.setModel(comboBoxModel);
         levelLimitCombo.setSelectedIndex(Math.min(h, dendrogram.getMaxHeight()));
     }
@@ -132,7 +131,8 @@ private void initComponents() {
     private javax.swing.JComboBox levelLimitCombo;
     private javax.swing.JButton refreshButton;
     // End of variables declaration//GEN-END:variables
-/**
+
+    /**
      * Gets default instance. Do not use directly: reserved for *.settings files only,
      * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
      * To obtain the singleton instance, use {@link #findInstance}.

File: RankingAPI/src/org/gephi/ranking/api/RankingUIModel.java
Patch:
@@ -126,7 +126,7 @@ public Transformer getSelectedNodeTransformer() {
     public Transformer getSelectedEdgeTransformer() {
         if (edgeTransformer != null) {
             for (Transformer t : edgeTransformers) {
-                if (t.getClass().getSimpleName().equals(edgeTransformer)) {
+                if (edgeTransformer.isAssignableFrom(t.getClass())) {
                     return t;
                 }
             }

File: VisualizationModule/src/org/gephi/visualization/swing/StandardGraphIO.java
Patch:
@@ -238,7 +238,7 @@ public void mouseDragged(MouseEvent e) {
             mousePosition[0] = x;
             mousePosition[1] = graphDrawable.viewport.get(3) - y;
 
-            if (vizController.getVizConfig().isSelectionEnable() && vizController.getVizConfig().isRectangleSelection()) {
+            if (vizController.getVizConfig().isSelectionEnable() && engine.isRectangleSelection()) {
                 if (!dragging) {
                     //Start drag
                     dragging = true;

File: JOGLWrapper/src/org/gephi/jogl/JOGLNativesInstaller.java
Patch:
@@ -221,6 +221,7 @@ public String getSubDirectoryPath() {
         new NativeLibInfo("win", "x86_64", "windows-amd64", "", ".dll"),
         new NativeLibInfo("mac", "ppc", "macosx-ppc", "lib", ".jnilib"),
         new NativeLibInfo("mac", "i386", "macosx-universal", "lib", ".jnilib"),
+        new NativeLibInfo("mac", "x86_64", "macosx-universal", "lib", ".jnilib"),
         new NativeLibInfo("linux", "i386", "linux-i586", "lib", ".so"),
         new NativeLibInfo("linux", "x86", "linux-i586", "lib", ".so"),
         new NativeLibInfo("linux", "amd64", "linux-amd64", "lib", ".so"),

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGEXF.java
Patch:
@@ -276,7 +276,6 @@ private void parseNodes(NodeList nodeListE, String parent) throws Exception {
                 String pid = nodeE.getAttribute("pid");
 
                 // parent node unknown, maybve declared after
-
                 if(!container.nodeExists(pid)) {
                     if(unknownParents.containsKey(pid)) {
                         unknownParents.get(pid).add(nodeId);
@@ -673,7 +672,7 @@ private void setEdgeData(Element dataE, EdgeDraft edgeDraft, String edgeId) {
         if (!dataValue.isEmpty()) {
 
             //Data attribute value
-            AttributeColumn column = container.getAttributeManager().getNodeClass().getAttributeColumn(dataKey);
+            AttributeColumn column = container.getAttributeManager().getEdgeClass().getAttributeColumn(dataKey);
             if (column != null) {
                 try {
                     Object value = column.getAttributeType().parse(dataValue);
@@ -947,7 +946,7 @@ private void setEdgeData(Element dataE, EdgeDraft edgeDraft, String edgeId) {
             if (!dataValue.isEmpty()) {
 
                 //Data attribute value
-                AttributeColumn column = container.getAttributeManager().getNodeClass().getAttributeColumn(dataKey);
+                AttributeColumn column = container.getAttributeManager().getEdgeClass().getAttributeColumn(dataKey);
                 if (column != null) {
                     try {
                         Object value = column.getAttributeType().parse(dataValue);

File: DHNSGraph/src/org/gephi/graph/dhns/node/PreNode.java
Patch:
@@ -76,6 +76,7 @@ public PreNode(int ID, int pre, int size, int level, AbstractNode parent) {
     public PreNode(PreNode node) {
         this.ID = node.ID;
         this.nodeData = node.nodeData;
+        this.enabled = node.enabled;
         edgesOutTree = new EdgeOppositeTree(this);
         edgesInTree = new EdgeOppositeTree(this);
         metaEdgesOutTree = new MetaEdgeTree(this);

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/TreeListIterator.java
Patch:
@@ -50,6 +50,7 @@ public class TreeListIterator extends AbstractNodeIterator implements Iterator<A
      * @param fromIndex  the index to start at
      */
     public TreeListIterator(DurableTreeList treeList, int fromIndex) throws IndexOutOfBoundsException {
+
         this.treeList = treeList;
         this.nextIndex = fromIndex;
     }

File: DHNSGraph/src/org/gephi/graph/dhns/subgraph/SubGraphManager.java
Patch:
@@ -59,10 +59,9 @@ public static void filterSubGraph(GraphStructure graphStructure, NodePredicate n
             AbstractNode node = itr.next();
             if (!nodePredicate.evaluate(node)) {
                 AbstractNode descendant = node;
-                treeStructure.decrementAncestorSize(node, node.size);
+                treeStructure.decrementAncestorSize(node, node.size+1);
                 for (int i = 0; i <= node.size; i++) {       //Delete descendant and self
                     itr.remove();
-                    descendant.parent = null;
                     //Clear edges
                     if (descendant.getEdgesInTree().getCount() > 0) {
                         for (edgeIterator.setNode(descendant.getEdgesInTree()); edgeIterator.hasNext();) {

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/filter/DhnsTestFiltering.java
Patch:
@@ -125,10 +125,12 @@ public void testSetUp() {
 
     @Test
     public void testFiltering() {
+        dhnsGlobal.getGraphStructure().getStructure().showTreeAsTable();
         graphGlobal.getView().addPredicate(new DegreePredicate(3, 5));
         Node[] actual = graphGlobal.getNodes().toArray();
         for(int i=0;i<actual.length;i++) {
             System.out.println(actual[i].getId());
         }
+        ((ViewImpl)graphGlobal.getView()).getGraphStructure().getStructure().showTreeAsTable();
     }
 }

File: FiltersAPI/src/org/gephi/filters/api/Filter.java
Patch:
@@ -20,6 +20,7 @@
  */
 package org.gephi.filters.api;
 
+import javax.swing.event.ChangeListener;
 import org.gephi.graph.api.Predicate;
 
 /**
@@ -29,5 +30,4 @@
 public interface Filter {
 
     public Predicate getPredicate();
-
 }

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredDirectedGraphImpl.java
Patch:
@@ -334,7 +334,7 @@ public MetaEdge getMetaEdge(Node source, Node target) {
     }
 
     @Override
-    public ClusteredDirectedGraphImpl copy(ClusteredGraphImpl graph) {
+    public ClusteredDirectedGraphImpl copy(Dhns dhns, GraphStructure structure, View view) {
         return new ClusteredDirectedGraphImpl(dhns, structure, view);
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredGraphImpl.java
Patch:
@@ -53,9 +53,10 @@ public ClusteredGraphImpl(Dhns dhns, GraphStructure structure, View view) {
         this.dhns = dhns;
         this.structure = structure;
         this.view = (ViewImpl) view;
+        ((ViewImpl) view).setGraph(this);
     }
 
-    public abstract ClusteredGraphImpl copy(ClusteredGraphImpl graph);
+    public abstract ClusteredGraphImpl copy(Dhns dhns, GraphStructure structure, View view);
 
     public boolean addNode(Node node, Node parent) {
         if (node == null) {

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredMixedGraphImpl.java
Patch:
@@ -262,7 +262,7 @@ public EdgeIterable getMetaEdgeContent(Edge metaEdge) {
     }
 
     @Override
-    public ClusteredMixedGraphImpl copy(ClusteredGraphImpl graph) {
+    public ClusteredMixedGraphImpl copy(Dhns dhns, GraphStructure structure, View view) {
         return new ClusteredMixedGraphImpl(dhns, structure, view);
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredUndirectedGraphImpl.java
Patch:
@@ -260,7 +260,7 @@ public EdgeIterable getMetaEdgeContent(Edge metaEdge) {
     }
 
     @Override
-    public ClusteredUndirectedGraphImpl copy(ClusteredGraphImpl graph) {
+    public ClusteredUndirectedGraphImpl copy(Dhns dhns, GraphStructure structure, View view) {
         return new ClusteredUndirectedGraphImpl(dhns, structure, view);
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/TreeListIterator.java
Patch:
@@ -78,5 +78,6 @@ public AbstractNode next() {
     @Override
     public void remove() {
         treeList.remove(--nextIndex);
+        next = null;
     }
 }

File: FiltersAPI/src/org/gephi/filters/api/Filter.java
Patch:
@@ -30,5 +30,4 @@ public interface Filter {
 
     public Predicate getPredicate();
 
-    public FilterBuilder getBuilder();
 }

File: DataLaboratory/src/org/gephi/data/laboratory/NodeDataTable.java
Patch:
@@ -186,10 +186,11 @@ public Class getColumnClass(int column) {
         }
 
         public boolean isCellEditable(Object node, int column) {
-            return false;
+            return columns[column].isEditable();
         }
 
         public void setValueFor(Object node, int column, Object value) {
+            columns[column].setValueFor((ImmutableTreeNode) node, value);
         }
 
         public String getColumnName(int column) {

File: ImportContainerStandard/src/org/gephi/io/container/standard/ImportContainerImpl.java
Patch:
@@ -23,6 +23,7 @@
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Iterator;
+import java.util.LinkedHashMap;
 import org.gephi.data.attributes.api.AttributeController;
 import org.gephi.data.attributes.api.AttributeManager;
 import org.gephi.data.attributes.api.AttributeValueFactory;
@@ -75,8 +76,8 @@ public class ImportContainerImpl implements Container, ContainerLoader, Containe
 
     public ImportContainerImpl() {
         parameters = new ImportContainerParameters();
-        nodeMap = new HashMap<String, NodeDraftImpl>();
-        edgeMap = new HashMap<String, EdgeDraftImpl>();
+        nodeMap = new LinkedHashMap<String, NodeDraftImpl>();//to maintain the order
+        edgeMap = new LinkedHashMap<String, EdgeDraftImpl>();
         edgeSourceTargetMap = new HashMap<String, EdgeDraftImpl>();
         attributeFactory = Lookup.getDefault().lookup(AttributeController.class).valueFactory();
         attributeManager = Lookup.getDefault().lookup(AttributeController.class).getTemporaryAttributeManager();

File: ImportContainerStandard/src/org/gephi/io/container/standard/ImportContainerParameters.java
Patch:
@@ -31,7 +31,7 @@ public class ImportContainerParameters {
     private boolean selfLoops = true;
     private boolean parallelEdges = true;
     private boolean autoNode = true;
-    private EdgeDefault edgeDefault = EdgeDefault.MIXED;
+    private EdgeDefault edgeDefault = EdgeDefault.DIRECTED;
 
     public boolean isAutoNode() {
         return autoNode;

File: ToolsStandard/src/org/gephi/tools/ShortestPath.java
Patch:
@@ -80,7 +80,7 @@ public void clickNodes(Node[] nodes) {
                     sourceNode = n;
                     shortestPathPanel.setResult("");
                     shortestPathPanel.setStatus(NbBundle.getMessage(ShortestPath.class, "ShortestPath.status2"));
-                } else {
+                } else if (n != sourceNode) {
                     color = shortestPathPanel.getColor();
                     float[] colorArray = new float[]{color.getRed() / 255f, color.getGreen() / 255f, color.getBlue() / 255f};
                     Node targetNode = n;

File: VisualizationModule/src/org/gephi/visualization/api/selection/SelectionManager.java
Patch:
@@ -110,8 +110,8 @@ public void setCustomSelection() {
     }
 
     public void resetSelection() {
-        //disableSelection();
         if (isCustomSelection()) {
+            vizConfig.setCustomSelection(false);
             setDirectMouseSelection();
         }
     }

File: VisualizationModule/src/org/gephi/visualization/events/StandardVizEventManager.java
Patch:
@@ -106,7 +106,7 @@ public void mouseLeftClick() {
         VizEventTypeHandler mouseLeftHandler = handlers[VizEvent.Type.MOUSE_LEFT_CLICK.ordinal()];
         if (mouseLeftHandler.hasListeners()) {
             ModelImpl[] modelArray = engine.getSelectedObjects(AbstractEngine.CLASS_NODE);
-            if (modelArray.length == 0) {
+            if (modelArray.length == 0 || !VizController.getInstance().getVizConfig().isSelectionEnable()) {
                 float[] mousePositionViewport = graphIO.getMousePosition();
                 float[] mousePosition3d = graphIO.getMousePosition3d();
                 float[] mousePos = new float[]{mousePositionViewport[0], mousePositionViewport[1], mousePosition3d[0], mousePosition3d[1]};

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGEXF.java
Patch:
@@ -133,7 +133,7 @@ public void importData(Document document, ContainerLoader container, Report repo
             Progress.switchToDeterminate(progressTicket, taskMax);
 
             // Default edge type
-            exp = xpath.compile("./graph/edges[@defaultedgetype]");
+            exp = xpath.compile("./graph[@defaultedgetype]");
             NodeList edgeTypeE = (NodeList) exp.evaluate(root, XPathConstants.NODESET);
             if(edgeTypeE != null && edgeTypeE.getLength() > 0) {
                 String defaultEdgeType = ((Element) edgeTypeE.item(0)).getAttribute("defaultedgetype");

File: DHNSGraph/src/org/gephi/graph/dhns/core/Dhns.java
Patch:
@@ -74,6 +74,7 @@ public Dhns(DhnsGraphController controller) {
         eventManager = new EventManager(this);
         dynamicManager = new DynamicManager(this);
         decoratorFactory = new DecoratorFactoryImpl(this);
+        settingsManager = new SettingsManager(this);
         
         init();
     }

File: DesktopProjectController/src/org/gephi/project/controller/DesktopProjectController.java
Patch:
@@ -363,7 +363,7 @@ public void deleteWorkspace(Workspace workspace) {
         //Event
         fireWorkspaceEvent(EventType.CLOSE, workspace);
 
-        if (getCurrentProject().getWorkspaces().length == 0) {
+        if (getCurrentProject()==null || getCurrentProject().getWorkspaces().length == 0) {
             //Event
             fireWorkspaceEvent(EventType.DISABLE, workspace);
         }

File: DataLaboratory/src/org/gephi/data/laboratory/NodeDataTable.java
Patch:
@@ -53,6 +53,9 @@ public NodeDataTable() {
         quickFilter = new QuickFilter() {
 
             public boolean accept(Object value) {
+                if(value==null) {
+                    return false;
+                }
                 if (value instanceof ImmutableTreeNode) {
                     return pattern.matcher(((ImmutableTreeNode) value).getNode().getNodeData().getLabel()).find();
                 }

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingTopComponent.java
Patch:
@@ -191,11 +191,11 @@ private void initComponents() {
         gridBagConstraints = new java.awt.GridBagConstraints();
         gridBagConstraints.gridx = 0;
         gridBagConstraints.gridy = 1;
-        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
+        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
         gridBagConstraints.weightx = 1.0;
         add(rankingChooser, gridBagConstraints);
 
-        listResultContainerPanel.setLayout(new java.awt.GridLayout());
+        listResultContainerPanel.setLayout(new java.awt.GridLayout(1, 0));
 
         listResultPanel.setBorder(null);
         listResultContainerPanel.add(listResultPanel);

File: DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java
Patch:
@@ -88,15 +88,15 @@ public void setAttributes(Attributes attributes) {
     }
 
     public float x() {
-        return (getSource().x() + getTarget().x()) / 3f;
+        return (getSource().x() + 2 * getTarget().x()) / 3f;
     }
 
     public float y() {
-        return (getSource().y() + getTarget().y()) / 3f;
+        return (getSource().y() + 2 * getTarget().y()) / 3f;
     }
 
     public float z() {
-        return (getSource().z() + getTarget().z()) / 3f;
+        return (getSource().z() + 2 * getTarget().z()) / 3f;
     }
 
     public void setX(float x) {

File: DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java
Patch:
@@ -88,15 +88,15 @@ public void setAttributes(Attributes attributes) {
     }
 
     public float x() {
-        return (getSource().x() + getTarget().x()) / 2f;
+        return (getSource().x() + getTarget().x()) / 3f;
     }
 
     public float y() {
-        return (getSource().y() + getTarget().y()) / 2f;
+        return (getSource().y() + getTarget().y()) / 3f;
     }
 
     public float z() {
-        return (getSource().z() + getTarget().z()) / 2f;
+        return (getSource().z() + getTarget().z()) / 3f;
     }
 
     public void setX(float x) {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/Edge2dModel.java
Patch:
@@ -267,11 +267,11 @@ public void setArrow(ModelImpl arrow) {
 
     @Override
     public float getViewportX() {
-        return (obj.getSource().getModel().getViewportX() + obj.getTarget().getModel().getViewportX()) / 2f;
+        return (obj.getSource().getModel().getViewportX() + 2*obj.getTarget().getModel().getViewportX()) / 3f ;
     }
 
     @Override
     public float getViewportY() {
-        return (obj.getSource().getModel().getViewportY() + obj.getTarget().getModel().getViewportY()) / 2f;
+        return (obj.getSource().getModel().getViewportY() + 2*obj.getTarget().getModel().getViewportY()) / 3f;
     }
 }

File: ImportAPI/src/org/gephi/io/processor/NodeDraftGetter.java
Patch:
@@ -55,6 +55,8 @@ public interface NodeDraftGetter extends NodeDraft {
 
     public boolean isVisible();
 
+    public float getLabelSize();
+
     public void setNode(Node node);
 
     public Node getNode();

File: ImportContainerStandard/src/org/gephi/io/container/standard/EdgeDraftImpl.java
Patch:
@@ -53,9 +53,9 @@ public class EdgeDraftImpl implements EdgeDraft, EdgeDraftGetter {
 
     //Viz
     private Color color;
-    private boolean labelVisible;
+    private boolean labelVisible = true;
     private boolean visible = true;
-    private float labelSize;
+    private float labelSize = -1f;
 
     //Attributes
     private List<AttributeValue> attributeValues = new ArrayList<AttributeValue>();

File: DesktopTools/src/org/gephi/desktop/tools/PropertiesBar.java
Patch:
@@ -22,6 +22,7 @@
 
 import java.awt.BorderLayout;
 import java.awt.Component;
+import java.awt.Cursor;
 import java.awt.Dimension;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
@@ -75,6 +76,7 @@ private JButton getFullScreenIcon() {
         fullScreenButton.setToolTipText(NbBundle.getMessage(PropertiesBar.class, "PropertiesBar.fullScreenButton.tooltip"));
         fullScreenButton.setBorderPainted(false);
         fullScreenButton.setContentAreaFilled(false);
+        fullScreenButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
         fullScreenButton.setBorder(BorderFactory.createEmptyBorder());
         fullScreenButton.setPreferredSize(new Dimension(27, 28));
         fullScreenButton.addActionListener(new ActionListener() {

File: DesktopTools/src/org/gephi/desktop/tools/Toolbar.java
Patch:
@@ -30,7 +30,7 @@
 
 /**
  *
- * @author Mathieu
+ * @author Mathieu Bastian
  */
 public class Toolbar extends JToolBar {
 

File: RankingUI/src/org/gephi/ui/ranking/ResultListPanel.java
Patch:
@@ -125,7 +125,6 @@ private void initTablePopup() {
             public void actionPerformed(ActionEvent e) {
                 try {
                     BufferedImage image = UIUtils.createComponentScreenshot(table);
-                    image = null;
                     writeImage(image);
                 } catch (Exception ex) {
                     String msg = NbBundle.getMessage(ResultListPanel.class, "ResultListPanel.tablescreenshot.error", new Object[]{ex.getClass().getSimpleName(), ex.getLocalizedMessage(), ex.getStackTrace()[0].getClassName(), ex.getStackTrace()[0].getLineNumber()});

File: DesktopRanking/src/org/gephi/desktop/ranking/RankingTopComponent.java
Patch:
@@ -188,8 +188,6 @@ private void initComponents() {
         gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
         gridBagConstraints.weightx = 1.0;
         add(rankingToolbar, gridBagConstraints);
-
-        rankingChooser.setPreferredSize(new java.awt.Dimension(100, 110));
         gridBagConstraints = new java.awt.GridBagConstraints();
         gridBagConstraints.gridx = 0;
         gridBagConstraints.gridy = 1;

File: RankingUI/src/org/gephi/ui/ranking/ResultListPanel.java
Patch:
@@ -38,6 +38,7 @@
 import org.gephi.ranking.RankingController;
 import org.gephi.ranking.RankingResult;
 import org.gephi.ranking.SizeTransformer;
+import org.gephi.ui.utils.UIUtils;
 import org.jdesktop.swingx.JXTable;
 import org.openide.util.Lookup;
 import org.openide.util.LookupEvent;
@@ -202,6 +203,7 @@ public RankCellColor(Color color, Object rank) {
 
         public void render(JLabel label) {
             label.setBackground(color);
+            label.setForeground(UIUtils.getForegroundColorForBackground(color));
             label.setText(rank.toString());
         }
     }

File: RankingUI/src/org/gephi/ui/ranking/transformer/ColorTransformerPanel.java
Patch:
@@ -141,6 +141,8 @@ private void initComponents() {
         upperBoundLabel = new javax.swing.JLabel();
         lowerBoundLabel = new javax.swing.JLabel();
 
+        setPreferredSize(new java.awt.Dimension(225, 114));
+
         labelColor.setText(org.openide.util.NbBundle.getMessage(ColorTransformerPanel.class, "ColorTransformerPanel.labelColor.text")); // NOI18N
 
         gradientPanel.setOpaque(false);

File: RankingUI/src/org/gephi/ui/ranking/ResultListPanel.java
Patch:
@@ -202,7 +202,6 @@ public RankCellColor(Color color, Object rank) {
 
         public void render(JLabel label) {
             label.setBackground(color);
-            System.out.println(color);
             label.setText(rank.toString());
         }
     }

File: RankingAPI/src/org/gephi/ranking/AbstractSizeTransformer.java
Patch:
@@ -26,8 +26,8 @@
  */
 public abstract class AbstractSizeTransformer<Type, Target> extends AbstractTransformer<Type, Target> implements SizeTransformer<Type, Target> {
 
-    protected float minSize;
-    protected float maxSize;
+    protected float minSize = 1f;
+    protected float maxSize = 4f;
 
     public AbstractSizeTransformer() {
     }

File: RankingAPI/src/org/gephi/ranking/RankingControllerImpl.java
Patch:
@@ -45,14 +45,14 @@ public void transform(Transformer transformer) {
         if (ranking instanceof NodeRanking) {
             for (Node node : graph.getNodes().toArray()) {
                 Object value = ranking.getValue(node);
-                if (value != null) {
+                if (value != null && transformer.isInBounds(value)) {
                     transformer.transform(node, value);
                 }
             }
         } else {
             for (Edge edge : graph.getEdges().toArray()) {
                 Object value = ranking.getValue(edge);
-                if (value != null) {
+                if (value != null && transformer.isInBounds(value)) {
                     transformer.transform(edge, value);
                 }
             }

File: RankingAPI/src/org/gephi/ranking/RankingUIModel.java
Patch:
@@ -265,13 +265,13 @@ public Element writeXML(Document document) {
         listE.setTextContent(String.valueOf(listVisible));
         rankingModelE.appendChild(barChartE);
 
-        Element nodeTransformerE = document.createElement("nodetransformer");
+        /*Element nodeTransformerE = document.createElement("nodetransformer");
         nodeTransformerE.setTextContent(String.valueOf(nodeTransformer));
         rankingModelE.appendChild(nodeTransformerE);
 
         Element edgeTransformerE = document.createElement("edgetransformer");
         edgeTransformerE.setTextContent(String.valueOf(edgeTransformer));
-        rankingModelE.appendChild(edgeTransformerE);
+        rankingModelE.appendChild(edgeTransformerE);*/
 
         return rankingModelE;
     }

File: UIComponents/src/org/gephi/ui/components/JRangeSlider.java
Patch:
@@ -41,7 +41,7 @@
 
 /**
  *
- * @author Mathieu
+ * @author Mathieu Bastian
  */
 public class JRangeSlider extends JSlider {
 

File: RankingAPI/src/org/gephi/ranking/RankingControllerImpl.java
Patch:
@@ -46,14 +46,14 @@ public void transform(Transformer transformer) {
             for (Node node : graph.getNodes().toArray()) {
                 Object value = ranking.getValue(node);
                 if (value != null) {
-                    transformer.transform(value, node);
+                    transformer.transform(node, value);
                 }
             }
         } else {
             for (Edge edge : graph.getEdges().toArray()) {
                 Object value = ranking.getValue(edge);
                 if (value != null) {
-                    transformer.transform(value, edge);
+                    transformer.transform(edge, value);
                 }
             }
         }

File: RankingAPI/src/org/gephi/ranking/RankingUIModel.java
Patch:
@@ -115,7 +115,7 @@ public void setSelectedNodeRanking(String selectedNodeRanking) {
     public Transformer getSelectedNodeTransformer() {
         if (nodeTransformer != null) {
             for (Transformer t : nodeTransformers) {
-                if(nodeTransformer.isAssignableFrom(t.getClass())) {
+                if (nodeTransformer.isAssignableFrom(t.getClass())) {
                     return t;
                 }
             }

File: RankingUI/src/org/gephi/ui/ranking/RankingChooser.java
Patch:
@@ -230,7 +230,7 @@ private Transformer getSelectedTransformer() {
     private TransformerUI getUIForTransformer(Transformer transformer) {
         if (transformer != null) {
             for (TransformerUI u : transformerUIs) {
-                if (u.getTransformerClass().equals(transformer.getClass())) {
+                if (u.getTransformerClass().isAssignableFrom(transformer.getClass())) {
                     return u;
                 }
             }

File: RankingUI/src/org/gephi/ui/ranking/RankingToolbar.java
Patch:
@@ -73,14 +73,14 @@ private void refreshModel() {
         for (Enumeration<AbstractButton> btns = nodeTransformerGroup.getElements(); btns.hasMoreElements();) {
             AbstractButton btn = btns.nextElement();
             btn.setVisible(nodeSelected);
-            if (btn.getName().equals(model.getNodeTransformer())) {
+            if (btn.getName().equals(model.getNodeTransformer().getSimpleName())) {
                 nodeTransformerGroup.setSelected(btn.getModel(), true);
             }
         }
         for (Enumeration<AbstractButton> btns = edgeTransformerGroup.getElements(); btns.hasMoreElements();) {
             AbstractButton btn = btns.nextElement();
             btn.setVisible(edgeSelected);
-            if (btn.getName().equals(model.getEdgeTransformer())) {
+            if (btn.getName().equals(model.getEdgeTransformer().getSimpleName())) {
                 edgeTransformerGroup.setSelected(btn.getModel(), true);
             }
         }

File: RankingAPI/src/org/gephi/ranking/RankingController.java
Patch:
@@ -28,7 +28,7 @@ public interface RankingController {
 
     public RankingModel getRankingModel();
 
-    public Ranking[] getNodeRanking();
+    public void transform(Transformer transformer);
 
     public ColorTransformer getColorTransformer(Ranking ranking);
 

File: RankingAPI/src/org/gephi/ranking/TransformerFactory.java
Patch:
@@ -53,8 +53,7 @@ public static ColorTransformer getColorTransformer(Ranking ranking) {
                 colorTransformer = getEdgeLongColorTransformer();
             }
         }
-
-
+        colorTransformer.setRanking(ranking);
         return colorTransformer;
     }
 
@@ -69,6 +68,7 @@ public static SizeTransformer getSizeTransformer(Ranking ranking) {
         } else if (ranking.getType().equals(Long.class)) {
             sizeTransformer = getNodeLongSizeTransformer();
         }
+        sizeTransformer.setRanking(ranking);
         return sizeTransformer;
     }
 

File: RankingUI/src/org/gephi/ui/ranking/transformer/ColorTransformerPanel.java
Patch:
@@ -72,8 +72,6 @@ private void initComponents() {
         rangeSlider = new JRangeSlider();
         labelRange = new javax.swing.JLabel();
 
-        setBackground(new java.awt.Color(255, 255, 255));
-
         labelColor.setText(org.openide.util.NbBundle.getMessage(ColorTransformerPanel.class, "ColorTransformerPanel.labelColor.text")); // NOI18N
 
         gradientPanel.setOpaque(false);

File: RankingUI/src/org/gephi/ui/ranking/transformer/SizeTransformerPanel.java
Patch:
@@ -69,8 +69,6 @@ private void initComponents() {
         labelRange = new javax.swing.JLabel();
         rangeSlider = new JRangeSlider();
 
-        setBackground(new java.awt.Color(255, 255, 255));
-
         labelMinSize.setText(org.openide.util.NbBundle.getMessage(SizeTransformerPanel.class, "SizeTransformerPanel.labelMinSize.text")); // NOI18N
 
         minSize.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(1.0f), Float.valueOf(0.1f), null, Float.valueOf(0.5f)));

File: PreviewImpl/src/org/gephi/preview/NodeImpl.java
Patch:
@@ -109,8 +109,7 @@ public final void setColor(Color color) {
     }
 
     public Color getBorderColor() {
-        //TODO manage node border color
-        return new SimpleColor(0, 0, 0);
+        return supervisor.getNodeBorderColorizer().getColor();
     }
 
     public Float getBorderWidth() {

File: PreviewAPI/src/org/gephi/preview/api/color/colorizer/GenericColorizer.java
Patch:
@@ -7,4 +7,6 @@
 public interface GenericColorizer extends Colorizer {
 
     public void color(ColorizerClient client);
+
+	public java.awt.Color getAwtColor();
 }

File: PreviewAPI/src/org/gephi/preview/api/color/colorizer/Colorizer.java
Patch:
@@ -6,5 +6,6 @@
  */
 public interface Colorizer {
 
-    public ColorizerType getColorizerType();
+    @Override
+    public String toString();
 }

File: PreviewAPI/src/org/gephi/preview/api/color/colorizer/ColorizerType.java
Patch:
@@ -6,6 +6,8 @@
  */
 public enum ColorizerType {
 
+	//TODO enum to remove
+
     CUSTOM,
     NODE_ORIGINAL,
     PARENT_NODE,

File: PreviewAPI/src/org/gephi/preview/api/color/Color.java
Patch:
@@ -12,4 +12,5 @@ public interface Color {
 
     public Integer getBlue();
 
+    public String toHexString();
 }

File: PreviewAPI/src/org/gephi/preview/api/color/colorizer/Colorizer.java
Patch:
@@ -1,4 +1,4 @@
-package org.gephi.preview.api.color;
+package org.gephi.preview.api.color.colorizer;
 
 /**
  *
@@ -7,5 +7,4 @@
 public interface Colorizer {
 
     public ColorizerType getColorizerType();
-//    void colorClient();
 }

File: PreviewAPI/src/org/gephi/preview/api/color/colorizer/ColorizerType.java
Patch:
@@ -1,4 +1,4 @@
-package org.gephi.preview.api.color;
+package org.gephi.preview.api.color.colorizer;
 
 /**
  *

File: PreviewAPI/src/org/gephi/preview/api/color/colorizer/EdgeChildColorizer.java
Patch:
@@ -1,4 +1,6 @@
-package org.gephi.preview.api.color;
+package org.gephi.preview.api.color.colorizer;
+
+import org.gephi.preview.api.color.colorizer.Colorizer;
 
 /**
  *

File: PreviewAPI/src/org/gephi/preview/api/color/colorizer/EdgeColorizer.java
Patch:
@@ -1,4 +1,6 @@
-package org.gephi.preview.api.color;
+package org.gephi.preview.api.color.colorizer;
+
+import org.gephi.preview.api.color.*;
 
 /**
  *

File: PreviewImpl/src/org/gephi/preview/color/colormode/ParentEdgeColorMode.java
Patch:
@@ -1,7 +1,7 @@
-package org.gephi.preview.color;
+package org.gephi.preview.color.colormode;
 
-import org.gephi.preview.api.color.ColorizerType;
-import org.gephi.preview.api.color.EdgeChildColorizer;
+import org.gephi.preview.api.color.colorizer.ColorizerType;
+import org.gephi.preview.api.color.colorizer.EdgeChildColorizer;
 
 /**
  *

File: PreviewImpl/src/org/gephi/preview/util/HolderImpl.java
Patch:
@@ -1,10 +1,12 @@
 package org.gephi.preview.util;
 
+import org.gephi.preview.api.Holder;
+
 /**
  *
  * @author jeremy
  */
-public class Holder<T> {
+public class HolderImpl<T> implements Holder<T> {
 
     private T m_component;
 

File: PreviewUI/src/org/gephi/ui/preview/AbstractColorizerPropertyEditor.java
Patch:
@@ -18,8 +18,8 @@
 import javax.swing.JPanel;
 import javax.swing.JRadioButton;
 import javax.swing.LayoutStyle.ComponentPlacement;
-import org.gephi.preview.api.color.Colorizer;
-import org.gephi.preview.api.color.ColorizerType;
+import org.gephi.preview.api.color.colorizer.Colorizer;
+import org.gephi.preview.api.color.colorizer.ColorizerType;
 
 /**
  *

File: PreviewUI/src/org/gephi/ui/preview/EdgeChildColorizerPropertyEditor.java
Patch:
@@ -1,8 +1,8 @@
 package org.gephi.ui.preview;
 
-import org.gephi.preview.api.color.Colorizer;
-import org.gephi.preview.api.color.ColorizerFactory;
-import org.gephi.preview.api.color.ColorizerType;
+import org.gephi.preview.api.color.colorizer.Colorizer;
+import org.gephi.preview.api.color.colorizer.ColorizerFactory;
+import org.gephi.preview.api.color.colorizer.ColorizerType;
 import org.openide.util.Lookup;
 
 /**

File: PreviewUI/src/org/gephi/ui/preview/EdgeColorizerPropertyEditor.java
Patch:
@@ -1,8 +1,8 @@
 package org.gephi.ui.preview;
 
-import org.gephi.preview.api.color.Colorizer;
-import org.gephi.preview.api.color.ColorizerFactory;
-import org.gephi.preview.api.color.ColorizerType;
+import org.gephi.preview.api.color.colorizer.Colorizer;
+import org.gephi.preview.api.color.colorizer.ColorizerFactory;
+import org.gephi.preview.api.color.colorizer.ColorizerType;
 import org.openide.util.Lookup;
 
 /**

File: PreviewUI/src/org/gephi/ui/preview/GenericColorizerPropertyEditor.java
Patch:
@@ -1,8 +1,8 @@
 package org.gephi.ui.preview;
 
-import org.gephi.preview.api.color.Colorizer;
-import org.gephi.preview.api.color.ColorizerFactory;
-import org.gephi.preview.api.color.ColorizerType;
+import org.gephi.preview.api.color.colorizer.Colorizer;
+import org.gephi.preview.api.color.colorizer.ColorizerFactory;
+import org.gephi.preview.api.color.colorizer.ColorizerType;
 import org.openide.util.Lookup;
 
 /**

File: PreviewUI/src/org/gephi/ui/preview/NodeChildColorizerPropertyEditor.java
Patch:
@@ -1,8 +1,8 @@
 package org.gephi.ui.preview;
 
-import org.gephi.preview.api.color.Colorizer;
-import org.gephi.preview.api.color.ColorizerFactory;
-import org.gephi.preview.api.color.ColorizerType;
+import org.gephi.preview.api.color.colorizer.Colorizer;
+import org.gephi.preview.api.color.colorizer.ColorizerFactory;
+import org.gephi.preview.api.color.colorizer.ColorizerType;
 import org.openide.util.Lookup;
 
 /**

File: PreviewUI/src/org/gephi/ui/preview/NodeColorizerPropertyEditor.java
Patch:
@@ -1,8 +1,8 @@
 package org.gephi.ui.preview;
 
-import org.gephi.preview.api.color.Colorizer;
-import org.gephi.preview.api.color.ColorizerFactory;
-import org.gephi.preview.api.color.ColorizerType;
+import org.gephi.preview.api.color.colorizer.Colorizer;
+import org.gephi.preview.api.color.colorizer.ColorizerFactory;
+import org.gephi.preview.api.color.colorizer.ColorizerType;
 import org.openide.util.Lookup;
 
 /**

File: PreviewUI/src/org/gephi/ui/preview/PreviewSettingsTopComponent.java
Patch:
@@ -36,7 +36,7 @@ private PreviewSettingsTopComponent() {
 
         // property sheet
         PropertySheet ps = new PropertySheet();
-        ps.setNodes(new Node[] { new PreviewNode(controller.getCustomizer()) });
+        ps.setNodes(new Node[] { new PreviewNode(controller) });
         propertiesPanel.add(ps, BorderLayout.CENTER);
     }
 

File: ClusteringStandard/src/org/gephi/algorithms/cluster/mcl/SparseVector.java
Patch:
@@ -226,7 +226,7 @@ public void hadamardProduct(SparseVector v) {
      * @param s
      */
     public void hadamardPower(double s) {
-        for (int i : keySet()) {
+        for (int i : keySet().toArray(new Integer[0])) {
             put(i, Math.pow(get(i), s));
         }
     }

File: UIComponents/src/org/gephi/ui/components/gradientslider/GradientSlider.java
Patch:
@@ -95,6 +95,9 @@ public GradientSlider(int orientation, float[] thumbPositions, Color[] values) {
      */
     public Object getValue(float pos) {
         for (int a = 0; a < thumbPositions.length - 1; a++) {
+            if (thumbPositions[a] == pos) {
+                return values[a];
+            }
             if (thumbPositions[a] < pos && pos < thumbPositions[a + 1]) {
                 float v = (pos - thumbPositions[a]) / (thumbPositions[a + 1] - thumbPositions[a]);
                 return tween((Color) values[a], (Color) values[a + 1], v);

File: VisualizationModule/src/org/gephi/visualization/opengl/text/SizeMode.java
Patch:
@@ -33,6 +33,8 @@ public interface SizeMode {
 
     public ImageIcon getIcon();
 
+    public void init();
+
     public void setSizeFactor2d(float sizeFactor, TextDataImpl text, ModelImpl model);
 
     public void setSizeFactor3d(float sizeFactor, TextDataImpl text, ModelImpl model);

File: VisualizationModule/src/org/gephi/visualization/opengl/text/SizeMode.java
Patch:
@@ -33,5 +33,7 @@ public interface SizeMode {
 
     public ImageIcon getIcon();
 
-    public void setSizeFactor(float sizeFactor, TextDataImpl text, ModelImpl model);
+    public void setSizeFactor2d(float sizeFactor, TextDataImpl text, ModelImpl model);
+
+    public void setSizeFactor3d(float sizeFactor, TextDataImpl text, ModelImpl model);
 }

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/modeler/CompatibilityEdgeModeler.java
Patch:
@@ -69,9 +69,7 @@ public ModelImpl initModel(Renderable n) {
         edge.setObj(e);
         e.setModel(edge);
 
-        if (n.getTextData() == null) {
-            n.setTextData(controller.getTextManager().newTextData(e));
-        }
+        controller.getTextManager().initTextData(e);
 
         return edge;
     }

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/modeler/CompatibilityNodeDiskModeler.java
Patch:
@@ -65,9 +65,7 @@ public ModelImpl initModel(Renderable n) {
         obj.setDragDistanceFromMouse(new float[2]);
         n.setModel(obj);
 
-        if(n.getTextData()==null) {
-            n.setTextData(textManager.newTextData(nd));
-        }
+        textManager.initTextData(nd);
 
         chooseModel(obj);
         return obj;

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/modeler/CompatibilityNodeRectangleModeler.java
Patch:
@@ -60,9 +60,7 @@ public ModelImpl initModel(Renderable n) {
         obj.setDragDistanceFromMouse(new float[2]);
         n.setModel(obj);
 
-        if (n.getTextData() == null) {
-            n.setTextData(textManager.newTextData(nd));
-        }
+        textManager.initTextData(nd);
 
         chooseModel(obj);
         return obj;

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/modeler/CompatibilityNodeSphereModeler.java
Patch:
@@ -67,9 +67,7 @@ public ModelImpl initModel(Renderable n) {
         obj.setDragDistanceFromMouse(new float[2]);
         n.setModel(obj);
 
-        if (n.getTextData() == null) {
-            n.setTextData(textManager.newTextData(nd));
-        }
+        textManager.initTextData(nd);
 
         chooseModel(obj);
         return obj;

File: ToolsStandard/src/org/gephi/ui/tools/HeatMapPanel.java
Patch:
@@ -42,7 +42,7 @@ public HeatMapPanel(Color color1, Color color2) {
         Color[] colors = new Color[]{color1, color2};
         float[] positions = new float[]{0f, 1f};
         slider = new GradientSlider(GradientSlider.HORIZONTAL, positions, colors);
-        slider.putClientProperty("GradientSlider.colorPickerIncludesOpacity", "false");
+        slider.putClientProperty("GradientSlider.includeOpacity", "false");
         slider.setBlocked(true);
         gradientPanel.add(slider);
         initEvents();

File: UIComponents/src/org/gephi/ui/components/gradientslider/GradientSliderUI.java
Patch:
@@ -58,7 +58,7 @@
  * <TD>GradientSlider.showTranslucency</TD><TD>"true"</TD><TD>If this is <code>true</code>, then the slider will reflect the opacity of the colors in the gradient, and paint a checkered background underneath the colors to indicate opacity.  If this is <code>false</code>, then this slider will always paint with completely opaque colors, although the actual colors may be translucent.</DT>
  * </TR>
  * <TR>
- * <TD>GradientSlider.colorPickerIncludesOpacity</TD><TD>"true"</TD><TD>This is used when the user double-clicks a color and a ColorPicker dialog is invoked.  (So this value may not have any meaning if you override <code>GradientSlider.doDoubleClick()</code>.)  This controls whether the opacity/alpha controls are available in that dialog.  This does <i>not</i> control whether translucent colors can be used in this slider: translucent colors are always allowed, if the user can enter them.</TD>
+ * <TD>GradientSlider.includeOpacity</TD><TD>"true"</TD><TD>This is used when the user double-clicks a color and a ColorPicker dialog is invoked.  (So this value may not have any meaning if you override <code>GradientSlider.doDoubleClick()</code>.)  This controls whether the opacity/alpha controls are available in that dialog.  This does <i>not</i> control whether translucent colors can be used in this slider: translucent colors are always allowed, if the user can enter them.</TD>
  * </TR>
  * <TR>
  * <TD>MultiThumbSlider.indicateComponent</TD><TD>"true"</TD><TD>If this is <code>true</code>, then the thumbs will only paint on this component when the mouse is inside this slider <i>or</i> when this slider as the keyboard focus.</DT>

File: DesktopTools/src/org/gephi/desktop/tools/DesktopToolController.java
Patch:
@@ -112,6 +112,9 @@ public void unselect() {
             currentTool.unselect();
             currentHandlers = null;
             currentTool = null;
+            if (propertiesBar != null) {
+                propertiesBar.unselect();
+            }
         }
     }
 
@@ -147,7 +150,6 @@ public int compare(Object o1, Object o2) {
             btn.addActionListener(new ActionListener() {
 
                 public void actionPerformed(ActionEvent e) {
-                    propertiesBar.unselect();
                     select(tool);
                     propertiesBar.select(toolUI.getPropertiesBar(tool));
                 }

File: DesktopTools/src/org/gephi/desktop/tools/PropertiesBar.java
Patch:
@@ -60,6 +60,7 @@ public void unselect() {
         if (propertiesBar != null) {
             remove(propertiesBar);
             revalidate();
+            repaint();
             propertiesBar = null;
         }
     }

File: DesktopTools/src/org/gephi/desktop/tools/SelectionBar.java
Patch:
@@ -25,8 +25,6 @@
 import javax.swing.JPopupMenu;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
-import javax.swing.event.PopupMenuEvent;
-import javax.swing.event.PopupMenuListener;
 import org.gephi.visualization.VizController;
 import org.gephi.visualization.api.selection.SelectionManager;
 import org.openide.util.NbBundle;

File: DesktopTools/src/org/gephi/desktop/tools/DesktopToolController.java
Patch:
@@ -163,7 +163,7 @@ public void stateChanged(ChangeEvent e) {
                 if (selectionManager.isRectangleSelection() && currentTool != null) {
                     toolbar.clearSelection();
                     unselect();
-                } else if(selectionManager.isSelectionEnabled() && currentTool!=null && currentTool.getSelectionType()==ToolSelectionType.NO_SELECTION) {
+                } else if (selectionManager.isSelectionEnabled() && currentTool != null && currentTool.getSelectionType() == ToolSelectionType.NO_SELECTION) {
                     toolbar.clearSelection();
                     unselect();
                 }

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -75,7 +75,7 @@ public class VizConfig {
     protected boolean lightenNonSelected = true;
     protected float[] lightenNonSelectedColor = {0.95f, 0.95f, 0.95f, 1f};
     protected boolean lightenNonSelectedAnimation = true;
-    protected float lightenNonSelectedFactor = 0.5f;    
+    protected float lightenNonSelectedFactor = 0.5f;
     protected float[] uniColorSelectedColor = {0.8f, 0.2f, 0.2f};
     protected float[] uniColorSelectedNeigborColor = {0.2f, 1f, 0.3f};
     protected float[] edgeInSelectedColor = {1f, 0f, 0f};

File: VisualizationModule/src/org/gephi/visualization/api/selection/SelectionManager.java
Patch:
@@ -59,7 +59,7 @@ public void initArchitecture() {
     public void blockSelection(boolean block) {
         if (vizConfig.isRectangleSelection()) {
             this.blocked = block;
-            vizConfig.setSelectionEnable(block);
+            vizConfig.setSelectionEnable(!block);
             fireChangeEvent();
         } else {
             setDirectMouseSelection();

File: VisualizationModule/src/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -80,6 +80,7 @@ public enum Limits {
     protected boolean configChanged = false;
     protected boolean backgroundChanged = false;
     protected boolean reinit = false;
+    protected float lightenAnimationDelta = 0f;
 
     //Octree
     protected Octree octree;
@@ -227,6 +228,8 @@ public SelectionArea getCurrentSelectionArea() {
     public void setRectangleSelection(boolean rectangleSelection) {
         vizConfig.setRectangleSelection(rectangleSelection);
         configChanged = true;
+        lightenAnimationDelta = 0;
+        vizConfig.setLightenNonSelected(false);
     }
 
     public void startDisplay() {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -62,7 +62,6 @@ public class CompatibilityEngine extends AbstractEngine {
     //Selection
     private ConcurrentLinkedQueue<ModelImpl>[] selectedObjects;
     private boolean anySelected = false;
-    private float lightenAnimationDelta = 0f;
 
     public CompatibilityEngine() {
         super();

File: VisualizationModule/src/org/gephi/visualization/selection/Rectangle.java
Patch:
@@ -54,7 +54,7 @@ public Rectangle() {
     }
 
     public float[] getSelectionAreaRectancle() {
-        if(stop) {
+        if (stop) {
             return pointRect;
         }
         rectangleSize[0] = Math.abs(rectangle[0] - startPosition[0]);
@@ -69,7 +69,7 @@ public float[] getSelectionAreaRectancle() {
     }
 
     public float[] getSelectionAreaCenter() {
-        if(stop) {
+        if (stop) {
             return null;
         }
         center[0] = -(rectangle[0] - startPosition[0]) / 2f;
@@ -78,7 +78,7 @@ public float[] getSelectionAreaCenter() {
     }
 
     public boolean mouseTest(Vecf distanceFromMouse, ModelImpl object) {
-        if(stop) {
+        if (stop) {
             return object.selectionTest(distanceFromMouse, 0);
         }
         float x = object.getViewportX();

File: VisualizationModule/src/org/gephi/visualization/swing/StandardGraphIO.java
Patch:
@@ -238,7 +238,7 @@ public void mouseDragged(MouseEvent e) {
             mousePosition[0] = x;
             mousePosition[1] = graphDrawable.viewport.get(3) - y;
 
-            if (vizController.getVizConfig().isRectangleSelection()) {
+            if (vizController.getVizConfig().isSelectionEnable() && vizController.getVizConfig().isRectangleSelection()) {
                 if (!dragging) {
                     //Start drag
                     dragging = true;

File: DesktopTools/src/org/gephi/desktop/tools/SelectionBar.java
Patch:
@@ -96,6 +96,7 @@ public void refresh() {
                 statusLabel.setText(NbBundle.getMessage(SelectionBar.class, "SelectionBar.statusLabel.dragging"));
             }
         } else {
+            mouseSelection = false;
             statusLabel.setText("No selection");
         }
     }

File: VisualizationModule/src/org/gephi/visualization/selection/Cylinder.java
Patch:
@@ -139,7 +139,7 @@ public void drawArea(GL gl, GLU glu) {
     }
 
     public boolean isEnabled() {
-        return true;
+        return selectionManager.isSelectionEnabled();
     }
 
     public boolean blockSelection() {

File: VisualizationModule/src/org/gephi/visualization/selection/Rectangle.java
Patch:
@@ -117,8 +117,8 @@ public boolean unselect(Renderable object) {
 
     public void start(float[] mousePosition) {
         this.startPosition = Arrays.copyOf(mousePosition, 2);
-        this.rectangle[0] = 0f;
-        this.rectangle[1] = 0f;
+        this.rectangle[0] = startPosition[0];
+        this.rectangle[1] = startPosition[1];
         stop = false;
         blocking = false;
     }

File: DataLaboratory/src/org/gephi/data/laboratory/EdgeRowModel.java
Patch:
@@ -102,9 +102,9 @@ public Object getValue(Edge edge) {
             } else if (propertyColumn == PropertyColumn.ID) {
                 return ""+edge.getId();
             } else if (propertyColumn == PropertyColumn.SOURCE) {
-                return ""+edge.getSource().getId();
+                return ""+edge.getSource().getNodeData().getId();
             } else if (propertyColumn == PropertyColumn.TARGET) {
-                return ""+edge.getTarget().getId();
+                return ""+edge.getTarget().getNodeData().getId();
             }
             return null;
         }

File: DataLaboratory/src/org/gephi/data/laboratory/NodeRowModel.java
Patch:
@@ -100,7 +100,7 @@ public Object getValue(Node node) {
                     return row.getValue(attributeColumn);
                 }
             } else if (propertyColumn == PropertyColumn.ID) {
-                return "" + node.getId();
+                return "" + node.getNodeData().getId();
             }
             return null;
         }

File: VisualizationModule/src/org/gephi/visualization/VizController.java
Patch:
@@ -62,6 +62,7 @@ private VizController() {
     public synchronized static VizController getInstance() {
         if (instance == null) {
             instance = new VizController();
+            instance.initInstances();
         }
         return instance;
     }

File: VisualizationModule/src/org/gephi/visualization/component/GraphTopComponent.java
Patch:
@@ -55,7 +55,6 @@ private GraphTopComponent() {
 //        setIcon(Utilities.loadImage(ICON_PATH, true));
 
         //Init
-        VizController.getInstance().initInstances();
         initCollapsePanel();
         initToolPanels();
         engine = VizController.getInstance().getEngine();

File: VisualizationModule/src/org/gephi/visualization/swing/StandardGraphIO.java
Patch:
@@ -139,6 +139,7 @@ public void mouseReleased(MouseEvent e) {
             graphDrawable.graphComponent.setCursor(Cursor.getDefaultCursor());
         }
 
+        vizEventManager.mouseReleased();
         if(pressing) {
             pressing = false;
         }

File: DesktopTools/src/org/gephi/desktop/tools/DesktopToolController.java
Patch:
@@ -95,7 +95,7 @@ public void unselect() {
     }
 
     public JComponent getToolbar() {
-
+    
         //Get tools ui
         HashMap<ToolUI, Tool> toolMap = new HashMap<ToolUI, Tool>();
         List<ToolUI> toolsUI = new ArrayList<ToolUI>();

File: UIComponents/src/org/gephi/ui/components/JDropDownButton.java
Patch:
@@ -95,6 +95,9 @@ public void mouseMoved(MouseEvent e) {
 
             @Override
             public void mousePressed(MouseEvent e) {
+                if(!isEnabled()) {
+                    return;
+                }
                 popupMenuOperation = false;
                 JPopupMenu menu = getPopupMenu();
                 if (menu != null && getModel() instanceof Model) {

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -55,7 +55,7 @@ public class VizConfig {
     protected Font defaultEdgeLabelFont = new Font("Arial", Font.BOLD, 20);
     protected boolean defaultAdjustByText = false;
     protected boolean defaultShowLabelOnSelectedOnly = false;
-    protected String defaultNodeModeler = "CompatibilityNodeSphereModeler";
+    protected String defaultNodeModeler = "CompatibilityNodeDiskModeler";
 
     //Preferences
     protected int antialiasing = 4;

File: VisualizationModule/src/org/gephi/visualization/api/objects/CompatibilityModelClass.java
Patch:
@@ -98,6 +98,7 @@ public void swapModelers() {
         if (newModeler != null) {
             currentModeler = newModeler;
             newModeler = null;
+            VizController.getInstance().getVizModel().setNodeModeler(currentModeler.getClass().getName());
         }
     }
 }

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextModel.java
Patch:
@@ -102,10 +102,12 @@ public boolean isShowNodeLabels() {
 
     public void setShowEdgeLabels(boolean showEdgeLabels) {
         this.showEdgeLabels = showEdgeLabels;
+        fireChangeEvent();
     }
 
     public void setShowNodeLabels(boolean showNodeLabels) {
         this.showNodeLabels = showNodeLabels;
+        fireChangeEvent();
     }
 
     public void setEdgeFont(Font edgeFont) {

File: VisualizationModule/src/org/gephi/visualization/component/VizToolbar.java
Patch:
@@ -50,8 +50,8 @@ private void initDesign() {
         setBorder(BorderFactory.createEmptyBorder(2, 0, 4, 0));
     }
 
-    @Override
-    public void setEnabled(boolean enabled) {
+
+    public void setEnable(boolean enabled) {
         for(Component c : getComponents()) {
             c.setEnabled(enabled);
         }

File: VisualizationModule/src/org/gephi/visualization/VizController.java
Patch:
@@ -145,7 +145,9 @@ public void refreshWorkspace() {
         VizModel model = pc.getCurrentWorkspace().getWorkspaceData().getData(vizWorkspaceDataProvider.getWorkspaceDataKey());
         if (model != currentModel) {
             model.setListeners(currentModel.getListeners());
+            model.getTextModel().setListeners(currentModel.getTextModel().getListeners());
             currentModel.setListeners(null);
+            currentModel.getTextModel().setListeners(null);
             currentModel = model;
             currentModel.init();
         }

File: VisualizationModule/src/org/gephi/visualization/VizController.java
Patch:
@@ -99,7 +99,7 @@ public void initInstances() {
         modeManager = new ModeManager();
         textManager = new TextManager();
         screenshotMaker = new ScreenshotMaker();
-        currentModel = new VizModel();
+        currentModel = new VizModel(true);
 
         if (vizConfig.isUseGLJPanel()) {
             drawable = commander.createPanel();
@@ -147,6 +147,7 @@ public void refreshWorkspace() {
             model.setListeners(currentModel.getListeners());
             currentModel.setListeners(null);
             currentModel = model;
+            currentModel.init();
         }
     }
 

File: VisualizationModule/src/org/gephi/visualization/component/VizBarController.java
Patch:
@@ -71,6 +71,7 @@ private void createDefaultGroups() {
 
     public VizToolbar getToolbar() {
         VizToolbar toolbar = new VizToolbar(groups);
+        toolbar.setEnabled(false);
         return toolbar;
     }
 

File: VisualizationModule/src/org/gephi/visualization/VizWorkspaceDataProvider.java
Patch:
@@ -45,7 +45,7 @@ public VizModel readXML(Element element) {
     }
 
     public VizModel getDefaultData() {
-        return null;
+        return new VizModel();
     }
 
     public boolean isPersistent() {

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -157,9 +157,6 @@ public boolean updateWorld() {
         if (changeMode) {
             modeManager.unload();
         }
-        if (reinit) {
-            graphIO.centerOnGraph();
-        }
         if (newConfig) {
             dataBridge.reset();
             //Reset model classes
@@ -215,6 +212,8 @@ public void beforeDisplay(GL gl, GLU glu) {
         }
 
         if (reinit) {
+            VizController.getInstance().refreshWorkspace();
+            dataBridge.reset();
             graphDrawable.initConfig(gl);
             reinit = false;
         }

File: UIComponents/src/org/gephi/ui/components/JPopupButton.java
Patch:
@@ -89,12 +89,12 @@ public Object getSelectedItem() {
     }
 
     public void setChangeListener(ChangeListener changeListener) {
-        this.listener = changeListener;
+        listener = changeListener;
     }
 
     private void fireChangeEvent() {
-        if (changeListener != null) {
-            changeListener.stateChanged(new ChangeEvent(selectedItem.object));
+        if (listener != null) {
+            listener.stateChanged(new ChangeEvent(selectedItem.object));
         }
     }
 

File: VisualizationModule/src/org/gephi/visualization/component/VizBarController.java
Patch:
@@ -353,7 +353,7 @@ public void actionPerformed(ActionEvent e) {
                 }
             };
             labelColorModeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/gephi/visualization/component/labelColorMode.png")));
-            labelColorModeButton.setToolTipText(NbBundle.getMessage(VizBarController.class, "VizToolbar.Labels.sizeMode"));
+            labelColorModeButton.setToolTipText(NbBundle.getMessage(VizBarController.class, "VizToolbar.Labels.colorMode"));
             components[1] = labelColorModeButton;
 
             //Font

File: VisualizationModule/src/org/gephi/visualization/api/initializer/NodeModeler.java
Patch:
@@ -34,4 +34,6 @@
  * @see AbstractEngine
  */
 public interface NodeModeler extends Modeler {
+
+    public boolean is3d();
 }

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityScheduler.java
Patch:
@@ -74,7 +74,7 @@ public void initArchitecture() {
     }
     private ThreadPoolExecutor pool1;
     private ThreadPoolExecutor pool2;
-    private List<Runnable> modelSegments = new ArrayList<Runnable>();
+    private List<Runnable> modelSegments;
     private Semaphore pool1Semaphore = new Semaphore(0);
     private Semaphore pool2Semaphore = new Semaphore(0);
     private Runnable selectionSegment;
@@ -114,6 +114,7 @@ public void execute(Runnable command) {
     }
 
     public void init() {
+        modelSegments = new ArrayList<Runnable>();
         for (final CompatibilityModelClass objClass : engine.lodClasses) {
             modelSegments.add(new Runnable() {
 

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -172,7 +172,6 @@ private void updateNodes() {
                 //Model is null, ADD
                 obj = nodeInit.initModel(node.getNodeData());
                 engine.addObject(AbstractEngine.CLASS_NODE, (ModelImpl) obj);
-                System.out.println("inti object" + obj);
             } else if (!obj.isValid()) {
                 engine.addObject(AbstractEngine.CLASS_NODE, (ModelImpl) obj);
             }

File: VisualizationModule/src/org/gephi/visualization/opengl/text/ScaledSizeMode.java
Patch:
@@ -29,15 +29,16 @@
  */
 public class ScaledSizeMode implements SizeMode {
 
-    private static float FACTOR = 800f;
+    private static float FACTOR = 2000f;
     private TextModel textModel;
 
     public ScaledSizeMode(TextModel model) {
         this.textModel = model;
     }
 
     public void setSizeFactor(TextDataImpl text, ModelImpl model) {
-        float factor = textModel.sizeFactor / FACTOR * model.getCameraDistance();
+        float factor = FACTOR * textModel.sizeFactor / model.getCameraDistance();
+        //float factor = textModel.sizeFactor / FACTOR * model.getCameraDistance();   //Renderer3D FACTOR=800
         text.setSizeFactor(factor);
     }
 

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextDataImpl.java
Patch:
@@ -66,11 +66,11 @@ public void setColor(float r, float g, float b, float alpha) {
     }
 
     public float getWidth() {
-        return (float)line.bounds.getWidth();
+        return (float) line.bounds.getWidth() * sizeFactor;
     }
 
     public float getHeight() {
-        return (float)line.bounds.getHeight();
+        return (float) line.bounds.getHeight() * sizeFactor;
     }
 
     public static class TextLine {

File: DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java
Patch:
@@ -112,7 +112,7 @@ public void setZ(float z) {
     }
 
     public float getRadius() {
-        throw new UnsupportedOperationException("Not supported yet.");
+        return 0;
     }
 
     public float getSize() {

File: VisualizationModule/src/org/gephi/visualization/api/objects/ModelClass.java
Patch:
@@ -65,6 +65,8 @@ public ModelClass() {
 
     public abstract List<? extends Modeler> getModelers();
 
+    public abstract void swapModelers();
+
     public int getClassId() {
         return classId;
     }

File: VisualizationModule/src/org/gephi/visualization/api/objects/ModelClassLibrary.java
Patch:
@@ -29,4 +29,6 @@
 public interface ModelClassLibrary {
 
     public CompatibilityModelClass[] createModelClassesCompatibility(AbstractEngine engine);
+
+    public ModelClass getNodeClass();
 }

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -172,6 +172,7 @@ private void updateNodes() {
                 //Model is null, ADD
                 obj = nodeInit.initModel(node.getNodeData());
                 engine.addObject(AbstractEngine.CLASS_NODE, (ModelImpl) obj);
+                System.out.println("inti object" + obj);
             } else if (!obj.isValid()) {
                 engine.addObject(AbstractEngine.CLASS_NODE, (ModelImpl) obj);
             }

File: VisualizationModule/src/org/gephi/visualization/component/VizBarController.java
Patch:
@@ -191,7 +191,9 @@ public void actionPerformed(ActionEvent e) {
         }
 
         public JComponent getExtendedComponent() {
-            return new NodeSettingsPanel();
+            NodeSettingsPanel panel = new NodeSettingsPanel();
+            panel.setup();
+            return panel;
         }
 
         public boolean hasToolbar() {

File: VisualizationModule/src/org/gephi/visualization/modeler/NodeSphereModeler.java
Patch:
@@ -30,7 +30,7 @@ public abstract class NodeSphereModeler implements NodeModeler {
 
     @Override
     public String getName() {
-        return "nodeModeler_Sphere_name";
+        return "Sphere";
     }
 
     @Override

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/modeler/CompatibilityNodeSphereModeler.java
Patch:
@@ -68,7 +68,7 @@ public ModelImpl initModel(Renderable n) {
         n.setModel(obj);
         obj.setConfig(config);
 
-        if(n.getTextData()==null) {
+        if (n.getTextData() == null) {
             n.setTextData(textManager.newTextData(nd));
         }
 

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java
Patch:
@@ -176,12 +176,10 @@ public void setFont(Font font) {
 
         public void beginRendering() {
             renderer.begin3DRendering();
-        //renderer.beginRendering(drawable.getViewportWidth(), drawable.getViewportHeight());
         }
 
         public void endRendering() {
             renderer.end3DRendering();
-        //renderer.endRendering();
         }
 
         public void drawText(ModelImpl objectModel) {

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextUtils.java
Patch:
@@ -46,7 +46,7 @@ public TextUtils(TextManager manager) {
     public void reflow(int width, TextDataImpl text) {
         flowList.clear();
         int numLines = 0;
-        TextRenderer renderer = manager.getRenderer();
+        TextRenderer renderer = manager.getRenderer().getJOGLRenderer();
         FontRenderContext frc = renderer.getFontRenderContext();
 
         String paragraph = text.getLine().text;

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -357,6 +357,7 @@ public void initEngine(final GL gl, final GLU glu) {
     @Override
     public void initScreenshot(GL gl, GLU glu) {
         initDisplayLists(gl, glu);
+        textManager.initRenderer();
     }
 
     @Override

File: VisualizationModule/src/org/gephi/visualization/screenshot/ScreenshotSettingsPanel.java
Patch:
@@ -82,7 +82,7 @@ public void actionPerformed(ActionEvent e) {
                 fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                 int result = fileChooser.showOpenDialog(WindowManager.getDefault().getMainWindow());
                 if (result == JFileChooser.APPROVE_OPTION) {
-                    screenshotMaker.setDefaultDirectory(fileChooser.getCurrentDirectory());
+                    screenshotMaker.setDefaultDirectory(fileChooser.getSelectedFile());
                 }
             }
         });

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -38,7 +38,7 @@ public static enum DisplayConfig {
         DISPLAY_ALL, DISPLAY_NODES_ONLY, DISPLAY_NODES_EDGES, DISPLAY_ALPHA
     }
     private int antialiasing = 4;
-    private boolean use3d = false;
+    private boolean use3d = true;
     private boolean lineSmooth = false;
     private boolean lineSmoothNicest = false;
     private boolean pointSmooth = false;
@@ -343,6 +343,7 @@ public void setShowNodeLabels(boolean showNodeLabels) {
         this.showNodeLabels = showNodeLabels;
         fireProperyChange("showLabels", null, showEdges);
     }
+
     public void setShowArrows(boolean showArrows) {
         this.showArrows = showArrows;
         fireProperyChange("showArrows", null, showArrows);

File: VisualizationModule/src/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -115,6 +115,8 @@ public void propertyChange(PropertyChangeEvent evt) {
 
     public abstract void initEngine(GL gl, GLU glu);
 
+    public abstract void initScreenshot(GL gl, GLU glu);
+
     public abstract void cameraHasBeenMoved(GL gl, GLU glu);
 
     public abstract void mouseMove();

File: VisualizationModule/src/org/gephi/visualization/swing/GraphDrawableImpl.java
Patch:
@@ -164,9 +164,8 @@ public void renderScreenshot(GLAutoDrawable drawable) {
         } else {
             gl.glClear(GL.GL_COLOR_BUFFER_BIT);
         }
-
+        //gl.glReadBuffer(GL.GL_FRONT);
         scheduler.display(gl, glu);
-
     }
 
     public void display() {

File: ExportAPI/src/org/gephi/io/exporter/ExportController.java
Patch:
@@ -30,7 +30,7 @@
  */
 public interface ExportController {
 
-    public void doExport(Exporter exporter, FileObject fileObject);
+    public void doExport(Exporter exporter, FileObject fileObject, boolean visibleOnly);
 
     public void doExport(FileObject fileObject);
 

File: DesktopExport/src/org/gephi/desktop/io/export/GraphFileExporterUI.java
Patch:
@@ -195,6 +195,8 @@ private boolean canExport(JFileChooser chooser) {
         try {
             if (!file.getPath().endsWith(defaultExtention)) {
                 file = new File(file.getPath() + defaultExtention);
+                selectedFile = file;
+                chooser.setSelectedFile(file);
             }
             if (!file.exists()) {
                 if (!file.createNewFile()) {

File: VisualizationModule/src/org/gephi/visualization/opengl/text/ScaledSizeMode.java
Patch:
@@ -29,14 +29,15 @@
  */
 public class ScaledSizeMode implements SizeMode {
 
+    private static float FACTOR = 800f;
     private TextModel textModel;
 
     public ScaledSizeMode(TextModel model) {
         this.textModel = model;
     }
 
     public void setSizeFactor(TextDataImpl text, ModelImpl model) {
-        float factor = textModel.sizeFactor / 800f * model.getCameraDistance();
+        float factor = textModel.sizeFactor / FACTOR * model.getCameraDistance();
         text.setSizeFactor(factor);
     }
 

File: VisualizationModule/src/org/gephi/visualization/opengl/text/ScaledSizeMode.java
Patch:
@@ -36,7 +36,8 @@ public ScaledSizeMode(TextModel model) {
     }
 
     public void setSizeFactor(TextDataImpl text, ModelImpl model) {
-        text.setSizeFactor(1f);
+        float factor = textModel.sizeFactor / 800f * model.getCameraDistance();
+        text.setSizeFactor(factor);
     }
 
     public String getName() {

File: VisualizationModule/src/org/gephi/visualization/opengl/text/TextManager.java
Patch:
@@ -112,8 +112,8 @@ public void drawText(ModelImpl model) {
             String txt = textData.line.text;
             Rectangle2D r = renderer.getBounds(txt);
             textData.line.setBounds(r);
-            int posX = (int) renderable.x() - (int) r.getWidth() / 2;
-            int posY = (int) renderable.y() - (int) r.getHeight() / 2;
+            float posX = renderable.x() + (float) r.getWidth() / -2 * textData.sizeFactor;
+            float posY = renderable.y() + (float) r.getHeight() / -2 * textData.sizeFactor;
 
             renderer.draw3D(txt, posX, posY, 0, textData.sizeFactor);
         }

File: DHNSGraph/src/org/gephi/graph/dhns/DhnsGraphController.java
Patch:
@@ -86,7 +86,7 @@ public Thread newThread(Runnable r) {
     public Dhns newDhns(Workspace workspace) {
         Dhns dhns = new Dhns(this);
         workspace.getWorkspaceData().setData(workspaceDataProvider.getWorkspaceDataKey(), dhns);
-        dhns.setCentralDynamicGraph(new DynamicGraphImpl(dhns, getClusteredDirectedGraph()));
+        dhns.setCentralDynamicGraph(new DynamicGraphImpl(dhns, getHierarchicalDirectedGraph()));
         return dhns;
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/DynamicGraphImpl.java
Patch:
@@ -51,6 +51,9 @@ public DynamicGraphImpl(Dhns dhns, T graph) {
         FilteredGraph filteredGraph = (FilteredGraph) graph;
         filteredGraph.addNodePredicate(new DynamicNodePredicate());
         filteredGraph.addEdgePredicate(new DynamicEdgePredicate());
+        filteredGraph = (FilteredGraph) ((ClusteredGraphImpl) graph).getClusteredGraph();
+        filteredGraph.addNodePredicate(new DynamicNodePredicate());
+        filteredGraph.addEdgePredicate(new DynamicEdgePredicate());
     }
 
     public void setRange(float from, float to) {

File: DesktopGenerate/src/org/gephi/desktop/generate/DesktopGeneratorController.java
Patch:
@@ -21,6 +21,7 @@
 package org.gephi.desktop.generate;
 
 import org.gephi.io.container.Container;
+import org.gephi.io.container.ContainerFactory;
 import org.gephi.io.generator.Generator;
 import org.gephi.io.generator.GeneratorController;
 import org.gephi.io.logging.Report;
@@ -65,7 +66,7 @@ public void generate(final Generator generator) {
             ui.unsetup();
         }
 
-        final Container container = Lookup.getDefault().lookup(Container.class);
+        final Container container = Lookup.getDefault().lookup(ContainerFactory.class).newContainer();
         container.setSource("" + generator.getName());
         container.setReport(new Report());
         String taskname = "Generate " + generator.getName();

File: DesktopImport/src/org/gephi/io/desktop/DesktopImportController.java
Patch:
@@ -34,6 +34,7 @@
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
 import org.gephi.io.container.Container;
+import org.gephi.io.container.ContainerFactory;
 import org.gephi.io.database.Database;
 import org.gephi.io.importer.DatabaseImporter;
 import org.gephi.io.importer.FileFormatImporter;
@@ -58,7 +59,6 @@
 import org.openide.NotifyDescriptor;
 import org.openide.filesystems.FileObject;
 import org.openide.filesystems.FileUtil;
-import org.openide.util.Exceptions;
 import org.openide.util.Lookup;
 import org.openide.util.NbBundle;
 import org.w3c.dom.Document;
@@ -99,7 +99,7 @@ public void doImport(FileObject fileObject) {
             }
 
             //Create Container
-            final Container container = Lookup.getDefault().lookup(Container.class);
+            final Container container = Lookup.getDefault().lookup(ContainerFactory.class).newContainer();
             container.setSource("" + im.getClass());
 
             //Report
@@ -217,7 +217,7 @@ public void doImport(Database database) {
             }
 
             //Create Container
-            final Container container = Lookup.getDefault().lookup(Container.class);
+            final Container container = Lookup.getDefault().lookup(ContainerFactory.class).newContainer();
             container.setSource("" + importer.getClass());
 
             //Report

File: GeneratorStandard/src/org/gephi/io/generator/standard/DynamicGraph.java
Patch:
@@ -38,7 +38,7 @@ public class DynamicGraph implements Generator {
 
     public void generate(ContainerLoader container) {
 
-        ContainerLoader.ContainerFactory factory = container.factory();
+        ContainerLoader.DraftFactory factory = container.factory();
 
         for (int i = 0; i < numberOfNodes; i++) {
             NodeDraft nodeDraft = factory.newNodeDraft();

File: GeneratorStandard/src/org/gephi/io/generator/standard/HierarchicalGraph.java
Patch:
@@ -34,7 +34,7 @@ public class HierarchicalGraph implements Generator {
 
     public void generate(ContainerLoader container) {
 
-        ContainerLoader.ContainerFactory factory = container.factory();
+        ContainerLoader.DraftFactory factory = container.factory();
 
         NodeDraft nodeA = factory.newNodeDraft();
         nodeA.setLabel("Node A");

File: ImportAPI/src/org/gephi/io/container/ContainerLoader.java
Patch:
@@ -55,12 +55,12 @@ public interface ContainerLoader {
 
     public AttributeManager getAttributeManager();
 
-    public ContainerFactory factory();
+    public DraftFactory factory();
 
     /**
      * Node and edge draft factory. Creates node and edge to push in the container.
      */
-    public interface ContainerFactory {
+    public interface DraftFactory {
 
         /**
          * Returns an empy node draft instance.

File: ImportContainerStandard/src/org/gephi/io/container/standard/ImportContainerImpl.java
Patch:
@@ -86,7 +86,7 @@ public ContainerUnloader getUnloader() {
         return this;
     }
 
-    public ContainerFactory factory() {
+    public DraftFactory factory() {
         return factory;
     }
 
@@ -250,7 +250,7 @@ public AttributeValueFactory getFactory() {
     /**
      * Factory for draft objects
      */
-    public class FactoryImpl implements ContainerFactory {
+    public class FactoryImpl implements DraftFactory {
 
         private int nodeIDgen = 0;
         private int edgeIDgen = 0;

File: ImportStandard/src/org/gephi/io/database/standard/EdgeListImporter.java
Patch:
@@ -97,7 +97,7 @@ public void importData(Database database, ContainerLoader container, Report repo
     private void getNodes(Connection connection) throws SQLException {
 
         //Factory
-        ContainerLoader.ContainerFactory factory = container.factory();
+        ContainerLoader.DraftFactory factory = container.factory();
 
         //Properties
         PropertiesAssociations properties = database.getPropertiesAssociations();
@@ -140,7 +140,7 @@ private void getNodes(Connection connection) throws SQLException {
     private void getEdges(Connection connection) throws SQLException {
 
         //Factory
-        ContainerLoader.ContainerFactory factory = container.factory();
+        ContainerLoader.DraftFactory factory = container.factory();
 
         //Properties
         PropertiesAssociations properties = database.getPropertiesAssociations();

File: LayoutStandard/src/org/gephi/layout/force/ForceVector.java
Patch:
@@ -99,6 +99,7 @@ public ForceVector normalize() {
         return new ForceVector(x / norm, y / norm);
     }
 
+    @Override
     public String toString() {
         return "(" + x + ", " + y + ")";
     }

File: LayoutStandard/src/org/gephi/layout/force/ProportionalDisplacement.java
Patch:
@@ -23,7 +23,8 @@
 import org.gephi.graph.api.NodeData;
 
 /**
- *
+ *  The movement of the node is in the direction of the force and it's proportional
+ * to is module.
  * @author Helder Suzuki <heldersuzuki@gephi.org>
  */
 public class ProportionalDisplacement implements Displacement {

File: LayoutStandard/src/org/gephi/layout/force/StepDisplacement.java
Patch:
@@ -23,7 +23,7 @@
 import org.gephi.graph.api.NodeData;
 
 /**
- *
+ *  The node is moved a fixed distance (step) in the direction of the force.
  * @author Helder Suzuki <heldersuzuki@gephi.org>
  */
 public class StepDisplacement implements Displacement {

File: LayoutStandard/src/org/gephi/layout/force/quadtree/BarnesHut.java
Patch:
@@ -18,11 +18,11 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-package org.gephi.layout.force;
+package org.gephi.layout.force.quadtree;
 
+import org.gephi.layout.force.*;
 import org.gephi.graph.api.Spatial;
 import org.gephi.layout.ForceVectorUtils;
-import org.gephi.layout.force.quadtree.QuadTree;
 
 /**
  * Barnes-Hut's O(n log n) force calculation algorithm.

File: LayoutStandard/src/org/gephi/layout/force/quadtree/QuadTree.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.ArrayList;
 import java.util.List;
 import org.gephi.graph.api.ClusteredGraph;
-import org.gephi.graph.api.ClusteredUndirectedGraph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.Spatial;
 

File: LayoutStandard/src/org/gephi/layout/force/yifanHu/YifanHuLayout.java
Patch:
@@ -32,7 +32,7 @@
 import org.gephi.layout.api.LayoutBuilder;
 import org.gephi.layout.api.LayoutProperty;
 import org.gephi.layout.force.AbstractForce;
-import org.gephi.layout.force.BarnesHut;
+import org.gephi.layout.force.quadtree.BarnesHut;
 import org.gephi.layout.force.Displacement;
 import org.gephi.layout.force.ForceVector;
 import org.gephi.layout.force.quadtree.QuadTree;

File: LayoutStandard/src/org/gephi/layout/forceAtlas/ForceAtlas.java
Patch:
@@ -21,7 +21,6 @@
 package org.gephi.layout.forceAtlas;
 
 import javax.swing.Icon;
-import org.gephi.layout.api.Layout;
 import org.gephi.layout.api.LayoutBuilder;
 import org.openide.util.NbBundle;
 
@@ -43,7 +42,7 @@ public Icon getIcon() {
         throw new UnsupportedOperationException("Not supported yet.");
     }
 
-    public Layout buildLayout() {
+    public ForceAtlasLayout buildLayout() {
         return new ForceAtlasLayout(this);
     }
 }

File: LayoutStandard/src/org/gephi/layout/multilevel/YifanHuMultiLevel.java
Patch:
@@ -34,7 +34,7 @@ public class YifanHuMultiLevel implements LayoutBuilder {
 
     public Layout buildLayout() {
         MultiLevelLayout layout = new MultiLevelLayout(
-            this, new MaximalMatchingCoarsening(), new YifanHu());
+            this, new MaximalMatchingCoarsening());
         return layout;
     }
 

File: LayoutStandard/test/unit/src/org/gephi/layout/quadtree/BarnesHutTest.java
Patch:
@@ -22,7 +22,7 @@
 
 import org.gephi.graph.api.Spatial;
 import org.gephi.layout.force.AbstractForce;
-import org.gephi.layout.force.BarnesHut;
+import org.gephi.layout.force.quadtree.BarnesHut;
 import org.gephi.layout.force.ForceVector;
 import org.gephi.layout.force.quadtree.QuadTree;
 import static org.junit.Assert.*;

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -145,7 +145,7 @@ private void updateNodes() {
         if (vizConfig.isVisualizeTree()) {
             nodeIterable = graph.getHierarchyTree().getNodes();
         } else {
-            nodeIterable = graph.getNodes();
+            nodeIterable = graph.getClusteredGraph().getNodes();
         }
 
         for (Node node : nodeIterable) {
@@ -191,7 +191,7 @@ private void updateEdges() {
         if (vizConfig.isVisualizeTree()) {
             edgeIterable = graph.getHierarchyTree().getEdges();
         } else {
-            edgeIterable = graph.getEdges();
+            edgeIterable = graph.getClusteredGraph().getEdges();
         }
 
         for (Edge edge : edgeIterable) {
@@ -247,7 +247,7 @@ public void updatePotatoes() {
             Modeler potInit = engine.getModelClasses()[AbstractEngine.CLASS_POTATO].getCurrentModeler();
 
             List<ModelImpl> hulls = new ArrayList<ModelImpl>();
-            Node[] nodes = graph.getNodes().toArray();
+            Node[] nodes = graph.getClusteredGraph().getNodes().toArray();
             for (Node n : nodes) {
                 Node parent = graph.getParent(n);
                 if (parent != null) {

File: LayoutAPI/src/org/gephi/layout/controller/LayoutControllerImpl.java
Patch:
@@ -29,7 +29,6 @@
 import org.gephi.layout.api.Layout;
 import org.gephi.layout.api.LayoutBuilder;
 import org.gephi.layout.api.LayoutController;
-import org.gephi.layout.api.LayoutControllerObserver;
 import org.openide.util.Lookup;
 
 /**

File: LayoutStandard/src/org/gephi/layout/force/quadtree/QuadTree.java
Patch:
@@ -22,7 +22,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
-import org.gephi.graph.api.ClusteredGraph;
+import org.gephi.graph.api.ClusteredUndirectedGraph;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.Spatial;
 
@@ -43,7 +43,7 @@ public class QuadTree implements Spatial {
     private boolean isLeaf;
     public static final float eps = (float) 1e-6;
 
-    public static QuadTree buildTree(ClusteredGraph graph, int maxLevel) {
+    public static QuadTree buildTree(ClusteredUndirectedGraph graph, int maxLevel) {
         float minX = Float.POSITIVE_INFINITY;
         float maxX = Float.NEGATIVE_INFINITY;
         float minY = Float.POSITIVE_INFINITY;

File: LayoutStandard/src/org/gephi/layout/force/yifanHu/YifanHu.java
Patch:
@@ -15,7 +15,7 @@
 public class YifanHu implements LayoutBuilder {
 
     public Layout buildLayout() {
-        YifanHuLayout layout = new YifanHuLayout();
+        YifanHuLayout layout = new YifanHuLayout(this);
         return layout;
     }
 

File: LayoutAPI/src/org/gephi/layout/controller/LayoutControllerImpl.java
Patch:
@@ -51,7 +51,7 @@ public LayoutControllerImpl() {
 
     public void executeLayout() {
         layoutRun = new LayoutRun(layout);
-    //executor.execute(layoutRun);
+        executor.execute(layoutRun);
     }
 
     public void setLayout(Layout layout) {

File: LayoutStandard/src/org/gephi/layout/rotate/RotateLayout.java
Patch:
@@ -36,12 +36,14 @@
 public class RotateLayout extends AbstractLayout implements Layout {
 
     private boolean converged;
+    private boolean initialized;
     public double angle;
     private Graph graph;
 
     public RotateLayout(LayoutBuilder layoutBuilder, double angle) {
         super(layoutBuilder);
         this.angle = angle;
+        initialized = false;
     }
 
     public void initAlgo() {
@@ -51,7 +53,7 @@ public void initAlgo() {
     @Override
     public void setGraphController(GraphController graphController) {
         super.setGraphController(graphController);
-        this.graph = graphController.getUndirectedGraph();
+        graph = graphController.getUndirectedGraph();
     }
 
     public void goAlgo() {

File: LayoutAPI/src/org/gephi/layout/api/Layout.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.layout.api;
 
 import javax.swing.Icon;
@@ -37,8 +36,6 @@ public interface Layout {
 
     public Icon getIcon();
 
-    public boolean testAlgo();
-
     public void initAlgo(GraphController graphController);
 
     public void goAlgo();

File: ProjectAPI/src/org/gephi/project/api/Projects.java
Patch:
@@ -40,8 +40,6 @@ public interface Projects {
 
     public void closeCurrentProject();
 
-    public void refresh();
-
     public Lookup getLookup();
 
     public void reinitLookup();

File: ProjectExplorer/src/org/gephi/project/explorer/ProjectExplorer.java
Patch:
@@ -45,12 +45,11 @@ private void initComponents() {
         jScrollPane1 = new BeanTreeView();
 
         setLayout(new java.awt.BorderLayout());
+
+        ((BeanTreeView)jScrollPane1).setRootVisible(false);
         add(jScrollPane1, java.awt.BorderLayout.CENTER);
     }// </editor-fold>//GEN-END:initComponents
-
-
     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JScrollPane jScrollPane1;
     // End of variables declaration//GEN-END:variables
-
 }

File: ProjectExplorer/src/org/gephi/project/explorer/ProjectNode.java
Patch:
@@ -73,11 +73,11 @@ public void stateChanged(ChangeEvent e) {
     public String getHtmlDisplayName() {
         if (project.isOpen()) {
             String fileName = project.hasFile() ? project.getFileName() : "";
-            return "<font color='#000000'>" + project.getName() + "</font>" +
+            return "<font color='#000000'>" + project.getName() + "</font> " +
                     "<font color='#999999'><i>" + fileName + "</i></font>";
         } else {
             String fileName = project.hasFile() ? project.getFileName() : "";
-            return "<font color='#888888'>" + project.getName() + "</font>" +
+            return "<font color='#888888'>" + project.getName() + "</font> " +
                     "<font color='#BBBBBB'><i>" + fileName + "</i></font>";
         }
     }

File: ProjectExplorer/src/org/gephi/project/explorer/ProjectTopComponent.java
Patch:
@@ -114,6 +114,7 @@ public int getPersistenceType() {
 
     @Override
     public void componentOpened() {
+        //initExplorer();
     }
 
     @Override
@@ -158,7 +159,7 @@ public Object readResolve() {
             if (this.projects != null) {
                 pc.setProjects(this.projects);
                 ptc.initExplorer();
-                projects.reinitLookup();
+            //pc.getProjects().reinitLookup();
             }
             return ptc;
         }

File: ProjectExplorer/src/org/gephi/project/explorer/ProjectsChildren.java
Patch:
@@ -44,10 +44,13 @@ class ProjectsChildren extends Children.Keys<Project> implements LookupListener
         //Init lookup
         result = projects.getLookup().lookupResult(Project.class);
         result.addLookupListener(this);
+
+        setKeys(result.allInstances());
     }
 
     @Override
     protected Node[] createNodes(Project project) {
+        System.out.println("node " + project);
         return new Node[]{new ProjectNode(project)};
     }
 

File: ProjectExplorer/src/org/gephi/project/explorer/WorkspaceNode.java
Patch:
@@ -69,11 +69,11 @@ public void stateChanged(ChangeEvent e) {
     public String getHtmlDisplayName() {
         if (workspace.isOpen()) {
             String fileName = workspace.hasSource() ? workspace.getSource() : "";
-            return "<font color='#000000'>" + workspace.getName() + "</font>" +
+            return "<font color='#000000'>" + workspace.getName() + "</font> " +
                     "<font color='#999999'><i>" + fileName + "</i></font>";
         } else {
             String fileName = workspace.hasSource() ? workspace.getSource() : "";
-            return "<font color='#888888'>" + workspace.getName() + "</font>" +
+            return "<font color='#888888'>" + workspace.getName() + "</font> " +
                     "<font color='#BBBBBB'><i>" + fileName + "</i></font>";
         }
     }

File: DesktopBranding/src/org/gephi/branding/desktop/Installer.java
Patch:
@@ -21,7 +21,6 @@
 package org.gephi.branding.desktop;
 
 import org.gephi.project.api.ProjectController;
-import org.gephi.workspace.api.WorkspaceDataController;
 import org.openide.modules.ModuleInstall;
 import org.openide.util.Lookup;
 import org.openide.windows.WindowManager;
@@ -38,7 +37,6 @@ public void restored() {
     }
 
     private void initGephi() {
-        WorkspaceDataController wdc = Lookup.getDefault().lookup(WorkspaceDataController.class);
         final ProjectController pc = Lookup.getDefault().lookup(ProjectController.class);
         WindowManager.getDefault().invokeWhenUIReady(new Runnable() {
 

File: ProjectAPI/src/org/gephi/project/api/ProjectController.java
Patch:
@@ -29,6 +29,8 @@
  */
 public interface ProjectController {
 
+    public void startup();
+
     public void newProject();
 
     public void loadProject(DataObject dataObject);

File: ProjectAPI/src/org/gephi/workspace/api/WorkspaceData.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.workspace.api;
 
 /**

File: ProjectAPI/src/org/gephi/workspace/api/WorkspaceDataController.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.workspace.api;
 
 /**

File: ProjectExplorer/src/org/gephi/project/explorer/WorkspaceNode.java
Patch:
@@ -59,7 +59,7 @@ public void stateChanged(ChangeEvent e) {
         } else {
             //Not current
         }
-        
+
         //Properties
         fireDisplayNameChange("a", "b");
         fireIconChange();

File: ProjectImpl/src/org/gephi/project/ProjectImpl.java
Patch:
@@ -179,7 +179,7 @@ public boolean hasFile() {
     }
 
     public String getFileName() {
-        if(dataObject==null) {
+        if (dataObject == null) {
             return "";
         } else {
             return dataObject.getPrimaryFile().getNameExt();

File: ProjectImpl/src/org/gephi/workspace/WorkspaceDataImpl.java
Patch:
@@ -39,7 +39,7 @@ public WorkspaceDataImpl() {
     }
 
     public Object getData(String key) {
-        if(key==null) {
+        if (key == null) {
             throw new NullPointerException("WorkspaceDataKey can't be null. Check the provider is defined correctly");
         }
         WorkspaceDataController wdc = Lookup.getDefault().lookup(WorkspaceDataController.class);
@@ -51,7 +51,7 @@ public Object getData(String key) {
     }
 
     public void setData(String key, Object object) {
-        if(key==null) {
+        if (key == null) {
             throw new NullPointerException("WorkspaceDataKey can't be null. Check the provider is defined correctly");
         }
         WorkspaceDataController wdc = Lookup.getDefault().lookup(WorkspaceDataController.class);

File: ProjectExplorer/src/org/gephi/project/explorer/ProjectNode.java
Patch:
@@ -65,7 +65,7 @@ public void stateChanged(ChangeEvent e) {
         }
 
         //Properties
-        fireDisplayNameChange("", "");
+        fireDisplayNameChange("a", "b");
         fireIconChange();
     }
 

File: ProjectExplorer/src/org/gephi/project/explorer/WorkspaceNode.java
Patch:
@@ -59,9 +59,9 @@ public void stateChanged(ChangeEvent e) {
         } else {
             //Not current
         }
-
+        
         //Properties
-        fireDisplayNameChange("", "");
+        fireDisplayNameChange("a", "b");
         fireIconChange();
     }
 

File: VisualizationModule/src/org/gephi/visualization/component/GraphTopComponent.java
Patch:
@@ -25,7 +25,6 @@
 import java.util.logging.Logger;
 import javax.swing.SwingUtilities;
 import org.gephi.visualization.VizController;
-import org.gephi.visualization.mode.ModeManager;
 import org.gephi.visualization.opengl.AbstractEngine;
 import org.gephi.visualization.swing.GraphDrawableImpl;
 import org.openide.util.NbBundle;
@@ -71,8 +70,9 @@ public void run() {
                 });
             }
         });
-    //add(drawable.getGraphComponent(), BorderLayout.CENTER);
     //remove(waitingLabel);
+    //add(drawable.getGraphComponent(), BorderLayout.CENTER);
+
     }
 
     private void initCollapsePanel() {

File: ProjectImpl/src/org/gephi/project/ProjectImpl.java
Patch:
@@ -81,7 +81,7 @@ public void init() {
         }
     }
 
-    public void reloadFromFile() {
+    /*public void reloadFromFile() {
         if (dataObject != null) {
             if (dataObject.isValid()) {
                 dataObject.setProject(this);
@@ -90,7 +90,7 @@ public void reloadFromFile() {
                 this.status = Status.INVALID;
             }
         }
-    }
+    }*/
 
     @Override
     public WorkspaceImpl newWorkspace() {

File: ProjectAPI/src/org/gephi/project/api/ProjectController.java
Patch:
@@ -36,6 +36,8 @@ public interface ProjectController {
 
     public void saveProject(Project project);
 
+    public void saveAsProject(Project project);
+
     public void closeCurrentProject();
 
     public void removeProject(Project project);

File: DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java
Patch:
@@ -72,7 +72,7 @@ public void expandBlock(View view, Node node) {
             expand(view, absNode);
         //sightManager.updateSight((SightImpl) sight);
         }
-        graphVersion.incNodeVersion();
+        graphVersion.incNodeAndEdgeVersion();
         dhns.getWriteLock().unlock();
         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);
     }
@@ -94,7 +94,7 @@ public void retractBlock(View view, Node node) {
             retract(view, ((AbstractNode) node));
         //sightManager.updateSight((SightImpl)sight);
         }
-        graphVersion.incNodeVersion();
+        graphVersion.incNodeAndEdgeVersion();
         dhns.getWriteLock().unlock();
         dhns.getEventManager().fireEvent(EventType.NODES_AND_EDGES_UPDATED);
     }

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -104,7 +104,7 @@ public void updateWorld() {
         ModelClass edgeClass = object3dClasses[AbstractEngine.CLASS_EDGE];
         if (edgeClass.isEnabled() && (graph.getEdgeVersion() > edgeVersion || modeManager.requireModeChange() || vizConfig.isVisualizeTree())) {
             updateEdges();
-            updateMetaEdges();
+            //updateMetaEdges();
             edgeClass.setCacheMarker(cacheMarker);
             if (vizConfig.isShowArrows()) {
                 object3dClasses[AbstractEngine.CLASS_ARROW].setCacheMarker(cacheMarker);

File: DHNSGraph/src/org/gephi/graph/dhns/edge/EdgeDataImpl.java
Patch:
@@ -48,8 +48,8 @@ public class EdgeDataImpl implements EdgeData, DynamicData {
     private Model model;
     protected Attributes attributes;
     protected TextData textData;
-    protected float dynamicRangeFrom;
-    protected float dynamicRangeTo;
+    protected float dynamicRangeFrom = -1;
+    protected float dynamicRangeTo = -1;
 
     public EdgeDataImpl(Edge edge) {
         this.edge = edge;

File: DHNSGraph/src/org/gephi/graph/dhns/node/NodeDataImpl.java
Patch:
@@ -54,8 +54,8 @@ public class NodeDataImpl implements NodeData, GroupData, DynamicData {
     protected Attributes attributes;
     protected TextData textData;
     protected Model hullModel;
-    protected float dynamicRangeFrom;
-    protected float dynamicRangeTo;
+    protected float dynamicRangeFrom = -1;
+    protected float dynamicRangeTo = -1;
 
     public NodeDataImpl(Node node) {
         this.node = node;

File: DesktopBranding/src/org/gephi/branding/desktop/TopTabAction.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.branding.desktop;
 
 import java.awt.Component;
@@ -30,7 +29,7 @@
  *
  * @author Mathieu Bastian
  */
-public class TopTabAction  implements Presenter.Toolbar, ActionListener {
+public class TopTabAction implements Presenter.Toolbar, ActionListener {
 
     @Override
     public void actionPerformed(ActionEvent e) {
@@ -41,5 +40,4 @@ public void actionPerformed(ActionEvent e) {
     public Component getToolbarPresenter() {
         return new TopTabComponent();
     }
-
 }
\ No newline at end of file

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -279,7 +279,7 @@ public void display(GL gl, GLU glu) {
                         ModelImpl obj = itr.next();
                         if (obj.markTime != startTime) {
                             //if (obj.getObj().isLabelVisible()) {
-                                textManager.drawText(obj);
+                            textManager.drawText(obj);
                             //}
                             obj.markTime = startTime;
                         }

File: VisualizationModule/src/org/gephi/visualization/selection/Rectangle.java
Patch:
@@ -20,7 +20,6 @@
  */
 package org.gephi.visualization.selection;
 
-import java.awt.geom.Rectangle2D;
 import java.util.Arrays;
 import javax.media.opengl.GL;
 import javax.media.opengl.glu.GLU;
@@ -30,7 +29,6 @@
 import org.gephi.visualization.api.ModelImpl;
 import org.gephi.visualization.api.VizConfig;
 import org.gephi.visualization.api.selection.SelectionArea;
-import org.gephi.visualization.gleem.linalg.MathUtil;
 import org.gephi.visualization.gleem.linalg.Vecf;
 
 /**

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -206,7 +206,7 @@ private void updateEdges() {
                 }
             } else if (!obj.isValid()) {
                 engine.addObject(AbstractEngine.CLASS_EDGE, (ModelImpl) obj);
-                if (vizConfig.isShowArrows()) {
+                if (vizConfig.isShowArrows() && !edge.isSelfLoop()) {
                     ModelImpl arrowObj = ((Edge2dModel) obj).getArrow();
                     engine.addObject(AbstractEngine.CLASS_ARROW, arrowObj);
                     arrowObj.setCacheMarker(cacheMarker);

File: GraphAPI/src/org/gephi/graph/api/NodeData.java
Patch:
@@ -35,6 +35,8 @@ public interface NodeData extends Renderable {
 
     public String getId();
 
+    public void setId(String id);
+
     public <T extends LayoutData> T getLayoutData();
 
     public void setLayoutData(LayoutData layoutData);

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphFactoryImpl.java
Patch:
@@ -46,6 +46,7 @@ public class GraphFactoryImpl implements GraphFactory {
 
     public GraphFactoryImpl(IDGen idGen, AttributeRowFactory attributesFactory) {
         this.idGen = idGen;
+        this.attributesFactory = attributesFactory;
     }
 
     public AttributeRow newNodeAttributes() {

File: DesktopImport/src/org/gephi/io/desktop/DesktopImportController.java
Patch:
@@ -170,6 +170,7 @@ private void importText(FileObject fileObject, Importer importer, final Containe
             public void fatalError(Throwable t) {
                 NotifyDescriptor.Exception ex = new NotifyDescriptor.Exception(t);
                 DialogDisplayer.getDefault().notify(ex);
+                t.printStackTrace();
             }
         };
 

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeIterator.java
Patch:
@@ -46,9 +46,9 @@ public class EdgeIterator extends AbstractEdgeIterator implements Iterator<Edge>
     protected boolean undirected;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<AbstractEdge> proposition;
 
-    public EdgeIterator(TreeStructure treeStructure, AbstractNodeIterator nodeIterator, boolean undirected, Proposition proposition) {
+    public EdgeIterator(TreeStructure treeStructure, AbstractNodeIterator nodeIterator, boolean undirected, Proposition<AbstractEdge> proposition) {
         this.nodeIterator = nodeIterator;
         edgeIterator = new ParamAVLIterator<ProperEdgeImpl>();
         this.undirected = undirected;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeNodeIterator.java
Patch:
@@ -48,9 +48,9 @@ public enum EdgeNodeIteratorMode {
     protected boolean undirected;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<AbstractEdge> proposition;
 
-    public EdgeNodeIterator(PreNode node, EdgeNodeIteratorMode mode, boolean undirected, Proposition proposition) {
+    public EdgeNodeIterator(PreNode node, EdgeNodeIteratorMode mode, boolean undirected, Proposition<AbstractEdge> proposition) {
         this.node = node;
         this.mode = mode;
         this.undirected = undirected;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/MetaEdgeContentIterator.java
Patch:
@@ -41,9 +41,9 @@ public class MetaEdgeContentIterator extends AbstractEdgeIterator implements Ite
     protected boolean undirectedSecond = false;   //Flag to know we are iterating already the mutual edge
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<AbstractEdge> proposition;
 
-    public MetaEdgeContentIterator(MetaEdgeImpl metaEdge, boolean undirected, Proposition proposition) {
+    public MetaEdgeContentIterator(MetaEdgeImpl metaEdge, boolean undirected, Proposition<AbstractEdge> proposition) {
         iterator = metaEdge.getEdges().iterator();
         this.metaEdge = metaEdge;
         this.undirected = undirected;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/MetaEdgeIterator.java
Patch:
@@ -45,9 +45,9 @@ public class MetaEdgeIterator extends AbstractEdgeIterator implements Iterator<E
     protected boolean undirected;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<AbstractEdge> proposition;
 
-    public MetaEdgeIterator(TreeStructure treeStructure, AbstractNodeIterator nodeIterator, boolean undirected, Proposition proposition) {
+    public MetaEdgeIterator(TreeStructure treeStructure, AbstractNodeIterator nodeIterator, boolean undirected, Proposition<AbstractEdge> proposition) {
         this.nodeIterator = nodeIterator;
         edgeIterator = new ParamAVLIterator<AbstractEdge>();
         this.undirected = undirected;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/MetaEdgeNodeIterator.java
Patch:
@@ -47,9 +47,9 @@ public enum EdgeNodeIteratorMode {
     protected boolean undirected;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<AbstractEdge> proposition;
 
-    public MetaEdgeNodeIterator(PreNode node, EdgeNodeIteratorMode mode, boolean undirected, Proposition proposition) {
+    public MetaEdgeNodeIterator(PreNode node, EdgeNodeIteratorMode mode, boolean undirected, Proposition<AbstractEdge> proposition) {
         this.node = node;
         this.mode = mode;
         this.edgeIterator = new ParamAVLIterator<AbstractEdge>();

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/RangeEdgeIterator.java
Patch:
@@ -50,9 +50,9 @@ public class RangeEdgeIterator extends AbstractEdgeIterator implements Iterator<
     protected boolean undirected;
 
     //Proposition
-    protected Proposition edgeProposition;
+    protected Proposition<AbstractEdge> edgeProposition;
 
-    public RangeEdgeIterator(TreeStructure treeStructure, PreNode nodeGroup, PreNode target, boolean inner, boolean undirected, Proposition nodeProposition, Proposition edgeProposition) {
+    public RangeEdgeIterator(TreeStructure treeStructure, PreNode nodeGroup, PreNode target, boolean inner, boolean undirected, Proposition<PreNode> nodeProposition, Proposition<AbstractEdge> edgeProposition) {
         nodeIterator = new DescendantAndSelfIterator(treeStructure, nodeGroup, nodeProposition);
         this.inner = inner;
         this.nodeGroup = nodeGroup;

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredGraphImpl.java
Patch:
@@ -42,8 +42,8 @@
  */
 public abstract class ClusteredGraphImpl extends AbstractGraphImpl implements ClusteredGraph {
 
-    protected Proposition nodeProposition;
-    protected Proposition edgeProposition;
+    protected Proposition<PreNode> nodeProposition;
+    protected Proposition<AbstractEdge> edgeProposition;
 
     public ClusteredGraphImpl(Dhns dhns, boolean visible) {
         this.dhns = dhns;

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/ChildrenIterator.java
Patch:
@@ -46,9 +46,9 @@ public class ChildrenIterator extends AbstractNodeIterator implements Iterator<N
     protected boolean loopStart=true;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<PreNode> proposition;
 
-    public ChildrenIterator(TreeStructure treeStructure, Proposition proposition) {
+    public ChildrenIterator(TreeStructure treeStructure, Proposition<PreNode> proposition) {
         this.treeList = treeStructure.getTree();
         nextIndex = 1;
         diffIndex = 2;
@@ -60,7 +60,7 @@ public ChildrenIterator(TreeStructure treeStructure, Proposition proposition) {
         }
     }
 
-    public ChildrenIterator(TreeStructure treeStructure, PreNode node, Proposition proposition) {
+    public ChildrenIterator(TreeStructure treeStructure, PreNode node, Proposition<PreNode> proposition) {
         this(treeStructure, proposition);
         setNode(node);
     }

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/DescendantAndSelfIterator.java
Patch:
@@ -35,11 +35,11 @@
  */
 public class DescendantAndSelfIterator extends DescendantIterator implements Iterator<Node>, ResetableIterator {
 
-    public DescendantAndSelfIterator(TreeStructure treeStructure, Proposition proposition) {
+    public DescendantAndSelfIterator(TreeStructure treeStructure, Proposition<PreNode> proposition) {
         super(treeStructure, proposition);
     }
 
-    public DescendantAndSelfIterator(TreeStructure treeStructure, PreNode node, Proposition proposition) {
+    public DescendantAndSelfIterator(TreeStructure treeStructure, PreNode node, Proposition<PreNode> proposition) {
         super(treeStructure, node, proposition);
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/DescendantIterator.java
Patch:
@@ -46,9 +46,9 @@ public class DescendantIterator extends AbstractNodeIterator implements Iterator
     protected boolean loopStart = true;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<PreNode> proposition;
 
-    public DescendantIterator(TreeStructure treeStructure, Proposition proposition) {
+    public DescendantIterator(TreeStructure treeStructure, Proposition<PreNode> proposition) {
         this.treeList = treeStructure.getTree();
         nextIndex = 0;
         diffIndex = 2;
@@ -60,7 +60,7 @@ public DescendantIterator(TreeStructure treeStructure, Proposition proposition)
         }
     }
 
-    public DescendantIterator(TreeStructure treeStructure, PreNode node, Proposition proposition) {
+    public DescendantIterator(TreeStructure treeStructure, PreNode node, Proposition<PreNode> proposition) {
         this(treeStructure, proposition);
         setNode(node);
     }

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/LevelIterator.java
Patch:
@@ -44,9 +44,9 @@ public class LevelIterator extends AbstractNodeIterator implements Iterator<Node
     protected int level;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<PreNode> proposition;
 
-    public LevelIterator(TreeStructure treeStructure, int level, Proposition proposition) {
+    public LevelIterator(TreeStructure treeStructure, int level, Proposition<PreNode> proposition) {
         this.treeList = treeStructure.getTree();
         this.nextIndex = 1;
         this.diffIndex = 2;

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/NeighborIterator.java
Patch:
@@ -39,9 +39,9 @@ public class NeighborIterator extends AbstractNodeIterator implements Iterator<N
     private PreNode owner;
     private PreNode pointer;
     //Propostion
-    private Proposition proposition;
+    private Proposition<PreNode> proposition;
 
-    public NeighborIterator(AbstractEdgeIterator edgeIterator, PreNode owner, Proposition proposition) {
+    public NeighborIterator(AbstractEdgeIterator edgeIterator, PreNode owner, Proposition<PreNode> proposition) {
         this.edgeIterator = edgeIterator;
         this.owner = owner;
         if (proposition == null) {

File: DHNSGraph/src/org/gephi/graph/dhns/node/iterators/TreeIterator.java
Patch:
@@ -45,9 +45,9 @@ public class TreeIterator extends AbstractNodeIterator implements Iterator<Node>
     protected DurableAVLNode currentNode;
 
     //Proposition
-    protected Proposition proposition;
+    protected Proposition<PreNode> proposition;
 
-    public TreeIterator(TreeStructure treeStructure, Proposition proposition) {
+    public TreeIterator(TreeStructure treeStructure, Proposition<PreNode> proposition) {
         this.treeList = treeStructure.getTree();
         nextIndex = 1;
         diffIndex = 2;

File: DHNSGraph/src/org/gephi/graph/dhns/graph/AbstractGraphImpl.java
Patch:
@@ -32,7 +32,6 @@
 import org.gephi.graph.dhns.node.iterators.AbstractNodeIterator;
 import org.gephi.graph.dhns.node.iterators.TreeListIterator;
 import org.gephi.graph.dhns.utils.avl.EdgeOppositeTree;
-import org.gephi.graph.dhns.utils.avl.MetaEdgeTree;
 import org.gephi.graph.dhns.utils.avl.PreNodeTree;
 
 /**

File: LayoutAPI/src/org/gephi/layout/api/Layout.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.layout.api;
 
 import javax.swing.Icon;
@@ -37,8 +36,6 @@ public interface Layout {
 
     public Icon getIcon();
 
-    public boolean testAlgo();
-
     public void initAlgo(GraphController graphController);
 
     public void goAlgo();

File: LayoutAPI/src/org/gephi/layout/api/Layout.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.layout.api;
 
 import javax.swing.Icon;
@@ -37,8 +36,6 @@ public interface Layout {
 
     public Icon getIcon();
 
-    public boolean testAlgo();
-
     public void initAlgo(GraphController graphController);
 
     public void goAlgo();

File: GeneratorUI/src/org/gephi/ui/generator/standard/RandomGraphUIImpl.java
Patch:
@@ -23,7 +23,6 @@
 import javax.swing.JPanel;
 import org.gephi.io.generator.Generator;
 import org.gephi.io.generator.standard.RandomGraph;
-import org.gephi.ui.generator.standard.RandomGraphUI;
 
 /**
  *

File: StatisticsAPI/src/org/gephi/statistics/controller/StatisticsControllerImpl.java
Patch:
@@ -70,7 +70,7 @@ private void complete(final Statistics statistics) {
             executor.execute((LongTask)statistics, new Runnable() {
                  public void run() {
                      statistics.execute(graphController); }
-             },statistics.getName());
+             },statistics.getName(),null);
         }
         else
         {

File: VisualizationModule/src/org/gephi/visualization/api/VizConfig.java
Patch:
@@ -63,7 +63,7 @@ public static enum DisplayConfig {
     protected boolean lightenNonSelected = true;
     protected float[] lightenNonSelectedColor = {0.9f, 0.9f, 0.9f, 1f};
     protected boolean autoSelectNeighbor = true;
-    protected boolean hideNonSelectedEdges = true;
+    protected boolean hideNonSelectedEdges = false;
     protected boolean uniColorSelected = false;
     protected float[] uniColorSelectedColor = {0.8f, 1f, 0f};
     protected float[] edgeInSelectedColor = {1f, 0f, 0f};

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGDF.java
Patch:
@@ -63,7 +63,7 @@ public class ImporterGDF implements TextImporter {
     private GDFColumn[] edgeColumns;
 
     public ImporterGDF() {
-        nodeLineStart = new String[]{"nodedef>name", "nodedef> name", "Nodedef>name", "Nodedef> name"};
+        nodeLineStart = new String[]{"nodedef>name", "nodedef> name", "Nodedef>name", "Nodedef> name", "nodedef>\"name", "nodedef> \"name", "Nodedef>\"name", "Nodedef> \"name"};
         edgeLineStart = new String[]{"edgedef>", "Edgedef>"};
     }
 

File: DesktopImport/src/org/gephi/io/desktop/ReportPanel.java
Patch:
@@ -145,8 +145,10 @@ private void initComponents() {
 
         graphTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Directed", "Undirected", "Mixed" }));
 
+        nodeCountLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
         nodeCountLabel.setText(org.openide.util.NbBundle.getMessage(ReportPanel.class, "ReportPanel.nodeCountLabel.text")); // NOI18N
 
+        edgeCountLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
         edgeCountLabel.setText(org.openide.util.NbBundle.getMessage(ReportPanel.class, "ReportPanel.edgeCountLabel.text")); // NOI18N
 
         processorStrategyRadio.add(fullGraphRadio);

File: AttributesAPI/src/org/gephi/data/properties/EdgeProperties.java
Patch:
@@ -30,5 +30,5 @@
  */
 public enum EdgeProperties {
 
-    R, G, B, WEIGHT, ID, LABEL, ALPHA;
+    R, G, B, WEIGHT, ID, LABEL, ALPHA, SOURCE, TARGET;
 }

File: ImportAPI/src/org/gephi/io/database/AbstractDatabase.java
Patch:
@@ -39,7 +39,7 @@ public abstract class AbstractDatabase implements Database {
     protected String DBName;
 
     //PropertiesAssociations
-    protected PropertiesAssociations properties;
+    protected PropertiesAssociations properties = new PropertiesAssociations();
 
     public String getDBName() {
         return DBName;

File: ImportStandard/src/org/gephi/io/database/standard/EdgeListDatabaseImpl.java
Patch:
@@ -37,6 +37,7 @@ public class EdgeListDatabaseImpl extends AbstractDatabase implements EdgeListDa
     private String edgeAttributesQuery;
 
     public EdgeListDatabaseImpl() {
+        
         //Default node associations
         properties.addNodePropertyAssociation(new PropertyAssociation<NodeProperties>(NodeProperties.ID, "id"));
         properties.addNodePropertyAssociation(new PropertyAssociation<NodeProperties>(NodeProperties.LABEL, "label"));
@@ -46,9 +47,10 @@ public EdgeListDatabaseImpl() {
 
         //Default edge associations
         properties.addEdgePropertyAssociation(new PropertyAssociation<EdgeProperties>(EdgeProperties.ID, "id"));
+        properties.addEdgePropertyAssociation(new PropertyAssociation<EdgeProperties>(EdgeProperties.SOURCE, "source"));
+        properties.addEdgePropertyAssociation(new PropertyAssociation<EdgeProperties>(EdgeProperties.TARGET, "target"));
         properties.addEdgePropertyAssociation(new PropertyAssociation<EdgeProperties>(EdgeProperties.LABEL, "label"));
         properties.addEdgePropertyAssociation(new PropertyAssociation<EdgeProperties>(EdgeProperties.WEIGHT, "weight"));
-
     }
 
     public String getEdgeAttributesQuery() {

File: DHNSGraph/src/org/gephi/graph/dhns/edge/AbstractEdge.java
Patch:
@@ -111,7 +111,7 @@ public boolean isMixed() {
     }
 
     public boolean hasAttributes() {
-        return edgeData.getAttributes() == null;
+        return edgeData.getAttributes() != null;
     }
 
     public void setAttributes(Attributes attributes) {

File: DHNSGraph/src/org/gephi/graph/dhns/node/AbstractNode.java
Patch:
@@ -50,7 +50,7 @@ public NodeData getNodeData() {
     }
 
     public boolean hasAttributes() {
-        return nodeData.getAttributes() == null;
+        return nodeData.getAttributes() != null;
     }
 
     public void setAttributes(Attributes attributes) {

File: ImportContainerStandard/src/org/gephi/io/container/standard/EdgeDraftImpl.java
Patch:
@@ -54,7 +54,7 @@ public class EdgeDraftImpl implements EdgeDraft, EdgeDraftGetter {
     //Viz
     private Color color;
     private boolean labelVisible;
-    private boolean visible;
+    private boolean visible = true;
     private float labelSize;
 
     //Attributes

File: ImportContainerStandard/src/org/gephi/io/container/standard/NodeDraftImpl.java
Patch:
@@ -56,7 +56,7 @@ public class NodeDraftImpl implements NodeDraft, NodeDraftGetter {
     private float z;
     private float labelSize;
     private boolean labelVisible;
-    private boolean visible;
+    private boolean visible = true;
     private boolean fixed;
 
     //Attributes

File: AttributesImpl/src/org/gephi/data/attributes/AttributeContollerImpl.java
Patch:
@@ -39,6 +39,7 @@ public class AttributeContollerImpl implements AttributeController {
     public AttributeContollerImpl() {
         currentManager = new IndexedAttributeManager();
         factory = new AttributeFactoryImpl(currentManager);
+        currentManager.setFactory(factory);
     }
 
     public Lookup getNodeColumnsLookup() {

File: AttributesImpl/src/org/gephi/data/attributes/AttributeRowImpl.java
Patch:
@@ -71,7 +71,8 @@ public void setValue(String column, Object value) {
     }
 
     public void setValue(AttributeColumn column, Object value) {
-        setValue(new AttributeValueImpl((AttributeColumnImpl) column, value));
+        AttributeValue attValue = attributeClass.getFactory().newValue(column, value);
+        setValue(attValue);
     }
 
     public void setValue(AttributeValue value) {

File: GeneratorStandard/src/org/gephi/io/generator/standard/RandomGraph.java
Patch:
@@ -44,7 +44,7 @@ public void generate(ContainerLoader container) {
         NodeDraft[] nodeArray = new NodeDraft[numberOfNodes];
         for (int i = 0; i < numberOfNodes; i++) {
             NodeDraft nodeDraft = container.factory().newNodeDraft();
-            nodeDraft.setId("n"+i);
+            nodeDraft.setId("n" + i);
             container.addNode(nodeDraft);
             nodeArray[i] = nodeDraft;
         }
@@ -53,7 +53,7 @@ public void generate(ContainerLoader container) {
             NodeDraft node1 = nodeArray[i];
             for (int j = i + 1; j < numberOfNodes; j++) {
                 NodeDraft node2 = nodeArray[j];
-                if(random.nextDouble() < wiringProbability) {
+                if (random.nextDouble() < wiringProbability) {
                     EdgeDraft edgeDraft = container.factory().newEdgeDraft();
                     edgeDraft.setSource(node1);
                     edgeDraft.setTarget(node2);

File: ImportAPI/src/org/gephi/io/container/ContainerUnloader.java
Patch:
@@ -33,7 +33,7 @@ public interface ContainerUnloader {
     public Collection<? extends NodeDraftGetter> getNodes();
 
     public Collection<? extends EdgeDraftGetter> getEdges();
-    
+
     public EdgeDefault getEdgeDefault();
 
     public boolean allowSelfLoop();

File: ImportAPI/src/org/gephi/io/importer/ImportController.java
Patch:
@@ -20,7 +20,6 @@
  */
 package org.gephi.io.importer;
 
-import java.io.InputStream;
 import org.openide.filesystems.FileObject;
 
 /**
@@ -31,5 +30,5 @@ public interface ImportController {
 
     public FileType[] getFileTypes();
 
-    public void doImport(FileObject fileObject) throws ImportException;
+    public void doImport(FileObject fileObject);
 }

File: ImportAPI/src/org/gephi/io/importer/StreamImporter.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.io.importer;
 
 import java.io.InputStream;
@@ -30,5 +29,5 @@
  */
 public interface StreamImporter {
 
-    public void importData(InputStream stream, ContainerLoader containter) throws ImportException;
+    public void importData(InputStream stream, ContainerLoader containter) throws Exception;
 }

File: ImportAPI/src/org/gephi/io/importer/TextImporter.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.io.importer;
 
 import java.io.BufferedReader;
@@ -30,5 +29,5 @@
  */
 public interface TextImporter extends FileFormatImporter {
 
-    public void importData(BufferedReader reader, ContainerLoader containter) throws ImportException;
+    public void importData(BufferedReader reader, ContainerLoader containter) throws Exception;
 }

File: ImportAPI/src/org/gephi/io/importer/XMLImporter.java
Patch:
@@ -18,7 +18,6 @@
 You should have received a copy of the GNU General Public License
 along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
  */
-
 package org.gephi.io.importer;
 
 import org.gephi.io.container.ContainerLoader;
@@ -30,5 +29,5 @@
  */
 public interface XMLImporter extends FileFormatImporter {
 
-    public void importData(Document document, ContainerLoader containter) throws ImportException;
+    public void importData(Document document, ContainerLoader containter) throws Exception;
 }

File: ImportContainerStandard/src/org/gephi/io/container/standard/ImportContainerException.java
Patch:
@@ -25,7 +25,7 @@
  *
  * @author Mathieu Bastian
  */
-public class ImportContainerException extends Exception {
+public class ImportContainerException extends RuntimeException {
 
     public ImportContainerException(String message)
     {

File: ImportStandard/src/org/gephi/io/importer/standard/ImporterGDF.java
Patch:
@@ -348,7 +348,7 @@ private void setNodeData(NodeDraft node, GDFColumn column, String data) throws I
                         break;
                 }
             } catch (Exception e) {
-                String message = String.format(NbBundle.getMessage(ImporterGDF.class, "importerGDF_error_dataformat3"), column.getNodeColumn(), data);
+                String message = NbBundle.getMessage(ImporterGDF.class, "importerGDF_error_dataformat3", column.getNodeColumn(),node, data);
                 throw new ImportException(message);
             }
         } else if (column.getAttributeColumn() != null) {
@@ -387,7 +387,7 @@ private void setEdgeData(EdgeDraft edge, GDFColumn column, String data) throws I
                         break;
                 }
             } catch (Exception e) {
-                String message = String.format(NbBundle.getMessage(ImporterGDF.class, "importerGDF_error_dataformat3"), column.getNodeColumn(), data);
+                String message = NbBundle.getMessage(ImporterGDF.class, "importerGDF_error_dataformat3", column.getNodeColumn(), data);
                 throw new ImportException(message);
             }
         } else if (column.getAttributeColumn() != null) {

File: VisualizationModule/src/org/gephi/visualization/component/GraphTopComponent.java
Patch:
@@ -72,6 +72,8 @@ public void run() {
                 });
             }
         });
+        //add(drawable.getGraphComponent(), BorderLayout.CENTER);
+        //remove(waitingLabel);
     }
 
     /** This method is called from within the constructor to

File: VisualizationModule/src/org/gephi/visualization/opengl/AbstractEngine.java
Patch:
@@ -202,6 +202,7 @@ public void setInited() {
             if (!inited) {
                 inited = true;
                 if (requestAnimation) {
+                    graphDrawable.display();
                     startAnimating();
                     requestAnimation = false;
                 }

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -531,6 +531,7 @@ public void startAnimating() {
         if (!scheduler.isAnimating()) {
             System.out.println("start animating");
             scheduler.start();
+            graphIO.startMouseListening();
         }
     }
 
@@ -539,6 +540,7 @@ public void stopAnimating() {
         if (scheduler.isAnimating()) {
             System.out.println("stop animating");
             scheduler.stop();
+            graphIO.stopMouseListening();
         }
 
     }

File: VisualizationModule/src/org/gephi/visualization/swing/GraphDrawableImpl.java
Patch:
@@ -66,7 +66,6 @@ protected void init(GL gl) {
         System.out.println("init");
         graphComponent.setCursor(Cursor.getDefaultCursor());
         engine.initEngine(gl, glu);
-        VizController.getInstance().getGraphIO().startMouseListening();
     }
 
     public void refreshDraggingMarker() {

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/MetaEdgeContentIterator.java
Patch:
@@ -26,8 +26,9 @@
 import org.gephi.graph.dhns.edge.MetaEdgeImpl;
 
 /**
+ * Iterates over the edges contained in a meta edge. Support either directed ot undirected request.
  *
- * @author Mathieu
+ * @author Mathieu Bastian
  */
 public class MetaEdgeContentIterator extends AbstractEdgeIterator implements Iterator<Edge> {
 

File: DHNSGraph/src/org/gephi/graph/dhns/core/StructureModifier.java
Patch:
@@ -114,7 +114,7 @@ public void addNodeBlock(Node node, Node parent) {
         }
         PreNode preNode = (PreNode) node;
         preNode.parent = parentNode;
-        if(treeStructure.getEnabledAncestor(preNode)==null) {
+        if (treeStructure.getEnabledAncestor(preNode) == null) {
             preNode.setEnabled(true);
         } else {
             preNode.setEnabled(false);

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/RangeEdgeIterator.java
Patch:
@@ -46,7 +46,7 @@
 public class RangeEdgeIterator extends AbstractEdgeIterator implements Iterator<Edge> {
 
     protected AbstractNodeIterator nodeIterator;
-    protected ParamAVLIterator<ProperEdgeImpl> edgeIterator;
+    protected ParamAVLIterator<AbstractEdge> edgeIterator;
     protected PreNode currentNode;
     protected AbstractEdge pointer;
     protected boolean IN = false;
@@ -61,6 +61,7 @@ public RangeEdgeIterator(TreeStructure treeStructure, PreNode nodeGroup, PreNode
         this.nodeGroup = nodeGroup;
         this.rangeStart = target.getPre();
         this.rangeLimit = rangeStart + target.size;
+        this.edgeIterator = new ParamAVLIterator<AbstractEdge>();
     }
 
     public RangeEdgeIterator() {
@@ -69,7 +70,7 @@ public RangeEdgeIterator() {
     @Override
     public boolean hasNext() {
         while (true) {
-            while (edgeIterator == null || !edgeIterator.hasNext()) {
+            while (!edgeIterator.hasNext()) {
                 if (currentNode == null) {
                     if (nodeIterator.hasNext()) {
                         currentNode = nodeIterator.next();

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredDirectedGraphImpl.java
Patch:
@@ -361,16 +361,16 @@ public int getMetaDegree(Node node) {
     public EdgeIterable getMetaEdgeContent(Edge metaEdge) {
         MetaEdgeImpl metaEdgeImpl = checkMetaEdge(metaEdge);
         readLock();
-        if(visible) {
-            Iterator<Edge> itr = (Iterator<Edge>)metaEdgeImpl.getEdges().iterator();
+        if (visible) {
+            Iterator<Edge> itr = (Iterator<Edge>) metaEdgeImpl.getEdges().iterator();
             return dhns.newEdgeIterable(itr, new Condition<Edge>() {
 
                 public boolean isValid(Edge t) {
                     return t.isVisible();
                 }
             });
         } else {
-            Iterator<Edge> itr = (Iterator<Edge>)metaEdgeImpl.getEdges().iterator();
+            Iterator<Edge> itr = (Iterator<Edge>) metaEdgeImpl.getEdges().iterator();
             return dhns.newEdgeIterable(itr);
         }
     }

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredGraphImpl.java
Patch:
@@ -312,8 +312,8 @@ public void retract(Node node) {
         dhns.getStructureModifier().retract(node);
     }
 
-    public void addToGroup(Node node, Node nodeGroup) {
-        throw new UnsupportedOperationException("Not supported yet.");
+    public void moveToGroup(Node node, Node nodeGroup) {
+
     }
 
     public void removeFromGroup(Node node) {

File: GraphAPI/src/org/gephi/graph/api/ClusteredGraph.java
Patch:
@@ -167,7 +167,7 @@ public interface ClusteredGraph {
 
     public void retract(Node node);
 
-    public void addToGroup(Node node, Node nodeGroup);
+    public void moveToGroup(Node node, Node nodeGroup);
 
     public void removeFromGroup(Node node);
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredDirectedGraphImpl.java
Patch:
@@ -69,10 +69,10 @@ public boolean addEdge(Node source, Node target) {
     }
 
     //Directed
-    public void removeEdge(Edge edge) {
+    public boolean removeEdge(Edge edge) {
         AbstractEdge absEdge = checkEdge(edge);
         AbstractEdge undirected = absEdge.getUndirected();      //Ensure that the edge with the min id is removed before his mutual with a greater id
-        dhns.getStructureModifier().deleteEdge(undirected);
+        return dhns.getStructureModifier().deleteEdge(undirected);
     }
 
     //Directed

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredMixedGraphImpl.java
Patch:
@@ -82,10 +82,10 @@ public boolean addEdge(Node source, Node target, boolean directed) {
         return true;
     }
 
-    public void removeEdge(Edge edge) {
+    public boolean removeEdge(Edge edge) {
         AbstractEdge absEdge = checkEdge(edge);
         AbstractEdge undirected = absEdge.getUndirected();      //Ensure that the edge with the min id is removed before his mutual with a greater id
-        dhns.getStructureModifier().deleteEdge(undirected);
+        return dhns.getStructureModifier().deleteEdge(undirected);
     }
 
     public EdgeIterable getDirectedEdges() {
@@ -97,7 +97,7 @@ public EdgeIterable getDirectedEdges() {
         }
     }
 
-    public Iterable<Edge> getUndirectedEdges() {
+    public EdgeIterable getUndirectedEdges() {
         readLock();
         if (visible) {
             return dhns.newEdgeIterable(new VisibleEdgeIterator(dhns.getTreeStructure(), new VisibleTreeIterator(dhns.getTreeStructure()), false), undirectedCondition);

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredUndirectedGraphImpl.java
Patch:
@@ -134,6 +134,7 @@ public int getDegree(Node node) {
                 if (edge.isSelfLoop()) {
                     count++;
                 }
+                count++;
             }
         } else {
             EdgeNodeIterator itr = new EdgeNodeIterator(preNode, EdgeNodeIterator.EdgeNodeIteratorMode.BOTH, true);

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestVisibleDirectedGraph.java
Patch:
@@ -23,14 +23,14 @@
  *
  * @author Mathieu Bastian
  */
-public class DhnsTestVisibleGraph {
+public class DhnsTestVisibleDirectedGraph {
 
     private Dhns dhnsGlobal;
     private ClusteredDirectedGraphImpl graphGlobal;
     private Map<String, Node> nodeMap;
     private Map<String, Edge> edgeMap;
 
-    public DhnsTestVisibleGraph() {
+    public DhnsTestVisibleDirectedGraph() {
     }
 
     @BeforeClass

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/VisibleRangeEdgeIterator.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.Iterator;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.dhns.core.TreeStructure;
-import org.gephi.graph.dhns.edge.ProperEdgeImpl;
+import org.gephi.graph.dhns.edge.AbstractEdge;
 import org.gephi.graph.dhns.node.PreNode;
 import org.gephi.graph.dhns.node.iterators.VisibleDescendantAndSelfIterator;
 
@@ -43,7 +43,7 @@ public VisibleRangeEdgeIterator(TreeStructure treeStructure, PreNode nodeGroup,
     }
 
     @Override
-    protected boolean testTarget(ProperEdgeImpl edgeImpl) {
+    protected boolean testTarget(AbstractEdge edgeImpl) {
         if (edgeImpl.isVisible()) {
             if (IN) {
                 PreNode source = edgeImpl.getSource();

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredDirectedGraphImpl.java
Patch:
@@ -196,7 +196,7 @@ public NodeIterable getNeighbors(Node node) {
         PreNode preNode = checkNode(node);
         readLock();
         if (visible) {
-            return dhns.newNodeIterable(new NeighborIterator(new VisibleEdgeNodeIterator(preNode, VisibleEdgeNodeIterator.EdgeNodeIteratorMode.BOTH, false), preNode));
+            return dhns.newNodeIterable(new NeighborIterator(new VisibleEdgeNodeIterator(preNode, VisibleEdgeNodeIterator.EdgeNodeIteratorMode.BOTH, true), preNode));
         } else {
             return dhns.newNodeIterable(new NeighborIterator(new EdgeNodeIterator(preNode, EdgeNodeIterator.EdgeNodeIteratorMode.BOTH, true), preNode));
         }

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestDirectedGraph.java
Patch:
@@ -613,6 +613,6 @@ public void testGetOutEdges() {
         assertArrayEquals(expected, actual);
 
         //Test2
-        assertEquals(graphGlobal.getInEdges(nodeMap.get("Node 4")).toArray()[0], edgeMap.get("4-4"));
+        assertEquals(graphGlobal.getOutEdges(nodeMap.get("Node 4")).toArray()[0], edgeMap.get("4-4"));
     }
 }
\ No newline at end of file

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeIterator.java
Patch:
@@ -50,7 +50,7 @@ public EdgeIterator(TreeStructure treeStructure, AbstractNodeIterator nodeIterat
 
     @Override
     public boolean hasNext() {
-        while (pointer == null || (undirected && pointer.isSecondMutual())) {
+        while (pointer == null || (undirected && pointer.getUndirected()!=pointer)) {
             while (!edgeIterator.hasNext()) {
                 if (nodeIterator.hasNext()) {
                     currentNode = nodeIterator.next();

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeNodeIterator.java
Patch:
@@ -57,7 +57,7 @@ public EdgeNodeIterator(PreNode node, EdgeNodeIteratorMode mode, boolean undirec
     }
 
     public boolean hasNext() {
-        while (pointer == null || (undirected && pointer.isSecondMutual())) {
+        while (pointer == null || (undirected && pointer.getUndirected()!=pointer)) {
             if (mode.equals(EdgeNodeIteratorMode.BOTH)) {
                 boolean res = edgeIterator.hasNext();
                 if (res) {

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/VisibleEdgeIterator.java
Patch:
@@ -50,7 +50,7 @@ public VisibleEdgeIterator(TreeStructure treeStructure, AbstractNodeIterator nod
 
     @Override
     public boolean hasNext() {
-        while (pointer == null || (undirected && pointer.isSecondMutual()) || !pointer.isVisible()) {
+        while (pointer == null || (undirected && pointer.getUndirected()!=pointer) || !pointer.isVisible()) {
             while (!edgeIterator.hasNext()) {
                 if (nodeIterator.hasNext()) {
                     currentNode = nodeIterator.next();

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/VisibleEdgeNodeIterator.java
Patch:
@@ -57,7 +57,7 @@ public VisibleEdgeNodeIterator(PreNode node, EdgeNodeIteratorMode mode, boolean
     }
 
     public boolean hasNext() {
-        while (pointer == null || (undirected && pointer.isSecondMutual()) || !pointer.isVisible()) {
+        while (pointer == null || (undirected && pointer.getUndirected()!=pointer) || !pointer.isVisible()) {
             if (mode.equals(EdgeNodeIteratorMode.BOTH)) {
                 boolean res = edgeIterator.hasNext();
                 if (res) {

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredGraphImpl.java
Patch:
@@ -133,6 +133,9 @@ public boolean isSelfLoop(Edge edge) {
     }
 
     public boolean isAdjacent(Edge edge1, Edge edge2) {
+        if(edge1==edge2) {
+            throw new IllegalArgumentException("Edges can't be the same");
+        }
         checkEdge(edge1);
         checkEdge(edge2);
         return edge1.getSource() == edge2.getSource() ||

File: DHNSGraph/test/unit/src/org/gephi/graph/dhns/core/DhnsTestDirectedGraph.java
Patch:
@@ -488,8 +488,8 @@ public void testPredecessors() {
     public void testNeighbors() {
         System.out.print("testNeighbors: ");
         Node[] expected = new Node[2];
-        expected[0] = nodeMap.get("Node 4");
-        expected[1] = nodeMap.get("Node 6");
+        expected[0] = nodeMap.get("Node 6");
+        expected[1] = nodeMap.get("Node 4");
         Node[] actual = new Node[2];
 
         int i = 0;

File: AttributesAPI/src/org/gephi/data/attributes/api/AttributeRow.java
Patch:
@@ -32,6 +32,8 @@ public interface AttributeRow extends Attributes {
 
     public void setValues(AttributeRow attributeRow);
 
+    public void setValue(AttributeValue value);
+
     public void setValue(AttributeColumn column, Object value);
 
     public void setValue(String column, Object value);
@@ -40,4 +42,5 @@ public interface AttributeRow extends Attributes {
 
     public Object getValue(String column);
 
+    public AttributeValue[] getValues();
 }

File: DHNSGraph/src/org/gephi/graph/dhns/core/GraphFactoryImpl.java
Patch:
@@ -25,7 +25,7 @@
 import org.gephi.graph.api.GraphFactory;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.dhns.edge.AbstractEdge;
-import org.gephi.graph.dhns.edge.EdgeImpl;
+import org.gephi.graph.dhns.edge.ProperEdgeImpl;
 import org.gephi.graph.dhns.edge.SelfLoopImpl;
 import org.gephi.graph.dhns.edge.SparseEdgeImpl;
 import org.gephi.graph.dhns.node.AbstractNode;
@@ -64,7 +64,7 @@ public AbstractEdge newEdge(Node source, Node target) {
         if (source == target) {
             edge = new SelfLoopImpl(idGen.newEdgeId(),nodeSource);
         } else {
-            edge = new EdgeImpl(idGen.newEdgeId(),nodeSource, nodeTarget);
+            edge = new ProperEdgeImpl(idGen.newEdgeId(),nodeSource, nodeTarget);
         }
         edge.setAttributes(dhns.newEdgeAttributes());
         return edge;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/ProperEdgeImpl.java
Patch:
@@ -27,9 +27,9 @@
  *
  * @author Mathieu Bastian
  */
-public class EdgeImpl extends AbstractEdge {
+public class ProperEdgeImpl extends AbstractEdge {
 
-    public EdgeImpl(int ID, PreNode source, PreNode target) {
+    public ProperEdgeImpl(int ID, PreNode source, PreNode target) {
         super(ID, source, target);
     }
 }

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeIterator.java
Patch:
@@ -21,7 +21,7 @@
 package org.gephi.graph.dhns.edge.iterators;
 
 import java.util.Iterator;
-import org.gephi.graph.dhns.edge.EdgeImpl;
+import org.gephi.graph.dhns.edge.ProperEdgeImpl;
 import org.gephi.graph.dhns.node.PreNode;
 import org.gephi.graph.dhns.core.TreeStructure;
 import org.gephi.datastructure.avl.param.ParamAVLIterator;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/EdgeNodeIterator.java
Patch:
@@ -24,7 +24,7 @@
 import org.gephi.datastructure.avl.param.ParamAVLIterator;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.dhns.edge.AbstractEdge;
-import org.gephi.graph.dhns.edge.EdgeImpl;
+import org.gephi.graph.dhns.edge.ProperEdgeImpl;
 import org.gephi.graph.dhns.node.PreNode;
 
 /**

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/MetaEdgeIterator.java
Patch:
@@ -21,7 +21,7 @@
 package org.gephi.graph.dhns.edge.iterators;
 
 import java.util.Iterator;
-import org.gephi.graph.dhns.edge.EdgeImpl;
+import org.gephi.graph.dhns.edge.ProperEdgeImpl;
 import org.gephi.graph.dhns.core.TreeStructure;
 import org.gephi.graph.dhns.node.PreNode;
 import org.gephi.datastructure.avl.param.ParamAVLIterator;

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/VisibleRangeEdgeIterator.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.Iterator;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.dhns.core.TreeStructure;
-import org.gephi.graph.dhns.edge.EdgeImpl;
+import org.gephi.graph.dhns.edge.ProperEdgeImpl;
 import org.gephi.graph.dhns.node.PreNode;
 import org.gephi.graph.dhns.node.iterators.VisibleDescendantAndSelfIterator;
 
@@ -43,7 +43,7 @@ public VisibleRangeEdgeIterator(TreeStructure treeStructure, PreNode nodeGroup,
     }
 
     @Override
-    protected boolean testTarget(EdgeImpl edgeImpl) {
+    protected boolean testTarget(ProperEdgeImpl edgeImpl) {
         if (edgeImpl.isVisible()) {
             if (IN) {
                 PreNode source = edgeImpl.getSource();

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredDirectedGraphImpl.java
Patch:
@@ -186,7 +186,7 @@ public NodeIterable getNeighbors(Node node) {
         if (visible) {
             return dhns.newNodeIterable(new NeighborIterator(new VisibleEdgeNodeIterator(preNode, VisibleEdgeNodeIterator.EdgeNodeIteratorMode.BOTH, false), preNode));
         } else {
-            return dhns.newNodeIterable(new NeighborIterator(new EdgeNodeIterator(preNode, EdgeNodeIterator.EdgeNodeIteratorMode.BOTH, false), preNode));
+            return dhns.newNodeIterable(new NeighborIterator(new EdgeNodeIterator(preNode, EdgeNodeIterator.EdgeNodeIteratorMode.BOTH, true), preNode));
         }
     }
 
@@ -233,8 +233,8 @@ public int getDegree(Node node) {
     }
 
     //Graph
-    public boolean isNeighbor(Node node, Node neighbor) {
-        return isSuccessor(node, neighbor) || isPredecessor(node, neighbor);
+    public boolean isAdjacent(Node node1, Node node2) {
+        return isSuccessor(node1, node2) || isPredecessor(node1, node2);
     }
 
     //ClusteredGraph

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredUndirectedGraphImpl.java
Patch:
@@ -124,8 +124,8 @@ public int getDegree(Node node) {
         return count;
     }
 
-    public boolean isNeighbor(Node node, Node neighbor) {
-        return getEdge(node, neighbor) != null;
+    public boolean isAdjacent(Node node1, Node node2) {
+        return getEdge(node1, node2) != null;
     }
 
     public EdgeIterable getInnerEdges(Node nodeGroup) {

File: DHNSGraph/src/org/gephi/graph/dhns/node/utils/avl/EdgeOppositeTree.java
Patch:
@@ -20,7 +20,7 @@
  */
 package org.gephi.graph.dhns.node.utils.avl;
 
-import org.gephi.graph.dhns.edge.EdgeImpl;
+import org.gephi.graph.dhns.edge.ProperEdgeImpl;
 import org.gephi.graph.dhns.node.PreNode;
 import org.gephi.datastructure.avl.param.AVLItemAccessor;
 import org.gephi.datastructure.avl.param.ParamAVLTree;

File: GraphAPI/src/org/gephi/graph/api/ClusteredMixedGraph.java
Patch:
@@ -25,6 +25,6 @@
  *
  * @author Mathieu Bastian
  */
-public interface ClusteredSparseGraph extends SparseGraph, ClusteredGraph {
+public interface ClusteredMixedGraph extends MixedGraph, ClusteredGraph {
 
 }

File: GraphAPI/src/org/gephi/graph/api/Graph.java
Patch:
@@ -60,7 +60,9 @@ public interface Graph {
 
     public boolean isSelfLoop(Edge edge);
 
-    public boolean isNeighbor(Node node, Node neighbor);
+    public boolean isAdjacent(Node node1, Node node2);
+
+    public boolean isAdjacent(Edge edge1, Edge edge2);
 
     public void clearEdges(Node node);
 

File: GraphAPI/src/org/gephi/graph/api/MixedGraph.java
Patch:
@@ -25,7 +25,7 @@
  *
  * @author Mathieu Bastian
  */
-public interface SparseGraph extends Graph {
+public interface MixedGraph extends Graph {
 
     public void addEdge(Node source, Node target, boolean directed);
 

File: DHNSGraph/src/org/gephi/graph/dhns/core/EdgeProcessor.java
Patch:
@@ -41,6 +41,7 @@ public class EdgeProcessor {
     public EdgeProcessor(Dhns dhns) {
         this.treeStructure = dhns.getTreeStructure();
         this.idGen = dhns.getIdGen();
+        this.edgeIterator = new ParamAVLIterator<AbstractEdge>();
     }
 
     public void clearEdges(PreNode node) {

File: DHNSGraph/src/org/gephi/graph/dhns/edge/iterators/VisibleEdgeNodeIterator.java
Patch:
@@ -62,6 +62,9 @@ public boolean hasNext() {
                 boolean res = edgeIterator.hasNext();
                 if (res) {
                     pointer = edgeIterator.next();
+                    if(pointer.isSelfLoop()) {  //Ignore self loop here to avoid double iteration
+                        pointer = null;
+                    }
                 } else {
                     this.edgeIterator.setNode(node.getEdgesInTree());
                     this.mode = EdgeNodeIteratorMode.IN;

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredDirectedGraphImpl.java
Patch:
@@ -180,7 +180,7 @@ public EdgeIterable getEdges(Node node) {
     }
 
     //Graph
-    public NodeIterable getNeigbors(Node node) {
+    public NodeIterable getNeighbors(Node node) {
         PreNode preNode = checkNode(node);
         readLock();
         if (visible) {

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredSparseGraphImpl.java
Patch:
@@ -90,7 +90,7 @@ public EdgeIterable getEdges() {
         throw new UnsupportedOperationException("Not supported yet.");
     }
 
-    public NodeIterable getNeigbors(Node node) {
+    public NodeIterable getNeighbors(Node node) {
         throw new UnsupportedOperationException("Not supported yet.");
     }
 

File: DHNSGraph/src/org/gephi/graph/dhns/graph/ClusteredUndirectedGraphImpl.java
Patch:
@@ -20,15 +20,13 @@
  */
 package org.gephi.graph.dhns.graph;
 
-import java.util.Iterator;
 import org.gephi.graph.api.ClusteredUndirectedGraph;
 import org.gephi.graph.api.Edge;
 import org.gephi.graph.api.EdgeIterable;
 import org.gephi.graph.api.Node;
 import org.gephi.graph.api.NodeIterable;
 import org.gephi.graph.dhns.core.Dhns;
 import org.gephi.graph.dhns.edge.AbstractEdge;
-import org.gephi.graph.dhns.edge.EdgeImpl;
 import org.gephi.graph.dhns.edge.iterators.EdgeIterator;
 import org.gephi.graph.dhns.edge.iterators.EdgeNodeIterator;
 import org.gephi.graph.dhns.edge.iterators.VisibleEdgeIterator;
@@ -79,7 +77,7 @@ public EdgeIterable getEdges(Node node) {
         }
     }
 
-    public NodeIterable getNeigbors(Node node) {
+    public NodeIterable getNeighbors(Node node) {
         PreNode preNode = checkNode(node);
         readLock();
         if (visible) {

File: GraphAPI/src/org/gephi/graph/api/Graph.java
Patch:
@@ -42,7 +42,7 @@ public interface Graph {
 
     public EdgeIterable getEdges();
 
-    public NodeIterable getNeigbors(Node node);
+    public NodeIterable getNeighbors(Node node);
 
     public EdgeIterable getEdges(Node node);
 

File: DHNSModule/src/org/gephi/data/network/Dhns.java
Patch:
@@ -52,11 +52,12 @@ public Dhns() {
         dictionary = new DictionaryImpl();
         potatoManager = new PotatoManager(this);
         networkCache = new NetworkCache(this);
+        init();
     }
 
     public void init() {
        importFakeGraph();
-    //treeStructure.showTreeAsTable();
+       treeStructure.showTreeAsTable();
     }
 
     public void endImport() {

File: DHNSModule/src/org/gephi/data/network/config/DHNSConfig.java
Patch:
@@ -27,7 +27,7 @@ public enum ViewType {
         SINGLE, HIERARCHY
     };
     private ViewType viewType;
-    private boolean potatoesEnabled=true;
+    private boolean potatoesEnabled=false;
 
     public DHNSConfig() {
         viewType = ViewType.SINGLE;

File: DHNSModule/src/org/gephi/data/network/mode/FreeMode.java
Patch:
@@ -67,6 +67,7 @@ public void init() {
         ni.setY(n.getPost() * 50);
         }*/
         edgeProcessing.init();
+        dhns.getNetworkCache().reset();
     //sightManager.getMainSight().getSightCache().reset();
     }
 

File: DHNSModule/src/org/gephi/data/network/node/treelist/SingleTreeIterator.java
Patch:
@@ -62,11 +62,11 @@ public boolean hasNext() {
             }
 
             while (!currentNode.value.isEnabled()) {
-                nextIndex = currentNode.value.pre + 1 + currentNode.value.size;
+                ++nextIndex;
                 if (nextIndex >= treeSize) {
                     return false;
                 }
-                currentNode = treeList.root.get(nextIndex);
+                currentNode = currentNode.next();
             }
             return true;
         }

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -420,7 +420,7 @@ public void removeObject(int classID, Object3dImpl obj) {
     }
 
     @Override
-    public void resetObjecClass(Object3dClass object3dClass) {
+    public void resetObjectClass(Object3dClass object3dClass) {
         octree.resetObjectClass(object3dClass.getClassId());
     }
 

File: DHNSModule/src/org/gephi/data/network/api/DhnsController.java
Patch:
@@ -39,7 +39,9 @@ public interface DhnsController {
 
     public FreeModifier getFreeModifier();
 
-    public FlatImporter getFlatImport();
+    public FlatImporter getFlatImporter();
+
+    public HierarchyImporter getHierarchyImporter();
 
     public Dictionary getDictionary();
 

File: DHNSModule/src/org/gephi/data/network/mode/FreeMode.java
Patch:
@@ -65,13 +65,13 @@ public FreeMode(Dhns dhns) {
     public void init() {
         SightImpl sight = sightManager.getMainSight();
 
-        SightTreeIterator enabledNodes = new SightTreeIterator(treeStructure, sight);
+        /*SightTreeIterator enabledNodes = new SightTreeIterator(treeStructure, sight);
         for (; enabledNodes.hasNext();) {
         PreNode n = enabledNodes.next();
         NodeImpl ni = n.getNode();
         ni.setX(n.getPre() * 50);
         ni.setY(n.getPost() * 50);
-        }
+        }*/
         edgeProcessing.init(sightManager.getMainSight());
         sightManager.getMainSight().getSightCache().reset();
     }

File: DHNSModule/src/org/gephi/data/network/node/NodeImpl.java
Patch:
@@ -62,6 +62,8 @@ public NodeImpl() {
         r = (float) Math.random();
         g = (float) Math.random();
         b = (float) Math.random();
+        //size= 10f;
+        size = ((float)Math.random()) * 20 + 10;
     }
 
     public float x() {

File: LayoutStandard/src/org/gephi/layout/forceAtlas/ForceAtlas.java
Patch:
@@ -63,7 +63,7 @@ public Icon getIcon() {
 
     public void resetPropertiesValues() {
         inertia = 0.1;
-        repulsionStrength = 10;
+        repulsionStrength = 1000;
         attractionStrength = 10;
         maxDisplacement = 10;
         freezeBalance = true;

File: VisualizationModule/src/org/gephi/visualization/api/Object3dImpl.java
Patch:
@@ -51,6 +51,7 @@ public abstract class Object3dImpl<ObjectType extends Renderable> implements Obj
     //Flags
     protected boolean selected;
     public long markTime = 0;
+    public long selectionMark = 0;
     public boolean mark = false;
 
     public abstract int[] octreePosition(float centerX, float centerY, float centerZ, float size);

File: VisualizationModule/src/org/gephi/visualization/bridge/DHNSDataBridge.java
Patch:
@@ -107,7 +107,7 @@ private void updateNodes() {
         for (; itr.hasNext();) {
             NodeWrap preNode = itr.next();
             Node node = preNode.getNode();
-
+            
             Object3d obj = node.getObject3d();
             if (obj == null) {
                 //Object3d is null, ADD
@@ -117,8 +117,6 @@ private void updateNodes() {
                 engine.addObject(AbstractEngine.CLASS_NODE, (Object3dImpl) obj);
             }
             obj.setCacheMarker(cacheMarker);
-
-            node.setSize(10f);
         }
     }
 

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/CompatibilityEngine.java
Patch:
@@ -469,7 +469,7 @@ public void mouseMove() {
                         }
                         selectedObjects[i].add(obj);
                     }
-                    obj.markTime = markTime;
+                    obj.selectionMark = markTime;
                 } else if (currentSelectionArea.unselect(obj.getObj())) {
                     if (vizEventManager.hasSelectionListeners() && obj.isSelected()) {
                         unSelectedObjects.add(obj);
@@ -479,7 +479,7 @@ public void mouseMove() {
 
             for (Iterator<Object3dImpl> itr = selectedObjects[i].iterator(); itr.hasNext();) {
                 Object3dImpl o = itr.next();
-                if (o.markTime != markTime) {
+                if (o.selectionMark != markTime) {
                     itr.remove();
                     o.setSelected(false);
                 }

File: DHNSModule/src/org/gephi/data/network/Dhns.java
Patch:
@@ -59,6 +59,7 @@ public Dhns() {
         sightManager = new SightManagerImpl(this);
         freeMode = new FreeMode(this);
         dictionary = new DictionaryImpl();
+        potatoManager = new PotatoManager(this);
         init(sightManager.getMainSight());
     }
 

File: DHNSModule/src/org/gephi/data/network/sight/SightCache.java
Patch:
@@ -86,6 +86,7 @@ public SightCacheContent getCacheContent() {
     public void reset() {
         orderResetNode.set(true);
         orderResetEdge.set(true);
+        orderResetPotato.set(true);
         doReset();
     }
 

File: GraphAPI/src/org/gephi/graph/api/Potato.java
Patch:
@@ -32,4 +32,5 @@
 public interface Potato extends Renderable {
 
     public Iterable<? extends Node> getContent();
+    public int countPotatoes();
 }

File: VisualizationModule/src/org/gephi/visualization/opengl/compatibility/objects/Potato3dObject.java
Patch:
@@ -110,6 +110,6 @@ private void computeOctantsTree() {
             octantsTree.add(o);
         }
 
-        octants = octantsTree.toArray();
+         octants = octantsTree.toArray(new Octant[0]);
     }
 }

File: ProjectAPI/src/org/gephi/project/api/Projects.java
Patch:
@@ -54,7 +54,7 @@ public void refreshProjects()
     {
         for(Project project : projects)
         {
-            
+            project.init();
         }
     }
 

File: ProjectAPI/src/org/gephi/project/api/ProjectController.java
Patch:
@@ -6,6 +6,7 @@
 package org.gephi.project.api;
 
 import org.gephi.project.api.Workspace;
+import org.openide.loaders.DataObject;
 
 /**
  *
@@ -14,6 +15,7 @@
 public interface ProjectController {
 
     public void newProject();
+    public void loadProject(DataObject dataObject);
     public void closeProject(Project project);
     public void removeProject(Project project);
     public Projects getProjects();

File: ProjectAPI/src/org/gephi/project/api/Projects.java
Patch:
@@ -46,6 +46,8 @@ public class Projects implements Lookup.Provider, Serializable {
 
     public Projects()
     {
+        ic = new InstanceContent();
+        lookup = new AbstractLookup(ic);
     }
 
     public void addProject(Project project) {

File: src/gephi/visualization/opengl/compatibility/nodeobjects/NodeSphereObject.java
Patch:
@@ -20,6 +20,7 @@
  */
 package gephi.visualization.opengl.compatibility.nodeobjects;
 
+import gephi.data.network.Node;
 import javax.media.opengl.GL;
 import javax.media.opengl.glu.GLU;
 
@@ -35,7 +36,7 @@
  * @author Mathieu Bastian
  * @see CompatibilityEngine
  */
-public class NodeSphereObject extends Object3d<Renderable> {
+public class NodeSphereObject extends Object3d<Node> {
 
     public int modelType;
     private Octant octant;

File: src/gephi/visualization/opengl/Object3d.java
Patch:
@@ -47,6 +47,7 @@ public abstract class Object3d<ObjectType extends Renderable> implements AVLItem
 
     //Flags
     protected boolean selected;
+    public long markTime=0;
 
     public abstract int[] octreePosition(float centerX, float centerY, float centerZ, float size);
 	public abstract boolean isInOctreeLeaf(Octant leaf);

File: src/gephi/visualization/swing/GraphIO.java
Patch:
@@ -18,6 +18,8 @@
 public interface GraphIO extends MouseListener, MouseWheelListener, MouseMotionListener, KeyListener {
 
     public float[] getMousePosition();
+    public void startMouseListening();
+    public void stopMouseListening();
 
     public void setVizEventManager(VizEventManager vizEventManager);
     public VizEventManager getVizEventManager();

