File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BleUrlDeviceDiscoverer.java
Patch:
@@ -91,7 +91,8 @@ public void onLeScan(final BluetoothDevice device, final int rssi, final byte[]
     if (beacon == null || !URLUtil.isNetworkUrl(beacon.getUrl())) {
       return;
     }
-    UrlDevice urlDevice = createUrlDeviceBuilder(TAG + device.getAddress(), beacon.getUrl())
+    UrlDevice urlDevice = createUrlDeviceBuilder(TAG + device.getAddress() + beacon.getUrl(),
+                                                 beacon.getUrl())
         .setRssi(rssi)
         .setTxPower(beacon.getTxPowerLevel())
         .setDeviceType(Utils.BLE_DEVICE_TYPE)

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BleUrlDeviceDiscoverer.java
Patch:
@@ -91,7 +91,8 @@ public void onLeScan(final BluetoothDevice device, final int rssi, final byte[]
     if (beacon == null || !URLUtil.isNetworkUrl(beacon.getUrl())) {
       return;
     }
-    UrlDevice urlDevice = createUrlDeviceBuilder(TAG + device.getAddress(), beacon.getUrl())
+    UrlDevice urlDevice = createUrlDeviceBuilder(TAG + device.getAddress() + beacon.getUrl(),
+                                                 beacon.getUrl())
         .setRssi(rssi)
         .setTxPower(beacon.getTxPowerLevel())
         .setDeviceType(Utils.BLE_DEVICE_TYPE)

File: java/libs/src/main/java/org/physical_web/collection/EddystoneBeacon.java
Patch:
@@ -19,6 +19,7 @@
 import java.nio.BufferUnderflowException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
+import java.nio.charset.Charset;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.UUID;
@@ -75,7 +76,8 @@ private EddystoneBeacon(byte flags, byte txPower, String url) {
    */
   public static String getFatBeaconTitle(byte[] serviceData) {
     if (serviceData.length > 2) {
-      String title = new String(Arrays.copyOfRange(serviceData, 3, serviceData.length)).trim();
+      byte[] bytes = Arrays.copyOfRange(serviceData, 3, serviceData.length);
+      String title = new String(bytes, Charset.forName("UTF-8")).trim();
       return  title.indexOf('\uFFFD') == -1 ? title : "";
     }
     return "";

File: java/libs/src/main/java/org/physical_web/collection/EddystoneBeacon.java
Patch:
@@ -19,6 +19,7 @@
 import java.nio.BufferUnderflowException;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
+import java.nio.charset.Charset;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.UUID;
@@ -75,7 +76,8 @@ private EddystoneBeacon(byte flags, byte txPower, String url) {
    */
   public static String getFatBeaconTitle(byte[] serviceData) {
     if (serviceData.length > 2) {
-      String title = new String(Arrays.copyOfRange(serviceData, 3, serviceData.length)).trim();
+      byte[] bytes = Arrays.copyOfRange(serviceData, 3, serviceData.length);
+      String title = new String(bytes, Charset.forName("UTF-8")).trim();
       return  title.indexOf('\uFFFD') == -1 ? title : "";
     }
     return "";

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollection.java
Patch:
@@ -72,8 +72,8 @@ public boolean addUrlDevice(UrlDevice urlDevice) {
     mDeviceIdToUrlDeviceMap.put(urlDevice.getId(), urlDevice);
     return alreadyFound;
   }
-  
-  /** 
+
+  /**
    * Remove a UrlDevice from the collection.
    * @param urlDevice The UrlDevice to remove.
    */

File: java/libs/src/test/java/org/physical_web/collection/EddystoneBeaconTest.java
Patch:
@@ -17,9 +17,11 @@
 
 import static org.junit.Assert.*;
 
-import org.junit.Before;
 import org.junit.Test;
 
+/**
+ * Tests for the EddystoneBeacon class.
+ */
 public class EddystoneBeaconTest {
 
   @Test

File: java/libs/src/test/java/org/physical_web/collection/PhysicalWebCollectionTest.java
Patch:
@@ -22,11 +22,11 @@
 import org.junit.Before;
 import org.junit.Test;
 
+import org.skyscreamer.jsonassert.JSONAssert;
+
 import java.util.Comparator;
 import java.util.List;
 
-import org.skyscreamer.jsonassert.JSONAssert;
-
 /**
  * PhysicalWebCollection unit test class.
  */

File: java/libs/src/test/java/org/physical_web/collection/UrlGroupTest.java
Patch:
@@ -17,11 +17,11 @@
 
 import static org.junit.Assert.*;
 
-import java.util.Comparator;
-
 import org.junit.Before;
 import org.junit.Test;
 
+import java.util.Comparator;
+
 /**
  * UrlGroup unit test class.
  */

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollection.java
Patch:
@@ -72,8 +72,8 @@ public boolean addUrlDevice(UrlDevice urlDevice) {
     mDeviceIdToUrlDeviceMap.put(urlDevice.getId(), urlDevice);
     return alreadyFound;
   }
-  
-  /** 
+
+  /**
    * Remove a UrlDevice from the collection.
    * @param urlDevice The UrlDevice to remove.
    */

File: java/libs/src/test/java/org/physical_web/collection/EddystoneBeaconTest.java
Patch:
@@ -17,9 +17,11 @@
 
 import static org.junit.Assert.*;
 
-import org.junit.Before;
 import org.junit.Test;
 
+/**
+ * Tests for the EddystoneBeacon class.
+ */
 public class EddystoneBeaconTest {
 
   @Test

File: java/libs/src/test/java/org/physical_web/collection/PhysicalWebCollectionTest.java
Patch:
@@ -22,11 +22,11 @@
 import org.junit.Before;
 import org.junit.Test;
 
+import org.skyscreamer.jsonassert.JSONAssert;
+
 import java.util.Comparator;
 import java.util.List;
 
-import org.skyscreamer.jsonassert.JSONAssert;
-
 /**
  * PhysicalWebCollection unit test class.
  */

File: java/libs/src/test/java/org/physical_web/collection/UrlGroupTest.java
Patch:
@@ -17,11 +17,11 @@
 
 import static org.junit.Assert.*;
 
-import java.util.Comparator;
-
 import org.junit.Before;
 import org.junit.Test;
 
+import java.util.Comparator;
+
 /**
  * UrlGroup unit test class.
  */

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PhysicalWebBroadcastService.java
Patch:
@@ -161,15 +161,13 @@ public void onPwsResultAbsent(String url) {
           Toast.makeText(getApplicationContext(), getString(R.string.shorten_error),
               Toast.LENGTH_LONG).show();
           stopSelf();
-          return;
         }
 
         @Override
         public void onPwsResultError(Collection<String> urls, int httpResponseCode, Exception e) {
           Toast.makeText(getApplicationContext(), getString(R.string.shorten_error),
               Toast.LENGTH_LONG).show();
           stopSelf();
-          return;
         }
 
         @Override

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/ble/BluetoothUuid.java
Patch:
@@ -279,7 +279,7 @@ public static boolean is16BitUuid(ParcelUuid parcelUuid) {
         if (uuid.getLeastSignificantBits() != BASE_UUID.getUuid().getLeastSignificantBits()) {
             return false;
         }
-        return ((uuid.getMostSignificantBits() & 0xFFFF0000FFFFFFFFL) == 0x1000L);
+        return (uuid.getMostSignificantBits() & 0xFFFF0000FFFFFFFFL) == 0x1000L;
     }
 
     /**
@@ -296,6 +296,6 @@ public static boolean is32BitUuid(ParcelUuid parcelUuid) {
         if (is16BitUuid(parcelUuid)) {
             return false;
         }
-        return ((uuid.getMostSignificantBits() & 0xFFFFFFFFL) == 0x1000L);
+        return (uuid.getMostSignificantBits() & 0xFFFFFFFFL) == 0x1000L;
     }
 }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/ble/Utils.java
Patch:
@@ -48,7 +48,7 @@ static String toString(SparseArray<byte[]> array) {
         StringBuilder buffer = new StringBuilder();
         buffer.append('{');
         for (int i = 0; i < array.size(); ++i) {
-            buffer.append(array.keyAt(i)).append("=").append(array.valueAt(i));
+            buffer.append(array.keyAt(i)).append('=').append(array.valueAt(i));
         }
         buffer.append('}');
         return buffer.toString();
@@ -70,7 +70,7 @@ static <T> String toString(Map<T, byte[]> map) {
         while (it.hasNext()) {
             Map.Entry<T, byte[]> entry = it.next();
             Object key = entry.getKey();
-            buffer.append(key).append("=").append(Arrays.toString(map.get(key)));
+            buffer.append(key).append('=').append(Arrays.toString(map.get(key)));
             if (it.hasNext()) {
                 buffer.append(", ");
             }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PhysicalWebBroadcastService.java
Patch:
@@ -161,15 +161,13 @@ public void onPwsResultAbsent(String url) {
           Toast.makeText(getApplicationContext(), getString(R.string.shorten_error),
               Toast.LENGTH_LONG).show();
           stopSelf();
-          return;
         }
 
         @Override
         public void onPwsResultError(Collection<String> urls, int httpResponseCode, Exception e) {
           Toast.makeText(getApplicationContext(), getString(R.string.shorten_error),
               Toast.LENGTH_LONG).show();
           stopSelf();
-          return;
         }
 
         @Override

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/ble/BluetoothUuid.java
Patch:
@@ -279,7 +279,7 @@ public static boolean is16BitUuid(ParcelUuid parcelUuid) {
         if (uuid.getLeastSignificantBits() != BASE_UUID.getUuid().getLeastSignificantBits()) {
             return false;
         }
-        return ((uuid.getMostSignificantBits() & 0xFFFF0000FFFFFFFFL) == 0x1000L);
+        return (uuid.getMostSignificantBits() & 0xFFFF0000FFFFFFFFL) == 0x1000L;
     }
 
     /**
@@ -296,6 +296,6 @@ public static boolean is32BitUuid(ParcelUuid parcelUuid) {
         if (is16BitUuid(parcelUuid)) {
             return false;
         }
-        return ((uuid.getMostSignificantBits() & 0xFFFFFFFFL) == 0x1000L);
+        return (uuid.getMostSignificantBits() & 0xFFFFFFFFL) == 0x1000L;
     }
 }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/ble/Utils.java
Patch:
@@ -48,7 +48,7 @@ static String toString(SparseArray<byte[]> array) {
         StringBuilder buffer = new StringBuilder();
         buffer.append('{');
         for (int i = 0; i < array.size(); ++i) {
-            buffer.append(array.keyAt(i)).append("=").append(array.valueAt(i));
+            buffer.append(array.keyAt(i)).append('=').append(array.valueAt(i));
         }
         buffer.append('}');
         return buffer.toString();
@@ -70,7 +70,7 @@ static <T> String toString(Map<T, byte[]> map) {
         while (it.hasNext()) {
             Map.Entry<T, byte[]> entry = it.next();
             Object key = entry.getKey();
-            buffer.append(key).append("=").append(Arrays.toString(map.get(key)));
+            buffer.append(key).append('=').append(Arrays.toString(map.get(key)));
             if (it.hasNext()) {
                 buffer.append(", ");
             }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BluetoothSite.java
Patch:
@@ -48,6 +48,8 @@ public class BluetoothSite extends BluetoothGattCallback {
   private static final UUID SERVICE_UUID = UUID.fromString("ae5946d4-e587-4ba8-b6a5-a97cca6affd3");
   private static final UUID CHARACTERISTIC_WEBPAGE_UUID = UUID.fromString(
       "d1a517f0-2499-46ca-9ccc-809bc1c966fa");
+  // This is BluetoothGatt.CONNECTION_PRIORITY_HIGH, from API level 21
+  private static final int CONNECTION_PRIORITY_HIGH = 1;
   private Activity activity;
   private BluetoothGatt mBluetoothGatt;
   private BluetoothGattCharacteristic characteristic;
@@ -145,7 +147,7 @@ public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState
       mBluetoothGatt = gatt;
       html = new StringBuilder("");
       if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {
-        gatt.requestConnectionPriority(BluetoothGatt.CONNECTION_PRIORITY_HIGH);
+        gatt.requestConnectionPriority(CONNECTION_PRIORITY_HIGH);
         gatt.requestMtu(505);
       } else {
         gatt.discoverServices();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BluetoothSite.java
Patch:
@@ -48,6 +48,8 @@ public class BluetoothSite extends BluetoothGattCallback {
   private static final UUID SERVICE_UUID = UUID.fromString("ae5946d4-e587-4ba8-b6a5-a97cca6affd3");
   private static final UUID CHARACTERISTIC_WEBPAGE_UUID = UUID.fromString(
       "d1a517f0-2499-46ca-9ccc-809bc1c966fa");
+  // This is BluetoothGatt.CONNECTION_PRIORITY_HIGH, from API level 21
+  private static final int CONNECTION_PRIORITY_HIGH = 1;
   private Activity activity;
   private BluetoothGatt mBluetoothGatt;
   private BluetoothGattCharacteristic characteristic;
@@ -145,7 +147,7 @@ public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState
       mBluetoothGatt = gatt;
       html = new StringBuilder("");
       if (VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP) {
-        gatt.requestConnectionPriority(BluetoothGatt.CONNECTION_PRIORITY_HIGH);
+        gatt.requestConnectionPriority(CONNECTION_PRIORITY_HIGH);
         gatt.requestMtu(505);
       } else {
         gatt.discoverServices();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PhysicalWebBroadcastService.java
Patch:
@@ -252,7 +252,6 @@ public void onStartFailure(int result) {
 
     // Broadcast via bluetooth the stored URL
     private void broadcastUrl() {
-        Log.d(TAG, "broadcastUrl: " + mShareUrl);
         final AdvertiseData advertisementData = AdvertiseDataUtils.getAdvertisementData(mShareUrl);
         final AdvertiseSettings advertiseSettings = AdvertiseDataUtils.getAdvertiseSettings(false);
         mBluetoothLeAdvertiser.stopAdvertising(mAdvertiseCallback);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PhysicalWebBroadcastService.java
Patch:
@@ -252,7 +252,6 @@ public void onStartFailure(int result) {
 
     // Broadcast via bluetooth the stored URL
     private void broadcastUrl() {
-        Log.d(TAG, "broadcastUrl: " + mShareUrl);
         final AdvertiseData advertisementData = AdvertiseDataUtils.getAdvertisementData(mShareUrl);
         final AdvertiseSettings advertiseSettings = AdvertiseDataUtils.getAdvertiseSettings(false);
         mBluetoothLeAdvertiser.stopAdvertising(mAdvertiseCallback);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/demos/FatBeaconHelloWorld.java
Patch:
@@ -21,7 +21,6 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.net.Uri;
 
 /**
  * Hello world demo for FatBeacon.
@@ -60,7 +59,7 @@ public void startDemo() {
     mContext.startService(intent);
     mIsDemoStarted = true;
   }
-  
+
   @Override
   public void stopDemo() {
     mContext.stopService(new Intent(mContext, FatBeaconBroadcastService.class));

File: android/PhysicalWeb/app/src/main/java/org/physical_web/demos/WifiDirectHelloWorld.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.net.Uri;
 
 /**
  * Hello world demo for WifiDirect.

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BluetoothSite.java
Patch:
@@ -153,7 +153,7 @@ public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState
       Log.i(TAG, "Disconnected to GATT server");
       // ensure progress dialog is removed and running is set false
       close();
-    } else if (status != gatt.GATT_SUCCESS){
+    } else if (status != gatt.GATT_SUCCESS) {
       Log.i(TAG, "Status is " + status);
       close();
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/Log.java
Patch:
@@ -16,6 +16,9 @@
 
 package org.physical_web.physicalweb;
 
+/**
+ * Convenience Log class.
+ */
 public class Log {
   private static final String TAG = "PW-";
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/SettingsFragment.java
Patch:
@@ -158,7 +158,7 @@ private void updateSettingSummary(String key) {
   }
 
   private void updateAllSettingSummaries() {
-    for(String key : PreferenceManager.getDefaultSharedPreferences(getActivity())
+    for (String key : PreferenceManager.getDefaultSharedPreferences(getActivity())
         .getAll().keySet()) {
       updateSettingSummary(key);
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/demos/FatBeaconHelloWorld.java
Patch:
@@ -21,7 +21,6 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.net.Uri;
 
 /**
  * Hello world demo for FatBeacon.
@@ -60,7 +59,7 @@ public void startDemo() {
     mContext.startService(intent);
     mIsDemoStarted = true;
   }
-  
+
   @Override
   public void stopDemo() {
     mContext.stopService(new Intent(mContext, FatBeaconBroadcastService.class));

File: android/PhysicalWeb/app/src/main/java/org/physical_web/demos/WifiDirectHelloWorld.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.net.Uri;
 
 /**
  * Hello world demo for WifiDirect.

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BluetoothSite.java
Patch:
@@ -153,7 +153,7 @@ public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState
       Log.i(TAG, "Disconnected to GATT server");
       // ensure progress dialog is removed and running is set false
       close();
-    } else if (status != gatt.GATT_SUCCESS){
+    } else if (status != gatt.GATT_SUCCESS) {
       Log.i(TAG, "Status is " + status);
       close();
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/Log.java
Patch:
@@ -16,6 +16,9 @@
 
 package org.physical_web.physicalweb;
 
+/**
+ * Convenience Log class.
+ */
 public class Log {
   private static final String TAG = "PW-";
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/SettingsFragment.java
Patch:
@@ -158,7 +158,7 @@ private void updateSettingSummary(String key) {
   }
 
   private void updateAllSettingSummaries() {
-    for(String key : PreferenceManager.getDefaultSharedPreferences(getActivity())
+    for (String key : PreferenceManager.getDefaultSharedPreferences(getActivity())
         .getAll().keySet()) {
       updateSettingSummary(key);
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlDeviceDiscoveryService.java
Patch:
@@ -152,7 +152,6 @@ private void initialize() {
     }
     mUrlDeviceDiscoverers.add(new SsdpUrlDeviceDiscoverer(this));
     mUrlDeviceDiscoverers.add(new BleUrlDeviceDiscoverer(this));
-    mUrlDeviceDiscoverers.add(new WifiUrlDeviceDiscoverer(this));
     for (UrlDeviceDiscoverer urlDeviceDiscoverer : mUrlDeviceDiscoverers) {
       urlDeviceDiscoverer.setCallback(this);
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlDeviceDiscoveryService.java
Patch:
@@ -152,7 +152,6 @@ private void initialize() {
     }
     mUrlDeviceDiscoverers.add(new SsdpUrlDeviceDiscoverer(this));
     mUrlDeviceDiscoverers.add(new BleUrlDeviceDiscoverer(this));
-    mUrlDeviceDiscoverers.add(new WifiUrlDeviceDiscoverer(this));
     for (UrlDeviceDiscoverer urlDeviceDiscoverer : mUrlDeviceDiscoverers) {
       urlDeviceDiscoverer.setCallback(this);
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/FatBeaconBroadcastService.java
Patch:
@@ -170,10 +170,8 @@ public void onCreate() {
 
   @Override
   public int onStartCommand(Intent intent, int flags, int startId) {
-    System.out.println("BUG: FatBeaconBroadcast onStart");
     fetchBroadcastData(intent);
     if (mDisplayInfo == null || data == null) {
-      System.out.println("BUG: mDisplayInfo or data is null");
       stopSelf();
       return START_STICKY;
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/FatBeaconBroadcastService.java
Patch:
@@ -170,10 +170,8 @@ public void onCreate() {
 
   @Override
   public int onStartCommand(Intent intent, int flags, int startId) {
-    System.out.println("BUG: FatBeaconBroadcast onStart");
     fetchBroadcastData(intent);
     if (mDisplayInfo == null || data == null) {
-      System.out.println("BUG: mDisplayInfo or data is null");
       stopSelf();
       return START_STICKY;
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BroadcastActivity.java
Patch:
@@ -92,7 +92,8 @@ protected void onStart() {
             } else {
                 checkBleAndStart();
             }
-        } else if (type.startsWith("image/") || type.startsWith("text/html")|| type.startsWith("video")|| type.startsWith("audio")) {
+        } else if (type.startsWith("image/") || type.startsWith("text/html") ||
+            type.startsWith("video") || type.startsWith("audio")) {
             Log.d(TAG, type);
             Uri fileUri = intent.getParcelableExtra(Intent.EXTRA_STREAM);
             Log.d(TAG, fileUri.toString());

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlDeviceDiscoveryService.java
Patch:
@@ -200,8 +200,8 @@ private void restoreCache() {
         Utils.updateRegion(urlDevice);
       }
     }
-    // Unresolvable devices are typically not 
-    // relevant outside of scan range. Hence, 
+    // Unresolvable devices are typically not
+    // relevant outside of scan range. Hence,
     // we specially clean them from the cache.
     if (scanDelta >= LOCAL_SCAN_STALE_TIME_MILLIS) {
       for (UrlDevice urlDevice : mPwCollection.getUrlDevices()) {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/WifiDirectConnect.java
Patch:
@@ -25,12 +25,12 @@
 import android.net.NetworkInfo;
 import android.net.Uri;
 import android.net.wifi.p2p.WifiP2pConfig;
+import android.net.wifi.p2p.WifiP2pGroup;
 import android.net.wifi.p2p.WifiP2pInfo;
 import android.net.wifi.p2p.WifiP2pManager;
 import android.net.wifi.p2p.WifiP2pManager.ActionListener;
 import android.net.wifi.p2p.WifiP2pManager.Channel;
 import android.util.Log;
-import android.net.wifi.p2p.WifiP2pGroup;
 
 /**
  * This class is for using WifiDirect to create a WifiDirect

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BroadcastActivity.java
Patch:
@@ -92,7 +92,8 @@ protected void onStart() {
             } else {
                 checkBleAndStart();
             }
-        } else if (type.startsWith("image/") || type.startsWith("text/html")|| type.startsWith("video")|| type.startsWith("audio")) {
+        } else if (type.startsWith("image/") || type.startsWith("text/html") ||
+            type.startsWith("video") || type.startsWith("audio")) {
             Log.d(TAG, type);
             Uri fileUri = intent.getParcelableExtra(Intent.EXTRA_STREAM);
             Log.d(TAG, fileUri.toString());

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlDeviceDiscoveryService.java
Patch:
@@ -200,8 +200,8 @@ private void restoreCache() {
         Utils.updateRegion(urlDevice);
       }
     }
-    // Unresolvable devices are typically not 
-    // relevant outside of scan range. Hence, 
+    // Unresolvable devices are typically not
+    // relevant outside of scan range. Hence,
     // we specially clean them from the cache.
     if (scanDelta >= LOCAL_SCAN_STALE_TIME_MILLIS) {
       for (UrlDevice urlDevice : mPwCollection.getUrlDevices()) {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/WifiDirectConnect.java
Patch:
@@ -25,12 +25,12 @@
 import android.net.NetworkInfo;
 import android.net.Uri;
 import android.net.wifi.p2p.WifiP2pConfig;
+import android.net.wifi.p2p.WifiP2pGroup;
 import android.net.wifi.p2p.WifiP2pInfo;
 import android.net.wifi.p2p.WifiP2pManager;
 import android.net.wifi.p2p.WifiP2pManager.ActionListener;
 import android.net.wifi.p2p.WifiP2pManager.Channel;
 import android.util.Log;
-import android.net.wifi.p2p.WifiP2pGroup;
 
 /**
  * This class is for using WifiDirect to create a WifiDirect

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -217,8 +217,7 @@ public boolean canDismiss(int position) {
 
                   @Override
                   public void onDismiss(ListView listView, int position) {
-                    Utils.addBlocked(mNearbyDeviceAdapter
-                        .getItem(position).getPwsResult().getSiteUrl());
+                    Utils.addBlocked(mNearbyDeviceAdapter.getItem(position));
                     Utils.saveBlocked(getActivity());
                     if (mMissedEmptyGroupIdQueue) {
                       mMissedEmptyGroupIdQueue = false;
@@ -312,7 +311,7 @@ public void run() {
           if (mNearbyDeviceAdapter.containsGroupId(groupId)) {
             mNearbyDeviceAdapter.updateItem(pwPair);
           } else if (!mGroupIdQueue.contains(groupId)
-              && !Utils.isBlocked(pwPair.getPwsResult().getSiteUrl())) {
+              && !Utils.isBlocked(pwPair)) {
             mGroupIdQueue.add(groupId);
             if (mSecondScanComplete) {
               // If we've already waited for the second scan timeout,

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlDeviceDiscoveryService.java
Patch:
@@ -349,7 +349,7 @@ private void updateNotifications() {
         new Utils.PwPairRelevanceComparator());
     List<PwPair> notBlockedPwPairs = new ArrayList<>();
     for (PwPair i : pwPairs) {
-      if (!Utils.isBlocked(i.getPwsResult().getSiteUrl())) {
+      if (!Utils.isBlocked(i)) {
         notBlockedPwPairs.add(i);
       }
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlDeviceDiscoveryService.java
Patch:
@@ -178,7 +178,7 @@ private void restoreCache() {
 
     // Don't load the cache if it's stale
     mScanStartTime = prefs.getLong(SCAN_START_TIME_KEY, 0);
-    scanDelta = now - mScanStartTime;
+    long scanDelta = now - mScanStartTime;
     if (scanDelta >= SCAN_STALE_TIME_MILLIS) {
       mScanStartTime = now;
       return;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/WifiUrlDeviceDiscoverer.java
Patch:
@@ -63,6 +63,7 @@ public void onPeersAvailable(WifiP2pDeviceList list) {
             .setWifiPort(port)
             .setTitle(name)
             .setDescription("")
+            .setDeviceType(Utils.WIFI_DIRECT_DEVICE_TYPE)
             .build());
         }
       }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlDeviceDiscoveryService.java
Patch:
@@ -178,7 +178,7 @@ private void restoreCache() {
 
     // Don't load the cache if it's stale
     mScanStartTime = prefs.getLong(SCAN_START_TIME_KEY, 0);
-    scanDelta = now - mScanStartTime;
+    long scanDelta = now - mScanStartTime;
     if (scanDelta >= SCAN_STALE_TIME_MILLIS) {
       mScanStartTime = now;
       return;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/WifiUrlDeviceDiscoverer.java
Patch:
@@ -63,6 +63,7 @@ public void onPeersAvailable(WifiP2pDeviceList list) {
             .setWifiPort(port)
             .setTitle(name)
             .setDescription("")
+            .setDeviceType(Utils.WIFI_DIRECT_DEVICE_TYPE)
             .build());
         }
       }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BleUrlDeviceDiscoverer.java
Patch:
@@ -82,6 +82,7 @@ public void onLeScan(final BluetoothDevice device, final int rssi, final byte[]
     UrlDevice urlDevice = createUrlDeviceBuilder(TAG + device.getAddress(), url)
         .setRssi(rssi)
         .setTxPower(uriBeacon.getTxPowerLevel())
+        .setDeviceType(Utils.BLE_DEVICE_TYPE)
         .build();
     Utils.updateRegion(urlDevice);
     reportUrlDevice(urlDevice);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/MdnsUrlDeviceDiscoverer.java
Patch:
@@ -61,10 +61,12 @@ public void onServicesChanged(Map<String, MDNSDiscover.Result> services) {
               .setPrivate()
               .setTitle(title)
               .setDescription(description)
+              .setDeviceType(Utils.MDNS_LOCAL_DEVICE_TYPE)
               .build());
           } else if (URLUtil.isNetworkUrl(url)) {
             reportUrlDevice(createUrlDeviceBuilder(id, url)
               .setPrivate()
+              .setDeviceType(Utils.MDNS_PUBLIC_DEVICE_TYPE)
               .build());
           }
         }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/SsdpUrlDeviceDiscoverer.java
Patch:
@@ -85,7 +85,9 @@ public void onSsdpMessageReceived(SsdpMessage ssdpMessage) {
       new Thread(new Runnable() {
         @Override
         public void run() {
-          reportUrlDevice(createUrlDeviceBuilder(TAG + url, url).build());
+          reportUrlDevice(createUrlDeviceBuilder(TAG + url, url)
+              .setDeviceType(Utils.SSDP_DEVICE_TYPE)
+              .build());
         }
       }).start();
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BleUrlDeviceDiscoverer.java
Patch:
@@ -82,6 +82,7 @@ public void onLeScan(final BluetoothDevice device, final int rssi, final byte[]
     UrlDevice urlDevice = createUrlDeviceBuilder(TAG + device.getAddress(), url)
         .setRssi(rssi)
         .setTxPower(uriBeacon.getTxPowerLevel())
+        .setDeviceType(Utils.BLE_DEVICE_TYPE)
         .build();
     Utils.updateRegion(urlDevice);
     reportUrlDevice(urlDevice);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/MdnsUrlDeviceDiscoverer.java
Patch:
@@ -61,10 +61,12 @@ public void onServicesChanged(Map<String, MDNSDiscover.Result> services) {
               .setPrivate()
               .setTitle(title)
               .setDescription(description)
+              .setDeviceType(Utils.MDNS_LOCAL_DEVICE_TYPE)
               .build());
           } else if (URLUtil.isNetworkUrl(url)) {
             reportUrlDevice(createUrlDeviceBuilder(id, url)
               .setPrivate()
+              .setDeviceType(Utils.MDNS_PUBLIC_DEVICE_TYPE)
               .build());
           }
         }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/SsdpUrlDeviceDiscoverer.java
Patch:
@@ -85,7 +85,9 @@ public void onSsdpMessageReceived(SsdpMessage ssdpMessage) {
       new Thread(new Runnable() {
         @Override
         public void run() {
-          reportUrlDevice(createUrlDeviceBuilder(TAG + url, url).build());
+          reportUrlDevice(createUrlDeviceBuilder(TAG + url, url)
+              .setDeviceType(Utils.SSDP_DEVICE_TYPE)
+              .build());
         }
       }).start();
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/Utils.java
Patch:
@@ -392,7 +392,7 @@ public void onServiceConnected(ComponentName className, IBinder service) {
         // Get the service
         UrlDeviceDiscoveryService.LocalBinder localBinder =
             (UrlDeviceDiscoveryService.LocalBinder) service;
-        localBinder.getServiceInstance().clearCache();
+        localBinder.getServiceInstance().restartScan();
         mContext.unbindService(this);
       }
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/Utils.java
Patch:
@@ -392,7 +392,7 @@ public void onServiceConnected(ComponentName className, IBinder service) {
         // Get the service
         UrlDeviceDiscoveryService.LocalBinder localBinder =
             (UrlDeviceDiscoveryService.LocalBinder) service;
-        localBinder.getServiceInstance().clearCache();
+        localBinder.getServiceInstance().restartScan();
         mContext.unbindService(this);
       }
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/MdnsUrlDeviceDiscoverer.java
Patch:
@@ -39,7 +39,7 @@ private enum State {
 
   public MdnsUrlDeviceDiscoverer(Context context) {
     mState = State.STOPPED;
-    resolver = new DiscoverResolver(context, MDNS_SERVICE_TYPE,
+    mResolver = new DiscoverResolver(context, MDNS_SERVICE_TYPE,
         new DiscoverResolver.Listener() {
       @Override
       public void onServicesChanged(Map<String, MDNSDiscover.Result> services) {
@@ -78,7 +78,7 @@ public synchronized void startScanImpl() {
       return;
     }
     mState = State.WAITING;
-    resolver.start();
+    mResolver.start();
   }
 
   @Override
@@ -87,6 +87,6 @@ public synchronized void stopScanImpl() {
       return;
     }
     mState = State.WAITING;
-    resolver.stop();
+    mResolver.stop();
   }
 }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/MdnsUrlDeviceDiscoverer.java
Patch:
@@ -39,7 +39,7 @@ private enum State {
 
   public MdnsUrlDeviceDiscoverer(Context context) {
     mState = State.STOPPED;
-    resolver = new DiscoverResolver(context, MDNS_SERVICE_TYPE,
+    mResolver = new DiscoverResolver(context, MDNS_SERVICE_TYPE,
         new DiscoverResolver.Listener() {
       @Override
       public void onServicesChanged(Map<String, MDNSDiscover.Result> services) {
@@ -78,7 +78,7 @@ public synchronized void startScanImpl() {
       return;
     }
     mState = State.WAITING;
-    resolver.start();
+    mResolver.start();
   }
 
   @Override
@@ -87,6 +87,6 @@ public synchronized void stopScanImpl() {
       return;
     }
     mState = State.WAITING;
-    resolver.stop();
+    mResolver.stop();
   }
 }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -265,7 +265,8 @@ public void onUrlDeviceDiscoveryUpdate() {
     new Handler(Looper.getMainLooper()).post(new Runnable() {
       @Override
       public void run() {
-        for (PwPair pwPair : mPwCollection.getGroupedPwPairsSortedByRank()) {
+        for (PwPair pwPair : mPwCollection.getGroupedPwPairsSortedByRank(
+            Utils.newDistanceComparator())) {
           String groupId = Utils.getGroupId(pwPair.getPwsResult());
           Log.d(TAG, "groupid to add " + groupId);
           if (mNearbyDeviceAdapter.containsGroupId(groupId)) {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -265,7 +265,8 @@ public void onUrlDeviceDiscoveryUpdate() {
     new Handler(Looper.getMainLooper()).post(new Runnable() {
       @Override
       public void run() {
-        for (PwPair pwPair : mPwCollection.getGroupedPwPairsSortedByRank()) {
+        for (PwPair pwPair : mPwCollection.getGroupedPwPairsSortedByRank(
+            Utils.newDistanceComparator())) {
           String groupId = Utils.getGroupId(pwPair.getPwsResult());
           Log.d(TAG, "groupid to add " + groupId);
           if (mNearbyDeviceAdapter.containsGroupId(groupId)) {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigFragment.java
Patch:
@@ -62,6 +62,7 @@
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.TimeUnit;
 
 /**
@@ -470,7 +471,7 @@ public void onPwsResult(PwsResult pwsResult) {
 
         @Override
         public void onPwsResultError(Collection<String> urls, int httpResponseCode, Exception e) {
-          if (urls.iterator().next().toLowerCase().startsWith("https")){
+          if (urls.iterator().next().toLowerCase(Locale.US).startsWith("https")) {
             showToastOnUiThread(R.string.pws_filtered_url_unknown);
           } else {
             showToastOnUiThread(R.string.pws_filtered_url_http);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -333,11 +333,12 @@ public void onRefresh() {
 
   private void emptyGroupIdQueue() {
     List<PwPair> pwPairs = new ArrayList<>();
+
     for (String groupId : mGroupIdQueue) {
       Log.d(TAG, "groupid " + groupId);
       pwPairs.add(Utils.getTopRankedPwPairByGroupId(mPwCollection, groupId));
     }
-    Collections.sort(pwPairs, Collections.reverseOrder());
+    Collections.sort(pwPairs, Utils.newDistanceComparator());
     for (PwPair pwPair : pwPairs) {
       mNearbyDeviceAdapter.addItem(pwPair);
     }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/SettingsFragment.java
Patch:
@@ -95,6 +95,8 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin
         key.equals(getString(R.string.custom_pws_api_key_key))) {
       updatePwsPreference();
       updatePwsList();
+    } else if (key.equals(getString(R.string.pws_endpoint_setting_key))) {
+      Utils.deleteCache(getActivity());
     }
   }
 

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollection.java
Patch:
@@ -35,7 +35,6 @@ public class PhysicalWebCollection {
   private static final String SCHEMA_VERSION_KEY = "schema";
   private static final String DEVICES_KEY = "devices";
   private static final String METADATA_KEY = "metadata";
-  private static final String DEFAULT_PWS_ENDPOINT = "https://url-caster.appspot.com";
   private PwsClient mPwsClient;
   private Map<String, UrlDevice> mDeviceIdToUrlDeviceMap;
   private Map<String, PwsResult> mBroadcastUrlToPwsResultMap;
@@ -47,7 +46,7 @@ public class PhysicalWebCollection {
    * Construct a PhysicalWebCollection.
    */
   public PhysicalWebCollection() {
-    mPwsClient = new PwsClient(DEFAULT_PWS_ENDPOINT);
+    mPwsClient = new PwsClient();
     mDeviceIdToUrlDeviceMap = new HashMap<>();
     mBroadcastUrlToPwsResultMap = new HashMap<>();
     mIconUrlToIconMap = new HashMap<>();

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollection.java
Patch:
@@ -35,7 +35,6 @@ public class PhysicalWebCollection {
   private static final String SCHEMA_VERSION_KEY = "schema";
   private static final String DEVICES_KEY = "devices";
   private static final String METADATA_KEY = "metadata";
-  private static final String DEFAULT_PWS_ENDPOINT = "https://url-caster.appspot.com";
   private PwsClient mPwsClient;
   private Map<String, UrlDevice> mDeviceIdToUrlDeviceMap;
   private Map<String, PwsResult> mBroadcastUrlToPwsResultMap;
@@ -47,7 +46,7 @@ public class PhysicalWebCollection {
    * Construct a PhysicalWebCollection.
    */
   public PhysicalWebCollection() {
-    mPwsClient = new PwsClient(DEFAULT_PWS_ENDPOINT);
+    mPwsClient = new PwsClient();
     mDeviceIdToUrlDeviceMap = new HashMap<>();
     mBroadcastUrlToPwsResultMap = new HashMap<>();
     mIconUrlToIconMap = new HashMap<>();

File: java/libs/src/main/java/org/physical_web/collection/UrlDevice.java
Patch:
@@ -18,7 +18,7 @@
 /**
  * The interface defining a Physical Web URL device.
  */
-public interface UrlDevice {
+public interface UrlDevice extends Comparable<UrlDevice> {
   /**
    * Fetches the ID of the UrlDevice.
    * The ID should be unique across UrlDevices.  This should even be the case when

File: java/libs/src/main/java/org/physical_web/collection/UrlDevice.java
Patch:
@@ -18,7 +18,7 @@
 /**
  * The interface defining a Physical Web URL device.
  */
-public interface UrlDevice {
+public interface UrlDevice extends Comparable<UrlDevice> {
   /**
    * Fetches the ID of the UrlDevice.
    * The ID should be unique across UrlDevices.  This should even be the case when

File: java/libs/src/main/java/org/physical_web/collection/PwsClient.java
Patch:
@@ -90,7 +90,7 @@ public void onResponse(JSONObject result) {
           } catch (JSONException e) {
             continue;
           }
-          PwsResult pwsResult = new PwsResult(requestUrl, responseUrl);
+          PwsResult pwsResult = new PwsResult(requestUrl, responseUrl, null);
           pwsResultCallback.onPwsResult(pwsResult);
           foundUrls.add(pwsResult.getRequestUrl());
         }

File: java/libs/src/test/java/org/physical_web/collection/PwPairTest.java
Patch:
@@ -33,7 +33,7 @@ public class PwPairTest {
   @Before
   public void setUp() {
     urlDevice1 = new SimpleUrlDevice(ID1, URL1);
-    pwsResult1 = new PwsResult(URL1, URL1);
+    pwsResult1 = new PwsResult(URL1, URL1, null);
     pwPair1 = new PwPair(urlDevice1, pwsResult1);
   }
 

File: java/libs/src/test/java/org/physical_web/collection/PwsResultTest.java
Patch:
@@ -29,7 +29,7 @@ public class PwsResultTest {
 
   @Before
   public void setUp() {
-    pwsResult1 = new PwsResult(URL1, URL1);
+    pwsResult1 = new PwsResult(URL1, URL1, null);
   }
 
   @Test

File: java/libs/src/test/java/org/physical_web/collection/SimpleUrlDeviceTest.java
Patch:
@@ -45,7 +45,7 @@ public void getUrlReturnsUrl() {
 
   @Test
   public void getRankReturnsPointFive() {
-    PwsResult pwsResult = new PwsResult(URL1, URL1);
+    PwsResult pwsResult = new PwsResult(URL1, URL1, null);
     assertEquals(.5, urlDevice1.getRank(pwsResult), .0001);
   }
 }

File: java/libs/src/integrationTest/java/org/physical_web/collection/IntegrationTest.java
Patch:
@@ -103,7 +103,7 @@ public void setUp() {
 
   @Test
   public void resolveSomeUrls() throws InterruptedException {
-    physicalWebCollection.addUrlDevice(new RankedDevice("id1", "https://google.com", .5));	
+    physicalWebCollection.addUrlDevice(new RankedDevice("id1", "https://google.com", .5));
     physicalWebCollection.addUrlDevice(new RankedDevice("id2", "https://goo.gl/mo6YnG", .2));
     FetchPwsResultsTask task = new FetchPwsResultsTask(2);
     assertTrue(task.run());

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollection.java
Patch:
@@ -96,6 +96,7 @@ public PwsResult getMetadataByBroadcastUrl(String broadcastUrl) {
    * @param urlDeviceType the class UrlDevices to serialize and deserialize with this
    *        serializer.
    * @param urlDeviceJsonSerializer the serializer to use in serializing UrlDevices.
+   * @param <T> the subclass of UrlDevice that the serializer will deserialize to.
    */
   public <T extends UrlDevice> void addUrlDeviceJsonSerializer(
       Class<? extends T> urlDeviceType,
@@ -135,6 +136,7 @@ private JSONObject jsonSerializePwsResult(PwsResult pwsResult) {
   /**
    * Create a JSON object that represents this data structure.
    * @return a JSON serialization of this data structure.
+   * @throws PhysicalWebCollectionException on invalid or unrecognized input
    */
   public JSONObject jsonSerialize() throws PhysicalWebCollectionException {
     JSONObject jsonObject = new JSONObject();
@@ -196,6 +198,7 @@ private PwsResult jsonDeserializePwsResult(JSONObject jsonObject) {
   /**
    * Populate this data structure with UrlDevices represented by a given JSON object.
    * @param jsonObject a serialized PhysicalWebCollection.
+   * @throws PhysicalWebCollectionException on invalid or unrecognized input
    */
   public void jsonDeserialize(JSONObject jsonObject) throws PhysicalWebCollectionException {
     // Check the schema version

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollectionException.java
Patch:
@@ -21,6 +21,7 @@
 public class PhysicalWebCollectionException extends Exception {
   /**
    * Construct a PhysicalWebCollectionException.
+   * @param message The detail message string.
    */
   public PhysicalWebCollectionException(String message) {
     super(message);

File: java/libs/src/main/java/org/physical_web/collection/PwPair.java
Patch:
@@ -24,6 +24,8 @@ public class PwPair implements Comparable<PwPair> {
 
   /**
    * Construct a PwPair.
+   * @param urlDevice The URL device.
+   * @param pwsResult The metadata returned by PWS for the URL broadcast by the device.
    */
   public PwPair(UrlDevice urlDevice, PwsResult pwsResult) {
     mUrlDevice = urlDevice;

File: java/libs/src/main/java/org/physical_web/collection/http/JsonObjectRequest.java
Patch:
@@ -38,6 +38,7 @@ public class JsonObjectRequest extends Request<JSONObject> {
    * @param url The url to make this HTTP request to.
    * @param jsonObject The JSON payload.
    * @param callback The callback run when the HTTP response is received.
+   * @throws MalformedURLException on invalid url
    */
   public JsonObjectRequest(String url, JSONObject jsonObject, RequestCallback callback)
       throws MalformedURLException {

File: java/libs/src/main/java/org/physical_web/collection/http/Request.java
Patch:
@@ -35,6 +35,7 @@ public abstract class Request<T> extends Thread {
    * Construct a Request object.
    * @param url The url to make an HTTP request to.
    * @param callback The callback run when the HTTP response is received.
+   * @throws MalformedURLException on invalid url
    */
   public Request(String url, RequestCallback<T> callback) throws MalformedURLException {
     mUrl = new URL(url);
@@ -99,13 +100,15 @@ public void run() {
   /**
    * Helper method to make an HTTP request.
    * @param urlConnection The HTTP connection.
+   * @throws IOException on error
    */
   protected abstract void writeToUrlConnection(HttpURLConnection urlConnection) throws IOException;
 
   /**
    * Helper method to read an HTTP response.
    * @param is The InputStream.
    * @return An object representing the HTTP response.
+   * @throws IOException on error
    */
   protected abstract T readInputStream(InputStream is) throws IOException;
 }

File: java/libs/src/integrationTest/java/org/physical_web/collection/IntegrationTest.java
Patch:
@@ -103,7 +103,7 @@ public void setUp() {
 
   @Test
   public void resolveSomeUrls() throws InterruptedException {
-    physicalWebCollection.addUrlDevice(new RankedDevice("id1", "https://google.com", .5));	
+    physicalWebCollection.addUrlDevice(new RankedDevice("id1", "https://google.com", .5));
     physicalWebCollection.addUrlDevice(new RankedDevice("id2", "https://goo.gl/mo6YnG", .2));
     FetchPwsResultsTask task = new FetchPwsResultsTask(2);
     assertTrue(task.run());

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollection.java
Patch:
@@ -96,6 +96,7 @@ public PwsResult getMetadataByBroadcastUrl(String broadcastUrl) {
    * @param urlDeviceType the class UrlDevices to serialize and deserialize with this
    *        serializer.
    * @param urlDeviceJsonSerializer the serializer to use in serializing UrlDevices.
+   * @param <T> the subclass of UrlDevice that the serializer will deserialize to.
    */
   public <T extends UrlDevice> void addUrlDeviceJsonSerializer(
       Class<? extends T> urlDeviceType,
@@ -135,6 +136,7 @@ private JSONObject jsonSerializePwsResult(PwsResult pwsResult) {
   /**
    * Create a JSON object that represents this data structure.
    * @return a JSON serialization of this data structure.
+   * @throws PhysicalWebCollectionException on invalid or unrecognized input
    */
   public JSONObject jsonSerialize() throws PhysicalWebCollectionException {
     JSONObject jsonObject = new JSONObject();
@@ -196,6 +198,7 @@ private PwsResult jsonDeserializePwsResult(JSONObject jsonObject) {
   /**
    * Populate this data structure with UrlDevices represented by a given JSON object.
    * @param jsonObject a serialized PhysicalWebCollection.
+   * @throws PhysicalWebCollectionException on invalid or unrecognized input
    */
   public void jsonDeserialize(JSONObject jsonObject) throws PhysicalWebCollectionException {
     // Check the schema version

File: java/libs/src/main/java/org/physical_web/collection/PhysicalWebCollectionException.java
Patch:
@@ -21,6 +21,7 @@
 public class PhysicalWebCollectionException extends Exception {
   /**
    * Construct a PhysicalWebCollectionException.
+   * @param message The detail message string.
    */
   public PhysicalWebCollectionException(String message) {
     super(message);

File: java/libs/src/main/java/org/physical_web/collection/PwPair.java
Patch:
@@ -24,6 +24,8 @@ public class PwPair implements Comparable<PwPair> {
 
   /**
    * Construct a PwPair.
+   * @param urlDevice The URL device.
+   * @param pwsResult The metadata returned by PWS for the URL broadcast by the device.
    */
   public PwPair(UrlDevice urlDevice, PwsResult pwsResult) {
     mUrlDevice = urlDevice;

File: java/libs/src/main/java/org/physical_web/collection/http/JsonObjectRequest.java
Patch:
@@ -38,6 +38,7 @@ public class JsonObjectRequest extends Request<JSONObject> {
    * @param url The url to make this HTTP request to.
    * @param jsonObject The JSON payload.
    * @param callback The callback run when the HTTP response is received.
+   * @throws MalformedURLException on invalid url
    */
   public JsonObjectRequest(String url, JSONObject jsonObject, RequestCallback callback)
       throws MalformedURLException {

File: java/libs/src/main/java/org/physical_web/collection/http/Request.java
Patch:
@@ -35,6 +35,7 @@ public abstract class Request<T> extends Thread {
    * Construct a Request object.
    * @param url The url to make an HTTP request to.
    * @param callback The callback run when the HTTP response is received.
+   * @throws MalformedURLException on invalid url
    */
   public Request(String url, RequestCallback<T> callback) throws MalformedURLException {
     mUrl = new URL(url);
@@ -99,13 +100,15 @@ public void run() {
   /**
    * Helper method to make an HTTP request.
    * @param urlConnection The HTTP connection.
+   * @throws IOException on error
    */
   protected abstract void writeToUrlConnection(HttpURLConnection urlConnection) throws IOException;
 
   /**
    * Helper method to read an HTTP response.
    * @param is The InputStream.
    * @return An object representing the HTTP response.
+   * @throws IOException on error
    */
   protected abstract T readInputStream(InputStream is) throws IOException;
 }

File: java/libs/src/main/java/org/physical_web/collection/PwPair.java
Patch:
@@ -82,6 +82,6 @@ public boolean equals(Object other) {
    * @return the comparison value.
    */
   public int compareTo(PwPair other) {
-    return new Double(getRank()).compareTo(other.getRank());
+    return Double.compare(getRank(), other.getRank());
   }
 }

File: java/libs/src/main/java/org/physical_web/collection/PwPair.java
Patch:
@@ -82,6 +82,6 @@ public boolean equals(Object other) {
    * @return the comparison value.
    */
   public int compareTo(PwPair other) {
-    return new Double(getRank()).compareTo(other.getRank());
+    return Double.compare(getRank(), other.getRank());
   }
 }

File: java/libs/src/main/java/org/physical_web/collection/SimpleUrlDevice.java
Patch:
@@ -15,8 +15,6 @@
  */
 package org.physical_web.collection;
 
-import org.json.JSONObject;
-
 /**
  * A basic implementation of the UrlDevice interface.
  */

File: java/libs/src/main/java/org/physical_web/collection/UrlDeviceJsonSerializer.java
Patch:
@@ -20,8 +20,8 @@
 /**
  * An interface that defines objects that can serialize and deserialize
  * UrlDevices to and from JSON.
- * @param <T extends UrlDevice> The implementation of UrlDevice that this
- *        serializer is designed to serialize and deserialize.
+ * @param <T> The implementation of UrlDevice that this serializer is designed
+ *            to serialize and deserialize.
  */
 public interface UrlDeviceJsonSerializer<T extends UrlDevice> {
   /**

File: java/libs/src/main/java/org/physical_web/collection/PwoCollection.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.physicalweb.collection;
+package org.physical_web.collection;
 
 /**
  * Collection of Physical Web Objects and related metadata.

File: java/libs/src/test/java/org/physical_web/collection/PwoCollectionTest.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.physicalweb.collection;
+package org.physical_web.collection;
 
 import org.junit.Test;
 import static org.junit.Assert.*;

File: java/libs/src/main/java/org/physical_web/collection/PwoCollection.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.physicalweb.collection;
+package org.physical_web.collection;
 
 /**
  * Collection of Physical Web Objects and related metadata.

File: java/libs/src/test/java/org/physical_web/collection/PwoCollectionTest.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.physicalweb.collection;
+package org.physical_web.collection;
 
 import org.junit.Test;
 import static org.junit.Assert.*;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigFragment.java
Patch:
@@ -223,7 +223,7 @@ private static boolean hasValidUrlLength(String url) {
   }
 
   /**
-   * Check if the given URL only uses characters from the set defined in RFC 3986 section 2
+   * Check if the given URL only uses characters from the set defined in RFC 3986 section 2.
    * https://tools.ietf.org/html/rfc3986#section-2
    * @param url URL to check
    * @return True if the URL is RFC 3986 compliant
@@ -234,8 +234,7 @@ private static boolean isAsciiUrl(String url) {
       URI uri = new URI(url);
       String urlString = uri.toASCIIString();
       isCompliant = url.equals(urlString);
-    }
-    catch (URISyntaxException e) {
+    } catch (URISyntaxException e) {
       // bad url
     }
     return isCompliant;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigFragment.java
Patch:
@@ -223,7 +223,7 @@ private static boolean hasValidUrlLength(String url) {
   }
 
   /**
-   * Check if the given URL only uses characters from the set defined in RFC 3986 section 2
+   * Check if the given URL only uses characters from the set defined in RFC 3986 section 2.
    * https://tools.ietf.org/html/rfc3986#section-2
    * @param url URL to check
    * @return True if the URL is RFC 3986 compliant
@@ -234,8 +234,7 @@ private static boolean isAsciiUrl(String url) {
       URI uri = new URI(url);
       String urlString = uri.toASCIIString();
       isCompliant = url.equals(urlString);
-    }
-    catch (URISyntaxException e) {
+    } catch (URISyntaxException e) {
       // bad url
     }
     return isCompliant;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PwsClient.java
Patch:
@@ -245,7 +245,7 @@ public void onResponse(JSONObject jsonResponse) {
             urlMetadata.description = jsonUrlMetadata.optString("description");
             urlMetadata.iconUrl = jsonUrlMetadata.optString("icon");
             urlMetadata.rank = jsonUrlMetadata.getDouble("rank");
-            urlMetadata.group = jsonUrlMetadata.optString("group");
+            urlMetadata.groupid = jsonUrlMetadata.optString("groupid");
           } catch (JSONException e) {
             Log.i(TAG, "Pws gave bad JSON: " + e);
             continue;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PwsClient.java
Patch:
@@ -245,7 +245,7 @@ public void onResponse(JSONObject jsonResponse) {
             urlMetadata.description = jsonUrlMetadata.optString("description");
             urlMetadata.iconUrl = jsonUrlMetadata.optString("icon");
             urlMetadata.rank = jsonUrlMetadata.getDouble("rank");
-            urlMetadata.group = jsonUrlMetadata.optString("group");
+            urlMetadata.groupid = jsonUrlMetadata.optString("groupid");
           } catch (JSONException e) {
             Log.i(TAG, "Pws gave bad JSON: " + e);
             continue;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PwoMetadata.java
Patch:
@@ -139,7 +139,7 @@ public static class UrlMetadata implements Comparable<UrlMetadata>{
     private static final String ICON_URL_KEY = "iconUrl";
     private static final String ICON_KEY = "icon";
     private static final String RANK_KEY = "rank";
-    private static final String GROUP_KEY = "group";
+    private static final String GROUP_KEY = "groupid";
     public String id;
     public String siteUrl;
     public String displayUrl;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PwsClient.java
Patch:
@@ -245,6 +245,7 @@ public void onResponse(JSONObject jsonResponse) {
             urlMetadata.description = jsonUrlMetadata.optString("description");
             urlMetadata.iconUrl = jsonUrlMetadata.optString("icon");
             urlMetadata.rank = jsonUrlMetadata.getDouble("rank");
+            urlMetadata.group = jsonUrlMetadata.optString("group");
           } catch (JSONException e) {
             Log.i(TAG, "Pws gave bad JSON: " + e);
             continue;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PwsClient.java
Patch:
@@ -245,6 +245,7 @@ public void onResponse(JSONObject jsonResponse) {
             urlMetadata.description = jsonUrlMetadata.optString("description");
             urlMetadata.iconUrl = jsonUrlMetadata.optString("icon");
             urlMetadata.rank = jsonUrlMetadata.getDouble("rank");
+            urlMetadata.group = jsonUrlMetadata.optString("group");
           } catch (JSONException e) {
             Log.i(TAG, "Pws gave bad JSON: " + e);
             continue;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PwoDiscoveryService.java
Patch:
@@ -196,6 +196,7 @@ public void onCreate() {
     initialize();
     restoreCache();
 
+    mNotificationManager.cancelAll();
     mHandler.postDelayed(mFirstScanTimeout, FIRST_SCAN_TIME_MILLIS);
     mHandler.postDelayed(mSecondScanTimeout, SECOND_SCAN_TIME_MILLIS);
     for (PwoDiscoverer pwoDiscoverer : mPwoDiscoverers) {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -286,6 +286,7 @@ private void emptyPwoMetadataQueue() {
       mNearbyDeviceAdapter.addItem(pwoMetadata);
     }
     mPwoMetadataQueue.clear();
+    mNearbyDeviceAdapter.notifyDataSetChanged();
   }
 
   private void fadeInListView() {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/ssdp/Ssdp.java
Patch:
@@ -24,6 +24,7 @@
 import java.net.InetSocketAddress;
 import java.net.SocketAddress;
 import java.net.SocketTimeoutException;
+import java.nio.charset.StandardCharsets;
 
 /**
  * This class implements SSDP protocol.
@@ -87,7 +88,7 @@ public synchronized boolean stop() throws IOException {
 
   public synchronized void search(SsdpMessage msg) throws IOException {
     if (mDatagramSocket != null){
-      byte bytes[] = msg.toString().getBytes();
+      byte bytes[] = msg.toString().getBytes(StandardCharsets.UTF_8);
       DatagramPacket dp = new DatagramPacket(bytes, bytes.length, mMulticastGroup);
       mDatagramSocket.send(dp);
     }
@@ -112,7 +113,7 @@ public void run() {
       try {
         DatagramPacket dp = new DatagramPacket(buf, buf.length);
         mDatagramSocket.receive(dp);
-        String txt = new String(dp.getData());
+        String txt = new String(dp.getData(), StandardCharsets.UTF_8);
         SsdpMessage msg = new SsdpMessage(txt);
         mSsdpCallback.onSsdpMessageReceived(msg);
       } catch (SocketTimeoutException e) {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/AboutFragment.java
Patch:
@@ -17,6 +17,7 @@
 
 package org.physical_web.physicalweb;
 
+import android.annotation.SuppressLint;
 import android.app.Fragment;
 import android.os.Bundle;
 import android.view.LayoutInflater;
@@ -50,6 +51,7 @@ private void initializeApplicationVersionText() {
     }
   }
 
+  @SuppressLint("SetJavaScriptEnabled")
   private void initializeWebView() {
     WebView webView = (WebView) getActivity().findViewById(R.id.about_webview);
     webView.getSettings().setJavaScriptEnabled(true);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigFragment.java
Patch:
@@ -27,6 +27,7 @@
 import android.os.Handler;
 import android.os.ParcelUuid;
 import android.os.SystemClock;
+import android.support.v4.content.res.ResourcesCompat;
 import android.util.Log;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
@@ -136,7 +137,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
     // Setup the animation
     mScanningStatus = (TextView) view.findViewById(R.id.textView_scanningStatus);
-    mScanningAnimation = (AnimationDrawable) getResources().getDrawable(R.drawable.scanning_animation);
+    mScanningAnimation = (AnimationDrawable) ResourcesCompat.getDrawable(
+        getResources(), R.drawable.scanning_animation, null);
     mScanningStatus.setCompoundDrawablesWithIntrinsicBounds(null, mScanningAnimation, null, null);
 
     Button button = (Button) view.findViewById(R.id.edit_card_save);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/AboutFragment.java
Patch:
@@ -17,6 +17,7 @@
 
 package org.physical_web.physicalweb;
 
+import android.annotation.SuppressLint;
 import android.app.Fragment;
 import android.os.Bundle;
 import android.view.LayoutInflater;
@@ -50,6 +51,7 @@ private void initializeApplicationVersionText() {
     }
   }
 
+  @SuppressLint("SetJavaScriptEnabled")
   private void initializeWebView() {
     WebView webView = (WebView) getActivity().findViewById(R.id.about_webview);
     webView.getSettings().setJavaScriptEnabled(true);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigFragment.java
Patch:
@@ -27,6 +27,7 @@
 import android.os.Handler;
 import android.os.ParcelUuid;
 import android.os.SystemClock;
+import android.support.v4.content.res.ResourcesCompat;
 import android.util.Log;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
@@ -136,7 +137,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
     // Setup the animation
     mScanningStatus = (TextView) view.findViewById(R.id.textView_scanningStatus);
-    mScanningAnimation = (AnimationDrawable) getResources().getDrawable(R.drawable.scanning_animation);
+    mScanningAnimation = (AnimationDrawable) ResourcesCompat.getDrawable(
+        getResources(), R.drawable.scanning_animation, null);
     mScanningStatus.setCompoundDrawablesWithIntrinsicBounds(null, mScanningAnimation, null, null);
 
     Button button = (Button) view.findViewById(R.id.edit_card_save);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -565,7 +565,7 @@ private void updateDebugView(String url, View view) {
 
         float pwsTripTime = mUrlToPwsTripTime.get(url) / 1000.0f;
         String pwsTripTimeString = "" + getString(R.string.metadata_debug_pws_trip_time_prefix)
-            + new DecimalFormat("##.##s").format(pwsTripTime) + " " + url;
+            + new DecimalFormat("##.##s").format(pwsTripTime);
         pwsTripTimeView.setText(pwsTripTimeString);
       } else {
         rankView.setText("");

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -565,7 +565,7 @@ private void updateDebugView(String url, View view) {
 
         float pwsTripTime = mUrlToPwsTripTime.get(url) / 1000.0f;
         String pwsTripTimeString = "" + getString(R.string.metadata_debug_pws_trip_time_prefix)
-            + new DecimalFormat("##.##s").format(pwsTripTime) + " " + url;
+            + new DecimalFormat("##.##s").format(pwsTripTime);
         pwsTripTimeView.setText(pwsTripTimeString);
       } else {
         rankView.setText("");

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/AboutFragment.java
Patch:
@@ -53,7 +53,6 @@ private void initializeApplicationVersionText() {
   private void initializeWebView() {
     WebView webView = (WebView) getActivity().findViewById(R.id.about_webview);
     webView.getSettings().setJavaScriptEnabled(true);
-    webView.getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);
     webView.setWebViewClient(new WebViewClient());
     webView.loadUrl(getString(R.string.url_getting_started));
   }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/OobActivity.java
Patch:
@@ -49,7 +49,6 @@ private void initializeWebView() {
     // Force the background color to update (it uses the color specified in the layout xml)
     webView.setBackgroundColor(0x000);
     webView.getSettings().setJavaScriptEnabled(true);
-    webView.getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);
     webView.setWebViewClient(new WebViewClient());
     webView.loadUrl(getString(R.string.url_getting_started));
   }
@@ -77,4 +76,4 @@ public void onBackPressed() {
     intent.addCategory(Intent.CATEGORY_HOME);
     startActivity(intent);
   }
-}
\ No newline at end of file
+}

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -178,11 +178,13 @@ public void onCreate() {
   }
 
   @Override
+  @SuppressWarnings("deprecation")
   public int onStartCommand(Intent intent, int flags, int startId) {
     // Since sometimes the lists have values when onStartCommand gets called
     initializeLists();
     // Start scanning only if the screen is on
     PowerManager powerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);
+    // NOTE: use powerManager.isInteractive() when minsdk >= 20
     if (powerManager.isScreenOn()) {
       mCanUpdateNotifications = false;
       mHandler.postDelayed(mNotificationUpdateGateTimeout, NOTIFICATION_UPDATE_GATE_DURATION);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/AboutFragment.java
Patch:
@@ -53,7 +53,6 @@ private void initializeApplicationVersionText() {
   private void initializeWebView() {
     WebView webView = (WebView) getActivity().findViewById(R.id.about_webview);
     webView.getSettings().setJavaScriptEnabled(true);
-    webView.getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);
     webView.setWebViewClient(new WebViewClient());
     webView.loadUrl(getString(R.string.url_getting_started));
   }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/OobActivity.java
Patch:
@@ -49,7 +49,6 @@ private void initializeWebView() {
     // Force the background color to update (it uses the color specified in the layout xml)
     webView.setBackgroundColor(0x000);
     webView.getSettings().setJavaScriptEnabled(true);
-    webView.getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);
     webView.setWebViewClient(new WebViewClient());
     webView.loadUrl(getString(R.string.url_getting_started));
   }
@@ -77,4 +76,4 @@ public void onBackPressed() {
     intent.addCategory(Intent.CATEGORY_HOME);
     startActivity(intent);
   }
-}
\ No newline at end of file
+}

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -178,11 +178,13 @@ public void onCreate() {
   }
 
   @Override
+  @SuppressWarnings("deprecation")
   public int onStartCommand(Intent intent, int flags, int startId) {
     // Since sometimes the lists have values when onStartCommand gets called
     initializeLists();
     // Start scanning only if the screen is on
     PowerManager powerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);
+    // NOTE: use powerManager.isInteractive() when minsdk >= 20
     if (powerManager.isScreenOn()) {
       mCanUpdateNotifications = false;
       mHandler.postDelayed(mNotificationUpdateGateTimeout, NOTIFICATION_UPDATE_GATE_DURATION);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/PwsClient.java
Patch:
@@ -90,8 +90,8 @@ public interface ShortenUrlCallback {
   // utilities
   /////////////////////////////////
 
-  private static String constructUrlStr(final String path) {
-    return PROD_URL + "/" + path;
+  private String constructUrlStr(final String path) {
+    return mEndpointUrl + "/" + path;
   }
 
   public void shortenUrl(final String longUrl,

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -496,11 +496,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
         updateRangingDebugView(url, view);
         view.findViewById(R.id.ranging_debug_container).setVisibility(View.VISIBLE);
         view.findViewById(R.id.metadata_debug_container).setVisibility(View.VISIBLE);
+        PwsClient.getInstance(getActivity()).useDevEndpoint();
       }
       // Otherwise ensure it is not shown
       else {
         view.findViewById(R.id.ranging_debug_container).setVisibility(View.GONE);
         view.findViewById(R.id.metadata_debug_container).setVisibility(View.GONE);
+        PwsClient.getInstance(getActivity()).useProdEndpoint();
       }
 
       return view;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -496,11 +496,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
         updateRangingDebugView(url, view);
         view.findViewById(R.id.ranging_debug_container).setVisibility(View.VISIBLE);
         view.findViewById(R.id.metadata_debug_container).setVisibility(View.VISIBLE);
+        PwsClient.getInstance(getActivity()).useDevEndpoint();
       }
       // Otherwise ensure it is not shown
       else {
         view.findViewById(R.id.ranging_debug_container).setVisibility(View.GONE);
         view.findViewById(R.id.metadata_debug_container).setVisibility(View.GONE);
+        PwsClient.getInstance(getActivity()).useProdEndpoint();
       }
 
       return view;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -448,7 +448,7 @@ private void updateNearbyBeaconNotification(boolean single, String url, int noti
    */
   private void updateSummaryNotification() {
     int numNearbyBeacons = mSortedDevices.size();
-    String contentTitle = String.valueOf(numNearbyBeacons) + " ";
+    String contentTitle = String.valueOf(numNearbyBeacons);
     Resources resources = getResources();
     contentTitle += " " + resources.getQuantityString(R.plurals.numFoundBeacons, numNearbyBeacons, numNearbyBeacons);
     String contentText = getString(R.string.summary_notification_pull_down);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -332,7 +332,7 @@ private void handleFoundDevice(ScanResult scanResult) {
       UriBeacon uriBeacon = UriBeacon.parseFromBytes(scanResult.getScanRecord().getBytes());
       if (uriBeacon != null) {
         String url = uriBeacon.getUriString();
-        if (url != null && url.isEmpty()) {
+        if (url != null && !url.isEmpty()) {
           String address = scanResult.getDevice().getAddress();
           int rssi = scanResult.getRssi();
           int txPower = uriBeacon.getTxPowerLevel();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -332,7 +332,7 @@ private void handleFoundDevice(ScanResult scanResult) {
       UriBeacon uriBeacon = UriBeacon.parseFromBytes(scanResult.getScanRecord().getBytes());
       if (uriBeacon != null) {
         String url = uriBeacon.getUriString();
-        if (url != null && url.isEmpty()) {
+        if (url != null && !url.isEmpty()) {
           String address = scanResult.getDevice().getAddress();
           int rssi = scanResult.getRssi();
           int txPower = uriBeacon.getTxPowerLevel();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -358,9 +358,9 @@ private void onLanUrlFound(String url){
     }
   }
 
-    /**
-   * Callback for LE scan results.
-   */
+  /**
+  * Callback for LE scan results.
+  */
   private class LeScanCallback implements BluetoothAdapter.LeScanCallback {
     @Override
     public void onLeScan(final BluetoothDevice device, final int rssi, final byte[] scanBytes) {

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/ssdp/Ssdp.java
Patch:
@@ -59,7 +59,7 @@ public Ssdp(SsdpCallback ssdpCallback) throws IOException{
 
     public synchronized boolean start(Integer timeout) throws IOException{
         if (mThread == null){
-            mMulticastSocket = new MulticastSocket(SSDP_PORT);
+            mMulticastSocket = new DatagramSocket(SSDP_PORT);
             if (timeout != null && timeout>0){
                 mMulticastSocket.setSoTimeout(timeout);
             }

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -309,6 +309,9 @@ private void openUrlInBrowser(String url) {
 
   @Override
   public void onRefresh() {
+    if (mIsScanRunning) {
+      return;
+    }
     mSwipeRefreshWidget.setRefreshing(true);
     if (!mIsDemoMode) {
       mScanningAnimationDrawable.start();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -309,6 +309,9 @@ private void openUrlInBrowser(String url) {
 
   @Override
   public void onRefresh() {
+    if (mIsScanRunning) {
+      return;
+    }
     mSwipeRefreshWidget.setRefreshing(true);
     if (!mIsDemoMode) {
       mScanningAnimationDrawable.start();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -402,7 +402,7 @@ private RemoteViews updateSummaryNotificationRemoteViews() {
     updateSummaryNotificationRemoteViewsFirstBeacon(mDeviceAddressToUrl.get(mSortedDevices.get(0)), remoteViews);
     updateSummaryNotificationRemoteViewsSecondBeacon(mDeviceAddressToUrl.get(mSortedDevices.get(1)), remoteViews);
 
-    // Create an pending intent that will open the physical web app
+    // Create a pending intent that will open the physical web app
     // TODO: Use a clickListener on the VIEW MORE button to do this
     PendingIntent pendingIntent = createReturnToAppPendingIntent();
     remoteViews.setOnClickPendingIntent(R.id.otherBeaconsLayout, pendingIntent);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigFragment.java
Patch:
@@ -68,7 +68,7 @@ public class BeaconConfigFragment extends Fragment implements TextView.OnEditorA
 
   private static final String TAG = "BeaconConfigFragment";
   // TODO: default value for TxPower should be in another module
-  private static final byte TX_POWER_DEFAULT = -63;
+  private static final byte TX_POWER_DEFAULT = -22;
   private static final long SCAN_TIME_MILLIS = TimeUnit.SECONDS.toMillis(15);
   private static final ParcelUuid[] mScanFilterUuids = new ParcelUuid[]{ProtocolV2.CONFIG_SERVICE_UUID, ProtocolV1.CONFIG_SERVICE_UUID};
   private final BluetoothAdapter.LeScanCallback mLeScanCallback = new LeScanCallback();
@@ -264,6 +264,7 @@ private void handleFoundDevice(final ScanResult scanResult, ParcelUuid filteredU
     final String address = scanResult.getDevice().getAddress();
     int rxPower = scanResult.getRssi();
     Log.i(TAG, String.format("handleFoundDevice: %s, RSSI: %d", address, rxPower));
+    // TODO: Better handle tx power across devices (especially wrt ranging)
     mRegionResolver.onUpdate(address, rxPower, TX_POWER_DEFAULT);
     final String nearestAddress = mRegionResolver.getNearestAddress();
     // When the current sighting comes from the nearest device...

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -32,6 +32,7 @@
 import android.view.Menu;
 import android.view.View;
 import android.view.ViewGroup;
+import android.webkit.URLUtil;
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
@@ -321,8 +322,8 @@ private void handleScanFailed(int err) {
   }
 
   private void openUrlInBrowser(String url) {
-    // Ensure we have an http prefix
-    if (!url.startsWith("http://") && !url.startsWith("https://")) {
+    // Ensure an http prefix exists in the url
+    if (!URLUtil.isNetworkUrl(url)) {
       url = "http://" + url;
     }
     // Open the browser and point it to the given url

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UrlShortener.java
Patch:
@@ -24,7 +24,6 @@
 import com.google.api.services.urlshortener.Urlshortener;
 import com.google.api.services.urlshortener.UrlshortenerRequestInitializer;
 import com.google.api.services.urlshortener.model.Url;
-
 import java.io.IOException;
 import java.net.HttpURLConnection;
 import java.net.MalformedURLException;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/AboutFragment.java
Patch:
@@ -33,7 +33,7 @@ private void initializeApplicationVersionText() {
     }
   }
 
-  private void intializeWebView() {
+  private void initializeWebView() {
     WebView webView = (WebView) getActivity().findViewById(R.id.about_webview);
     webView.getSettings().setJavaScriptEnabled(true);
     webView.getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);
@@ -53,7 +53,7 @@ public void onResume() {
     super.onResume();
     //noinspection ConstantConditions
     getActivity().getActionBar().setTitle(R.string.title_about);
-    intializeWebView();
+    initializeWebView();
     initializeApplicationVersionText();
   }
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconHelper.java
Patch:
@@ -26,7 +26,7 @@
  * afford url expansion codes when creating url byte arrays,
  * and create instances of beacons.
  */
-public class BeaconHelper {
+class BeaconHelper {
 
   public static byte[] createAdvertisingPacket(String url) throws URISyntaxException {
     byte[] advertisingPacket;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -71,7 +71,7 @@ public class NearbyBeaconsFragment extends ListFragment implements MetadataResol
   private HashMap<String, MetadataResolver.UrlMetadata> mUrlToUrlMetadata;
   private AnimationDrawable mScanningAnimationDrawable;
   private boolean mIsDemoMode;
-  private static int BEACON_EXPIRATION_DURATION = 5;
+  private static final int BEACON_EXPIRATION_DURATION = 5;
 
   public static NearbyBeaconsFragment newInstance(boolean isDemoMode) {
     NearbyBeaconsFragment nearbyBeaconsFragment = new NearbyBeaconsFragment();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -49,7 +49,7 @@
  * and start/stops the scanning accordingly.
  * Also, this service issues a notification
  * informing the user of nearby beacons.
- * As beaoncs are found and lost,
+ * As beacons are found and lost,
  * the notification is updated to reflect
  * the current number of nearby beacons.
  */

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/AboutFragment.java
Patch:
@@ -33,7 +33,7 @@ private void initializeApplicationVersionText() {
     }
   }
 
-  private void intializeWebView() {
+  private void initializeWebView() {
     WebView webView = (WebView) getActivity().findViewById(R.id.about_webview);
     webView.getSettings().setJavaScriptEnabled(true);
     webView.getSettings().setRenderPriority(WebSettings.RenderPriority.HIGH);
@@ -53,7 +53,7 @@ public void onResume() {
     super.onResume();
     //noinspection ConstantConditions
     getActivity().getActionBar().setTitle(R.string.title_about);
-    intializeWebView();
+    initializeWebView();
     initializeApplicationVersionText();
   }
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconHelper.java
Patch:
@@ -26,7 +26,7 @@
  * afford url expansion codes when creating url byte arrays,
  * and create instances of beacons.
  */
-public class BeaconHelper {
+class BeaconHelper {
 
   public static byte[] createAdvertisingPacket(String url) throws URISyntaxException {
     byte[] advertisingPacket;

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -71,7 +71,7 @@ public class NearbyBeaconsFragment extends ListFragment implements MetadataResol
   private HashMap<String, MetadataResolver.UrlMetadata> mUrlToUrlMetadata;
   private AnimationDrawable mScanningAnimationDrawable;
   private boolean mIsDemoMode;
-  private static int BEACON_EXPIRATION_DURATION = 5;
+  private static final int BEACON_EXPIRATION_DURATION = 5;
 
   public static NearbyBeaconsFragment newInstance(boolean isDemoMode) {
     NearbyBeaconsFragment nearbyBeaconsFragment = new NearbyBeaconsFragment();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -49,7 +49,7 @@
  * and start/stops the scanning accordingly.
  * Also, this service issues a notification
  * informing the user of nearby beacons.
- * As beaoncs are found and lost,
+ * As beacons are found and lost,
  * the notification is updated to reflect
  * the current number of nearby beacons.
  */

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/NearbyBeaconsFragment.java
Patch:
@@ -108,7 +108,7 @@ private void initializeBluetooth() {
   }
 
   private void initializeScanningAnimation(View rootView) {
-    TextView tv = (TextView) rootView.findViewById(R.id.textView_nearbyBeaconsScanning);
+    TextView tv = (TextView) rootView.findViewById(android.R.id.empty);
     //Get the top drawable
     mScanningAnimationDrawable = (AnimationDrawable) tv.getCompoundDrawables()[1];
     mScanningAnimationDrawable.start();

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -38,8 +38,6 @@
 import java.util.HashSet;
 import java.util.List;
 
-import org.physical_web.physicalweb.R;
-
 /**
  * This is the services that scans for beacons.
  * When the application loads, it checks
@@ -228,6 +226,7 @@ private void updateNearbyBeaconsNotification() {
 
     // Have the app launch when the user taps the notification
     Intent resultIntent = new Intent(this, MainActivity.class);
+    resultIntent.putExtra("isFromUriBeaconDiscoveryService", true);
     int requestID = (int) System.currentTimeMillis();
     PendingIntent resultPendingIntent = PendingIntent.getActivity(this, requestID, resultIntent, 0);
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -38,8 +38,6 @@
 import java.util.HashSet;
 import java.util.List;
 
-import org.physical_web.physicalweb.R;
-
 /**
  * This is the services that scans for beacons.
  * When the application loads, it checks
@@ -228,6 +226,7 @@ private void updateNearbyBeaconsNotification() {
 
     // Have the app launch when the user taps the notification
     Intent resultIntent = new Intent(this, MainActivity.class);
+    resultIntent.putExtra("isFromUriBeaconDiscoveryService", true);
     int requestID = (int) System.currentTimeMillis();
     PendingIntent resultPendingIntent = PendingIntent.getActivity(this, requestID, resultIntent, 0);
 

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigHelper.java
Patch:
@@ -152,7 +152,6 @@ public void onCharacteristicWrite(android.bluetooth.BluetoothGatt gatt, Bluetoot
         return;
       }
     }
-    closeUriBeacon();
     try {
       // If we don't sleep here the write works only 20% of the time.
       Thread.sleep(20);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigHelper.java
Patch:
@@ -152,7 +152,6 @@ public void onCharacteristicWrite(android.bluetooth.BluetoothGatt gatt, Bluetoot
         return;
       }
     }
-    closeUriBeacon();
     try {
       // If we don't sleep here the write works only 20% of the time.
       Thread.sleep(20);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigHelper.java
Patch:
@@ -152,6 +152,7 @@ public void onCharacteristicWrite(android.bluetooth.BluetoothGatt gatt, Bluetoot
         return;
       }
     }
+    closeUriBeacon();
     try {
       // If we don't sleep here the write works only 20% of the time.
       Thread.sleep(20);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/BeaconConfigHelper.java
Patch:
@@ -152,7 +152,6 @@ public void onCharacteristicWrite(android.bluetooth.BluetoothGatt gatt, Bluetoot
         return;
       }
     }
-    closeUriBeacon();
     try {
       // If we don't sleep here the write works only 20% of the time.
       Thread.sleep(20);

File: android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/MetadataResolver.java
Patch:
@@ -182,9 +182,9 @@ public void onResponse(JSONObject jsonResponse) {
 
                   JSONObject jsonUrlMetadata = foundMetaData.getJSONObject(i);
 
-                  String title = "Unknown name";
-                  String url = "Unknown url";
-                  String description = "Unknown description";
+                  String title = "";
+                  String url = "";
+                  String description = "";
                   String iconUrl = "/favicon.ico";
                   String id = jsonUrlMetadata.getString("id");
 

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesFragment.java
Patch:
@@ -144,6 +144,7 @@ public void onResume() {
     super.onResume();
     if (!mIsDemoMode) {
       getActivity().getActionBar().setTitle(R.string.title_nearby_beacons);
+      getActivity().getActionBar().setDisplayHomeAsUpEnabled(false);
       startScanning();
     } else {
       getActivity().getActionBar().setTitle(R.string.title_nearby_beacons_demo);

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesFragment.java
Patch:
@@ -144,6 +144,7 @@ public void onResume() {
     super.onResume();
     if (!mIsDemoMode) {
       getActivity().getActionBar().setTitle(R.string.title_nearby_beacons);
+      getActivity().getActionBar().setDisplayHomeAsUpEnabled(false);
       startScanning();
     } else {
       getActivity().getActionBar().setTitle(R.string.title_nearby_beacons_demo);

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/BeaconConfigFragment.java
Patch:
@@ -174,6 +174,7 @@ public void onPrepareOptionsMenu(Menu menu) {
     super.onPrepareOptionsMenu(menu);
     menu.findItem(R.id.action_config).setVisible(false);
     menu.findItem(R.id.action_about).setVisible(false);
+    menu.findItem(R.id.action_demo).setVisible(false);
   }
 
   private final ScanCallback mScanCallback = new ScanCallback() {

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesFragment.java
Patch:
@@ -192,9 +192,10 @@ public void onScanFailed(int errorCode) {
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
       // Get the url for the given item
       String url = getUrlFromDeviceSighting(mNearbyDevicesAdapter.getItem(position));
-      if (url != null) {
+      String siteUrl = mUrlToUrlMetadata.get(url).siteUrl;
+      if (siteUrl != null) {
         // Open the url in the browser
-        openUrlInBrowser(url);
+        openUrlInBrowser(siteUrl);
       } else {
         Toast.makeText(getActivity(), "No URL found.", Toast.LENGTH_SHORT).show();
       }

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -111,8 +111,8 @@ public IBinder onBind(Intent intent) {
 
   @Override
   public void onDestroy() {
-    unregisterReceiver(mScreenStateBroadcastReceiver);
     stopSearchingForDevices();
+    unregisterReceiver(mScreenStateBroadcastReceiver);
   }
 
   private final ScanCallback mScanCallback = new ScanCallback() {

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -111,8 +111,8 @@ public IBinder onBind(Intent intent) {
 
   @Override
   public void onDestroy() {
-    unregisterReceiver(mScreenStateBroadcastReceiver);
     stopSearchingForDevices();
+    unregisterReceiver(mScreenStateBroadcastReceiver);
   }
 
   private final ScanCallback mScanCallback = new ScanCallback() {

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/UriBeaconDiscoveryService.java
Patch:
@@ -111,6 +111,7 @@ public IBinder onBind(Intent intent) {
 
   @Override
   public void onDestroy() {
+    unregisterReceiver(mScreenStateBroadcastReceiver);
     stopSearchingForDevices();
   }
 

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/BeaconConfigHelper.java
Patch:
@@ -359,7 +359,7 @@ private static void handleGattCharacteristicRead_beaconDataPart2(BluetoothGattCh
   /**
    * Write the given url to the
    * currently-being-configured beacon.
-   * This involves constructing the adverstising packet
+   * This involves constructing the advertising packet
    * that contains the url and then pushing that packet
    * to the beacon via GATT.
    *
@@ -448,7 +448,7 @@ private static void handleGattCharacteristicWrite_beaconDataPart1(BluetoothGattC
       onWriteComplete_beaconData();
       // If the length of the advertising packet is greater than the part 1 threshold length
     } else {
-      // Get the second part of the data to write from the threhold length index
+      // Get the second part of the data to write from the threshold length index
       // to the total length index of the advertising packet
       byte[] data_toWrite = Arrays.copyOfRange(mAdvertisingPacketData_write, MAX_NUM_BYTES_DATA_PART_1, mAdvertisingPacketData_write.length);
       // Write the given data to part 2 of the beacon advertising packet

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/UrlShortener.java
Patch:
@@ -31,7 +31,7 @@
 import java.util.concurrent.ExecutionException;
 
 /**
- * This class shortens urls and aslo expands those short urls
+ * This class shortens urls and also expands those short urls
  * to their original url.
  * Currently this class only supports google url shortener
  * TODO: support other url shorteners

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/BeaconConfigFragment.java
Patch:
@@ -232,8 +232,6 @@ public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
 
   /**
    * Called when the user presses the keyboard "DONE" key
-   *
-   * @throws IOException
    */
   private void onEditorAction_nearestConfigurableBeaconUrlEditTextDoneKeyPressed() {
     // Hide the software keyboard

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesFragment.java
Patch:
@@ -125,6 +125,7 @@ public View onCreateView(LayoutInflater layoutInflater, ViewGroup container, Bun
   @Override
   public void onResume() {
     super.onResume();
+    getActivity().getActionBar().setTitle(R.string.title_nearby_beacons);
     startScanning();
   }
 

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesFragment.java
Patch:
@@ -125,6 +125,7 @@ public View onCreateView(LayoutInflater layoutInflater, ViewGroup container, Bun
   @Override
   public void onResume() {
     super.onResume();
+    getActivity().getActionBar().setTitle(R.string.title_nearby_beacons);
     startScanning();
   }
 

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/MainActivity.java
Patch:
@@ -48,7 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
   private void showNearbyBeaconsFragment() {
     getFragmentManager().beginTransaction()
-        .add(R.id.homeScreen_container, NearbyDevicesFragment.newInstance())
+        .add(R.id.main_activity_container, NearbyDevicesFragment.newInstance())
         .commit();
   }
 

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/MainActivity.java
Patch:
@@ -48,7 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
   private void showNearbyBeaconsFragment() {
     getFragmentManager().beginTransaction()
-        .add(R.id.homeScreen_container, NearbyDevicesFragment.newInstance())
+        .add(R.id.main_activity_container, NearbyDevicesFragment.newInstance())
         .commit();
   }
 

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesAdapter.java
Patch:
@@ -31,7 +31,6 @@
 import java.util.HashMap;
 import java.util.List;
 
-
 /**
  * This class is responsible for
  * displaying the list of nearby devices.

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesFragment.java
Patch:
@@ -25,7 +25,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
-import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.Toast;
 import org.uribeacon.beacon.UriBeacon;
@@ -39,7 +38,7 @@
 import java.util.List;
 
 /**
- * This class show the ui list for all
+ * This class shows the ui list for all
  * detected nearby devices that are beacons.
  * It also listens for tap events
  * on items within the list.

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesAdapter.java
Patch:
@@ -31,7 +31,6 @@
 import java.util.HashMap;
 import java.util.List;
 
-
 /**
  * This class is responsible for
  * displaying the list of nearby devices.

File: android/PhysicalWeb/app/src/main/java/physical_web/org/physicalweb/NearbyDevicesFragment.java
Patch:
@@ -25,7 +25,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.AdapterView;
-import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.Toast;
 import org.uribeacon.beacon.UriBeacon;
@@ -39,7 +38,7 @@
 import java.util.List;
 
 /**
- * This class show the ui list for all
+ * This class shows the ui list for all
  * detected nearby devices that are beacons.
  * It also listens for tap events
  * on items within the list.

