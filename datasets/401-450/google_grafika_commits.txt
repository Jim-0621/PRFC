File: src/com/android/grafika/ConstantCaptureActivity.java
Patch:
@@ -368,6 +368,8 @@ public void surfaceCreated(SurfaceHolder holder) {
         mCamera.startPreview();
 
         // TODO: adjust bit rate based on frame rate?
+        // TODO: adjust video width/height based on what we're getting from the camera preview?
+        //       (can we guarantee that camera preview size is compatible with AVC video encoder?)
         mCircEncoder = new CircularEncoder(VIDEO_WIDTH, VIDEO_HEIGHT, 6000000,
                 mCameraPreviewThousandFps / 1000, 7, mHandler);
         mEncoderSurface = new WindowSurface(mEglCore, mCircEncoder.getInputSurface(), true);

File: src/com/android/grafika/MovieSliders.java
Patch:
@@ -28,8 +28,8 @@ public class MovieSliders extends GeneratedMovie {
     private static final String TAG = MainActivity.TAG;
 
     private static final String MIME_TYPE = "video/avc";
-    private static final int WIDTH = 640;
-    private static final int HEIGHT = 480;
+    private static final int WIDTH = 480;       // note 480x640, not 640x480
+    private static final int HEIGHT = 640;
     private static final int BIT_RATE = 5000000;
     private static final int FRAMES_PER_SECOND = 30;
 

File: src/com/android/grafika/RecordFBOActivity.java
Patch:
@@ -835,7 +835,6 @@ private void doFrame(long timeStampNanos) {
 
             update(timeStampNanos);
 
-            // TODO: add a dropped-frame counter
             long diff = (System.nanoTime() - timeStampNanos) / 1000000;
             if (diff > 15) {
                 // too much, drop a frame

File: src/com/android/grafika/MainActivity.java
Patch:
@@ -73,6 +73,9 @@ public class MainActivity extends ListActivity {
         { "Double decode",
             "Decodes two videos side-by-side",
             "DoubleDecodeActivity" },
+        { "Hardware scaler exerciser",
+            "Exercises SurfaceHolder#setFixedSize()",
+            "HardwareScalerActivity" },
         { "{ignore} Chor test",
             "Exercises bug",
             "ChorTestActivity" },

File: src/com/android/grafika/Sprite2d.java
Patch:
@@ -162,7 +162,7 @@ public float[] getColor() {
     /**
      * Draws the rectangle with the supplied program and projection matrix.
      */
-    public void draw(Flat2dProgram program, float[] projectionMatrix) {
+    public void draw(FlatShadedProgram program, float[] projectionMatrix) {
         // Compute model/view/projection matrix.
         Matrix.multiplyMM(mScratchMatrix, 0, projectionMatrix, 0, getModelViewMatrix(), 0);
 

File: src/com/android/grafika/CameraCaptureActivity.java
Patch:
@@ -282,7 +282,8 @@ private void openCamera(int desiredWidth, int desiredHeight) {
      * specify the dimensions of the encoded video).  If it fails to find a match it just
      * uses the default preview size.
      * <p>
-     * TODO: should do a best-fit match.
+     * TODO: should do a best-fit match, e.g.
+     * https://github.com/commonsguy/cwac-camera/blob/master/camera/src/com/commonsware/cwac/camera/CameraUtils.java
      */
     private static void choosePreviewSize(Camera.Parameters parms, int width, int height) {
         // We should make sure that the requested MPEG size is less than the preferred

File: src/com/android/grafika/ContentManager.java
Patch:
@@ -182,7 +182,7 @@ private String getFileName(int tag) {
     /**
      * Returns the storage location for the specified item.
      */
-    private File getPath(int tag) {
+    public File getPath(int tag) {
         return new File(mFilesDir, getFileName(tag));
     }
 

File: src/com/android/grafika/MainActivity.java
Patch:
@@ -41,6 +41,7 @@ public class MainActivity extends Activity implements OnItemSelectedListener {
         TextureViewGLActivity.class,
         ReadPixelsActivity.class,
         LiveCameraActivity.class,
+        DoubleDecodeActivity.class,
 
         ChorTestActivity.class,
     };

File: src/com/android/grafika/MoviePlayer.java
Patch:
@@ -88,6 +88,9 @@ public void setLoopMode(boolean loopMode) {
 
     /**
      * Decodes the video stream, sending frames to the surface.
+     * <p>
+     * Does not return until video playback is complete, or we get a "stop" signal from
+     * frameCallback.
      */
     public void play(FrameCallback frameCallback) throws IOException {
         MediaExtractor extractor = null;

File: src/com/android/grafika/MainActivity.java
Patch:
@@ -35,8 +35,8 @@ public class MainActivity extends Activity implements OnItemSelectedListener {
     public static final String TAG = "Grafika";
     public static final Class[] TEST_ACTIVITIES = {
         // The content and order MUST match the "test_names" string-array.
-        RecordFBOActivity.class,
         CameraCaptureActivity.class,
+        RecordFBOActivity.class,
         PlayMovieActivity.class,
         TextureViewGLActivity.class,
         ReadPixelsActivity.class,

