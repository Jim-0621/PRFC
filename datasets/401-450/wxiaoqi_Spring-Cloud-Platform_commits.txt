File: ace-gate/src/main/java/com/github/wxiaoqi/security/gate/handler/RequestBodyRoutePredicateFactory.java
Patch:
@@ -53,7 +53,7 @@ public RequestBodyRoutePredicateFactory() {
     @Override
     public AsyncPredicate<ServerWebExchange> applyAsync(Config config) {
         return exchange -> {
-            if ("GET".equals(exchange.getRequest().getMethodValue())) {
+            if (!"POST".equals(exchange.getRequest().getMethodValue())) {
                 return Mono.just(true);
             }
             Object cachedBody = exchange.getAttribute(REQUEST_BODY_ATTR);

File: ace-modules/ace-tool/src/main/java/com/github/wxiaoqi/ToolBootstrap.java
Patch:
@@ -38,7 +38,7 @@
 @EnableDiscoveryClient
 public class ToolBootstrap {
     public static void main(String[] args) {
-        new SpringApplicationBuilder(ToolBootstrap.class).web(true).run(args);
+        new SpringApplicationBuilder(ToolBootstrap.class).run(args);
     }
 
 }

File: ace-modules/ace-tool/src/main/java/com/github/wxiaoqi/ToolBootstrap.java
Patch:
@@ -27,14 +27,14 @@
 
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.builder.SpringApplicationBuilder;
-import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
 
 /**
  * @author ace
  * @create 2018/3/5.
  */
 @SpringBootApplication
-@EnableEurekaClient
+@EnableDiscoveryClient
 public class ToolBootstrap {
     public static void main(String[] args) {
         new SpringApplicationBuilder(ToolBootstrap.class).web(true).run(args);

File: ace-modules/ace-tool/src/main/java/com/github/wxiaoqi/ToolBootstrap.java
Patch:
@@ -27,14 +27,15 @@
 
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.boot.builder.SpringApplicationBuilder;
-import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
 
 /**
  * @author ace
  * @create 2018/3/5.
  */
 @SpringBootApplication
-@EnableEurekaClient
+@EnableDiscoveryClient
 public class ToolBootstrap {
     public static void main(String[] args) {
         new SpringApplicationBuilder(ToolBootstrap.class).web(true).run(args);

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/biz/GroupBiz.java
Patch:
@@ -99,7 +99,7 @@ public void modifyGroupUsers(int groupId, String members, String leaders) {
      * @param groupId
      * @param menus
      */
-    @CacheClear(pre = "permission:menu")
+    @CacheClear(keys = {"permission:menu","permission:u"})
     public void modifyAuthorityMenu(int groupId, String[] menus) {
         resourceAuthorityMapper.deleteByAuthorityIdAndResourceType(groupId + "", AdminCommonConstant.RESOURCE_TYPE_MENU);
         List<Menu> menuList = menuMapper.selectAll();
@@ -138,7 +138,7 @@ private void findParentID(Map<String, String> map, Set<String> relationMenus, St
      * @param menuId
      * @param elementId
      */
-    @CacheClear(pre = "permission:ele")
+    @CacheClear(keys = {"permission:ele","permission:u"})
     public void modifyAuthorityElement(int groupId, int menuId, int elementId) {
         ResourceAuthority authority = new ResourceAuthority(AdminCommonConstant.AUTHORITY_TYPE_GROUP, AdminCommonConstant.RESOURCE_TYPE_BTN);
         authority.setAuthorityId(groupId + "");
@@ -154,7 +154,7 @@ public void modifyAuthorityElement(int groupId, int menuId, int elementId) {
      * @param menuId
      * @param elementId
      */
-    @CacheClear(pre = "permission:ele")
+    @CacheClear(keys = {"permission:ele","permission:u"})
     public void removeAuthorityElement(int groupId, int menuId, int elementId) {
         ResourceAuthority authority = new ResourceAuthority();
         authority.setAuthorityId(groupId + "");

File: ace-auth/ace-auth-client/src/main/java/com/github/wxiaoqi/security/auth/client/jwt/ServiceAuthUtil.java
Patch:
@@ -57,7 +57,7 @@ public void refreshAllowedClient() {
         }
     }
 
-
+    @Scheduled(cron = "0 0/10 * * * ?")
     public void refreshClientToken() {
         log.debug("refresh client token.....");
         BaseResponse resp = serviceAuthFeign.getAccessToken(serviceAuthConfig.getClientId(), serviceAuthConfig.getClientSecret());

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/config/WebConfig.java
Patch:
@@ -47,7 +47,8 @@ private ArrayList<String> getExcludeCommonPathPatterns() {
         String[] urls = {
                 "/v2/api-docs",
                 "/swagger-resources/**",
-                "/cache/**"
+                "/cache/**",
+                "/api/log/save"
         };
         Collections.addAll(list, urls);
         return list;

File: ace-auth/ace-auth-client/src/main/java/com/github/wxiaoqi/security/auth/client/interceptor/ServiceAuthRestInterceptor.java
Patch:
@@ -44,7 +44,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
 
         String token = request.getHeader(serviceAuthConfig.getTokenHeader());
         IJWTInfo infoFromToken = serviceAuthUtil.getInfoFromToken(token);
-        String uniqueName = infoFromToken.getUniqueName(); // clientName（code）
+        String uniqueName = infoFromToken.getUniqueName();
         for(String client:serviceAuthUtil.getAllowedClient()){
             if(client.equals(uniqueName)){
                 return super.preHandle(request, response, handler);

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/config/WebConfig.java
Patch:
@@ -47,7 +47,8 @@ private ArrayList<String> getExcludeCommonPathPatterns() {
         String[] urls = {
                 "/v2/api-docs",
                 "/swagger-resources/**",
-                "/cache/**"
+                "/cache/**",
+                "/api/log/save"
         };
         Collections.addAll(list, urls);
         return list;

File: ace-auth/ace-auth-client/src/main/java/com/github/wxiaoqi/security/auth/client/interceptor/ServiceAuthRestInterceptor.java
Patch:
@@ -44,7 +44,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
 
         String token = request.getHeader(serviceAuthConfig.getTokenHeader());
         IJWTInfo infoFromToken = serviceAuthUtil.getInfoFromToken(token);
-        String uniqueName = infoFromToken.getUniqueName(); // clientName（code）
+        String uniqueName = infoFromToken.getUniqueName();
         for(String client:serviceAuthUtil.getAllowedClient()){
             if(client.equals(uniqueName)){
                 return super.preHandle(request, response, handler);

File: ace-gate/ace-gate-server/src/main/java/com/github/wxiaoqi/security/gate/filter/AdminAccessFilter.java
Patch:
@@ -106,6 +106,7 @@ public Object run() {
         }
         // 申请客户端密钥头
         ctx.addZuulRequestHeader(serviceAuthConfig.getTokenHeader(),serviceAuthUtil.getClientToken());
+        BaseContextHandler.remove();
         return null;
     }
 
@@ -151,6 +152,7 @@ private IJWTInfo getJWTUser(HttpServletRequest request,RequestContext ctx) throw
             authToken = request.getParameter("token");
         }
         ctx.addZuulRequestHeader(userAuthConfig.getTokenHeader(),authToken);
+        BaseContextHandler.setToken(authToken);
         return userAuthUtil.getInfoFromToken(authToken);
     }
 

File: ace-gate/src/main/java/com/github/wxiaoqi/security/gate/config/WebSecurityConfig.java
Patch:
@@ -1,6 +1,5 @@
 package com.github.wxiaoqi.security.gate.config;
 
-import com.github.wxiaoqi.security.api.user.service.IUserService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.context.annotation.Lazy;

File: ace-common/src/main/java/com/github/wxiaoqi/security/common/rest/BaseController.java
Patch:
@@ -27,7 +27,7 @@ public class BaseController<Biz extends BaseBiz,Entity> {
     @ResponseBody
     public ObjectRestResponse<Entity> add(Entity entity){
         baseBiz.insertSelective(entity);
-        return new ObjectRestResponse<SecurityProperties.User>().rel(true);
+        return new ObjectRestResponse<Entity>().rel(true);
     }
 
     @RequestMapping(value = "/{id}",method = RequestMethod.GET)

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/entity/Menu.java
Patch:
@@ -6,7 +6,6 @@
 @Table(name = "base_menu")
 public class Menu {
     @Id
-    @SequenceGenerator(name="",sequenceName="myql")
     private Integer id;
 
     private String code;

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/entity/User.java
Patch:
@@ -6,7 +6,6 @@
 @Table(name = "base_user")
 public class User {
     @Id
-    @SequenceGenerator(name="",sequenceName="myql")
     private Integer id;
 
     private String username;

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/rest/UserController.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.wxiaoqi.security.admin.rest;
 
 import com.github.pagehelper.PageHelper;
-import com.github.wxiaoqi.security.admin.biz.UserService;
+import com.github.wxiaoqi.security.admin.biz.UserBiz;
 import com.github.wxiaoqi.security.admin.entity.User;
 import com.github.wxiaoqi.security.common.msg.ListRestResponse;
 import com.github.wxiaoqi.security.common.msg.ObjectRestResponse;
@@ -26,7 +26,7 @@
 public class UserController {
     @Lazy
     @Autowired
-    private UserService userService;
+    private UserBiz userService;
     @RequestMapping(value = "/page/{pageIndex}/{pageSize}",method = RequestMethod.GET)
     @ResponseBody
     public List<User> list(@PathVariable int pageIndex,@PathVariable int pageSize){

File: ace-common/src/main/java/com/github/wxiaoqi/security/common/biz/BaseBiz.java
Patch:
@@ -12,9 +12,11 @@
  * Version 1.0.0
  */
 public abstract class BaseBiz<M extends Mapper<T>, T> {
-
     @Autowired
     protected M mapper;
+    public void setMapper(M mapper){
+        this.mapper = mapper;
+    }
 
     public T selectOne(T entity) {
         return mapper.selectOne(entity);

File: ace-common/src/main/java/com/github/wxiaoqi/security/common/vo/TreeNode.java
Patch:
@@ -7,8 +7,8 @@
  * Created by Ace on 2017/6/12.
  */
 public class TreeNode {
-    int id;
-    int parentId;
+    protected int id;
+    protected int parentId;
 
     public List<TreeNode> getChildren() {
         return children;

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/mapper/MenuMapper.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.wxiaoqi.security.admin.mapper;
 
 import com.github.wxiaoqi.security.admin.entity.Menu;
-import org.magic.frame.common.mapper.CommonMapper;
+import tk.mybatis.mapper.common.Mapper;
 
-public interface MenuMapper extends CommonMapper<Menu> {
+public interface MenuMapper extends Mapper<Menu> {
 }
\ No newline at end of file

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/mapper/UserMapper.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.wxiaoqi.security.admin.mapper;
 
 import com.github.wxiaoqi.security.admin.entity.User;
-import org.magic.frame.common.mapper.CommonMapper;
+import tk.mybatis.mapper.common.Mapper;
 
-public interface UserMapper extends CommonMapper<User> {
+public interface UserMapper extends Mapper<User> {
 }
\ No newline at end of file

File: ace-admin/src/main/java/com/github/wxiaoqi/security/admin/vo/MenuTree.java
Patch:
@@ -1,11 +1,11 @@
 package com.github.wxiaoqi.security.admin.vo;
 
-import com.github.wxiaoqi.security.common.vo.Node;
+import com.github.wxiaoqi.security.common.vo.TreeNode;
 
 /**
  * Created by Ace on 2017/6/12.
  */
-public class MenuTree extends Node {
+public class MenuTree extends TreeNode {
     String icon;
     String title;
     String href;

