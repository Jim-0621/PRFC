File: androidx/skin-support/src/main/java/skin/support/app/SkinActivityLifecycle.java
Patch:
@@ -10,13 +10,13 @@
 import java.lang.ref.WeakReference;
 import java.util.WeakHashMap;
 
-import androidx.core.view.LayoutInflaterCompat;
 import skin.support.SkinCompatManager;
 import skin.support.annotation.Skinable;
 import skin.support.content.res.SkinCompatResources;
 import skin.support.observe.SkinObservable;
 import skin.support.observe.SkinObserver;
 import skin.support.utils.Slog;
+import skin.support.view.LayoutInflaterCompat;
 import skin.support.widget.SkinCompatSupportable;
 import skin.support.content.res.SkinCompatThemeUtils;
 

File: androidx/skin-support/src/main/java/skin/support/app/SkinCompatDelegate.java
Patch:
@@ -1,7 +1,6 @@
 package skin.support.app;
 
 import android.content.Context;
-import androidx.annotation.NonNull;
 import android.util.AttributeSet;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -11,6 +10,7 @@
 import java.util.concurrent.CopyOnWriteArrayList;
 
 import skin.support.SkinCompatManager;
+import skin.support.annotation.NonNull;
 import skin.support.widget.SkinCompatSupportable;
 
 /**

File: androidx/skin-support/src/main/java/skin/support/app/SkinLayoutInflater.java
Patch:
@@ -4,7 +4,7 @@
 import android.util.AttributeSet;
 import android.view.View;
 
-import androidx.annotation.NonNull;
+import skin.support.annotation.NonNull;
 
 /**
  * Created by ximsfei on 2017/1/13.

File: androidx/skin-support/src/main/java/skin/support/content/res/ColorState.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.graphics.Color;
-import androidx.annotation.ColorRes;
 import android.text.TextUtils;
 
 import org.json.JSONException;
@@ -12,6 +11,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import skin.support.annotation.ColorRes;
 import skin.support.exception.SkinCompatException;
 import skin.support.utils.Slog;
 

File: androidx/skin-support/src/main/java/skin/support/content/res/SkinCompatResources.java
Patch:
@@ -7,8 +7,6 @@
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 
-import androidx.annotation.AnyRes;
-
 import android.os.Build;
 import android.text.TextUtils;
 import android.util.TypedValue;
@@ -17,6 +15,7 @@
 import java.util.List;
 
 import skin.support.SkinCompatManager;
+import skin.support.annotation.AnyRes;
 
 public class SkinCompatResources {
     private static volatile SkinCompatResources sInstance;

File: androidx/skin-support/src/main/java/skin/support/content/res/SkinCompatUserThemeManager.java
Patch:
@@ -7,8 +7,6 @@
 import android.graphics.Matrix;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
-import androidx.annotation.ColorRes;
-import androidx.annotation.DrawableRes;
 import android.text.TextUtils;
 
 import org.json.JSONArray;
@@ -21,6 +19,8 @@
 import java.util.WeakHashMap;
 
 import skin.support.SkinCompatManager;
+import skin.support.annotation.ColorRes;
+import skin.support.annotation.DrawableRes;
 import skin.support.utils.ImageUtils;
 import skin.support.utils.SkinPreference;
 import skin.support.utils.Slog;

File: androidx/skin-support/src/main/java/skin/support/content/res/SkinCompatUserThemeManager.java
Patch:
@@ -86,9 +86,9 @@ private void startLoadFromSharedPreferences() throws JSONException {
                     }
                 }
             }
-            mColorEmpty = mColorNameStateMap.isEmpty();
-            mDrawableEmpty = mDrawablePathAndAngleMap.isEmpty();
         }
+        mColorEmpty = mColorNameStateMap.isEmpty();
+        mDrawableEmpty = mDrawablePathAndAngleMap.isEmpty();
     }
 
     public void apply() {

File: demo/skin-androidx-app/src/main/java/com/ximsfei/skindemo/App.java
Patch:
@@ -31,7 +31,7 @@ public void onCreate() {
 //        SkinCompatManager.init(this).loadSkin();
 //        SkinCompatManager.init(this)
         // 框架换肤日志打印
-        Slog.DEBUG = true;
+        Slog.DEBUG = BuildConfig.DEBUG;
         SkinCompatManager.withoutActivity(this)
                 .addStrategy(new CustomSDCardLoader())          // 自定义加载策略，指定SDCard路径
                 .addStrategy(new ZipSDCardLoader())             // 自定义加载策略，获取zip包中的资源

File: androidx/skin-support-appcompat/src/main/java/skin/support/widget/SkinCompatImageHelper.java
Patch:
@@ -37,6 +37,7 @@ public void loadFromAttributes(AttributeSet attrs, int defStyleAttr) {
 
     public void setImageResource(int resId) {
         mSrcResId = resId;
+        mSrcCompatResId = INVALID_ID;
         applySkin();
     }
 

File: androidx/skin-support/src/main/java/skin/support/content/res/SkinCompatResources.java
Patch:
@@ -108,7 +108,7 @@ public ColorStateList getColorStateList(int resId) {
         return getColorStateList(SkinCompatManager.getInstance().getContext(), resId);
     }
 
-    int getTargetResId(Context context, int resId) {
+    public int getTargetResId(Context context, int resId) {
         try {
             String resName = null;
             if (mStrategy != null) {

File: androidx/skin-support/src/main/java/skin/support/app/SkinCompatDelegate.java
Patch:
@@ -7,8 +7,8 @@
 import android.view.View;
 
 import java.lang.ref.WeakReference;
-import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 
 import skin.support.SkinCompatManager;
 import skin.support.widget.SkinCompatSupportable;
@@ -20,7 +20,7 @@
 public class SkinCompatDelegate implements LayoutInflater.Factory2 {
     private final Context mContext;
     private SkinCompatViewInflater mSkinCompatViewInflater;
-    private List<WeakReference<SkinCompatSupportable>> mSkinHelpers = new ArrayList<>();
+    private List<WeakReference<SkinCompatSupportable>> mSkinHelpers = new CopyOnWriteArrayList<>();
 
     private SkinCompatDelegate(Context context) {
         mContext = context;

File: android-support/skin-support-design/src/main/java/skin/support/design/widget/SkinMaterialTextInputLayout.java
Patch:
@@ -86,7 +86,7 @@ private void applyCounterTextColorResource() {
             if (counterView != null) {
 //                SkinLog.e(TAG, "mCounterTextColor = " +Integer.toHexString(SkinCompatResources.getInstance().getColor(mCounterTextColorResId)));
                 counterView.setTextColor(SkinCompatResources.getColor(getContext(), mCounterTextColorResId));
-                updateEditTextBackground();
+                updateEditTextBackgroundInternal();
             }
         }
     }
@@ -133,7 +133,7 @@ private void applyErrorTextColorResource() {
             TextView errorView = getErrorView();
             if (errorView != null) {
                 errorView.setTextColor(SkinCompatResources.getColor(getContext(), mErrorTextColorResId));
-                updateEditTextBackground();
+                updateEditTextBackgroundInternal();
             }
         }
     }
@@ -149,7 +149,7 @@ private TextView getErrorView() {
         return null;
     }
 
-    private void updateEditTextBackground() {
+    private void updateEditTextBackgroundInternal() {
         try {
             Method updateEditTextBackground = TextInputLayout.class.getDeclaredMethod("updateEditTextBackground");
             updateEditTextBackground.setAccessible(true);

File: androidx/skin-support-design/src/main/java/skin/support/design/widget/SkinMaterialTextInputLayout.java
Patch:
@@ -85,7 +85,7 @@ private void applyCounterTextColorResource() {
             TextView counterView = getCounterView();
             if (counterView != null) {
                 counterView.setTextColor(SkinCompatResources.getColor(getContext(), mCounterTextColorResId));
-                updateEditTextBackground();
+                updateEditTextBackgroundInternal();
             }
         }
     }
@@ -132,7 +132,7 @@ private void applyErrorTextColorResource() {
             TextView errorView = getErrorView();
             if (errorView != null) {
                 errorView.setTextColor(SkinCompatResources.getColor(getContext(), mErrorTextColorResId));
-                updateEditTextBackground();
+                updateEditTextBackgroundInternal();
             }
         }
     }
@@ -148,7 +148,7 @@ private TextView getErrorView() {
         return null;
     }
 
-    private void updateEditTextBackground() {
+    private void updateEditTextBackgroundInternal() {
         try {
             Method updateEditTextBackground = TextInputLayout.class.getDeclaredMethod("updateEditTextBackground");
             updateEditTextBackground.setAccessible(true);

File: androidx/skin-support/src/main/java/skin/support/SkinCompatManager.java
Patch:
@@ -394,7 +394,7 @@ protected String doInBackground(String... params) {
                     String skinName = mStrategy.loadSkinInBackground(mAppContext, params[0]);
                     if (TextUtils.isEmpty(skinName)) {
                         SkinCompatResources.getInstance().reset(mStrategy);
-                        return null;
+                        return "";
                     }
                     return params[0];
                 }

File: android-support/skin-support/src/main/java/skin/support/SkinCompatManager.java
Patch:
@@ -394,6 +394,7 @@ protected String doInBackground(String... params) {
                     String skinName = mStrategy.loadSkinInBackground(mAppContext, params[0]);
                     if (TextUtils.isEmpty(skinName)) {
                         SkinCompatResources.getInstance().reset(mStrategy);
+                        return null;
                     }
                     return params[0];
                 }

File: android-support/skin-support-appcompat/src/main/java/skin/support/app/SkinCompatActivity.java
Patch:
@@ -26,7 +26,7 @@ public class SkinCompatActivity extends AppCompatActivity implements SkinObserve
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
-        LayoutInflaterCompat.setFactory(getLayoutInflater(), getSkinDelegate());
+        LayoutInflaterCompat.setFactory2(getLayoutInflater(), getSkinDelegate());
         super.onCreate(savedInstanceState);
         updateStatusBarColor();
         updateWindowBackground();

File: android-support/skin-support/src/main/java/skin/support/content/res/SkinCompatResources.java
Patch:
@@ -105,7 +105,7 @@ public ColorStateList getColorStateList(int resId) {
         return getColorStateList(SkinCompatManager.getInstance().getContext(), resId);
     }
 
-    private int getTargetResId(Context context, int resId) {
+    int getTargetResId(Context context, int resId) {
         try {
             String resName = null;
             if (mStrategy != null) {

File: android-support/skin-support-cardview/src/main/java/skin/support/widget/SkinCompatCardView.java
Patch:
@@ -40,6 +40,7 @@ public SkinCompatCardView(Context context, AttributeSet attrs, int defStyleAttr)
             mThemeColorBackgroundResId = aa.getResourceId(0, INVALID_ID);
             aa.recycle();
         }
+        a.recycle();
         applyBackgroundColorResource();
     }
 

File: android-support/skin-support/src/main/java/skin/support/SkinCompatManager.java
Patch:
@@ -19,7 +19,6 @@
 
 import skin.support.app.SkinActivityLifecycle;
 import skin.support.app.SkinLayoutInflater;
-import skin.support.content.res.SkinCompatColorManager;
 import skin.support.load.SkinAssetsLoader;
 import skin.support.load.SkinBuildInLoader;
 import skin.support.load.SkinNoneLoader;

File: android-support/skin-support/src/main/java/skin/support/content/res/SkinCompatDrawableManager.java
Patch:
@@ -41,7 +41,7 @@
 import static skin.support.content.res.SkinCompatThemeUtils.getThemeAttrColor;
 import static skin.support.content.res.SkinCompatThemeUtils.getThemeAttrColorStateList;
 
-public final class SkinCompatDrawableManager {
+final class SkinCompatDrawableManager {
     private interface InflateDelegate {
         Drawable createFromXmlInner(@NonNull Context context, @NonNull XmlPullParser parser,
                                     @NonNull AttributeSet attrs, @Nullable Resources.Theme theme);

File: android-support/skin-support/src/main/java/skin/support/content/res/SkinCompatThemeUtils.java
Patch:
@@ -9,8 +9,6 @@
 import android.support.v4.graphics.ColorUtils;
 import android.util.TypedValue;
 
-import skin.support.content.res.SkinCompatResources;
-
 import static skin.support.widget.SkinCompatHelper.INVALID_ID;
 
 /**

File: android-support/skin-support/src/main/java/skin/support/load/SkinNoneLoader.java
Patch:
@@ -4,7 +4,6 @@
 
 import skin.support.SkinCompatManager;
 import skin.support.SkinCompatManager.SkinLoaderStrategy;
-import skin.support.content.res.SkinCompatResources;
 
 public class SkinNoneLoader implements SkinLoaderStrategy {
     @Override

File: android-support/skin-support/src/main/java/skin/support/utils/SkinPreference.java
Patch:
@@ -55,7 +55,7 @@ public SkinPreference setSkinStrategy(int strategy) {
     }
 
     public int getSkinStrategy() {
-        return mPref.getInt(KEY_SKIN_STRATEGY, SkinCompatManager.SKIN_LOADER_STRATEGY_ASSETS);
+        return mPref.getInt(KEY_SKIN_STRATEGY, SkinCompatManager.SKIN_LOADER_STRATEGY_NONE);
     }
 
     public SkinPreference setColors(String colors) {

File: demo/skin-demo/src/main/java/com/ximsfei/skindemo/base/BaseActivity.java
Patch:
@@ -4,7 +4,6 @@
 import android.support.annotation.NonNull;
 import android.support.design.widget.BottomNavigationView;
 import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
 import android.view.MenuItem;
 
 import com.ximsfei.skindemo.activities.ColorPickerActivity;

File: android-support/skin-support/src/main/java/skin/support/SkinCompatManager.java
Patch:
@@ -19,7 +19,6 @@
 
 import skin.support.app.SkinActivityLifecycle;
 import skin.support.app.SkinLayoutInflater;
-import skin.support.content.res.SkinCompatColorManager;
 import skin.support.load.SkinAssetsLoader;
 import skin.support.load.SkinBuildInLoader;
 import skin.support.load.SkinNoneLoader;

File: android-support/skin-support/src/main/java/skin/support/content/res/SkinCompatDrawableManager.java
Patch:
@@ -41,7 +41,7 @@
 import static skin.support.content.res.SkinCompatThemeUtils.getThemeAttrColor;
 import static skin.support.content.res.SkinCompatThemeUtils.getThemeAttrColorStateList;
 
-public final class SkinCompatDrawableManager {
+final class SkinCompatDrawableManager {
     private interface InflateDelegate {
         Drawable createFromXmlInner(@NonNull Context context, @NonNull XmlPullParser parser,
                                     @NonNull AttributeSet attrs, @Nullable Resources.Theme theme);

File: android-support/skin-support/src/main/java/skin/support/content/res/SkinCompatThemeUtils.java
Patch:
@@ -9,8 +9,6 @@
 import android.support.v4.graphics.ColorUtils;
 import android.util.TypedValue;
 
-import skin.support.content.res.SkinCompatResources;
-
 import static skin.support.widget.SkinCompatHelper.INVALID_ID;
 
 /**

File: android-support/skin-support/src/main/java/skin/support/load/SkinNoneLoader.java
Patch:
@@ -4,7 +4,6 @@
 
 import skin.support.SkinCompatManager;
 import skin.support.SkinCompatManager.SkinLoaderStrategy;
-import skin.support.content.res.SkinCompatResources;
 
 public class SkinNoneLoader implements SkinLoaderStrategy {
     @Override

File: android-support/skin-support/src/main/java/skin/support/utils/SkinPreference.java
Patch:
@@ -55,7 +55,7 @@ public SkinPreference setSkinStrategy(int strategy) {
     }
 
     public int getSkinStrategy() {
-        return mPref.getInt(KEY_SKIN_STRATEGY, SkinCompatManager.SKIN_LOADER_STRATEGY_ASSETS);
+        return mPref.getInt(KEY_SKIN_STRATEGY, SkinCompatManager.SKIN_LOADER_STRATEGY_NONE);
     }
 
     public SkinPreference setColors(String colors) {

File: demo/skin-demo/src/main/java/com/ximsfei/skindemo/base/BaseActivity.java
Patch:
@@ -4,7 +4,6 @@
 import android.support.annotation.NonNull;
 import android.support.design.widget.BottomNavigationView;
 import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
 import android.view.MenuItem;
 
 import com.ximsfei.skindemo.activities.ColorPickerActivity;

File: android-support/skin-support-cardview/src/main/java/skin/support/widget/SkinCompatCardView.java
Patch:
@@ -48,10 +48,10 @@ private void applyBackgroundColorResource() {
         mThemeColorBackgroundResId = SkinCompatHelper.checkResourceId(mThemeColorBackgroundResId);
         ColorStateList backgroundColor;
         if (mBackgroundColorResId != INVALID_ID) {
-            backgroundColor = SkinCompatResources.getInstance().getColorStateList(mBackgroundColorResId);
+            backgroundColor = SkinCompatResources.getColorStateList(getContext(), mBackgroundColorResId);
             setCardBackgroundColor(backgroundColor);
         } else if (mThemeColorBackgroundResId != INVALID_ID) {
-            int themeColorBackground = SkinCompatResources.getInstance().getColor(mThemeColorBackgroundResId);
+            int themeColorBackground = SkinCompatResources.getColor(getContext(), mThemeColorBackgroundResId);
             final float[] hsv = new float[3];
             Color.colorToHSV(themeColorBackground, hsv);
             backgroundColor = ColorStateList.valueOf(hsv[2] > 0.5f

File: android-support/skin-support-design/src/main/java/skin/support/design/widget/SkinMaterialFloatingActionButton.java
Patch:
@@ -49,14 +49,14 @@ public SkinMaterialFloatingActionButton(Context context, AttributeSet attrs, int
     private void applyBackgroundTintResource() {
         mBackgroundTintResId = SkinCompatHelper.checkResourceId(mBackgroundTintResId);
         if (mBackgroundTintResId != INVALID_ID) {
-            setBackgroundTintList(SkinCompatResources.getInstance().getColorStateList(mBackgroundTintResId));
+            setBackgroundTintList(SkinCompatResources.getColorStateList(getContext(), mBackgroundTintResId));
         }
     }
 
     private void applyRippleColorResource() {
         mRippleColorResId = SkinCompatHelper.checkResourceId(mRippleColorResId);
         if (mRippleColorResId != INVALID_ID) {
-            setRippleColor(SkinCompatResources.getInstance().getColor(mRippleColorResId));
+            setRippleColor(SkinCompatResources.getColor(getContext(), mRippleColorResId));
         }
     }
 

File: android-support/skin-support-design/src/main/java/skin/support/design/widget/SkinMaterialTabLayout.java
Patch:
@@ -65,15 +65,15 @@ public SkinMaterialTabLayout(Context context, AttributeSet attrs, int defStyleAt
     public void applySkin() {
         mTabIndicatorColorResId = SkinCompatHelper.checkResourceId(mTabIndicatorColorResId);
         if (mTabIndicatorColorResId != INVALID_ID) {
-            setSelectedTabIndicatorColor(SkinCompatResources.getInstance().getColor(mTabIndicatorColorResId));
+            setSelectedTabIndicatorColor(SkinCompatResources.getColor(getContext(), mTabIndicatorColorResId));
         }
         mTabTextColorsResId = SkinCompatHelper.checkResourceId(mTabTextColorsResId);
         if (mTabTextColorsResId != INVALID_ID) {
-            setTabTextColors(SkinCompatResources.getInstance().getColorStateList(mTabTextColorsResId));
+            setTabTextColors(SkinCompatResources.getColorStateList(getContext(), mTabTextColorsResId));
         }
         mTabSelectedTextColorResId = SkinCompatHelper.checkResourceId(mTabSelectedTextColorResId);
         if (mTabSelectedTextColorResId != INVALID_ID) {
-            int selected = SkinCompatResources.getInstance().getColor(mTabSelectedTextColorResId);
+            int selected = SkinCompatResources.getColor(getContext(), mTabSelectedTextColorResId);
             if (getTabTextColors() != null) {
                 setTabTextColors(getTabTextColors().getDefaultColor(), selected);
             }

File: android-support/skin-support/src/main/java/skin/support/app/SkinActivityLifecycle.java
Patch:
@@ -100,9 +100,9 @@ private void updateStatusBarColor(Activity activity) {
             int statusBarColorResId = SkinCompatThemeUtils.getStatusBarColorResId(activity);
             int colorPrimaryDarkResId = SkinCompatThemeUtils.getColorPrimaryDarkResId(activity);
             if (checkResourceId(statusBarColorResId) != INVALID_ID) {
-                activity.getWindow().setStatusBarColor(SkinCompatResources.getInstance().getColor(statusBarColorResId));
+                activity.getWindow().setStatusBarColor(SkinCompatResources.getColor(activity, statusBarColorResId));
             } else if (checkResourceId(colorPrimaryDarkResId) != INVALID_ID) {
-                activity.getWindow().setStatusBarColor(SkinCompatResources.getInstance().getColor(colorPrimaryDarkResId));
+                activity.getWindow().setStatusBarColor(SkinCompatResources.getColor(activity, colorPrimaryDarkResId));
             }
         }
     }
@@ -111,7 +111,7 @@ private void updateWindowBackground(Activity activity) {
         if (SkinCompatManager.getInstance().isSkinWindowBackgroundEnable()) {
             int windowBackgroundResId = SkinCompatThemeUtils.getWindowBackgroundResId(activity);
             if (checkResourceId(windowBackgroundResId) != INVALID_ID) {
-                Drawable drawable = SkinCompatResources.getInstance().getDrawable(activity, windowBackgroundResId);
+                Drawable drawable = SkinCompatResources.getDrawableCompat(activity, windowBackgroundResId);
                 if (drawable != null) {
                     activity.getWindow().setBackgroundDrawable(drawable);
                 }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatAutoCompleteTextView.java
Patch:
@@ -56,7 +56,7 @@ public void setDropDownBackgroundResource(@DrawableRes int resId) {
     private void applyDropDownBackgroundResource() {
         mDropDownBackgroundResId = SkinCompatHelper.checkResourceId(mDropDownBackgroundResId);
         if (mDropDownBackgroundResId != INVALID_ID) {
-            Drawable drawable = SkinCompatResources.getInstance().getDrawable(getContext(), mDropDownBackgroundResId);
+            Drawable drawable = SkinCompatResources.getDrawableCompat(getContext(), mDropDownBackgroundResId);
             if (drawable != null) {
                 setDropDownBackgroundDrawable(drawable);
             }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatBackgroundHelper.java
Patch:
@@ -46,7 +46,7 @@ public void applySkin() {
         if (mBackgroundResId == INVALID_ID) {
             return;
         }
-        Drawable drawable = SkinCompatResources.getInstance().getDrawable(mView.getContext(), mBackgroundResId);
+        Drawable drawable = SkinCompatResources.getDrawableCompat(mView.getContext(), mBackgroundResId);
         if (drawable != null) {
             int paddingLeft = mView.getPaddingLeft();
             int paddingTop = mView.getPaddingTop();

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatCheckedTextView.java
Patch:
@@ -105,7 +105,7 @@ public void applySkin() {
     private void applyCheckMark() {
         mCheckMarkResId = SkinCompatHelper.checkResourceId(mCheckMarkResId);
         if (mCheckMarkResId != INVALID_ID) {
-            setCheckMarkDrawable(SkinCompatResources.getInstance().getDrawable(getContext(), mCheckMarkResId));
+            setCheckMarkDrawable(SkinCompatResources.getDrawableCompat(getContext(), mCheckMarkResId));
         }
     }
 }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatCompoundButtonHelper.java
Patch:
@@ -57,11 +57,11 @@ public void setButtonDrawable(int resId) {
     public void applySkin() {
         mButtonResourceId = SkinCompatHelper.checkResourceId(mButtonResourceId);
         if (mButtonResourceId != INVALID_ID) {
-            mView.setButtonDrawable(SkinCompatResources.getInstance().getDrawable(mView.getContext(), mButtonResourceId));
+            mView.setButtonDrawable(SkinCompatResources.getDrawableCompat(mView.getContext(), mButtonResourceId));
         }
         mButtonTintResId = SkinCompatHelper.checkResourceId(mButtonTintResId);
         if (mButtonTintResId != INVALID_ID) {
-            CompoundButtonCompat.setButtonTintList(mView, SkinCompatResources.getInstance().getColorStateList(mButtonTintResId));
+            CompoundButtonCompat.setButtonTintList(mView, SkinCompatResources.getColorStateList(mView.getContext(), mButtonTintResId));
         }
     }
 }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatImageHelper.java
Patch:
@@ -43,7 +43,7 @@ public void setImageResource(int resId) {
     public void applySkin() {
         mSrcCompatResId = checkResourceId(mSrcCompatResId);
         if (mSrcCompatResId != INVALID_ID) {
-            Drawable drawable = SkinCompatResources.getInstance().getDrawable(mView.getContext(), mSrcCompatResId);
+            Drawable drawable = SkinCompatResources.getDrawableCompat(mView.getContext(), mSrcCompatResId);
             if (drawable != null) {
                 mView.setImageDrawable(drawable);
             }
@@ -52,7 +52,7 @@ public void applySkin() {
             if (mSrcResId == INVALID_ID) {
                 return;
             }
-            Drawable drawable = SkinCompatResources.getInstance().getDrawable(mView.getContext(), mSrcResId);
+            Drawable drawable = SkinCompatResources.getDrawableCompat(mView.getContext(), mSrcResId);
             if (drawable != null) {
                 mView.setImageDrawable(drawable);
             }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatMultiAutoCompleteTextView.java
Patch:
@@ -56,7 +56,7 @@ public void setDropDownBackgroundResource(@DrawableRes int resId) {
     private void applyDropDownBackgroundResource() {
         mDropDownBackgroundResId = SkinCompatHelper.checkResourceId(mDropDownBackgroundResId);
         if (mDropDownBackgroundResId != INVALID_ID) {
-            Drawable drawable = SkinCompatResources.getInstance().getDrawable(getContext(), mDropDownBackgroundResId);
+            Drawable drawable = SkinCompatResources.getDrawableCompat(getContext(), mDropDownBackgroundResId);
             if (drawable != null) {
                 setDropDownBackgroundDrawable(drawable);
             }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatProgressBarHelper.java
Patch:
@@ -133,20 +133,20 @@ private Shape getDrawableShape() {
     public void applySkin() {
         mIndeterminateDrawableResId = checkResourceId(mIndeterminateDrawableResId);
         if (mIndeterminateDrawableResId != INVALID_ID) {
-            Drawable drawable = SkinCompatResources.getInstance().getDrawable(mView.getContext(), mIndeterminateDrawableResId);
+            Drawable drawable = SkinCompatResources.getDrawableCompat(mView.getContext(), mIndeterminateDrawableResId);
             drawable.setBounds(mView.getIndeterminateDrawable().getBounds());
             mView.setIndeterminateDrawable(tileifyIndeterminate(drawable));
         }
 
         mProgressDrawableResId = checkProgressDrawableResId(mProgressDrawableResId);
         if (mProgressDrawableResId != INVALID_ID) {
-            Drawable drawable = SkinCompatResources.getInstance().getDrawable(mView.getContext(), mProgressDrawableResId);
+            Drawable drawable = SkinCompatResources.getDrawableCompat(mView.getContext(), mProgressDrawableResId);
             mView.setProgressDrawable(tileify(drawable, false));
         }
         if (Build.VERSION.SDK_INT > 21) {
             mIndeterminateTintResId = checkResourceId(mIndeterminateTintResId);
             if (mIndeterminateTintResId != INVALID_ID) {
-                mView.setIndeterminateTintList(SkinCompatResources.getInstance().getColorStateList(mIndeterminateTintResId));
+                mView.setIndeterminateTintList(SkinCompatResources.getColorStateList(mView.getContext(), mIndeterminateTintResId));
             }
         }
     }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatSeekBarHelper.java
Patch:
@@ -57,7 +57,7 @@ public void applySkin() {
         super.applySkin();
         mThumbResId = checkResourceId(mThumbResId);
         if (mThumbResId != INVALID_ID) {
-            mView.setThumb(SkinCompatResources.getInstance().getDrawable(mView.getContext(), mThumbResId));
+            mView.setThumb(SkinCompatResources.getDrawableCompat(mView.getContext(), mThumbResId));
         }
     }
 }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatSpinner.java
Patch:
@@ -101,7 +101,7 @@ public void setPopupBackgroundResource(@DrawableRes int resId) {
     private void applyPopupBackground() {
         mPopupBackgroundResId = checkResourceId(mPopupBackgroundResId);
         if (mPopupBackgroundResId != INVALID_ID) {
-            setPopupBackgroundDrawable(SkinCompatResources.getInstance().getDrawable(getContext(), mPopupBackgroundResId));
+            setPopupBackgroundDrawable(SkinCompatResources.getDrawableCompat(getContext(), mPopupBackgroundResId));
         }
     }
 

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatThemeUtils.java
Patch:
@@ -9,7 +9,6 @@
 import android.support.v4.graphics.ColorUtils;
 import android.util.TypedValue;
 
-import skin.support.SkinCompatManager;
 import skin.support.content.res.SkinCompatResources;
 
 import static skin.support.widget.SkinCompatHelper.INVALID_ID;
@@ -82,7 +81,7 @@ public static int getThemeAttrColor(Context context, int attr) {
         try {
             int resId = a.getResourceId(0, 0);
             if (resId != 0) {
-                return SkinCompatResources.getInstance().getColor(resId);
+                return SkinCompatResources.getColor(context, resId);
             }
             return 0;
         } finally {
@@ -96,7 +95,7 @@ public static ColorStateList getThemeAttrColorStateList(Context context, int att
         try {
             int resId = a.getResourceId(0, 0);
             if (resId != 0) {
-                return SkinCompatResources.getInstance().getColorStateList(resId);
+                return SkinCompatResources.getColorStateList(context, resId);
             }
             return null;
         } finally {

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatToolbar.java
Patch:
@@ -67,21 +67,21 @@ public SkinCompatToolbar(Context context, @Nullable AttributeSet attrs, int defS
     private void applyTitleTextColor() {
         mTitleTextColorResId = SkinCompatHelper.checkResourceId(mTitleTextColorResId);
         if (mTitleTextColorResId != INVALID_ID) {
-            setTitleTextColor(SkinCompatResources.getInstance().getColor(mTitleTextColorResId));
+            setTitleTextColor(SkinCompatResources.getColor(getContext(), mTitleTextColorResId));
         }
     }
 
     private void applySubtitleTextColor() {
         mSubtitleTextColorResId = SkinCompatHelper.checkResourceId(mSubtitleTextColorResId);
         if (mSubtitleTextColorResId != INVALID_ID) {
-            setSubtitleTextColor(SkinCompatResources.getInstance().getColor(mSubtitleTextColorResId));
+            setSubtitleTextColor(SkinCompatResources.getColor(getContext(), mSubtitleTextColorResId));
         }
     }
 
     private void applyNavigationIcon() {
         mNavigationIconResId = SkinCompatHelper.checkResourceId(mNavigationIconResId);
         if (mNavigationIconResId != INVALID_ID) {
-            setNavigationIcon(SkinCompatResources.getInstance().getDrawable(getContext(), mNavigationIconResId));
+            setNavigationIcon(SkinCompatResources.getDrawableCompat(getContext(), mNavigationIconResId));
         }
     }
 

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatCheckedTextView.java
Patch:
@@ -1,9 +1,9 @@
 package skin.support.widget;
 
 import android.content.Context;
+import android.content.res.TypedArray;
 import android.support.annotation.DrawableRes;
 import android.support.v7.widget.AppCompatCheckedTextView;
-import android.support.v7.widget.TintTypedArray;
 import android.util.AttributeSet;
 
 import skin.support.content.res.SkinCompatResources;
@@ -39,8 +39,7 @@ public SkinCompatCheckedTextView(Context context, AttributeSet attrs, int defSty
         mTextHelper = SkinCompatTextHelper.create(this);
         mTextHelper.loadFromAttributes(attrs, defStyleAttr);
 
-        TintTypedArray a = TintTypedArray.obtainStyledAttributes(getContext(), attrs,
-                TINT_ATTRS, defStyleAttr, 0);
+        TypedArray a = context.obtainStyledAttributes(attrs, TINT_ATTRS, defStyleAttr, 0);
         mCheckMarkResId = a.getResourceId(0, INVALID_ID);
         a.recycle();
         applyCheckMark();

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatSeekBarHelper.java
Patch:
@@ -1,6 +1,6 @@
 package skin.support.widget;
 
-import android.support.v7.widget.TintTypedArray;
+import android.content.res.TypedArray;
 import android.util.AttributeSet;
 import android.widget.SeekBar;
 
@@ -24,8 +24,7 @@ public SkinCompatSeekBarHelper(SeekBar view) {
     void loadFromAttributes(AttributeSet attrs, int defStyleAttr) {
         super.loadFromAttributes(attrs, defStyleAttr);
 
-        TintTypedArray a = TintTypedArray.obtainStyledAttributes(mView.getContext(), attrs,
-                R.styleable.AppCompatSeekBar, defStyleAttr, 0);
+        TypedArray a = mView.getContext().obtainStyledAttributes(attrs, R.styleable.AppCompatSeekBar, defStyleAttr, 0);
         mThumbResId = a.getResourceId(R.styleable.AppCompatSeekBar_android_thumb, INVALID_ID);
 //        final Drawable drawable = a.getDrawableIfKnown(R.styleable.AppCompatSeekBar_android_thumb);
 //        if (drawable != null) {

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatTextHelper.java
Patch:
@@ -6,7 +6,6 @@
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.support.annotation.DrawableRes;
-import android.support.v7.widget.TintTypedArray;
 import android.util.AttributeSet;
 import android.widget.TextView;
 

File: android/skin/src/main/java/skin/support/widget/SkinCompatTextHelper.java
Patch:
@@ -167,8 +167,8 @@ public int getTextColorResId() {
     }
 
     public void applySkin() {
+        applyCompoundDrawablesRelativeResource();
         applyTextColorResource();
         applyTextColorHintResource();
-        applyCompoundDrawablesResource();
     }
 }

File: android-support/skin-support/src/main/java/skin/support/widget/SkinCompatTextHelper.java
Patch:
@@ -183,8 +183,8 @@ public int getTextColorResId() {
     }
 
     public void applySkin() {
+        applyCompoundDrawablesRelativeResource();
         applyTextColorResource();
         applyTextColorHintResource();
-        applyCompoundDrawablesResource();
     }
 }

File: skin-support/src/main/java/skin/support/content/res/SkinCompatResources.java
Patch:
@@ -110,7 +110,8 @@ public ColorStateList getColorStateList(int resId) {
             return colorStateList;
         }
 
-        int targetResId = getTargetResId(resId, "color");
+        String resType = mAppContext.getResources().getResourceTypeName(resId);
+        int targetResId = getTargetResId(resId, resType);
         return targetResId == 0 ? colorStateList : mResources.getColorStateList(targetResId);
     }
 

File: skin-support/src/main/java/skin/support/SkinCompatManager.java
Patch:
@@ -343,8 +343,8 @@ protected void onPostExecute(String skinName) {
             synchronized (mLock) {
                 // skinName 为""时，恢复默认皮肤
                 if (skinName != null) {
-                    notifyUpdateSkin();
                     SkinPreference.getInstance().setSkinName(skinName).setSkinStrategy(mStrategy.getType()).commitEditor();
+                    notifyUpdateSkin();
                     if (mListener != null) mListener.onSuccess();
                 } else {
                     SkinPreference.getInstance().setSkinName("").setSkinStrategy(SKIN_LOADER_STRATEGY_NONE).commitEditor();

File: skin-support/src/main/java/skin/support/app/SkinCompatDelegate.java
Patch:
@@ -93,7 +93,7 @@ public static SkinCompatDelegate create(AppCompatActivity appCompatActivity) {
     }
 
     public void applySkin() {
-        if (mSkinHelpers != null || !mSkinHelpers.isEmpty()) {
+        if (mSkinHelpers != null && !mSkinHelpers.isEmpty()) {
             SkinLog.d("size - " + mSkinHelpers.size());
             for (WeakReference ref : mSkinHelpers) {
                 if (ref != null && ref.get() != null) {

File: third-part-support/circleimageview/src/main/java/skin/support/circleimageview/widget/SkinCompatCircleImageView.java
Patch:
@@ -66,7 +66,7 @@ private void applyBorderColorResource() {
     public void setImageResource(@DrawableRes int resId) {
         super.setImageResource(resId);
         if (mImageHelper != null) {
-            mImageHelper.applySkin();
+            mImageHelper.setImageResource(resId);
         }
     }
 

File: skin-support/src/main/java/skin/support/widget/SkinCompatFrameLayout.java
Patch:
@@ -26,10 +26,10 @@ public SkinCompatFrameLayout(Context context, AttributeSet attrs, int defStyleAt
     }
 
     @Override
-    public void setBackgroundResource(int resid) {
-        super.setBackgroundResource(resid);
+    public void setBackgroundResource(int resId) {
+        super.setBackgroundResource(resId);
         if (mBackgroundTintHelper != null) {
-            mBackgroundTintHelper.applySkin();
+            mBackgroundTintHelper.onSetBackgroundResource(resId);
         }
     }
 

File: skin-support/src/main/java/skin/support/widget/SkinCompatLinearLayout.java
Patch:
@@ -26,10 +26,10 @@ public SkinCompatLinearLayout(Context context, AttributeSet attrs, int defStyleA
     }
 
     @Override
-    public void setBackgroundResource(int resid) {
-        super.setBackgroundResource(resid);
+    public void setBackgroundResource(int resId) {
+        super.setBackgroundResource(resId);
         if (mBackgroundTintHelper != null) {
-            mBackgroundTintHelper.applySkin();
+            mBackgroundTintHelper.onSetBackgroundResource(resId);
         }
     }
 

File: skin-support/src/main/java/skin/support/widget/SkinCompatRelativeLayout.java
Patch:
@@ -26,10 +26,10 @@ public SkinCompatRelativeLayout(Context context, AttributeSet attrs, int defStyl
     }
 
     @Override
-    public void setBackgroundResource(int resid) {
-        super.setBackgroundResource(resid);
+    public void setBackgroundResource(int resId) {
+        super.setBackgroundResource(resId);
         if (mBackgroundTintHelper != null) {
-            mBackgroundTintHelper.applySkin();
+            mBackgroundTintHelper.onSetBackgroundResource(resId);
         }
     }
 

File: skin-support/src/main/java/skin/support/widget/SkinCompatView.java
Patch:
@@ -27,10 +27,10 @@ public SkinCompatView(Context context, AttributeSet attrs, int defStyleAttr) {
     }
 
     @Override
-    public void setBackgroundResource(int resid) {
-        super.setBackgroundResource(resid);
+    public void setBackgroundResource(int resId) {
+        super.setBackgroundResource(resId);
         if (mBackgroundTintHelper != null) {
-            mBackgroundTintHelper.applySkin();
+            mBackgroundTintHelper.onSetBackgroundResource(resId);
         }
     }
 

File: skin-app/src/main/java/com/ximsfei/dynamicskindemo/MainActivity.java
Patch:
@@ -5,8 +5,6 @@
 import android.support.design.widget.TabLayout;
 import android.support.v4.app.Fragment;
 import android.support.v4.view.ViewPager;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.view.View;
 import android.view.Window;
@@ -21,7 +19,6 @@
 import java.util.List;
 
 import skin.support.SkinCompatManager;
-import skin.support.app.SkinCompatActivity;
 import skin.support.utils.SkinPreference;
 
 /**

File: skin-app/src/main/java/com/ximsfei/dynamicskindemo/MainActivity.java
Patch:
@@ -5,8 +5,6 @@
 import android.support.design.widget.TabLayout;
 import android.support.v4.app.Fragment;
 import android.support.v4.view.ViewPager;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.view.View;
 import android.view.Window;
@@ -21,7 +19,6 @@
 import java.util.List;
 
 import skin.support.SkinCompatManager;
-import skin.support.app.SkinCompatActivity;
 import skin.support.utils.SkinPreference;
 
 /**

File: skin-support/src/main/java/skin/support/utils/SkinLog.java
Patch:
@@ -1,13 +1,14 @@
 package skin.support.utils;
 
+import android.support.compat.BuildConfig;
 import android.util.Log;
 
 /**
  * Created by ximsfei on 17-1-9.
  */
 
 public class SkinLog {
-    private static boolean DEBUG = true;//BuildConfig.DEBUG;
+    private static boolean DEBUG = BuildConfig.DEBUG;
     private static final String TAG = "Skin-support";
 
     public static void v(String msg) {

File: skin-support/src/main/java/skin/support/utils/SkinLog.java
Patch:
@@ -1,13 +1,14 @@
 package skin.support.utils;
 
+import android.support.compat.BuildConfig;
 import android.util.Log;
 
 /**
  * Created by ximsfei on 17-1-9.
  */
 
 public class SkinLog {
-    private static boolean DEBUG = true;//BuildConfig.DEBUG;
+    private static boolean DEBUG = BuildConfig.DEBUG;
     private static final String TAG = "Skin-support";
 
     public static void v(String msg) {

File: skin-support-design/src/main/java/skin/support/design/widget/SkinCompatFloatingActionButton.java
Patch:
@@ -62,6 +62,8 @@ private void applyRippleColorResource() {
 
     @Override
     public void applySkin() {
+        applyBackgroundTintResource();
+        applyRippleColorResource();
         if (mImageHelper != null) {
             mImageHelper.applySkin();
         }

File: skin-support/src/main/java/skin/support/utils/SkinLog.java
Patch:
@@ -2,14 +2,12 @@
 
 import android.util.Log;
 
-import skin.support.BuildConfig;
-
 /**
  * Created by ximsfei on 17-1-9.
  */
 
 public class SkinLog {
-    private static boolean DEBUG = BuildConfig.DEBUG;
+    private static boolean DEBUG = true;//BuildConfig.DEBUG;
     private static final String TAG = "Skin-support";
 
     public static void v(String msg) {

File: skin-support/src/main/java/skin/support/widget/SkinCompatProgressBarHelper.java
Patch:
@@ -48,6 +48,7 @@ void loadFromAttributes(AttributeSet attrs, int defStyleAttr) {
         mProgressDrawableResId = a.getResourceId(1, INVALID_ID);
 
         a.recycle();
+        applySkin();
     }
 
     /**

