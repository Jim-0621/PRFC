File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDescriptorBuffer.java
Patch:
@@ -29,6 +29,7 @@ public class EXTDescriptorBuffer {
         VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT                       = 1000316006,
         VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT                  = 1000316007,
         VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT                     = 1000316008,
+        VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT      = 1000316009,
         VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT               = 1000316010,
         VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT                           = 1000316011,
         VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT  = 1000316012;
@@ -56,8 +57,6 @@ public class EXTDescriptorBuffer {
 
     public static final int VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT = 0x20000000;
 
-    public static final int VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316009;
-
     protected EXTDescriptorBuffer() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTFragmentDensityMap.java
Patch:
@@ -12,6 +12,7 @@ public final class EXTFragmentDensityMap {
     public static final String VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME = "VK_EXT_fragment_density_map";
 
     public static final int
+        VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT  = 1000044007,
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT   = 1000218000,
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT = 1000218001,
         VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT    = 1000218002;
@@ -40,8 +41,6 @@ public final class EXTFragmentDensityMap {
         VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT           = 0x400000,
         VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT = 0x400000;
 
-    public static final int VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT = 1000044007;
-
     private EXTFragmentDensityMap() {}
 
 }
\ No newline at end of file

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTFullScreenExclusive.java
Patch:
@@ -23,12 +23,11 @@ public class EXTFullScreenExclusive {
 
     public static final int
         VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT         = 1000255000,
+        VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT   = 1000255001,
         VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT = 1000255002;
 
     public static final int VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT = -1000255000;
 
-    public static final int VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT = 1000255001;
-
     public static final int
         VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT                = 0,
         VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT                = 1,

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTGraphicsPipelineLibrary.java
Patch:
@@ -17,8 +17,8 @@ public final class EXTGraphicsPipelineLibrary {
         VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT                = 1000320002;
 
     public static final int
-        VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT = 0x800000,
-        VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT             = 0x400;
+        VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT             = 0x400,
+        VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT = 0x800000;
 
     public static final int VK_PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT = 0x2;
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTImageDrmFormatModifier.java
Patch:
@@ -23,7 +23,8 @@ public class EXTImageDrmFormatModifier {
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT = 1000158002,
         VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT     = 1000158003,
         VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT = 1000158004,
-        VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT           = 1000158005;
+        VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT           = 1000158005,
+        VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT          = 1000158006;
 
     public static final int VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT = 1000158000;
 
@@ -33,8 +34,6 @@ public class EXTImageDrmFormatModifier {
         VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT = 0x200,
         VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT = 0x400;
 
-    public static final int VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT = 1000158006;
-
     protected EXTImageDrmFormatModifier() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTLegacyDithering.java
Patch:
@@ -17,6 +17,8 @@ public final class EXTLegacyDithering {
 
     public static final int VK_RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT = 0x8;
 
+    public static final long VK_PIPELINE_CREATE_2_ENABLE_LEGACY_DITHERING_BIT_EXT = 0x400000000L;
+
     private EXTLegacyDithering() {}
 
 }
\ No newline at end of file

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSwapchainColorspace.java
Patch:
@@ -15,6 +15,7 @@ public final class EXTSwapchainColorspace {
         VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT    = 1000104001,
         VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT    = 1000104002,
         VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT       = 1000104003,
+        VK_COLOR_SPACE_DCI_P3_LINEAR_EXT           = 1000104003,
         VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT        = 1000104004,
         VK_COLOR_SPACE_BT709_LINEAR_EXT            = 1000104005,
         VK_COLOR_SPACE_BT709_NONLINEAR_EXT         = 1000104006,
@@ -25,8 +26,7 @@ public final class EXTSwapchainColorspace {
         VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT         = 1000104011,
         VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT      = 1000104012,
         VK_COLOR_SPACE_PASS_THROUGH_EXT            = 1000104013,
-        VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT = 1000104014,
-        VK_COLOR_SPACE_DCI_P3_LINEAR_EXT           = 1000104003;
+        VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT = 1000104014;
 
     private EXTSwapchainColorspace() {}
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRBufferDeviceAddress.java
Patch:
@@ -17,8 +17,8 @@ public class KHRBufferDeviceAddress {
     public static final String VK_KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME = "VK_KHR_buffer_device_address";
 
     public static final int
-        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = 1000257000,
         VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR                     = 1000244001,
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = 1000257000,
         VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR      = 1000257002,
         VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR    = 1000257003,
         VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR      = 1000257004;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDescriptorUpdateTemplate.java
Patch:
@@ -25,9 +25,9 @@ public class KHRDescriptorUpdateTemplate {
 
     public static final int VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR = 1000085000;
 
-    public static final int VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR = 0;
-
-    public static final int VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR = 1;
+    public static final int
+        VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR   = 0,
+        VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR = 1;
 
     public static final int VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT = 1000085000;
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceCapabilities.java
Patch:
@@ -17,9 +17,9 @@ public class KHRExternalFenceCapabilities {
     public static final String VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME = "VK_KHR_external_fence_capabilities";
 
     public static final int
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR       = 1000071004,
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = 1000112000,
-        VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR           = 1000112001,
-        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR       = 1000071004;
+        VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR           = 1000112001;
 
     public static final int VK_LUID_SIZE_KHR = 8;
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreCapabilities.java
Patch:
@@ -17,9 +17,9 @@ public class KHRExternalSemaphoreCapabilities {
     public static final String VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME = "VK_KHR_external_semaphore_capabilities";
 
     public static final int
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR           = 1000071004,
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = 1000076000,
-        VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR           = 1000076001,
-        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR           = 1000071004;
+        VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR           = 1000076001;
 
     public static final int VK_LUID_SIZE_KHR = 8;
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRFragmentShadingRate.java
Patch:
@@ -26,6 +26,7 @@ public class KHRFragmentShadingRate {
     public static final int VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR = 1000226000;
 
     public static final int
+        VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR  = 1000044006,
         VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR            = 1000226000,
         VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR = 1000226001,
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR = 1000226002,
@@ -42,8 +43,6 @@ public class KHRFragmentShadingRate {
 
     public static final long VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x40000000L;
 
-    public static final int VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = 1000044006;
-
     public static final int
         VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR           = 0x200000,
         VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x200000;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPerformanceQuery.java
Patch:
@@ -47,10 +47,10 @@ public class KHRPerformanceQuery {
 
     public static final int
         VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR = 0,
-        VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR    = 1,
-        VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR        = 2,
         VK_QUERY_SCOPE_COMMAND_BUFFER_KHR               = 0,
+        VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR    = 1,
         VK_QUERY_SCOPE_RENDER_PASS_KHR                  = 1,
+        VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR        = 2,
         VK_QUERY_SCOPE_COMMAND_KHR                      = 2;
 
     public static final int

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRVertexAttributeDivisor.java
Patch:
@@ -12,9 +12,9 @@ public final class KHRVertexAttributeDivisor {
     public static final String VK_KHR_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME = "VK_KHR_vertex_attribute_divisor";
 
     public static final int
-        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR = 1000525000,
         VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR     = 1000190001,
-        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR   = 1000190002;
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR   = 1000190002,
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR = 1000525000;
 
     private KHRVertexAttributeDivisor() {}
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRVideoEncodeAV1.java
Patch:
@@ -26,6 +26,8 @@ public final class KHRVideoEncodeAV1 {
 
     public static final int VK_VIDEO_CODEC_OPERATION_ENCODE_AV1_BIT_KHR = 0x40000;
 
+    public static final int VK_MAX_VIDEO_AV1_REFERENCES_PER_FRAME_KHR = 7;
+
     public static final int
         VK_VIDEO_ENCODE_AV1_PREDICTION_MODE_INTRA_ONLY_KHR              = 0,
         VK_VIDEO_ENCODE_AV1_PREDICTION_MODE_SINGLE_REFERENCE_KHR        = 1,

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRVideoQueue.java
Patch:
@@ -80,9 +80,9 @@ public class KHRVideoQueue {
     public static final int VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR = 0x1;
 
     public static final int
-        VK_QUERY_RESULT_STATUS_ERROR_KHR     = -1,
         VK_QUERY_RESULT_STATUS_NOT_READY_KHR = 0,
-        VK_QUERY_RESULT_STATUS_COMPLETE_KHR  = 1;
+        VK_QUERY_RESULT_STATUS_COMPLETE_KHR  = 1,
+        VK_QUERY_RESULT_STATUS_ERROR_KHR     = -1;
 
     protected KHRVideoQueue() {
         throw new UnsupportedOperationException();

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVFramebufferMixedSamples.java
Patch:
@@ -11,9 +11,9 @@ public final class NVFramebufferMixedSamples {
 
     public static final String VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME = "VK_NV_framebuffer_mixed_samples";
 
-    public static final int VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = 1000152000;
-
-    public static final int VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV = 1000044008;
+    public static final int
+        VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV                   = 1000044008,
+        VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = 1000152000;
 
     public static final int
         VK_COVERAGE_MODULATION_MODE_NONE_NV  = 0,

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVXMultiviewPerViewAttributes.java
Patch:
@@ -11,14 +11,14 @@ public final class NVXMultiviewPerViewAttributes {
 
     public static final String VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME = "VK_NVX_multiview_per_view_attributes";
 
-    public static final int VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = 1000097000;
+    public static final int
+        VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX                       = 1000044009,
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = 1000097000;
 
     public static final int
         VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX      = 0x1,
         VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX = 0x2;
 
-    public static final int VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX = 1000044009;
-
     private NVXMultiviewPerViewAttributes() {}
 
 }
\ No newline at end of file

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceGroupPresentCapabilitiesKHR.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK11.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceDriverProperties.java
Patch:
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK12.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceDriverPropertiesKHR.java
Patch:
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK12.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceGroupProperties.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK11.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceGroupPropertiesKHR.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK11.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceIDProperties.java
Patch:
@@ -17,6 +17,7 @@
 import static org.lwjgl.system.MemoryStack.*;
 
 import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK11.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceIDPropertiesKHR.java
Patch:
@@ -17,6 +17,7 @@
 import static org.lwjgl.system.MemoryStack.*;
 
 import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK11.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceVulkan11Properties.java
Patch:
@@ -17,6 +17,7 @@
 import static org.lwjgl.system.MemoryStack.*;
 
 import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK11.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceVulkan12Properties.java
Patch:
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.vulkan.VK10.*;
+import static org.lwjgl.vulkan.VK12.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkVideoDecodeAV1PictureInfoKHR.java
Patch:
@@ -18,7 +18,7 @@
 
 import org.lwjgl.vulkan.video.*;
 
-import static org.lwjgl.vulkan.KHRVideoDecodeAV1.*;
+import static org.lwjgl.vulkan.KHRVideoEncodeAV1.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkVideoEncodeAV1PictureInfoKHR.java
Patch:
@@ -18,7 +18,7 @@
 
 import org.lwjgl.vulkan.video.*;
 
-import static org.lwjgl.vulkan.KHRVideoDecodeAV1.*;
+import static org.lwjgl.vulkan.KHRVideoEncodeAV1.*;
 
 /**
  * <pre>{@code

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/ObjCRuntime.java
Patch:
@@ -1279,7 +1279,7 @@ public static long nmethod_copyArgumentType(long m, int index) {
     /** {@code char * method_copyArgumentType(Method m, unsigned int index)} */
     @NativeType("char *")
     public static @Nullable String method_copyArgumentType(@NativeType("Method") long m, @NativeType("unsigned int") int index) {
-        @Nullable long __result = NULL;
+        long __result = NULL;
         try {
             __result = nmethod_copyArgumentType(m, index);
             return memUTF8Safe(__result);
@@ -1496,7 +1496,7 @@ public static long nproperty_copyAttributeValue(long property, long attributeNam
         if (CHECKS) {
             checkNT1(attributeName);
         }
-        @Nullable long __result = NULL;
+        long __result = NULL;
         try {
             __result = nproperty_copyAttributeValue(property, memAddress(attributeName));
             return memUTF8Safe(__result);
@@ -1509,7 +1509,7 @@ public static long nproperty_copyAttributeValue(long property, long attributeNam
     @NativeType("char *")
     public static @Nullable String property_copyAttributeValue(@NativeType("objc_property_t") long property, @NativeType("char const *") CharSequence attributeName) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
-        @Nullable long __result = NULL;
+        long __result = NULL;
         try {
             stack.nUTF8(attributeName, true);
             long attributeNameEncoded = stack.getPointerAddress();

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWNativeWGL.java
Patch:
@@ -107,7 +107,7 @@ public static void setPath(@Nullable String path) {
         if (a != NULL) {
             nmemFree(a);
         }
-        memPutAddress(override, path == null ? NULL : memAddress(memUTF16(path)));
+        memPutAddress(override, path == null ? NULL : memAddress(memUTF8(path)));
     }
 
 }
\ No newline at end of file

File: modules/samples/src/test/java/org/lwjgl/demo/bgfx/HelloBGFX.java
Patch:
@@ -38,7 +38,7 @@ public static void main(String[] args) {
 
         // the client (renderer) API is managed by bgfx
         glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 

File: modules/samples/src/test/java/org/lwjgl/demo/bgfx/HelloBGFXMT.java
Patch:
@@ -44,7 +44,7 @@ private HelloBGFXMT(int width, int height) {
         glfwDefaultWindowHints();
         glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
         glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Events.java
Patch:
@@ -14,7 +14,6 @@
 import java.util.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -130,7 +129,7 @@ private static void demo() {
         glfwDefaultWindowHints();
         glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);
         glfwWindowHint(GLFW_SCALE_TO_MONITOR, GLFW_TRUE);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 
@@ -291,7 +290,6 @@ private static void demo() {
         });
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
 
         glfwShowWindow(window);

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/MultipleWindows.java
Patch:
@@ -12,7 +12,6 @@
 import java.util.*;
 import java.util.concurrent.atomic.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11C.*;
@@ -44,7 +43,7 @@ private static void demo() {
         glfwDefaultWindowHints();
         glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);
         glfwWindowHint(GLFW_SCALE_TO_MONITOR, GLFW_TRUE);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 
@@ -88,7 +87,6 @@ private static void demo() {
             });
 
             glfwMakeContextCurrent(handle);
-            glfwInitOpenGL();
             window.capabilities = GL.createCapabilities();
 
             glClearColor((i & 1), (i >> 1), (i == 1) ? 0.f : 1.f, 0.f);

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Threads.java
Patch:
@@ -12,7 +12,6 @@
 import java.util.*;
 import java.util.concurrent.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11C.*;
@@ -45,7 +44,7 @@ public static void main(String[] args) {
 
         glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);
         glfwWindowHint(GLFW_SCALE_TO_MONITOR, GLFW_TRUE);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 
@@ -134,7 +133,6 @@ private static class GLFWThread extends Thread {
         @Override
         public void run() {
             glfwMakeContextCurrent(window);
-            glfwInitOpenGL();
             GL.createCapabilities();
 
             glfwSwapInterval(1);

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/BlendishDemo.java
Patch:
@@ -16,7 +16,6 @@
 import java.util.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.demo.nanovg.SubType.*;
 import static org.lwjgl.demo.util.IOUtil.*;
@@ -88,7 +87,6 @@ public static void main(String[] args) {
         });
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleFBO.java
Patch:
@@ -13,7 +13,6 @@
 import java.util.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -134,7 +133,7 @@ public static void main(String[] args) {
             throw new RuntimeException("Failed to init GLFW.");
         }
 
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
             glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);
             glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
@@ -180,7 +179,6 @@ public static void main(String[] args) {
         }
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleGL2.java
Patch:
@@ -12,7 +12,6 @@
 import java.util.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -130,7 +129,6 @@ public static void main(String[] args) {
         }
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleGL3.java
Patch:
@@ -12,7 +12,6 @@
 import java.util.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -72,7 +71,7 @@ public static void main(String[] args) {
             throw new RuntimeException("Failed to init GLFW.");
         }
 
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
             glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);
             glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GLFW_TRUE);
@@ -136,7 +135,6 @@ public static void main(String[] args) {
         }
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/SVGDemo.java
Patch:
@@ -13,7 +13,6 @@
 import java.util.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -184,7 +183,6 @@ private void init() {
 
         // Create context
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -14,7 +14,6 @@
 import java.nio.*;
 import java.util.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -106,7 +105,7 @@ private void run() {
         glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
         glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
         glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GLFW_TRUE);
         }
         glfwWindowHint(GLFW_OPENGL_DEBUG_CONTEXT, GLFW_TRUE);
@@ -120,7 +119,6 @@ private void run() {
         }
 
         glfwMakeContextCurrent(win);
-        glfwInitOpenGL();
         GLCapabilities caps      = GL.createCapabilities();
         Callback       debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/opencl/CLGLInteropDemo.java
Patch:
@@ -88,7 +88,7 @@ public static void main(String... args) {
 
         glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);
         glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);
             glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
         } else {

File: modules/samples/src/test/java/org/lwjgl/demo/opencl/Mandelbrot.java
Patch:
@@ -5,7 +5,6 @@
 package org.lwjgl.demo.opencl;
 
 import org.lwjgl.*;
-import org.lwjgl.egl.*;
 import org.lwjgl.opencl.*;
 import org.lwjgl.opengl.*;
 import org.lwjgl.system.*;
@@ -15,7 +14,6 @@
 import java.util.*;
 import java.util.concurrent.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.opencl.CLGLInteropDemo.*;
 import static org.lwjgl.demo.opencl.InfoUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
@@ -160,7 +158,6 @@ public Mandelbrot(long platform, CLCapabilities platformCaps, GLFWWindow window,
         fbh = size.get(1);
 
         glfwMakeContextCurrent(window.handle);
-        glfwInitOpenGL();
         GLCapabilities glCaps = GL.createCapabilities();
         if (!glCaps.OpenGL30) {
             throw new RuntimeException("OpenGL 3.0 is required to run this demo.");

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/HelloOpenXRGL.java
Patch:
@@ -13,7 +13,6 @@
 import java.nio.*;
 import java.util.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11.*;
 import static org.lwjgl.opengl.GL20.*;
@@ -301,7 +300,6 @@ public void initializeAndBindOpenGL() {
             }
             window = glfwCreateWindow(640, 480, "Hello World", NULL, NULL);
             glfwMakeContextCurrent(window);
-            glfwInitOpenGL();
             GL.createCapabilities();
 
             // Check if OpenGL version is supported by OpenXR runtime

File: modules/samples/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -192,7 +192,6 @@ private void init() {
 
         // Create context
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -358,7 +358,6 @@ private void createWindow(String title) {
 
         // Create context
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/stb/Vorbis.java
Patch:
@@ -18,7 +18,6 @@
 import java.util.concurrent.atomic.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -110,7 +109,7 @@ private Vorbis(String filePath) {
         glfwWindowHint(GLFW_OPENGL_DEBUG_CONTEXT, GLFW_TRUE);
         glfwWindowHint(GLFW_SCALE_TO_MONITOR, GLFW_TRUE);
         glfwWindowHint(GLFW_SAMPLES, 8);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 
@@ -270,7 +269,6 @@ private void runEventLoop() {
             @Override
             public void run() {
                 glfwMakeContextCurrent(window);
-                glfwInitOpenGL();
                 try (GraphicsRenderer graphicsRenderer = new GraphicsRenderer()) {
                     try {
                         audioLatch.await();

File: modules/samples/src/test/java/org/lwjgl/demo/system/jawt/EmbeddedFrameDemo.java
Patch:
@@ -14,7 +14,6 @@
 import java.util.*;
 import java.util.concurrent.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.system.jawt.EmbeddedFrameUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -45,7 +44,7 @@ public static void main(String[] args) {
         glfwWindowHint(GLFW_RESIZABLE, GLFW_TRUE);
         glfwWindowHint(GLFW_SCALE_TO_MONITOR, GLFW_TRUE);
         glfwWindowHint(GLFW_OPENGL_DEBUG_CONTEXT, GLFW_TRUE);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 
@@ -111,7 +110,6 @@ public static void main(String[] args) {
         });
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         Callback debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/util/nfd/HelloNFD.java
Patch:
@@ -12,7 +12,6 @@
 
 import java.util.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.glfw.GLFWNativeCocoa.*;
@@ -52,6 +51,7 @@ public static void main(String[] args) {
         int  handleType;
         long handleWindow;
         switch (Platform.get()) {
+            case FREEBSD:
             case LINUX:
                 handleType = NFD_WINDOW_HANDLE_TYPE_X11;
                 handleWindow = glfwGetX11Window(window);
@@ -110,7 +110,6 @@ public static void main(String[] args) {
         );
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
 
         glfwSwapInterval(1);

File: modules/samples/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -14,7 +14,6 @@
 import java.nio.*;
 import java.util.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL20.*;
@@ -75,7 +74,6 @@ private void init() {
         }
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         debugCB = GLUtil.setupDebugMessageCallback();
         if (debugCB != null && GL.getCapabilities().OpenGL43) {

File: modules/samples/src/test/java/org/lwjgl/demo/util/tinyfd/HelloTinyFD.java
Patch:
@@ -12,7 +12,6 @@
 import java.nio.*;
 import java.util.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11C.*;
@@ -106,7 +105,6 @@ public static void main(String[] args) {
         );
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
 
         glfwSwapInterval(1);

File: modules/samples/src/test/java/org/lwjgl/demo/util/yoga/HolyGrail.java
Patch:
@@ -12,7 +12,6 @@
 import java.nio.*;
 import java.util.*;
 
-import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11.*;
@@ -56,7 +55,7 @@ private HolyGrail() {
         glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);
         glfwWindowHint(GLFW_RESIZABLE, GLFW_TRUE);
         glfwWindowHint(GLFW_OPENGL_DEBUG_CONTEXT, GLFW_TRUE);
-        if (Platform.get() == Platform.MACOSX) {
+        if (glfwGetPlatform() == GLFW_PLATFORM_COCOA) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }
 
@@ -87,7 +86,6 @@ private HolyGrail() {
         // ----------------------
 
         glfwMakeContextCurrent(window);
-        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Events.java
Patch:
@@ -5,7 +5,6 @@
 package org.lwjgl.demo.glfw;
 
 import org.lwjgl.*;
-import org.lwjgl.glfw.GLFW;
 import org.lwjgl.glfw.*;
 import org.lwjgl.opengl.*;
 import org.lwjgl.system.*;
@@ -15,6 +14,7 @@
 import java.util.*;
 
 import static java.lang.Math.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -291,6 +291,7 @@ private static void demo() {
         });
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
 
         glfwShowWindow(window);

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Gears.java
Patch:
@@ -5,6 +5,7 @@
 package org.lwjgl.demo.glfw;
 
 import org.lwjgl.demo.opengl.*;
+import org.lwjgl.egl.*;
 import org.lwjgl.glfw.*;
 import org.lwjgl.opengl.*;
 import org.lwjgl.system.*;
@@ -179,6 +180,7 @@ private void init() {
         });
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities(MemoryUtil::memCallocPointer);
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/MultipleWindows.java
Patch:
@@ -12,6 +12,7 @@
 import java.util.*;
 import java.util.concurrent.atomic.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11C.*;
@@ -87,6 +88,7 @@ private static void demo() {
             });
 
             glfwMakeContextCurrent(handle);
+            glfwInitOpenGL();
             window.capabilities = GL.createCapabilities();
 
             glClearColor((i & 1), (i >> 1), (i == 1) ? 0.f : 1.f, 0.f);

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Threads.java
Patch:
@@ -12,6 +12,7 @@
 import java.util.*;
 import java.util.concurrent.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11C.*;
@@ -133,6 +134,7 @@ private static class GLFWThread extends Thread {
         @Override
         public void run() {
             glfwMakeContextCurrent(window);
+            glfwInitOpenGL();
             GL.createCapabilities();
 
             glfwSwapInterval(1);

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/BlendishDemo.java
Patch:
@@ -16,6 +16,7 @@
 import java.util.*;
 
 import static java.lang.Math.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.demo.nanovg.SubType.*;
 import static org.lwjgl.demo.util.IOUtil.*;
@@ -87,6 +88,7 @@ public static void main(String[] args) {
         });
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleFBO.java
Patch:
@@ -13,6 +13,7 @@
 import java.util.*;
 
 import static java.lang.Math.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -179,6 +180,7 @@ public static void main(String[] args) {
         }
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleGL2.java
Patch:
@@ -12,6 +12,7 @@
 import java.util.*;
 
 import static java.lang.Math.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -129,6 +130,7 @@ public static void main(String[] args) {
         }
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleGL3.java
Patch:
@@ -12,6 +12,7 @@
 import java.util.*;
 
 import static java.lang.Math.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -135,6 +136,7 @@ public static void main(String[] args) {
         }
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         glfwSwapInterval(0);
 

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/SVGDemo.java
Patch:
@@ -13,6 +13,7 @@
 import java.util.*;
 
 import static java.lang.Math.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.nanovg.NanoVGUtils.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -183,6 +184,7 @@ private void init() {
 
         // Create context
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -14,6 +14,7 @@
 import java.nio.*;
 import java.util.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -119,6 +120,7 @@ private void run() {
         }
 
         glfwMakeContextCurrent(win);
+        glfwInitOpenGL();
         GLCapabilities caps      = GL.createCapabilities();
         Callback       debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/HelloOpenXRGL.java
Patch:
@@ -13,6 +13,7 @@
 import java.nio.*;
 import java.util.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11.*;
 import static org.lwjgl.opengl.GL20.*;
@@ -300,6 +301,7 @@ public void initializeAndBindOpenGL() {
             }
             window = glfwCreateWindow(640, 480, "Hello World", NULL, NULL);
             glfwMakeContextCurrent(window);
+            glfwInitOpenGL();
             GL.createCapabilities();
 
             // Check if OpenGL version is supported by OpenXR runtime

File: modules/samples/src/test/java/org/lwjgl/demo/stb/FontDemo.java
Patch:
@@ -258,6 +258,7 @@ private void init(String title) {
 
         // Create context
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -192,6 +192,7 @@ private void init() {
 
         // Create context
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -358,6 +358,7 @@ private void createWindow(String title) {
 
         // Create context
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/stb/Vorbis.java
Patch:
@@ -18,6 +18,7 @@
 import java.util.concurrent.atomic.*;
 
 import static java.lang.Math.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -269,6 +270,7 @@ private void runEventLoop() {
             @Override
             public void run() {
                 glfwMakeContextCurrent(window);
+                glfwInitOpenGL();
                 try (GraphicsRenderer graphicsRenderer = new GraphicsRenderer()) {
                     try {
                         audioLatch.await();

File: modules/samples/src/test/java/org/lwjgl/demo/system/jawt/EmbeddedFrameDemo.java
Patch:
@@ -14,6 +14,7 @@
 import java.util.*;
 import java.util.concurrent.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.system.jawt.EmbeddedFrameUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -110,6 +111,7 @@ public static void main(String[] args) {
         });
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         Callback debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/samples/src/test/java/org/lwjgl/demo/util/nfd/HelloNFD.java
Patch:
@@ -12,6 +12,7 @@
 
 import java.util.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.glfw.GLFWNativeCocoa.*;
@@ -109,6 +110,7 @@ public static void main(String[] args) {
         );
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
 
         glfwSwapInterval(1);

File: modules/samples/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -14,6 +14,7 @@
 import java.nio.*;
 import java.util.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL20.*;
@@ -74,6 +75,7 @@ private void init() {
         }
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         debugCB = GLUtil.setupDebugMessageCallback();
         if (debugCB != null && GL.getCapabilities().OpenGL43) {

File: modules/samples/src/test/java/org/lwjgl/demo/util/tinyfd/HelloTinyFD.java
Patch:
@@ -12,6 +12,7 @@
 import java.nio.*;
 import java.util.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11C.*;
@@ -105,6 +106,7 @@ public static void main(String[] args) {
         );
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
 
         glfwSwapInterval(1);

File: modules/samples/src/test/java/org/lwjgl/demo/util/tootle/HelloTootle.java
Patch:
@@ -23,6 +23,7 @@
 
 import static java.lang.Math.*;
 import static org.lwjgl.assimp.Assimp.*;
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
@@ -157,6 +158,7 @@ private HelloTootle() {
         }
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GLCapabilities caps = GL.createCapabilities();
         if (!caps.OpenGL31) {
             throw new IllegalStateException("OpenGL 3.1 is required to run this demo.");

File: modules/samples/src/test/java/org/lwjgl/demo/util/yoga/HolyGrail.java
Patch:
@@ -12,6 +12,7 @@
 import java.nio.*;
 import java.util.*;
 
+import static org.lwjgl.demo.glfw.GLFWUtil.*;
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11.*;
@@ -86,6 +87,7 @@ private HolyGrail() {
         // ----------------------
 
         glfwMakeContextCurrent(window);
+        glfwInitOpenGL();
         GL.createCapabilities();
         debugProc = GLUtil.setupDebugMessageCallback();
 

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/NVStreamFlush.java
Patch:
@@ -36,11 +36,11 @@ protected NVStreamFlush() {
         throw new UnsupportedOperationException();
     }
 
-    // --- [ eglStreamFlush ] ---
+    // --- [ eglStreamFlushNV ] ---
 
     @NativeType("EGLBoolean")
-    public static boolean eglStreamFlush(@NativeType("EGLDisplay") long dpy, @NativeType("EGLStreamKHR") long stream) {
-        long __functionAddress = EGL.getCapabilities().eglStreamFlush;
+    public static boolean eglStreamFlushNV(@NativeType("EGLDisplay") long dpy, @NativeType("EGLStreamKHR") long stream) {
+        long __functionAddress = EGL.getCapabilities().eglStreamFlushNV;
         if (CHECKS) {
             check(__functionAddress);
             check(dpy);

File: modules/lwjgl/openal/src/generated/java/org/lwjgl/openal/ALC10.java
Patch:
@@ -315,7 +315,7 @@ public static long nalcGetProcAddress(long deviceHandle, long funcName) {
      * @param deviceHandle the device to query
      * @param funcName     the function name
      */
-    @NativeType("void *")
+    @NativeType("ALCvoid *")
     public static long alcGetProcAddress(@NativeType("ALCdevice const *") long deviceHandle, @NativeType("ALchar const *") ByteBuffer funcName) {
         if (CHECKS) {
             checkNT1(funcName);
@@ -335,7 +335,7 @@ public static long alcGetProcAddress(@NativeType("ALCdevice const *") long devic
      * @param deviceHandle the device to query
      * @param funcName     the function name
      */
-    @NativeType("void *")
+    @NativeType("ALCvoid *")
     public static long alcGetProcAddress(@NativeType("ALCdevice const *") long deviceHandle, @NativeType("ALchar const *") CharSequence funcName) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {

File: modules/lwjgl/openal/src/generated/java/org/lwjgl/openal/SOFTCallbackBufferType.java
Patch:
@@ -15,7 +15,7 @@
  * <h3>Type</h3>
  * 
  * <pre><code>
- * void * (*{@link #invoke}) (
+ * ALsizei (*{@link #invoke}) (
  *     ALvoid *userptr,
  *     ALvoid *sampledata,
  *     ALsizei numbytes
@@ -65,7 +65,7 @@ private static final class Container extends SOFTCallbackBufferType {
         }
 
         @Override
-        public long invoke(long userptr, long sampledata, int numbytes) {
+        public int invoke(long userptr, long sampledata, int numbytes) {
             return delegate.invoke(userptr, sampledata, numbytes);
         }
 

File: modules/lwjgl/openal/src/main/java/org/lwjgl/openal/ALC.java
Patch:
@@ -96,9 +96,9 @@ public long getFunctionAddress(ByteBuffer functionName) {
 
         @Override
         public long getFunctionAddress(long handle, ByteBuffer functionName) {
-            long address = library.getFunctionAddress(functionName);
-            if (address == NULL && handle != NULL) {
-                address = invokePPP(handle, memAddress(functionName), alcGetProcAddress);
+            long address = invokePPP(handle, memAddress(functionName), alcGetProcAddress);
+            if (address == NULL) {
+                address = library.getFunctionAddress(functionName);
             }
             if (address == NULL && Checks.DEBUG_FUNCTIONS) {
                 apiLogMissing("ALC", functionName);

File: modules/lwjgl/core/src/test/java/org/lwjgl/system/MemoryUtilTest.java
Patch:
@@ -313,7 +313,7 @@ public void testViewBuffer() {
         }
 
         DoubleBuffer db = memDoubleBuffer(memAddress(ib), Integer.MAX_VALUE);
-        assertThrows(IllegalArgumentException.class, () -> memByteBuffer(db));
+        assertThrows(IllegalStateException.class, () -> memByteBuffer(db));
 
         db.limit(Integer.MAX_VALUE >> 3);
         assertEquals(memByteBuffer(db).remaining(), (Integer.MAX_VALUE >> 3) << 3);

File: modules/lwjgl/harfbuzz/src/generated/java/org/lwjgl/util/harfbuzz/HarfBuzz.java
Patch:
@@ -5033,8 +5033,8 @@ public static long nhb_ft_font_create(long ft_face, long destroy) {
     }
 
     @NativeType("hb_font_t *")
-    public static long hb_ft_font_create(@NativeType("FT_Face") long ft_face, @NativeType("hb_destroy_func_t") hb_destroy_func_tI destroy) {
-        return nhb_ft_font_create(ft_face, destroy.address());
+    public static long hb_ft_font_create(@NativeType("FT_Face") long ft_face, @Nullable @NativeType("hb_destroy_func_t") hb_destroy_func_tI destroy) {
+        return nhb_ft_font_create(ft_face, memAddressSafe(destroy));
     }
 
     // --- [ hb_ft_font_create_referenced ] ---

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -166,7 +166,7 @@ public static ByteBuffer apiGetMappedBuffer(@Nullable ByteBuffer buffer, long ma
         if (buffer != null && memAddress(buffer) == mappedAddress && buffer.capacity() == capacity) {
             return buffer;
         }
-        return mappedAddress == NULL ? null : wrap(BUFFER_BYTE, mappedAddress, capacity).order(NATIVE_ORDER);
+        return mappedAddress == NULL ? null : wrapBufferByte(mappedAddress, capacity);
     }
 
     public static long apiGetBytes(int elements, int elementShift) {

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -44,7 +44,7 @@ static MemoryAllocator getInstance() {
                 Class<?> allocatorClass = Class.forName(className);
                 return (MemoryAllocator)allocatorClass.getConstructor().newInstance();
             } catch (Throwable t) {
-                if (Checks.DEBUG && allocator != null) {
+                if (Checks.DEBUG && (allocator != null || !(t instanceof ClassNotFoundException))) {
                     t.printStackTrace(DEBUG_STREAM);
                 }
                 apiLog(String.format("Warning: Failed to instantiate memory allocator: %s. Using the system default.", className));

File: modules/samples/src/test/java/org/lwjgl/demo/util/msdfgen/HelloMSDFGen.java
Patch:
@@ -68,6 +68,8 @@ public static void main(String[] args) throws IOException {
 
             nmsdf_ft_font_destroy(font);
             msdf_ft_deinit(ft);
+
+            msdf_ft_get_load_callback().free();
         }
     }
 

File: modules/samples/src/test/java/org/lwjgl/demo/vulkan/HelloVulkan.java
Patch:
@@ -465,7 +465,7 @@ private void demo_init_vk() {
                     .pfnUserCallback(dbgFunc)
                     .pUserData(NULL);
 
-                inst_info.pNext(dbgCreateInfo.address());
+                inst_info.pNext(dbgCreateInfo);
             }
 
             int err = vkCreateInstance(inst_info, null, pp);

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/windows/WindowsUtil.java
Patch:
@@ -4,15 +4,15 @@
  */
 package org.lwjgl.system.windows;
 
-import static org.lwjgl.system.windows.WinBase.*;
+import java.nio.*;
 
 public final class WindowsUtil {
 
     private WindowsUtil() {
     }
 
-    public static void windowsThrowException(String msg) {
-        throw new RuntimeException(msg + " (error code = " + getLastError() + ")");
+    public static void windowsThrowException(String msg, IntBuffer GetLastError) {
+        throw new RuntimeException(msg + " (error code = " + GetLastError.get(GetLastError.position()) + ")");
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Struct.java
Patch:
@@ -147,6 +147,7 @@ public static void validate(long array, int count, int SIZEOF, StructValidation
             validation.validate(array + Integer.toUnsignedLong(i) * SIZEOF);
         }
     }
+    public static void validate(long array, long count, int SIZEOF, StructValidation validation) { validate(array, (int)count, SIZEOF, validation); }
 
     // ---------------- Struct Member Layout ----------------
 

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcCSymbolDependenceGroup.java
Patch:
@@ -252,10 +252,10 @@ public static LLVMOrcCSymbolDependenceGroup.Buffer calloc(int capacity, MemorySt
      */
     public static void validate(long struct) {
         LLVMOrcCSymbolsList.validate(struct + LLVMOrcCSymbolDependenceGroup.SYMBOLS);
+        long NumDependencies = nNumDependencies(struct);
         long Dependencies = memGetAddress(struct + LLVMOrcCSymbolDependenceGroup.DEPENDENCIES);
         check(Dependencies);
         validate(Dependencies, NumDependencies, LLVMOrcCDependenceMapPair.SIZEOF, LLVMOrcCDependenceMapPair::validate);
-        long NumDependencies = nNumDependencies(struct);
     }
 
     // -----------------------------------

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FreeType.java
Patch:
@@ -587,7 +587,7 @@ public static SharedLibrary getLibrary() {
 
     public static final int FREETYPE_MINOR = 13;
 
-    public static final int FREETYPE_PATCH = 2;
+    public static final int FREETYPE_PATCH = 3;
 
     public static final int FT_ADVANCE_FLAG_FAST_ONLY = 0x20000000;
 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/WinBase.java
Patch:
@@ -179,7 +179,7 @@ public static int GetModuleFileName(@NativeType("HMODULE") long hModule, @Native
     public static String GetModuleFileName(@NativeType("HMODULE") long hModule, @NativeType("DWORD") int nSize) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
-            ByteBuffer lpFilename = stack.malloc(nSize);
+            ByteBuffer lpFilename = stack.malloc(nSize << 1);
             int __result = nGetModuleFileName(hModule, memAddress(lpFilename), nSize);
             return memUTF16(lpFilename, __result);
         } finally {

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/ClangIndex.java
Patch:
@@ -1487,7 +1487,7 @@ public static SharedLibrary getLibrary() {
         CXCursor_OMPParallelMaskedTaskLoopSimdDirective           = 304,
         CXCursor_OMPErrorDirective                                = 305,
         CXCursor_OMPScopeDirective                                = 306,
-        CXCursor_LastStmt                                         = CXCursor_OMPErrDirective,
+        CXCursor_LastStmt                                         = CXCursor_OMPScopeDirective,
         CXCursor_TranslationUnit                                  = 350,
         CXCursor_FirstAttr                                        = 400,
         CXCursor_UnexposedAttr                                    = 400,

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMCore.java
Patch:
@@ -12736,7 +12736,7 @@ public static void LLVMSetFastMathFlags(@NativeType("LLVMValueRef") long FPMathI
      * Check if a given value can potentially have fast math flags.
      * 
      * <p>Will return true for floating point arithmetic instructions, and for select, phi, and call instructions whose type is a floating point type, or a
-     * vector or array thereof. See <a href="https://llvm.org/docs/{@link LangRef.html#fast}-math-flags">fast-math-flags</a>.</p>
+     * vector or array thereof. See <a href="https://llvm.org/docs/LangRef.html#fast-math-flags">fast-math-flags</a>.</p>
      *
      * @since 18
      */

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHPMixedRealityController.java
Patch:
@@ -60,7 +60,7 @@
  * 
  * <div style="margin-left: 26px; border-left: 1px solid gray; padding-left: 14px;"><h5>Note</h5>
  * 
- * <p>When the runtime supports {@link VERSION11 XR_VERSION_1_1} and use of OpenXR 1.1 is requested by the application, this interaction profile <b>must</b> also support</p>
+ * <p>When the runtime supports {@link XR11 XR_VERSION_1_1} and use of OpenXR 1.1 is requested by the application, this interaction profile <b>must</b> also support</p>
  * 
  * <ul>
  * <li>subpathname:/input/grip_surface/pose</li>

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/METAEnvironmentDepth.java
Patch:
@@ -670,7 +670,6 @@ public static int nxrAcquireEnvironmentDepthImageMETA(XrEnvironmentDepthProvider
      * <ul>
      * <li>For OpenGL, a runtime <b>may</b> use the OpenGL context specified in the call to {@link XR10#xrCreateSession CreateSession}, which needs external synchronization.</li>
      * <li>For Vulkan, a runtime <b>may</b> use the {@code VkQueue} specified in the {@link XrGraphicsBindingVulkan2KHR}, which needs external synchronization.</li>
-     * <li>For Direct3D12, a runtime <b>may</b> use the {@code ID3D12CommandQueue} specified in the {@link XrGraphicsBindingD3D12KHR}, which needs external synchronization.</li>
      * </ul>
      * </li>
      * </ul>

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -732,7 +732,7 @@
  * <ul>
  * <li>Each pool has its own collection of {@code VkDeviceMemory} blocks. Some of them may be partially or even completely empty. Spreading allocations
  * across multiple pools increases the amount of wasted (allocated but unbound) memory.</li>
- * <li>You must manually choose specific memory type to be used by a custom pool (set as {@codeVmaPoolCreateInfo::memoryTypeIndex}). When using default
+ * <li>You must manually choose specific memory type to be used by a custom pool (set as {@code VmaPoolCreateInfo::memoryTypeIndex}). When using default
  * pools, best memory type for each of your allocations can be selected automatically using a carefully design algorithm that works across all kinds
  * of GPUs.</li>
  * <li>If an allocation from a custom pool at specific memory type fails, entire allocation operation returns failure. When using default pools, VMA tries
@@ -752,7 +752,7 @@
  * automatically. It also maps only those {@code VkDeviceMemory} blocks that need to map any allocation. It even tries to keep mappable and
  * non-mappable allocations in separate blocks to minimize the amount of mapped memory.</li>
  * <li>If you want to choose a custom size for the default memory block, you can set it globally instead using 
- * {@codeVmaAllocatorCreateInfo::preferredLargeHeapBlockSize}.</li>
+ * {@code VmaAllocatorCreateInfo::preferredLargeHeapBlockSize}.</li>
  * <li>If you want to select specific memory type for your allocation, you can set {@code VmaAllocationCreateInfo::memoryTypeBits} to
  * {@code (1u << myMemoryTypeIndex)} instead.</li>
  * <li>If you need to create a buffer with certain minimum alignment, you can still do it using default pools with dedicated function

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWTFunctions.java
Patch:
@@ -71,11 +71,11 @@ public static SharedLibrary getLibrary() {
      * {@code Component}'s rectangle. If the window the {@code Component} belongs to has a {@code CALayer} attached to it, this layer will be accessible via
      * the {@code windowLayer} property.</p>
      * 
-     * <pre><code>
+     * <pre>{@code
      * @protocol JAWT_SurfaceLayers
      * @property (readwrite, retain) CALayer *layer;
      * @property (readonly) CALayer *windowLayer;
-     * @end </code></pre>
+     * @end}</pre>
      */
     public static final int JAWT_MACOSX_USE_CALAYER = 0x80000000;
 

File: modules/samples/src/test/java/org/lwjgl/demo/util/meshoptimizer/HelloMeshOptimizer.java
Patch:
@@ -76,9 +76,9 @@ public static void main(String[] args) {
     }
 
     private static void remap(FloatBuffer vertexBuffer, IntBuffer indexBuffer, FloatBuffer normalBuffer, IntBuffer remap) {
-        meshopt_remapIndexBuffer(indexBuffer, indexBuffer, remap);
-        meshopt_remapVertexBuffer(memByteBuffer(vertexBuffer), memByteBuffer(vertexBuffer), 3 * Float.BYTES, remap);
-        meshopt_remapVertexBuffer(memByteBuffer(normalBuffer), memByteBuffer(normalBuffer), 3 * Float.BYTES, remap);
+        meshopt_remapIndexBuffer(indexBuffer, indexBuffer, indexBuffer.remaining(), remap);
+        meshopt_remapVertexBuffer(memByteBuffer(vertexBuffer), memByteBuffer(vertexBuffer), vertexBuffer.remaining(), 3 * Float.BYTES, remap);
+        meshopt_remapVertexBuffer(memByteBuffer(normalBuffer), memByteBuffer(normalBuffer), normalBuffer.remaining(), 3 * Float.BYTES, remap);
     }
 
     private static void printStats(ParShapesMesh mesh) {

File: modules/lwjgl/remotery/src/generated/java/org/lwjgl/util/remotery/Remotery.java
Patch:
@@ -48,9 +48,8 @@
  * <p>Supported GPU Profiling APIs:</p>
  * 
  * <ul>
- * <li><s>D3D 11/12</s></li>
  * <li>OpenGL</li>
- * <li><s>CUDA</s></li>
+ * <li>CUDA</li>
  * <li>Metal</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCudaLaunchInfoNV.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>Kernel parameters of {@code function} are specified via {@code pParams}, very much the same way as described in <a href="https://docs.nvidia.com/cuda/cuda-driver-api/{@link group__CUDA__EXEC.html#group__CUDA__EXEC_1gb8f3dc3031b40da29d5f9a7139e52e15}">cuLaunchKernel</a></p>
+ * <p>Kernel parameters of {@code function} are specified via {@code pParams}, very much the same way as described in <a href="https://docs.nvidia.com/cuda/cuda-driver-api/group__CUDA__EXEC.html#group__CUDA__EXEC_1gb8f3dc3031b40da29d5f9a7139e52e15">cuLaunchKernel</a></p>
  * 
  * <p>If {@code function} has N parameters, then {@code pParams} <b>must</b> be an array of N pointers and {@code paramCount} <b>must</b> be set to N. Each of {@code kernelParams}[0] through {@code kernelParams}[N-1] <b>must</b> point to a region of memory from which the actual kernel parameter will be copied. The number of kernel parameters and their offsets and sizes are not specified here as that information is stored in the {@code VkCudaFunctionNV} object.</p>
  * 

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Callback.java
Patch:
@@ -206,7 +206,7 @@ public static void free(long functionPointer) {
             MemoryManage.DebugAllocator.untrack(functionPointer);
         }
 
-        FFIClosure closure = CLOSURE_REGISTRY.get(functionPointer);
+        FFIClosure closure = CLOSURE_REGISTRY.remove(functionPointer);
 
         DeleteGlobalRef(closure.user_data());
         ffi_closure_free(closure);
@@ -234,4 +234,4 @@ public String toString() {
         return String.format("%s pointer [0x%X]", getClass().getSimpleName(), address);
     }
 
-}
\ No newline at end of file
+}

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FreeType.java
Patch:
@@ -587,7 +587,7 @@ public static SharedLibrary getLibrary() {
 
     public static final int FREETYPE_MINOR = 13;
 
-    public static final int FREETYPE_PATCH = 1;
+    public static final int FREETYPE_PATCH = 2;
 
     public static final int FT_ADVANCE_FLAG_FAST_ONLY = 0x20000000;
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingEGLMNDX.java
Patch:
@@ -33,15 +33,15 @@
  * <li>The {@link MNDXEGLEnable XR_MNDX_egl_enable} extension <b>must</b> be enabled prior to using {@link XrGraphicsBindingEGLMNDX}</li>
  * <li>{@code type} <b>must</b> be {@link MNDXEGLEnable#XR_TYPE_GRAPHICS_BINDING_EGL_MNDX TYPE_GRAPHICS_BINDING_EGL_MNDX}</li>
  * <li>{@code next} <b>must</b> be {@code NULL} or a valid pointer to the <a href="https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#valid-usage-for-structure-pointer-chains">next structure in a structure chain</a></li>
- * <li>{@code getProcAddress} <b>must</b> be a valid {@link XrEglGetProcAddressMNDX} value</li>
+ * <li>{@code getProcAddress} <b>must</b> be a valid {@code PFN_xrEglGetProcAddressMNDX} value</li>
  * <li>{@code display} <b>must</b> be a valid {@code EGLDisplay} value</li>
  * <li>{@code config} <b>must</b> be a valid {@code EGLConfig} value</li>
  * <li>{@code context} <b>must</b> be a valid {@code EGLContext} value</li>
  * </ul>
  * 
  * <h5>See Also</h5>
  * 
- * <p>{@link XrEglGetProcAddressMNDX}, {@link XR10#xrCreateSession CreateSession}</p>
+ * <p>{@link XR10#xrCreateSession CreateSession}</p>
  * 
  * <h3>Layout</h3>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDirectDriverLoadingInfoLUNARG.java
Patch:
@@ -28,7 +28,7 @@
  * 
  * <h5>See Also</h5>
  * 
- * <p>{@link VkGetInstanceProcAddrLUNARG}, {@link VkDirectDriverLoadingListLUNARG}</p>
+ * <p>{@link VkDirectDriverLoadingListLUNARG}</p>
  * 
  * <h3>Layout</h3>
  * 
@@ -103,7 +103,7 @@ public VkDirectDriverLoadingInfoLUNARG(ByteBuffer container) {
     /** reserved for future use. */
     @NativeType("VkDirectDriverLoadingFlagsLUNARG")
     public int flags() { return nflags(address()); }
-    /** a {@link VkGetInstanceProcAddrLUNARG} pointer to the driver {@link VK10#vkGetInstanceProcAddr GetInstanceProcAddr} function. */
+    /** a {@code PFN_vkGetInstanceProcAddrLUNARG} pointer to the driver {@link VK10#vkGetInstanceProcAddr GetInstanceProcAddr} function. */
     @NativeType("PFN_vkGetInstanceProcAddrLUNARG")
     public long pfnGetInstanceProcAddr() { return npfnGetInstanceProcAddr(address()); }
 

File: modules/lwjgl/core/src/main/resources/module-info.java
Patch:
@@ -2,12 +2,9 @@
  * Copyright LWJGL. All rights reserved.
  * License terms: https://www.lwjgl.org/license
  */
-@SuppressWarnings({"requires-automatic", "requires-transitive-automatic"})
 module org.lwjgl {
     requires transitive jdk.unsupported;
 
-    requires static transitive jsr305;
-
     exports org.lwjgl;
     exports org.lwjgl.system;
     exports org.lwjgl.system.jni;

File: modules/lwjgl/glfw/src/main/resources/module-info.java
Patch:
@@ -5,9 +5,9 @@
 module org.lwjgl.glfw {
     requires transitive org.lwjgl;
 
-    requires static transitive org.lwjgl.egl;
-    requires static transitive org.lwjgl.opengl;
-    requires static transitive org.lwjgl.vulkan;
+    requires static org.lwjgl.egl;
+    requires static org.lwjgl.opengl;
+    requires static org.lwjgl.vulkan;
 
     exports org.lwjgl.glfw;
 }
\ No newline at end of file

File: modules/lwjgl/ktx/src/main/resources/module-info.java
Patch:
@@ -5,9 +5,7 @@
 module org.lwjgl.ktx {
     requires transitive org.lwjgl;
 
-    requires static transitive org.lwjgl.egl;
-    requires static transitive org.lwjgl.opengl;
-    requires static transitive org.lwjgl.vulkan;
+    requires static org.lwjgl.vulkan;
 
     exports org.lwjgl.util.ktx;
 }
\ No newline at end of file

File: modules/lwjgl/nanovg/src/main/resources/module-info.java
Patch:
@@ -5,9 +5,9 @@
 module org.lwjgl.nanovg {
     requires transitive org.lwjgl;
 
-    requires static transitive org.lwjgl.bgfx;
-    requires static transitive org.lwjgl.opengl;
-    requires static transitive org.lwjgl.opengles;
+    requires static org.lwjgl.bgfx;
+    requires static org.lwjgl.opengl;
+    requires static org.lwjgl.opengles;
 
     exports org.lwjgl.nanovg;
 }
\ No newline at end of file

File: modules/lwjgl/openxr/src/main/resources/module-info.java
Patch:
@@ -5,9 +5,9 @@
 module org.lwjgl.openxr {
     requires transitive org.lwjgl;
 
-    requires static transitive org.lwjgl.egl;
-    requires static transitive org.lwjgl.opengl;
-    requires static transitive org.lwjgl.vulkan;
+    requires static org.lwjgl.egl;
+    requires static org.lwjgl.opengl;
+    requires static org.lwjgl.vulkan;
 
     exports org.lwjgl.openxr;
 }
\ No newline at end of file

File: modules/lwjgl/ovr/src/main/resources/module-info.java
Patch:
@@ -5,8 +5,8 @@
 module org.lwjgl.ovr {
     requires transitive org.lwjgl;
 
-    requires static transitive org.lwjgl.opengl;
-    requires static transitive org.lwjgl.vulkan;
+    requires static org.lwjgl.opengl;
+    requires static org.lwjgl.vulkan;
 
     exports org.lwjgl.ovr;
 }
\ No newline at end of file

File: modules/lwjgl/core/src/main/resources/module-info.java
Patch:
@@ -2,9 +2,12 @@
  * Copyright LWJGL. All rights reserved.
  * License terms: https://www.lwjgl.org/license
  */
+@SuppressWarnings({"requires-automatic", "requires-transitive-automatic"})
 module org.lwjgl {
     requires transitive jdk.unsupported;
 
+    requires static transitive jsr305;
+
     exports org.lwjgl;
     exports org.lwjgl.system;
     exports org.lwjgl.system.jni;

File: modules/lwjgl/glfw/src/main/resources/module-info.java
Patch:
@@ -5,9 +5,9 @@
 module org.lwjgl.glfw {
     requires transitive org.lwjgl;
 
-    requires static org.lwjgl.egl;
-    requires static org.lwjgl.opengl;
-    requires static org.lwjgl.vulkan;
+    requires static transitive org.lwjgl.egl;
+    requires static transitive org.lwjgl.opengl;
+    requires static transitive org.lwjgl.vulkan;
 
     exports org.lwjgl.glfw;
 }
\ No newline at end of file

File: modules/lwjgl/jawt/src/main/resources/module-info.java
Patch:
@@ -4,6 +4,7 @@
  */
 module org.lwjgl.jawt {
     requires transitive org.lwjgl;
+    requires transitive java.desktop;
 
     exports org.lwjgl.system.jawt;
 }
\ No newline at end of file

File: modules/lwjgl/nanovg/src/main/resources/module-info.java
Patch:
@@ -5,9 +5,9 @@
 module org.lwjgl.nanovg {
     requires transitive org.lwjgl;
 
-    requires static org.lwjgl.bgfx;
-    requires static org.lwjgl.opengl;
-    requires static org.lwjgl.opengles;
+    requires static transitive org.lwjgl.bgfx;
+    requires static transitive org.lwjgl.opengl;
+    requires static transitive org.lwjgl.opengles;
 
     exports org.lwjgl.nanovg;
 }
\ No newline at end of file

File: modules/lwjgl/openxr/src/main/resources/module-info.java
Patch:
@@ -5,9 +5,9 @@
 module org.lwjgl.openxr {
     requires transitive org.lwjgl;
 
-    requires static org.lwjgl.egl;
-    requires static org.lwjgl.opengl;
-    requires static org.lwjgl.vulkan;
+    requires static transitive org.lwjgl.egl;
+    requires static transitive org.lwjgl.opengl;
+    requires static transitive org.lwjgl.vulkan;
 
     exports org.lwjgl.openxr;
 }
\ No newline at end of file

File: modules/lwjgl/ovr/src/main/resources/module-info.java
Patch:
@@ -5,8 +5,8 @@
 module org.lwjgl.ovr {
     requires transitive org.lwjgl;
 
-    requires static org.lwjgl.opengl;
-    requires static org.lwjgl.vulkan;
+    requires static transitive org.lwjgl.opengl;
+    requires static transitive org.lwjgl.vulkan;
 
     exports org.lwjgl.ovr;
 }
\ No newline at end of file

File: modules/lwjgl/vulkan/src/main/resources/module-info.java
Patch:
@@ -6,4 +6,5 @@
     requires transitive org.lwjgl;
 
     exports org.lwjgl.vulkan;
+    exports org.lwjgl.vulkan.video;
 }
\ No newline at end of file

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL11.java
Patch:
@@ -894,7 +894,7 @@ public static void glBitmap(@NativeType("GLsizei") int w, @NativeType("GLsizei")
      * 
      * @see <a href="https://docs.gl/gl3/glBitmap">Reference Page</a> - <em>This function is deprecated and unavailable in the Core profile</em>
      */
-    public static void glBitmap(@NativeType("GLsizei") int w, @NativeType("GLsizei") int h, @NativeType("GLfloat") float xOrig, @NativeType("GLfloat") float yOrig, @NativeType("GLfloat") float xInc, @NativeType("GLfloat") float yInc, @Nullable @NativeType("GLubyte const *") long data) {
+    public static void glBitmap(@NativeType("GLsizei") int w, @NativeType("GLsizei") int h, @NativeType("GLfloat") float xOrig, @NativeType("GLfloat") float yOrig, @NativeType("GLfloat") float xInc, @NativeType("GLfloat") float yInc, @NativeType("GLubyte const *") long data) {
         nglBitmap(w, h, xOrig, yOrig, xInc, yInc, data);
     }
 
@@ -6843,7 +6843,7 @@ public static void glTexImage1D(@NativeType("GLenum") int target, @NativeType("G
      * 
      * @see <a href="https://docs.gl/gl4/glTexImage1D">Reference Page</a>
      */
-    public static void glTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         GL11C.glTexImage1D(target, level, internalformat, width, border, format, type, pixels);
     }
 
@@ -6960,7 +6960,7 @@ public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("G
      * 
      * @see <a href="https://docs.gl/gl4/glTexImage2D">Reference Page</a>
      */
-    public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         GL11C.glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels);
     }
 

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL11C.java
Patch:
@@ -1599,7 +1599,7 @@ public static void glTexImage1D(@NativeType("GLenum") int target, @NativeType("G
      * 
      * @see <a href="https://docs.gl/gl4/glTexImage1D">Reference Page</a>
      */
-    public static void glTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         nglTexImage1D(target, level, internalformat, width, border, format, type, pixels);
     }
 
@@ -1714,7 +1714,7 @@ public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("G
      * 
      * @see <a href="https://docs.gl/gl4/glTexImage2D">Reference Page</a>
      */
-    public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         nglTexImage2D(target, level, internalformat, width, height, border, format, type, pixels);
     }
 

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL12.java
Patch:
@@ -183,7 +183,7 @@ public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("G
      * 
      * @see <a href="https://docs.gl/gl4/glTexImage3D">Reference Page</a>
      */
-    public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         GL12C.glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels);
     }
 

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL12C.java
Patch:
@@ -168,7 +168,7 @@ public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("G
      * 
      * @see <a href="https://docs.gl/gl4/glTexImage3D">Reference Page</a>
      */
-    public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         nglTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels);
     }
 

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL13.java
Patch:
@@ -240,7 +240,7 @@ public static void nglCompressedTexImage3D(int target, int level, int internalfo
      * 
      * @see <a href="https://docs.gl/gl4/glCompressedTexImage3D">Reference Page</a>
      */
-    public static void glCompressedTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         GL13C.glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data);
     }
 
@@ -287,7 +287,7 @@ public static void nglCompressedTexImage2D(int target, int level, int internalfo
      * 
      * @see <a href="https://docs.gl/gl4/glCompressedTexImage2D">Reference Page</a>
      */
-    public static void glCompressedTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         GL13C.glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data);
     }
 
@@ -332,7 +332,7 @@ public static void nglCompressedTexImage1D(int target, int level, int internalfo
      * 
      * @see <a href="https://docs.gl/gl4/glCompressedTexImage1D">Reference Page</a>
      */
-    public static void glCompressedTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         GL13C.glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data);
     }
 

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL13C.java
Patch:
@@ -167,7 +167,7 @@ protected GL13C() {
      * 
      * @see <a href="https://docs.gl/gl4/glCompressedTexImage3D">Reference Page</a>
      */
-    public static void glCompressedTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         nglCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data);
     }
 
@@ -212,7 +212,7 @@ public static void glCompressedTexImage3D(@NativeType("GLenum") int target, @Nat
      * 
      * @see <a href="https://docs.gl/gl4/glCompressedTexImage2D">Reference Page</a>
      */
-    public static void glCompressedTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         nglCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data);
     }
 
@@ -255,7 +255,7 @@ public static void glCompressedTexImage2D(@NativeType("GLenum") int target, @Nat
      * 
      * @see <a href="https://docs.gl/gl4/glCompressedTexImage1D">Reference Page</a>
      */
-    public static void glCompressedTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage1D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         nglCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data);
     }
 

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/GLES20.java
Patch:
@@ -503,7 +503,7 @@ public static void glBufferSubData(@NativeType("GLenum") int target, @NativeType
     public static native void nglCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, long data);
 
     /** <a href="https://docs.gl/es3/glCompressedTexImage2D">Reference Page</a> */
-    public static void glCompressedTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         nglCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data);
     }
 
@@ -1655,7 +1655,7 @@ public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("G
     }
 
     /** <a href="https://docs.gl/es3/glTexImage2D">Reference Page</a> */
-    public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage2D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         nglTexImage2D(target, level, internalformat, width, height, border, format, type, pixels);
     }
 

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/GLES30.java
Patch:
@@ -396,7 +396,7 @@ public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("G
     }
 
     /** <a href="https://docs.gl/es3/glTexImage3D">Reference Page</a> */
-    public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLint") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         nglTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels);
     }
 
@@ -454,7 +454,7 @@ public static void glTexSubImage3D(@NativeType("GLenum") int target, @NativeType
     public static native void nglCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long data);
 
     /** <a href="https://docs.gl/es3/glCompressedTexImage3D">Reference Page</a> */
-    public static void glCompressedTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage3D(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         nglCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data);
     }
 

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/NVTextureArray.java
Patch:
@@ -67,7 +67,7 @@ public static void glTexImage3DNV(@NativeType("GLenum") int target, @NativeType(
         nglTexImage3DNV(target, level, internalFormat, width, height, depth, border, format, type, memAddressSafe(pixels));
     }
 
-    public static void glTexImage3DNV(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalFormat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage3DNV(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalFormat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         nglTexImage3DNV(target, level, internalFormat, width, height, depth, border, format, type, pixels);
     }
 
@@ -115,7 +115,7 @@ public static void glTexSubImage3DNV(@NativeType("GLenum") int target, @NativeTy
 
     public static native void nglCompressedTexImage3DNV(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long data);
 
-    public static void glCompressedTexImage3DNV(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage3DNV(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         nglCompressedTexImage3DNV(target, level, internalformat, width, height, depth, border, imageSize, data);
     }
 

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/OESTexture3D.java
Patch:
@@ -55,7 +55,7 @@ public static void glTexImage3DOES(@NativeType("GLenum") int target, @NativeType
         nglTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, memAddressSafe(pixels));
     }
 
-    public static void glTexImage3DOES(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @Nullable @NativeType("void const *") long pixels) {
+    public static void glTexImage3DOES(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLenum") int format, @NativeType("GLenum") int type, @NativeType("void const *") long pixels) {
         nglTexImage3DOES(target, level, internalformat, width, height, depth, border, format, type, pixels);
     }
 
@@ -103,7 +103,7 @@ public static void glTexSubImage3DOES(@NativeType("GLenum") int target, @NativeT
 
     public static native void nglCompressedTexImage3DOES(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long data);
 
-    public static void glCompressedTexImage3DOES(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @Nullable @NativeType("void const *") long data) {
+    public static void glCompressedTexImage3DOES(@NativeType("GLenum") int target, @NativeType("GLint") int level, @NativeType("GLenum") int internalformat, @NativeType("GLsizei") int width, @NativeType("GLsizei") int height, @NativeType("GLsizei") int depth, @NativeType("GLint") int border, @NativeType("GLsizei") int imageSize, @NativeType("void const *") long data) {
         nglCompressedTexImage3DOES(target, level, internalformat, width, height, depth, border, imageSize, data);
     }
 

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -1819,11 +1819,11 @@ private static void memSet64(long ptr, int value, int bytes) {
         }
     }
     private static void memSet32(int ptr, int value, int bytes) {
-        int aligned = bytes & ~7;
+        int aligned = bytes & ~3;
 
         // Aligned body
         int vi = (value & 0xFF) * FILL_PATTERN_32;
-        for (int i = 0; i < aligned; i += 8) {
+        for (int i = 0; i < aligned; i += 4) {
             UNSAFE.putInt(null, (ptr + i) & 0xFFFF_FFFFL, vi);
         }
 

File: modules/generator/src/main/java/org/lwjgl/generator/util/URLValidator.java
Patch:
@@ -54,7 +54,7 @@ public static void checkURL(URL url) {
             return;
         }
 
-        if (!url.toString().startsWith("http://docs.gl")) {
+        if (!url.toString().startsWith("https://docs.gl")) {
             System.err.println(status == HttpURLConnection.HTTP_MOVED_PERM
                 ? "301: " + url + "\n  -> " + location[0]
                 : status + ": " + url

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/Assimp.java
Patch:
@@ -22,7 +22,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Contains bindings to the <a target="_blank" href="http://www.assimp.org/">Assimp</a> library.
+ * Contains bindings to the <a target="_blank" href="https://www.assimp.org/">Assimp</a> library.
  * 
  * <h3>General Features</h3>
  * 
@@ -320,7 +320,8 @@ public static SharedLibrary getDraco() {
      * Enables time measurements.
      * 
      * <p>If enabled, measures the time needed for each part of the loading process (i.e. IO time, importing, postprocessing, ..) and dumps these timings to the
-     * DefaultLogger. See the <a target="_blank" href="http://assimp.org/lib_html/perf.html">Performance Page</a> for more information on this topic.</p>
+     * DefaultLogger. See the <a target="_blank" href="https://assimp-docs.readthedocs.io/en/latest/usage/use_the_lib.html#performance">Performance Page</a> for more
+     * information on this topic.</p>
      * 
      * <p>Property type: bool. Default value: false.</p>
      */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/package-info.java
Patch:
@@ -5,7 +5,7 @@
  */
 
 /**
- * Contains bindings to the <a target="_blank" href="http://www.assimp.org/">Assimp</a> library, a library to import and export various 3d-model-formats including
+ * Contains bindings to the <a target="_blank" href="https://www.assimp.org/">Assimp</a> library, a library to import and export various 3d-model-formats including
  * scene-post-processing to generate missing render data.
  * 
  * <p>Assimp aims to provide a full asset conversion pipeline for use in game engines / realtime rendering systems of any kind, but it is not limited to this

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java
Patch:
@@ -27,7 +27,7 @@
  * 
  * <p>{@code J} parameters represent 64-bit integer values. {@code N} parameters represent C long values, which may be 32-bit or 64-bit integers
  * depending on the platform. {@code P} parameters represent pointer addresses, which maybe 32-bit or 64-bit values depending on the JVM.</p></li>
- * <li>the return value <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/types.html#type_signatures">JNI type signature</a></li>
+ * <li>the return value <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/types.html#type_signatures">JNI type signature</a></li>
  * </ul>
  */
 public final class JNI {

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/package-info.java
Patch:
@@ -5,10 +5,10 @@
  */
 
 /**
- * Contains bindings to the <a target="_blank" href="http://www.glfw.org/">GLFW</a> library.
+ * Contains bindings to the <a target="_blank" href="https://www.glfw.org/">GLFW</a> library.
  * 
- * <p>GLFW comes with extensive documentation, which you can read online <a target="_blank" href="http://www.glfw.org/docs/latest/">here</a>. The
- * <a target="_blank" href="http://www.glfw.org/faq.html">Frequently Asked Questions</a> are also useful.</p>
+ * <p>GLFW comes with extensive documentation, which you can read online <a target="_blank" href="https://www.glfw.org/docs/latest/">here</a>. The
+ * <a target="_blank" href="https://www.glfw.org/faq.html">Frequently Asked Questions</a> are also useful.</p>
  * 
  * <h3>Using GLFW on macOS</h3>
  * 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/JEmalloc.java
Patch:
@@ -20,7 +20,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to <a target="_blank" href="http://jemalloc.net/">jemalloc</a>.
+ * Native bindings to <a target="_blank" href="https://jemalloc.net/">jemalloc</a>.
  * 
  * <p>jemalloc is a general purpose malloc implementation that emphasizes fragmentation avoidance and scalable concurrency support. jemalloc first came into
  * use as the FreeBSD libc allocator in 2005, and since then it has found its way into numerous applications that rely on its predictable behavior. In
@@ -594,7 +594,7 @@ public static int nje_mallctl(long name, long oldp, long oldlenp, long newp, lon
     /**
      * Provides a general interface for introspecting the memory allocator, as well as setting modifiable parameters and triggering actions. The
      * period-separated {@code name} argument specifies a location in a tree-structured namespace; see the
-     * <a target="_blank" href="http://jemalloc.net/jemalloc.3.html#mallctl_namespace">MALLCTL NAMESPACE</a> section for
+     * <a target="_blank" href="https://jemalloc.net/jemalloc.3.html#mallctl_namespace">MALLCTL NAMESPACE</a> section for
      * documentation on the tree contents. To read a value, pass a pointer via {@code oldp} to adequate space to contain the value, and a pointer to its
      * length via {@code oldlenp}; otherwise pass {@code NULL} and {@code NULL}. Similarly, to write a value, pass a pointer to the value via {@code newp}, and its length
      * via {@code newlen}; otherwise pass {@code NULL} and {@code 0}.
@@ -615,7 +615,7 @@ public static int je_mallctl(@NativeType("char const *") ByteBuffer name, @Nulla
     /**
      * Provides a general interface for introspecting the memory allocator, as well as setting modifiable parameters and triggering actions. The
      * period-separated {@code name} argument specifies a location in a tree-structured namespace; see the
-     * <a target="_blank" href="http://jemalloc.net/jemalloc.3.html#mallctl_namespace">MALLCTL NAMESPACE</a> section for
+     * <a target="_blank" href="https://jemalloc.net/jemalloc.3.html#mallctl_namespace">MALLCTL NAMESPACE</a> section for
      * documentation on the tree contents. To read a value, pass a pointer via {@code oldp} to adequate space to contain the value, and a pointer to its
      * length via {@code oldlenp}; otherwise pass {@code NULL} and {@code NULL}. Similarly, to write a value, pass a pointer to the value via {@code newp}, and its length
      * via {@code newlen}; otherwise pass {@code NULL} and {@code 0}.

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/package-info.java
Patch:
@@ -5,10 +5,10 @@
  */
 
 /**
- * Contains bindings to the <a target="_blank" href="http://jemalloc.net/">jemalloc</a> library. jemalloc is a general purpose malloc implementation that emphasizes
+ * Contains bindings to the <a target="_blank" href="https://jemalloc.net/">jemalloc</a> library. jemalloc is a general purpose malloc implementation that emphasizes
  * fragmentation avoidance and scalable concurrency support.
  * 
- * <p>The jemalloc documentation can be found <a target="_blank" href="http://jemalloc.net/jemalloc.3.html">here</a>. The jemalloc
+ * <p>The jemalloc documentation can be found <a target="_blank" href="https://jemalloc.net/jemalloc.3.html">here</a>. The jemalloc
  * <a target="_blank" href="https://github.com/jemalloc/jemalloc/wiki">wiki</a> also contains useful information.</p>
  * 
  * <p>The jemalloc shared library that comes with LWJGL is configured with:</p>
@@ -26,7 +26,7 @@
  * <p>The shared library may be replaced with a custom build that has more features enabled.</p>
  * 
  * <p>Dynamic configuration (for enabled features) is also possible, using either the {@code MALLOC_CONF} environment variable or the
- * <a target="_blank" href="http://jemalloc.net/jemalloc.3.html#mallctl_namespace">MALLCTL NAMESPACE</a> and the {@code mallctl*} functions.</p>
+ * <a target="_blank" href="https://jemalloc.net/jemalloc.3.html#mallctl_namespace">MALLCTL NAMESPACE</a> and the {@code mallctl*} functions.</p>
  */
 @org.lwjgl.system.NonnullDefault
 package org.lwjgl.system.jemalloc;

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/ClangDocumentation.java
Patch:
@@ -91,7 +91,7 @@ private Functions() {}
      * <p>For example:</p>
      * 
      * <pre><code>
-     *  &lt;br&gt; &lt;br /&gt; &lt;a href="http://example.org/"&gt;</code></pre>
+     *  &lt;br&gt; &lt;br /&gt; &lt;a href="https://example.org/"&gt;</code></pre>
      * </li>
      * <li>{@link #CXComment_HTMLEndTag Comment_HTMLEndTag} - 
      * HTML end tag. Considered inline content.

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMCore.java
Patch:
@@ -1779,7 +1779,7 @@ public static int nLLVMGetEnumAttributeKindForName(long Name, long SLen) {
     /**
      * Return an unique id given the name of a enum attribute, or 0 if no attribute by that name exists.
      * 
-     * <p>See <a target="_blank" href="http://llvm.org/docs/LangRef.html#parameter-attributes">http://llvm.org/docs/LangRef.html#parameter-attributes</a> and <a target="_blank" href="http://llvm.org/docs/LangRef.html#function-attributes">http://llvm.org/docs/LangRef.html#function-attributes</a> for the
+     * <p>See <a target="_blank" href="https://llvm.org/docs/LangRef.html#parameter-attributes">https://llvm.org/docs/LangRef.html#parameter-attributes</a> and <a target="_blank" href="https://llvm.org/docs/LangRef.html#function-attributes">https://llvm.org/docs/LangRef.html#function-attributes</a> for the
      * list of available attributes.</p>
      * 
      * <p>NB: Attribute names and/or id are subject to change without going through the C API deprecation cycle.</p>
@@ -1792,7 +1792,7 @@ public static int LLVMGetEnumAttributeKindForName(@NativeType("char const *") By
     /**
      * Return an unique id given the name of a enum attribute, or 0 if no attribute by that name exists.
      * 
-     * <p>See <a target="_blank" href="http://llvm.org/docs/LangRef.html#parameter-attributes">http://llvm.org/docs/LangRef.html#parameter-attributes</a> and <a target="_blank" href="http://llvm.org/docs/LangRef.html#function-attributes">http://llvm.org/docs/LangRef.html#function-attributes</a> for the
+     * <p>See <a target="_blank" href="https://llvm.org/docs/LangRef.html#parameter-attributes">https://llvm.org/docs/LangRef.html#parameter-attributes</a> and <a target="_blank" href="https://llvm.org/docs/LangRef.html#function-attributes">https://llvm.org/docs/LangRef.html#function-attributes</a> for the
      * list of available attributes.</p>
      * 
      * <p>NB: Attribute names and/or id are subject to change without going through the C API deprecation cycle.</p>

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4.java
Patch:
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>, a lossless compression algorithm, providing compression speed &gt; 500 MB/s per core,
+ * Native bindings to <a target="_blank" href="https://lz4.org/">LZ4</a>, a lossless compression algorithm, providing compression speed &gt; 500 MB/s per core,
  * scalable with multi-cores CPU. It features an extremely fast decoder, with speed in multiple GB/s per core, typically reaching RAM speed limits on
  * multi-core systems.
  * 

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4Frame.java
Patch:
@@ -17,7 +17,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the frame API of <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>.
+ * Native bindings to the frame API of <a target="_blank" href="https://lz4.org/">LZ4</a>.
  * 
  * <p>LZ4F is a stand-alone API to create LZ4-compressed frames conformant with specification v1.6.1. It also offers streaming capabilities. {@code lz4.h} is
  * not required when using {@code lz4frame.h}, except to get constant such as {@link LZ4#LZ4_VERSION_NUMBER VERSION_NUMBER}.</p>

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4HC.java
Patch:
@@ -13,7 +13,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the high-compression API of <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>.
+ * Native bindings to the high-compression API of <a target="_blank" href="https://lz4.org/">LZ4</a>.
  * 
  * <h3>Streaming Compression - Bufferless synchronous API</h3>
  * 

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/package-info.java
Patch:
@@ -5,7 +5,7 @@
  */
 
 /**
- * Contains bindings to <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>, a lossless compression algorithm, providing compression speed &gt; 500 MB/s per core,
+ * Contains bindings to <a target="_blank" href="https://lz4.org/">LZ4</a>, a lossless compression algorithm, providing compression speed &gt; 500 MB/s per core,
  * scalable with multi-cores CPU. It features an extremely fast decoder, with speed in multiple GB/s per core, typically reaching RAM speed limits on
  * multi-core systems.
  */

File: modules/lwjgl/openal/src/generated/java/org/lwjgl/openal/package-info.java
Patch:
@@ -13,7 +13,7 @@
  * very useful option for debugging is {@code ALSOFT_LOGLEVEL}; it can be set to values 0 through 4, with higher values producing more information.</p>
  * 
  * <p>In addition to standard OpenAL features, OpenAL Soft supports <a target="_blank" href="https://en.wikipedia.org/wiki/Head-related_transfer_function">HRTF</a>,
- * <a target="_blank" href="https://en.wikipedia.org/wiki/Ambisonics">Ambisonics</a> and <a target="_blank" href="http://www.codemasters.com/research/3D_sound_for_3D_games.pdf">3D7.1</a>.
+ * <a target="_blank" href="https://en.wikipedia.org/wiki/Ambisonics">Ambisonics</a> and <a target="_blank" href="https://www.codemasters.com/research/3D_sound_for_3D_games.pdf">3D7.1</a>.
  * Documentation for these features is available in the OpenAL Soft <a target="_blank" href="https://github.com/kcat/openal-soft/tree/master/docs">repository</a>.</p>
  */
 @org.lwjgl.system.NonnullDefault

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/AMDBusAddressableMemory.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/amd/cl_amd_bus_addressable_memory.txt">amd_bus_addressable_memory</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/amd/cl_amd_bus_addressable_memory.txt">amd_bus_addressable_memory</a> extension.
  * 
  * <p>This extension defines an API that allows improved control of the physical memory used by the graphics device.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/AMDDeviceAttributeQuery.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/amd/cl_amd_device_attribute_query.txt">amd_device_attribute_query</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/amd/cl_amd_device_attribute_query.txt">amd_device_attribute_query</a> extension.
  * 
  * <p>This extension provides a means to query AMD-specific device attributes.</p>
  */

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/ARMControlledKernelTermination.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_controlled_kernel_termination.txt">arm_controlled_kernel_termination</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_controlled_kernel_termination.txt">arm_controlled_kernel_termination</a> extension.
  * 
  * <p>This extension enables the controlled termination of kernels using a built-in function.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/ARMCoreID.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_core_id.txt">arm_core_id</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_core_id.txt">arm_core_id</a> extension.
  * 
  * <p>This extension provides a built-in function ({@code uint arm_get_core_id( void )}) which returns a unique ID for the compute unit that a work-group is
  * running on. This value is uniform for a work-group.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/ARMImportMemory.java
Patch:
@@ -18,7 +18,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_import_memory.txt">arm_import_memory</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_import_memory.txt">arm_import_memory</a> extension.
  * 
  * <p>This extension adds a new function that allows for direct memory import into OpenCL via the {@link #clImportMemoryARM ImportMemoryARM} function.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/ARMJobSlotSelection.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_job_slot_selection.txt">arm_job_slot_selection</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_job_slot_selection.txt">arm_job_slot_selection</a> extension.
  * 
  * <p>On devices that support work submission via job slots, this extension provides a way of selecting the job slot that is used to submit work to the
  * device as well as a device info query to obtain a list of usable job slots.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/ARMPrintf.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_printf.txt">arm_printf</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_printf.txt">arm_printf</a> extension.
  * 
  * <p>This extension enables the device side printf built in function for OpenCL C versions prior to 1.2. It also extends the {@code cl_context_properties}
  * enumeration to allow a user defined {@code printf} callback and/or {@code printf} buffer size.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/ARMProtectedMemoryAllocation.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_protected_memory_allocation.txt">arm_protected_memory_allocation</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_protected_memory_allocation.txt">arm_protected_memory_allocation</a> extension.
  * 
  * <p>This extensions enables the creation of buffers and images backed by protected memory, i.e. memory protected using TrustZone Media Protection.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/ARMSchedulingControls.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_scheduling_controls.txt">arm_scheduling_controls</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/arm/cl_arm_scheduling_controls.txt">arm_scheduling_controls</a> extension.
  * 
  * <p>This extension gives applications explicit control over some aspects of work scheduling. It can be used for performance tuning or debugging.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/EXTAtomicCounters32.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_atomic_counters_32.txt">ext_atomic_counters_32</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_atomic_counters_32.txt">ext_atomic_counters_32</a> extension.
  * 
  * <p>This extension adds support in the OpenCL C language for 32-bit atomic counters. Atomic counter is a device-level counter that can be added /
  * decremented by work-items in a work-group or across work-groups executing a kernel, where the atomicity of the operation is guaranteed. The access to

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/EXTAtomicCounters64.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_atomic_counters_64.txt">ext_atomic_counters_64</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_atomic_counters_64.txt">ext_atomic_counters_64</a> extension.
  * 
  * <p>This extension adds support in the OpenCL C language for 64-bit atomic counters. Atomic counter is a device-level counter that can be added /
  * decremented by work-items in a work-group or across work-groups executing a kernel, where the atomicity of the operation is guaranteed. The access to

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/EXTCXXForOpencl.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_cxx_for_opencl.txt">ext_cxx_for_opencl</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_cxx_for_opencl.txt">ext_cxx_for_opencl</a> extension.
  * 
  * <p>This extension adds support for building programs written using the C++ for OpenCL kernel language. It also enables applications to query the version
  * of the language supported by the device compiler.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/EXTDeviceFission.java
Patch:
@@ -18,7 +18,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_device_fission.txt">ext_device_fission</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_device_fission.txt">ext_device_fission</a> extension.
  * 
  * <p>This extension provides an interface for sub-dividing an OpenCL device into multiple sub-devices. There are a number of cases in which a typical user
  * would like to subdivide a device:</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/EXTFloatAtomics.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_float_atomics.txt">ext_float_atomics</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_float_atomics.txt">ext_float_atomics</a> extension.
  * 
  * <p>This extension enables programmers to perform atomic operations on floating-point numbers in memory.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/EXTMigrateMemobject.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_migrate_memobject.txt">ext_migrate_memobject</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/ext/cl_ext_migrate_memobject.txt">ext_migrate_memobject</a> extension.
  * 
  * <p>This extension defines a mechanism for assigning which device an OpenCL memory object resides.</p>
  */

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/IMGCachedAllocations.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/img/cl_img_cached_allocations.txt">img_cached_allocations</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/img/cl_img_cached_allocations.txt">img_cached_allocations</a> extension.
  * 
  * <p>This extension extends the functionality provided by {@link CL10#clCreateBuffer CreateBuffer} and {@link CL12#clCreateImage CreateImage} to allow the OpenCL implementation to allocate memory on the
  * device which is also cached on the host CPU.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/IMGGenerateMipmap.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/img/cl_img_generate_mipmap.txt">img_generate_mipmap</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/img/cl_img_generate_mipmap.txt">img_generate_mipmap</a> extension.
  * 
  * <p>This extension adds the functionality to generate mipmap images from a source image and thus avoid having to generate and import mipmapped images from
  * the host or through the {@code cl_khr_gl_sharing} extension.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/IMGMemProperties.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/img/cl_img_mem_properties.txt">img_mem_properties</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/img/cl_img_mem_properties.txt">img_mem_properties</a> extension.
  * 
  * <p>This extension provides additional properties that can be passed to {@link CL30#clCreateBufferWithProperties CreateBufferWithProperties}.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/IMGYUVImage.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/img/cl_img_yuv_image.txt">img_yuv_image</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/img/cl_img_yuv_image.txt">img_yuv_image</a> extension.
  * 
  * <p>This extension provides new image formats to read YUV images, such as those provided by cameras on mobile devices.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELAccelerator.java
Patch:
@@ -19,7 +19,7 @@
 import static org.lwjgl.system.Pointer.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_accelerator.txt">intel_accelerator</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_accelerator.txt">intel_accelerator</a> extension.
  * 
  * <p>The accelerator extension consists of a unified set of OpenCL runtime APIs to create, query, and manage the lifetime of objects which represent
  * acceleration processors, engines, or algorithms. Accelerator object instances are referenced with the generic cl_accelerator_intel type by the runtime

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELAdvancedMotionEstimation.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_advanced_motion_estimation.txt">intel_advanced_motion_estimation</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_advanced_motion_estimation.txt">intel_advanced_motion_estimation</a> extension.
  * 
  * <p>This extension builds upon the cl_intel_motion_estimation extension by providing block-based estimation and greater control over the estimation
  * algorithm.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELCommandQueueFamilies.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_command_queue_families.txt">intel_command_queue_families</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_command_queue_families.txt">intel_command_queue_families</a> extension.
  * 
  * <p>Some OpenCL devices may support different sets of command queues with different capabilities or execution properties. These sets are described in this
  * extension as command queue families. Applications may be able to improve performance or predictability by creating command queues from a specific

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELCreateBufferWithProperties.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_create_buffer_with_properties.txt">intel_create_buffer_with_properties</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_create_buffer_with_properties.txt">intel_create_buffer_with_properties</a> extension.
  * 
  * <p>This extension allows OpenCL 1.x and 2.x devices to support the {@code clCreateBufferWithProperties} API that was added in OpenCL 3.0. This allows
  * older OpenCL implementations to support other optional extensions or features that use the {@code clCreateBufferWithProperties} API to specify

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELDeviceAttributeQuery.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_device_attribute_query.txt">intel_device_attribute_query</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_device_attribute_query.txt">intel_device_attribute_query</a> extension.
  * 
  * <p>This extension can be used to query additional information about Intel OpenCL devices. The additional information may be useful to tailor a specific
  * workload to the properties of the device.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELDevicePartitionByNames.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_device_partition_by_names.txt">intel_device_partition_by_names</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_device_partition_by_names.txt">intel_device_partition_by_names</a> extension.
  * 
  * <p>This extension allows the user to create sub-devices containing specific compute units. {@link #CL_DEVICE_PARTITION_BY_NAMES_INTEL DEVICE_PARTITION_BY_NAMES_INTEL} is a
  * {@code cl_device_partition_property} that is followed by a list of compute unit names, teminated by {@link #CL_PARTITION_BY_NAMES_LIST_END_INTEL PARTITION_BY_NAMES_LIST_END_INTEL}.

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELDeviceSideAVCMotionEstimation.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_device_side_avc_motion_estimation.txt">intel_device_side_avc_motion_estimation</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_device_side_avc_motion_estimation.txt">intel_device_side_avc_motion_estimation</a> extension.
  * 
  * <p>Video motion estimation (VME) is defined as of set motion estimation operations that are used to determine the motion vectors, intra estimation angles
  * and macroblock partitioning combination that best describe the transformation to the source macroblock, from blocks in one or more previous reference

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELDriverDiagnostics.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_driver_diagnostics.txt">intel_driver_diagnostics</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_driver_diagnostics.txt">intel_driver_diagnostics</a> extension.
  * 
  * <p>The OpenCL specification allows registering a callback function during OpenCL context creation that will be called whenever there is an error. This
  * extension extends this mechanism by allowing the driver to pass additional strings containing diagnostic information. The diagnostic messages can help

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELEGLImageYUV.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_egl_image_yuv.txt">intel_egl_image_yuv</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_egl_image_yuv.txt">intel_egl_image_yuv</a> extension.
  * 
  * <p>The goal of this extension is to increase interoperability between OpenCL and EGL by introducing support for planar YUV images. Specifically, this
  * extension adds the ability to create OpenCL memory objects representing individual planes of an EGL planar YUV image.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELExecByLocalThread.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_exec_by_local_thread.txt">intel_exec_by_local_thread</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_exec_by_local_thread.txt">intel_exec_by_local_thread</a> extension.
  * 
  * <p>This extension allows the user to execute OpenCL tasks and kernels with the user application's threads. The extension defines a token that can be passed
  * to {@link CL10#clCreateCommandQueue CreateCommandQueue}, creating a queue with the "thread local exec" capability.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELMemAllocBufferLocation.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_mem_alloc_buffer_location.txt">intel_mem_alloc_buffer_location</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_mem_alloc_buffer_location.txt">intel_mem_alloc_buffer_location</a> extension.
  * 
  * <p>On some devices, global memory may be partitioned into disjoint regions. This may be to enable control over specific characteristics such as available
  * bandwidths on memory interfaces, or performance on types of access patterns.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELMemChannelProperty.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_mem_channel_property.txt">intel_mem_channel_property</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_mem_channel_property.txt">intel_mem_channel_property</a> extension.
  * 
  * <p>On some accelerators, manual partitioning of buffers across different regions of memory may result in higher performance by spreading high-demand
  * memory across different interfaces or ports of a memory.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELMemForceHostMemory.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_mem_force_host_memory.txt">intel_mem_force_host_memory</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_mem_force_host_memory.txt">intel_mem_force_host_memory</a> extension.
  * 
  * <p>This extension allows an application to override driver heuristics to force allocation of a buffer memory object in host memory. Host memory is
  * described in the {@code cl_intel_unified_shared_memory} extension.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELMotionEstimation.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_motion_estimation.txt">intel_motion_estimation</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_motion_estimation.txt">intel_motion_estimation</a> extension.
  * 
  * <p>This document presents the motion estimation extension for OpenCL. This extension includes a set of host-callable functions for frame-based motion
  * estimation and introduces motion estimators, or also "motion estimation accelerator objects". These accelerator objects provide an abstraction of

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELPackedYUV.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_packed_yuv.txt">intel_packed_yuv</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_packed_yuv.txt">intel_packed_yuv</a> extension.
  * 
  * <p>The purpose of this extension is to provide OpenCL support for packed YUV images.</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELPlanarYUV.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_planar_yuv.txt">intel_planar_yuv</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_planar_yuv.txt">intel_planar_yuv</a> extension.
  * 
  * <p>The purpose of this extension is to provide OpenCL support for the Planar YUV (YCbCr) image formats. {@link #CL_NV12_INTEL NV12_INTEL} format must be supported; support for
  * other Planar YUV formats that may be defined in this extension is optional.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELRequiredSubgroupSize.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_required_subgroup_size.txt">intel_required_subgroup_size</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_required_subgroup_size.txt">intel_required_subgroup_size</a> extension.
  * 
  * <p>The goal of this extension is to allow programmers to optionally specify the required subgroup size for a kernel function. This information is
  * important for the correctness of many subgroup algorithms, and in some cases may be used by the compiler to generate more optimal code.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELSharingFormatQuery.java
Patch:
@@ -18,7 +18,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_sharing_format_query.txt">intel_sharing_format_query</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_sharing_format_query.txt">intel_sharing_format_query</a> extension.
  * 
  * <p>Existing interop / sharing extensions require support for a minimum set of image formats, however many OpenCL implementations may support sharing image
  * formats above and beyond the minimum. This extension provides a mechanism for an application to query the set of API-specific image formats that an

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELSimultaneousSharing.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_simultaneous_sharing.txt">intel_simultaneous_sharing</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_simultaneous_sharing.txt">intel_simultaneous_sharing</a> extension.
  * 
  * <p>Currently OpenCL 1.2 Extension Spec forbids to specify interoperability with multiple graphics APIs at {@link CL10#clCreateContext CreateContext} or
  * {@link CL10#clCreateContextFromType CreateContextFromType} time and defines that {@link CL10#CL_INVALID_OPERATION INVALID_OPERATION} should be returned in such cases as noted e.g. in chapters dedicated to

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELSubgroups.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_subgroups.txt">intel_subgroups</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_subgroups.txt">intel_subgroups</a> extension.
  * 
  * <p>The goal of this extension is to allow programmers to improve the performance of their applications by taking advantage of the fact that some work
  * items in a work group execute together as a group (a "subgroup"), and that work items in a subgroup can take advantage of hardware features that are

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELUnifiedSharedMemory.java
Patch:
@@ -19,7 +19,7 @@
 import static org.lwjgl.system.Pointer.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_unified_shared_memory.txt">intel_unified_shared_memory</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_unified_shared_memory.txt">intel_unified_shared_memory</a> extension.
  * 
  * <p>This extension adds "Unified Shared Memory" (USM) to OpenCL. Unified Shared Memory provides:</p>
  * 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/INTELVAAPIMediaSharing.java
Patch:
@@ -18,7 +18,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_va_api_media_sharing.txt">intel_va_api_media_sharing</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_va_api_media_sharing.txt">intel_va_api_media_sharing</a> extension.
  * 
  * <p>The goal of this extension is to provide interoperability between OpenCL and the cross-platform Video Acceleration API (VA API). The extension
  * specifically enables sharing of VA API surfaces for media. It uses similar mechanisms and provides similar surface sharing capabilities for VA API that

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/KHREGLEvent.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_egl_event.txt">khr_egl_event</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_egl_event.txt">khr_egl_event</a> extension.
  * 
  * <p>This extension allows creating OpenCL event objects linked to EGL fence sync objects, potentially improving efficiency of sharing images and buffers
  * between the two APIs. The companion {@code EGL_KHR_cl_event} extension provides the complementary functionality of creating an EGL sync object from an

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/KHREGLImage.java
Patch:
@@ -19,7 +19,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_egl_image.txt">khr_egl_image</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_egl_image.txt">khr_egl_image</a> extension.
  * 
  * <p>This extension provides a mechanism for creating derived resources, such as OpenCL image objects, from {@code EGLImages}.</p>
  */

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/KHRFP64.java
Patch:
@@ -5,7 +5,7 @@
  */
 package org.lwjgl.opencl;
 
-/** Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_fp64.txt">khr_fp64</a>  extension. */
+/** Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_fp64.txt">khr_fp64</a>  extension. */
 public final class KHRFP64 {
 
     /** cl_device_info */

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/KHRGLSharing.java
Patch:
@@ -18,7 +18,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.Pointer.*;
 
-/** Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_gl_sharing.txt">khr_gl_sharing</a> extension. */
+/** Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_gl_sharing.txt">khr_gl_sharing</a> extension. */
 public class KHRGLSharing {
 
     /**

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/KHRICD.java
Patch:
@@ -5,7 +5,7 @@
  */
 package org.lwjgl.opencl;
 
-/** Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_icd.txt">khr_icd</a> extension. */
+/** Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_icd.txt">khr_icd</a> extension. */
 public final class KHRICD {
 
     /** Accepted as {@code param_name} to the function {@link CL10#clGetPlatformInfo GetPlatformInfo}. */

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/KHRSPIR.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_spir.txt">khr_spir</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_spir.txt">khr_spir</a> extension.
  * 
  * <p>This extension adds support to create an OpenCL program object from a Standard Portable Intermediate Representation (SPIR) instance. SPIR is a vendor
  * neutral non-source representation for OpenCL C programs.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/KHRSubgroups.java
Patch:
@@ -19,7 +19,7 @@
 import static org.lwjgl.system.Pointer.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_subgroups.txt">khr_subgroups</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/khr/cl_khr_subgroups.txt">khr_subgroups</a> extension.
  * 
  * <p>This extension adds support for implementation-controlled groups of work items, known as subgroups. Subgroups behave similarly to work groups and have
  * their own sets of built-ins and synchronization primitives. Subgroups within a work group are independent, may make forward progress with respect to

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/NVCreateBuffer.java
Patch:
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.JNI.*;
 import static org.lwjgl.system.MemoryUtil.*;
 
-/** Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/nv/cl_nv_create_buffer.txt">nv_create_buffer</a> extension. */
+/** Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/nv/cl_nv_create_buffer.txt">nv_create_buffer</a> extension. */
 public class NVCreateBuffer {
 
     public static final int

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/NVDeviceAttributeQuery.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/nv/cl_nv_device_attribute_query.txt">nv_device_attribute_query</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/nv/cl_nv_device_attribute_query.txt">nv_device_attribute_query</a> extension.
  * 
  * <p>This extension provides a mechanism to query device attributes specific to <strong>NVIDIA</strong> hardware. This will enable the programmer to
  * optimize OpenCL kernels based on the specifics of the hardware.</p>

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/QCOMEXTHostPtr.java
Patch:
@@ -18,7 +18,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/qcom/cl_qcom_ext_host_ptr.txt">qcom_ext_host_ptr</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/qcom/cl_qcom_ext_host_ptr.txt">qcom_ext_host_ptr</a> extension.
  * 
  * <p>This extension extends the functionality provided by {@link CL10#clCreateBuffer CreateBuffer}, {@link CL10#clCreateImage2D CreateImage2D}, {@link CL10#clCreateImage3D CreateImage3D}. It allows applications to specify
  * a new flag {@link #CL_MEM_EXT_HOST_PTR_QCOM MEM_EXT_HOST_PTR_QCOM} which enables the driver to map external memory allocations --to be defined in future layered extensions-- to the

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/QCOMEXTHostPtrIOCoherent.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.opencl;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/qcom/cl_qcom_ext_host_ptr_iocoherent.txt">qcom_ext_host_ptr_iocoherent</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/qcom/cl_qcom_ext_host_ptr_iocoherent.txt">qcom_ext_host_ptr_iocoherent</a> extension.
  * 
  * <p>This extension extends the functionality provided by {@code cl_qcom_ext_host_ptr} by adding a new host cache policy. It allows applications to specify
  * a new value, {@link #CL_MEM_HOST_IOCOHERENT_QCOM MEM_HOST_IOCOHERENT_QCOM}, for {@code cl_mem_ext_host_ptr::host_cache_policy}. When the application selects this value for host cache

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/pocl_content_size.java
Patch:
@@ -11,7 +11,7 @@
 import static org.lwjgl.system.JNI.*;
 
 /**
- * Native bindings to the <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/pocl/cl_pocl_content_size.txt">pocl_content_size</a> extension.
+ * Native bindings to the <a target="_blank" href="https://www.khronos.org/registry/OpenCL/extensions/pocl/cl_pocl_content_size.txt">pocl_content_size</a> extension.
  * 
  * <p>This extension provides a way to to indicate a buffer which will hold the number of meaningful bytes in another buffer, after kernel execution.</p>
  * 

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/Nuklear.java
Patch:
@@ -9847,7 +9847,7 @@ public static ByteBuffer nk_font_atlas_bake(@NativeType("struct nk_font_atlas *"
             check(height, 1);
         }
         long __result = nnk_font_atlas_bake(atlas.address(), memAddress(width), memAddress(height), fmt);
-        return memByteBufferSafe(__result, width.get(width.position()) * height.get(height.position()));
+        return memByteBufferSafe(__result, width.get(width.position()) * height.get(height.position()) * (fmt == NK_FONT_ATLAS_RGBA32 ? 4 : 1));
     }
 
     // --- [ nk_font_atlas_end ] ---
@@ -10886,7 +10886,7 @@ public static ByteBuffer nk_font_atlas_bake(@NativeType("struct nk_font_atlas *"
             check(height, 1);
         }
         long __result = nnk_font_atlas_bake(atlas.address(), width, height, fmt);
-        return memByteBufferSafe(__result, width[0] * height[0]);
+        return memByteBufferSafe(__result, width[0] * height[0] * (fmt == NK_FONT_ATLAS_RGBA32 ? 4 : 1));
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/Assimp.java
Patch:
@@ -1091,7 +1091,7 @@ public static SharedLibrary getDraco() {
      * 
      * <p>When this flag is undefined any material with specularity will use the new {@code KHR_materials_specular} extension. Enabling this flag will revert to
      * the deprecated extension. Note that exporting {@code KHR_materials_pbrSpecularGlossiness} with extensions other than {@code KHR_materials_unlit} is
-     * unsupported, including the basic {@code pbrMetallicRoughness spec.</p>
+     * unsupported, including the basic {@code pbrMetallicRoughness} spec.</p>
      * 
      * <p>Property type: Bool. Default value: false.</p>
      */

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CU.java
Patch:
@@ -31,7 +31,7 @@
  */
 public class CU {
 
-    private static final SharedLibrary NVCUDA = Library.loadNative(CU.class, "org.lwjgl.cuda", Configuration.CUDA_LIBRARY_NAME, "nvcuda");
+    private static final SharedLibrary NVCUDA = Library.loadNative(CU.class, "org.lwjgl.cuda", Configuration.CUDA_LIBRARY_NAME, Platform.get() == Platform.WINDOWS ? "nvcuda" : "cuda");
 
     /** Contains the function pointers loaded from the NVCUDA {@link SharedLibrary}. */
     public static final class Functions {

File: modules/lwjgl/opengl/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -98,7 +98,7 @@ public static void create() {
         SharedLibrary GL;
         switch (Platform.get()) {
             case LINUX:
-                GL = Library.loadNative(GL.class, "org.lwjgl.opengl", Configuration.OPENGL_LIBRARY_NAME, "libGL.so.1", "libGL.so");
+                GL = Library.loadNative(GL.class, "org.lwjgl.opengl", Configuration.OPENGL_LIBRARY_NAME, "libGLX.so.0", "libGL.so.1", "libGL.so");
                 break;
             case MACOSX:
                 GL = Library.loadNative(GL.class, "org.lwjgl.opengl", Configuration.OPENGL_LIBRARY_NAME, "/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL");

File: modules/lwjgl/openal/src/generated/java/org/lwjgl/openal/package-info.java
Patch:
@@ -5,9 +5,9 @@
  */
 
 /**
- * Contains bindings to the <a target="_blank" href="http://www.openal.org/">OpenAL</a> cross-platform 3D audio API.
+ * Contains bindings to the <a target="_blank" href="https://www.openal.org/">OpenAL</a> cross-platform 3D audio API.
  * 
- * <p>LWJGL comes with a software OpenAL implementation, <a target="_blank" href="http://www.openal-soft.org/">OpenAL Soft</a>.</p>
+ * <p>LWJGL comes with a software OpenAL implementation, <a target="_blank" href="https://www.openal-soft.org/">OpenAL Soft</a>.</p>
  * 
  * <p>OpenAL Soft can be dynamically configured with <a target="_blank" href="https://github.com/kcat/openal-soft/blob/master/docs/env-vars.txt">environment variables</a>. A
  * very useful option for debugging is {@code ALSOFT_LOGLEVEL}; it can be set to values 0 through 4, with higher values producing more information.</p>

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/CoreGraphics.java
Patch:
@@ -37,7 +37,7 @@ private Functions() {}
             EventCreateMouseEvent         = apiGetFunctionAddress(COREGRAPHICS, "CGEventCreateMouseEvent"),
             EventCreateKeyboardEvent      = apiGetFunctionAddress(COREGRAPHICS, "CGEventCreateKeyboardEvent"),
             EventCreateScrollWheelEvent   = apiGetFunctionAddress(COREGRAPHICS, "CGEventCreateScrollWheelEvent"),
-            EventCreateScrollWheelEvent2  = COREGRAPHICS.getFunctionAddress("CGEventCreateScrollWheelEvent2"),
+            EventCreateScrollWheelEvent2  = apiGetFunctionAddressOptional(COREGRAPHICS, "CGEventCreateScrollWheelEvent2"),
             EventCreateCopy               = apiGetFunctionAddress(COREGRAPHICS, "CGEventCreateCopy"),
             EventCreateSourceFromEvent    = apiGetFunctionAddress(COREGRAPHICS, "CGEventCreateSourceFromEvent"),
             EventSetSource                = apiGetFunctionAddress(COREGRAPHICS, "CGEventSetSource"),
@@ -57,12 +57,12 @@ private Functions() {}
             EventGetDoubleValueField      = apiGetFunctionAddress(COREGRAPHICS, "CGEventGetDoubleValueField"),
             EventSetDoubleValueField      = apiGetFunctionAddress(COREGRAPHICS, "CGEventSetDoubleValueField"),
             EventTapCreate                = apiGetFunctionAddress(COREGRAPHICS, "CGEventTapCreate"),
-            EventTapCreateForPid          = COREGRAPHICS.getFunctionAddress("CGEventTapCreateForPid"),
+            EventTapCreateForPid          = apiGetFunctionAddressOptional(COREGRAPHICS, "CGEventTapCreateForPid"),
             EventTapEnable                = apiGetFunctionAddress(COREGRAPHICS, "CGEventTapEnable"),
             EventTapIsEnabled             = apiGetFunctionAddress(COREGRAPHICS, "CGEventTapIsEnabled"),
             EventTapPostEvent             = apiGetFunctionAddress(COREGRAPHICS, "CGEventTapPostEvent"),
             EventPost                     = apiGetFunctionAddress(COREGRAPHICS, "CGEventPost"),
-            EventPostToPid                = COREGRAPHICS.getFunctionAddress("CGEventPostToPid"),
+            EventPostToPid                = apiGetFunctionAddressOptional(COREGRAPHICS, "CGEventPostToPid"),
             GetEventTapList               = apiGetFunctionAddress(COREGRAPHICS, "CGGetEventTapList");
 
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/Crypt32.java
Patch:
@@ -31,9 +31,9 @@ private Functions() {}
         /** Function address. */
         public static final long
             CryptProtectData     = apiGetFunctionAddress(CRYPT32, "CryptProtectData"),
-            CryptProtectMemory   = CRYPT32.getFunctionAddress("CryptProtectMemory"),
+            CryptProtectMemory   = apiGetFunctionAddressOptional(CRYPT32, "CryptProtectMemory"),
             CryptUnprotectData   = apiGetFunctionAddress(CRYPT32, "CryptUnprotectData"),
-            CryptUnprotectMemory = CRYPT32.getFunctionAddress("CryptUnprotectMemory");
+            CryptUnprotectMemory = apiGetFunctionAddressOptional(CRYPT32, "CryptUnprotectMemory");
 
     }
 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/Kernel32.java
Patch:
@@ -28,9 +28,9 @@ private Functions() {}
             GetProcessId              = apiGetFunctionAddress(KERNEL32, "GetProcessId"),
             GetCurrentThread          = apiGetFunctionAddress(KERNEL32, "GetCurrentThread"),
             GetCurrentThreadId        = apiGetFunctionAddress(KERNEL32, "GetCurrentThreadId"),
-            GetThreadId               = KERNEL32.getFunctionAddress("GetThreadId"),
-            GetProcessIdOfThread      = KERNEL32.getFunctionAddress("GetProcessIdOfThread"),
-            GetCurrentProcessorNumber = KERNEL32.getFunctionAddress("GetCurrentProcessorNumber");
+            GetThreadId               = apiGetFunctionAddressOptional(KERNEL32, "GetThreadId"),
+            GetProcessIdOfThread      = apiGetFunctionAddressOptional(KERNEL32, "GetProcessIdOfThread"),
+            GetCurrentProcessorNumber = apiGetFunctionAddressOptional(KERNEL32, "GetCurrentProcessorNumber");
 
     }
 

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Checks.java
Patch:
@@ -50,7 +50,7 @@ public final class Checks {
     /**
      * Debug functions flag.
      *
-     * <p>When enabled, capabilities classes will print an error message when they fail to retrieve a function pointer.</p>
+     * <p>When enabled, a warning message will be output to the debug stream when LWJGL fails to retrieve a function pointer.</p>
      *
      * <p>Can be enabled by setting {@link Configuration#DEBUG_FUNCTIONS} to true.</p>
      */

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java
Patch:
@@ -339,9 +339,9 @@ public class Configuration<T> {
     public static final Configuration<Boolean> DEBUG_STACK = new Configuration<>("org.lwjgl.util.DebugStack", StateInit.BOOLEAN);
 
     /**
-     * When enabled, capabilities classes will print an error message when they fail to retrieve a function pointer.
+     * When enabled, a warning message will be output to {@link #DEBUG_STREAM} when LWJGL fails to retrieve a function pointer.
      *
-     * <p>Function pointers in such classes are retrieved unconditionally, so this option may generate a lot of output and many false negatives.</p>
+     * <p>This option may generate a lot of output and false negatives for functions in unused classes.</p>
      *
      * <p>This option requires {@link #DEBUG} to be enabled.</p>
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUGL.java
Patch:
@@ -33,7 +33,7 @@ private Functions() {}
         public static final long
             GraphicsGLRegisterBuffer  = apiGetFunctionAddress(CU.getLibrary(), "cuGraphicsGLRegisterBuffer"),
             GraphicsGLRegisterImage   = apiGetFunctionAddress(CU.getLibrary(), "cuGraphicsGLRegisterImage"),
-            GLGetDevices              = CU.getLibrary().getFunctionAddress(__CUDA_API_VERSION("cuGLGetDevices", 2)),
+            GLGetDevices              = apiGetFunctionAddressOptional(CU.getLibrary(), __CUDA_API_VERSION("cuGLGetDevices", 2)),
             GLCtxCreate               = apiGetFunctionAddress(CU.getLibrary(), __CUDA_API_VERSION("cuGLCtxCreate", 2)),
             GLInit                    = apiGetFunctionAddress(CU.getLibrary(), "cuGLInit"),
             GLRegisterBufferObject    = apiGetFunctionAddress(CU.getLibrary(), "cuGLRegisterBufferObject"),

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FreeType.java
Patch:
@@ -109,7 +109,7 @@ private Functions() {}
             Bitmap_Blend                         = apiGetFunctionAddress(FREETYPE, "FT_Bitmap_Blend"),
             GlyphSlot_Own_Bitmap                 = apiGetFunctionAddress(FREETYPE, "FT_GlyphSlot_Own_Bitmap"),
             Bitmap_Done                          = apiGetFunctionAddress(FREETYPE, "FT_Bitmap_Done"),
-            Stream_OpenBzip2                     = FREETYPE.getFunctionAddress("FT_Stream_OpenBzip2"),
+            Stream_OpenBzip2                     = apiGetFunctionAddressOptional(FREETYPE, "FT_Stream_OpenBzip2"),
             FTC_Manager_New                      = apiGetFunctionAddress(FREETYPE, "FTC_Manager_New"),
             FTC_Manager_Reset                    = apiGetFunctionAddress(FREETYPE, "FTC_Manager_Reset"),
             FTC_Manager_Done                     = apiGetFunctionAddress(FREETYPE, "FTC_Manager_Done"),

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/ClangFatalErrorHandler.java
Patch:
@@ -23,8 +23,8 @@ private Functions() {}
 
         /** Function address. */
         public static final long
-            install_aborting_llvm_fatal_error_handler = CLANG.getFunctionAddress("clang_install_aborting_llvm_fatal_error_handler"),
-            uninstall_llvm_fatal_error_handler        = CLANG.getFunctionAddress("clang_uninstall_llvm_fatal_error_handler");
+            install_aborting_llvm_fatal_error_handler = apiGetFunctionAddressOptional(CLANG, "clang_install_aborting_llvm_fatal_error_handler"),
+            uninstall_llvm_fatal_error_handler        = apiGetFunctionAddressOptional(CLANG, "clang_uninstall_llvm_fatal_error_handler");
 
     }
 

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMError.java
Patch:
@@ -31,7 +31,7 @@ private Functions() {}
             GetErrorMessage      = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMGetErrorMessage"),
             DisposeErrorMessage  = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMDisposeErrorMessage"),
             GetStringErrorTypeId = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMGetStringErrorTypeId"),
-            CreateStringError    = LLVMCore.getLibrary().getFunctionAddress("LLVMCreateStringError");
+            CreateStringError    = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMCreateStringError");
 
     }
 

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMInitialization.java
Patch:
@@ -25,8 +25,8 @@ private Functions() {}
             InitializeScalarOpts             = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMInitializeScalarOpts"),
             InitializeObjCARCOpts            = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMInitializeObjCARCOpts"),
             InitializeVectorization          = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMInitializeVectorization"),
-            InitializeInstCombine            = LLVMCore.getLibrary().getFunctionAddress("LLVMInitializeInstCombine"),
-            InitializeAggressiveInstCombiner = LLVMCore.getLibrary().getFunctionAddress("LLVMInitializeAggressiveInstCombiner"),
+            InitializeInstCombine            = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMInitializeInstCombine"),
+            InitializeAggressiveInstCombiner = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMInitializeAggressiveInstCombiner"),
             InitializeIPO                    = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMInitializeIPO"),
             InitializeInstrumentation        = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMInitializeInstrumentation"),
             InitializeAnalysis               = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMInitializeAnalysis"),

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMRemarks.java
Patch:
@@ -45,12 +45,12 @@ private Functions() {}
             RemarkEntryGetFirstArg          = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMRemarkEntryGetFirstArg"),
             RemarkEntryGetNextArg           = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMRemarkEntryGetNextArg"),
             RemarkParserCreateYAML          = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMRemarkParserCreateYAML"),
-            RemarkParserCreateBitstream     = LLVMCore.getLibrary().getFunctionAddress("LLVMRemarkParserCreateBitstream"),
+            RemarkParserCreateBitstream     = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMRemarkParserCreateBitstream"),
             RemarkParserGetNext             = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMRemarkParserGetNext"),
             RemarkParserHasError            = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMRemarkParserHasError"),
             RemarkParserGetErrorMessage     = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMRemarkParserGetErrorMessage"),
             RemarkParserDispose             = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMRemarkParserDispose"),
-            RemarkVersion                   = LLVMCore.getLibrary().getFunctionAddress("LLVMRemarkVersion");
+            RemarkVersion                   = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMRemarkVersion");
 
     }
 

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMTargetMachine.java
Patch:
@@ -48,9 +48,9 @@ private Functions() {}
             TargetMachineEmitToFile         = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMTargetMachineEmitToFile"),
             TargetMachineEmitToMemoryBuffer = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMTargetMachineEmitToMemoryBuffer"),
             GetDefaultTargetTriple          = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMGetDefaultTargetTriple"),
-            NormalizeTargetTriple           = LLVMCore.getLibrary().getFunctionAddress("LLVMNormalizeTargetTriple"),
-            GetHostCPUName                  = LLVMCore.getLibrary().getFunctionAddress("LLVMGetHostCPUName"),
-            GetHostCPUFeatures              = LLVMCore.getLibrary().getFunctionAddress("LLVMGetHostCPUFeatures"),
+            NormalizeTargetTriple           = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMNormalizeTargetTriple"),
+            GetHostCPUName                  = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMGetHostCPUName"),
+            GetHostCPUFeatures              = apiGetFunctionAddressOptional(LLVMCore.getLibrary(), "LLVMGetHostCPUFeatures"),
             AddAnalysisPasses               = apiGetFunctionAddress(LLVMCore.getLibrary(), "LLVMAddAnalysisPasses");
 
     }

File: modules/lwjgl/harfbuzz/src/generated/java/org/lwjgl/util/harfbuzz/HarfBuzz.java
Patch:
@@ -5425,7 +5425,7 @@ public static void nhb_paint_funcs_set_push_transform_func(long funcs, long func
         invokePPPPV(funcs, func, user_data, destroy, __functionAddress);
     }
 
-    public static void hb_paint_funcs_set_push_transform_func(@NativeType("hb_paint_funcs_t *") long funcs, @NativeType("hb_paint_push_transform_func_t") hb_font_paint_glyph_func_tI func, @NativeType("void *") long user_data, @Nullable @NativeType("hb_destroy_func_t") hb_destroy_func_tI destroy) {
+    public static void hb_paint_funcs_set_push_transform_func(@NativeType("hb_paint_funcs_t *") long funcs, @NativeType("hb_paint_push_transform_func_t") hb_paint_push_transform_func_tI func, @NativeType("void *") long user_data, @Nullable @NativeType("hb_destroy_func_t") hb_destroy_func_tI destroy) {
         nhb_paint_funcs_set_push_transform_func(funcs, func.address(), user_data, memAddressSafe(destroy));
     }
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VKCapabilitiesDevice.java
Patch:
@@ -2510,7 +2510,7 @@ private static boolean check_EXT_full_screen_exclusive(FunctionProvider provider
             return false;
         }
 
-        int flag0 = VK_KHR_device_group || Vulkan11 ? 0 : Integer.MIN_VALUE;
+        int flag0 = ext.contains("VK_KHR_device_group") || ext.contains("Vulkan11") ? 0 : Integer.MIN_VALUE;
 
         return checkFunctions(provider, caps, new int[] {
             271, 272, flag0 + 273
@@ -3119,7 +3119,7 @@ private static boolean check_KHR_push_descriptor(FunctionProvider provider, long
             return false;
         }
 
-        int flag0 = Vulkan11 || VK_KHR_descriptor_update_template ? 0 : Integer.MIN_VALUE;
+        int flag0 = ext.contains("Vulkan11") || ext.contains("VK_KHR_descriptor_update_template") ? 0 : Integer.MIN_VALUE;
 
         return checkFunctions(provider, caps, new int[] {
             414, flag0 + 375

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXPlatform.java
Patch:
@@ -127,15 +127,15 @@ public static BGFXInternalData bgfx_get_internal_data() {
     @NativeType("uintptr_t")
     public static long bgfx_override_internal_texture_ptr(@NativeType("bgfx_texture_handle_t") short _handle, @NativeType("uintptr_t") long _ptr) {
         long __functionAddress = Functions.override_internal_texture_ptr;
-        return invokePP(_handle, _ptr, __functionAddress);
+        return invokeCPP(_handle, _ptr, __functionAddress);
     }
 
     // --- [ bgfx_override_internal_texture ] ---
 
     /** Unsafe version of: {@link #bgfx_override_internal_texture override_internal_texture} */
     public static long nbgfx_override_internal_texture(short _handle, short _width, short _height, byte _numMips, int _format, long _flags) {
         long __functionAddress = Functions.override_internal_texture;
-        return invokeJP(_handle, _width, _height, _numMips, _format, _flags, __functionAddress);
+        return invokeCCCUJP(_handle, _width, _height, _numMips, _format, _flags, __functionAddress);
     }
 
     /**

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/CoreGraphics.java
Patch:
@@ -500,7 +500,7 @@ public static long CGEventCreateMouseEvent(@NativeType("CGEventSourceRef") long
     @NativeType("CGEventRef")
     public static long CGEventCreateKeyboardEvent(@NativeType("CGEventSourceRef") long source, @NativeType("CGKeyCode") short virtualKey, @NativeType("bool") boolean keyDown) {
         long __functionAddress = Functions.EventCreateKeyboardEvent;
-        return invokePP(source, virtualKey, keyDown, __functionAddress);
+        return invokePCP(source, virtualKey, keyDown, __functionAddress);
     }
 
     // --- [ CGEventCreateScrollWheelEvent ] ---

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/ObjCRuntime.java
Patch:
@@ -1476,7 +1476,7 @@ public static boolean nclass_addIvar(long cls, long name, long size, byte alignm
         if (CHECKS) {
             check(cls);
         }
-        return invokePPPPZ(cls, name, size, alignment, types, __functionAddress);
+        return invokePPPUPZ(cls, name, size, alignment, types, __functionAddress);
     }
 
     /**

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FreeType.java
Patch:
@@ -3365,7 +3365,7 @@ public static int FT_Get_SubGlyph_Info(FT_GlyphSlot glyph, @NativeType("FT_UInt"
 
     public static short nFT_Get_FSType_Flags(long face) {
         long __functionAddress = Functions.Get_FSType_Flags;
-        return invokePS(face, __functionAddress);
+        return invokePC(face, __functionAddress);
     }
 
     @NativeType("FT_UShort")
@@ -4053,7 +4053,7 @@ public static int FT_Palette_Data_Get(FT_Face face, @NativeType("FT_Palette_Data
 
     public static int nFT_Palette_Select(long face, short palette_index, long apalette) {
         long __functionAddress = Functions.Palette_Select;
-        return invokePPI(face, palette_index, apalette, __functionAddress);
+        return invokePCPI(face, palette_index, apalette, __functionAddress);
     }
 
     @NativeType("FT_Error")

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMCore.java
Patch:
@@ -5519,7 +5519,7 @@ public static long nLLVMConstIntOfString(long IntTy, long Text, byte Radix) {
         if (CHECKS) {
             check(IntTy);
         }
-        return invokePPP(IntTy, Text, Radix, __functionAddress);
+        return invokePPUP(IntTy, Text, Radix, __functionAddress);
     }
 
     /**
@@ -5560,7 +5560,7 @@ public static long nLLVMConstIntOfStringAndSize(long IntTy, long Text, int SLen,
         if (CHECKS) {
             check(IntTy);
         }
-        return invokePPP(IntTy, Text, SLen, Radix, __functionAddress);
+        return invokePPUP(IntTy, Text, SLen, Radix, __functionAddress);
     }
 
     /** Obtain a constant value for an integer parsed from a string with specified length. */

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrc.java
Patch:
@@ -1144,7 +1144,7 @@ public static long LLVMOrcCreateCustomCAPIDefinitionGenerator(@NativeType("LLVMO
     /** Unsafe version of: {@link #LLVMOrcCreateDynamicLibrarySearchGeneratorForProcess OrcCreateDynamicLibrarySearchGeneratorForProcess} */
     public static long nLLVMOrcCreateDynamicLibrarySearchGeneratorForProcess(long Result, byte GlobalPrefx, long Filter, long FilterCtx) {
         long __functionAddress = Functions.OrcCreateDynamicLibrarySearchGeneratorForProcess;
-        return invokePPPP(Result, GlobalPrefx, Filter, FilterCtx, __functionAddress);
+        return invokePBPPP(Result, GlobalPrefx, Filter, FilterCtx, __functionAddress);
     }
 
     /**

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRSystem.java
Patch:
@@ -1021,7 +1021,7 @@ public static void VRSystem_TriggerHapticPulse(@NativeType("TrackedDeviceIndex_t
         if (CHECKS) {
             check(__functionAddress);
         }
-        callV(unControllerDeviceIndex, unAxisId, usDurationMicroSec, __functionAddress);
+        callCV(unControllerDeviceIndex, unAxisId, usDurationMicroSec, __functionAddress);
     }
 
     // --- [ VRSystem_GetButtonIdNameFromEnum ] ---

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTLineRasterization.java
Patch:
@@ -164,7 +164,7 @@ public static void vkCmdSetLineStippleEXT(VkCommandBuffer commandBuffer, @Native
         if (CHECKS) {
             check(__functionAddress);
         }
-        callPV(commandBuffer.address(), lineStippleFactor, lineStipplePattern, __functionAddress);
+        callPCV(commandBuffer.address(), lineStippleFactor, lineStipplePattern, __functionAddress);
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/stb/src/generated/java/org/lwjgl/stb/STBImageResize.java
Patch:
@@ -72,10 +72,10 @@ public class STBImageResize {
      * Set this flag if your texture has premultiplied alpha. Otherwise, stbir will use alpha-weighted resampling (effectively premultiplying, resampling,
      * then unpremultiplying).
      */
-    public static final int STBIR_FLAG_ALPHA_PREMULTIPLIED = -1;
+    public static final int STBIR_FLAG_ALPHA_PREMULTIPLIED = 1 << 0;
 
     /** The specified alpha channel should be handled as gamma-corrected value even when doing sRGB operations. */
-    public static final int STBIR_FLAG_ALPHA_USES_COLORSPACE = -1;
+    public static final int STBIR_FLAG_ALPHA_USES_COLORSPACE = 1 << 1;
 
     /**
      * Edge wrap mode.

File: modules/lwjgl/harfbuzz/src/generated/java/org/lwjgl/util/harfbuzz/HarfBuzz.java
Patch:
@@ -883,7 +883,7 @@ public static SharedLibrary getLibrary() {
         HB_GLYPH_FLAG_UNSAFE_TO_BREAK        = 0x1,
         HB_GLYPH_FLAG_UNSAFE_TO_CONCAT       = 0x2,
         HB_GLYPH_FLAG_SAFE_TO_INSERT_TATWEEL = 0x4,
-        HB_GLYPH_FLAG_DEFINED                = 0000007;
+        HB_GLYPH_FLAG_DEFINED                = 0x00000007;
 
     /**
      * {@code hb_buffer_t}
@@ -6030,7 +6030,7 @@ public static int hb_glyph_info_get_glyph_flags(@NativeType("hb_glyph_info_t con
     }
 
     /** The default {@code hb_segment_properties_t} of of freshly created {@code hb_buffer_t}. */
-    public static hb_segment_properties_t HB_SEGMENT_PROPERTIES_DEFAULT = hb_segment_properties_t.create().set(
+    public static final hb_segment_properties_t HB_SEGMENT_PROPERTIES_DEFAULT = hb_segment_properties_t.create().set(
         HB_DIRECTION_INVALID,
         HB_SCRIPT_INVALID,
         HB_LANGUAGE_INVALID

File: modules/lwjgl/harfbuzz/src/generated/java/org/lwjgl/util/harfbuzz/OpenType.java
Patch:
@@ -241,7 +241,7 @@ private Functions() {}
     public static final int HB_OT_TAG_MATH = HB_TAG('M','A','T','H');
 
     /**
-     * OpenType script tag, {@code math, for features specific to math shaping.
+     * OpenType script tag, {@code math}, for features specific to math shaping.
      * 
      * <p>{@code HB_OT_TAG_MATH_SCRIPT} is not a valid {@code hb_script_t} and should only be used with functions that accept raw OpenType script tags, such as
      * {@code hb_ot_layout_collect_features}. In other cases, {@link HarfBuzz#HB_SCRIPT_MATH SCRIPT_MATH} should be used instead.</p>

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FT_BitmapGlyph.java
Patch:
@@ -14,7 +14,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * A structure used for bitmap glyph images. This really is a 'sub-class' of {@link FT_GlyphRec}.
+ * A structure used for bitmap glyph images. This really is a 'sub-class' of {@link FT_Glyph}.
  * 
  * <h3>Layout</h3>
  * 

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FT_Incremental_Funcs.java
Patch:
@@ -17,7 +17,7 @@
 import static org.lwjgl.system.MemoryStack.*;
 
 /**
- * A table of functions for accessing fonts that load data incrementally. Used in {@link FT_Incremental_InterfaceRec}.
+ * A table of functions for accessing fonts that load data incrementally. Used in {@link FT_Incremental_Interface}.
  * 
  * <h3>Layout</h3>
  * 

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FT_OutlineGlyph.java
Patch:
@@ -14,7 +14,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * A structure used for outline (vectorial) glyph images. This really is a 'sub-class' of {@link FT_GlyphRec}.
+ * A structure used for outline (vectorial) glyph images. This really is a 'sub-class' of {@link FT_Glyph}.
  * 
  * <h3>Layout</h3>
  * 

File: modules/lwjgl/freetype/src/generated/java/org/lwjgl/util/freetype/FT_SvgGlyph.java
Patch:
@@ -14,7 +14,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * A structure used for OT-SVG glyphs. This is a 'sub-class' of {@link FT_GlyphRec}.
+ * A structure used for OT-SVG glyphs. This is a 'sub-class' of {@link FT_Glyph}.
  * 
  * <h3>Layout</h3>
  * 

File: modules/samples/src/test/java/org/lwjgl/demo/util/nfd/HelloNFD.java
Patch:
@@ -153,7 +153,7 @@ private static void openMulti() {
                     int i = 0;
                     while (NFD_PathSet_EnumNext(psEnum, pp) == NFD_OKAY && pp.get(0) != NULL) {
                         System.out.format("Path %d: %s\n", i++, pp.getStringUTF8(0));
-                        nNFD_PathSet_FreePath(pp.get(0));
+                        NFD_PathSet_FreePath(pp.get(0));
                     }
 
                     NFD_PathSet_FreeEnum(psEnum);
@@ -204,7 +204,7 @@ private static void checkResult(int result, PointerBuffer path) {
             case NFD_OKAY:
                 System.out.println("Success!");
                 System.out.println(path.getStringUTF8(0));
-                nNFD_FreePath(path.get(0));
+                NFD_FreePath(path.get(0));
                 break;
             case NFD_CANCEL:
                 System.out.println("User pressed cancel.");

File: modules/samples/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -593,7 +593,7 @@ private void exportMesh() {
                 case NFD_OKAY:
                     long path = pp.get(0);
                     npar_shapes_export(mesh.address(), path);
-                    nNFD_FreePath(path);
+                    NFD_FreePath(path);
                     break;
                 case NFD_ERROR:
                     System.err.format("Error: %s\n", NFD_GetError());

File: modules/samples/src/test/java/org/lwjgl/demo/util/tootle/HelloTootle.java
Patch:
@@ -987,7 +987,7 @@ private void importMesh() {
             switch (result) {
                 case NFD_OKAY:
                     String filePath = pp.getStringUTF8(0);
-                    nNFD_FreePath(pp.get(0));
+                    NFD_FreePath(pp.get(0));
 
                     AIScene scene = importScene(stack, filePath);
                     if (scene != null) {

File: modules/lwjgl/egl/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -96,7 +96,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
                     if (address == NULL) {
                         address = library.getFunctionAddress(functionName);
                         if (address == NULL && Checks.DEBUG_FUNCTIONS) {
-                            apiLog("Failed to locate address for EGL function " + memASCII(functionName));
+                            apiLogMissing("EGL", functionName);
                         }
                     }
 

File: modules/lwjgl/openal/src/main/java/org/lwjgl/openal/AL.java
Patch:
@@ -145,7 +145,7 @@ public static ALCapabilities createCapabilities(ALCCapabilities alcCaps, @Nullab
         FunctionProvider functionProvider = functionName -> {
             long address = invokePP(memAddress(functionName), alGetProcAddress);
             if (address == NULL && Checks.DEBUG_FUNCTIONS) {
-                apiLog("Failed to locate address for AL function " + memASCII(functionName));
+                apiLogMissing("AL", functionName);
             }
             return address;
         };

File: modules/lwjgl/openal/src/main/java/org/lwjgl/openal/ALC.java
Patch:
@@ -91,7 +91,7 @@ protected SharedLibraryAL(SharedLibrary library) {
         public long getFunctionAddress(ByteBuffer functionName) {
             long address = library.getFunctionAddress(functionName);
             if (address == NULL && Checks.DEBUG_FUNCTIONS) {
-                apiLog("Failed to locate address for ALC core function " + memASCII(functionName));
+                apiLogMissing("ALC core", functionName);
             }
             return address;
         }
@@ -103,7 +103,7 @@ public long getFunctionAddress(long handle, ByteBuffer functionName) {
                 address = invokePPP(handle, memAddress(functionName), alcGetProcAddress);
             }
             if (address == NULL && Checks.DEBUG_FUNCTIONS) {
-                apiLog("Failed to locate address for ALC function " + memASCII(functionName));
+                apiLogMissing("ALC", functionName);
             }
             return address;
         }

File: modules/lwjgl/opencl/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -165,7 +165,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
             if (address == NULL) {
                 address = library.getFunctionAddress(functionName);
                 if (address == NULL && Checks.DEBUG_FUNCTIONS) {
-                    apiLog("Failed to locate address for CL function " + memASCII(functionName));
+                    apiLogMissing("CL", functionName);
                 }
             }
 

File: modules/lwjgl/opengl/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -158,7 +158,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
                     if (address == NULL) {
                         address = library.getFunctionAddress(functionName);
                         if (address == NULL && DEBUG_FUNCTIONS) {
-                            apiLog("Failed to locate address for GL function " + memASCII(functionName));
+                            apiLogMissing("GL", functionName);
                         }
                     }
 

File: modules/lwjgl/opengles/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -149,7 +149,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
                     if (address == NULL) {
                         address = library.getFunctionAddress(functionName);
                         if (address == NULL && DEBUG_FUNCTIONS) {
-                            apiLog("Failed to locate address for GLES function " + memASCII(functionName));
+                            apiLogMissing("GLES", functionName);
                         }
                     }
 

File: modules/lwjgl/openxr/src/main/java/org/lwjgl/openxr/XrInstance.java
Patch:
@@ -39,7 +39,7 @@ private static XRCapabilities getInstanceCapabilities(long handle, XrInstanceCre
 
                 int result = callPPPI(handle, memAddress(functionName), pp.address(), XR.getGlobalCommands().xrGetInstanceProcAddr);
                 if (result != XR_SUCCESS && Checks.DEBUG_FUNCTIONS) {
-                    apiLog("Failed to query address of XR function " + memASCII(functionName));
+                    apiLogMissing("XR", functionName);
                 }
 
                 return pp.get(0);

File: modules/lwjgl/vulkan/src/main/java/org/lwjgl/vulkan/VkDevice.java
Patch:
@@ -71,7 +71,7 @@ private static VKCapabilitiesDevice getDeviceCapabilities(long handle, VkPhysica
         return new VKCapabilitiesDevice(functionName -> {
             long address = callPPP(handle, memAddress(functionName), GetDeviceProcAddr);
             if (address == NULL && Checks.DEBUG_FUNCTIONS) {
-                apiLog("Failed to locate address for VK device function " + memASCII(functionName));
+                apiLogMissing("VK device", functionName);
             }
             return address;
         }, physicalDevice.getCapabilities(), apiVersion, VK.getEnabledExtensionSet(apiVersion, ci.ppEnabledExtensionNames()));

File: modules/lwjgl/vulkan/src/main/java/org/lwjgl/vulkan/VkInstance.java
Patch:
@@ -39,7 +39,7 @@ private static VKCapabilitiesInstance getInstanceCapabilities(long handle, VkIns
         return new VKCapabilitiesInstance(functionName -> {
             long address = callPPP(handle, memAddress(functionName), VK.getGlobalCommands().vkGetInstanceProcAddr);
             if (address == NULL && Checks.DEBUG_FUNCTIONS) {
-                apiLog("Failed to locate address for VK instance function " + memASCII(functionName));
+                apiLogMissing("VK instance", functionName);
             }
             return address;
         }, apiVersion, VK.getEnabledExtensionSet(apiVersion, ci.ppEnabledExtensionNames()), getAvailableDeviceExtensions(handle));

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -152,7 +152,7 @@ private LazyInit() {
 
             apiLog("MemoryUtil allocator: " + ALLOCATOR.getClass().getSimpleName());
             if (debug && !Configuration.DEBUG_MEMORY_ALLOCATOR_FAST.get(false)) {
-                apiLog("\tReminder: enable Configuration.DEBUG_MEMORY_ALLOCATOR_FAST for low overhead allocation tracking.");
+                apiLogMore("Reminder: enable Configuration.DEBUG_MEMORY_ALLOCATOR_FAST for low overhead allocation tracking.");
             }
         }
     }

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibrary.java
Patch:
@@ -18,7 +18,7 @@ protected MacOSXLibrary(String name, long handle) {
     public static MacOSXLibrary getWithIdentifier(String bundleID) {
         apiLog("Loading library: " + bundleID);
         MacOSXLibraryBundle lib = MacOSXLibraryBundle.getWithIdentifier(bundleID);
-        apiLog("\tSuccess");
+        apiLogMore("Success");
         return lib;
     }
 

File: modules/lwjgl/fmod/src/generated/java/org/lwjgl/fmod/FMOD_DSP_PARAMETER_FFT.java
Patch:
@@ -246,7 +246,7 @@ public static void nspectrum(long struct, PointerBuffer value) {
         if (CHECKS) { checkGT(value, 32); }
         memCopy(memAddress(value), struct + FMOD_DSP_PARAMETER_FFT.SPECTRUM, value.remaining() * POINTER_SIZE);
     }
-    /** Unsafe version of {@link #spectrum(int, long) spectrum}. */
+    /** Unsafe version of {@link #spectrum(int, FloatBuffer) spectrum}. */
     public static void nspectrum(long struct, int index, long value) {
         memPutAddress(struct + FMOD_DSP_PARAMETER_FFT.SPECTRUM + check(index, 32) * POINTER_SIZE, value);
     }

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java
Patch:
@@ -552,7 +552,7 @@ private interface StateInit<T> extends Function<String, T> {
     private final String property;
 
     @Nullable
-    private T state;
+    private volatile T state;
 
     Configuration(String property, StateInit<? extends T> init) {
         this.property = property;

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/WNDCLASSEX.java
Patch:
@@ -404,7 +404,7 @@ public static WNDCLASSEX.Buffer calloc(int capacity, MemoryStack stack) {
     /** Unsafe version of {@link #cbWndExtra(int) cbWndExtra}. */
     public static void ncbWndExtra(long struct, int value) { UNSAFE.putInt(null, struct + WNDCLASSEX.CBWNDEXTRA, value); }
     /** Unsafe version of {@link #hInstance(long) hInstance}. */
-    public static void nhInstance(long struct, long value) { memPutAddress(struct + WNDCLASSEX.HINSTANCE, check(value)); }
+    public static void nhInstance(long struct, long value) { memPutAddress(struct + WNDCLASSEX.HINSTANCE, value); }
     /** Unsafe version of {@link #hIcon(long) hIcon}. */
     public static void nhIcon(long struct, long value) { memPutAddress(struct + WNDCLASSEX.HICON, value); }
     /** Unsafe version of {@link #hCursor(long) hCursor}. */
@@ -431,7 +431,6 @@ public static void nlpszClassName(long struct, ByteBuffer value) {
      */
     public static void validate(long struct) {
         check(memGetAddress(struct + WNDCLASSEX.LPFNWNDPROC));
-        check(memGetAddress(struct + WNDCLASSEX.HINSTANCE));
         check(memGetAddress(struct + WNDCLASSEX.LPSZCLASSNAME));
     }
 

File: modules/lwjgl/remotery/src/generated/java/org/lwjgl/util/remotery/RMTFree.java
Patch:
@@ -15,7 +15,7 @@
  * <h3>Type</h3>
  * 
  * <pre><code>
- * void * (*{@link #invoke}) (
+ * void (*{@link #invoke}) (
  *     void *mm_context,
  *     void *ptr
  * )</code></pre>
@@ -65,8 +65,8 @@ private static final class Container extends RMTFree {
         }
 
         @Override
-        public long invoke(long mm_context, long ptr) {
-            return delegate.invoke(mm_context, ptr);
+        public void invoke(long mm_context, long ptr) {
+            delegate.invoke(mm_context, ptr);
         }
 
     }

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/BlendishDemo.java
Patch:
@@ -157,7 +157,7 @@ public static void main(String[] args) {
     }
 
     private static void initBlendish(long vg) {
-        bndSetFont(nvgCreateFontMem(vg, "system", font, 0));
+        bndSetFont(nvgCreateFontMem(vg, "system", font, false));
 
         System.out.println("Downloading Blender icons...");
         long t = System.nanoTime();

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleFBO.java
Patch:
@@ -116,11 +116,11 @@ private static void renderPattern(long vg, float t) {
 
     private static int loadFonts(long vg) {
         int font;
-        font = nvgCreateFontMem(vg, "sans", RobotoRegular, 0);
+        font = nvgCreateFontMem(vg, "sans", RobotoRegular, false);
         if (font == -1) {
             throw new RuntimeException("Could not add font regular.");
         }
-        font = nvgCreateFontMem(vg, "sans-bold", RobotoBold, 0);
+        font = nvgCreateFontMem(vg, "sans-bold", RobotoBold, false);
         if (font == -1) {
             throw new RuntimeException("Could not add font bold.");
         }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NSVGPath.java
Patch:
@@ -124,7 +124,7 @@ public static NSVGPath.Buffer createSafe(long address, int capacity) {
     // -----------------------------------
 
     /** Unsafe version of {@link #pts() pts}. */
-    public static FloatBuffer npts(long struct) { return memFloatBuffer(memGetAddress(struct + NSVGPath.PTS), nnpts(struct)); }
+    public static FloatBuffer npts(long struct) { return memFloatBuffer(memGetAddress(struct + NSVGPath.PTS), (nnpts(struct) << 1)); }
     /** Unsafe version of {@link #npts}. */
     public static int nnpts(long struct) { return UNSAFE.getInt(null, struct + NSVGPath.NPTS); }
     /** Unsafe version of {@link #closed}. */

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleBGFX.java
Patch:
@@ -121,9 +121,9 @@ public static void main(String[] args) {
                         .profiler_begin((_this, _name, _abgr, _filePath, _line) -> { throw new UnsupportedOperationException(); })
                         .profiler_begin_literal((_this, _name, _abgr, _filePath, _line) -> { throw new UnsupportedOperationException(); })
                         .profiler_end(_this -> { throw new UnsupportedOperationException(); })
-                        .cache_read_size((_this, _id) -> { throw new UnsupportedOperationException(); })
-                        .cache_read((_this, _id, _data, _size) -> { throw new UnsupportedOperationException(); })
-                        .cache_write((_this, _id, _data, _size) -> { throw new UnsupportedOperationException(); })
+                        .cache_read_size((_this, _id) -> 0)
+                        .cache_read((_this, _id, _data, _size) -> false)
+                        .cache_write((_this, _id, _data, _size) -> { /* intentionally empty */ })
                         .screen_shot((_this, _filePath, _width, _height, _pitch, _data, _size, _yflip) -> {
                             ByteBuffer image = memByteBuffer(_data, _size);
 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/jni/JNINativeInterface.java
Patch:
@@ -42,7 +42,8 @@ public class JNINativeInterface {
         JNI_VERSION_1_6 = 0x10006,
         JNI_VERSION_1_8 = 0x10008,
         JNI_VERSION_9   = 0x90000,
-        JNI_VERSION_10  = 0xA0000;
+        JNI_VERSION_10  = 0xA0000,
+        JNI_VERSION_19  = 0x130000;
 
     /**
      * {@code jobjectRefType}: Return values from {@link #GetObjectRefType}.

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java
Patch:
@@ -286,6 +286,9 @@ public class Configuration<T> {
     /** Similar to {@link #LIBRARY_NAME} for the AssImp library (<b>org.lwjgl.assimp.libname</b>). */
     public static final Configuration<String> ASSIMP_LIBRARY_NAME = new Configuration<>("org.lwjgl.assimp.libname", StateInit.STRING);
 
+    /** Similar to {@link #LIBRARY_NAME} for the Draco library (<b>org.lwjgl.assimp.draco.libname</b>). */
+    public static final Configuration<String> ASSIMP_DRACO_LIBRARY_NAME = new Configuration<>("org.lwjgl.assimp.draco.libname", StateInit.STRING);
+
     // -- BGFX
 
     /** Similar to {@link #LIBRARY_NAME} for the BGFX library (<b>org.lwjgl.bgfx.libname</b>). */

File: modules/lwjgl/opus/src/generated/java/org/lwjgl/util/opus/Opus.java
Patch:
@@ -876,7 +876,7 @@ public static int nopus_decode_float(long st, long data, int len, long pcm, int
      *
      * @param st         decoder state
      * @param data       input payload (Use a {@code NULL} pointer to indicate packet loss)
-     * @param pcm        output signal (interleaved if 2 channels) (length is {@code frame_size*channels*sizeof(opus_int16)}
+     * @param pcm        output signal (interleaved if 2 channels) (length is {@code frame_size*channels*sizeof(float)}
      * @param frame_size number of samples per channel of available space in pcm.
      *                   
      *                   <p>If this is less than the maximum packet duration (120ms; 5760 for 48kHz), this function will not be capable of decoding some packets. In the case
@@ -888,7 +888,7 @@ public static int nopus_decode_float(long st, long data, int len, long pcm, int
      *
      * @return number of decoded samples or a negative error code
      */
-    public static int opus_decode_float(@NativeType("OpusDecoder *") long st, @Nullable @NativeType("unsigned char const *") ByteBuffer data, @NativeType("opus_int16 *") ShortBuffer pcm, int frame_size, int decode_fec) {
+    public static int opus_decode_float(@NativeType("OpusDecoder *") long st, @Nullable @NativeType("unsigned char const *") ByteBuffer data, @NativeType("float *") FloatBuffer pcm, int frame_size, int decode_fec) {
         if (CHECKS) {
             check(pcm, frame_size * memGetInt(st + 8));
         }

File: modules/lwjgl/core/src/test/java/org/lwjgl/system/libc/StdioTest.java
Patch:
@@ -10,6 +10,7 @@
 import org.testng.annotations.*;
 
 import java.nio.*;
+import java.util.*;
 
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;
@@ -29,7 +30,7 @@ public void init() {
     }
 
     public void testScanf() {
-        String INPUT  = String.format("%s = %d", MESSAGE, ANSWER);
+        String INPUT  = String.format(Locale.US, "%s = %d", MESSAGE, ANSWER);
         String FORMAT = "%[A-Za-z ]%*[= ]%d";
 
         try (MemoryStack stack = stackPush()) {
@@ -131,7 +132,7 @@ public void testPrintf() {
             int chars = rvalue.get(0);
 
             // validate
-            String expected = String.format(FORMAT, MESSAGE, ANSWER);
+            String expected = String.format(Locale.US, FORMAT, MESSAGE, ANSWER);
 
             assertEquals(chars, expected.length());
             assertEquals(memUTF8(buffer, chars), expected);

File: modules/lwjgl/opengl/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -419,7 +419,7 @@ public static GLCapabilities createCapabilities(boolean forwardCompatible, @Null
             }
 
             for (int m = M == 1 ? 1 : 0; m <= maxMinor; m++) {
-                supportedExtensions.add(String.format("OpenGL%d%d", M, m));
+                supportedExtensions.add("OpenGL" + M + m);
             }
         }
 

File: modules/lwjgl/opengles/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -327,7 +327,7 @@ public static GLESCapabilities createCapabilities(@Nullable IntFunction<PointerB
             }
 
             for (int m = 0; m <= maxMinor; m++) {
-                supportedExtensions.add(String.format("GLES%d%d", M, m));
+                supportedExtensions.add("GLES" + M + m);
             }
         }
 

File: modules/lwjgl/openxr/src/main/java/org/lwjgl/openxr/XR.java
Patch:
@@ -163,7 +163,7 @@ static Set<String> getEnabledExtensionSet(long apiVersion, @Nullable PointerBuff
                 maxMinor = min(minorVersion, maxMinor);
             }
             for (int m = 0; m <= maxMinor; m++) {
-                enabledExtensions.add(String.format("OpenXR%d%d", M, m));
+                enabledExtensions.add("OpenXR" + M + m);
             }
         }
 

File: modules/lwjgl/vulkan/src/main/java/org/lwjgl/vulkan/VK.java
Patch:
@@ -204,7 +204,7 @@ static Set<String> getEnabledExtensionSet(int apiVersion, @Nullable PointerBuffe
                 maxMinor = min(minorVersion, maxMinor);
             }
             for (int m = 0; m <= maxMinor; m++) {
-                enabledExtensions.add(String.format("Vulkan%d%d", M, m));
+                enabledExtensions.add("Vulkan" + M + m);
             }
         }
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK10.java
Patch:
@@ -15491,7 +15491,7 @@ public static int VK_API_VERSION_MINOR(@NativeType("uint32_t") int version) {
      */
     @NativeType("uint32_t")
     public static int VK_API_VERSION_PATCH(@NativeType("uint32_t") int version) {
-        return (version >>> 22) & 0xFFF;
+        return version & 0xFFF;
     }
 
     // --- [ VK_MAKE_VERSION ] ---

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/DynamicLinkLoader.java
Patch:
@@ -99,7 +99,7 @@ public static long dlopen(@Nullable @NativeType("char const *") CharSequence fil
     @NativeType("char *")
     public static String dlerror() {
         long __result = ndlerror();
-        return memASCIISafe(__result);
+        return memUTF8Safe(__result);
     }
 
     // --- [ dlsym ] ---

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/DynamicLinkLoader.java
Patch:
@@ -197,7 +197,7 @@ public static long dlopen(@Nullable @NativeType("char const *") CharSequence pat
     @NativeType("char const *")
     public static String dlerror() {
         long __result = ndlerror();
-        return memASCIISafe(__result);
+        return memUTF8Safe(__result);
     }
 
     // --- [ dlsym ] ---

File: modules/samples/src/test/java/org/lwjgl/demo/system/linux/liburing/HelloLibIOURing.java
Patch:
@@ -46,7 +46,7 @@ public static void main(String[] args) throws IOException {
         File f = new File(filePath);
         System.out.println("Reading: " + f.getAbsolutePath());
         if (args.length == 0) {
-            System.out.println("\tUse 'ant demo -Dclass=org.lwjgl.demo.system.linux.HelloLibIOURing -Dargs=<path>' to cat a different file.");
+            System.out.println("\tUse 'ant demo -Dclass=org.lwjgl.demo.system.linux.liburing.HelloLibIOURing -Dargs=<path>' to cat a different file.");
         }
 
         int fileLength = (int)f.length();

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/HelloOpenXRGL.java
Patch:
@@ -892,6 +892,7 @@ public void check(int result) throws IllegalStateException {
         throw new XrResultException("XR method returned " + result);
     }
 
+    @SuppressWarnings("serial")
     public static class XrResultException extends RuntimeException {
         public XrResultException(String s) {
             super(s);

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CL12.java
Patch:
@@ -165,7 +165,7 @@ public class CL12 extends CL11 {
         CL_KERNEL_ARG_ADDRESS_QUALIFIER = 0x1196,
         CL_KERNEL_ARG_ACCESS_QUALIFIER  = 0x1197,
         CL_KERNEL_ARG_TYPE_NAME         = 0x1198,
-        CL_KERNEL_ARG_TYPE_QUALIFIER    = 0x1999,
+        CL_KERNEL_ARG_TYPE_QUALIFIER    = 0x1199,
         CL_KERNEL_ARG_NAME              = 0x119A;
 
     /** cl_kernel_arg_address_qualifier */

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/HelloOpenXRGL.java
Patch:
@@ -307,6 +307,7 @@ public void initializeAndBindOpenGL() {
                 XRHelper.createGraphicsBindingOpenGL(
                     XrSessionCreateInfo.malloc(stack)
                         .type$Default()
+                        .next(NULL)
                         .createFlags(0)
                         .systemId(systemID),
                     stack,

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/XRHelper.java
Patch:
@@ -147,7 +147,6 @@ static XrSessionCreateInfo createGraphicsBindingOpenGL(XrSessionCreateInfo sessi
                     return sessionCreateInfo.next(
                         XrGraphicsBindingOpenGLXlibKHR.malloc(stack)
                             .type$Default()
-                            .next(NULL)
                             .xDisplay(display)
                             .visualid((int)visualid)
                             .glxFBConfig(glxConfig)
@@ -158,7 +157,6 @@ static XrSessionCreateInfo createGraphicsBindingOpenGL(XrSessionCreateInfo sessi
                     return sessionCreateInfo.next(
                         XrGraphicsBindingOpenGLWaylandKHR.malloc(stack)
                             .type$Default()
-                            .next(NULL)
                             .display(glfwGetWaylandDisplay())
                     );
                 } else {
@@ -168,7 +166,6 @@ static XrSessionCreateInfo createGraphicsBindingOpenGL(XrSessionCreateInfo sessi
                 return sessionCreateInfo.next(
                     XrGraphicsBindingOpenGLWin32KHR.malloc(stack)
                         .type$Default()
-                        .next(NULL)
                         .hDC(GetDC(glfwGetWin32Window(window)))
                         .hGLRC(glfwGetWGLContext(window))
                 );

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/XRHelper.java
Patch:
@@ -31,7 +31,7 @@ final class XRHelper {
     private XRHelper() {
     }
 
-    static <T extends StructBuffer> T fill(T buffer, int offset, int value) {
+    static <S extends Struct, T extends StructBuffer<S, T>> T fill(T buffer, int offset, int value) {
         long ptr    = buffer.address() + offset;
         int  stride = buffer.sizeof();
         for (int i = 0; i < buffer.limit(); i++) {

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/MemoryAccessJNI.java
Patch:
@@ -186,7 +186,7 @@ static double getDouble(@NativeType("void *") long ptr) {
      *
      * @param ptr the memory address to read
      */
-    @NativeType("intptr_t")
+    @NativeType("uintptr_t")
     static long getAddress(@NativeType("void *") long ptr) {
         if (CHECKS) {
             check(ptr);
@@ -313,7 +313,7 @@ static void putDouble(@NativeType("void *") long ptr, double value) {
      * @param ptr   the memory address to write
      * @param value the value to write
      */
-    static void putAddress(@NativeType("void *") long ptr, @NativeType("intptr_t") long value) {
+    static void putAddress(@NativeType("void *") long ptr, @NativeType("uintptr_t") long value) {
         if (CHECKS) {
             check(ptr);
         }

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/StackWalkUtil.java
Patch:
@@ -40,7 +40,7 @@ private static boolean isSameMethod(StackTraceElement a, StackTraceElement b) {
     private static boolean isSameMethod(StackTraceElement a, StackTraceElement b, String methodName) {
         return a.getMethodName().equals(methodName) &&
                a.getClassName().equals(b.getClassName()) &&
-               a.getFileName().equals(b.getFileName());
+               Objects.equals(a.getFileName(), b.getFileName());
     }
 
     private static boolean isAutoCloseable(StackTraceElement element, StackTraceElement pushed) {

File: modules/lwjgl/core/src/main/java9/org/lwjgl/system/StackWalkUtil.java
Patch:
@@ -41,7 +41,7 @@ private static boolean isSameMethod(StackWalker.StackFrame a, StackWalker.StackF
     private static boolean isSameMethod(StackWalker.StackFrame a, StackWalker.StackFrame b, String methodName) {
         return a.getMethodName().equals(methodName) &&
                a.getClassName().equals(b.getClassName()) &&
-               a.getFileName().equals(b.getFileName());
+               Objects.equals(a.getFileName(), b.getFileName());
     }
 
     private static boolean isAutoCloseable(StackWalker.StackFrame element, StackWalker.StackFrame pushed) {

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/HelloOpenXRVK.java
Patch:
@@ -1974,7 +1974,7 @@ private void loopXrSession() {
                                 // If the position tracker is working, we should use it to create the camera matrix
                                 XrCompositionLayerProjectionView projectionView = projectionViews.get(swapchainIndex);
 
-                                Matrix4f projectionMatrix = new Matrix4f();
+                                Matrix4f projectionMatrix = new Matrix4f().scale(1f, -1f, 1f);
                                 XRHelper.applyProjectionToMatrix(projectionMatrix, projectionView.fov(), 0.01f, 100f, true);
 
                                 Matrix4f viewMatrix = new Matrix4f();

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/JEmalloc.java
Patch:
@@ -74,13 +74,13 @@ public static SharedLibrary getLibrary() {
     public static final int JEMALLOC_VERSION_MINOR = 2;
 
     /** The bugfix version. */
-    public static final int JEMALLOC_VERSION_BUGFIX = 0;
+    public static final int JEMALLOC_VERSION_BUGFIX = 1;
 
     /** The revision number. */
     public static final int JEMALLOC_VERSION_NREV = 0;
 
     /** The globally unique identifier (git commit hash). */
-    public static final String JEMALLOC_VERSION_GID = "b0b3e49a54ec29e32636f4577d9d5a896d67fd20";
+    public static final String JEMALLOC_VERSION_GID = "ea6b3e973b477b8061e0076bb257dbd7f3faa756";
 
     /** The version string. */
     public static final String JEMALLOC_VERSION = JEMALLOC_VERSION_MAJOR + "." + JEMALLOC_VERSION_MINOR + "." + JEMALLOC_VERSION_BUGFIX + "-" + JEMALLOC_VERSION_NREV + "-g" + JEMALLOC_VERSION_GID;

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/XRHelper.java
Patch:
@@ -98,7 +98,7 @@ static Matrix4f applyProjectionToMatrix(Matrix4f m, XrFovf fov, float nearZ, flo
         float distToRightPlane  = Math.tan(fov.angleRight());
         float distToBottomPlane = Math.tan(fov.angleDown());
         float distToTopPlane    = Math.tan(fov.angleUp());
-        return m.frustum(distToLeftPlane, distToRightPlane, distToBottomPlane, distToTopPlane, nearZ, farZ, zZeroToOne);
+        return m.frustum(distToLeftPlane*nearZ, distToRightPlane*nearZ, distToBottomPlane*nearZ, distToTopPlane*nearZ, nearZ, farZ, zZeroToOne);
     }
 
     /**

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/libffi/FFICIF.java
Patch:
@@ -175,7 +175,6 @@ public static FFICIF.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code FFICIF} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/libffi/FFIClosure.java
Patch:
@@ -153,7 +153,6 @@ public static FFIClosure.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code FFIClosure} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/libffi/FFIType.java
Patch:
@@ -201,7 +201,6 @@ public static FFIType.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code FFIType} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/EpollData.java
Patch:
@@ -179,7 +179,6 @@ public static EpollData.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code EpollData} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/EpollEvent.java
Patch:
@@ -174,7 +174,6 @@ public static EpollEvent.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code EpollEvent} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/FOwnerEx.java
Patch:
@@ -171,7 +171,6 @@ public static FOwnerEx.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code FOwnerEx} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/Flock.java
Patch:
@@ -203,7 +203,6 @@ public static Flock.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code Flock} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/IOVec.java
Patch:
@@ -173,7 +173,6 @@ public static IOVec.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOVec} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/KernelTimespec.java
Patch:
@@ -172,7 +172,6 @@ public static KernelTimespec.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code KernelTimespec} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/Msghdr.java
Patch:
@@ -215,7 +215,6 @@ public static Msghdr.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code Msghdr} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/OpenHow.java
Patch:
@@ -190,7 +190,6 @@ public static OpenHow.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code OpenHow} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/Sockaddr.java
Patch:
@@ -180,7 +180,6 @@ public static Sockaddr.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code Sockaddr} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/Statx.java
Patch:
@@ -391,7 +391,6 @@ public static Statx.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code Statx} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/StatxTimestamp.java
Patch:
@@ -178,7 +178,6 @@ public static StatxTimestamp.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code StatxTimestamp} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOCQRingOffsets.java
Patch:
@@ -235,7 +235,6 @@ public static IOCQRingOffsets.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOCQRingOffsets} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOSQRingOffsets.java
Patch:
@@ -237,7 +237,6 @@ public static IOSQRingOffsets.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOSQRingOffsets} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURing.java
Patch:
@@ -213,7 +213,6 @@ public static IOURing.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURing} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingCQ.java
Patch:
@@ -274,7 +274,6 @@ public static IOURingCQ.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingCQ} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingCQE.java
Patch:
@@ -196,7 +196,6 @@ public static IOURingCQE.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingCQE} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingGeteventsArg.java
Patch:
@@ -194,7 +194,6 @@ public static IOURingGeteventsArg.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingGeteventsArg} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingParams.java
Patch:
@@ -322,7 +322,6 @@ public static IOURingParams.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingParams} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingProbe.java
Patch:
@@ -208,7 +208,6 @@ public static IOURingProbe.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingProbe} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingProbeOp.java
Patch:
@@ -194,7 +194,6 @@ public static IOURingProbeOp.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingProbeOp} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingRSRCRegister.java
Patch:
@@ -205,7 +205,6 @@ public static IOURingRSRCRegister.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingRSRCRegister} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingRSRCUpdate.java
Patch:
@@ -183,7 +183,6 @@ public static IOURingRSRCUpdate.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingRSRCUpdate} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingRSRCUpdate2.java
Patch:
@@ -216,7 +216,6 @@ public static IOURingRSRCUpdate2.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingRSRCUpdate2} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingRestriction.java
Patch:
@@ -192,7 +192,6 @@ public static IOURingRestriction.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingRestriction} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingSQ.java
Patch:
@@ -311,7 +311,6 @@ public static IOURingSQ.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingSQ} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/liburing/IOURingSQE.java
Patch:
@@ -460,7 +460,6 @@ public static IOURingSQE.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code IOURingSQE} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/LARGE_INTEGER.java
Patch:
@@ -175,7 +175,6 @@ public static LARGE_INTEGER.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LARGE_INTEGER} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUDA_ARRAY_SPARSE_PROPERTIES.java
Patch:
@@ -240,7 +240,6 @@ public static CUDA_ARRAY_SPARSE_PROPERTIES.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUDA_ARRAY_SPARSE_PROPERTIES} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUDA_EXT_SEM_SIGNAL_NODE_PARAMS.java
Patch:
@@ -185,7 +185,6 @@ public static CUDA_EXT_SEM_SIGNAL_NODE_PARAMS.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUDA_EXT_SEM_SIGNAL_NODE_PARAMS} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUDA_EXT_SEM_WAIT_NODE_PARAMS.java
Patch:
@@ -185,7 +185,6 @@ public static CUDA_EXT_SEM_WAIT_NODE_PARAMS.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUDA_EXT_SEM_WAIT_NODE_PARAMS} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUDA_MEM_ALLOC_NODE_PARAMS.java
Patch:
@@ -207,7 +207,6 @@ public static CUDA_MEM_ALLOC_NODE_PARAMS.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUDA_MEM_ALLOC_NODE_PARAMS} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUDA_POINTER_ATTRIBUTE_P2P_TOKENS.java
Patch:
@@ -173,7 +173,6 @@ public static CUDA_POINTER_ATTRIBUTE_P2P_TOKENS.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUDA_POINTER_ATTRIBUTE_P2P_TOKENS} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUaccessPolicyWindow.java
Patch:
@@ -211,7 +211,6 @@ public static CUaccessPolicyWindow.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUaccessPolicyWindow} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUarrayMapInfo.java
Patch:
@@ -378,7 +378,6 @@ public static CUarrayMapInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUarrayMapInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUexecAffinityParam.java
Patch:
@@ -169,7 +169,6 @@ public static CUexecAffinityParam.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUexecAffinityParam} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUexecAffinitySmCount.java
Patch:
@@ -153,7 +153,6 @@ public static CUexecAffinitySmCount.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUexecAffinitySmCount} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUkernelNodeAttrValue.java
Patch:
@@ -162,7 +162,6 @@ public static CUkernelNodeAttrValue.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUkernelNodeAttrValue} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUmemAccessDesc.java
Patch:
@@ -174,7 +174,6 @@ public static CUmemAccessDesc.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUmemAccessDesc} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUmemAllocationProp.java
Patch:
@@ -263,7 +263,6 @@ public static CUmemAllocationProp.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUmemAllocationProp} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUmemLocation.java
Patch:
@@ -172,7 +172,6 @@ public static CUmemLocation.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUmemLocation} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUmemPoolProps.java
Patch:
@@ -216,7 +216,6 @@ public static CUmemPoolProps.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUmemPoolProps} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUmemPoolPtrExportData.java
Patch:
@@ -159,7 +159,6 @@ public static CUmemPoolPtrExportData.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUmemPoolPtrExportData} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUstreamAttrValue.java
Patch:
@@ -163,7 +163,6 @@ public static CUstreamAttrValue.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CUstreamAttrValue} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWAllocator.java
Patch:
@@ -199,7 +199,6 @@ public static GLFWAllocator.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code GLFWAllocator} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/libdivide/src/generated/java/org/lwjgl/util/libdivide/LibDivideS16.java
Patch:
@@ -172,7 +172,6 @@ public static LibDivideS16.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LibDivideS16} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/libdivide/src/generated/java/org/lwjgl/util/libdivide/LibDivideS16BranchFree.java
Patch:
@@ -172,7 +172,6 @@ public static LibDivideS16BranchFree.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LibDivideS16BranchFree} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/libdivide/src/generated/java/org/lwjgl/util/libdivide/LibDivideU16.java
Patch:
@@ -172,7 +172,6 @@ public static LibDivideU16.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LibDivideU16} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/libdivide/src/generated/java/org/lwjgl/util/libdivide/LibDivideU16BranchFree.java
Patch:
@@ -172,7 +172,6 @@ public static LibDivideU16BranchFree.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LibDivideU16BranchFree} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMJITCSymbolMapPair.java
Patch:
@@ -175,7 +175,6 @@ public static LLVMJITCSymbolMapPair.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMJITCSymbolMapPair} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMJITEvaluatedSymbol.java
Patch:
@@ -174,7 +174,6 @@ public static LLVMJITEvaluatedSymbol.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMJITEvaluatedSymbol} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMJITSymbolFlags.java
Patch:
@@ -173,7 +173,6 @@ public static LLVMJITSymbolFlags.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMJITSymbolFlags} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcCDependenceMapPair.java
Patch:
@@ -175,7 +175,6 @@ public static LLVMOrcCDependenceMapPair.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMOrcCDependenceMapPair} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcCLookupSetElement.java
Patch:
@@ -174,7 +174,6 @@ public static LLVMOrcCLookupSetElement.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMOrcCLookupSetElement} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcCSymbolAliasMapEntry.java
Patch:
@@ -175,7 +175,6 @@ public static LLVMOrcCSymbolAliasMapEntry.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMOrcCSymbolAliasMapEntry} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcCSymbolAliasMapPair.java
Patch:
@@ -175,7 +175,6 @@ public static LLVMOrcCSymbolAliasMapPair.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMOrcCSymbolAliasMapPair} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcCSymbolFlagsMapPair.java
Patch:
@@ -175,7 +175,6 @@ public static LLVMOrcCSymbolFlagsMapPair.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMOrcCSymbolFlagsMapPair} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcCSymbolsList.java
Patch:
@@ -161,7 +161,6 @@ public static LLVMOrcCSymbolsList.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code LLVMOrcCSymbolsList} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshoptBounds.java
Patch:
@@ -187,7 +187,6 @@ public static MeshoptBounds.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code MeshoptBounds} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshoptMeshlet.java
Patch:
@@ -160,7 +160,6 @@ public static MeshoptMeshlet.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code MeshoptMeshlet} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshoptOverdrawStatistics.java
Patch:
@@ -150,7 +150,6 @@ public static MeshoptOverdrawStatistics.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code MeshoptOverdrawStatistics} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshoptStream.java
Patch:
@@ -192,7 +192,6 @@ public static MeshoptStream.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code MeshoptStream} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshoptVertexCacheStatistics.java
Patch:
@@ -156,7 +156,6 @@ public static MeshoptVertexCacheStatistics.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code MeshoptVertexCacheStatistics} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshoptVertexFetchStatistics.java
Patch:
@@ -143,7 +143,6 @@ public static MeshoptVertexFetchStatistics.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code MeshoptVertexFetchStatistics} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkNineSlice.java
Patch:
@@ -207,7 +207,6 @@ public static NkNineSlice.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code NkNineSlice} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CLDeviceIntegerDotProductAccelerationPropertiesKHR.java
Patch:
@@ -179,7 +179,6 @@ public static CLDeviceIntegerDotProductAccelerationPropertiesKHR.Buffer createSa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CLDeviceIntegerDotProductAccelerationPropertiesKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CLDevicePCIBusInfoKHR.java
Patch:
@@ -158,7 +158,6 @@ public static CLDevicePCIBusInfoKHR.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CLDevicePCIBusInfoKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CLNameVersion.java
Patch:
@@ -147,7 +147,6 @@ public static CLNameVersion.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CLNameVersion} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CLNameVersionKHR.java
Patch:
@@ -149,7 +149,6 @@ public static CLNameVersionKHR.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CLNameVersionKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CLQueueFamilyPropertiesINTEL.java
Patch:
@@ -161,7 +161,6 @@ public static CLQueueFamilyPropertiesINTEL.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CLQueueFamilyPropertiesINTEL} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/CompositorStageRenderSettings.java
Patch:
@@ -191,7 +191,6 @@ public static CompositorStageRenderSettings.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code CompositorStageRenderSettings} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/Compositor_BenchmarkResults.java
Patch:
@@ -143,7 +143,6 @@ public static Compositor_BenchmarkResults.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code Compositor_BenchmarkResults} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRNativeDevice.java
Patch:
@@ -173,7 +173,6 @@ public static VRNativeDevice.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code VRNativeDevice} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VROverlayProjection.java
Patch:
@@ -192,7 +192,6 @@ public static VROverlayProjection.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code VROverlayProjection} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VROverlayView_t.java
Patch:
@@ -150,7 +150,6 @@ public static VROverlayView_t.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code VROverlayView_t} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRVulkanDevice.java
Patch:
@@ -206,7 +206,6 @@ public static VRVulkanDevice.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code VRVulkanDevice} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRVulkanTextureArrayData.java
Patch:
@@ -177,7 +177,6 @@ public static VRVulkanTextureArrayData.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code VRVulkanTextureArrayData} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionCreateInfo.java
Patch:
@@ -292,7 +292,6 @@ public static XrActionCreateInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionCreateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionSetCreateInfo.java
Patch:
@@ -240,7 +240,6 @@ public static XrActionSetCreateInfo.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionSetCreateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionSpaceCreateInfo.java
Patch:
@@ -222,7 +222,6 @@ public static XrActionSpaceCreateInfo.Buffer createSafe(long address, int capaci
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionSpaceCreateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionStateBoolean.java
Patch:
@@ -234,7 +234,6 @@ public static XrActionStateBoolean.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionStateBoolean} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionStateFloat.java
Patch:
@@ -233,7 +233,6 @@ public static XrActionStateFloat.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionStateFloat} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionStateGetInfo.java
Patch:
@@ -214,7 +214,6 @@ public static XrActionStateGetInfo.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionStateGetInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionStatePose.java
Patch:
@@ -201,7 +201,6 @@ public static XrActionStatePose.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionStatePose} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionStateVector2f.java
Patch:
@@ -235,7 +235,6 @@ public static XrActionStateVector2f.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionStateVector2f} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionSuggestedBinding.java
Patch:
@@ -184,7 +184,6 @@ public static XrActionSuggestedBinding.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionSuggestedBinding} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionsSyncInfo.java
Patch:
@@ -210,7 +210,6 @@ public static XrActionsSyncInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActionsSyncInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActiveActionSet.java
Patch:
@@ -188,7 +188,6 @@ public static XrActiveActionSet.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrActiveActionSet} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrApiLayerProperties.java
Patch:
@@ -222,7 +222,6 @@ public static XrApiLayerProperties.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrApiLayerProperties} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrApplicationInfo.java
Patch:
@@ -233,7 +233,6 @@ public static XrApplicationInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrApplicationInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrBaseInStructure.java
Patch:
@@ -182,7 +182,6 @@ public static XrBaseInStructure.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrBaseInStructure} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrBaseOutStructure.java
Patch:
@@ -182,7 +182,6 @@ public static XrBaseOutStructure.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrBaseOutStructure} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrBindingModificationBaseHeaderKHR.java
Patch:
@@ -188,7 +188,6 @@ public static XrBindingModificationBaseHeaderKHR.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrBindingModificationBaseHeaderKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrBindingModificationsKHR.java
Patch:
@@ -211,7 +211,6 @@ public static XrBindingModificationsKHR.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrBindingModificationsKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrBoundSourcesForActionEnumerateInfo.java
Patch:
@@ -199,7 +199,6 @@ public static XrBoundSourcesForActionEnumerateInfo.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrBoundSourcesForActionEnumerateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrColor4f.java
Patch:
@@ -201,7 +201,6 @@ public static XrColor4f.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrColor4f} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerAlphaBlendFB.java
Patch:
@@ -241,7 +241,6 @@ public static XrCompositionLayerAlphaBlendFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerAlphaBlendFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerBaseHeader.java
Patch:
@@ -223,7 +223,6 @@ public static XrCompositionLayerBaseHeader.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerBaseHeader} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerColorScaleBiasKHR.java
Patch:
@@ -217,7 +217,6 @@ public static XrCompositionLayerColorScaleBiasKHR.Buffer createSafe(long address
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerColorScaleBiasKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerCubeKHR.java
Patch:
@@ -264,7 +264,6 @@ public static XrCompositionLayerCubeKHR.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerCubeKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerCylinderKHR.java
Patch:
@@ -283,7 +283,6 @@ public static XrCompositionLayerCylinderKHR.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerCylinderKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerDepthInfoKHR.java
Patch:
@@ -244,7 +244,6 @@ public static XrCompositionLayerDepthInfoKHR.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerDepthInfoKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerDepthTestVARJO.java
Patch:
@@ -207,7 +207,6 @@ public static XrCompositionLayerDepthTestVARJO.Buffer createSafe(long address, i
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerDepthTestVARJO} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerEquirect2KHR.java
Patch:
@@ -293,7 +293,6 @@ public static XrCompositionLayerEquirect2KHR.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerEquirect2KHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerEquirectKHR.java
Patch:
@@ -287,7 +287,6 @@ public static XrCompositionLayerEquirectKHR.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerEquirectKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerImageLayoutFB.java
Patch:
@@ -205,7 +205,6 @@ public static XrCompositionLayerImageLayoutFB.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerImageLayoutFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerPassthroughFB.java
Patch:
@@ -236,7 +236,6 @@ public static XrCompositionLayerPassthroughFB.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerPassthroughFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerProjection.java
Patch:
@@ -244,7 +244,6 @@ public static XrCompositionLayerProjection.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerProjection} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerProjectionView.java
Patch:
@@ -231,7 +231,6 @@ public static XrCompositionLayerProjectionView.Buffer createSafe(long address, i
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerProjectionView} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerQuad.java
Patch:
@@ -264,7 +264,6 @@ public static XrCompositionLayerQuad.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerQuad} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerReprojectionInfoMSFT.java
Patch:
@@ -203,7 +203,6 @@ public static XrCompositionLayerReprojectionInfoMSFT.Buffer createSafe(long addr
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerReprojectionInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerReprojectionPlaneOverrideMSFT.java
Patch:
@@ -231,7 +231,6 @@ public static XrCompositionLayerReprojectionPlaneOverrideMSFT.Buffer createSafe(
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerReprojectionPlaneOverrideMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerSecureContentFB.java
Patch:
@@ -208,7 +208,6 @@ public static XrCompositionLayerSecureContentFB.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerSecureContentFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerSpaceWarpInfoFB.java
Patch:
@@ -281,7 +281,6 @@ public static XrCompositionLayerSpaceWarpInfoFB.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrCompositionLayerSpaceWarpInfoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrControllerModelKeyStateMSFT.java
Patch:
@@ -204,7 +204,6 @@ public static XrControllerModelKeyStateMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrControllerModelKeyStateMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrControllerModelNodePropertiesMSFT.java
Patch:
@@ -228,7 +228,6 @@ public static XrControllerModelNodePropertiesMSFT.Buffer createSafe(long address
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrControllerModelNodePropertiesMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrControllerModelNodeStateMSFT.java
Patch:
@@ -205,7 +205,6 @@ public static XrControllerModelNodeStateMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrControllerModelNodeStateMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrControllerModelPropertiesMSFT.java
Patch:
@@ -222,7 +222,6 @@ public static XrControllerModelPropertiesMSFT.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrControllerModelPropertiesMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrControllerModelStateMSFT.java
Patch:
@@ -222,7 +222,6 @@ public static XrControllerModelStateMSFT.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrControllerModelStateMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDebugUtilsLabelEXT.java
Patch:
@@ -203,7 +203,6 @@ public static XrDebugUtilsLabelEXT.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrDebugUtilsLabelEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDebugUtilsMessengerCallbackDataEXT.java
Patch:
@@ -292,7 +292,6 @@ public static XrDebugUtilsMessengerCallbackDataEXT.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrDebugUtilsMessengerCallbackDataEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDebugUtilsMessengerCreateInfoEXT.java
Patch:
@@ -255,7 +255,6 @@ public static XrDebugUtilsMessengerCreateInfoEXT.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrDebugUtilsMessengerCreateInfoEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDebugUtilsObjectNameInfoEXT.java
Patch:
@@ -235,7 +235,6 @@ public static XrDebugUtilsObjectNameInfoEXT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrDebugUtilsObjectNameInfoEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDeserializeSceneFragmentMSFT.java
Patch:
@@ -185,7 +185,6 @@ public static XrDeserializeSceneFragmentMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrDeserializeSceneFragmentMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataBaseHeader.java
Patch:
@@ -190,7 +190,6 @@ public static XrEventDataBaseHeader.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataBaseHeader} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataBuffer.java
Patch:
@@ -203,7 +203,6 @@ public static XrEventDataBuffer.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataBuffer} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataDisplayRefreshRateChangedFB.java
Patch:
@@ -207,7 +207,6 @@ public static XrEventDataDisplayRefreshRateChangedFB.Buffer createSafe(long addr
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataDisplayRefreshRateChangedFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataEventsLost.java
Patch:
@@ -201,7 +201,6 @@ public static XrEventDataEventsLost.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataEventsLost} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataInstanceLossPending.java
Patch:
@@ -209,7 +209,6 @@ public static XrEventDataInstanceLossPending.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataInstanceLossPending} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataInteractionProfileChanged.java
Patch:
@@ -205,7 +205,6 @@ public static XrEventDataInteractionProfileChanged.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataInteractionProfileChanged} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataMainSessionVisibilityChangedEXTX.java
Patch:
@@ -216,7 +216,6 @@ public static XrEventDataMainSessionVisibilityChangedEXTX.Buffer createSafe(long
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataMainSessionVisibilityChangedEXTX} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataMarkerTrackingUpdateVARJO.java
Patch:
@@ -235,7 +235,6 @@ public static XrEventDataMarkerTrackingUpdateVARJO.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataMarkerTrackingUpdateVARJO} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataPassthroughStateChangedFB.java
Patch:
@@ -204,7 +204,6 @@ public static XrEventDataPassthroughStateChangedFB.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataPassthroughStateChangedFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataPerfSettingsEXT.java
Patch:
@@ -231,7 +231,6 @@ public static XrEventDataPerfSettingsEXT.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataPerfSettingsEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataReferenceSpaceChangePending.java
Patch:
@@ -245,7 +245,6 @@ public static XrEventDataReferenceSpaceChangePending.Buffer createSafe(long addr
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataReferenceSpaceChangePending} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataSessionStateChanged.java
Patch:
@@ -226,7 +226,6 @@ public static XrEventDataSessionStateChanged.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataSessionStateChanged} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataVisibilityMaskChangedKHR.java
Patch:
@@ -219,7 +219,6 @@ public static XrEventDataVisibilityMaskChangedKHR.Buffer createSafe(long address
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataVisibilityMaskChangedKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataViveTrackerConnectedHTCX.java
Patch:
@@ -204,7 +204,6 @@ public static XrEventDataViveTrackerConnectedHTCX.Buffer createSafe(long address
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEventDataViveTrackerConnectedHTCX} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrExtensionProperties.java
Patch:
@@ -205,7 +205,6 @@ public static XrExtensionProperties.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrExtensionProperties} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrExtent2Df.java
Patch:
@@ -181,7 +181,6 @@ public static XrExtent2Df.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrExtent2Df} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrExtent2Di.java
Patch:
@@ -183,7 +183,6 @@ public static XrExtent2Di.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrExtent2Di} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEyeGazeSampleTimeEXT.java
Patch:
@@ -194,7 +194,6 @@ public static XrEyeGazeSampleTimeEXT.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrEyeGazeSampleTimeEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFoveatedViewConfigurationViewVARJO.java
Patch:
@@ -230,7 +230,6 @@ public static XrFoveatedViewConfigurationViewVARJO.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFoveatedViewConfigurationViewVARJO} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFoveationLevelProfileCreateInfoFB.java
Patch:
@@ -217,7 +217,6 @@ public static XrFoveationLevelProfileCreateInfoFB.Buffer createSafe(long address
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFoveationLevelProfileCreateInfoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFoveationProfileCreateInfoFB.java
Patch:
@@ -189,7 +189,6 @@ public static XrFoveationProfileCreateInfoFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFoveationProfileCreateInfoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFovf.java
Patch:
@@ -203,7 +203,6 @@ public static XrFovf.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFovf} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFrameBeginInfo.java
Patch:
@@ -190,7 +190,6 @@ public static XrFrameBeginInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFrameBeginInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFrameEndInfo.java
Patch:
@@ -235,7 +235,6 @@ public static XrFrameEndInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFrameEndInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFrameState.java
Patch:
@@ -227,7 +227,6 @@ public static XrFrameState.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFrameState} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrFrameWaitInfo.java
Patch:
@@ -190,7 +190,6 @@ public static XrFrameWaitInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrFrameWaitInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGeometryInstanceCreateInfoFB.java
Patch:
@@ -261,7 +261,6 @@ public static XrGeometryInstanceCreateInfoFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGeometryInstanceCreateInfoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGeometryInstanceTransformFB.java
Patch:
@@ -246,7 +246,6 @@ public static XrGeometryInstanceTransformFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGeometryInstanceTransformFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingEGLMNDX.java
Patch:
@@ -244,7 +244,6 @@ public static XrGraphicsBindingEGLMNDX.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsBindingEGLMNDX} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLWaylandKHR.java
Patch:
@@ -206,7 +206,6 @@ public static XrGraphicsBindingOpenGLWaylandKHR.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsBindingOpenGLWaylandKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLWin32KHR.java
Patch:
@@ -220,7 +220,6 @@ public static XrGraphicsBindingOpenGLWin32KHR.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsBindingOpenGLWin32KHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLXcbKHR.java
Patch:
@@ -265,7 +265,6 @@ public static XrGraphicsBindingOpenGLXcbKHR.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsBindingOpenGLXcbKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLXlibKHR.java
Patch:
@@ -256,7 +256,6 @@ public static XrGraphicsBindingOpenGLXlibKHR.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsBindingOpenGLXlibKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingVulkan2KHR.java
Patch:
@@ -178,7 +178,6 @@ public static XrGraphicsBindingVulkan2KHR.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsBindingVulkan2KHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingVulkanKHR.java
Patch:
@@ -261,7 +261,6 @@ public static XrGraphicsBindingVulkanKHR.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsBindingVulkanKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsRequirementsOpenGLESKHR.java
Patch:
@@ -213,7 +213,6 @@ public static XrGraphicsRequirementsOpenGLESKHR.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsRequirementsOpenGLESKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsRequirementsOpenGLKHR.java
Patch:
@@ -213,7 +213,6 @@ public static XrGraphicsRequirementsOpenGLKHR.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsRequirementsOpenGLKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsRequirementsVulkan2KHR.java
Patch:
@@ -157,7 +157,6 @@ public static XrGraphicsRequirementsVulkan2KHR.Buffer createSafe(long address, i
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsRequirementsVulkan2KHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsRequirementsVulkanKHR.java
Patch:
@@ -213,7 +213,6 @@ public static XrGraphicsRequirementsVulkanKHR.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrGraphicsRequirementsVulkanKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointLocationEXT.java
Patch:
@@ -201,7 +201,6 @@ public static XrHandJointLocationEXT.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandJointLocationEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointLocationsEXT.java
Patch:
@@ -235,7 +235,6 @@ public static XrHandJointLocationsEXT.Buffer createSafe(long address, int capaci
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandJointLocationsEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointVelocitiesEXT.java
Patch:
@@ -220,7 +220,6 @@ public static XrHandJointVelocitiesEXT.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandJointVelocitiesEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointVelocityEXT.java
Patch:
@@ -198,7 +198,6 @@ public static XrHandJointVelocityEXT.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandJointVelocityEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointsLocateInfoEXT.java
Patch:
@@ -219,7 +219,6 @@ public static XrHandJointsLocateInfoEXT.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandJointsLocateInfoEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointsMotionRangeInfoEXT.java
Patch:
@@ -199,7 +199,6 @@ public static XrHandJointsMotionRangeInfoEXT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandJointsMotionRangeInfoEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandMeshIndexBufferMSFT.java
Patch:
@@ -222,7 +222,6 @@ public static XrHandMeshIndexBufferMSFT.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandMeshIndexBufferMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandMeshMSFT.java
Patch:
@@ -254,7 +254,6 @@ public static XrHandMeshMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandMeshMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandMeshSpaceCreateInfoMSFT.java
Patch:
@@ -211,7 +211,6 @@ public static XrHandMeshSpaceCreateInfoMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandMeshSpaceCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandMeshUpdateInfoMSFT.java
Patch:
@@ -216,7 +216,6 @@ public static XrHandMeshUpdateInfoMSFT.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandMeshUpdateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandMeshVertexBufferMSFT.java
Patch:
@@ -220,7 +220,6 @@ public static XrHandMeshVertexBufferMSFT.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandMeshVertexBufferMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandMeshVertexMSFT.java
Patch:
@@ -185,7 +185,6 @@ public static XrHandMeshVertexMSFT.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandMeshVertexMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandPoseTypeInfoMSFT.java
Patch:
@@ -199,7 +199,6 @@ public static XrHandPoseTypeInfoMSFT.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandPoseTypeInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandTrackerCreateInfoEXT.java
Patch:
@@ -213,7 +213,6 @@ public static XrHandTrackerCreateInfoEXT.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandTrackerCreateInfoEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandTrackingAimStateFB.java
Patch:
@@ -224,7 +224,6 @@ public static XrHandTrackingAimStateFB.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandTrackingAimStateFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandTrackingCapsulesStateFB.java
Patch:
@@ -199,7 +199,6 @@ public static XrHandTrackingCapsulesStateFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandTrackingCapsulesStateFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandTrackingMeshFB.java
Patch:
@@ -367,7 +367,6 @@ public static XrHandTrackingMeshFB.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandTrackingMeshFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandTrackingScaleFB.java
Patch:
@@ -224,7 +224,6 @@ public static XrHandTrackingScaleFB.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHandTrackingScaleFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHapticActionInfo.java
Patch:
@@ -214,7 +214,6 @@ public static XrHapticActionInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHapticActionInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHapticBaseHeader.java
Patch:
@@ -184,7 +184,6 @@ public static XrHapticBaseHeader.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHapticBaseHeader} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHapticVibration.java
Patch:
@@ -223,7 +223,6 @@ public static XrHapticVibration.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHapticVibration} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHolographicWindowAttachmentMSFT.java
Patch:
@@ -220,7 +220,6 @@ public static XrHolographicWindowAttachmentMSFT.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrHolographicWindowAttachmentMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInputSourceLocalizedNameGetInfo.java
Patch:
@@ -210,7 +210,6 @@ public static XrInputSourceLocalizedNameGetInfo.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrInputSourceLocalizedNameGetInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInstanceCreateInfo.java
Patch:
@@ -254,7 +254,6 @@ public static XrInstanceCreateInfo.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrInstanceCreateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInstanceProperties.java
Patch:
@@ -205,7 +205,6 @@ public static XrInstanceProperties.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrInstanceProperties} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInteractionProfileAnalogThresholdVALVE.java
Patch:
@@ -269,7 +269,6 @@ public static XrInteractionProfileAnalogThresholdVALVE.Buffer createSafe(long ad
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrInteractionProfileAnalogThresholdVALVE} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInteractionProfileState.java
Patch:
@@ -201,7 +201,6 @@ public static XrInteractionProfileState.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrInteractionProfileState} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInteractionProfileSuggestedBinding.java
Patch:
@@ -220,7 +220,6 @@ public static XrInteractionProfileSuggestedBinding.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrInteractionProfileSuggestedBinding} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrLoaderInitInfoBaseHeaderKHR.java
Patch:
@@ -184,7 +184,6 @@ public static XrLoaderInitInfoBaseHeaderKHR.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrLoaderInitInfoBaseHeaderKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrMarkerSpaceCreateInfoVARJO.java
Patch:
@@ -210,7 +210,6 @@ public static XrMarkerSpaceCreateInfoVARJO.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrMarkerSpaceCreateInfoVARJO} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrNewSceneComputeInfoMSFT.java
Patch:
@@ -235,7 +235,6 @@ public static XrNewSceneComputeInfoMSFT.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrNewSceneComputeInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrOffset2Df.java
Patch:
@@ -179,7 +179,6 @@ public static XrOffset2Df.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrOffset2Df} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrOffset2Di.java
Patch:
@@ -181,7 +181,6 @@ public static XrOffset2Di.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrOffset2Di} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrPassthroughColorMapMonoToMonoFB.java
Patch:
@@ -210,7 +210,6 @@ public static XrPassthroughColorMapMonoToMonoFB.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrPassthroughColorMapMonoToMonoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrPassthroughColorMapMonoToRgbaFB.java
Patch:
@@ -217,7 +217,6 @@ public static XrPassthroughColorMapMonoToRgbaFB.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrPassthroughColorMapMonoToRgbaFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrPassthroughCreateInfoFB.java
Patch:
@@ -208,7 +208,6 @@ public static XrPassthroughCreateInfoFB.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrPassthroughCreateInfoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrPassthroughLayerCreateInfoFB.java
Patch:
@@ -234,7 +234,6 @@ public static XrPassthroughLayerCreateInfoFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrPassthroughLayerCreateInfoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrPassthroughStyleFB.java
Patch:
@@ -218,7 +218,6 @@ public static XrPassthroughStyleFB.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrPassthroughStyleFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrPosef.java
Patch:
@@ -183,7 +183,6 @@ public static XrPosef.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrPosef} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrQuaternionf.java
Patch:
@@ -195,7 +195,6 @@ public static XrQuaternionf.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrQuaternionf} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrRect2Df.java
Patch:
@@ -183,7 +183,6 @@ public static XrRect2Df.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrRect2Df} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrRect2Di.java
Patch:
@@ -183,7 +183,6 @@ public static XrRect2Di.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrRect2Di} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrReferenceSpaceCreateInfo.java
Patch:
@@ -210,7 +210,6 @@ public static XrReferenceSpaceCreateInfo.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrReferenceSpaceCreateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneBoundsMSFT.java
Patch:
@@ -257,7 +257,6 @@ public static XrSceneBoundsMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneBoundsMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentLocationMSFT.java
Patch:
@@ -185,7 +185,6 @@ public static XrSceneComponentLocationMSFT.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneComponentLocationMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentLocationsMSFT.java
Patch:
@@ -211,7 +211,6 @@ public static XrSceneComponentLocationsMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneComponentLocationsMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentMSFT.java
Patch:
@@ -217,7 +217,6 @@ public static XrSceneComponentMSFT.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneComponentMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentParentFilterInfoMSFT.java
Patch:
@@ -203,7 +203,6 @@ public static XrSceneComponentParentFilterInfoMSFT.Buffer createSafe(long addres
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneComponentParentFilterInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentsGetInfoMSFT.java
Patch:
@@ -205,7 +205,6 @@ public static XrSceneComponentsGetInfoMSFT.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneComponentsGetInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentsLocateInfoMSFT.java
Patch:
@@ -235,7 +235,6 @@ public static XrSceneComponentsLocateInfoMSFT.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneComponentsLocateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentsMSFT.java
Patch:
@@ -228,7 +228,6 @@ public static XrSceneComponentsMSFT.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneComponentsMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneCreateInfoMSFT.java
Patch:
@@ -187,7 +187,6 @@ public static XrSceneCreateInfoMSFT.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneDeserializeInfoMSFT.java
Patch:
@@ -215,7 +215,6 @@ public static XrSceneDeserializeInfoMSFT.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneDeserializeInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneFrustumBoundMSFT.java
Patch:
@@ -199,7 +199,6 @@ public static XrSceneFrustumBoundMSFT.Buffer createSafe(long address, int capaci
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneFrustumBoundMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneMeshBuffersGetInfoMSFT.java
Patch:
@@ -198,7 +198,6 @@ public static XrSceneMeshBuffersGetInfoMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneMeshBuffersGetInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneMeshBuffersMSFT.java
Patch:
@@ -187,7 +187,6 @@ public static XrSceneMeshBuffersMSFT.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneMeshBuffersMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneMeshIndicesUint16MSFT.java
Patch:
@@ -222,7 +222,6 @@ public static XrSceneMeshIndicesUint16MSFT.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneMeshIndicesUint16MSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneMeshIndicesUint32MSFT.java
Patch:
@@ -222,7 +222,6 @@ public static XrSceneMeshIndicesUint32MSFT.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneMeshIndicesUint32MSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneMeshMSFT.java
Patch:
@@ -183,7 +183,6 @@ public static XrSceneMeshMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneMeshMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneMeshVertexBufferMSFT.java
Patch:
@@ -222,7 +222,6 @@ public static XrSceneMeshVertexBufferMSFT.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneMeshVertexBufferMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneMeshesMSFT.java
Patch:
@@ -211,7 +211,6 @@ public static XrSceneMeshesMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneMeshesMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneObjectMSFT.java
Patch:
@@ -164,7 +164,6 @@ public static XrSceneObjectMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneObjectMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneObjectTypesFilterInfoMSFT.java
Patch:
@@ -215,7 +215,6 @@ public static XrSceneObjectTypesFilterInfoMSFT.Buffer createSafe(long address, i
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneObjectTypesFilterInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneObjectsMSFT.java
Patch:
@@ -225,7 +225,6 @@ public static XrSceneObjectsMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneObjectsMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneObserverCreateInfoMSFT.java
Patch:
@@ -187,7 +187,6 @@ public static XrSceneObserverCreateInfoMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneObserverCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneOrientedBoxBoundMSFT.java
Patch:
@@ -189,7 +189,6 @@ public static XrSceneOrientedBoxBoundMSFT.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneOrientedBoxBoundMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrScenePlaneAlignmentFilterInfoMSFT.java
Patch:
@@ -215,7 +215,6 @@ public static XrScenePlaneAlignmentFilterInfoMSFT.Buffer createSafe(long address
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrScenePlaneAlignmentFilterInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrScenePlaneMSFT.java
Patch:
@@ -216,7 +216,6 @@ public static XrScenePlaneMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrScenePlaneMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrScenePlanesMSFT.java
Patch:
@@ -211,7 +211,6 @@ public static XrScenePlanesMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrScenePlanesMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneSphereBoundMSFT.java
Patch:
@@ -187,7 +187,6 @@ public static XrSceneSphereBoundMSFT.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSceneSphereBoundMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationFrameEndInfoMSFT.java
Patch:
@@ -216,7 +216,6 @@ public static XrSecondaryViewConfigurationFrameEndInfoMSFT.Buffer createSafe(lon
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSecondaryViewConfigurationFrameEndInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationFrameStateMSFT.java
Patch:
@@ -212,7 +212,6 @@ public static XrSecondaryViewConfigurationFrameStateMSFT.Buffer createSafe(long
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSecondaryViewConfigurationFrameStateMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationLayerInfoMSFT.java
Patch:
@@ -242,7 +242,6 @@ public static XrSecondaryViewConfigurationLayerInfoMSFT.Buffer createSafe(long a
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSecondaryViewConfigurationLayerInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationSessionBeginInfoMSFT.java
Patch:
@@ -216,7 +216,6 @@ public static XrSecondaryViewConfigurationSessionBeginInfoMSFT.Buffer createSafe
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSecondaryViewConfigurationSessionBeginInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationStateMSFT.java
Patch:
@@ -218,7 +218,6 @@ public static XrSecondaryViewConfigurationStateMSFT.Buffer createSafe(long addre
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSecondaryViewConfigurationStateMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationSwapchainCreateInfoMSFT.java
Patch:
@@ -205,7 +205,6 @@ public static XrSecondaryViewConfigurationSwapchainCreateInfoMSFT.Buffer createS
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSecondaryViewConfigurationSwapchainCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSerializedSceneFragmentDataGetInfoMSFT.java
Patch:
@@ -199,7 +199,6 @@ public static XrSerializedSceneFragmentDataGetInfoMSFT.Buffer createSafe(long ad
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSerializedSceneFragmentDataGetInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSessionActionSetsAttachInfo.java
Patch:
@@ -207,7 +207,6 @@ public static XrSessionActionSetsAttachInfo.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSessionActionSetsAttachInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSessionBeginInfo.java
Patch:
@@ -200,7 +200,6 @@ public static XrSessionBeginInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSessionBeginInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSessionCreateInfo.java
Patch:
@@ -234,7 +234,6 @@ public static XrSessionCreateInfo.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSessionCreateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSessionCreateInfoOverlayEXTX.java
Patch:
@@ -206,7 +206,6 @@ public static XrSessionCreateInfoOverlayEXTX.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSessionCreateInfoOverlayEXTX} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpaceLocation.java
Patch:
@@ -214,7 +214,6 @@ public static XrSpaceLocation.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpaceLocation} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpaceVelocity.java
Patch:
@@ -222,7 +222,6 @@ public static XrSpaceVelocity.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpaceVelocity} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorCreateInfoMSFT.java
Patch:
@@ -223,7 +223,6 @@ public static XrSpatialAnchorCreateInfoMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpatialAnchorCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.java
Patch:
@@ -217,7 +217,6 @@ public static XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.Buffer createSafe
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorPersistenceInfoMSFT.java
Patch:
@@ -213,7 +213,6 @@ public static XrSpatialAnchorPersistenceInfoMSFT.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpatialAnchorPersistenceInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorPersistenceNameMSFT.java
Patch:
@@ -174,7 +174,6 @@ public static XrSpatialAnchorPersistenceNameMSFT.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpatialAnchorPersistenceNameMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorSpaceCreateInfoMSFT.java
Patch:
@@ -212,7 +212,6 @@ public static XrSpatialAnchorSpaceCreateInfoMSFT.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpatialAnchorSpaceCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialGraphNodeSpaceCreateInfoMSFT.java
Patch:
@@ -228,7 +228,6 @@ public static XrSpatialGraphNodeSpaceCreateInfoMSFT.Buffer createSafe(long addre
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSpatialGraphNodeSpaceCreateInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainCreateInfo.java
Patch:
@@ -291,7 +291,6 @@ public static XrSwapchainCreateInfo.Buffer createSafe(long address, int capacity
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainCreateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainCreateInfoFoveationFB.java
Patch:
@@ -195,7 +195,6 @@ public static XrSwapchainCreateInfoFoveationFB.Buffer createSafe(long address, i
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainCreateInfoFoveationFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageAcquireInfo.java
Patch:
@@ -190,7 +190,6 @@ public static XrSwapchainImageAcquireInfo.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageAcquireInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageBaseHeader.java
Patch:
@@ -188,7 +188,6 @@ public static XrSwapchainImageBaseHeader.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageBaseHeader} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageFoveationVulkanFB.java
Patch:
@@ -210,7 +210,6 @@ public static XrSwapchainImageFoveationVulkanFB.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageFoveationVulkanFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageOpenGLESKHR.java
Patch:
@@ -211,7 +211,6 @@ public static XrSwapchainImageOpenGLESKHR.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageOpenGLESKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageOpenGLKHR.java
Patch:
@@ -211,7 +211,6 @@ public static XrSwapchainImageOpenGLKHR.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageOpenGLKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageReleaseInfo.java
Patch:
@@ -190,7 +190,6 @@ public static XrSwapchainImageReleaseInfo.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageReleaseInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageVulkan2KHR.java
Patch:
@@ -153,7 +153,6 @@ public static XrSwapchainImageVulkan2KHR.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageVulkan2KHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageVulkanKHR.java
Patch:
@@ -216,7 +216,6 @@ public static XrSwapchainImageVulkanKHR.Buffer createSafe(long address, int capa
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageVulkanKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageWaitInfo.java
Patch:
@@ -197,7 +197,6 @@ public static XrSwapchainImageWaitInfo.Buffer createSafe(long address, int capac
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainImageWaitInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainStateBaseHeaderFB.java
Patch:
@@ -189,7 +189,6 @@ public static XrSwapchainStateBaseHeaderFB.Buffer createSafe(long address, int c
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainStateBaseHeaderFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainStateFoveationFB.java
Patch:
@@ -208,7 +208,6 @@ public static XrSwapchainStateFoveationFB.Buffer createSafe(long address, int ca
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainStateFoveationFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainStateSamplerOpenGLESFB.java
Patch:
@@ -321,7 +321,6 @@ public static XrSwapchainStateSamplerOpenGLESFB.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainStateSamplerOpenGLESFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainStateSamplerVulkanFB.java
Patch:
@@ -327,7 +327,6 @@ public static XrSwapchainStateSamplerVulkanFB.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainStateSamplerVulkanFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainSubImage.java
Patch:
@@ -196,7 +196,6 @@ public static XrSwapchainSubImage.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSwapchainSubImage} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemColorSpacePropertiesFB.java
Patch:
@@ -195,7 +195,6 @@ public static XrSystemColorSpacePropertiesFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemColorSpacePropertiesFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemEyeGazeInteractionPropertiesEXT.java
Patch:
@@ -194,7 +194,6 @@ public static XrSystemEyeGazeInteractionPropertiesEXT.Buffer createSafe(long add
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemEyeGazeInteractionPropertiesEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemFoveatedRenderingPropertiesVARJO.java
Patch:
@@ -198,7 +198,6 @@ public static XrSystemFoveatedRenderingPropertiesVARJO.Buffer createSafe(long ad
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemFoveatedRenderingPropertiesVARJO} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemGetInfo.java
Patch:
@@ -202,7 +202,6 @@ public static XrSystemGetInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemGetInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemGraphicsProperties.java
Patch:
@@ -188,7 +188,6 @@ public static XrSystemGraphicsProperties.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemGraphicsProperties} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemHandTrackingMeshPropertiesMSFT.java
Patch:
@@ -226,7 +226,6 @@ public static XrSystemHandTrackingMeshPropertiesMSFT.Buffer createSafe(long addr
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemHandTrackingMeshPropertiesMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemHandTrackingPropertiesEXT.java
Patch:
@@ -196,7 +196,6 @@ public static XrSystemHandTrackingPropertiesEXT.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemHandTrackingPropertiesEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemMarkerTrackingPropertiesVARJO.java
Patch:
@@ -204,7 +204,6 @@ public static XrSystemMarkerTrackingPropertiesVARJO.Buffer createSafe(long addre
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemMarkerTrackingPropertiesVARJO} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemPassthroughPropertiesFB.java
Patch:
@@ -202,7 +202,6 @@ public static XrSystemPassthroughPropertiesFB.Buffer createSafe(long address, in
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemPassthroughPropertiesFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemProperties.java
Patch:
@@ -240,7 +240,6 @@ public static XrSystemProperties.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemProperties} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemSpaceWarpPropertiesFB.java
Patch:
@@ -209,7 +209,6 @@ public static XrSystemSpaceWarpPropertiesFB.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemSpaceWarpPropertiesFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSystemTrackingProperties.java
Patch:
@@ -177,7 +177,6 @@ public static XrSystemTrackingProperties.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrSystemTrackingProperties} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrTriangleMeshCreateInfoFB.java
Patch:
@@ -268,7 +268,6 @@ public static XrTriangleMeshCreateInfoFB.Buffer createSafe(long address, int cap
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrTriangleMeshCreateInfoFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrUuidMSFT.java
Patch:
@@ -169,7 +169,6 @@ public static XrUuidMSFT.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrUuidMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVector2f.java
Patch:
@@ -179,7 +179,6 @@ public static XrVector2f.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrVector2f} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVector3f.java
Patch:
@@ -189,7 +189,6 @@ public static XrVector3f.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrVector3f} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVector4f.java
Patch:
@@ -199,7 +199,6 @@ public static XrVector4f.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrVector4f} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVector4sFB.java
Patch:
@@ -214,7 +214,6 @@ public static XrVector4sFB.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrVector4sFB} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrView.java
Patch:
@@ -214,7 +214,6 @@ public static XrView.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrView} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewConfigurationDepthRangeEXT.java
Patch:
@@ -231,7 +231,6 @@ public static XrViewConfigurationDepthRangeEXT.Buffer createSafe(long address, i
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViewConfigurationDepthRangeEXT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewConfigurationProperties.java
Patch:
@@ -209,7 +209,6 @@ public static XrViewConfigurationProperties.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViewConfigurationProperties} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewConfigurationView.java
Patch:
@@ -264,7 +264,6 @@ public static XrViewConfigurationView.Buffer createSafe(long address, int capaci
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViewConfigurationView} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewConfigurationViewFovEPIC.java
Patch:
@@ -211,7 +211,6 @@ public static XrViewConfigurationViewFovEPIC.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViewConfigurationViewFovEPIC} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewLocateFoveatedRenderingVARJO.java
Patch:
@@ -202,7 +202,6 @@ public static XrViewLocateFoveatedRenderingVARJO.Buffer createSafe(long address,
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViewLocateFoveatedRenderingVARJO} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewLocateInfo.java
Patch:
@@ -230,7 +230,6 @@ public static XrViewLocateInfo.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViewLocateInfo} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewState.java
Patch:
@@ -202,7 +202,6 @@ public static XrViewState.Buffer createSafe(long address, int capacity) {
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViewState} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVisibilityMaskKHR.java
Patch:
@@ -257,7 +257,6 @@ public static XrVisibilityMaskKHR.Buffer createSafe(long address, int capacity)
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrVisibilityMaskKHR} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVisualMeshComputeLodInfoMSFT.java
Patch:
@@ -199,7 +199,6 @@ public static XrVisualMeshComputeLodInfoMSFT.Buffer createSafe(long address, int
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrVisualMeshComputeLodInfoMSFT} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViveTrackerPathsHTCX.java
Patch:
@@ -205,7 +205,6 @@ public static XrViveTrackerPathsHTCX.Buffer createSafe(long address, int capacit
         return address == NULL ? null : wrap(Buffer.class, address, capacity);
     }
 
-
     /**
      * Returns a new {@code XrViveTrackerPathsHTCX} instance allocated on the specified {@link MemoryStack}.
      *

File: modules/samples/src/test/java/org/lwjgl/demo/openxr/XRHelper.java
Patch:
@@ -53,7 +53,7 @@ static <T extends StructBuffer> T fill(T buffer, int offset, int value) {
      */
     static XrApiLayerProperties.Buffer prepareApiLayerProperties(MemoryStack stack, int numLayers) {
         return fill(
-            XrApiLayerProperties.malloc(numLayers, stack),
+            XrApiLayerProperties.calloc(numLayers, stack),
             XrApiLayerProperties.TYPE,
             XR_TYPE_API_LAYER_PROPERTIES
         );
@@ -72,7 +72,7 @@ static XrApiLayerProperties.Buffer prepareApiLayerProperties(MemoryStack stack,
      */
     static XrExtensionProperties.Buffer prepareExtensionProperties(MemoryStack stack, int numExtensions) {
         return fill(
-            XrExtensionProperties.malloc(numExtensions, stack),
+            XrExtensionProperties.calloc(numExtensions, stack),
             XrExtensionProperties.TYPE,
             XR_TYPE_EXTENSION_PROPERTIES
         );

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/FBSwapchainUpdateStateOpenGLES.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.openxr;
 
 /** The FB_swapchain_update_state_opengl_es extension. */
-public final class FBSwapchainUpdateStateOpenGLEs {
+public final class FBSwapchainUpdateStateOpenGLES {
 
     /** The extension specification version. */
     public static final int XR_FB_swapchain_update_state_opengl_es_SPEC_VERSION = 1;
@@ -17,6 +17,6 @@ public final class FBSwapchainUpdateStateOpenGLEs {
     /** Extends {@code XrStructureType}. */
     public static final int XR_TYPE_SWAPCHAIN_STATE_SAMPLER_OPENGL_ES_FB = 1000162000;
 
-    private FBSwapchainUpdateStateOpenGLEs() {}
+    private FBSwapchainUpdateStateOpenGLES() {}
 
 }
\ No newline at end of file

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/KHROpenGLESEnable.java
Patch:
@@ -11,7 +11,7 @@
 import static org.lwjgl.system.JNI.*;
 
 /** The KHR_opengl_es_enable extension. */
-public class KHROpenGLEsEnable {
+public class KHROpenGLESEnable {
 
     /** The extension specification version. */
     public static final int XR_KHR_opengl_es_enable_SPEC_VERSION = 8;
@@ -35,7 +35,7 @@ public class KHROpenGLEsEnable {
         XR_TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR          = 1000024002,
         XR_TYPE_GRAPHICS_REQUIREMENTS_OPENGL_ES_KHR    = 1000024003;
 
-    protected KHROpenGLEsEnable() {
+    protected KHROpenGLESEnable() {
         throw new UnsupportedOperationException();
     }
 
@@ -70,7 +70,7 @@ public static int nxrGetOpenGLESGraphicsRequirementsKHR(XrInstance instance, lon
      * <h5>Valid Usage (Implicit)</h5>
      * 
      * <ul>
-     * <li>The {@link KHROpenGLEsEnable XR_KHR_opengl_es_enable} extension <b>must</b> be enabled prior to calling {@link #xrGetOpenGLESGraphicsRequirementsKHR GetOpenGLESGraphicsRequirementsKHR}</li>
+     * <li>The {@link KHROpenGLESEnable XR_KHR_opengl_es_enable} extension <b>must</b> be enabled prior to calling {@link #xrGetOpenGLESGraphicsRequirementsKHR GetOpenGLESGraphicsRequirementsKHR}</li>
      * <li>{@code instance} <b>must</b> be a valid {@code XrInstance} handle</li>
      * <li>{@code graphicsRequirements} <b>must</b> be a pointer to an {@link XrGraphicsRequirementsOpenGLESKHR} structure</li>
      * </ul>

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/MNDXEGLEnable.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.openxr;
 
 /** The MNDX_egl_enable extension. */
-public final class MNDXEglEnable {
+public final class MNDXEGLEnable {
 
     /** The extension specification version. */
     public static final int XR_MNDX_egl_enable_SPEC_VERSION = 1;
@@ -17,6 +17,6 @@ public final class MNDXEglEnable {
     /** Extends {@code XrStructureType}. */
     public static final int XR_TYPE_GRAPHICS_BINDING_EGL_MNDX = 1000048004;
 
-    private MNDXEglEnable() {}
+    private MNDXEGLEnable() {}
 
 }
\ No newline at end of file

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XRCapabilities.java
Patch:
@@ -326,7 +326,7 @@ public class XRCapabilities {
     public final boolean XR_FB_space_warp;
     /** When true, {@link FBSwapchainUpdateState} is supported. */
     public final boolean XR_FB_swapchain_update_state;
-    /** When true, {@link FBSwapchainUpdateStateOpenGLEs} is supported. */
+    /** When true, {@link FBSwapchainUpdateStateOpenGLES} is supported. */
     public final boolean XR_FB_swapchain_update_state_opengl_es;
     /** When true, {@link FBSwapchainUpdateStateVulkan} is supported. */
     public final boolean XR_FB_swapchain_update_state_vulkan;
@@ -358,7 +358,7 @@ public class XRCapabilities {
     public final boolean XR_KHR_loader_init;
     /** When true, {@link KHROpenGLEnable} is supported. */
     public final boolean XR_KHR_opengl_enable;
-    /** When true, {@link KHROpenGLEsEnable} is supported. */
+    /** When true, {@link KHROpenGLESEnable} is supported. */
     public final boolean XR_KHR_opengl_es_enable;
     /** When true, {@link KHRSwapchainUsageInputAttachmentBit} is supported. */
     public final boolean XR_KHR_swapchain_usage_input_attachment_bit;
@@ -376,7 +376,7 @@ public class XRCapabilities {
     public final boolean XR_MND_headless;
     /** When true, {@link MNDSwapchainUsageInputAttachmentBit} is supported. */
     public final boolean XR_MND_swapchain_usage_input_attachment_bit;
-    /** When true, {@link MNDXEglEnable} is supported. */
+    /** When true, {@link MNDXEGLEnable} is supported. */
     public final boolean XR_MNDX_egl_enable;
     /** When true, {@link MSFTCompositionLayerReprojection} is supported. */
     public final boolean XR_MSFT_composition_layer_reprojection;

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageBaseHeader.java
Patch:
@@ -25,7 +25,7 @@
  * <h5>Valid Usage (Implicit)</h5>
  * 
  * <ul>
- * <li>{@code type} <b>must</b> be one of the following XrStructureType values: {@link KHROpenGLEsEnable#XR_TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR}, {@link KHROpenGLEnable#XR_TYPE_SWAPCHAIN_IMAGE_OPENGL_KHR TYPE_SWAPCHAIN_IMAGE_OPENGL_KHR}, {@link KHRVulkanEnable#XR_TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR}</li>
+ * <li>{@code type} <b>must</b> be one of the following XrStructureType values: {@link KHROpenGLESEnable#XR_TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR}, {@link KHROpenGLEnable#XR_TYPE_SWAPCHAIN_IMAGE_OPENGL_KHR TYPE_SWAPCHAIN_IMAGE_OPENGL_KHR}, {@link KHRVulkanEnable#XR_TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR}</li>
  * <li>{@code next} <b>must</b> be {@code NULL} or a valid pointer to the <a target="_blank" href="https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#valid-usage-for-structure-pointer-chains">next structure in a structure chain</a></li>
  * </ul>
  * 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainStateBaseHeaderFB.java
Patch:
@@ -26,7 +26,7 @@
  * 
  * <ul>
  * <li>The {@link FBSwapchainUpdateState XR_FB_swapchain_update_state} extension <b>must</b> be enabled prior to using {@link XrSwapchainStateBaseHeaderFB}</li>
- * <li>{@code type} <b>must</b> be one of the following XrStructureType values: {@link FBFoveation#XR_TYPE_SWAPCHAIN_STATE_FOVEATION_FB TYPE_SWAPCHAIN_STATE_FOVEATION_FB}, {@link FBSwapchainUpdateStateOpenGLEs#XR_TYPE_SWAPCHAIN_STATE_SAMPLER_OPENGL_ES_FB TYPE_SWAPCHAIN_STATE_SAMPLER_OPENGL_ES_FB}, {@link FBSwapchainUpdateStateVulkan#XR_TYPE_SWAPCHAIN_STATE_SAMPLER_VULKAN_FB TYPE_SWAPCHAIN_STATE_SAMPLER_VULKAN_FB}</li>
+ * <li>{@code type} <b>must</b> be one of the following XrStructureType values: {@link FBFoveation#XR_TYPE_SWAPCHAIN_STATE_FOVEATION_FB TYPE_SWAPCHAIN_STATE_FOVEATION_FB}, {@link FBSwapchainUpdateStateOpenGLES#XR_TYPE_SWAPCHAIN_STATE_SAMPLER_OPENGL_ES_FB TYPE_SWAPCHAIN_STATE_SAMPLER_OPENGL_ES_FB}, {@link FBSwapchainUpdateStateVulkan#XR_TYPE_SWAPCHAIN_STATE_SAMPLER_VULKAN_FB TYPE_SWAPCHAIN_STATE_SAMPLER_VULKAN_FB}</li>
  * <li>{@code next} <b>must</b> be {@code NULL} or a valid pointer to the <a target="_blank" href="https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#valid-usage-for-structure-pointer-chains">next structure in a structure chain</a></li>
  * </ul>
  * 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTDebugUtils.java
Patch:
@@ -90,7 +90,6 @@ public static int nxrSetDebugUtilsObjectNameEXT(XrInstance instance, long nameIn
         long __functionAddress = instance.getCapabilities().xrSetDebugUtilsObjectNameEXT;
         if (CHECKS) {
             check(__functionAddress);
-            XrDebugUtilsObjectNameInfoEXT.validate(nameInfo);
         }
         return callPPI(instance.address(), nameInfo, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHandTracking.java
Patch:
@@ -158,7 +158,6 @@ public static int nxrCreateHandTrackerEXT(XrSession session, long createInfo, lo
         long __functionAddress = session.getCapabilities().xrCreateHandTrackerEXT;
         if (CHECKS) {
             check(__functionAddress);
-            XrHandTrackerCreateInfoEXT.validate(createInfo);
         }
         return callPPPI(session.address(), createInfo, handTracker, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/FBFoveation.java
Patch:
@@ -66,7 +66,6 @@ public static int nxrCreateFoveationProfileFB(XrSession session, long createInfo
         long __functionAddress = session.getCapabilities().xrCreateFoveationProfileFB;
         if (CHECKS) {
             check(__functionAddress);
-            XrFoveationProfileCreateInfoFB.validate(createInfo);
         }
         return callPPPI(session.address(), createInfo, profile, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/FBPassthrough.java
Patch:
@@ -143,7 +143,6 @@ public static int nxrCreatePassthroughFB(XrSession session, long createInfo, lon
         long __functionAddress = session.getCapabilities().xrCreatePassthroughFB;
         if (CHECKS) {
             check(__functionAddress);
-            XrPassthroughCreateInfoFB.validate(createInfo);
         }
         return callPPPI(session.address(), createInfo, outPassthrough, __functionAddress);
     }
@@ -639,7 +638,6 @@ public static int nxrPassthroughLayerSetStyleFB(XrPassthroughLayerFB layer, long
         long __functionAddress = layer.getCapabilities().xrPassthroughLayerSetStyleFB;
         if (CHECKS) {
             check(__functionAddress);
-            XrPassthroughStyleFB.validate(style);
         }
         return callPPI(layer.address(), style, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/FBSwapchainUpdateState.java
Patch:
@@ -30,7 +30,6 @@ public static int nxrUpdateSwapchainFB(XrSwapchain swapchain, long state) {
         long __functionAddress = swapchain.getCapabilities().xrUpdateSwapchainFB;
         if (CHECKS) {
             check(__functionAddress);
-            XrSwapchainStateBaseHeaderFB.validate(state);
         }
         return callPPI(swapchain.address(), state, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/FBTriangleMesh.java
Patch:
@@ -64,7 +64,6 @@ public static int nxrCreateTriangleMeshFB(XrSession session, long createInfo, lo
         long __functionAddress = session.getCapabilities().xrCreateTriangleMeshFB;
         if (CHECKS) {
             check(__functionAddress);
-            XrTriangleMeshCreateInfoFB.validate(createInfo);
         }
         return callPPPI(session.address(), createInfo, outTriangleMesh, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/KHRLoaderInit.java
Patch:
@@ -30,7 +30,6 @@ public static int nxrInitializeLoaderKHR(long loaderInitInfo) {
         long __functionAddress = XR.getGlobalCommands().xrInitializeLoaderKHR;
         if (CHECKS) {
             check(__functionAddress);
-            XrLoaderInitInfoBaseHeaderKHR.validate(loaderInitInfo);
         }
         return callPI(loaderInitInfo, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/MSFTHandTrackingMesh.java
Patch:
@@ -77,7 +77,6 @@ public static int nxrCreateHandMeshSpaceMSFT(XrHandTrackerEXT handTracker, long
         long __functionAddress = handTracker.getCapabilities().xrCreateHandMeshSpaceMSFT;
         if (CHECKS) {
             check(__functionAddress);
-            XrHandMeshSpaceCreateInfoMSFT.validate(createInfo);
         }
         return callPPPI(handTracker.address(), createInfo, space, __functionAddress);
     }
@@ -162,7 +161,6 @@ public static int nxrUpdateHandMeshMSFT(XrHandTrackerEXT handTracker, long updat
         long __functionAddress = handTracker.getCapabilities().xrUpdateHandMeshMSFT;
         if (CHECKS) {
             check(__functionAddress);
-            XrHandMeshUpdateInfoMSFT.validate(updateInfo);
         }
         return callPPPI(handTracker.address(), updateInfo, handMesh, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/MSFTSceneUnderstandingSerialization.java
Patch:
@@ -55,7 +55,6 @@ public static int nxrDeserializeSceneMSFT(XrSceneObserverMSFT sceneObserver, lon
         long __functionAddress = sceneObserver.getCapabilities().xrDeserializeSceneMSFT;
         if (CHECKS) {
             check(__functionAddress);
-            XrSceneDeserializeInfoMSFT.validate(deserializeInfo);
         }
         return callPPI(sceneObserver.address(), deserializeInfo, __functionAddress);
     }
@@ -131,7 +130,6 @@ public static int nxrGetSerializedSceneFragmentDataMSFT(XrSceneMSFT scene, long
         long __functionAddress = scene.getCapabilities().xrGetSerializedSceneFragmentDataMSFT;
         if (CHECKS) {
             check(__functionAddress);
-            XrSerializedSceneFragmentDataGetInfoMSFT.validate(getInfo);
         }
         return callPPPPI(scene.address(), getInfo, countInput, readOutput, buffer, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/MSFTSpatialGraphBridge.java
Patch:
@@ -55,7 +55,6 @@ public static int nxrCreateSpatialGraphNodeSpaceMSFT(XrSession session, long cre
         long __functionAddress = session.getCapabilities().xrCreateSpatialGraphNodeSpaceMSFT;
         if (CHECKS) {
             check(__functionAddress);
-            XrSpatialGraphNodeSpaceCreateInfoMSFT.validate(createInfo);
         }
         return callPPPI(session.address(), createInfo, space, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/VARJOMarkerTracking.java
Patch:
@@ -306,7 +306,6 @@ public static int nxrCreateMarkerSpaceVARJO(XrSession session, long createInfo,
         long __functionAddress = session.getCapabilities().xrCreateMarkerSpaceVARJO;
         if (CHECKS) {
             check(__functionAddress);
-            XrMarkerSpaceCreateInfoVARJO.validate(createInfo);
         }
         return callPPPI(session.address(), createInfo, space, __functionAddress);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionSpaceCreateInfo.java
Patch:
@@ -277,7 +277,7 @@ public static XrActionSpaceCreateInfo.Buffer calloc(int capacity, MemoryStack st
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrActionSpaceCreateInfo.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrActionSpaceCreateInfo.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrActionSpaceCreateInfo.NEXT, value); }
     /** Unsafe version of {@link #action(XrAction) action}. */
     public static void naction(long struct, XrAction value) { memPutAddress(struct + XrActionSpaceCreateInfo.ACTION, value.address()); }
     /** Unsafe version of {@link #subactionPath(long) subactionPath}. */
@@ -291,7 +291,6 @@ public static XrActionSpaceCreateInfo.Buffer calloc(int capacity, MemoryStack st
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrActionSpaceCreateInfo.NEXT));
         check(memGetAddress(struct + XrActionSpaceCreateInfo.ACTION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrActionStateGetInfo.java
Patch:
@@ -267,7 +267,7 @@ public static XrActionStateGetInfo.Buffer calloc(int capacity, MemoryStack stack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrActionStateGetInfo.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrActionStateGetInfo.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrActionStateGetInfo.NEXT, value); }
     /** Unsafe version of {@link #action(XrAction) action}. */
     public static void naction(long struct, XrAction value) { memPutAddress(struct + XrActionStateGetInfo.ACTION, value.address()); }
     /** Unsafe version of {@link #subactionPath(long) subactionPath}. */
@@ -279,7 +279,6 @@ public static XrActionStateGetInfo.Buffer calloc(int capacity, MemoryStack stack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrActionStateGetInfo.NEXT));
         check(memGetAddress(struct + XrActionStateGetInfo.ACTION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrBoundSourcesForActionEnumerateInfo.java
Patch:
@@ -250,7 +250,7 @@ public static XrBoundSourcesForActionEnumerateInfo.Buffer calloc(int capacity, M
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrBoundSourcesForActionEnumerateInfo.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrBoundSourcesForActionEnumerateInfo.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrBoundSourcesForActionEnumerateInfo.NEXT, value); }
     /** Unsafe version of {@link #action(XrAction) action}. */
     public static void naction(long struct, XrAction value) { memPutAddress(struct + XrBoundSourcesForActionEnumerateInfo.ACTION, value.address()); }
 
@@ -260,7 +260,6 @@ public static XrBoundSourcesForActionEnumerateInfo.Buffer calloc(int capacity, M
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrBoundSourcesForActionEnumerateInfo.NEXT));
         check(memGetAddress(struct + XrBoundSourcesForActionEnumerateInfo.ACTION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerBaseHeader.java
Patch:
@@ -266,7 +266,7 @@ public static XrCompositionLayerBaseHeader.Buffer calloc(int capacity, MemorySta
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerBaseHeader.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerBaseHeader.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerBaseHeader.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerBaseHeader.LAYERFLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -278,7 +278,6 @@ public static XrCompositionLayerBaseHeader.Buffer calloc(int capacity, MemorySta
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerBaseHeader.NEXT));
         check(memGetAddress(struct + XrCompositionLayerBaseHeader.SPACE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerCubeKHR.java
Patch:
@@ -325,7 +325,7 @@ public static XrCompositionLayerCubeKHR.Buffer calloc(int capacity, MemoryStack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerCubeKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerCubeKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerCubeKHR.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerCubeKHR.LAYERFLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -345,7 +345,6 @@ public static XrCompositionLayerCubeKHR.Buffer calloc(int capacity, MemoryStack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerCubeKHR.NEXT));
         check(memGetAddress(struct + XrCompositionLayerCubeKHR.SPACE));
         check(memGetAddress(struct + XrCompositionLayerCubeKHR.SWAPCHAIN));
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerCylinderKHR.java
Patch:
@@ -348,7 +348,7 @@ public static XrCompositionLayerCylinderKHR.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerCylinderKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerCylinderKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerCylinderKHR.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerCylinderKHR.LAYERFLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -372,7 +372,6 @@ public static XrCompositionLayerCylinderKHR.Buffer calloc(int capacity, MemorySt
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerCylinderKHR.NEXT));
         check(memGetAddress(struct + XrCompositionLayerCylinderKHR.SPACE));
         XrSwapchainSubImage.validate(struct + XrCompositionLayerCylinderKHR.SUBIMAGE);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerDepthInfoKHR.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
@@ -304,7 +303,7 @@ public static XrCompositionLayerDepthInfoKHR.Buffer calloc(int capacity, MemoryS
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerDepthInfoKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerDepthInfoKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerDepthInfoKHR.NEXT, value); }
     /** Unsafe version of {@link #subImage(XrSwapchainSubImage) subImage}. */
     public static void nsubImage(long struct, XrSwapchainSubImage value) { memCopy(value.address(), struct + XrCompositionLayerDepthInfoKHR.SUBIMAGE, XrSwapchainSubImage.SIZEOF); }
     /** Unsafe version of {@link #minDepth(float) minDepth}. */
@@ -322,7 +321,6 @@ public static XrCompositionLayerDepthInfoKHR.Buffer calloc(int capacity, MemoryS
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerDepthInfoKHR.NEXT));
         XrSwapchainSubImage.validate(struct + XrCompositionLayerDepthInfoKHR.SUBIMAGE);
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerEquirect2KHR.java
Patch:
@@ -360,7 +360,7 @@ public static XrCompositionLayerEquirect2KHR.Buffer calloc(int capacity, MemoryS
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerEquirect2KHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerEquirect2KHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerEquirect2KHR.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerEquirect2KHR.LAYERFLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -386,7 +386,6 @@ public static XrCompositionLayerEquirect2KHR.Buffer calloc(int capacity, MemoryS
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerEquirect2KHR.NEXT));
         check(memGetAddress(struct + XrCompositionLayerEquirect2KHR.SPACE));
         XrSwapchainSubImage.validate(struct + XrCompositionLayerEquirect2KHR.SUBIMAGE);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerEquirectKHR.java
Patch:
@@ -352,7 +352,7 @@ public static XrCompositionLayerEquirectKHR.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerEquirectKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerEquirectKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerEquirectKHR.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerEquirectKHR.LAYERFLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -376,7 +376,6 @@ public static XrCompositionLayerEquirectKHR.Buffer calloc(int capacity, MemorySt
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerEquirectKHR.NEXT));
         check(memGetAddress(struct + XrCompositionLayerEquirectKHR.SPACE));
         XrSwapchainSubImage.validate(struct + XrCompositionLayerEquirectKHR.SUBIMAGE);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerPassthroughFB.java
Patch:
@@ -291,7 +291,7 @@ public static XrCompositionLayerPassthroughFB.Buffer calloc(int capacity, Memory
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerPassthroughFB.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerPassthroughFB.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerPassthroughFB.NEXT, value); }
     /** Unsafe version of {@link #flags(long) flags}. */
     public static void nflags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerPassthroughFB.FLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -305,7 +305,6 @@ public static XrCompositionLayerPassthroughFB.Buffer calloc(int capacity, Memory
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerPassthroughFB.NEXT));
         check(memGetAddress(struct + XrCompositionLayerPassthroughFB.SPACE));
         check(memGetAddress(struct + XrCompositionLayerPassthroughFB.LAYERHANDLE));
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerProjection.java
Patch:
@@ -295,7 +295,7 @@ public static XrCompositionLayerProjection.Buffer calloc(int capacity, MemorySta
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerProjection.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerProjection.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerProjection.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerProjection.LAYERFLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -311,7 +311,6 @@ public static XrCompositionLayerProjection.Buffer calloc(int capacity, MemorySta
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerProjection.NEXT));
         check(memGetAddress(struct + XrCompositionLayerProjection.SPACE));
         int viewCount = nviewCount(struct);
         long views = memGetAddress(struct + XrCompositionLayerProjection.VIEWS);

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerProjectionView.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
@@ -283,7 +282,7 @@ public static XrCompositionLayerProjectionView.Buffer calloc(int capacity, Memor
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerProjectionView.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerProjectionView.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerProjectionView.NEXT, value); }
     /** Unsafe version of {@link #pose(XrPosef) pose}. */
     public static void npose(long struct, XrPosef value) { memCopy(value.address(), struct + XrCompositionLayerProjectionView.POSE, XrPosef.SIZEOF); }
     /** Unsafe version of {@link #fov(XrFovf) fov}. */
@@ -297,7 +296,6 @@ public static XrCompositionLayerProjectionView.Buffer calloc(int capacity, Memor
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerProjectionView.NEXT));
         XrSwapchainSubImage.validate(struct + XrCompositionLayerProjectionView.SUBIMAGE);
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerQuad.java
Patch:
@@ -325,7 +325,7 @@ public static XrCompositionLayerQuad.Buffer calloc(int capacity, MemoryStack sta
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerQuad.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerQuad.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerQuad.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerQuad.LAYERFLAGS, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
@@ -345,7 +345,6 @@ public static XrCompositionLayerQuad.Buffer calloc(int capacity, MemoryStack sta
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerQuad.NEXT));
         check(memGetAddress(struct + XrCompositionLayerQuad.SPACE));
         XrSwapchainSubImage.validate(struct + XrCompositionLayerQuad.SUBIMAGE);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrCompositionLayerSpaceWarpInfoFB.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
@@ -347,7 +346,7 @@ public static XrCompositionLayerSpaceWarpInfoFB.Buffer calloc(int capacity, Memo
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrCompositionLayerSpaceWarpInfoFB.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerSpaceWarpInfoFB.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrCompositionLayerSpaceWarpInfoFB.NEXT, value); }
     /** Unsafe version of {@link #layerFlags(long) layerFlags}. */
     public static void nlayerFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrCompositionLayerSpaceWarpInfoFB.LAYERFLAGS, value); }
     /** Unsafe version of {@link #motionVectorSubImage(XrSwapchainSubImage) motionVectorSubImage}. */
@@ -371,7 +370,6 @@ public static XrCompositionLayerSpaceWarpInfoFB.Buffer calloc(int capacity, Memo
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrCompositionLayerSpaceWarpInfoFB.NEXT));
         XrSwapchainSubImage.validate(struct + XrCompositionLayerSpaceWarpInfoFB.MOTIONVECTORSUBIMAGE);
         XrSwapchainSubImage.validate(struct + XrCompositionLayerSpaceWarpInfoFB.DEPTHSUBIMAGE);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDebugUtilsLabelEXT.java
Patch:
@@ -256,7 +256,7 @@ public static XrDebugUtilsLabelEXT.Buffer calloc(int capacity, MemoryStack stack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrDebugUtilsLabelEXT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrDebugUtilsLabelEXT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrDebugUtilsLabelEXT.NEXT, value); }
     /** Unsafe version of {@link #labelName(ByteBuffer) labelName}. */
     public static void nlabelName(long struct, ByteBuffer value) {
         if (CHECKS) { checkNT1(value); }
@@ -269,7 +269,6 @@ public static void nlabelName(long struct, ByteBuffer value) {
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrDebugUtilsLabelEXT.NEXT));
         check(memGetAddress(struct + XrDebugUtilsLabelEXT.LABELNAME));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDebugUtilsMessengerCallbackDataEXT.java
Patch:
@@ -361,7 +361,7 @@ public static XrDebugUtilsMessengerCallbackDataEXT.Buffer calloc(int capacity, M
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrDebugUtilsMessengerCallbackDataEXT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrDebugUtilsMessengerCallbackDataEXT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrDebugUtilsMessengerCallbackDataEXT.NEXT, value); }
     /** Unsafe version of {@link #messageId(ByteBuffer) messageId}. */
     public static void nmessageId(long struct, ByteBuffer value) {
         if (CHECKS) { checkNT1(value); }
@@ -392,7 +392,6 @@ public static void nmessage(long struct, ByteBuffer value) {
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrDebugUtilsMessengerCallbackDataEXT.NEXT));
         check(memGetAddress(struct + XrDebugUtilsMessengerCallbackDataEXT.MESSAGEID));
         check(memGetAddress(struct + XrDebugUtilsMessengerCallbackDataEXT.FUNCTIONNAME));
         check(memGetAddress(struct + XrDebugUtilsMessengerCallbackDataEXT.MESSAGE));

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrDebugUtilsMessengerCreateInfoEXT.java
Patch:
@@ -312,7 +312,7 @@ public static XrDebugUtilsMessengerCreateInfoEXT.Buffer calloc(int capacity, Mem
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrDebugUtilsMessengerCreateInfoEXT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrDebugUtilsMessengerCreateInfoEXT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrDebugUtilsMessengerCreateInfoEXT.NEXT, value); }
     /** Unsafe version of {@link #messageSeverities(long) messageSeverities}. */
     public static void nmessageSeverities(long struct, long value) { UNSAFE.putLong(null, struct + XrDebugUtilsMessengerCreateInfoEXT.MESSAGESEVERITIES, value); }
     /** Unsafe version of {@link #messageTypes(long) messageTypes}. */
@@ -328,7 +328,6 @@ public static XrDebugUtilsMessengerCreateInfoEXT.Buffer calloc(int capacity, Mem
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrDebugUtilsMessengerCreateInfoEXT.NEXT));
         check(memGetAddress(struct + XrDebugUtilsMessengerCreateInfoEXT.USERCALLBACK));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataInteractionProfileChanged.java
Patch:
@@ -256,7 +256,7 @@ public static XrEventDataInteractionProfileChanged.Buffer calloc(int capacity, M
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrEventDataInteractionProfileChanged.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataInteractionProfileChanged.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataInteractionProfileChanged.NEXT, value); }
     /** Unsafe version of {@link #session(XrSession) session}. */
     public static void nsession(long struct, XrSession value) { memPutAddress(struct + XrEventDataInteractionProfileChanged.SESSION, value.address()); }
 
@@ -266,7 +266,6 @@ public static XrEventDataInteractionProfileChanged.Buffer calloc(int capacity, M
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrEventDataInteractionProfileChanged.NEXT));
         check(memGetAddress(struct + XrEventDataInteractionProfileChanged.SESSION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataReferenceSpaceChangePending.java
Patch:
@@ -304,7 +304,7 @@ public static XrEventDataReferenceSpaceChangePending.Buffer calloc(int capacity,
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrEventDataReferenceSpaceChangePending.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataReferenceSpaceChangePending.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataReferenceSpaceChangePending.NEXT, value); }
     /** Unsafe version of {@link #session(XrSession) session}. */
     public static void nsession(long struct, XrSession value) { memPutAddress(struct + XrEventDataReferenceSpaceChangePending.SESSION, value.address()); }
     /** Unsafe version of {@link #referenceSpaceType(int) referenceSpaceType}. */
@@ -322,7 +322,6 @@ public static XrEventDataReferenceSpaceChangePending.Buffer calloc(int capacity,
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrEventDataReferenceSpaceChangePending.NEXT));
         check(memGetAddress(struct + XrEventDataReferenceSpaceChangePending.SESSION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataSessionStateChanged.java
Patch:
@@ -281,7 +281,7 @@ public static XrEventDataSessionStateChanged.Buffer calloc(int capacity, MemoryS
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrEventDataSessionStateChanged.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataSessionStateChanged.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataSessionStateChanged.NEXT, value); }
     /** Unsafe version of {@link #session(XrSession) session}. */
     public static void nsession(long struct, XrSession value) { memPutAddress(struct + XrEventDataSessionStateChanged.SESSION, value.address()); }
     /** Unsafe version of {@link #state(int) state}. */
@@ -295,7 +295,6 @@ public static XrEventDataSessionStateChanged.Buffer calloc(int capacity, MemoryS
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrEventDataSessionStateChanged.NEXT));
         check(memGetAddress(struct + XrEventDataSessionStateChanged.SESSION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataVisibilityMaskChangedKHR.java
Patch:
@@ -274,7 +274,7 @@ public static XrEventDataVisibilityMaskChangedKHR.Buffer calloc(int capacity, Me
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrEventDataVisibilityMaskChangedKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataVisibilityMaskChangedKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataVisibilityMaskChangedKHR.NEXT, value); }
     /** Unsafe version of {@link #session(XrSession) session}. */
     public static void nsession(long struct, XrSession value) { memPutAddress(struct + XrEventDataVisibilityMaskChangedKHR.SESSION, value.address()); }
     /** Unsafe version of {@link #viewConfigurationType(int) viewConfigurationType}. */
@@ -288,7 +288,6 @@ public static XrEventDataVisibilityMaskChangedKHR.Buffer calloc(int capacity, Me
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrEventDataVisibilityMaskChangedKHR.NEXT));
         check(memGetAddress(struct + XrEventDataVisibilityMaskChangedKHR.SESSION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrEventDataViveTrackerConnectedHTCX.java
Patch:
@@ -255,7 +255,7 @@ public static XrEventDataViveTrackerConnectedHTCX.Buffer calloc(int capacity, Me
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrEventDataViveTrackerConnectedHTCX.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataViveTrackerConnectedHTCX.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrEventDataViveTrackerConnectedHTCX.NEXT, value); }
     /** Unsafe version of {@link #paths(XrViveTrackerPathsHTCX) paths}. */
     public static void npaths(long struct, XrViveTrackerPathsHTCX value) { memPutAddress(struct + XrEventDataViveTrackerConnectedHTCX.PATHS, value.address()); }
 
@@ -265,7 +265,6 @@ public static XrEventDataViveTrackerConnectedHTCX.Buffer calloc(int capacity, Me
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrEventDataViveTrackerConnectedHTCX.NEXT));
         check(memGetAddress(struct + XrEventDataViveTrackerConnectedHTCX.PATHS));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGeometryInstanceCreateInfoFB.java
Patch:
@@ -320,7 +320,7 @@ public static XrGeometryInstanceCreateInfoFB.Buffer calloc(int capacity, MemoryS
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGeometryInstanceCreateInfoFB.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGeometryInstanceCreateInfoFB.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGeometryInstanceCreateInfoFB.NEXT, value); }
     /** Unsafe version of {@link #layer(XrPassthroughLayerFB) layer}. */
     public static void nlayer(long struct, XrPassthroughLayerFB value) { memPutAddress(struct + XrGeometryInstanceCreateInfoFB.LAYER, value.address()); }
     /** Unsafe version of {@link #mesh(XrTriangleMeshFB) mesh}. */
@@ -338,7 +338,6 @@ public static XrGeometryInstanceCreateInfoFB.Buffer calloc(int capacity, MemoryS
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGeometryInstanceCreateInfoFB.NEXT));
         check(memGetAddress(struct + XrGeometryInstanceCreateInfoFB.LAYER));
         check(memGetAddress(struct + XrGeometryInstanceCreateInfoFB.MESH));
         check(memGetAddress(struct + XrGeometryInstanceCreateInfoFB.BASESPACE));

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGeometryInstanceTransformFB.java
Patch:
@@ -303,7 +303,7 @@ public static XrGeometryInstanceTransformFB.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGeometryInstanceTransformFB.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGeometryInstanceTransformFB.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGeometryInstanceTransformFB.NEXT, value); }
     /** Unsafe version of {@link #baseSpace(XrSpace) baseSpace}. */
     public static void nbaseSpace(long struct, XrSpace value) { memPutAddress(struct + XrGeometryInstanceTransformFB.BASESPACE, value.address()); }
     /** Unsafe version of {@link #time(long) time}. */
@@ -319,7 +319,6 @@ public static XrGeometryInstanceTransformFB.Buffer calloc(int capacity, MemorySt
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGeometryInstanceTransformFB.NEXT));
         check(memGetAddress(struct + XrGeometryInstanceTransformFB.BASESPACE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingEGLMNDX.java
Patch:
@@ -301,7 +301,7 @@ public static XrGraphicsBindingEGLMNDX.Buffer calloc(int capacity, MemoryStack s
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGraphicsBindingEGLMNDX.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingEGLMNDX.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingEGLMNDX.NEXT, value); }
     /** Unsafe version of {@link #getProcAddress(long) getProcAddress}. */
     public static void ngetProcAddress(long struct, long value) { memPutAddress(struct + XrGraphicsBindingEGLMNDX.GETPROCADDRESS, check(value)); }
     /** Unsafe version of {@link #display(long) display}. */
@@ -317,7 +317,6 @@ public static XrGraphicsBindingEGLMNDX.Buffer calloc(int capacity, MemoryStack s
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGraphicsBindingEGLMNDX.NEXT));
         check(memGetAddress(struct + XrGraphicsBindingEGLMNDX.GETPROCADDRESS));
         check(memGetAddress(struct + XrGraphicsBindingEGLMNDX.DISPLAY));
         check(memGetAddress(struct + XrGraphicsBindingEGLMNDX.CONFIG));

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLWaylandKHR.java
Patch:
@@ -257,7 +257,7 @@ public static XrGraphicsBindingOpenGLWaylandKHR.Buffer calloc(int capacity, Memo
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGraphicsBindingOpenGLWaylandKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLWaylandKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLWaylandKHR.NEXT, value); }
     /** Unsafe version of {@link #display(long) display}. */
     public static void ndisplay(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLWaylandKHR.DISPLAY, check(value)); }
 
@@ -267,7 +267,6 @@ public static XrGraphicsBindingOpenGLWaylandKHR.Buffer calloc(int capacity, Memo
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGraphicsBindingOpenGLWaylandKHR.NEXT));
         check(memGetAddress(struct + XrGraphicsBindingOpenGLWaylandKHR.DISPLAY));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLWin32KHR.java
Patch:
@@ -273,7 +273,7 @@ public static XrGraphicsBindingOpenGLWin32KHR.Buffer calloc(int capacity, Memory
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGraphicsBindingOpenGLWin32KHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLWin32KHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLWin32KHR.NEXT, value); }
     /** Unsafe version of {@link #hDC(long) hDC}. */
     public static void nhDC(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLWin32KHR.HDC, check(value)); }
     /** Unsafe version of {@link #hGLRC(long) hGLRC}. */
@@ -285,7 +285,6 @@ public static XrGraphicsBindingOpenGLWin32KHR.Buffer calloc(int capacity, Memory
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGraphicsBindingOpenGLWin32KHR.NEXT));
         check(memGetAddress(struct + XrGraphicsBindingOpenGLWin32KHR.HDC));
         check(memGetAddress(struct + XrGraphicsBindingOpenGLWin32KHR.HGLRC));
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLXcbKHR.java
Patch:
@@ -326,7 +326,7 @@ public static XrGraphicsBindingOpenGLXcbKHR.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGraphicsBindingOpenGLXcbKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLXcbKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLXcbKHR.NEXT, value); }
     /** Unsafe version of {@link #connection(long) connection}. */
     public static void nconnection(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLXcbKHR.CONNECTION, check(value)); }
     /** Unsafe version of {@link #screenNumber(int) screenNumber}. */
@@ -346,7 +346,6 @@ public static XrGraphicsBindingOpenGLXcbKHR.Buffer calloc(int capacity, MemorySt
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGraphicsBindingOpenGLXcbKHR.NEXT));
         check(memGetAddress(struct + XrGraphicsBindingOpenGLXcbKHR.CONNECTION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingOpenGLXlibKHR.java
Patch:
@@ -315,7 +315,7 @@ public static XrGraphicsBindingOpenGLXlibKHR.Buffer calloc(int capacity, MemoryS
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGraphicsBindingOpenGLXlibKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLXlibKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLXlibKHR.NEXT, value); }
     /** Unsafe version of {@link #xDisplay(long) xDisplay}. */
     public static void nxDisplay(long struct, long value) { memPutAddress(struct + XrGraphicsBindingOpenGLXlibKHR.XDISPLAY, check(value)); }
     /** Unsafe version of {@link #visualid(int) visualid}. */
@@ -333,7 +333,6 @@ public static XrGraphicsBindingOpenGLXlibKHR.Buffer calloc(int capacity, MemoryS
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGraphicsBindingOpenGLXlibKHR.NEXT));
         check(memGetAddress(struct + XrGraphicsBindingOpenGLXlibKHR.XDISPLAY));
         check(memGetAddress(struct + XrGraphicsBindingOpenGLXlibKHR.GLXFBCONFIG));
         check(memGetAddress(struct + XrGraphicsBindingOpenGLXlibKHR.GLXDRAWABLE));

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsBindingVulkanKHR.java
Patch:
@@ -320,7 +320,7 @@ public static XrGraphicsBindingVulkanKHR.Buffer calloc(int capacity, MemoryStack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrGraphicsBindingVulkanKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingVulkanKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrGraphicsBindingVulkanKHR.NEXT, value); }
     /** Unsafe version of {@link #instance(VkInstance) instance}. */
     public static void ninstance(long struct, VkInstance value) { memPutAddress(struct + XrGraphicsBindingVulkanKHR.INSTANCE, value.address()); }
     /** Unsafe version of {@link #physicalDevice(VkPhysicalDevice) physicalDevice}. */
@@ -338,7 +338,6 @@ public static XrGraphicsBindingVulkanKHR.Buffer calloc(int capacity, MemoryStack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrGraphicsBindingVulkanKHR.NEXT));
         check(memGetAddress(struct + XrGraphicsBindingVulkanKHR.INSTANCE));
         check(memGetAddress(struct + XrGraphicsBindingVulkanKHR.PHYSICALDEVICE));
         check(memGetAddress(struct + XrGraphicsBindingVulkanKHR.DEVICE));

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrGraphicsRequirementsVulkan2KHR.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointLocationsEXT.java
Patch:
@@ -288,7 +288,7 @@ public static XrHandJointLocationsEXT.Buffer calloc(int capacity, MemoryStack st
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrHandJointLocationsEXT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandJointLocationsEXT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandJointLocationsEXT.NEXT, value); }
     /** Unsafe version of {@link #isActive(boolean) isActive}. */
     public static void nisActive(long struct, int value) { UNSAFE.putInt(null, struct + XrHandJointLocationsEXT.ISACTIVE, value); }
     /** Sets the specified value to the {@code jointCount} field of the specified {@code struct}. */
@@ -302,7 +302,6 @@ public static XrHandJointLocationsEXT.Buffer calloc(int capacity, MemoryStack st
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrHandJointLocationsEXT.NEXT));
         check(memGetAddress(struct + XrHandJointLocationsEXT.JOINTLOCATIONS));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointVelocitiesEXT.java
Patch:
@@ -273,7 +273,7 @@ public static XrHandJointVelocitiesEXT.Buffer calloc(int capacity, MemoryStack s
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrHandJointVelocitiesEXT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandJointVelocitiesEXT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandJointVelocitiesEXT.NEXT, value); }
     /** Sets the specified value to the {@code jointCount} field of the specified {@code struct}. */
     public static void njointCount(long struct, int value) { UNSAFE.putInt(null, struct + XrHandJointVelocitiesEXT.JOINTCOUNT, value); }
     /** Unsafe version of {@link #jointVelocities(XrHandJointVelocityEXT.Buffer) jointVelocities}. */
@@ -285,7 +285,6 @@ public static XrHandJointVelocitiesEXT.Buffer calloc(int capacity, MemoryStack s
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrHandJointVelocitiesEXT.NEXT));
         check(memGetAddress(struct + XrHandJointVelocitiesEXT.JOINTVELOCITIES));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandJointsLocateInfoEXT.java
Patch:
@@ -264,7 +264,7 @@ public static XrHandJointsLocateInfoEXT.Buffer calloc(int capacity, MemoryStack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrHandJointsLocateInfoEXT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandJointsLocateInfoEXT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandJointsLocateInfoEXT.NEXT, value); }
     /** Unsafe version of {@link #baseSpace(XrSpace) baseSpace}. */
     public static void nbaseSpace(long struct, XrSpace value) { memPutAddress(struct + XrHandJointsLocateInfoEXT.BASESPACE, value.address()); }
     /** Unsafe version of {@link #time(long) time}. */
@@ -276,7 +276,6 @@ public static XrHandJointsLocateInfoEXT.Buffer calloc(int capacity, MemoryStack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrHandJointsLocateInfoEXT.NEXT));
         check(memGetAddress(struct + XrHandJointsLocateInfoEXT.BASESPACE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandMeshMSFT.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
@@ -314,7 +313,7 @@ public static XrHandMeshMSFT.Buffer calloc(int capacity, MemoryStack stack) {
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrHandMeshMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandMeshMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandMeshMSFT.NEXT, value); }
     /** Unsafe version of {@link #isActive(boolean) isActive}. */
     public static void nisActive(long struct, int value) { UNSAFE.putInt(null, struct + XrHandMeshMSFT.ISACTIVE, value); }
     /** Unsafe version of {@link #indexBufferChanged(boolean) indexBufferChanged}. */
@@ -332,7 +331,6 @@ public static XrHandMeshMSFT.Buffer calloc(int capacity, MemoryStack stack) {
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrHandMeshMSFT.NEXT));
         XrHandMeshIndexBufferMSFT.validate(struct + XrHandMeshMSFT.INDEXBUFFER);
         XrHandMeshVertexBufferMSFT.validate(struct + XrHandMeshMSFT.VERTEXBUFFER);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHandTrackingMeshFB.java
Patch:
@@ -446,7 +446,7 @@ public static XrHandTrackingMeshFB.Buffer calloc(int capacity, MemoryStack stack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrHandTrackingMeshFB.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandTrackingMeshFB.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrHandTrackingMeshFB.NEXT, value); }
     /** Sets the specified value to the {@code jointCapacityInput} field of the specified {@code struct}. */
     public static void njointCapacityInput(long struct, int value) { UNSAFE.putInt(null, struct + XrHandTrackingMeshFB.JOINTCAPACITYINPUT, value); }
     /** Unsafe version of {@link #jointCountOutput(int) jointCountOutput}. */
@@ -484,7 +484,6 @@ public static XrHandTrackingMeshFB.Buffer calloc(int capacity, MemoryStack stack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrHandTrackingMeshFB.NEXT));
         check(memGetAddress(struct + XrHandTrackingMeshFB.JOINTBINDPOSES));
         check(memGetAddress(struct + XrHandTrackingMeshFB.JOINTRADII));
         check(memGetAddress(struct + XrHandTrackingMeshFB.JOINTPARENTS));

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHapticActionInfo.java
Patch:
@@ -267,7 +267,7 @@ public static XrHapticActionInfo.Buffer calloc(int capacity, MemoryStack stack)
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrHapticActionInfo.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrHapticActionInfo.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrHapticActionInfo.NEXT, value); }
     /** Unsafe version of {@link #action(XrAction) action}. */
     public static void naction(long struct, XrAction value) { memPutAddress(struct + XrHapticActionInfo.ACTION, value.address()); }
     /** Unsafe version of {@link #subactionPath(long) subactionPath}. */
@@ -279,7 +279,6 @@ public static XrHapticActionInfo.Buffer calloc(int capacity, MemoryStack stack)
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrHapticActionInfo.NEXT));
         check(memGetAddress(struct + XrHapticActionInfo.ACTION));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrHolographicWindowAttachmentMSFT.java
Patch:
@@ -273,7 +273,7 @@ public static XrHolographicWindowAttachmentMSFT.Buffer calloc(int capacity, Memo
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrHolographicWindowAttachmentMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrHolographicWindowAttachmentMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrHolographicWindowAttachmentMSFT.NEXT, value); }
     /** Unsafe version of {@link #holographicSpace(long) holographicSpace}. */
     public static void nholographicSpace(long struct, long value) { memPutAddress(struct + XrHolographicWindowAttachmentMSFT.HOLOGRAPHICSPACE, check(value)); }
     /** Unsafe version of {@link #coreWindow(long) coreWindow}. */
@@ -285,7 +285,6 @@ public static XrHolographicWindowAttachmentMSFT.Buffer calloc(int capacity, Memo
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrHolographicWindowAttachmentMSFT.NEXT));
         check(memGetAddress(struct + XrHolographicWindowAttachmentMSFT.HOLOGRAPHICSPACE));
         check(memGetAddress(struct + XrHolographicWindowAttachmentMSFT.COREWINDOW));
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInstanceCreateInfo.java
Patch:
@@ -313,7 +313,7 @@ public static XrInstanceCreateInfo.Buffer calloc(int capacity, MemoryStack stack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrInstanceCreateInfo.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrInstanceCreateInfo.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrInstanceCreateInfo.NEXT, value); }
     /** Unsafe version of {@link #createFlags(long) createFlags}. */
     public static void ncreateFlags(long struct, long value) { UNSAFE.putLong(null, struct + XrInstanceCreateInfo.CREATEFLAGS, value); }
     /** Unsafe version of {@link #applicationInfo(XrApplicationInfo) applicationInfo}. */
@@ -333,7 +333,6 @@ public static XrInstanceCreateInfo.Buffer calloc(int capacity, MemoryStack stack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrInstanceCreateInfo.NEXT));
         if (nenabledApiLayerCount(struct) != 0) {
             check(memGetAddress(struct + XrInstanceCreateInfo.ENABLEDAPILAYERNAMES));
         }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrInteractionProfileSuggestedBinding.java
Patch:
@@ -273,7 +273,7 @@ public static XrInteractionProfileSuggestedBinding.Buffer calloc(int capacity, M
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrInteractionProfileSuggestedBinding.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrInteractionProfileSuggestedBinding.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrInteractionProfileSuggestedBinding.NEXT, value); }
     /** Unsafe version of {@link #interactionProfile(long) interactionProfile}. */
     public static void ninteractionProfile(long struct, long value) { UNSAFE.putLong(null, struct + XrInteractionProfileSuggestedBinding.INTERACTIONPROFILE, value); }
     /** Sets the specified value to the {@code countSuggestedBindings} field of the specified {@code struct}. */
@@ -287,7 +287,6 @@ public static XrInteractionProfileSuggestedBinding.Buffer calloc(int capacity, M
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrInteractionProfileSuggestedBinding.NEXT));
         int countSuggestedBindings = ncountSuggestedBindings(struct);
         long suggestedBindings = memGetAddress(struct + XrInteractionProfileSuggestedBinding.SUGGESTEDBINDINGS);
         check(suggestedBindings);

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrNewSceneComputeInfoMSFT.java
Patch:
@@ -290,7 +290,7 @@ public static XrNewSceneComputeInfoMSFT.Buffer calloc(int capacity, MemoryStack
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrNewSceneComputeInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrNewSceneComputeInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrNewSceneComputeInfoMSFT.NEXT, value); }
     /** Sets the specified value to the {@code requestedFeatureCount} field of the specified {@code struct}. */
     public static void nrequestedFeatureCount(long struct, int value) { UNSAFE.putInt(null, struct + XrNewSceneComputeInfoMSFT.REQUESTEDFEATURECOUNT, value); }
     /** Unsafe version of {@link #requestedFeatures(IntBuffer) requestedFeatures}. */
@@ -306,7 +306,6 @@ public static XrNewSceneComputeInfoMSFT.Buffer calloc(int capacity, MemoryStack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrNewSceneComputeInfoMSFT.NEXT));
         check(memGetAddress(struct + XrNewSceneComputeInfoMSFT.REQUESTEDFEATURES));
         XrSceneBoundsMSFT.validate(struct + XrNewSceneComputeInfoMSFT.BOUNDS);
     }

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrPassthroughLayerCreateInfoFB.java
Patch:
@@ -289,7 +289,7 @@ public static XrPassthroughLayerCreateInfoFB.Buffer calloc(int capacity, MemoryS
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrPassthroughLayerCreateInfoFB.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrPassthroughLayerCreateInfoFB.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrPassthroughLayerCreateInfoFB.NEXT, value); }
     /** Unsafe version of {@link #passthrough(XrPassthroughFB) passthrough}. */
     public static void npassthrough(long struct, XrPassthroughFB value) { memPutAddress(struct + XrPassthroughLayerCreateInfoFB.PASSTHROUGH, value.address()); }
     /** Unsafe version of {@link #flags(long) flags}. */
@@ -303,7 +303,6 @@ public static XrPassthroughLayerCreateInfoFB.Buffer calloc(int capacity, MemoryS
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrPassthroughLayerCreateInfoFB.NEXT));
         check(memGetAddress(struct + XrPassthroughLayerCreateInfoFB.PASSTHROUGH));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSceneComponentsLocateInfoMSFT.java
Patch:
@@ -292,7 +292,7 @@ public static XrSceneComponentsLocateInfoMSFT.Buffer calloc(int capacity, Memory
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSceneComponentsLocateInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSceneComponentsLocateInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSceneComponentsLocateInfoMSFT.NEXT, value); }
     /** Unsafe version of {@link #baseSpace(XrSpace) baseSpace}. */
     public static void nbaseSpace(long struct, XrSpace value) { memPutAddress(struct + XrSceneComponentsLocateInfoMSFT.BASESPACE, value.address()); }
     /** Unsafe version of {@link #time(long) time}. */
@@ -308,7 +308,6 @@ public static XrSceneComponentsLocateInfoMSFT.Buffer calloc(int capacity, Memory
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSceneComponentsLocateInfoMSFT.NEXT));
         check(memGetAddress(struct + XrSceneComponentsLocateInfoMSFT.BASESPACE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationFrameEndInfoMSFT.java
Patch:
@@ -269,7 +269,7 @@ public static XrSecondaryViewConfigurationFrameEndInfoMSFT.Buffer calloc(int cap
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSecondaryViewConfigurationFrameEndInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSecondaryViewConfigurationFrameEndInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSecondaryViewConfigurationFrameEndInfoMSFT.NEXT, value); }
     /** Sets the specified value to the {@code viewConfigurationCount} field of the specified {@code struct}. */
     public static void nviewConfigurationCount(long struct, int value) { UNSAFE.putInt(null, struct + XrSecondaryViewConfigurationFrameEndInfoMSFT.VIEWCONFIGURATIONCOUNT, value); }
     /** Unsafe version of {@link #viewConfigurationLayersInfo(XrSecondaryViewConfigurationLayerInfoMSFT.Buffer) viewConfigurationLayersInfo}. */
@@ -281,7 +281,6 @@ public static XrSecondaryViewConfigurationFrameEndInfoMSFT.Buffer calloc(int cap
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSecondaryViewConfigurationFrameEndInfoMSFT.NEXT));
         int viewConfigurationCount = nviewConfigurationCount(struct);
         long viewConfigurationLayersInfo = memGetAddress(struct + XrSecondaryViewConfigurationFrameEndInfoMSFT.VIEWCONFIGURATIONLAYERSINFO);
         check(viewConfigurationLayersInfo);

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationLayerInfoMSFT.java
Patch:
@@ -299,7 +299,7 @@ public static XrSecondaryViewConfigurationLayerInfoMSFT.Buffer calloc(int capaci
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSecondaryViewConfigurationLayerInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSecondaryViewConfigurationLayerInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSecondaryViewConfigurationLayerInfoMSFT.NEXT, value); }
     /** Unsafe version of {@link #viewConfigurationType(int) viewConfigurationType}. */
     public static void nviewConfigurationType(long struct, int value) { UNSAFE.putInt(null, struct + XrSecondaryViewConfigurationLayerInfoMSFT.VIEWCONFIGURATIONTYPE, value); }
     /** Unsafe version of {@link #environmentBlendMode(int) environmentBlendMode}. */
@@ -315,7 +315,6 @@ public static XrSecondaryViewConfigurationLayerInfoMSFT.Buffer calloc(int capaci
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSecondaryViewConfigurationLayerInfoMSFT.NEXT));
         check(memGetAddress(struct + XrSecondaryViewConfigurationLayerInfoMSFT.LAYERS));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSecondaryViewConfigurationSessionBeginInfoMSFT.java
Patch:
@@ -269,7 +269,7 @@ public static XrSecondaryViewConfigurationSessionBeginInfoMSFT.Buffer calloc(int
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSecondaryViewConfigurationSessionBeginInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSecondaryViewConfigurationSessionBeginInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSecondaryViewConfigurationSessionBeginInfoMSFT.NEXT, value); }
     /** Sets the specified value to the {@code viewConfigurationCount} field of the specified {@code struct}. */
     public static void nviewConfigurationCount(long struct, int value) { UNSAFE.putInt(null, struct + XrSecondaryViewConfigurationSessionBeginInfoMSFT.VIEWCONFIGURATIONCOUNT, value); }
     /** Unsafe version of {@link #enabledViewConfigurationTypes(IntBuffer) enabledViewConfigurationTypes}. */
@@ -281,7 +281,6 @@ public static XrSecondaryViewConfigurationSessionBeginInfoMSFT.Buffer calloc(int
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSecondaryViewConfigurationSessionBeginInfoMSFT.NEXT));
         check(memGetAddress(struct + XrSecondaryViewConfigurationSessionBeginInfoMSFT.ENABLEDVIEWCONFIGURATIONTYPES));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSessionActionSetsAttachInfo.java
Patch:
@@ -260,7 +260,7 @@ public static XrSessionActionSetsAttachInfo.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSessionActionSetsAttachInfo.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSessionActionSetsAttachInfo.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSessionActionSetsAttachInfo.NEXT, value); }
     /** Sets the specified value to the {@code countActionSets} field of the specified {@code struct}. */
     public static void ncountActionSets(long struct, int value) { UNSAFE.putInt(null, struct + XrSessionActionSetsAttachInfo.COUNTACTIONSETS, value); }
     /** Unsafe version of {@link #actionSets(PointerBuffer) actionSets}. */
@@ -272,7 +272,6 @@ public static XrSessionActionSetsAttachInfo.Buffer calloc(int capacity, MemorySt
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSessionActionSetsAttachInfo.NEXT));
         check(memGetAddress(struct + XrSessionActionSetsAttachInfo.ACTIONSETS));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorCreateInfoMSFT.java
Patch:
@@ -278,7 +278,7 @@ public static XrSpatialAnchorCreateInfoMSFT.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSpatialAnchorCreateInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorCreateInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorCreateInfoMSFT.NEXT, value); }
     /** Unsafe version of {@link #space(XrSpace) space}. */
     public static void nspace(long struct, XrSpace value) { memPutAddress(struct + XrSpatialAnchorCreateInfoMSFT.SPACE, value.address()); }
     /** Unsafe version of {@link #pose(XrPosef) pose}. */
@@ -292,7 +292,6 @@ public static XrSpatialAnchorCreateInfoMSFT.Buffer calloc(int capacity, MemorySt
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSpatialAnchorCreateInfoMSFT.NEXT));
         check(memGetAddress(struct + XrSpatialAnchorCreateInfoMSFT.SPACE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.java
Patch:
@@ -270,7 +270,7 @@ public static XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.Buffer calloc(int
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.NEXT, value); }
     /** Unsafe version of {@link #spatialAnchorStore(XrSpatialAnchorStoreConnectionMSFT) spatialAnchorStore}. */
     public static void nspatialAnchorStore(long struct, XrSpatialAnchorStoreConnectionMSFT value) { memPutAddress(struct + XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.SPATIALANCHORSTORE, value.address()); }
     /** Unsafe version of {@link #spatialAnchorPersistenceName(XrSpatialAnchorPersistenceNameMSFT) spatialAnchorPersistenceName}. */
@@ -282,7 +282,6 @@ public static XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.Buffer calloc(int
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.NEXT));
         check(memGetAddress(struct + XrSpatialAnchorFromPersistedAnchorCreateInfoMSFT.SPATIALANCHORSTORE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorPersistenceInfoMSFT.java
Patch:
@@ -266,7 +266,7 @@ public static XrSpatialAnchorPersistenceInfoMSFT.Buffer calloc(int capacity, Mem
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSpatialAnchorPersistenceInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorPersistenceInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorPersistenceInfoMSFT.NEXT, value); }
     /** Unsafe version of {@link #spatialAnchorPersistenceName(XrSpatialAnchorPersistenceNameMSFT) spatialAnchorPersistenceName}. */
     public static void nspatialAnchorPersistenceName(long struct, XrSpatialAnchorPersistenceNameMSFT value) { memCopy(value.address(), struct + XrSpatialAnchorPersistenceInfoMSFT.SPATIALANCHORPERSISTENCENAME, XrSpatialAnchorPersistenceNameMSFT.SIZEOF); }
     /** Unsafe version of {@link #spatialAnchor(XrSpatialAnchorMSFT) spatialAnchor}. */
@@ -278,7 +278,6 @@ public static XrSpatialAnchorPersistenceInfoMSFT.Buffer calloc(int capacity, Mem
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSpatialAnchorPersistenceInfoMSFT.NEXT));
         check(memGetAddress(struct + XrSpatialAnchorPersistenceInfoMSFT.SPATIALANCHOR));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSpatialAnchorSpaceCreateInfoMSFT.java
Patch:
@@ -265,7 +265,7 @@ public static XrSpatialAnchorSpaceCreateInfoMSFT.Buffer calloc(int capacity, Mem
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSpatialAnchorSpaceCreateInfoMSFT.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorSpaceCreateInfoMSFT.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSpatialAnchorSpaceCreateInfoMSFT.NEXT, value); }
     /** Unsafe version of {@link #anchor(XrSpatialAnchorMSFT) anchor}. */
     public static void nanchor(long struct, XrSpatialAnchorMSFT value) { memPutAddress(struct + XrSpatialAnchorSpaceCreateInfoMSFT.ANCHOR, value.address()); }
     /** Unsafe version of {@link #poseInAnchorSpace(XrPosef) poseInAnchorSpace}. */
@@ -277,7 +277,6 @@ public static XrSpatialAnchorSpaceCreateInfoMSFT.Buffer calloc(int capacity, Mem
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSpatialAnchorSpaceCreateInfoMSFT.NEXT));
         check(memGetAddress(struct + XrSpatialAnchorSpaceCreateInfoMSFT.ANCHOR));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainImageVulkan2KHR.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrSwapchainStateFoveationFB.java
Patch:
@@ -261,7 +261,7 @@ public static XrSwapchainStateFoveationFB.Buffer calloc(int capacity, MemoryStac
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrSwapchainStateFoveationFB.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrSwapchainStateFoveationFB.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrSwapchainStateFoveationFB.NEXT, value); }
     /** Unsafe version of {@link #flags(long) flags}. */
     public static void nflags(long struct, long value) { UNSAFE.putLong(null, struct + XrSwapchainStateFoveationFB.FLAGS, value); }
     /** Unsafe version of {@link #profile(XrFoveationProfileFB) profile}. */
@@ -273,7 +273,6 @@ public static XrSwapchainStateFoveationFB.Buffer calloc(int capacity, MemoryStac
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrSwapchainStateFoveationFB.NEXT));
         check(memGetAddress(struct + XrSwapchainStateFoveationFB.PROFILE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrViewLocateInfo.java
Patch:
@@ -283,7 +283,7 @@ public static XrViewLocateInfo.Buffer calloc(int capacity, MemoryStack stack) {
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrViewLocateInfo.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrViewLocateInfo.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrViewLocateInfo.NEXT, value); }
     /** Unsafe version of {@link #viewConfigurationType(int) viewConfigurationType}. */
     public static void nviewConfigurationType(long struct, int value) { UNSAFE.putInt(null, struct + XrViewLocateInfo.VIEWCONFIGURATIONTYPE, value); }
     /** Unsafe version of {@link #displayTime(long) displayTime}. */
@@ -297,7 +297,6 @@ public static XrViewLocateInfo.Buffer calloc(int capacity, MemoryStack stack) {
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrViewLocateInfo.NEXT));
         check(memGetAddress(struct + XrViewLocateInfo.SPACE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVulkanDeviceCreateInfoKHR.java
Patch:
@@ -323,7 +323,7 @@ public static XrVulkanDeviceCreateInfoKHR.Buffer calloc(int capacity, MemoryStac
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrVulkanDeviceCreateInfoKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanDeviceCreateInfoKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanDeviceCreateInfoKHR.NEXT, value); }
     /** Unsafe version of {@link #systemId(long) systemId}. */
     public static void nsystemId(long struct, long value) { UNSAFE.putLong(null, struct + XrVulkanDeviceCreateInfoKHR.SYSTEMID, value); }
     /** Unsafe version of {@link #createFlags(long) createFlags}. */
@@ -343,7 +343,6 @@ public static XrVulkanDeviceCreateInfoKHR.Buffer calloc(int capacity, MemoryStac
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrVulkanDeviceCreateInfoKHR.NEXT));
         check(memGetAddress(struct + XrVulkanDeviceCreateInfoKHR.PFNGETINSTANCEPROCADDR));
         check(memGetAddress(struct + XrVulkanDeviceCreateInfoKHR.VULKANPHYSICALDEVICE));
         long vulkanCreateInfo = memGetAddress(struct + XrVulkanDeviceCreateInfoKHR.VULKANCREATEINFO);

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVulkanGraphicsDeviceGetInfoKHR.java
Patch:
@@ -266,7 +266,7 @@ public static XrVulkanGraphicsDeviceGetInfoKHR.Buffer calloc(int capacity, Memor
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrVulkanGraphicsDeviceGetInfoKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanGraphicsDeviceGetInfoKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanGraphicsDeviceGetInfoKHR.NEXT, value); }
     /** Unsafe version of {@link #systemId(long) systemId}. */
     public static void nsystemId(long struct, long value) { UNSAFE.putLong(null, struct + XrVulkanGraphicsDeviceGetInfoKHR.SYSTEMID, value); }
     /** Unsafe version of {@link #vulkanInstance(VkInstance) vulkanInstance}. */
@@ -278,7 +278,6 @@ public static XrVulkanGraphicsDeviceGetInfoKHR.Buffer calloc(int capacity, Memor
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrVulkanGraphicsDeviceGetInfoKHR.NEXT));
         check(memGetAddress(struct + XrVulkanGraphicsDeviceGetInfoKHR.VULKANINSTANCE));
     }
 

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVulkanInstanceCreateInfoKHR.java
Patch:
@@ -309,7 +309,7 @@ public static XrVulkanInstanceCreateInfoKHR.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrVulkanInstanceCreateInfoKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanInstanceCreateInfoKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanInstanceCreateInfoKHR.NEXT, value); }
     /** Unsafe version of {@link #systemId(long) systemId}. */
     public static void nsystemId(long struct, long value) { UNSAFE.putLong(null, struct + XrVulkanInstanceCreateInfoKHR.SYSTEMID, value); }
     /** Unsafe version of {@link #createFlags(long) createFlags}. */
@@ -327,7 +327,6 @@ public static XrVulkanInstanceCreateInfoKHR.Buffer calloc(int capacity, MemorySt
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrVulkanInstanceCreateInfoKHR.NEXT));
         check(memGetAddress(struct + XrVulkanInstanceCreateInfoKHR.PFNGETINSTANCEPROCADDR));
         long vulkanCreateInfo = memGetAddress(struct + XrVulkanInstanceCreateInfoKHR.VULKANCREATEINFO);
         check(vulkanCreateInfo);

File: modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/XrVulkanSwapchainFormatListCreateInfoKHR.java
Patch:
@@ -263,7 +263,7 @@ public static XrVulkanSwapchainFormatListCreateInfoKHR.Buffer calloc(int capacit
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XrVulkanSwapchainFormatListCreateInfoKHR.TYPE, value); }
     /** Unsafe version of {@link #next(long) next}. */
-    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanSwapchainFormatListCreateInfoKHR.NEXT, check(value)); }
+    public static void nnext(long struct, long value) { memPutAddress(struct + XrVulkanSwapchainFormatListCreateInfoKHR.NEXT, value); }
     /** Sets the specified value to the {@code viewFormatCount} field of the specified {@code struct}. */
     public static void nviewFormatCount(long struct, int value) { UNSAFE.putInt(null, struct + XrVulkanSwapchainFormatListCreateInfoKHR.VIEWFORMATCOUNT, value); }
     /** Unsafe version of {@link #viewFormats(IntBuffer) viewFormats}. */
@@ -275,7 +275,6 @@ public static XrVulkanSwapchainFormatListCreateInfoKHR.Buffer calloc(int capacit
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
-        check(memGetAddress(struct + XrVulkanSwapchainFormatListCreateInfoKHR.NEXT));
         if (nviewFormatCount(struct) != 0) {
             check(memGetAddress(struct + XrVulkanSwapchainFormatListCreateInfoKHR.VIEWFORMATS));
         }

File: modules/lwjgl/openxr/src/main/java/org/lwjgl/openxr/XR.java
Patch:
@@ -47,7 +47,7 @@ public static void create() {
         SharedLibrary XR;
         switch (Platform.get()) {
             case LINUX:
-                XR = Library.loadNative(XR.class, "org.lwjgl.openxr", Configuration.OPENXR_LIBRARY_NAME, "openxr_loader");
+                XR = Library.loadNative(XR.class, "org.lwjgl.openxr", Configuration.OPENXR_LIBRARY_NAME, "libopenxr_loader.so.1", "openxr_loader");
                 break;
             case WINDOWS:
                 XR = Library.loadNative(XR.class, "org.lwjgl.openxr", Configuration.OPENXR_LIBRARY_NAME, "openxr-loader");

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/SharedLibraryUtil.java
Patch:
@@ -25,7 +25,7 @@ public static String getLibraryPath(long pLib) {
                     return null;
                 }
                 if (len < maxLen) {
-                    return memUTF8(buffer, len);
+                    return memUTF8(buffer, len - 1); // drop the null-terminator
                 }
                 buffer = memRealloc(buffer, maxLen = maxLen * 3 / 2);
             }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/FCNTL.java
Patch:
@@ -550,7 +550,7 @@ public class FCNTL {
      * <li>{@link #LOCK_MAND LOCK_MAND} - This is a mandatory flock...</li>
      * <li>{@link #LOCK_READ LOCK_READ} - which allows concurrent read operations</li>
      * <li>{@link #LOCK_WRITE LOCK_WRITE} - which allows concurrent write operations</li>
-     * <li>{@link #LOCK_RW LOCK_RW} - which allows concurrent read & writes ops</li>
+     * <li>{@link #LOCK_RW LOCK_RW} - which allows concurrent read &amp; writes ops</li>
      * </ul>
      */
     public static final int

File: modules/samples/src/test/java/org/lwjgl/demo/system/linux/liburing/BenchBase.java
Patch:
@@ -4,8 +4,6 @@
  */
 package org.lwjgl.demo.system.linux.liburing;
 
-import org.lwjgl.system.libc.*;
-
 import java.io.*;
 import java.nio.*;
 import java.nio.channels.*;

File: modules/samples/src/test/java/org/lwjgl/demo/system/linux/liburing/HelloLibURing.java
Patch:
@@ -6,6 +6,7 @@
 
 import org.lwjgl.*;
 import org.lwjgl.system.*;
+import org.lwjgl.system.linux.*;
 import org.lwjgl.system.linux.liburing.*;
 
 import java.io.*;

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWVulkan.java
Patch:
@@ -279,7 +279,6 @@ public static int nglfwCreateWindowSurface(long instance, long window, long allo
         long __functionAddress = Functions.CreateWindowSurface;
         if (CHECKS) {
             check(window);
-            if (allocator != NULL) { VkAllocationCallbacks.validate(allocator); }
         }
         return invokePPPPI(instance, window, allocator, surface, __functionAddress);
     }
@@ -337,7 +336,6 @@ public static int glfwCreateWindowSurface(VkInstance instance, @NativeType("GLFW
         if (CHECKS) {
             check(window);
             check(surface, 1);
-            if (allocator != null) { VkAllocationCallbacks.validate(allocator.address()); }
         }
         return invokePPPPI(instance.address(), window, memAddressSafe(allocator), surface, __functionAddress);
     }

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -3306,7 +3306,6 @@ public static void vmaDestroyImage(@NativeType("VmaAllocator") long allocator, @
     public static int vmaCreateVirtualBlock(@NativeType("VmaVirtualBlockCreateInfo const *") VmaVirtualBlockCreateInfo pCreateInfo, @NativeType("VmaVirtualBlock *") PointerBuffer pVirtualBlock) {
         if (CHECKS) {
             check(pVirtualBlock, 1);
-            VmaVirtualBlockCreateInfo.validate(pCreateInfo.address());
         }
         return nvmaCreateVirtualBlock(pCreateInfo.address(), memAddress(pVirtualBlock));
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDebugReport.java
Patch:
@@ -285,7 +285,6 @@ public static int nvkCreateDebugReportCallbackEXT(VkInstance instance, long pCre
         if (CHECKS) {
             check(__functionAddress);
             VkDebugReportCallbackCreateInfoEXT.validate(pCreateInfo);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(instance.address(), pCreateInfo, pAllocator, pCallback, __functionAddress);
     }
@@ -352,7 +351,6 @@ public static void nvkDestroyDebugReportCallbackEXT(VkInstance instance, long ca
         long __functionAddress = instance.getCapabilities().vkDestroyDebugReportCallbackEXT;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(instance.address(), callback, pAllocator, __functionAddress);
     }
@@ -542,7 +540,6 @@ public static int vkCreateDebugReportCallbackEXT(VkInstance instance, @NativeTyp
             check(__functionAddress);
             check(pCallback, 1);
             VkDebugReportCallbackCreateInfoEXT.validate(pCreateInfo.address());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(instance.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pCallback, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDebugUtils.java
Patch:
@@ -818,7 +818,6 @@ public static int nvkCreateDebugUtilsMessengerEXT(VkInstance instance, long pCre
         if (CHECKS) {
             check(__functionAddress);
             VkDebugUtilsMessengerCreateInfoEXT.validate(pCreateInfo);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(instance.address(), pCreateInfo, pAllocator, pMessenger, __functionAddress);
     }
@@ -885,7 +884,6 @@ public static void nvkDestroyDebugUtilsMessengerEXT(VkInstance instance, long me
         long __functionAddress = instance.getCapabilities().vkDestroyDebugUtilsMessengerEXT;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(instance.address(), messenger, pAllocator, __functionAddress);
     }
@@ -1006,7 +1004,6 @@ public static int vkCreateDebugUtilsMessengerEXT(VkInstance instance, @NativeTyp
             check(__functionAddress);
             check(pMessenger, 1);
             VkDebugUtilsMessengerCreateInfoEXT.validate(pCreateInfo.address());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(instance.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pMessenger, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTHeadlessSurface.java
Patch:
@@ -79,7 +79,6 @@ public static int nvkCreateHeadlessSurfaceEXT(VkInstance instance, long pCreateI
         long __functionAddress = instance.getCapabilities().vkCreateHeadlessSurfaceEXT;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(instance.address(), pCreateInfo, pAllocator, pSurface, __functionAddress);
     }
@@ -145,7 +144,6 @@ public static int vkCreateHeadlessSurfaceEXT(VkInstance instance, @NativeType("V
         if (CHECKS) {
             check(__functionAddress);
             check(pSurface, 1);
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(instance.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pSurface, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPrivateData.java
Patch:
@@ -99,7 +99,6 @@ public static int nvkCreatePrivateDataSlotEXT(VkDevice device, long pCreateInfo,
         long __functionAddress = device.getCapabilities().vkCreatePrivateDataSlotEXT;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pPrivateDataSlot, __functionAddress);
     }
@@ -170,7 +169,6 @@ public static void nvkDestroyPrivateDataSlotEXT(VkDevice device, long privateDat
         long __functionAddress = device.getCapabilities().vkDestroyPrivateDataSlotEXT;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(device.address(), privateDataSlot, pAllocator, __functionAddress);
     }
@@ -352,7 +350,6 @@ public static int vkCreatePrivateDataSlotEXT(VkDevice device, @NativeType("VkPri
         if (CHECKS) {
             check(__functionAddress);
             check(pPrivateDataSlot, 1);
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pPrivateDataSlot, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTValidationCache.java
Patch:
@@ -109,7 +109,6 @@ public static int nvkCreateValidationCacheEXT(VkDevice device, long pCreateInfo,
         if (CHECKS) {
             check(__functionAddress);
             VkValidationCacheCreateInfoEXT.validate(pCreateInfo);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pValidationCache, __functionAddress);
     }
@@ -188,7 +187,6 @@ public static void nvkDestroyValidationCacheEXT(VkDevice device, long validation
         long __functionAddress = device.getCapabilities().vkDestroyValidationCacheEXT;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(device.address(), validationCache, pAllocator, __functionAddress);
     }
@@ -425,7 +423,6 @@ public static int vkCreateValidationCacheEXT(VkDevice device, @NativeType("VkVal
             check(__functionAddress);
             check(pValidationCache, 1);
             VkValidationCacheCreateInfoEXT.validate(pCreateInfo.address());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pValidationCache, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRAccelerationStructure.java
Patch:
@@ -421,7 +421,6 @@ public static int nvkCreateAccelerationStructureKHR(VkDevice device, long pCreat
         long __functionAddress = device.getCapabilities().vkCreateAccelerationStructureKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pAccelerationStructure, __functionAddress);
     }
@@ -503,7 +502,6 @@ public static void nvkDestroyAccelerationStructureKHR(VkDevice device, long acce
         long __functionAddress = device.getCapabilities().vkDestroyAccelerationStructureKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(device.address(), accelerationStructure, pAllocator, __functionAddress);
     }
@@ -1891,7 +1889,6 @@ public static int vkCreateAccelerationStructureKHR(VkDevice device, @NativeType(
         if (CHECKS) {
             check(__functionAddress);
             check(pAccelerationStructure, 1);
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pAccelerationStructure, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRCreateRenderpass2.java
Patch:
@@ -120,7 +120,6 @@ public static int nvkCreateRenderPass2KHR(VkDevice device, long pCreateInfo, lon
         if (CHECKS) {
             check(__functionAddress);
             VkRenderPassCreateInfo2.validate(pCreateInfo);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pRenderPass, __functionAddress);
     }
@@ -214,7 +213,6 @@ public static int vkCreateRenderPass2KHR(VkDevice device, @NativeType("VkRenderP
             check(__functionAddress);
             check(pRenderPass, 1);
             VkRenderPassCreateInfo2.validate(pCreateInfo.address());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pRenderPass, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDeferredHostOperations.java
Patch:
@@ -210,7 +210,6 @@ public static int nvkCreateDeferredOperationKHR(VkDevice device, long pAllocator
         long __functionAddress = device.getCapabilities().vkCreateDeferredOperationKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPI(device.address(), pAllocator, pDeferredOperation, __functionAddress);
     }
@@ -272,7 +271,6 @@ public static void nvkDestroyDeferredOperationKHR(VkDevice device, long operatio
         long __functionAddress = device.getCapabilities().vkDestroyDeferredOperationKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(device.address(), operation, pAllocator, __functionAddress);
     }
@@ -504,7 +502,6 @@ public static int vkCreateDeferredOperationKHR(VkDevice device, @Nullable @Nativ
         if (CHECKS) {
             check(__functionAddress);
             check(pDeferredOperation, 1);
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPI(device.address(), memAddressSafe(pAllocator), pDeferredOperation, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDisplaySwapchain.java
Patch:
@@ -92,7 +92,6 @@ public static int nvkCreateSharedSwapchainsKHR(VkDevice device, int swapchainCou
         long __functionAddress = device.getCapabilities().vkCreateSharedSwapchainsKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), swapchainCount, pCreateInfos, pAllocator, pSwapchains, __functionAddress);
     }
@@ -176,7 +175,6 @@ public static int vkCreateSharedSwapchainsKHR(VkDevice device, @NativeType("VkSw
         if (CHECKS) {
             check(__functionAddress);
             check(pSwapchains, pCreateInfos.remaining());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfos.remaining(), pCreateInfos.address(), memAddressSafe(pAllocator), pSwapchains, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPushDescriptor.java
Patch:
@@ -271,7 +271,6 @@ public static void vkCmdPushDescriptorSetWithTemplateKHR(VkCommandBuffer command
         long __functionAddress = commandBuffer.getCapabilities().vkCmdPushDescriptorSetWithTemplateKHR;
         if (CHECKS) {
             check(__functionAddress);
-            check(pData);
         }
         callPJJPV(commandBuffer.address(), descriptorUpdateTemplate, layout, set, pData, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRRayTracingPipeline.java
Patch:
@@ -441,7 +441,6 @@ public static int nvkCreateRayTracingPipelinesKHR(VkDevice device, long deferred
         if (CHECKS) {
             check(__functionAddress);
             Struct.validate(pCreateInfos, createInfoCount, VkRayTracingPipelineCreateInfoKHR.SIZEOF, VkRayTracingPipelineCreateInfoKHR::validate);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPJJPPPI(device.address(), deferredOperation, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines, __functionAddress);
     }
@@ -964,7 +963,6 @@ public static int vkCreateRayTracingPipelinesKHR(VkDevice device, @NativeType("V
             check(__functionAddress);
             check(pPipelines, pCreateInfos.remaining());
             Struct.validate(pCreateInfos.address(), pCreateInfos.remaining(), VkRayTracingPipelineCreateInfoKHR.SIZEOF, VkRayTracingPipelineCreateInfoKHR::validate);
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPJJPPPI(device.address(), deferredOperation, pipelineCache, pCreateInfos.remaining(), pCreateInfos.address(), memAddressSafe(pAllocator), pPipelines, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSamplerYcbcrConversion.java
Patch:
@@ -304,7 +304,6 @@ public static int nvkCreateSamplerYcbcrConversionKHR(VkDevice device, long pCrea
         long __functionAddress = device.getCapabilities().vkCreateSamplerYcbcrConversionKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pYcbcrConversion, __functionAddress);
     }
@@ -332,7 +331,6 @@ public static void nvkDestroySamplerYcbcrConversionKHR(VkDevice device, long ycb
         long __functionAddress = device.getCapabilities().vkDestroySamplerYcbcrConversionKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(device.address(), ycbcrConversion, pAllocator, __functionAddress);
     }
@@ -355,7 +353,6 @@ public static int vkCreateSamplerYcbcrConversionKHR(VkDevice device, @NativeType
         if (CHECKS) {
             check(__functionAddress);
             check(pYcbcrConversion, 1);
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pYcbcrConversion, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSurface.java
Patch:
@@ -286,7 +286,6 @@ public static void nvkDestroySurfaceKHR(VkInstance instance, long surface, long
         long __functionAddress = instance.getCapabilities().vkDestroySurfaceKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(instance.address(), surface, pAllocator, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSwapchain.java
Patch:
@@ -190,7 +190,6 @@ public static int nvkCreateSwapchainKHR(VkDevice device, long pCreateInfo, long
         long __functionAddress = device.getCapabilities().vkCreateSwapchainKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pSwapchain, __functionAddress);
     }
@@ -285,7 +284,6 @@ public static void nvkDestroySwapchainKHR(VkDevice device, long swapchain, long
         long __functionAddress = device.getCapabilities().vkDestroySwapchainKHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(device.address(), swapchain, pAllocator, __functionAddress);
     }
@@ -940,7 +938,6 @@ public static int vkCreateSwapchainKHR(VkDevice device, @NativeType("VkSwapchain
         if (CHECKS) {
             check(__functionAddress);
             check(pSwapchain, 1);
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pSwapchain, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRWin32Surface.java
Patch:
@@ -92,7 +92,6 @@ public static int nvkCreateWin32SurfaceKHR(VkInstance instance, long pCreateInfo
         if (CHECKS) {
             check(__functionAddress);
             VkWin32SurfaceCreateInfoKHR.validate(pCreateInfo);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(instance.address(), pCreateInfo, pAllocator, pSurface, __functionAddress);
     }
@@ -201,7 +200,6 @@ public static int vkCreateWin32SurfaceKHR(VkInstance instance, @NativeType("VkWi
             check(__functionAddress);
             check(pSurface, 1);
             VkWin32SurfaceCreateInfoKHR.validate(pCreateInfo.address());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(instance.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pSurface, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDeviceDiagnosticCheckpoints.java
Patch:
@@ -126,7 +126,6 @@ public static void vkCmdSetCheckpointNV(VkCommandBuffer commandBuffer, @NativeTy
         long __functionAddress = commandBuffer.getCapabilities().vkCmdSetCheckpointNV;
         if (CHECKS) {
             check(__functionAddress);
-            check(pCheckpointMarker);
         }
         callPPV(commandBuffer.address(), pCheckpointMarker, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDeviceGeneratedCommands.java
Patch:
@@ -565,7 +565,6 @@ public static int nvkCreateIndirectCommandsLayoutNV(VkDevice device, long pCreat
         if (CHECKS) {
             check(__functionAddress);
             VkIndirectCommandsLayoutCreateInfoNV.validate(pCreateInfo);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pIndirectCommandsLayout, __functionAddress);
     }
@@ -637,7 +636,6 @@ public static void nvkDestroyIndirectCommandsLayoutNV(VkDevice device, long indi
         long __functionAddress = device.getCapabilities().vkDestroyIndirectCommandsLayoutNV;
         if (CHECKS) {
             check(__functionAddress);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         callPJPV(device.address(), indirectCommandsLayout, pAllocator, __functionAddress);
     }
@@ -699,7 +697,6 @@ public static int vkCreateIndirectCommandsLayoutNV(VkDevice device, @NativeType(
             check(__functionAddress);
             check(pIndirectCommandsLayout, 1);
             VkIndirectCommandsLayoutCreateInfoNV.validate(pCreateInfo.address());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pIndirectCommandsLayout, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK12.java
Patch:
@@ -971,7 +971,6 @@ public static int nvkCreateRenderPass2(VkDevice device, long pCreateInfo, long p
         if (CHECKS) {
             check(__functionAddress);
             VkRenderPassCreateInfo2.validate(pCreateInfo);
-            if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pRenderPass, __functionAddress);
     }
@@ -1792,7 +1791,6 @@ public static int vkCreateRenderPass2(VkDevice device, @NativeType("VkRenderPass
             check(__functionAddress);
             check(pRenderPass, 1);
             VkRenderPassCreateInfo2.validate(pCreateInfo.address());
-            if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pRenderPass, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceOrHostAddressConstKHR.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
@@ -216,7 +215,7 @@ public static VkDeviceOrHostAddressConstKHR.Buffer calloc(int capacity, MemorySt
     /** Unsafe version of {@link #deviceAddress(long) deviceAddress}. */
     public static void ndeviceAddress(long struct, long value) { UNSAFE.putLong(null, struct + VkDeviceOrHostAddressConstKHR.DEVICEADDRESS, value); }
     /** Unsafe version of {@link #hostAddress(long) hostAddress}. */
-    public static void nhostAddress(long struct, long value) { memPutAddress(struct + VkDeviceOrHostAddressConstKHR.HOSTADDRESS, check(value)); }
+    public static void nhostAddress(long struct, long value) { memPutAddress(struct + VkDeviceOrHostAddressConstKHR.HOSTADDRESS, value); }
 
     // -----------------------------------
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceOrHostAddressKHR.java
Patch:
@@ -12,7 +12,6 @@
 import org.lwjgl.*;
 import org.lwjgl.system.*;
 
-import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
@@ -216,7 +215,7 @@ public static VkDeviceOrHostAddressKHR.Buffer calloc(int capacity, MemoryStack s
     /** Unsafe version of {@link #deviceAddress(long) deviceAddress}. */
     public static void ndeviceAddress(long struct, long value) { UNSAFE.putLong(null, struct + VkDeviceOrHostAddressKHR.DEVICEADDRESS, value); }
     /** Unsafe version of {@link #hostAddress(long) hostAddress}. */
-    public static void nhostAddress(long struct, long value) { memPutAddress(struct + VkDeviceOrHostAddressKHR.HOSTADDRESS, check(value)); }
+    public static void nhostAddress(long struct, long value) { memPutAddress(struct + VkDeviceOrHostAddressKHR.HOSTADDRESS, value); }
 
     // -----------------------------------
 

File: modules/lwjgl/opengles/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -173,15 +173,15 @@ public static void create(FunctionProvider functionProvider) {
         }
 
         GLES.functionProvider = functionProvider;
-        ThreadLocalUtil.setFunctionMissingAddresses(GLESCapabilities.ADDRESS_BUFFER_SIZE, 3);
+        ThreadLocalUtil.setFunctionMissingAddresses(GLESCapabilities.ADDRESS_BUFFER_SIZE);
     }
     /** Unloads the OpenGL ES native library. */
     public static void destroy() {
         if (functionProvider == null) {
             return;
         }
 
-        ThreadLocalUtil.setFunctionMissingAddresses(0, 3);
+        ThreadLocalUtil.setFunctionMissingAddresses(0);
 
         if (functionProvider instanceof NativeResource) {
             ((NativeResource)functionProvider).free();
@@ -203,7 +203,7 @@ public static FunctionProvider getFunctionProvider() {
      */
     public static void setCapabilities(@Nullable GLESCapabilities caps) {
         capabilitiesTLS.set(caps);
-        ThreadLocalUtil.setEnv(caps == null ? NULL : memAddress(caps.addresses), 3);
+        ThreadLocalUtil.setCapabilities(caps == null ? NULL : memAddress(caps.addresses));
         icd.set(caps);
     }
 

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -3376,7 +3376,6 @@ public static int vmaVirtualAllocate(@NativeType("VmaVirtualBlock") long virtual
         if (CHECKS) {
             check(virtualBlock);
             check(pOffset, 1);
-            VmaVirtualAllocationCreateInfo.validate(pCreateInfo.address());
         }
         return nvmaVirtualAllocate(virtualBlock, pCreateInfo.address(), memAddress(pOffset));
     }

File: modules/lwjgl/libdivide/src/test/java/org/lwjgl/util/libdivide/LibDivideTest.java
Patch:
@@ -244,7 +244,7 @@ private static <T extends Struct> void test16(
                 short d;
                 do {
                     d = (short)rand.nextInt();
-                } while (skipOne && d == 1);
+                } while (d == 0 || (skipOne && d == 1));
 
                 test16(magic, genRef, gen, d);
                 for (int j = Short.MIN_VALUE; j <= Short.MAX_VALUE; j++) { // test all
@@ -323,7 +323,7 @@ private static <T extends Struct> void test32(
                 int d;
                 do {
                     d = rand.nextInt();
-                } while (skipOne && d == 1);
+                } while (d == 0 || (skipOne && d == 1));
 
                 test32(magic, genRef, gen, d);
                 for (int j = 0; j < RANDOM_NUMERS; j++) {
@@ -402,7 +402,7 @@ private static <T extends Struct> void test64(
                 long d;
                 do {
                     d = rand.nextLong();
-                } while (skipOne && d == 1L);
+                } while (d == 0L || (skipOne && d == 1L));
 
                 test64(magic, genRef, gen, d);
                 for (int j = 0; j < RANDOM_NUMERS; j++) {

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUIPCEventHandle.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.cuda.CU41.*;
+import static org.lwjgl.cuda.CU.*;
 
 /**
  * <h3>Layout</h3>

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CUIPCMemHandle.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.MemoryStack.*;
 
-import static org.lwjgl.cuda.CU41.*;
+import static org.lwjgl.cuda.CU.*;
 
 /**
  * <h3>Layout</h3>

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/jni/JNINativeInterface.java
Patch:
@@ -989,7 +989,7 @@ public static void SetDoubleArrayRegion(@NativeType("jdoubleArray") double[] arr
     @NativeType("jint")
     public static int RegisterNatives(@NativeType("jclass") Class<?> targetClass, @NativeType("JNINativeMethod const *") JNINativeMethod.Buffer methods) {
         if (CHECKS) {
-            JNINativeMethod.validate(methods.address(), methods.remaining());
+            Struct.validate(methods.address(), methods.remaining(), JNINativeMethod.SIZEOF, JNINativeMethod::validate);
         }
         return nRegisterNatives(targetClass, methods.address(), methods.remaining());
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/ObjCRuntime.java
Patch:
@@ -1559,7 +1559,7 @@ public static boolean nclass_addProperty(long cls, long name, long attributes, i
         long __functionAddress = Functions.class_addProperty;
         if (CHECKS) {
             check(cls);
-            ObjCPropertyAttribute.validate(attributes, attributeCount);
+            Struct.validate(attributes, attributeCount, ObjCPropertyAttribute.SIZEOF, ObjCPropertyAttribute::validate);
         }
         return invokePPPZ(cls, name, attributes, attributeCount, __functionAddress);
     }
@@ -1613,7 +1613,7 @@ public static void nclass_replaceProperty(long cls, long name, long attributes,
         long __functionAddress = Functions.class_replaceProperty;
         if (CHECKS) {
             check(cls);
-            ObjCPropertyAttribute.validate(attributes, attributeCount);
+            Struct.validate(attributes, attributeCount, ObjCPropertyAttribute.SIZEOF, ObjCPropertyAttribute::validate);
         }
         invokePPPV(cls, name, attributes, attributeCount, __functionAddress);
     }
@@ -2892,7 +2892,7 @@ public static void nprotocol_addProperty(long proto, long name, long attributes,
         long __functionAddress = Functions.protocol_addProperty;
         if (CHECKS) {
             check(proto);
-            ObjCPropertyAttribute.validate(attributes, attributeCount);
+            Struct.validate(attributes, attributeCount, ObjCPropertyAttribute.SIZEOF, ObjCPropertyAttribute::validate);
         }
         invokePPPV(proto, name, attributes, attributeCount, isRequiredProperty, isInstanceProperty, __functionAddress);
     }

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -2331,7 +2331,7 @@ public static void nglfwSetWindowIcon(long window, int count, long images) {
         long __functionAddress = Functions.SetWindowIcon;
         if (CHECKS) {
             check(window);
-            if (images != NULL) { GLFWImage.validate(images, count); }
+            if (images != NULL) { Struct.validate(images, count, GLFWImage.SIZEOF, GLFWImage::validate); }
         }
         invokePPV(window, count, images, __functionAddress);
     }

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshOptimizer.java
Patch:
@@ -377,7 +377,7 @@ public static long meshopt_generateVertexRemapMulti(@NativeType("unsigned int *"
         long vertex_count = destination.remaining();
         if (CHECKS) {
             checkSafe(indices, index_count);
-            MeshoptStream.validate(streams.address(), streams.remaining());
+            Struct.validate(streams.address(), streams.remaining(), MeshoptStream.SIZEOF, MeshoptStream::validate);
         }
         return nmeshopt_generateVertexRemapMulti(memAddress(destination), memAddressSafe(indices), index_count, vertex_count, streams.address(), streams.remaining());
     }
@@ -461,7 +461,7 @@ public static void meshopt_generateShadowIndexBuffer(@NativeType("unsigned int *
     public static void meshopt_generateShadowIndexBufferMulti(@NativeType("unsigned int *") IntBuffer destination, @NativeType("unsigned int const *") IntBuffer indices, @NativeType("size_t") long vertex_count, @NativeType("struct meshopt_Stream const *") MeshoptStream.Buffer streams) {
         if (CHECKS) {
             check(indices, destination.remaining());
-            MeshoptStream.validate(streams.address(), streams.remaining());
+            Struct.validate(streams.address(), streams.remaining(), MeshoptStream.SIZEOF, MeshoptStream::validate);
         }
         nmeshopt_generateShadowIndexBufferMulti(memAddress(destination), memAddress(indices), destination.remaining(), vertex_count, streams.address(), streams.remaining());
     }

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRApplications.java
Patch:
@@ -227,7 +227,7 @@ public static int nVRApplications_LaunchTemplateApplication(long pchTemplateAppK
         long __functionAddress = OpenVR.VRApplications.LaunchTemplateApplication;
         if (CHECKS) {
             check(__functionAddress);
-            AppOverrideKeys.validate(pKeys, unKeys);
+            Struct.validate(pKeys, unKeys, AppOverrideKeys.SIZEOF, AppOverrideKeys::validate);
         }
         return callPPPI(pchTemplateAppKey, pchNewAppKey, pKeys, unKeys, __functionAddress);
     }

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRCompositor.java
Patch:
@@ -333,7 +333,7 @@ public static int nVRCompositor_SetSkyboxOverride(long pTextures, int unTextureC
         long __functionAddress = OpenVR.VRCompositor.SetSkyboxOverride;
         if (CHECKS) {
             check(__functionAddress);
-            Texture.validate(pTextures, unTextureCount);
+            Struct.validate(pTextures, unTextureCount, Texture.SIZEOF, Texture::validate);
         }
         return callPI(pTextures, unTextureCount, __functionAddress);
     }

File: modules/lwjgl/stb/src/generated/java/org/lwjgl/stb/STBTruetype.java
Patch:
@@ -558,7 +558,7 @@ public static boolean stbtt_PackFontRange(@NativeType("stbtt_pack_context *") ST
     @NativeType("int")
     public static boolean stbtt_PackFontRanges(@NativeType("stbtt_pack_context *") STBTTPackContext spc, @NativeType("unsigned char const *") ByteBuffer fontdata, int font_index, @NativeType("stbtt_pack_range *") STBTTPackRange.Buffer ranges) {
         if (CHECKS) {
-            STBTTPackRange.validate(ranges.address(), ranges.remaining());
+            Struct.validate(ranges.address(), ranges.remaining(), STBTTPackRange.SIZEOF, STBTTPackRange::validate);
         }
         return nstbtt_PackFontRanges(spc.address(), memAddress(fontdata), font_index, ranges.address(), ranges.remaining()) != 0;
     }
@@ -656,7 +656,7 @@ public static void stbtt_GetPackedQuad(@NativeType("stbtt_packedchar const *") S
      */
     public static int stbtt_PackFontRangesGatherRects(@NativeType("stbtt_pack_context *") STBTTPackContext spc, @NativeType("stbtt_fontinfo *") STBTTFontinfo info, @NativeType("stbtt_pack_range *") STBTTPackRange.Buffer ranges, @NativeType("stbrp_rect *") STBRPRect.Buffer rects) {
         if (CHECKS) {
-            STBTTPackRange.validate(ranges.address(), ranges.remaining());
+            Struct.validate(ranges.address(), ranges.remaining(), STBTTPackRange.SIZEOF, STBTTPackRange::validate);
         }
         return nstbtt_PackFontRangesGatherRects(spc.address(), info.address(), ranges.address(), ranges.remaining(), rects.address());
     }
@@ -702,7 +702,7 @@ public static void stbtt_PackFontRangesPackRects(@NativeType("stbtt_pack_context
     @NativeType("int")
     public static boolean stbtt_PackFontRangesRenderIntoRects(@NativeType("stbtt_pack_context *") STBTTPackContext spc, @NativeType("stbtt_fontinfo *") STBTTFontinfo info, @NativeType("stbtt_pack_range *") STBTTPackRange.Buffer ranges, @NativeType("stbrp_rect *") STBRPRect.Buffer rects) {
         if (CHECKS) {
-            STBTTPackRange.validate(ranges.address(), ranges.remaining());
+            Struct.validate(ranges.address(), ranges.remaining(), STBTTPackRange.SIZEOF, STBTTPackRange::validate);
         }
         return nstbtt_PackFontRangesRenderIntoRects(spc.address(), info.address(), ranges.address(), ranges.remaining(), rects.address()) != 0;
     }

File: modules/lwjgl/tinyexr/src/generated/java/org/lwjgl/util/tinyexr/TinyEXR.java
Patch:
@@ -648,7 +648,7 @@ public static int SaveEXRMultipartImageToFile(@NativeType("EXRImage const *") EX
             check(exr_headers, images.remaining());
             checkNT1(filename);
             check(err, 1);
-            EXRImage.validate(images.address(), images.remaining());
+            Struct.validate(images.address(), images.remaining(), EXRImage.SIZEOF, EXRImage::validate);
         }
         return nSaveEXRMultipartImageToFile(images.address(), memAddress(exr_headers), images.remaining(), memAddress(filename), memAddress(err));
     }
@@ -666,7 +666,7 @@ public static int SaveEXRMultipartImageToFile(@NativeType("EXRImage const *") EX
         if (CHECKS) {
             check(exr_headers, images.remaining());
             check(err, 1);
-            EXRImage.validate(images.address(), images.remaining());
+            Struct.validate(images.address(), images.remaining(), EXRImage.SIZEOF, EXRImage::validate);
         }
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
@@ -698,7 +698,7 @@ public static long SaveEXRMultipartImageToMemory(@NativeType("EXRImage const *")
             check(exr_headers, images.remaining());
             check(memory, 1);
             check(err, 1);
-            EXRImage.validate(images.address(), images.remaining());
+            Struct.validate(images.address(), images.remaining(), EXRImage.SIZEOF, EXRImage::validate);
         }
         return nSaveEXRMultipartImageToMemory(images.address(), memAddress(exr_headers), images.remaining(), memAddress(memory), memAddress(err));
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRRayTracingPipeline.java
Patch:
@@ -440,7 +440,7 @@ public static int nvkCreateRayTracingPipelinesKHR(VkDevice device, long deferred
         long __functionAddress = device.getCapabilities().vkCreateRayTracingPipelinesKHR;
         if (CHECKS) {
             check(__functionAddress);
-            VkRayTracingPipelineCreateInfoKHR.validate(pCreateInfos, createInfoCount);
+            Struct.validate(pCreateInfos, createInfoCount, VkRayTracingPipelineCreateInfoKHR.SIZEOF, VkRayTracingPipelineCreateInfoKHR::validate);
             if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPJJPPPI(device.address(), deferredOperation, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines, __functionAddress);
@@ -963,7 +963,7 @@ public static int vkCreateRayTracingPipelinesKHR(VkDevice device, @NativeType("V
         if (CHECKS) {
             check(__functionAddress);
             check(pPipelines, pCreateInfos.remaining());
-            VkRayTracingPipelineCreateInfoKHR.validate(pCreateInfos.address(), pCreateInfos.remaining());
+            Struct.validate(pCreateInfos.address(), pCreateInfos.remaining(), VkRayTracingPipelineCreateInfoKHR.SIZEOF, VkRayTracingPipelineCreateInfoKHR::validate);
             if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPJJPPPI(device.address(), deferredOperation, pipelineCache, pCreateInfos.remaining(), pCreateInfos.address(), memAddressSafe(pAllocator), pPipelines, __functionAddress);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSynchronization2.java
Patch:
@@ -704,7 +704,7 @@ public static void nvkCmdWaitEvents2KHR(VkCommandBuffer commandBuffer, int event
         long __functionAddress = commandBuffer.getCapabilities().vkCmdWaitEvents2KHR;
         if (CHECKS) {
             check(__functionAddress);
-            VkDependencyInfoKHR.validate(pDependencyInfos, eventCount);
+            Struct.validate(pDependencyInfos, eventCount, VkDependencyInfoKHR.SIZEOF, VkDependencyInfoKHR::validate);
         }
         callPPPV(commandBuffer.address(), eventCount, pEvents, pDependencyInfos, __functionAddress);
     }
@@ -1009,7 +1009,7 @@ public static int nvkQueueSubmit2KHR(VkQueue queue, int submitCount, long pSubmi
         long __functionAddress = queue.getCapabilities().vkQueueSubmit2KHR;
         if (CHECKS) {
             check(__functionAddress);
-            if (pSubmits != NULL) { VkSubmitInfo2KHR.validate(pSubmits, submitCount); }
+            if (pSubmits != NULL) { Struct.validate(pSubmits, submitCount, VkSubmitInfo2KHR.SIZEOF, VkSubmitInfo2KHR::validate); }
         }
         return callPPJI(queue.address(), submitCount, pSubmits, fence, __functionAddress);
     }
@@ -1276,7 +1276,7 @@ public static void vkCmdWaitEvents2KHR(VkCommandBuffer commandBuffer, @NativeTyp
         if (CHECKS) {
             check(__functionAddress);
             check(pDependencyInfos, pEvents.length);
-            VkDependencyInfoKHR.validate(pDependencyInfos.address(), pEvents.length);
+            Struct.validate(pDependencyInfos.address(), pEvents.length, VkDependencyInfoKHR.SIZEOF, VkDependencyInfoKHR::validate);
         }
         callPPPV(commandBuffer.address(), pEvents.length, pEvents, pDependencyInfos.address(), __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVRayTracing.java
Patch:
@@ -549,7 +549,7 @@ public static int nvkBindAccelerationStructureMemoryNV(VkDevice device, int bind
         long __functionAddress = device.getCapabilities().vkBindAccelerationStructureMemoryNV;
         if (CHECKS) {
             check(__functionAddress);
-            VkBindAccelerationStructureMemoryInfoNV.validate(pBindInfos, bindInfoCount);
+            Struct.validate(pBindInfos, bindInfoCount, VkBindAccelerationStructureMemoryInfoNV.SIZEOF, VkBindAccelerationStructureMemoryInfoNV::validate);
         }
         return callPPI(device.address(), bindInfoCount, pBindInfos, __functionAddress);
     }
@@ -925,7 +925,7 @@ public static int nvkCreateRayTracingPipelinesNV(VkDevice device, long pipelineC
         long __functionAddress = device.getCapabilities().vkCreateRayTracingPipelinesNV;
         if (CHECKS) {
             check(__functionAddress);
-            VkRayTracingPipelineCreateInfoNV.validate(pCreateInfos, createInfoCount);
+            Struct.validate(pCreateInfos, createInfoCount, VkRayTracingPipelineCreateInfoNV.SIZEOF, VkRayTracingPipelineCreateInfoNV::validate);
             if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPJPPPI(device.address(), pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines, __functionAddress);
@@ -1316,7 +1316,7 @@ public static int vkCreateRayTracingPipelinesNV(VkDevice device, @NativeType("Vk
         if (CHECKS) {
             check(__functionAddress);
             check(pPipelines, pCreateInfos.remaining());
-            VkRayTracingPipelineCreateInfoNV.validate(pCreateInfos.address(), pCreateInfos.remaining());
+            Struct.validate(pCreateInfos.address(), pCreateInfos.remaining(), VkRayTracingPipelineCreateInfoNV.SIZEOF, VkRayTracingPipelineCreateInfoNV::validate);
             if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPJPPPI(device.address(), pipelineCache, pCreateInfos.remaining(), pCreateInfos.address(), memAddressSafe(pAllocator), pPipelines, __functionAddress);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVShadingRateImage.java
Patch:
@@ -263,7 +263,7 @@ public static void nvkCmdSetViewportShadingRatePaletteNV(VkCommandBuffer command
         long __functionAddress = commandBuffer.getCapabilities().vkCmdSetViewportShadingRatePaletteNV;
         if (CHECKS) {
             check(__functionAddress);
-            VkShadingRatePaletteNV.validate(pShadingRatePalettes, viewportCount);
+            Struct.validate(pShadingRatePalettes, viewportCount, VkShadingRatePaletteNV.SIZEOF, VkShadingRatePaletteNV::validate);
         }
         callPPV(commandBuffer.address(), firstViewport, viewportCount, pShadingRatePalettes, __functionAddress);
     }
@@ -342,7 +342,7 @@ public static void nvkCmdSetCoarseSampleOrderNV(VkCommandBuffer commandBuffer, i
         long __functionAddress = commandBuffer.getCapabilities().vkCmdSetCoarseSampleOrderNV;
         if (CHECKS) {
             check(__functionAddress);
-            if (pCustomSampleOrders != NULL) { VkCoarseSampleOrderCustomNV.validate(pCustomSampleOrders, customSampleOrderCount); }
+            if (pCustomSampleOrders != NULL) { Struct.validate(pCustomSampleOrders, customSampleOrderCount, VkCoarseSampleOrderCustomNV.SIZEOF, VkCoarseSampleOrderCustomNV::validate); }
         }
         callPPV(commandBuffer.address(), sampleOrderType, customSampleOrderCount, pCustomSampleOrders, __functionAddress);
     }

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EXTPlatformXCB.java
Patch:
@@ -12,7 +12,7 @@
  * 
  * <p>The native X11 resources required by this extension are xcb resources. All X11 types discussed here are defined by the header {@code xcb.h}.</p>
  * 
- * <p>Requires {@link EXTPlatformBase EXT_platform_base} and {@link  EXT_client_extensions} to query its existence without a display.</p>
+ * <p>Requires {@link EXTPlatformBase EXT_platform_base} and <a target="_blank" href="https://www.khronos.org/registry/EGL/extensions/EXT/EGL_EXT_client_extensions.txt">EXT_platform_xcb</a> to query its existence without a display.</p>
  */
 public final class EXTPlatformXCB {
 

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMOrcMaterializationUnitMaterializeFunctionI.java
Patch:
@@ -50,7 +50,7 @@ default void callback(long ret, long args) {
      * <p>Ownership of the {@code Ctx} and {@code MR} arguments passes to the callback which must adhere to the {@code LLVMOrcMaterializationResponsibilityRef}
      * contract (see comment for that type).</p>
      * 
-     * <p>If this callback is called then the {@link LLVMOrcMaterializationUnitDestroy} callback will NOT be called.</p>
+     * <p>If this callback is called then the {@link LLVMOrcMaterializationUnitDestroyFunction} callback will NOT be called.</p>
      */
     void invoke(@NativeType("void *") long Ctx, @NativeType("LLVMOrcMaterializationResponsibilityRef") long MR);
 

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -1185,8 +1185,8 @@
  * 
  * <p>It is recommended to create custom memory pools for such allocations. Define and fill in your {@code VkExportMemoryAllocateInfoKHR} structure and
  * attach it to {@link VmaPoolCreateInfo}{@code ::pMemoryAllocateNext} while creating the custom pool. Please note that the structure must remain alive and
- * unchanged for the whole lifetime of the {@link VmaPool}, not only while creating it, as no copy of the structure is made, but its original pointer is used
- * for each allocation instead.</p>
+ * unchanged for the whole lifetime of the {@code VmaPool}, not only while creating it, as no copy of the structure is made, but its original pointer is
+ * used for each allocation instead.</p>
  * 
  * <p>If you want to export all memory allocated by the library from certain memory types, also dedicated allocations or other allocations made from default
  * pools, an alternative solution is to fill in {@link VmaAllocatorCreateInfo}{@code ::pTypeExternalMemoryHandleTypes}. It should point to an array with

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/DynamicLinkLoader.java
Patch:
@@ -78,7 +78,7 @@ public static long dlopen(@Nullable @NativeType("char const *") ByteBuffer filen
     public static long dlopen(@Nullable @NativeType("char const *") CharSequence filename, int mode) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
-            stack.nASCIISafe(filename, true);
+            stack.nUTF8Safe(filename, true);
             long filenameEncoded = filename == null ? NULL : stack.getPointerAddress();
             return ndlopen(filenameEncoded, mode);
         } finally {

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/DynamicLinkLoader.java
Patch:
@@ -171,7 +171,7 @@ public static long dlopen(@Nullable @NativeType("char const *") ByteBuffer path,
     public static long dlopen(@Nullable @NativeType("char const *") CharSequence path, int mode) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
-            stack.nASCIISafe(path, true);
+            stack.nUTF8Safe(path, true);
             long pathEncoded = path == null ? NULL : stack.getPointerAddress();
             return ndlopen(pathEncoded, mode);
         } finally {

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/linux/LinuxLibrary.java
Patch:
@@ -27,7 +27,7 @@ public LinuxLibrary(String name, long handle) {
     private static long loadLibrary(String name) {
         long handle;
         try (MemoryStack stack = stackPush()) {
-            handle = dlopen(stack.ASCII(name), RTLD_LAZY | RTLD_LOCAL);
+            handle = dlopen(stack.UTF8(name), RTLD_LAZY | RTLD_LOCAL);
         }
         if (handle == NULL) {
             throw new UnsatisfiedLinkError("Failed to dynamically load library: " + name + "(error = " + dlerror() + ")");

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryBundle.java
Patch:
@@ -24,7 +24,7 @@ public MacOSXLibraryBundle(String name, long bundleRef) {
     public static MacOSXLibraryBundle getWithIdentifier(String bundleID) {
         long filePath = NULL;
         try (MemoryStack stack = stackPush()) {
-            filePath = CString2CFString(stack.ASCII(bundleID), kCFStringEncodingASCII);
+            filePath = CString2CFString(stack.UTF8(bundleID), kCFStringEncodingUTF8);
 
             long bundleRef = CFBundleGetBundleWithIdentifier(filePath);
             if (bundleRef == NULL) {

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryDL.java
Patch:
@@ -27,7 +27,7 @@ public MacOSXLibraryDL(String name, long handle) {
     private static long loadLibrary(String name) {
         long handle;
         try (MemoryStack stack = stackPush()) {
-            handle = dlopen(stack.ASCII(name), RTLD_LAZY | RTLD_LOCAL);
+            handle = dlopen(stack.UTF8(name), RTLD_LAZY | RTLD_LOCAL);
         }
         if (handle == NULL) {
             throw new UnsatisfiedLinkError("Failed to dynamically load library: " + name + "(error = " + dlerror() + ")");

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMLLJIT.java
Patch:
@@ -245,7 +245,7 @@ public static long nLLVMOrcLLJITMangleAndIntern(long J, long UnmangledName) {
      * Mangles the given string according to the {@code LLJIT} instance's {@code DataLayout}, then interns the result in the {@code SymbolStringPool} and
      * returns a reference to the pool entry.
      * 
-     * <p>Clients should call {@code LLVMOrcReleaseSymbolStringPoolEntry()} to decrement the ref-count on the pool entry once they are finished with this value.</p>
+     * <p>Clients should call {@link LLVMOrc#LLVMOrcReleaseSymbolStringPoolEntry OrcReleaseSymbolStringPoolEntry} to decrement the ref-count on the pool entry once they are finished with this value.</p>
      */
     @NativeType("LLVMOrcSymbolStringPoolEntryRef")
     public static long LLVMOrcLLJITMangleAndIntern(@NativeType("LLVMOrcLLJITRef") long J, @NativeType("char const *") ByteBuffer UnmangledName) {
@@ -259,7 +259,7 @@ public static long LLVMOrcLLJITMangleAndIntern(@NativeType("LLVMOrcLLJITRef") lo
      * Mangles the given string according to the {@code LLJIT} instance's {@code DataLayout}, then interns the result in the {@code SymbolStringPool} and
      * returns a reference to the pool entry.
      * 
-     * <p>Clients should call {@code LLVMOrcReleaseSymbolStringPoolEntry()} to decrement the ref-count on the pool entry once they are finished with this value.</p>
+     * <p>Clients should call {@link LLVMOrc#LLVMOrcReleaseSymbolStringPoolEntry OrcReleaseSymbolStringPoolEntry} to decrement the ref-count on the pool entry once they are finished with this value.</p>
      */
     @NativeType("LLVMOrcSymbolStringPoolEntryRef")
     public static long LLVMOrcLLJITMangleAndIntern(@NativeType("LLVMOrcLLJITRef") long J, @NativeType("char const *") CharSequence UnmangledName) {

File: modules/samples/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -614,6 +614,7 @@ private void render(int AA, int max_vertex_buffer, int max_element_buffer) {
                 offset += cmd.elem_count() * 2;
             }
             nk_clear(ctx);
+            nk_buffer_clear(cmds);
         }
 
         // default OpenGL state

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkAccelerationStructureCreateInfoKHR.java
Patch:
@@ -170,7 +170,7 @@ public VkAccelerationStructureCreateInfoKHR(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkAccelerationStructureCreateInfoKHR pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkAccelerationStructureMotionInfoNV} value to the {@code pNext} chain. */
-    public VkAccelerationStructureCreateInfoKHR pNext(VkAccelerationStructureMotionInfoNV value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkAccelerationStructureCreateInfoKHR pNext(VkAccelerationStructureMotionInfoNV value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #createFlags} field. */
     public VkAccelerationStructureCreateInfoKHR createFlags(@NativeType("VkAccelerationStructureCreateFlagsKHR") int value) { ncreateFlags(address(), value); return this; }
     /** Sets the specified value to the {@link #buffer} field. */
@@ -437,7 +437,7 @@ protected VkAccelerationStructureCreateInfoKHR getElementFactory() {
         /** Sets the specified value to the {@link VkAccelerationStructureCreateInfoKHR#pNext} field. */
         public VkAccelerationStructureCreateInfoKHR.Buffer pNext(@NativeType("void const *") long value) { VkAccelerationStructureCreateInfoKHR.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkAccelerationStructureMotionInfoNV} value to the {@code pNext} chain. */
-        public VkAccelerationStructureCreateInfoKHR.Buffer pNext(VkAccelerationStructureMotionInfoNV value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkAccelerationStructureCreateInfoKHR.Buffer pNext(VkAccelerationStructureMotionInfoNV value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkAccelerationStructureCreateInfoKHR#createFlags} field. */
         public VkAccelerationStructureCreateInfoKHR.Buffer createFlags(@NativeType("VkAccelerationStructureCreateFlagsKHR") int value) { VkAccelerationStructureCreateInfoKHR.ncreateFlags(address(), value); return this; }
         /** Sets the specified value to the {@link VkAccelerationStructureCreateInfoKHR#buffer} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkAccelerationStructureGeometryTrianglesDataKHR.java
Patch:
@@ -155,7 +155,7 @@ public VkAccelerationStructureGeometryTrianglesDataKHR(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkAccelerationStructureGeometryTrianglesDataKHR pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkAccelerationStructureGeometryMotionTrianglesDataNV} value to the {@code pNext} chain. */
-    public VkAccelerationStructureGeometryTrianglesDataKHR pNext(VkAccelerationStructureGeometryMotionTrianglesDataNV value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkAccelerationStructureGeometryTrianglesDataKHR pNext(VkAccelerationStructureGeometryMotionTrianglesDataNV value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #vertexFormat} field. */
     public VkAccelerationStructureGeometryTrianglesDataKHR vertexFormat(@NativeType("VkFormat") int value) { nvertexFormat(address(), value); return this; }
     /** Copies the specified {@link VkDeviceOrHostAddressConstKHR} to the {@link #vertexData} field. */
@@ -436,7 +436,7 @@ protected VkAccelerationStructureGeometryTrianglesDataKHR getElementFactory() {
         /** Sets the specified value to the {@link VkAccelerationStructureGeometryTrianglesDataKHR#pNext} field. */
         public VkAccelerationStructureGeometryTrianglesDataKHR.Buffer pNext(@NativeType("void const *") long value) { VkAccelerationStructureGeometryTrianglesDataKHR.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkAccelerationStructureGeometryMotionTrianglesDataNV} value to the {@code pNext} chain. */
-        public VkAccelerationStructureGeometryTrianglesDataKHR.Buffer pNext(VkAccelerationStructureGeometryMotionTrianglesDataNV value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkAccelerationStructureGeometryTrianglesDataKHR.Buffer pNext(VkAccelerationStructureGeometryMotionTrianglesDataNV value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkAccelerationStructureGeometryTrianglesDataKHR#vertexFormat} field. */
         public VkAccelerationStructureGeometryTrianglesDataKHR.Buffer vertexFormat(@NativeType("VkFormat") int value) { VkAccelerationStructureGeometryTrianglesDataKHR.nvertexFormat(address(), value); return this; }
         /** Copies the specified {@link VkDeviceOrHostAddressConstKHR} to the {@link VkAccelerationStructureGeometryTrianglesDataKHR#vertexData} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBufferImageCopy2KHR.java
Patch:
@@ -143,7 +143,7 @@ public VkBufferImageCopy2KHR(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkBufferImageCopy2KHR pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkCopyCommandTransformInfoQCOM} value to the {@code pNext} chain. */
-    public VkBufferImageCopy2KHR pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkBufferImageCopy2KHR pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #bufferOffset} field. */
     public VkBufferImageCopy2KHR bufferOffset(@NativeType("VkDeviceSize") long value) { nbufferOffset(address(), value); return this; }
     /** Sets the specified value to the {@link #bufferRowLength} field. */
@@ -413,7 +413,7 @@ protected VkBufferImageCopy2KHR getElementFactory() {
         /** Sets the specified value to the {@link VkBufferImageCopy2KHR#pNext} field. */
         public VkBufferImageCopy2KHR.Buffer pNext(@NativeType("void const *") long value) { VkBufferImageCopy2KHR.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkCopyCommandTransformInfoQCOM} value to the {@code pNext} chain. */
-        public VkBufferImageCopy2KHR.Buffer pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkBufferImageCopy2KHR.Buffer pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkBufferImageCopy2KHR#bufferOffset} field. */
         public VkBufferImageCopy2KHR.Buffer bufferOffset(@NativeType("VkDeviceSize") long value) { VkBufferImageCopy2KHR.nbufferOffset(address(), value); return this; }
         /** Sets the specified value to the {@link VkBufferImageCopy2KHR#bufferRowLength} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceQueueCreateInfo.java
Patch:
@@ -132,7 +132,7 @@ public VkDeviceQueueCreateInfo(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkDeviceQueueCreateInfo pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkDeviceQueueGlobalPriorityCreateInfoEXT} value to the {@code pNext} chain. */
-    public VkDeviceQueueCreateInfo pNext(VkDeviceQueueGlobalPriorityCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkDeviceQueueCreateInfo pNext(VkDeviceQueueGlobalPriorityCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkDeviceQueueCreateInfo flags(@NativeType("VkDeviceQueueCreateFlags") int value) { nflags(address(), value); return this; }
     /** Sets the specified value to the {@link #queueFamilyIndex} field. */
@@ -412,7 +412,7 @@ protected VkDeviceQueueCreateInfo getElementFactory() {
         /** Sets the specified value to the {@link VkDeviceQueueCreateInfo#pNext} field. */
         public VkDeviceQueueCreateInfo.Buffer pNext(@NativeType("void const *") long value) { VkDeviceQueueCreateInfo.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkDeviceQueueGlobalPriorityCreateInfoEXT} value to the {@code pNext} chain. */
-        public VkDeviceQueueCreateInfo.Buffer pNext(VkDeviceQueueGlobalPriorityCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkDeviceQueueCreateInfo.Buffer pNext(VkDeviceQueueGlobalPriorityCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkDeviceQueueCreateInfo#flags} field. */
         public VkDeviceQueueCreateInfo.Buffer flags(@NativeType("VkDeviceQueueCreateFlags") int value) { VkDeviceQueueCreateInfo.nflags(address(), value); return this; }
         /** Sets the specified value to the {@link VkDeviceQueueCreateInfo#queueFamilyIndex} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageBlit2KHR.java
Patch:
@@ -135,7 +135,7 @@ public VkImageBlit2KHR(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkImageBlit2KHR pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkCopyCommandTransformInfoQCOM} value to the {@code pNext} chain. */
-    public VkImageBlit2KHR pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkImageBlit2KHR pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Copies the specified {@link VkImageSubresourceLayers} to the {@link #srcSubresource} field. */
     public VkImageBlit2KHR srcSubresource(VkImageSubresourceLayers value) { nsrcSubresource(address(), value); return this; }
     /** Passes the {@link #srcSubresource} field to the specified {@link java.util.function.Consumer Consumer}. */
@@ -420,7 +420,7 @@ protected VkImageBlit2KHR getElementFactory() {
         /** Sets the specified value to the {@link VkImageBlit2KHR#pNext} field. */
         public VkImageBlit2KHR.Buffer pNext(@NativeType("void const *") long value) { VkImageBlit2KHR.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkCopyCommandTransformInfoQCOM} value to the {@code pNext} chain. */
-        public VkImageBlit2KHR.Buffer pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkImageBlit2KHR.Buffer pNext(VkCopyCommandTransformInfoQCOM value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Copies the specified {@link VkImageSubresourceLayers} to the {@link VkImageBlit2KHR#srcSubresource} field. */
         public VkImageBlit2KHR.Buffer srcSubresource(VkImageSubresourceLayers value) { VkImageBlit2KHR.nsrcSubresource(address(), value); return this; }
         /** Passes the {@link VkImageBlit2KHR#srcSubresource} field to the specified {@link java.util.function.Consumer Consumer}. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageMemoryBarrier.java
Patch:
@@ -205,7 +205,7 @@ public VkImageMemoryBarrier(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkImageMemoryBarrier pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkSampleLocationsInfoEXT} value to the {@code pNext} chain. */
-    public VkImageMemoryBarrier pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkImageMemoryBarrier pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #srcAccessMask} field. */
     public VkImageMemoryBarrier srcAccessMask(@NativeType("VkAccessFlags") int value) { nsrcAccessMask(address(), value); return this; }
     /** Sets the specified value to the {@link #dstAccessMask} field. */
@@ -513,7 +513,7 @@ protected VkImageMemoryBarrier getElementFactory() {
         /** Sets the specified value to the {@link VkImageMemoryBarrier#pNext} field. */
         public VkImageMemoryBarrier.Buffer pNext(@NativeType("void const *") long value) { VkImageMemoryBarrier.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkSampleLocationsInfoEXT} value to the {@code pNext} chain. */
-        public VkImageMemoryBarrier.Buffer pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkImageMemoryBarrier.Buffer pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkImageMemoryBarrier#srcAccessMask} field. */
         public VkImageMemoryBarrier.Buffer srcAccessMask(@NativeType("VkAccessFlags") int value) { VkImageMemoryBarrier.nsrcAccessMask(address(), value); return this; }
         /** Sets the specified value to the {@link VkImageMemoryBarrier#dstAccessMask} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageMemoryBarrier2KHR.java
Patch:
@@ -324,7 +324,7 @@ public VkImageMemoryBarrier2KHR(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkImageMemoryBarrier2KHR pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkSampleLocationsInfoEXT} value to the {@code pNext} chain. */
-    public VkImageMemoryBarrier2KHR pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkImageMemoryBarrier2KHR pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #srcStageMask} field. */
     public VkImageMemoryBarrier2KHR srcStageMask(@NativeType("VkPipelineStageFlags2KHR") long value) { nsrcStageMask(address(), value); return this; }
     /** Sets the specified value to the {@link #srcAccessMask} field. */
@@ -636,7 +636,7 @@ protected VkImageMemoryBarrier2KHR getElementFactory() {
         /** Sets the specified value to the {@link VkImageMemoryBarrier2KHR#pNext} field. */
         public VkImageMemoryBarrier2KHR.Buffer pNext(@NativeType("void const *") long value) { VkImageMemoryBarrier2KHR.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkSampleLocationsInfoEXT} value to the {@code pNext} chain. */
-        public VkImageMemoryBarrier2KHR.Buffer pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkImageMemoryBarrier2KHR.Buffer pNext(VkSampleLocationsInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkImageMemoryBarrier2KHR#srcStageMask} field. */
         public VkImageMemoryBarrier2KHR.Buffer srcStageMask(@NativeType("VkPipelineStageFlags2KHR") long value) { VkImageMemoryBarrier2KHR.nsrcStageMask(address(), value); return this; }
         /** Sets the specified value to the {@link VkImageMemoryBarrier2KHR#srcAccessMask} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceMemoryProperties2.java
Patch:
@@ -97,7 +97,7 @@ public VkPhysicalDeviceMemoryProperties2(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkPhysicalDeviceMemoryProperties2 pNext(@NativeType("void *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkPhysicalDeviceMemoryBudgetPropertiesEXT} value to the {@code pNext} chain. */
-    public VkPhysicalDeviceMemoryProperties2 pNext(VkPhysicalDeviceMemoryBudgetPropertiesEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkPhysicalDeviceMemoryProperties2 pNext(VkPhysicalDeviceMemoryBudgetPropertiesEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
 
     /** Initializes this struct with the specified values. */
     public VkPhysicalDeviceMemoryProperties2 set(
@@ -320,7 +320,7 @@ protected VkPhysicalDeviceMemoryProperties2 getElementFactory() {
         /** Sets the specified value to the {@link VkPhysicalDeviceMemoryProperties2#pNext} field. */
         public VkPhysicalDeviceMemoryProperties2.Buffer pNext(@NativeType("void *") long value) { VkPhysicalDeviceMemoryProperties2.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkPhysicalDeviceMemoryBudgetPropertiesEXT} value to the {@code pNext} chain. */
-        public VkPhysicalDeviceMemoryProperties2.Buffer pNext(VkPhysicalDeviceMemoryBudgetPropertiesEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkPhysicalDeviceMemoryProperties2.Buffer pNext(VkPhysicalDeviceMemoryBudgetPropertiesEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
 
     }
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineShaderStageCreateInfo.java
Patch:
@@ -171,7 +171,7 @@ public VkPipelineShaderStageCreateInfo(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkPipelineShaderStageCreateInfo pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT} value to the {@code pNext} chain. */
-    public VkPipelineShaderStageCreateInfo pNext(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkPipelineShaderStageCreateInfo pNext(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkPipelineShaderStageCreateInfo flags(@NativeType("VkPipelineShaderStageCreateFlags") int value) { nflags(address(), value); return this; }
     /** Sets the specified value to the {@link #stage} field. */
@@ -479,7 +479,7 @@ protected VkPipelineShaderStageCreateInfo getElementFactory() {
         /** Sets the specified value to the {@link VkPipelineShaderStageCreateInfo#pNext} field. */
         public VkPipelineShaderStageCreateInfo.Buffer pNext(@NativeType("void const *") long value) { VkPipelineShaderStageCreateInfo.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT} value to the {@code pNext} chain. */
-        public VkPipelineShaderStageCreateInfo.Buffer pNext(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkPipelineShaderStageCreateInfo.Buffer pNext(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkPipelineShaderStageCreateInfo#flags} field. */
         public VkPipelineShaderStageCreateInfo.Buffer flags(@NativeType("VkPipelineShaderStageCreateFlags") int value) { VkPipelineShaderStageCreateInfo.nflags(address(), value); return this; }
         /** Sets the specified value to the {@link VkPipelineShaderStageCreateInfo#stage} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineVertexInputStateCreateInfo.java
Patch:
@@ -142,7 +142,7 @@ public VkPipelineVertexInputStateCreateInfo(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkPipelineVertexInputStateCreateInfo pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkPipelineVertexInputDivisorStateCreateInfoEXT} value to the {@code pNext} chain. */
-    public VkPipelineVertexInputStateCreateInfo pNext(VkPipelineVertexInputDivisorStateCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkPipelineVertexInputStateCreateInfo pNext(VkPipelineVertexInputDivisorStateCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkPipelineVertexInputStateCreateInfo flags(@NativeType("VkPipelineVertexInputStateCreateFlags") int value) { nflags(address(), value); return this; }
     /** Sets the address of the specified {@link VkVertexInputBindingDescription.Buffer} to the {@link #pVertexBindingDescriptions} field. */
@@ -436,7 +436,7 @@ protected VkPipelineVertexInputStateCreateInfo getElementFactory() {
         /** Sets the specified value to the {@link VkPipelineVertexInputStateCreateInfo#pNext} field. */
         public VkPipelineVertexInputStateCreateInfo.Buffer pNext(@NativeType("void const *") long value) { VkPipelineVertexInputStateCreateInfo.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkPipelineVertexInputDivisorStateCreateInfoEXT} value to the {@code pNext} chain. */
-        public VkPipelineVertexInputStateCreateInfo.Buffer pNext(VkPipelineVertexInputDivisorStateCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkPipelineVertexInputStateCreateInfo.Buffer pNext(VkPipelineVertexInputDivisorStateCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkPipelineVertexInputStateCreateInfo#flags} field. */
         public VkPipelineVertexInputStateCreateInfo.Buffer flags(@NativeType("VkPipelineVertexInputStateCreateFlags") int value) { VkPipelineVertexInputStateCreateInfo.nflags(address(), value); return this; }
         /** Sets the address of the specified {@link VkVertexInputBindingDescription.Buffer} to the {@link VkPipelineVertexInputStateCreateInfo#pVertexBindingDescriptions} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRayTracingPipelineCreateInfoKHR.java
Patch:
@@ -239,7 +239,7 @@ public VkRayTracingPipelineCreateInfoKHR(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkRayTracingPipelineCreateInfoKHR pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkPipelineCreationFeedbackCreateInfoEXT} value to the {@code pNext} chain. */
-    public VkRayTracingPipelineCreateInfoKHR pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkRayTracingPipelineCreateInfoKHR pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkRayTracingPipelineCreateInfoKHR flags(@NativeType("VkPipelineCreateFlags") int value) { nflags(address(), value); return this; }
     /** Sets the address of the specified {@link VkPipelineShaderStageCreateInfo.Buffer} to the {@link #pStages} field. */
@@ -606,7 +606,7 @@ protected VkRayTracingPipelineCreateInfoKHR getElementFactory() {
         /** Sets the specified value to the {@link VkRayTracingPipelineCreateInfoKHR#pNext} field. */
         public VkRayTracingPipelineCreateInfoKHR.Buffer pNext(@NativeType("void const *") long value) { VkRayTracingPipelineCreateInfoKHR.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkPipelineCreationFeedbackCreateInfoEXT} value to the {@code pNext} chain. */
-        public VkRayTracingPipelineCreateInfoKHR.Buffer pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkRayTracingPipelineCreateInfoKHR.Buffer pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkRayTracingPipelineCreateInfoKHR#flags} field. */
         public VkRayTracingPipelineCreateInfoKHR.Buffer flags(@NativeType("VkPipelineCreateFlags") int value) { VkRayTracingPipelineCreateInfoKHR.nflags(address(), value); return this; }
         /** Sets the address of the specified {@link VkPipelineShaderStageCreateInfo.Buffer} to the {@link VkRayTracingPipelineCreateInfoKHR#pStages} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRayTracingPipelineCreateInfoNV.java
Patch:
@@ -192,7 +192,7 @@ public VkRayTracingPipelineCreateInfoNV(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkRayTracingPipelineCreateInfoNV pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkPipelineCreationFeedbackCreateInfoEXT} value to the {@code pNext} chain. */
-    public VkRayTracingPipelineCreateInfoNV pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkRayTracingPipelineCreateInfoNV pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkRayTracingPipelineCreateInfoNV flags(@NativeType("VkPipelineCreateFlags") int value) { nflags(address(), value); return this; }
     /** Sets the address of the specified {@link VkPipelineShaderStageCreateInfo.Buffer} to the {@link #pStages} field. */
@@ -527,7 +527,7 @@ protected VkRayTracingPipelineCreateInfoNV getElementFactory() {
         /** Sets the specified value to the {@link VkRayTracingPipelineCreateInfoNV#pNext} field. */
         public VkRayTracingPipelineCreateInfoNV.Buffer pNext(@NativeType("void const *") long value) { VkRayTracingPipelineCreateInfoNV.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkPipelineCreationFeedbackCreateInfoEXT} value to the {@code pNext} chain. */
-        public VkRayTracingPipelineCreateInfoNV.Buffer pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkRayTracingPipelineCreateInfoNV.Buffer pNext(VkPipelineCreationFeedbackCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkRayTracingPipelineCreateInfoNV#flags} field. */
         public VkRayTracingPipelineCreateInfoNV.Buffer flags(@NativeType("VkPipelineCreateFlags") int value) { VkRayTracingPipelineCreateInfoNV.nflags(address(), value); return this; }
         /** Sets the address of the specified {@link VkPipelineShaderStageCreateInfo.Buffer} to the {@link VkRayTracingPipelineCreateInfoNV#pStages} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassCreateInfo2.java
Patch:
@@ -200,7 +200,7 @@ public VkRenderPassCreateInfo2(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkRenderPassCreateInfo2 pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkRenderPassFragmentDensityMapCreateInfoEXT} value to the {@code pNext} chain. */
-    public VkRenderPassCreateInfo2 pNext(VkRenderPassFragmentDensityMapCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkRenderPassCreateInfo2 pNext(VkRenderPassFragmentDensityMapCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkRenderPassCreateInfo2 flags(@NativeType("VkRenderPassCreateFlags") int value) { nflags(address(), value); return this; }
     /** Sets the address of the specified {@link VkAttachmentDescription2.Buffer} to the {@link #pAttachments} field. */
@@ -520,7 +520,7 @@ protected VkRenderPassCreateInfo2 getElementFactory() {
         /** Sets the specified value to the {@link VkRenderPassCreateInfo2#pNext} field. */
         public VkRenderPassCreateInfo2.Buffer pNext(@NativeType("void const *") long value) { VkRenderPassCreateInfo2.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkRenderPassFragmentDensityMapCreateInfoEXT} value to the {@code pNext} chain. */
-        public VkRenderPassCreateInfo2.Buffer pNext(VkRenderPassFragmentDensityMapCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkRenderPassCreateInfo2.Buffer pNext(VkRenderPassFragmentDensityMapCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkRenderPassCreateInfo2#flags} field. */
         public VkRenderPassCreateInfo2.Buffer flags(@NativeType("VkRenderPassCreateFlags") int value) { VkRenderPassCreateInfo2.nflags(address(), value); return this; }
         /** Sets the address of the specified {@link VkAttachmentDescription2.Buffer} to the {@link VkRenderPassCreateInfo2#pAttachments} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkShaderModuleCreateInfo.java
Patch:
@@ -130,7 +130,7 @@ public VkShaderModuleCreateInfo(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkShaderModuleCreateInfo pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkShaderModuleValidationCacheCreateInfoEXT} value to the {@code pNext} chain. */
-    public VkShaderModuleCreateInfo pNext(VkShaderModuleValidationCacheCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkShaderModuleCreateInfo pNext(VkShaderModuleValidationCacheCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkShaderModuleCreateInfo flags(@NativeType("VkShaderModuleCreateFlags") int value) { nflags(address(), value); return this; }
     /** Sets the address of the specified {@link ByteBuffer} to the {@link #pCode} field. */
@@ -399,7 +399,7 @@ protected VkShaderModuleCreateInfo getElementFactory() {
         /** Sets the specified value to the {@link VkShaderModuleCreateInfo#pNext} field. */
         public VkShaderModuleCreateInfo.Buffer pNext(@NativeType("void const *") long value) { VkShaderModuleCreateInfo.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkShaderModuleValidationCacheCreateInfoEXT} value to the {@code pNext} chain. */
-        public VkShaderModuleCreateInfo.Buffer pNext(VkShaderModuleValidationCacheCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkShaderModuleCreateInfo.Buffer pNext(VkShaderModuleValidationCacheCreateInfoEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkShaderModuleCreateInfo#flags} field. */
         public VkShaderModuleCreateInfo.Buffer flags(@NativeType("VkShaderModuleCreateFlags") int value) { VkShaderModuleCreateInfo.nflags(address(), value); return this; }
         /** Sets the address of the specified {@link ByteBuffer} to the {@link VkShaderModuleCreateInfo#pCode} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSubpassDependency2.java
Patch:
@@ -185,7 +185,7 @@ public VkSubpassDependency2(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkSubpassDependency2 pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkMemoryBarrier2KHR} value to the {@code pNext} chain. */
-    public VkSubpassDependency2 pNext(VkMemoryBarrier2KHR value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkSubpassDependency2 pNext(VkMemoryBarrier2KHR value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #srcSubpass} field. */
     public VkSubpassDependency2 srcSubpass(@NativeType("uint32_t") int value) { nsrcSubpass(address(), value); return this; }
     /** Sets the specified value to the {@link #dstSubpass} field. */
@@ -474,7 +474,7 @@ protected VkSubpassDependency2 getElementFactory() {
         /** Sets the specified value to the {@link VkSubpassDependency2#pNext} field. */
         public VkSubpassDependency2.Buffer pNext(@NativeType("void const *") long value) { VkSubpassDependency2.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkMemoryBarrier2KHR} value to the {@code pNext} chain. */
-        public VkSubpassDependency2.Buffer pNext(VkMemoryBarrier2KHR value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkSubpassDependency2.Buffer pNext(VkMemoryBarrier2KHR value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkSubpassDependency2#srcSubpass} field. */
         public VkSubpassDependency2.Buffer srcSubpass(@NativeType("uint32_t") int value) { VkSubpassDependency2.nsrcSubpass(address(), value); return this; }
         /** Sets the specified value to the {@link VkSubpassDependency2#dstSubpass} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkVideoCodingControlInfoKHR.java
Patch:
@@ -99,7 +99,7 @@ public VkVideoCodingControlInfoKHR(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkVideoCodingControlInfoKHR pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkVideoEncodeRateControlInfoKHR} value to the {@code pNext} chain. */
-    public VkVideoCodingControlInfoKHR pNext(VkVideoEncodeRateControlInfoKHR value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkVideoCodingControlInfoKHR pNext(VkVideoEncodeRateControlInfoKHR value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the specified value to the {@link #flags} field. */
     public VkVideoCodingControlInfoKHR flags(@NativeType("VkVideoCodingControlFlagsKHR") int value) { nflags(address(), value); return this; }
 
@@ -311,7 +311,7 @@ protected VkVideoCodingControlInfoKHR getElementFactory() {
         /** Sets the specified value to the {@link VkVideoCodingControlInfoKHR#pNext} field. */
         public VkVideoCodingControlInfoKHR.Buffer pNext(@NativeType("void const *") long value) { VkVideoCodingControlInfoKHR.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkVideoEncodeRateControlInfoKHR} value to the {@code pNext} chain. */
-        public VkVideoCodingControlInfoKHR.Buffer pNext(VkVideoEncodeRateControlInfoKHR value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkVideoCodingControlInfoKHR.Buffer pNext(VkVideoEncodeRateControlInfoKHR value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the specified value to the {@link VkVideoCodingControlInfoKHR#flags} field. */
         public VkVideoCodingControlInfoKHR.Buffer flags(@NativeType("VkVideoCodingControlFlagsKHR") int value) { VkVideoCodingControlInfoKHR.nflags(address(), value); return this; }
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkVideoDecodeH264PictureInfoEXT.java
Patch:
@@ -112,7 +112,7 @@ public VkVideoDecodeH264PictureInfoEXT(ByteBuffer container) {
     /** Sets the specified value to the {@link #pNext} field. */
     public VkVideoDecodeH264PictureInfoEXT pNext(@NativeType("void const *") long value) { npNext(address(), value); return this; }
     /** Prepends the specified {@link VkVideoDecodeH264MvcEXT} value to the {@code pNext} chain. */
-    public VkVideoDecodeH264PictureInfoEXT pNext(VkVideoDecodeH264MvcEXT value) { return this.pNext(value.pNext(this.pNext())); }
+    public VkVideoDecodeH264PictureInfoEXT pNext(VkVideoDecodeH264MvcEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
     /** Sets the address of the specified {@link StdVideoDecodeH264PictureInfo} to the {@link #pStdPictureInfo} field. */
     public VkVideoDecodeH264PictureInfoEXT pStdPictureInfo(@NativeType("StdVideoDecodeH264PictureInfo const *") StdVideoDecodeH264PictureInfo value) { npStdPictureInfo(address(), value); return this; }
     /** Sets the address of the specified {@link IntBuffer} to the {@link #pSlicesDataOffsets} field. */
@@ -364,7 +364,7 @@ protected VkVideoDecodeH264PictureInfoEXT getElementFactory() {
         /** Sets the specified value to the {@link VkVideoDecodeH264PictureInfoEXT#pNext} field. */
         public VkVideoDecodeH264PictureInfoEXT.Buffer pNext(@NativeType("void const *") long value) { VkVideoDecodeH264PictureInfoEXT.npNext(address(), value); return this; }
         /** Prepends the specified {@link VkVideoDecodeH264MvcEXT} value to the {@code pNext} chain. */
-        public VkVideoDecodeH264PictureInfoEXT.Buffer pNext(VkVideoDecodeH264MvcEXT value) { return this.pNext(value.pNext(this.pNext())); }
+        public VkVideoDecodeH264PictureInfoEXT.Buffer pNext(VkVideoDecodeH264MvcEXT value) { return this.pNext(value.pNext(this.pNext()).address()); }
         /** Sets the address of the specified {@link StdVideoDecodeH264PictureInfo} to the {@link VkVideoDecodeH264PictureInfoEXT#pStdPictureInfo} field. */
         public VkVideoDecodeH264PictureInfoEXT.Buffer pStdPictureInfo(@NativeType("StdVideoDecodeH264PictureInfo const *") StdVideoDecodeH264PictureInfo value) { VkVideoDecodeH264PictureInfoEXT.npStdPictureInfo(address(), value); return this; }
         /** Sets the address of the specified {@link IntBuffer} to the {@link VkVideoDecodeH264PictureInfoEXT#pSlicesDataOffsets} field. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkVideoEncodeInfoKHR.java
Patch:
@@ -375,7 +375,7 @@ public static VkVideoEncodeInfoKHR.Buffer calloc(int capacity, MemoryStack stack
     /** Unsafe version of {@link #sType(int) sType}. */
     public static void nsType(long struct, int value) { UNSAFE.putInt(null, struct + VkVideoEncodeInfoKHR.STYPE, value); }
     /** Unsafe version of {@link #pNext(long) pNext}. */
-    public static void npNext(long struct, long value) { memPutAddress(struct + VkVideoEncodeInfoKHR.PNEXT, value); }
+    public static void npNext(long struct, long value) { memPutAddress(struct + VkVideoEncodeInfoKHR.PNEXT, check(value)); }
     /** Unsafe version of {@link #flags(int) flags}. */
     public static void nflags(long struct, int value) { UNSAFE.putInt(null, struct + VkVideoEncodeInfoKHR.FLAGS, value); }
     /** Unsafe version of {@link #qualityLevel(int) qualityLevel}. */
@@ -403,6 +403,7 @@ public static VkVideoEncodeInfoKHR.Buffer calloc(int capacity, MemoryStack stack
      * @param struct the struct to validate
      */
     public static void validate(long struct) {
+        check(memGetAddress(struct + VkVideoEncodeInfoKHR.PNEXT));
         long pSetupReferenceSlot = memGetAddress(struct + VkVideoEncodeInfoKHR.PSETUPREFERENCESLOT);
         check(pSetupReferenceSlot);
         VkVideoReferenceSlotKHR.validate(pSetupReferenceSlot);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDBufferMarker.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_buffer_marker] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_buffer_marker extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_buffer_marker]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_buffer_marker%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDDeviceCoherentMemory.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_device_coherent_memory] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_device_coherent_memory extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_device_coherent_memory]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_device_coherent_memory%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDDisplayNativeHdr.java
Patch:
@@ -42,7 +42,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_display_native_hdr] @anteru%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_display_native_hdr extension&gt;&gt;">anteru</a></li>
+ * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_display_native_hdr]%20@anteru%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_display_native_hdr%20extension%3E%3E">anteru</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDDrawIndirectCount.java
Patch:
@@ -43,7 +43,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_draw_indirect_count] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_draw_indirect_count extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_draw_indirect_count]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_draw_indirect_count%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDGCNShader.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_gcn_shader] @dominikwitczakamd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_gcn_shader extension&gt;&gt;">dominikwitczakamd</a></li>
+ * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_gcn_shader]%20@dominikwitczakamd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_gcn_shader%20extension%3E%3E">dominikwitczakamd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDGPUShaderHalfFloat.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_gpu_shader_half_float] @dominikwitczakamd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_gpu_shader_half_float extension&gt;&gt;">dominikwitczakamd</a></li>
+ * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_gpu_shader_half_float]%20@dominikwitczakamd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_gpu_shader_half_float%20extension%3E%3E">dominikwitczakamd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDGPUShaderInt16.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Qun Lin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_gpu_shader_int16] @linqun%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_gpu_shader_int16 extension&gt;&gt;">linqun</a></li>
+ * <li>Qun Lin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_gpu_shader_int16]%20@linqun%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_gpu_shader_int16%20extension%3E%3E">linqun</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDMemoryOverallocationBehavior.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Martin Dinkov <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_memory_overallocation_behavior] @mdinkov%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_memory_overallocation_behavior extension&gt;&gt;">mdinkov</a></li>
+ * <li>Martin Dinkov <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_memory_overallocation_behavior]%20@mdinkov%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_memory_overallocation_behavior%20extension%3E%3E">mdinkov</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDMixedAttachmentSamples.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_mixed_attachment_samples] @anteru%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_mixed_attachment_samples extension&gt;&gt;">anteru</a></li>
+ * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_mixed_attachment_samples]%20@anteru%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_mixed_attachment_samples%20extension%3E%3E">anteru</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDNegativeViewportHeight.java
Patch:
@@ -42,7 +42,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_negative_viewport_height] @anteru%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_negative_viewport_height extension&gt;&gt;">anteru</a></li>
+ * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_negative_viewport_height]%20@anteru%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_negative_viewport_height%20extension%3E%3E">anteru</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDPipelineCompilerControl.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_pipeline_compiler_control] @anteru%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_pipeline_compiler_control extension&gt;&gt;">anteru</a></li>
+ * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_pipeline_compiler_control]%20@anteru%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_pipeline_compiler_control%20extension%3E%3E">anteru</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDRasterizationOrder.java
Patch:
@@ -47,7 +47,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_rasterization_order] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_rasterization_order extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_rasterization_order]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_rasterization_order%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderBallot.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_ballot] @dominikwitczakamd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_ballot extension&gt;&gt;">dominikwitczakamd</a></li>
+ * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_ballot]%20@dominikwitczakamd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_ballot%20extension%3E%3E">dominikwitczakamd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderCoreProperties.java
Patch:
@@ -92,7 +92,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Martin Dinkov <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_core_properties] @mdinkov%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_core_properties extension&gt;&gt;">mdinkov</a></li>
+ * <li>Martin Dinkov <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_core_properties]%20@mdinkov%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_core_properties%20extension%3E%3E">mdinkov</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderCoreProperties2.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_core_properties2] @anteru%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_core_properties2 extension&gt;&gt;">anteru</a></li>
+ * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_core_properties2]%20@anteru%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_core_properties2%20extension%3E%3E">anteru</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderExplicitVertexParameter.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Qun Lin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_explicit_vertex_parameter] @linqun%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_explicit_vertex_parameter extension&gt;&gt;">linqun</a></li>
+ * <li>Qun Lin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_explicit_vertex_parameter]%20@linqun%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_explicit_vertex_parameter%20extension%3E%3E">linqun</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderFragmentMask.java
Patch:
@@ -64,7 +64,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Aaron Hagan <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_fragment_mask] @AaronHaganAMD%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_fragment_mask extension&gt;&gt;">AaronHaganAMD</a></li>
+ * <li>Aaron Hagan <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_fragment_mask]%20@AaronHaganAMD%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_fragment_mask%20extension%3E%3E">AaronHaganAMD</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderImageLoadStoreLod.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_image_load_store_lod] @dominikwitczakamd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_image_load_store_lod extension&gt;&gt;">dominikwitczakamd</a></li>
+ * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_image_load_store_lod]%20@dominikwitczakamd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_image_load_store_lod%20extension%3E%3E">dominikwitczakamd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderInfo.java
Patch:
@@ -100,7 +100,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jaakko Konttinen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_info] @jaakkoamd%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_info extension&gt;&gt;">jaakkoamd</a></li>
+ * <li>Jaakko Konttinen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_info]%20@jaakkoamd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_info%20extension%3E%3E">jaakkoamd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDShaderTrinaryMinmax.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Qun Lin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_trinary_minmax] @linqun%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_shader_trinary_minmax extension&gt;&gt;">linqun</a></li>
+ * <li>Qun Lin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_shader_trinary_minmax]%20@linqun%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_shader_trinary_minmax%20extension%3E%3E">linqun</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDTextureGatherBiasLod.java
Patch:
@@ -77,7 +77,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Rex Xu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_texture_gather_bias_lod] @amdrexu%0A&lt;&lt;Here describe the issue or question you have about the VK_AMD_texture_gather_bias_lod extension&gt;&gt;">amdrexu</a></li>
+ * <li>Rex Xu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_AMD_texture_gather_bias_lod]%20@amdrexu%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_AMD_texture_gather_bias_lod%20extension%3E%3E">amdrexu</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXT4444Formats.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Joshua Ashton <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_4444_formats] @Joshua-Ashton%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_4444_formats extension&gt;&gt;">Joshua-Ashton</a></li>
+ * <li>Joshua Ashton <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_4444_formats]%20@Joshua-Ashton%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_4444_formats%20extension%3E%3E">Joshua-Ashton</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTAcquireXlibDisplay.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_acquire_xlib_display] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_acquire_xlib_display extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_acquire_xlib_display]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_acquire_xlib_display%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTAstcDecodeMode.java
Patch:
@@ -64,7 +64,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_astc_decode_mode] @janharaldfredriksen-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_astc_decode_mode extension&gt;&gt;">janharaldfredriksen-arm</a></li>
+ * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_astc_decode_mode]%20@janharaldfredriksen-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_astc_decode_mode%20extension%3E%3E">janharaldfredriksen-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTBlendOperationAdvanced.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_blend_operation_advanced] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_blend_operation_advanced extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_blend_operation_advanced]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_blend_operation_advanced%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTBufferDeviceAddress.java
Patch:
@@ -42,7 +42,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_buffer_device_address] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_buffer_device_address extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_buffer_device_address]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_buffer_device_address%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTCalibratedTimestamps.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_calibrated_timestamps] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_calibrated_timestamps extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_calibrated_timestamps]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_calibrated_timestamps%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTColorWriteEnable.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Sharif Elcott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_color_write_enable] @selcott%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_color_write_enable extension&gt;&gt;">selcott</a></li>
+ * <li>Sharif Elcott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_color_write_enable]%20@selcott%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_color_write_enable%20extension%3E%3E">selcott</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTConditionalRendering.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_conditional_rendering] @vkushwaha%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_conditional_rendering extension&gt;&gt;">vkushwaha</a></li>
+ * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_conditional_rendering]%20@vkushwaha%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_conditional_rendering%20extension%3E%3E">vkushwaha</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTConservativeRasterization.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_conservative_rasterization] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_conservative_rasterization extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_conservative_rasterization]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_conservative_rasterization%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTCustomBorderColor.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Liam Middlebrook <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_custom_border_color] @liam-middlebrook%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_custom_border_color extension&gt;&gt;">liam-middlebrook</a></li>
+ * <li>Liam Middlebrook <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_custom_border_color]%20@liam-middlebrook%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_custom_border_color%20extension%3E%3E">liam-middlebrook</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDebugMarker.java
Patch:
@@ -131,7 +131,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Baldur Karlsson <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_debug_marker] @baldurk%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_debug_marker extension&gt;&gt;">baldurk</a></li>
+ * <li>Baldur Karlsson <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_debug_marker]%20@baldurk%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_debug_marker%20extension%3E%3E">baldurk</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDebugReport.java
Patch:
@@ -93,7 +93,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Courtney Goeltzenleuchter <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_debug_report] @courtney-g%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_debug_report extension&gt;&gt;">courtney-g</a></li>
+ * <li>Courtney Goeltzenleuchter <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_debug_report]%20@courtney-g%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_debug_report%20extension%3E%3E">courtney-g</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDebugUtils.java
Patch:
@@ -241,7 +241,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Mark Young <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_debug_utils] @marky-lunarg%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_debug_utils extension&gt;&gt;">marky-lunarg</a></li>
+ * <li>Mark Young <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_debug_utils]%20@marky-lunarg%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_debug_utils%20extension%3E%3E">marky-lunarg</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDepthClipEnable.java
Patch:
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_depth_clip_enable] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_depth_clip_enable extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_depth_clip_enable]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_depth_clip_enable%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDepthRangeUnrestricted.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_depth_range_unrestricted] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_depth_range_unrestricted extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_depth_range_unrestricted]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_depth_range_unrestricted%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDescriptorIndexing.java
Patch:
@@ -46,7 +46,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_descriptor_indexing] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_descriptor_indexing extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_descriptor_indexing]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_descriptor_indexing%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDeviceMemoryReport.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Yiwei Zhang <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_device_memory_report] @zhangyiwei%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_device_memory_report extension&gt;&gt;">zhangyiwei</a></li>
+ * <li>Yiwei Zhang <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_device_memory_report]%20@zhangyiwei%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_device_memory_report%20extension%3E%3E">zhangyiwei</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDirectModeDisplay.java
Patch:
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_direct_mode_display] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_direct_mode_display extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_direct_mode_display]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_direct_mode_display%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDiscardRectangles.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_discard_rectangles] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_discard_rectangles extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_discard_rectangles]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_discard_rectangles%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDisplayControl.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_display_control] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_display_control extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_display_control]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_display_control%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDisplaySurfaceCounter.java
Patch:
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_display_surface_counter] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_display_surface_counter extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_display_surface_counter]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_display_surface_counter%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTExtendedDynamicState.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_extended_dynamic_state] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_extended_dynamic_state extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_extended_dynamic_state]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_extended_dynamic_state%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTExtendedDynamicState2.java
Patch:
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_extended_dynamic_state2] @vkushwaha-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_extended_dynamic_state2 extension&gt;&gt;">vkushwaha-nv</a></li>
+ * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_extended_dynamic_state2]%20@vkushwaha-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_extended_dynamic_state2%20extension%3E%3E">vkushwaha-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTExternalMemoryDmaBuf.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Chad Versace <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_external_memory_dma_buf] @chadversary%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_external_memory_dma_buf extension&gt;&gt;">chadversary</a></li>
+ * <li>Chad Versace <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_external_memory_dma_buf]%20@chadversary%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_external_memory_dma_buf%20extension%3E%3E">chadversary</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTExternalMemoryHost.java
Patch:
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_external_memory_host] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_external_memory_host extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_external_memory_host]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_external_memory_host%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTFilterCubic.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Bill Licea-Kane <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_filter_cubic] @wwlk%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_filter_cubic extension&gt;&gt;">wwlk</a></li>
+ * <li>Bill Licea-Kane <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_filter_cubic]%20@wwlk%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_filter_cubic%20extension%3E%3E">wwlk</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTFragmentDensityMap.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthew Netsch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_fragment_density_map] @mnetsch%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_fragment_density_map extension&gt;&gt;">mnetsch</a></li>
+ * <li>Matthew Netsch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_fragment_density_map]%20@mnetsch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_fragment_density_map%20extension%3E%3E">mnetsch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTFragmentDensityMap2.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthew Netsch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_fragment_density_map2] @mnetsch%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_fragment_density_map2 extension&gt;&gt;">mnetsch</a></li>
+ * <li>Matthew Netsch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_fragment_density_map2]%20@mnetsch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_fragment_density_map2%20extension%3E%3E">mnetsch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTFragmentShaderInterlock.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_fragment_shader_interlock] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_fragment_shader_interlock extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_fragment_shader_interlock]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_fragment_shader_interlock%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTFullScreenExclusive.java
Patch:
@@ -41,7 +41,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_full_screen_exclusive] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_full_screen_exclusive extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_full_screen_exclusive]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_full_screen_exclusive%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTGlobalPriority.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Andres Rodriguez <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_global_priority] @lostgoat%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_global_priority extension&gt;&gt;">lostgoat</a></li>
+ * <li>Andres Rodriguez <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_global_priority]%20@lostgoat%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_global_priority%20extension%3E%3E">lostgoat</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTGlobalPriorityQuery.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Yiwei Zhang <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_global_priority_query] @zhangyiwei%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_global_priority_query extension&gt;&gt;">zhangyiwei</a></li>
+ * <li>Yiwei Zhang <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_global_priority_query]%20@zhangyiwei%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_global_priority_query%20extension%3E%3E">zhangyiwei</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTHdrMetadata.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Courtney Goeltzenleuchter <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_hdr_metadata] @courtney-g%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_hdr_metadata extension&gt;&gt;">courtney-g</a></li>
+ * <li>Courtney Goeltzenleuchter <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_hdr_metadata]%20@courtney-g%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_hdr_metadata%20extension%3E%3E">courtney-g</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTHeadlessSurface.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Lisa Wu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_headless_surface] @chengtianww%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_headless_surface extension&gt;&gt;">chengtianww</a></li>
+ * <li>Lisa Wu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_headless_surface]%20@chengtianww%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_headless_surface%20extension%3E%3E">chengtianww</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTHostQueryReset.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Bas Nieuwenhuizen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_host_query_reset] @BNieuwenhuizen%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_host_query_reset extension&gt;&gt;">BNieuwenhuizen</a></li>
+ * <li>Bas Nieuwenhuizen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_host_query_reset]%20@BNieuwenhuizen%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_host_query_reset%20extension%3E%3E">BNieuwenhuizen</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTImageDrmFormatModifier.java
Patch:
@@ -96,7 +96,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Chad Versace <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_image_drm_format_modifier] @chadversary%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_image_drm_format_modifier extension&gt;&gt;">chadversary</a></li>
+ * <li>Chad Versace <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_image_drm_format_modifier]%20@chadversary%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_image_drm_format_modifier%20extension%3E%3E">chadversary</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTImageRobustness.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Graeme Leese <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_image_robustness] @gnl21%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_image_robustness extension&gt;&gt;">gnl21</a></li>
+ * <li>Graeme Leese <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_image_robustness]%20@gnl21%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_image_robustness%20extension%3E%3E">gnl21</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTIndexTypeUint8.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_index_type_uint8] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_index_type_uint8 extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_index_type_uint8]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_index_type_uint8%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTInlineUniformBlock.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_inline_uniform_block] @aqnuep%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_inline_uniform_block extension&gt;&gt;">aqnuep</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_inline_uniform_block]%20@aqnuep%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_inline_uniform_block%20extension%3E%3E">aqnuep</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTLineRasterization.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_line_rasterization] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_line_rasterization extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_line_rasterization]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_line_rasterization%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTLoadStoreOpNone.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Shahbaz Youssefi <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_load_store_op_none] @syoussefi%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_load_store_op_none extension&gt;&gt;">syoussefi</a></li>
+ * <li>Shahbaz Youssefi <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_load_store_op_none]%20@syoussefi%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_load_store_op_none%20extension%3E%3E">syoussefi</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTMemoryBudget.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_memory_budget] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_memory_budget extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_memory_budget]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_memory_budget%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTMemoryPriority.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_memory_priority] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_memory_priority extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_memory_priority]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_memory_priority%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTMetalSurface.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Dzmitry Malyshau <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_metal_surface] @kvark%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_metal_surface extension&gt;&gt;">kvark</a></li>
+ * <li>Dzmitry Malyshau <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_metal_surface]%20@kvark%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_metal_surface%20extension%3E%3E">kvark</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTMultiDraw.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Mike Blumenkrantz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_multi_draw] @zmike%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_multi_draw extension&gt;&gt;">zmike</a></li>
+ * <li>Mike Blumenkrantz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_multi_draw]%20@zmike%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_multi_draw%20extension%3E%3E">zmike</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPageableDeviceLocalMemory.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pageable_device_local_memory] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_pageable_device_local_memory extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pageable_device_local_memory]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_pageable_device_local_memory%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPciBusInfo.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pci_bus_info] @anteru%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_pci_bus_info extension&gt;&gt;">anteru</a></li>
+ * <li>Matthaeus G. Chajdas <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pci_bus_info]%20@anteru%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_pci_bus_info%20extension%3E%3E">anteru</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPhysicalDeviceDrm.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Simon Ser <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_physical_device_drm] @emersion%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_physical_device_drm extension&gt;&gt;">emersion</a></li>
+ * <li>Simon Ser <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_physical_device_drm]%20@emersion%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_physical_device_drm%20extension%3E%3E">emersion</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPipelineCreationCacheControl.java
Patch:
@@ -49,7 +49,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Gregory Grebe <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pipeline_creation_cache_control] @grgrebe_amd%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_pipeline_creation_cache_control extension&gt;&gt;">grgrebe_amd</a></li>
+ * <li>Gregory Grebe <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pipeline_creation_cache_control]%20@grgrebe_amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_pipeline_creation_cache_control%20extension%3E%3E">grgrebe_amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPipelineCreationFeedback.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jean-Francois Roy <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pipeline_creation_feedback] @jfroy%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_pipeline_creation_feedback extension&gt;&gt;">jfroy</a></li>
+ * <li>Jean-Francois Roy <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_pipeline_creation_feedback]%20@jfroy%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_pipeline_creation_feedback%20extension%3E%3E">jfroy</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPostDepthCoverage.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_post_depth_coverage] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_post_depth_coverage extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_post_depth_coverage]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_post_depth_coverage%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPrimitiveTopologyListRestart.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Shahbaz Youssefi <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_primitive_topology_list_restart] @syoussefi%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_primitive_topology_list_restart extension&gt;&gt;">syoussefi</a></li>
+ * <li>Shahbaz Youssefi <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_primitive_topology_list_restart]%20@syoussefi%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_primitive_topology_list_restart%20extension%3E%3E">syoussefi</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPrivateData.java
Patch:
@@ -41,7 +41,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Matthew Rusch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_private_data] @mattruschnv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_private_data extension&gt;&gt;">mattruschnv</a></li>
+ * <li>Matthew Rusch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_private_data]%20@mattruschnv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_private_data%20extension%3E%3E">mattruschnv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTProvokingVertex.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_provoking_vertex] @jessehall%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_provoking_vertex extension&gt;&gt;">jessehall</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_provoking_vertex]%20@jessehall%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_provoking_vertex%20extension%3E%3E">jessehall</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTQueueFamilyForeign.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Chad Versace <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_queue_family_foreign] @chadversary%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_queue_family_foreign extension&gt;&gt;">chadversary</a></li>
+ * <li>Chad Versace <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_queue_family_foreign]%20@chadversary%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_queue_family_foreign%20extension%3E%3E">chadversary</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTRobustness2.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Liam Middlebrook <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_robustness2] @liam-middlebrook%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_robustness2 extension&gt;&gt;">liam-middlebrook</a></li>
+ * <li>Liam Middlebrook <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_robustness2]%20@liam-middlebrook%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_robustness2%20extension%3E%3E">liam-middlebrook</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSampleLocations.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_sample_locations] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_sample_locations extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_sample_locations]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_sample_locations%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSamplerFilterMinmax.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_sampler_filter_minmax] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_sampler_filter_minmax extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_sampler_filter_minmax]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_sampler_filter_minmax%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTScalarBlockLayout.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_scalar_block_layout] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_scalar_block_layout extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_scalar_block_layout]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_scalar_block_layout%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSeparateStencilUsage.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_separate_stencil_usage] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_separate_stencil_usage extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_separate_stencil_usage]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_separate_stencil_usage%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderAtomicFloat.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_atomic_float] @vkushwaha-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_atomic_float extension&gt;&gt;">vkushwaha-nv</a></li>
+ * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_atomic_float]%20@vkushwaha-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_atomic_float%20extension%3E%3E">vkushwaha-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderAtomicFloat2.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_atomic_float2] @jekstrand%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_atomic_float2 extension&gt;&gt;">jekstrand</a></li>
+ * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_atomic_float2]%20@jekstrand%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_atomic_float2%20extension%3E%3E">jekstrand</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderDemoteToHelperInvocation.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_demote_to_helper_invocation] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_demote_to_helper_invocation extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_demote_to_helper_invocation]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_demote_to_helper_invocation%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderImageAtomicInt64.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_image_atomic_int64] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_image_atomic_int64 extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_image_atomic_int64]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_image_atomic_int64%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderStencilExport.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_stencil_export] @dominikwitczakamd%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_stencil_export extension&gt;&gt;">dominikwitczakamd</a></li>
+ * <li>Dominik Witczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_stencil_export]%20@dominikwitczakamd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_stencil_export%20extension%3E%3E">dominikwitczakamd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderSubgroupBallot.java
Patch:
@@ -74,7 +74,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_subgroup_ballot] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_subgroup_ballot extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_subgroup_ballot]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_subgroup_ballot%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderSubgroupVote.java
Patch:
@@ -79,7 +79,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_subgroup_vote] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_subgroup_vote extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_subgroup_vote]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_subgroup_vote%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTShaderViewportIndexLayer.java
Patch:
@@ -46,7 +46,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_viewport_index_layer] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_shader_viewport_index_layer extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_shader_viewport_index_layer]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_shader_viewport_index_layer%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSubgroupSizeControl.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Neil Henning <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_subgroup_size_control] @sheredom%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_subgroup_size_control extension&gt;&gt;">sheredom</a></li>
+ * <li>Neil Henning <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_subgroup_size_control]%20@sheredom%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_subgroup_size_control%20extension%3E%3E">sheredom</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSwapchainColorspace.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Courtney Goeltzenleuchter <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_swapchain_colorspace] @courtney-g%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_swapchain_colorspace extension&gt;&gt;">courtney-g</a></li>
+ * <li>Courtney Goeltzenleuchter <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_swapchain_colorspace]%20@courtney-g%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_swapchain_colorspace%20extension%3E%3E">courtney-g</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTTexelBufferAlignment.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_texel_buffer_alignment] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_texel_buffer_alignment extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_texel_buffer_alignment]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_texel_buffer_alignment%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTTextureCompressionAstcHdr.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_texture_compression_astc_hdr] @janharaldfredriksen-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_texture_compression_astc_hdr extension&gt;&gt;">janharaldfredriksen-arm</a></li>
+ * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_texture_compression_astc_hdr]%20@janharaldfredriksen-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_texture_compression_astc_hdr%20extension%3E%3E">janharaldfredriksen-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTToolingInfo.java
Patch:
@@ -64,7 +64,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_tooling_info] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_tooling_info extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_tooling_info]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_tooling_info%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTTransformFeedback.java
Patch:
@@ -46,7 +46,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_transform_feedback] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_transform_feedback extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_transform_feedback]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_transform_feedback%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTValidationCache.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Cort Stratton <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_validation_cache] @cdwfs%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_validation_cache extension&gt;&gt;">cdwfs</a></li>
+ * <li>Cort Stratton <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_validation_cache]%20@cdwfs%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_validation_cache%20extension%3E%3E">cdwfs</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTValidationFeatures.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Karl Schultz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_validation_features] @karl-lunarg%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_validation_features extension&gt;&gt;">karl-lunarg</a></li>
+ * <li>Karl Schultz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_validation_features]%20@karl-lunarg%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_validation_features%20extension%3E%3E">karl-lunarg</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTValidationFlags.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobin Ehlis <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_validation_flags] @tobine%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_validation_flags extension&gt;&gt;">tobine</a></li>
+ * <li>Tobin Ehlis <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_validation_flags]%20@tobine%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_validation_flags%20extension%3E%3E">tobine</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTVertexAttributeDivisor.java
Patch:
@@ -60,7 +60,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_vertex_attribute_divisor] @vkushwaha%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_vertex_attribute_divisor extension&gt;&gt;">vkushwaha</a></li>
+ * <li>Vikram Kushwaha <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_vertex_attribute_divisor]%20@vkushwaha%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_vertex_attribute_divisor%20extension%3E%3E">vkushwaha</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTVertexInputDynamicState.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_vertex_input_dynamic_state] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_vertex_input_dynamic_state extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_vertex_input_dynamic_state]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_vertex_input_dynamic_state%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTVideoEncodeH264.java
Patch:
@@ -67,7 +67,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Ahmed Abdelkhalek <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_video_encode_h264] @aabdelkh%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_video_encode_h264 extension&gt;&gt;">aabdelkh</a></li>
+ * <li>Ahmed Abdelkhalek <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_video_encode_h264]%20@aabdelkh%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_video_encode_h264%20extension%3E%3E">aabdelkh</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTYcbcr2plane444Formats.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tony Zlatinski <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_ycbcr_2plane_444_formats] @tzlatinski%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_ycbcr_2plane_444_formats extension&gt;&gt;">tzlatinski</a></li>
+ * <li>Tony Zlatinski <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_ycbcr_2plane_444_formats]%20@tzlatinski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_ycbcr_2plane_444_formats%20extension%3E%3E">tzlatinski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTYcbcrImageArrays.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_ycbcr_image_arrays] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_EXT_ycbcr_image_arrays extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_EXT_ycbcr_image_arrays]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_EXT_ycbcr_image_arrays%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/GOOGLEDecorateString.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Hai Nguyen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_decorate_string] @chaoticbob%0A&lt;&lt;Here describe the issue or question you have about the VK_GOOGLE_decorate_string extension&gt;&gt;">chaoticbob</a></li>
+ * <li>Hai Nguyen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_decorate_string]%20@chaoticbob%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_GOOGLE_decorate_string%20extension%3E%3E">chaoticbob</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/GOOGLEDisplayTiming.java
Patch:
@@ -47,7 +47,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_display_timing] @ianelliottus%0A&lt;&lt;Here describe the issue or question you have about the VK_GOOGLE_display_timing extension&gt;&gt;">ianelliottus</a></li>
+ * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_display_timing]%20@ianelliottus%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_GOOGLE_display_timing%20extension%3E%3E">ianelliottus</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/GOOGLEHlslFunctionality1.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Hai Nguyen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_hlsl_functionality1] @chaoticbob%0A&lt;&lt;Here describe the issue or question you have about the VK_GOOGLE_hlsl_functionality1 extension&gt;&gt;">chaoticbob</a></li>
+ * <li>Hai Nguyen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_hlsl_functionality1]%20@chaoticbob%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_GOOGLE_hlsl_functionality1%20extension%3E%3E">chaoticbob</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/GOOGLEUserType.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Kaye Mason <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_user_type] @chaleur%0A&lt;&lt;Here describe the issue or question you have about the VK_GOOGLE_user_type extension&gt;&gt;">chaleur</a></li>
+ * <li>Kaye Mason <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_GOOGLE_user_type]%20@chaleur%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_GOOGLE_user_type%20extension%3E%3E">chaleur</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/HUAWEIInvocationMask.java
Patch:
@@ -65,7 +65,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Yunpeng Zhu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_HUAWEI_invocation_mask] @yunxingzhu%0A&lt;&lt;Here describe the issue or question you have about the VK_HUAWEI_invocation_mask extension&gt;&gt;">yunxingzhu</a></li>
+ * <li>Yunpeng Zhu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_HUAWEI_invocation_mask]%20@yunxingzhu%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_HUAWEI_invocation_mask%20extension%3E%3E">yunxingzhu</a></li>
  * </ul></dd>
  * <dt><b>Extension Proposal</b></dt>
  * <dd><a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/tree/main/proposals/VK_HUAWEI_invocation_mask.asciidoc">VK_HUAWEI_invocation_mask</a></dd>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/HUAWEISubpassShading.java
Patch:
@@ -228,7 +228,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Hueilong Wang <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_HUAWEI_subpass_shading] @wyvernathuawei%0A&lt;&lt;Here describe the issue or question you have about the VK_HUAWEI_subpass_shading extension&gt;&gt;">wyvernathuawei</a></li>
+ * <li>Hueilong Wang <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_HUAWEI_subpass_shading]%20@wyvernathuawei%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_HUAWEI_subpass_shading%20extension%3E%3E">wyvernathuawei</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/IMGFilterCubic.java
Patch:
@@ -45,7 +45,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_IMG_filter_cubic] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_IMG_filter_cubic extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_IMG_filter_cubic]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_IMG_filter_cubic%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/INTELPerformanceQuery.java
Patch:
@@ -175,7 +175,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Lionel Landwerlin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_INTEL_performance_query] @llandwerlin%0A&lt;&lt;Here describe the issue or question you have about the VK_INTEL_performance_query extension&gt;&gt;">llandwerlin</a></li>
+ * <li>Lionel Landwerlin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_INTEL_performance_query]%20@llandwerlin%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_INTEL_performance_query%20extension%3E%3E">llandwerlin</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/INTELShaderIntegerFunctions2.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Ian Romanick <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_INTEL_shader_integer_functions2] @ianromanick%0A&lt;&lt;Here describe the issue or question you have about the VK_INTEL_shader_integer_functions2 extension&gt;&gt;">ianromanick</a></li>
+ * <li>Ian Romanick <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_INTEL_shader_integer_functions2]%20@ianromanick%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_INTEL_shader_integer_functions2%20extension%3E%3E">ianromanick</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHR16bitStorage.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_16bit_storage] @janharaldfredriksen-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_16bit_storage extension&gt;&gt;">janharaldfredriksen-arm</a></li>
+ * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_16bit_storage]%20@janharaldfredriksen-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_16bit_storage%20extension%3E%3E">janharaldfredriksen-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHR8bitStorage.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_8bit_storage] @alegal-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_8bit_storage extension&gt;&gt;">alegal-arm</a></li>
+ * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_8bit_storage]%20@alegal-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_8bit_storage%20extension%3E%3E">alegal-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRAccelerationStructure.java
Patch:
@@ -48,7 +48,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_acceleration_structure] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_acceleration_structure extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_acceleration_structure]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_acceleration_structure%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRBindMemory2.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_bind_memory2] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_bind_memory2 extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_bind_memory2]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_bind_memory2%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRBufferDeviceAddress.java
Patch:
@@ -49,7 +49,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_buffer_device_address] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_buffer_device_address extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_buffer_device_address]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_buffer_device_address%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRCopyCommands2.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Leger <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_copy_commands2] @jackohound%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_copy_commands2 extension&gt;&gt;">jackohound</a></li>
+ * <li>Jeff Leger <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_copy_commands2]%20@jackohound%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_copy_commands2%20extension%3E%3E">jackohound</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRCreateRenderpass2.java
Patch:
@@ -56,7 +56,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_create_renderpass2] @tobias%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_create_renderpass2 extension&gt;&gt;">tobias</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_create_renderpass2]%20@tobias%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_create_renderpass2%20extension%3E%3E">tobias</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDedicatedAllocation.java
Patch:
@@ -116,7 +116,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_dedicated_allocation] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_dedicated_allocation extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_dedicated_allocation]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_dedicated_allocation%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDeferredHostOperations.java
Patch:
@@ -144,7 +144,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Josh Barczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_deferred_host_operations] @jbarczak%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_deferred_host_operations extension&gt;&gt;">jbarczak</a></li>
+ * <li>Josh Barczak <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_deferred_host_operations]%20@jbarczak%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_deferred_host_operations%20extension%3E%3E">jbarczak</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDepthStencilResolve.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_depth_stencil_resolve] @janharald%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_depth_stencil_resolve extension&gt;&gt;">janharald</a></li>
+ * <li>Jan-Harald Fredriksen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_depth_stencil_resolve]%20@janharald%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_depth_stencil_resolve%20extension%3E%3E">janharald</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDescriptorUpdateTemplate.java
Patch:
@@ -45,7 +45,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Markus Tavenrath <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_descriptor_update_template] @mtavenrath%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_descriptor_update_template extension&gt;&gt;">mtavenrath</a></li>
+ * <li>Markus Tavenrath <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_descriptor_update_template]%20@mtavenrath%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_descriptor_update_template%20extension%3E%3E">mtavenrath</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDeviceGroup.java
Patch:
@@ -69,7 +69,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_device_group] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_device_group extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_device_group]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_device_group%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDeviceGroupCreation.java
Patch:
@@ -74,7 +74,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_device_group_creation] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_device_group_creation extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_device_group_creation]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_device_group_creation%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDisplay.java
Patch:
@@ -43,8 +43,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_display] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_display extension&gt;&gt;">cubanismo</a></li>
- * <li>Norbert Nopper <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_display] @FslNopper%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_display extension&gt;&gt;">FslNopper</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_display]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_display%20extension%3E%3E">cubanismo</a></li>
+ * <li>Norbert Nopper <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_display]%20@FslNopper%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_display%20extension%3E%3E">FslNopper</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDisplaySwapchain.java
Patch:
@@ -44,7 +44,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_display_swapchain] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_display_swapchain extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_display_swapchain]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_display_swapchain%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDrawIndirectCount.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_draw_indirect_count] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_draw_indirect_count extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_draw_indirect_count]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_draw_indirect_count%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDriverProperties.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_driver_properties] @drakos-amd%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_driver_properties extension&gt;&gt;">drakos-amd</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_driver_properties]%20@drakos-amd%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_driver_properties%20extension%3E%3E">drakos-amd</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFence.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_fence extension&gt;&gt;">critsec</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_fence%20extension%3E%3E">critsec</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceCapabilities.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence_capabilities] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_fence_capabilities extension&gt;&gt;">critsec</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence_capabilities]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_fence_capabilities%20extension%3E%3E">critsec</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceFd.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence_fd] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_fence_fd extension&gt;&gt;">critsec</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence_fd]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_fence_fd%20extension%3E%3E">critsec</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceWin32.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence_win32] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_fence_win32 extension&gt;&gt;">critsec</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_fence_win32]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_fence_win32%20extension%3E%3E">critsec</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalMemory.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_memory extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_memory%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalMemoryCapabilities.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory_capabilities] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_memory_capabilities extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory_capabilities]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_memory_capabilities%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalMemoryFd.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory_fd] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_memory_fd extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory_fd]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_memory_fd%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalMemoryWin32.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory_win32] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_memory_win32 extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_memory_win32]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_memory_win32%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphore.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_semaphore extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_semaphore%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreCapabilities.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore_capabilities] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_semaphore_capabilities extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore_capabilities]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_semaphore_capabilities%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreFd.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore_fd] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_semaphore_fd extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore_fd]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_semaphore_fd%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreWin32.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore_win32] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_external_semaphore_win32 extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_external_semaphore_win32]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_external_semaphore_win32%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRFragmentShadingRate.java
Patch:
@@ -51,7 +51,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_fragment_shading_rate] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_fragment_shading_rate extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_fragment_shading_rate]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_fragment_shading_rate%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRGetDisplayProperties2.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_display_properties2] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_get_display_properties2 extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_display_properties2]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_get_display_properties2%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRGetMemoryRequirements2.java
Patch:
@@ -43,7 +43,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_memory_requirements2] @jekstrand%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_get_memory_requirements2 extension&gt;&gt;">jekstrand</a></li>
+ * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_memory_requirements2]%20@jekstrand%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_get_memory_requirements2%20extension%3E%3E">jekstrand</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRGetPhysicalDeviceProperties2.java
Patch:
@@ -93,7 +93,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_physical_device_properties2] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_get_physical_device_properties2 extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_physical_device_properties2]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_get_physical_device_properties2%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRGetSurfaceCapabilities2.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_surface_capabilities2] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_get_surface_capabilities2 extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_get_surface_capabilities2]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_get_surface_capabilities2%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRImageFormatList.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_image_format_list] @jekstrand%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_image_format_list extension&gt;&gt;">jekstrand</a></li>
+ * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_image_format_list]%20@jekstrand%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_image_format_list%20extension%3E%3E">jekstrand</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRImagelessFramebuffer.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_imageless_framebuffer] @tobias%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_imageless_framebuffer extension&gt;&gt;">tobias</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_imageless_framebuffer]%20@tobias%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_imageless_framebuffer%20extension%3E%3E">tobias</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRIncrementalPresent.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_incremental_present] @ianelliottus%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_incremental_present extension&gt;&gt;">ianelliottus</a></li>
+ * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_incremental_present]%20@ianelliottus%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_incremental_present%20extension%3E%3E">ianelliottus</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMaintenance1.java
Patch:
@@ -51,7 +51,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_maintenance1] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_maintenance1 extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_maintenance1]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_maintenance1%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMaintenance2.java
Patch:
@@ -83,7 +83,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Michael Worcester <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_maintenance2] @michaelworcester%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_maintenance2 extension&gt;&gt;">michaelworcester</a></li>
+ * <li>Michael Worcester <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_maintenance2]%20@michaelworcester%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_maintenance2%20extension%3E%3E">michaelworcester</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMaintenance3.java
Patch:
@@ -46,7 +46,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_maintenance3] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_maintenance3 extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_maintenance3]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_maintenance3%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMultiview.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_multiview] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_multiview extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_multiview]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_multiview%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPerformanceQuery.java
Patch:
@@ -260,7 +260,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alon Or-bach <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_performance_query] @alonorbach%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_performance_query extension&gt;&gt;">alonorbach</a></li>
+ * <li>Alon Or-bach <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_performance_query]%20@alonorbach%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_performance_query%20extension%3E%3E">alonorbach</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPipelineExecutableProperties.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_pipeline_executable_properties] @jekstrand%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_pipeline_executable_properties extension&gt;&gt;">jekstrand</a></li>
+ * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_pipeline_executable_properties]%20@jekstrand%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_pipeline_executable_properties%20extension%3E%3E">jekstrand</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPipelineLibrary.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Christoph Kubisch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_pipeline_library] @pixeljetstream%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_pipeline_library extension&gt;&gt;">pixeljetstream</a></li>
+ * <li>Christoph Kubisch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_pipeline_library]%20@pixeljetstream%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_pipeline_library%20extension%3E%3E">pixeljetstream</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPortabilitySubset.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Bill Hollings <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_portability_subset] @billhollings%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_portability_subset extension&gt;&gt;">billhollings</a></li>
+ * <li>Bill Hollings <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_portability_subset]%20@billhollings%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_portability_subset%20extension%3E%3E">billhollings</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPresentId.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Keith Packard <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_present_id] @keithp%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_present_id extension&gt;&gt;">keithp</a></li>
+ * <li>Keith Packard <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_present_id]%20@keithp%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_present_id%20extension%3E%3E">keithp</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPresentWait.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Keith Packard <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_present_wait] @keithp%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_present_wait extension&gt;&gt;">keithp</a></li>
+ * <li>Keith Packard <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_present_wait]%20@keithp%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_present_wait%20extension%3E%3E">keithp</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPushDescriptor.java
Patch:
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_push_descriptor] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_push_descriptor extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_push_descriptor]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_push_descriptor%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRRayQuery.java
Patch:
@@ -55,7 +55,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_ray_query] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_ray_query extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_ray_query]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_ray_query%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRRayTracingPipeline.java
Patch:
@@ -76,7 +76,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_ray_tracing_pipeline] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_ray_tracing_pipeline extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_ray_tracing_pipeline]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_ray_tracing_pipeline%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRRelaxedBlockLayout.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>John Kessenich <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_relaxed_block_layout] @johnkslang%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_relaxed_block_layout extension&gt;&gt;">johnkslang</a></li>
+ * <li>John Kessenich <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_relaxed_block_layout]%20@johnkslang%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_relaxed_block_layout%20extension%3E%3E">johnkslang</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSamplerMirrorClampToEdge.java
Patch:
@@ -56,7 +56,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_sampler_mirror_clamp_to_edge] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_sampler_mirror_clamp_to_edge extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_sampler_mirror_clamp_to_edge]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_sampler_mirror_clamp_to_edge%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSamplerYcbcrConversion.java
Patch:
@@ -49,7 +49,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Andrew Garrard <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_sampler_ycbcr_conversion] @fluppeteer%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_sampler_ycbcr_conversion extension&gt;&gt;">fluppeteer</a></li>
+ * <li>Andrew Garrard <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_sampler_ycbcr_conversion]%20@fluppeteer%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_sampler_ycbcr_conversion%20extension%3E%3E">fluppeteer</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSeparateDepthStencilLayouts.java
Patch:
@@ -35,7 +35,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_separate_depth_stencil_layouts] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_separate_depth_stencil_layouts extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_separate_depth_stencil_layouts]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_separate_depth_stencil_layouts%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderAtomicInt64.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Aaron Hagan <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_atomic_int64] @ahagan%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_atomic_int64 extension&gt;&gt;">ahagan</a></li>
+ * <li>Aaron Hagan <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_atomic_int64]%20@ahagan%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_atomic_int64%20extension%3E%3E">ahagan</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderClock.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Aaron Hagan <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_clock] @ahagan%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_clock extension&gt;&gt;">ahagan</a></li>
+ * <li>Aaron Hagan <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_clock]%20@ahagan%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_clock%20extension%3E%3E">ahagan</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderDrawParameters.java
Patch:
@@ -53,7 +53,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_draw_parameters] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_draw_parameters extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_draw_parameters]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_draw_parameters%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderFloat16Int8.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_float16_int8] @alegal-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_float16_int8 extension&gt;&gt;">alegal-arm</a></li>
+ * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_float16_int8]%20@alegal-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_float16_int8%20extension%3E%3E">alegal-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderFloatControls.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_float_controls] @alegal-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_float_controls extension&gt;&gt;">alegal-arm</a></li>
+ * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_float_controls]%20@alegal-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_float_controls%20extension%3E%3E">alegal-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderIntegerDotProduct.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Kevin Petit <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_integer_dot_product] @kevinpetit%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_integer_dot_product extension&gt;&gt;">kevinpetit</a></li>
+ * <li>Kevin Petit <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_integer_dot_product]%20@kevinpetit%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_integer_dot_product%20extension%3E%3E">kevinpetit</a></li>
  * </ul></dd>
  * <dt><b>Extension Proposal</b></dt>
  * <dd><a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/tree/main/proposals/VK_KHR_shader_integer_dot_product.asciidoc">VK_KHR_shader_integer_dot_product</a></dd>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderNonSemanticInfo.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Baldur Karlsson <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_non_semantic_info] @baldurk%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_non_semantic_info extension&gt;&gt;">baldurk</a></li>
+ * <li>Baldur Karlsson <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_non_semantic_info]%20@baldurk%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_non_semantic_info%20extension%3E%3E">baldurk</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderSubgroupExtendedTypes.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Neil Henning <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_subgroup_extended_types] @sheredom%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_subgroup_extended_types extension&gt;&gt;">sheredom</a></li>
+ * <li>Neil Henning <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_subgroup_extended_types]%20@sheredom%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_subgroup_extended_types%20extension%3E%3E">sheredom</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderSubgroupUniformControlFlow.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alan Baker <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_subgroup_uniform_control_flow] @alan-baker%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_subgroup_uniform_control_flow extension&gt;&gt;">alan-baker</a></li>
+ * <li>Alan Baker <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_subgroup_uniform_control_flow]%20@alan-baker%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_subgroup_uniform_control_flow%20extension%3E%3E">alan-baker</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderTerminateInvocation.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_terminate_invocation] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shader_terminate_invocation extension&gt;&gt;">critsec</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shader_terminate_invocation]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shader_terminate_invocation%20extension%3E%3E">critsec</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSharedPresentableImage.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alon Or-bach <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shared_presentable_image] @alonorbach%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_shared_presentable_image extension&gt;&gt;">alonorbach</a></li>
+ * <li>Alon Or-bach <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_shared_presentable_image]%20@alonorbach%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_shared_presentable_image%20extension%3E%3E">alonorbach</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSpirv14.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_spirv_1_4] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_spirv_1_4 extension&gt;&gt;">critsec</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_spirv_1_4]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_spirv_1_4%20extension%3E%3E">critsec</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRStorageBufferStorageClass.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_storage_buffer_storage_class] @alegal-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_storage_buffer_storage_class extension&gt;&gt;">alegal-arm</a></li>
+ * <li>Alexander Galazin <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_storage_buffer_storage_class]%20@alegal-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_storage_buffer_storage_class%20extension%3E%3E">alegal-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSurface.java
Patch:
@@ -44,8 +44,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_surface] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_surface extension&gt;&gt;">cubanismo</a></li>
- * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_surface] @ianelliottus%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_surface extension&gt;&gt;">ianelliottus</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_surface]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_surface%20extension%3E%3E">cubanismo</a></li>
+ * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_surface]%20@ianelliottus%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_surface%20extension%3E%3E">ianelliottus</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSurfaceProtectedCapabilities.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Sandeep Shinde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_surface_protected_capabilities] @sashinde%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_surface_protected_capabilities extension&gt;&gt;">sashinde</a></li>
+ * <li>Sandeep Shinde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_surface_protected_capabilities]%20@sashinde%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_surface_protected_capabilities%20extension%3E%3E">sashinde</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSwapchain.java
Patch:
@@ -43,8 +43,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_swapchain] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_swapchain extension&gt;&gt;">cubanismo</a></li>
- * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_swapchain] @ianelliottus%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_swapchain extension&gt;&gt;">ianelliottus</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_swapchain]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_swapchain%20extension%3E%3E">cubanismo</a></li>
+ * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_swapchain]%20@ianelliottus%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_swapchain%20extension%3E%3E">ianelliottus</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSwapchainMutableFormat.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_swapchain_mutable_format] @drakos-arm%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_swapchain_mutable_format extension&gt;&gt;">drakos-arm</a></li>
+ * <li>Daniel Rakos <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_swapchain_mutable_format]%20@drakos-arm%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_swapchain_mutable_format%20extension%3E%3E">drakos-arm</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSynchronization2.java
Patch:
@@ -66,7 +66,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_synchronization2] @tobski%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_synchronization2 extension&gt;&gt;">tobski</a></li>
+ * <li>Tobias Hector <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_synchronization2]%20@tobski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_synchronization2%20extension%3E%3E">tobski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRTimelineSemaphore.java
Patch:
@@ -50,7 +50,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_timeline_semaphore] @jekstrand%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_timeline_semaphore extension&gt;&gt;">jekstrand</a></li>
+ * <li>Jason Ekstrand <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_timeline_semaphore]%20@jekstrand%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_timeline_semaphore%20extension%3E%3E">jekstrand</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRUniformBufferStandardLayout.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Graeme Leese <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_uniform_buffer_standard_layout] @gnl21%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_uniform_buffer_standard_layout extension&gt;&gt;">gnl21</a></li>
+ * <li>Graeme Leese <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_uniform_buffer_standard_layout]%20@gnl21%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_uniform_buffer_standard_layout%20extension%3E%3E">gnl21</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRVariablePointers.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_variable_pointers] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_variable_pointers extension&gt;&gt;">critsec</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_variable_pointers]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_variable_pointers%20extension%3E%3E">critsec</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRVideoQueue.java
Patch:
@@ -41,7 +41,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Tony Zlatinski <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_video_queue] @tzlatinski%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_video_queue extension&gt;&gt;">tzlatinski</a></li>
+ * <li>Tony Zlatinski <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_video_queue]%20@tzlatinski%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_video_queue%20extension%3E%3E">tzlatinski</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRVulkanMemoryModel.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_vulkan_memory_model] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_vulkan_memory_model extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_vulkan_memory_model]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_vulkan_memory_model%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRWaylandSurface.java
Patch:
@@ -36,8 +36,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_wayland_surface] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_wayland_surface extension&gt;&gt;">critsec</a></li>
- * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_wayland_surface] @ianelliottus%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_wayland_surface extension&gt;&gt;">ianelliottus</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_wayland_surface]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_wayland_surface%20extension%3E%3E">critsec</a></li>
+ * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_wayland_surface]%20@ianelliottus%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_wayland_surface%20extension%3E%3E">ianelliottus</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRWin32KeyedMutex.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Carsten Rohde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_win32_keyed_mutex] @crohde%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_win32_keyed_mutex extension&gt;&gt;">crohde</a></li>
+ * <li>Carsten Rohde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_win32_keyed_mutex]%20@crohde%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_win32_keyed_mutex%20extension%3E%3E">crohde</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRWin32Surface.java
Patch:
@@ -36,8 +36,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_win32_surface] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_win32_surface extension&gt;&gt;">critsec</a></li>
- * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_win32_surface] @ianelliottus%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_win32_surface extension&gt;&gt;">ianelliottus</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_win32_surface]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_win32_surface%20extension%3E%3E">critsec</a></li>
+ * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_win32_surface]%20@ianelliottus%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_win32_surface%20extension%3E%3E">ianelliottus</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRWorkgroupMemoryExplicitLayout.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Caio Marcelo de Oliveira Filho <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_workgroup_memory_explicit_layout] @cmarcelo%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_workgroup_memory_explicit_layout extension&gt;&gt;">cmarcelo</a></li>
+ * <li>Caio Marcelo de Oliveira Filho <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_workgroup_memory_explicit_layout]%20@cmarcelo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_workgroup_memory_explicit_layout%20extension%3E%3E">cmarcelo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRXlibSurface.java
Patch:
@@ -36,8 +36,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_xlib_surface] @critsec%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_xlib_surface extension&gt;&gt;">critsec</a></li>
- * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_xlib_surface] @ianelliottus%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_xlib_surface extension&gt;&gt;">ianelliottus</a></li>
+ * <li>Jesse Hall <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_xlib_surface]%20@critsec%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_xlib_surface%20extension%3E%3E">critsec</a></li>
+ * <li>Ian Elliott <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_xlib_surface]%20@ianelliottus%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_xlib_surface%20extension%3E%3E">ianelliottus</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRZeroInitializeWorkgroupMemory.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Alan Baker <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_zero_initialize_workgroup_memory] @alan-baker%0A&lt;&lt;Here describe the issue or question you have about the VK_KHR_zero_initialize_workgroup_memory extension&gt;&gt;">alan-baker</a></li>
+ * <li>Alan Baker <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_KHR_zero_initialize_workgroup_memory]%20@alan-baker%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_KHR_zero_initialize_workgroup_memory%20extension%3E%3E">alan-baker</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/MVKMacosSurface.java
Patch:
@@ -44,7 +44,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Bill Hollings <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_MVK_macos_surface] @billhollings%0A&lt;&lt;Here describe the issue or question you have about the VK_MVK_macos_surface extension&gt;&gt;">billhollings</a></li>
+ * <li>Bill Hollings <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_MVK_macos_surface]%20@billhollings%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_MVK_macos_surface%20extension%3E%3E">billhollings</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVAcquireWinrtDisplay.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Juliano <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_acquire_winrt_display] @jjuliano%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_acquire_winrt_display extension&gt;&gt;">jjuliano</a></li>
+ * <li>Jeff Juliano <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_acquire_winrt_display]%20@jjuliano%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_acquire_winrt_display%20extension%3E%3E">jjuliano</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVClipSpaceWScaling.java
Patch:
@@ -118,7 +118,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_clip_space_w_scaling] @ewerness-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_clip_space_w_scaling extension&gt;&gt;">ewerness-nv</a></li>
+ * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_clip_space_w_scaling]%20@ewerness-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_clip_space_w_scaling%20extension%3E%3E">ewerness-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVComputeShaderDerivatives.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_compute_shader_derivatives] @nvpbrown%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_compute_shader_derivatives extension&gt;&gt;">nvpbrown</a></li>
+ * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_compute_shader_derivatives]%20@nvpbrown%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_compute_shader_derivatives%20extension%3E%3E">nvpbrown</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVCooperativeMatrix.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_cooperative_matrix] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_cooperative_matrix extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_cooperative_matrix]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_cooperative_matrix%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVCornerSampledImage.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_corner_sampled_image] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_corner_sampled_image extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_corner_sampled_image]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_corner_sampled_image%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVCoverageReductionMode.java
Patch:
@@ -45,7 +45,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Kedarnath Thangudu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_coverage_reduction_mode] @kthangudu%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_coverage_reduction_mode extension&gt;&gt;">kthangudu</a></li>
+ * <li>Kedarnath Thangudu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_coverage_reduction_mode]%20@kthangudu%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_coverage_reduction_mode%20extension%3E%3E">kthangudu</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDedicatedAllocation.java
Patch:
@@ -104,7 +104,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_dedicated_allocation] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_dedicated_allocation extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_dedicated_allocation]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_dedicated_allocation%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDedicatedAllocationImageAliasing.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Nuno Subtil <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_dedicated_allocation_image_aliasing] @nsubtil%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_dedicated_allocation_image_aliasing extension&gt;&gt;">nsubtil</a></li>
+ * <li>Nuno Subtil <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_dedicated_allocation_image_aliasing]%20@nsubtil%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_dedicated_allocation_image_aliasing%20extension%3E%3E">nsubtil</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDeviceDiagnosticCheckpoints.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Nuno Subtil <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_device_diagnostic_checkpoints] @nsubtil%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_device_diagnostic_checkpoints extension&gt;&gt;">nsubtil</a></li>
+ * <li>Nuno Subtil <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_device_diagnostic_checkpoints]%20@nsubtil%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_device_diagnostic_checkpoints%20extension%3E%3E">nsubtil</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDeviceDiagnosticsConfig.java
Patch:
@@ -26,7 +26,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Kedarnath Thangudu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_device_diagnostics_config] @kthangudu%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_device_diagnostics_config extension&gt;&gt;">kthangudu</a></li>
+ * <li>Kedarnath Thangudu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_device_diagnostics_config]%20@kthangudu%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_device_diagnostics_config%20extension%3E%3E">kthangudu</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDeviceGeneratedCommands.java
Patch:
@@ -71,7 +71,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Christoph Kubisch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_device_generated_commands] @pixeljetstream%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_device_generated_commands extension&gt;&gt;">pixeljetstream</a></li>
+ * <li>Christoph Kubisch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_device_generated_commands]%20@pixeljetstream%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_device_generated_commands%20extension%3E%3E">pixeljetstream</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVExternalMemory.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_external_memory extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_external_memory%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVExternalMemoryCapabilities.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory_capabilities] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_external_memory_capabilities extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory_capabilities]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_external_memory_capabilities%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVExternalMemoryRdma.java
Patch:
@@ -101,7 +101,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Carsten Rohde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory_rdma] @crohde%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_external_memory_rdma extension&gt;&gt;">crohde</a></li>
+ * <li>Carsten Rohde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory_rdma]%20@crohde%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_external_memory_rdma%20extension%3E%3E">crohde</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVExternalMemoryWin32.java
Patch:
@@ -173,7 +173,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory_win32] @cubanismo%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_external_memory_win32 extension&gt;&gt;">cubanismo</a></li>
+ * <li>James Jones <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_external_memory_win32]%20@cubanismo%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_external_memory_win32%20extension%3E%3E">cubanismo</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVFillRectangle.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fill_rectangle] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_fill_rectangle extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fill_rectangle]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_fill_rectangle%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVFragmentCoverageToColor.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fragment_coverage_to_color] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_fragment_coverage_to_color extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fragment_coverage_to_color]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_fragment_coverage_to_color%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVFragmentShaderBarycentric.java
Patch:
@@ -47,7 +47,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fragment_shader_barycentric] @nvpbrown%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_fragment_shader_barycentric extension&gt;&gt;">nvpbrown</a></li>
+ * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fragment_shader_barycentric]%20@nvpbrown%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_fragment_shader_barycentric%20extension%3E%3E">nvpbrown</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVFragmentShadingRateEnums.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fragment_shading_rate_enums] @nvpbrown%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_fragment_shading_rate_enums extension&gt;&gt;">nvpbrown</a></li>
+ * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_fragment_shading_rate_enums]%20@nvpbrown%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_fragment_shading_rate_enums%20extension%3E%3E">nvpbrown</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVFramebufferMixedSamples.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_framebuffer_mixed_samples] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_framebuffer_mixed_samples extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_framebuffer_mixed_samples]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_framebuffer_mixed_samples%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVGLSLShader.java
Patch:
@@ -57,7 +57,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_glsl_shader] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_glsl_shader extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_glsl_shader]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_glsl_shader%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVGeometryShaderPassthrough.java
Patch:
@@ -95,7 +95,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_geometry_shader_passthrough] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_geometry_shader_passthrough extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_geometry_shader_passthrough]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_geometry_shader_passthrough%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVInheritedViewportScissor.java
Patch:
@@ -25,7 +25,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>David Zhao Akeley <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_inherited_viewport_scissor] @akeley98%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_inherited_viewport_scissor extension&gt;&gt;">akeley98</a></li>
+ * <li>David Zhao Akeley <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_inherited_viewport_scissor]%20@akeley98%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_inherited_viewport_scissor%20extension%3E%3E">akeley98</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVMeshShader.java
Patch:
@@ -39,7 +39,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Christoph Kubisch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_mesh_shader] @pixeljetstream%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_mesh_shader extension&gt;&gt;">pixeljetstream</a></li>
+ * <li>Christoph Kubisch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_mesh_shader]%20@pixeljetstream%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_mesh_shader%20extension%3E%3E">pixeljetstream</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVRayTracing.java
Patch:
@@ -76,7 +76,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_ray_tracing] @ewerness%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_ray_tracing extension&gt;&gt;">ewerness</a></li>
+ * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_ray_tracing]%20@ewerness%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_ray_tracing%20extension%3E%3E">ewerness</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVRepresentativeFragmentTest.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Kedarnath Thangudu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_representative_fragment_test] @kthangudu%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_representative_fragment_test extension&gt;&gt;">kthangudu</a></li>
+ * <li>Kedarnath Thangudu <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_representative_fragment_test]%20@kthangudu%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_representative_fragment_test%20extension%3E%3E">kthangudu</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVSampleMaskOverrideCoverage.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_sample_mask_override_coverage] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_sample_mask_override_coverage extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_sample_mask_override_coverage]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_sample_mask_override_coverage%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVScissorExclusive.java
Patch:
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_scissor_exclusive] @nvpbrown%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_scissor_exclusive extension&gt;&gt;">nvpbrown</a></li>
+ * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_scissor_exclusive]%20@nvpbrown%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_scissor_exclusive%20extension%3E%3E">nvpbrown</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVShaderImageFootprint.java
Patch:
@@ -38,7 +38,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shader_image_footprint] @nvpbrown%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_shader_image_footprint extension&gt;&gt;">nvpbrown</a></li>
+ * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shader_image_footprint]%20@nvpbrown%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_shader_image_footprint%20extension%3E%3E">nvpbrown</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVShaderSmBuiltins.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shader_sm_builtins] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_shader_sm_builtins extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shader_sm_builtins]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_shader_sm_builtins%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVShaderSubgroupPartitioned.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shader_subgroup_partitioned] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_shader_subgroup_partitioned extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shader_subgroup_partitioned]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_shader_subgroup_partitioned%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVShadingRateImage.java
Patch:
@@ -43,7 +43,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shading_rate_image] @nvpbrown%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_shading_rate_image extension&gt;&gt;">nvpbrown</a></li>
+ * <li>Pat Brown <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_shading_rate_image]%20@nvpbrown%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_shading_rate_image%20extension%3E%3E">nvpbrown</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVViewportArray2.java
Patch:
@@ -42,7 +42,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_viewport_array2] @dgkoch%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_viewport_array2 extension&gt;&gt;">dgkoch</a></li>
+ * <li>Daniel Koch <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_viewport_array2]%20@dgkoch%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_viewport_array2%20extension%3E%3E">dgkoch</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVViewportSwizzle.java
Patch:
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_viewport_swizzle] @pdaniell-nv%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_viewport_swizzle extension&gt;&gt;">pdaniell-nv</a></li>
+ * <li>Piers Daniell <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_viewport_swizzle]%20@pdaniell-nv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_viewport_swizzle%20extension%3E%3E">pdaniell-nv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVWin32KeyedMutex.java
Patch:
@@ -162,7 +162,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Carsten Rohde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_win32_keyed_mutex] @crohde%0A&lt;&lt;Here describe the issue or question you have about the VK_NV_win32_keyed_mutex extension&gt;&gt;">crohde</a></li>
+ * <li>Carsten Rohde <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NV_win32_keyed_mutex]%20@crohde%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NV_win32_keyed_mutex%20extension%3E%3E">crohde</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVXBinaryImport.java
Patch:
@@ -35,8 +35,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_binary_import] @ewerness%0A&lt;&lt;Here describe the issue or question you have about the VK_NVX_binary_import extension&gt;&gt;">ewerness</a></li>
- * <li>Liam Middlebrook <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_binary_import] @liam-middlebrook%0A&lt;&lt;Here describe the issue or question you have about the VK_NVX_binary_import extension&gt;&gt;">liam-middlebrook</a></li>
+ * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_binary_import]%20@ewerness%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NVX_binary_import%20extension%3E%3E">ewerness</a></li>
+ * <li>Liam Middlebrook <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_binary_import]%20@liam-middlebrook%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NVX_binary_import%20extension%3E%3E">liam-middlebrook</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVXImageViewHandle.java
Patch:
@@ -30,7 +30,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_image_view_handle] @ewerness%0A&lt;&lt;Here describe the issue or question you have about the VK_NVX_image_view_handle extension&gt;&gt;">ewerness</a></li>
+ * <li>Eric Werness <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_image_view_handle]%20@ewerness%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NVX_image_view_handle%20extension%3E%3E">ewerness</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVXMultiviewPerViewAttributes.java
Patch:
@@ -54,7 +54,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_multiview_per_view_attributes] @jeffbolznv%0A&lt;&lt;Here describe the issue or question you have about the VK_NVX_multiview_per_view_attributes extension&gt;&gt;">jeffbolznv</a></li>
+ * <li>Jeff Bolz <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_NVX_multiview_per_view_attributes]%20@jeffbolznv%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_NVX_multiview_per_view_attributes%20extension%3E%3E">jeffbolznv</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/QCOMRenderPassShaderResolve.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Bill Licea-Kane <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_render_pass_shader_resolve] @wwlk%0A&lt;&lt;Here describe the issue or question you have about the VK_QCOM_render_pass_shader_resolve extension&gt;&gt;">wwlk</a></li>
+ * <li>Bill Licea-Kane <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_render_pass_shader_resolve]%20@wwlk%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_QCOM_render_pass_shader_resolve%20extension%3E%3E">wwlk</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/QCOMRenderPassStoreOps.java
Patch:
@@ -36,7 +36,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Bill Licea-Kane <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_render_pass_store_ops] @wwlk%0A&lt;&lt;Here describe the issue or question you have about the VK_QCOM_render_pass_store_ops extension&gt;&gt;">wwlk</a></li>
+ * <li>Bill Licea-Kane <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_render_pass_store_ops]%20@wwlk%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_QCOM_render_pass_store_ops%20extension%3E%3E">wwlk</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/QCOMRenderPassTransform.java
Patch:
@@ -51,7 +51,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Leger <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_render_pass_transform] @jackohound%0A&lt;&lt;Here describe the issue or question you have about the VK_QCOM_render_pass_transform extension&gt;&gt;">jackohound</a></li>
+ * <li>Jeff Leger <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_render_pass_transform]%20@jackohound%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_QCOM_render_pass_transform%20extension%3E%3E">jackohound</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/QCOMRotatedCopyCommands.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Jeff Leger <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_rotated_copy_commands] @jackohound%0A&lt;&lt;Here describe the issue or question you have about the VK_QCOM_rotated_copy_commands extension&gt;&gt;">jackohound</a></li>
+ * <li>Jeff Leger <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_QCOM_rotated_copy_commands]%20@jackohound%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_QCOM_rotated_copy_commands%20extension%3E%3E">jackohound</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VALVEMutableDescriptorType.java
Patch:
@@ -36,8 +36,8 @@
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
- * <li>Joshua Ashton <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_VALVE_mutable_descriptor_type] @Joshua-Ashton%0A&lt;&lt;Here describe the issue or question you have about the VK_VALVE_mutable_descriptor_type extension&gt;&gt;">Joshua-Ashton</a></li>
- * <li>Hans-Kristian Arntzen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_VALVE_mutable_descriptor_type] @HansKristian-Work%0A&lt;&lt;Here describe the issue or question you have about the VK_VALVE_mutable_descriptor_type extension&gt;&gt;">HansKristian-Work</a></li>
+ * <li>Joshua Ashton <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_VALVE_mutable_descriptor_type]%20@Joshua-Ashton%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_VALVE_mutable_descriptor_type%20extension%3E%3E">Joshua-Ashton</a></li>
+ * <li>Hans-Kristian Arntzen <a target="_blank" href="https://github.com/KhronosGroup/Vulkan-Docs/issues/new?body=[VK_VALVE_mutable_descriptor_type]%20@HansKristian-Work%250A%3C%3CHere%20describe%20the%20issue%20or%20question%20you%20have%20about%20the%20VK_VALVE_mutable_descriptor_type%20extension%3E%3E">HansKristian-Work</a></li>
  * </ul></dd>
  * </dl>
  * 

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryStack.java
Patch:
@@ -837,9 +837,9 @@ public static MemoryStack stackPop() {
 
     // -------------------------------------------------
 
-    /** Thread-local version of {@link #malloc}. */
+    /** Thread-local version of {@link #malloc(int) malloc}. */
     public static ByteBuffer stackMalloc(int size) { return stackGet().malloc(size); }
-    /** Thread-local version of {@link #calloc}. */
+    /** Thread-local version of {@link #calloc(int) calloc}. */
     public static ByteBuffer stackCalloc(int size) { return stackGet().calloc(size); }
 
     /** Thread-local version of {@link #bytes(byte)}. */

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/CallbackI.java
Patch:
@@ -30,10 +30,10 @@ default long address() {
      *
      * @param ret  a pointer to the memory used for the function's return value.
      *
-     *             <p>If the function is declared as returning {@code v}oid, then this value is garbage and should not be used.</p>
+     *             <p>If the function is declared as returning {@code void}, then this value is garbage and should not be used.</p>
      *
      *             <p>Otherwise, the callback must fill the object to which this points, following the same special promotion behavior as
-     *             {@link LibFFI#ffi_call}.  That is, in most cases, {@code ret} points to an object of exactly the size of the type specified when {@code CIF}
+     *             {@link LibFFI#ffi_call}. That is, in most cases, {@code ret} points to an object of exactly the size of the type specified when {@code CIF}
      *             was constructed.  However, integral types narrower than the system register size are widened. In these cases your program may assume that
      *             {@code ret} points to an {@code ffi_arg} object.</p>
      * @param args a vector of pointers to memory holding the arguments to the function

File: modules/lwjgl/xxhash/src/generated/java/org/lwjgl/util/xxhash/package-info.java
Patch:
@@ -5,7 +5,7 @@
  */
 
 /**
- * Contains bindings to <a target="_blank" href="https://github.com/Cyan4973/xxHash">xxHash</a>, an extremely fash non-cryptographic hash algorithm.
+ * Contains bindings to <a target="_blank" href="https://github.com/Cyan4973/xxHash">xxHash</a>, an extremely fast non-cryptographic hash algorithm.
  * 
  * <p>xxHash successfully completes the <a target="_blank" href="https://github.com/aappleby/smhasher">SMHasher</a> test suite which evaluates collision, dispersion and
  * randomness qualities of hash functions.</p>

File: modules/lwjgl/core/src/main/java/org/lwjgl/Version.java
Patch:
@@ -4,7 +4,7 @@
  */
 package org.lwjgl;
 
-import static org.lwjgl.system.APIUtil.*;
+import java.util.*;
 
 /** This class can be used to query the LWJGL version. */
 public final class Version {
@@ -22,7 +22,7 @@ public final class Version {
         String.valueOf(VERSION_MAJOR) +
         '.' + VERSION_MINOR +
         '.' + VERSION_REVISION + BUILD_TYPE.postfix +
-        ' ' + apiGetManifestValue("Implementation-Version").orElse("SNAPSHOT");
+        ' ' + Optional.ofNullable(Version.class.getPackage().getImplementationVersion()).orElse("SNAPSHOT");
 
     private Version() {
     }

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Library.java
Patch:
@@ -120,7 +120,7 @@ public static void loadSystem(
                     apiLog("\tUsing SharedLibraryLoader...");
                 }
                 // Extract from classpath and try org.lwjgl.librarypath
-                try (FileChannel ignored = SharedLibraryLoader.load(name, libName, libURL)) {
+                try (FileChannel ignored = SharedLibraryLoader.load(name, libName, libURL, load)) {
                     if (loadSystemFromLibraryPath(load, context, module, libName, bundledWithLWJGL)) {
                         return;
                     }
@@ -262,7 +262,7 @@ private static SharedLibrary loadNative(Class<?> context, String module, String
                     apiLog("\tUsing SharedLibraryLoader...");
                 }
                 // Extract from classpath and try org.lwjgl.librarypath
-                try (FileChannel ignored = SharedLibraryLoader.load(name, libName, libURL)) {
+                try (FileChannel ignored = SharedLibraryLoader.load(name, libName, libURL, null)) {
                     lib = loadNativeFromLibraryPath(context, module, libName, bundledWithLWJGL);
                     if (lib != null) {
                         return lib;

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/LibraryResource.java
Patch:
@@ -106,7 +106,7 @@ private static Path load(Class<?> context, String module, String name, boolean b
                     apiLog("\tUsing SharedLibraryLoader...");
                 }
                 // Extract from classpath and try org.lwjgl.librarypath
-                try (FileChannel ignored = SharedLibraryLoader.load(name, name, resourceURL)) {
+                try (FileChannel ignored = SharedLibraryLoader.load(name, name, resourceURL, null)) {
                     path = loadFromLibraryPath(module, name, bundledWithLWJGL);
                     if (path != null) {
                         return path;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRCreateRenderpass2.java
Patch:
@@ -148,7 +148,6 @@ public static void nvkCmdBeginRenderPass2KHR(VkCommandBuffer commandBuffer, long
         long __functionAddress = commandBuffer.getCapabilities().vkCmdBeginRenderPass2KHR;
         if (CHECKS) {
             check(__functionAddress);
-            VkRenderPassBeginInfo.validate(pRenderPassBegin);
         }
         callPPPV(commandBuffer.address(), pRenderPassBegin, pSubpassBeginInfo, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDisplaySwapchain.java
Patch:
@@ -92,7 +92,6 @@ public static int nvkCreateSharedSwapchainsKHR(VkDevice device, int swapchainCou
         long __functionAddress = device.getCapabilities().vkCreateSharedSwapchainsKHR;
         if (CHECKS) {
             check(__functionAddress);
-            VkSwapchainCreateInfoKHR.validate(pCreateInfos, swapchainCount);
             if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), swapchainCount, pCreateInfos, pAllocator, pSwapchains, __functionAddress);
@@ -177,7 +176,6 @@ public static int vkCreateSharedSwapchainsKHR(VkDevice device, @NativeType("VkSw
         if (CHECKS) {
             check(__functionAddress);
             check(pSwapchains, pCreateInfos.remaining());
-            VkSwapchainCreateInfoKHR.validate(pCreateInfos.address(), pCreateInfos.remaining());
             if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfos.remaining(), pCreateInfos.address(), memAddressSafe(pAllocator), pSwapchains, __functionAddress);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSwapchain.java
Patch:
@@ -190,7 +190,6 @@ public static int nvkCreateSwapchainKHR(VkDevice device, long pCreateInfo, long
         long __functionAddress = device.getCapabilities().vkCreateSwapchainKHR;
         if (CHECKS) {
             check(__functionAddress);
-            VkSwapchainCreateInfoKHR.validate(pCreateInfo);
             if (pAllocator != NULL) { VkAllocationCallbacks.validate(pAllocator); }
         }
         return callPPPPI(device.address(), pCreateInfo, pAllocator, pSwapchain, __functionAddress);
@@ -927,7 +926,6 @@ public static int vkCreateSwapchainKHR(VkDevice device, @NativeType("VkSwapchain
         if (CHECKS) {
             check(__functionAddress);
             check(pSwapchain, 1);
-            VkSwapchainCreateInfoKHR.validate(pCreateInfo.address());
             if (pAllocator != null) { VkAllocationCallbacks.validate(pAllocator.address()); }
         }
         return callPPPPI(device.address(), pCreateInfo.address(), memAddressSafe(pAllocator), pSwapchain, __functionAddress);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK12.java
Patch:
@@ -982,7 +982,6 @@ public static void nvkCmdBeginRenderPass2(VkCommandBuffer commandBuffer, long pR
         long __functionAddress = commandBuffer.getCapabilities().vkCmdBeginRenderPass2;
         if (CHECKS) {
             check(__functionAddress);
-            VkRenderPassBeginInfo.validate(pRenderPassBegin);
         }
         callPPPV(commandBuffer.address(), pRenderPassBegin, pSubpassBeginInfo, __functionAddress);
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GLCapabilities.java
Patch:
@@ -7418,7 +7418,7 @@ private static boolean check_GL11(FunctionProvider provider, PointerBuffer caps,
             return false;
         }
 
-        int flag0 = fc || ext.contains("GL_NV_vertex_buffer_unified_memory") ? 0 : Integer.MIN_VALUE;
+        int flag0 = !fc || ext.contains("GL_NV_vertex_buffer_unified_memory") ? 0 : Integer.MIN_VALUE;
 
         return ((fc || checkFunctions(provider, caps, new int[] {
             2, 3, 4, 5, 6, 8, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 

File: modules/lwjgl/bullet/src/generated/java/org/lwjgl/bullet/PhysicsClient.java
Patch:
@@ -1165,7 +1165,7 @@ public static int b3SubmitClientCommand(@NativeType("b3PhysicsClientHandle") lon
     /** Unsafe version of: {@link #b3ProcessServerStatus ProcessServerStatus} */
     public static native long nb3ProcessServerStatus(long physClient);
 
-    /** Νon-blocking check status. */
+    /** Non-blocking check status. */
     @NativeType("b3SharedMemoryStatusHandle")
     public static long b3ProcessServerStatus(@NativeType("b3PhysicsClientHandle") long physClient) {
         if (CHECKS) {
@@ -1179,7 +1179,7 @@ public static long b3ProcessServerStatus(@NativeType("b3PhysicsClientHandle") lo
     /** Unsafe version of: {@link #b3GetStatusType GetStatusType} */
     public static native int nb3GetStatusType(long statusHandle);
 
-    /** Getσ the physics server return status type. */
+    /** Get the physics server return status type. */
     public static int b3GetStatusType(@NativeType("b3SharedMemoryStatusHandle") long statusHandle) {
         if (CHECKS) {
             check(statusHandle);

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java
Patch:
@@ -1351,7 +1351,7 @@ private JNI() {}
     public static native void callPPPPV(int param0, long param1, @Nullable int[] param2, @Nullable int[] param3, @Nullable int[] param4, int param5, long __functionAddress);
     public static native void callPPPPV(long param0, int param1, int param2, @Nullable long[] param3, @Nullable long[] param4, @Nullable long[] param5, long __functionAddress);
     public static native void callPPPPV(int param0, int param1, int param2, @Nullable int[] param3, @Nullable int[] param4, @Nullable int[] param5, long param6, long __functionAddress);
-    public static native void callPPPPV(int param0, int param1, long param2, long param3, @Nullable int[] param4, @Nullable int[] param5, int param6, long __functionAddress);
+    public static native void callPPPPV(int param0, int param1, long param2, @Nullable int[] param3, @Nullable int[] param4, @Nullable int[] param5, int param6, long __functionAddress);
     public static native void callPJPPV(long param0, int param1, long param2, int param3, int param4, @Nullable long[] param5, int param6, @Nullable int[] param7, long __functionAddress);
     public static native void callPJJJPV(long param0, long param1, long param2, long param3, @Nullable double[] param4, long __functionAddress);
     public static native void callPJJJPV(long param0, long param1, long param2, long param3, @Nullable float[] param4, long __functionAddress);

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVCommandList.java
Patch:
@@ -523,7 +523,7 @@ public static void glDeleteCommandListsNV(@NativeType("GLuint const *") int list
      * @param states    the array of state object names
      * @param fbos      the array of framebuffer object names
      */
-    public static void glListDrawCommandsStatesClientNV(@NativeType("GLuint") int list, @NativeType("GLuint") int segment, @NativeType("void const **") PointerBuffer indirects, @NativeType("size_t const *") PointerBuffer sizes, @NativeType("GLuint const *") IntBuffer states, @NativeType("GLuint const *") IntBuffer fbos) {
+    public static void glListDrawCommandsStatesClientNV(@NativeType("GLuint") int list, @NativeType("GLuint") int segment, @NativeType("void const **") PointerBuffer indirects, @NativeType("GLsizei const *") IntBuffer sizes, @NativeType("GLuint const *") IntBuffer states, @NativeType("GLuint const *") IntBuffer fbos) {
         if (CHECKS) {
             check(sizes, indirects.remaining());
             check(states, indirects.remaining());
@@ -645,15 +645,15 @@ public static void glDeleteCommandListsNV(@NativeType("GLuint const *") int[] li
     }
 
     /** Array version of: {@link #glListDrawCommandsStatesClientNV ListDrawCommandsStatesClientNV} */
-    public static void glListDrawCommandsStatesClientNV(@NativeType("GLuint") int list, @NativeType("GLuint") int segment, @NativeType("void const **") PointerBuffer indirects, @NativeType("size_t const *") PointerBuffer sizes, @NativeType("GLuint const *") int[] states, @NativeType("GLuint const *") int[] fbos) {
+    public static void glListDrawCommandsStatesClientNV(@NativeType("GLuint") int list, @NativeType("GLuint") int segment, @NativeType("void const **") PointerBuffer indirects, @NativeType("GLsizei const *") int[] sizes, @NativeType("GLuint const *") int[] states, @NativeType("GLuint const *") int[] fbos) {
         long __functionAddress = GL.getICD().glListDrawCommandsStatesClientNV;
         if (CHECKS) {
             check(__functionAddress);
             check(sizes, indirects.remaining());
             check(states, indirects.remaining());
             check(fbos, indirects.remaining());
         }
-        callPPPPV(list, segment, memAddress(indirects), memAddress(sizes), states, fbos, indirects.remaining(), __functionAddress);
+        callPPPPV(list, segment, memAddress(indirects), sizes, states, fbos, indirects.remaining(), __functionAddress);
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/tinyfd/src/generated/java/org/lwjgl/util/tinyfd/TinyFileDialogs.java
Patch:
@@ -74,7 +74,7 @@ public class TinyFileDialogs {
     public static final String tinyfd_allowCursesDialogs = "tinyfd_allowCursesDialogs";
 
     /**
-     * 0 (default) or 1. For unix & windows: 0 (graphic mode) or 1 (console mode).
+     * 0 (default) or 1. For unix &amp; windows: 0 (graphic mode) or 1 (console mode).
      * 
      * <p>0: try to use a graphic solution, if it fails then it uses console mode.</p>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VKCapabilitiesDevice.java
Patch:
@@ -960,8 +960,8 @@ public class VKCapabilitiesDevice {
     /** When true, {@link VALVEMutableDescriptorType} is supported. */
     public final boolean VK_VALVE_mutable_descriptor_type;
 
-    VKCapabilitiesDevice(FunctionProvider provider, VKCapabilitiesInstance capsInstance, Set<String> ext) {
-        this.apiVersion = capsInstance.apiVersion;
+    VKCapabilitiesDevice(FunctionProvider provider, VKCapabilitiesInstance capsInstance, int apiVersion, Set<String> ext) {
+        this.apiVersion = apiVersion;
 
         long[] caps = new long[354];
 

File: modules/lwjgl/vulkan/src/main/java/org/lwjgl/vulkan/VkInstance.java
Patch:
@@ -20,7 +20,7 @@
 public class VkInstance extends DispatchableHandleInstance {
 
     /**
-     * Creates a {@link VkInstance} instance for the specified native handle.
+     * Creates a {@code VkInstance} instance for the specified native handle.
      *
      * @param handle the native {@code VkInstance} handle
      * @param ci     the {@link VkInstanceCreateInfo} structured used to create the {@code VkInstance}.
@@ -32,9 +32,9 @@ public VkInstance(long handle, VkInstanceCreateInfo ci) {
     private static VKCapabilitiesInstance getInstanceCapabilities(long handle, VkInstanceCreateInfo ci) {
         VkApplicationInfo appInfo = ci.pApplicationInfo();
 
-        int apiVersion = appInfo != null
+        int apiVersion = appInfo != null && appInfo.apiVersion() != 0
             ? appInfo.apiVersion()
-            : VK.getInstanceVersionSupported();
+            : VK_API_VERSION_1_0;
 
         return new VKCapabilitiesInstance(functionName -> {
             long address = callPPP(handle, memAddress(functionName), VK.getGlobalCommands().vkGetInstanceProcAddr);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTBufferDeviceAddress.java
Patch:
@@ -100,7 +100,7 @@ public class EXTBufferDeviceAddress {
     public static final int VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT = 0x10;
 
     /** Extends {@code VkResult}. */
-    public static final int VK_ERROR_INVALID_DEVICE_ADDRESS_EXT = -1000244000;
+    public static final int VK_ERROR_INVALID_DEVICE_ADDRESS_EXT = -1000257000;
 
     protected EXTBufferDeviceAddress() {
         throw new UnsupportedOperationException();

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRBufferDeviceAddress.java
Patch:
@@ -100,7 +100,7 @@ public class KHRBufferDeviceAddress {
      */
     public static final int
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = 1000257000,
-        VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR                     = 1000257001,
+        VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR                     = 1000244001,
         VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR      = 1000257002,
         VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR    = 1000257003,
         VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR      = 1000257004;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceCapabilities.java
Patch:
@@ -86,7 +86,7 @@ public class KHRExternalFenceCapabilities {
     public static final int
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = 1000112000,
         VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR           = 1000112001,
-        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR       = 1000112004;
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR       = 1000071004;
 
     /** VK_LUID_SIZE_KHR */
     public static final int VK_LUID_SIZE_KHR = 8;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreCapabilities.java
Patch:
@@ -84,7 +84,7 @@ public class KHRExternalSemaphoreCapabilities {
     public static final int
         VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = 1000076000,
         VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR           = 1000076001,
-        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR           = 1000076004;
+        VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR           = 1000071004;
 
     /** VK_LUID_SIZE_KHR */
     public static final int VK_LUID_SIZE_KHR = 8;

File: modules/lwjgl/vulkan/src/main/java/org/lwjgl/vulkan/VK.java
Patch:
@@ -194,7 +194,7 @@ static Set<String> getEnabledExtensionSet(int apiVersion, @Nullable PointerBuffe
         int minorVersion = VK_VERSION_MINOR(apiVersion);
 
         int[] VK_VERSIONS = {
-            1 // Vulkan 1.0 to 1.1
+            2 // Vulkan 1.0 to 1.2
         };
 
         int maxMajor = min(majorVersion, VK_VERSIONS.length);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK12.java
Patch:
@@ -120,7 +120,7 @@
  * limit which indicates the color sample counts that are supported for all framebuffer color attachments with integer formats.</li>
  * </ul>
  */
-public class VK12 extends VK10 {
+public class VK12 extends VK11 {
 
     /**
      * Extends {@code VkStructureType}.

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRAccelerationStructure.java
Patch:
@@ -825,7 +825,7 @@ public static void nvkCmdBuildAccelerationStructuresIndirectKHR(VkCommandBuffer
      * <li>For any element of {@code pInfos}[i].{@code pGeometries} or {@code pInfos}[i].{@code ppGeometries} with a {@code geometryType} of {@link #VK_GEOMETRY_TYPE_INSTANCES_KHR GEOMETRY_TYPE_INSTANCES_KHR}, if {@code geometry.instances.data.deviceAddress} is the address of a non-sparse buffer then it <b>must</b> be bound completely and contiguously to a single {@code VkDeviceMemory} object</li>
      * <li>For any element of {@code pInfos}[i].{@code pGeometries} or {@code pInfos}[i].{@code ppGeometries} with a {@code geometryType} of {@link #VK_GEOMETRY_TYPE_INSTANCES_KHR GEOMETRY_TYPE_INSTANCES_KHR}, each {@link VkAccelerationStructureInstanceKHR}{@code ::accelerationStructureReference} value in {@code geometry.instances.data.deviceAddress} <b>must</b> be a valid device address containing a value obtained from {@link #vkGetAccelerationStructureDeviceAddressKHR GetAccelerationStructureDeviceAddressKHR}</li>
      * <li>For any element of {@code pIndirectDeviceAddresses}, if the buffer from which it was queried is non-sparse then it <b>must</b> be bound completely and contiguously to a single {@code VkDeviceMemory} object</li>
-     * <li>For any element of {@code pIndirectDeviceAddresses}[i], all device addresses between {@code pIndirectDeviceAddresses}[i] and <code>pIndirectDeviceAddresses[i] (pInfos[i]&amp;{@link #VK_8594 8594};geometryCount × pIndirectStrides[i]) - 1</code> <b>must</b> be in the buffer device address range of the same buffer</li>
+     * <li>For any element of {@code pIndirectDeviceAddresses}[i], all device addresses between {@code pIndirectDeviceAddresses}[i] and <code>pIndirectDeviceAddresses[i] (pInfos[i]&#8594;geometryCount × pIndirectStrides[i]) - 1</code> <b>must</b> be in the buffer device address range of the same buffer</li>
      * <li>For any element of {@code pIndirectDeviceAddresses}, the buffer from which it was queried <b>must</b> have been created with the {@link VK10#VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT BUFFER_USAGE_INDIRECT_BUFFER_BIT} bit set</li>
      * <li>Each element of {@code pIndirectDeviceAddresses} <b>must</b> be a multiple of 4</li>
      * <li>Each element of {@code pIndirectStrides} <b>must</b> be a multiple of 4</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPipelineLibrary.java
Patch:
@@ -38,7 +38,7 @@
  * <dd>No known IP claims.</dd>
  * <dt><b>Contributors</b></dt>
  * <dd><ul>
- * <li>See contributors to {@link KHRRayTracing VK_KHR_ray_tracing}</li>
+ * <li>See contributors to {@link KHRRayTracingPipeline VK_KHR_ray_tracing_pipeline}</li>
  * </ul></dd>
  * </dl>
  */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK10.java
Patch:
@@ -10999,7 +10999,7 @@ public static void nvkCmdBindVertexBuffers(VkCommandBuffer commandBuffer, int fi
      * 
      * <h5>Description</h5>
      * 
-     * <p>The values taken from elements <code>i</code> of {@code pBuffers} and {@code pOffsets} replace the current state for the vertex input binding <code>firstBinding + i</code>, for <code>i</code> in <code>[0, bindingCount)</code>. The vertex input binding is updated to start at the offset indicated by {@code pOffsets}[i] from the start of the buffer {@code pBuffers}[i]. All vertex input attributes that use each of these bindings will use these updated addresses in their address calculations for subsequent draw commands. If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#features-nullDescriptor">nullDescriptor</a> feature is enabled, elements of {@code pBuffers} <b>can</b> be {@link #VK_NULL_HANDLE NULL_HANDLE}, and <b>can</b> be used by the vertex shader. If a vertex input attribute is bound to a vertex input binding that is {@link #VK_NULL_HANDLE NULL_HANDLE}, the values taken from memory are considered to be zero, and missing G, B, or A components are <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fxvertex-input-extraction">filled with <code>(0,0,1)</code</a>>.</p>
+     * <p>The values taken from elements <code>i</code> of {@code pBuffers} and {@code pOffsets} replace the current state for the vertex input binding <code>firstBinding + i</code>, for <code>i</code> in <code>[0, bindingCount)</code>. The vertex input binding is updated to start at the offset indicated by {@code pOffsets}[i] from the start of the buffer {@code pBuffers}[i]. All vertex input attributes that use each of these bindings will use these updated addresses in their address calculations for subsequent draw commands. If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#features-nullDescriptor">nullDescriptor</a> feature is enabled, elements of {@code pBuffers} <b>can</b> be {@link #VK_NULL_HANDLE NULL_HANDLE}, and <b>can</b> be used by the vertex shader. If a vertex input attribute is bound to a vertex input binding that is {@link #VK_NULL_HANDLE NULL_HANDLE}, the values taken from memory are considered to be zero, and missing G, B, or A components are <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fxvertex-input-extraction">filled with <code>(0,0,1)</code></a>.</p>
      * 
      * <h5>Valid Usage</h5>
      * 
@@ -11915,7 +11915,7 @@ public static void nvkCmdCopyImage(VkCommandBuffer commandBuffer, long srcImage,
      * <li>If {@code dstImage} is non-sparse then the image or <em>disjoint</em> plane that is the destination of the copy <b>must</b> be bound completely and contiguously to a single {@code VkDeviceMemory} object</li>
      * <li>{@code dstImageLayout} <b>must</b> specify the layout of the image subresources of {@code dstImage} specified in {@code pRegions} at the time this command is executed on a {@code VkDevice}</li>
      * <li>{@code dstImageLayout} <b>must</b> be {@link #VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL}, {@link #VK_IMAGE_LAYOUT_GENERAL IMAGE_LAYOUT_GENERAL}, or {@link KHRSharedPresentableImage#VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR IMAGE_LAYOUT_SHARED_PRESENT_KHR}</li>
-     * <li>If the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} is not a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion"><em>multi-planar format</em</a>>, the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} <b>must</b> be compatible, as defined <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#copies-images-format-compatibility">above</a></li>
+     * <li>If the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} is not a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion"><em>multi-planar format</em></a>, the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} <b>must</b> be compatible, as defined <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#copies-images-format-compatibility">above</a></li>
      * <li>In a copy to or from a plane of a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar image</a>, the {@code VkFormat} of the image and plane <b>must</b> be compatible according to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-compatible-planes">the description of compatible planes</a> for the plane being copied</li>
      * <li>The sample count of {@code srcImage} and {@code dstImage} <b>must</b> match</li>
      * <li>The {@code srcSubresource.mipLevel} member of each element of {@code pRegions} <b>must</b> be less than the {@code mipLevels} specified in {@link VkImageCreateInfo} when {@code srcImage} was created</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCopyImageInfo2KHR.java
Patch:
@@ -33,7 +33,7 @@
  * <li>If {@code dstImage} is non-sparse then the image or <em>disjoint</em> plane that is the destination of the copy <b>must</b> be bound completely and contiguously to a single {@code VkDeviceMemory} object</li>
  * <li>{@code dstImageLayout} <b>must</b> specify the layout of the image subresources of {@code dstImage} specified in {@code pRegions} at the time this command is executed on a {@code VkDevice}</li>
  * <li>{@code dstImageLayout} <b>must</b> be {@link VK10#VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL}, {@link VK10#VK_IMAGE_LAYOUT_GENERAL IMAGE_LAYOUT_GENERAL}, or {@link KHRSharedPresentableImage#VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR IMAGE_LAYOUT_SHARED_PRESENT_KHR}</li>
- * <li>If the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} is not a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion"><em>multi-planar format</em</a>>, the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} <b>must</b> be compatible, as defined <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#copies-images-format-compatibility">above</a></li>
+ * <li>If the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} is not a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion"><em>multi-planar format</em></a>, the {@code VkFormat} of each of {@code srcImage} and {@code dstImage} <b>must</b> be compatible, as defined <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#copies-images-format-compatibility">above</a></li>
  * <li>In a copy to or from a plane of a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar image</a>, the {@code VkFormat} of the image and plane <b>must</b> be compatible according to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-compatible-planes">the description of compatible planes</a> for the plane being copied</li>
  * <li>The sample count of {@code srcImage} and {@code dstImage} <b>must</b> match</li>
  * <li>The {@code srcSubresource.mipLevel} member of each element of {@code pRegions} <b>must</b> be less than the {@code mipLevels} specified in {@link VkImageCreateInfo} when {@code srcImage} was created</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkGeneratedCommandsInfoNV.java
Patch:
@@ -31,7 +31,7 @@
  * <li>{@code preprocessBuffer} <b>must</b> have the {@link VK10#VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT BUFFER_USAGE_INDIRECT_BUFFER_BIT} bit set in its usage flag</li>
  * <li>{@code preprocessOffset} <b>must</b> be aligned to {@link VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV}{@code ::minIndirectCommandsBufferOffsetAlignment}</li>
  * <li>If {@code preprocessBuffer} is non-sparse then it <b>must</b> be bound completely and contiguously to a single {@code VkDeviceMemory} object</li>
- * <li>{@code preprocessSize} <b>must</b> be at least equal to the memory requirement`s size returned by {@link NVDeviceGeneratedCommands#vkGetGeneratedCommandsMemoryRequirementsNV GetGeneratedCommandsMemoryRequirementsNV} using the matching inputs ({@code indirectCommandsLayout}, &#8230;&#8203;) as within this structure</li>
+ * <li>{@code preprocessSize} <b>must</b> be at least equal to the memory requirement`s size returned by {@link NVDeviceGeneratedCommands#vkGetGeneratedCommandsMemoryRequirementsNV GetGeneratedCommandsMemoryRequirementsNV} using the matching inputs ({@code indirectCommandsLayout}, &#8230;) as within this structure</li>
  * <li>{@code sequencesCountBuffer} <b>can</b> be set if the actual used count of sequences is sourced from the provided buffer. In that case the {@code sequencesCount} serves as upper bound</li>
  * <li>If {@code sequencesCountBuffer} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, its usage flag <b>must</b> have the {@link VK10#VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT BUFFER_USAGE_INDIRECT_BUFFER_BIT} bit set</li>
  * <li>If {@code sequencesCountBuffer} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code sequencesCountOffset} <b>must</b> be aligned to {@link VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV}{@code ::minSequencesCountBufferOffsetAlignment}</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceFeatures.java
Patch:
@@ -97,7 +97,7 @@
  * <li>If <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#features-robustBufferAccess2">{@code robustBufferAccess2}</a> is enabled, vertex input attributes are considered out of bounds if the offset of the attribute in the bound vertex buffer range plus the size of the attribute is greater than the byte size of the memory range bound to the vertex buffer binding.
  * 
  * <ul>
- * <li>If a vertex input attribute is out of bounds, the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fxvertex-input-extraction">raw data</a> extracted are zero values, and missing G, B, or A components are <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fxvertex-input-extraction">filled with <code>(0,0,1)</code</a>>.</li>
+ * <li>If a vertex input attribute is out of bounds, the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fxvertex-input-extraction">raw data</a> extracted are zero values, and missing G, B, or A components are <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fxvertex-input-extraction">filled with <code>(0,0,1)</code></a>.</li>
  * </ul>
  * </li>
  * <li>If {@code robustBufferAccess} is not enabled, applications <b>must</b> not perform out of bounds accesses.</li>

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/jni/JNINativeInterface.java
Patch:
@@ -32,6 +32,8 @@
  */
 public class JNINativeInterface {
 
+    static { Library.initialize(); }
+
     /** JNI versions. */
     public static final int
         JNI_VERSION_1_1 = 0x10001,
@@ -94,8 +96,6 @@ public class JNINativeInterface {
         JNI_COMMIT = 1,
         JNI_ABORT  = 2;
 
-    static { Library.initialize(); }
-
     protected JNINativeInterface() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/libc/LibCErrno.java
Patch:
@@ -10,6 +10,8 @@
 /** Native bindings to errno.h. */
 public class LibCErrno {
 
+    static { Library.initialize(); }
+
     /**
      * Standard error codes.
      * 
@@ -100,8 +102,6 @@ public class LibCErrno {
         EILSEQ       = 0x2A,
         STRUNCATE    = 0x50;
 
-    static { Library.initialize(); }
-
     protected LibCErrno() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/libffi/LibFFI.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class LibFFI {
 
+    static { Library.initialize(); }
+
     /** Types used to create custom {@link FFICIF}. */
     public static final short
         FFI_TYPE_VOID       = 0,
@@ -107,8 +109,6 @@ public class LibFFI {
         FFI_BAD_TYPEDEF = 1,
         FFI_BAD_ABI     = 2;
 
-    static { Library.initialize(); }
-
     protected LibFFI() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/DynamicLinkLoader.java
Patch:
@@ -18,6 +18,8 @@
 /** Native bindings to &lt;dlfcn.h&gt;. */
 public class DynamicLinkLoader {
 
+    static { Library.initialize(); }
+
     /** The {@code mode} argument to {@link #dlopen} contains one of the following. */
     public static final int
         RTLD_LAZY         = 0x1,
@@ -41,8 +43,6 @@ public class DynamicLinkLoader {
     /** Do not delete object when closed. */
     public static final int RTLD_NODELETE = 0x1000;
 
-    static { Library.initialize(); }
-
     protected DynamicLinkLoader() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/CoreFoundation.java
Patch:
@@ -15,6 +15,8 @@
 /** Native bindings to &lt;CoreFoundation.h&gt;. */
 public class CoreFoundation {
 
+    static { Library.initialize(); }
+
     /** Boolean values. */
     public static final byte
         TRUE  = 1,
@@ -43,8 +45,6 @@ public class CoreFoundation {
         kCFURLHFSPathStyle     = 1,
         kCFURLWindowsPathStyle = 2;
 
-    static { Library.initialize(); }
-
     protected CoreFoundation() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/DynamicLinkLoader.java
Patch:
@@ -18,6 +18,8 @@
 /** Native bindings to &lt;dlfcn.h&gt;. */
 public class DynamicLinkLoader {
 
+    static { Library.initialize(); }
+
     /** The {@code mode} argument to {@link #dlopen} contains one of the following. */
     public static final int
         RTLD_LAZY   = 0x1,
@@ -32,8 +34,6 @@ public class DynamicLinkLoader {
         RTLD_SELF      = 0xFFFFFFFFFFFFFFFDL,
         RTLD_MAIN_ONLY = 0xFFFFFFFFFFFFFFFBL;
 
-    static { Library.initialize(); }
-
     protected DynamicLinkLoader() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/WinBase.java
Patch:
@@ -18,13 +18,13 @@
 /** Native bindings to WinBase.h. */
 public class WinBase {
 
+    static { Library.initialize(); }
+
     /** BOOL return values. */
     public static final int
         FALSE = 0,
         TRUE  = 1;
 
-    static { Library.initialize(); }
-
     protected WinBase() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/driftfx/src/generated/java/org/lwjgl/driftfx/DriftFX.java
Patch:
@@ -19,6 +19,8 @@
 /** Bindings to the {@code DriftFX} class. */
 public class DriftFX {
 
+    static { LibDriftFX.initialize(); }
+
     /**
      * {@code PresentationHint}
      * 
@@ -51,8 +53,6 @@ public class DriftFX {
         DRIFTFX_BOTTOM_CENTER = 0x9,
         DRIFTFX_BOTTOM_RIGHT  = 0xA;
 
-    static { LibDriftFX.initialize(); }
-
     protected DriftFX() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/libdivide/src/generated/java/org/lwjgl/util/libdivide/LibDivide.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class LibDivide {
 
+    static { Library.loadSystem(System::load, System::loadLibrary, LibDivide.class, "org.lwjgl.libdivide", Platform.mapLibraryNameBundled("lwjgl_libdivide")); }
+
     /** Library version. */
     public static final int
         LIBDIVIDE_VERSION_MAJOR = 2,
@@ -44,8 +46,6 @@ public class LibDivide {
         LIBDIVIDE_ADD_MARKER       = 0x40,
         LIBDIVIDE_NEGATIVE_DIVISOR = 0x80;
 
-    static { Library.loadSystem(System::load, System::loadLibrary, LibDivide.class, "org.lwjgl.libdivide", Platform.mapLibraryNameBundled("lwjgl_libdivide")); }
-
     protected LibDivide() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/LMDB.java
Patch:
@@ -128,6 +128,8 @@
  */
 public class LMDB {
 
+    static { LibLMDB.initialize(); }
+
     /**
      * Environment flags.
      * 
@@ -324,8 +326,6 @@ public class LMDB {
         MDB_BAD_DBI          = -30780,
         MDB_LAST_ERRCODE     = MDB_BAD_DBI;
 
-    static { LibLMDB.initialize(); }
-
     protected LMDB() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4.java
Patch:
@@ -72,6 +72,8 @@
  */
 public class LZ4 {
 
+    static { LibLZ4.initialize(); }
+
     /** Version number part. */
     public static final int
         LZ4_VERSION_MAJOR   = 1,
@@ -112,8 +114,6 @@ public class LZ4 {
     /** History window size; can be user-defined at compile time. */
     public static final int LZ4_DISTANCE_MAX = 64;
 
-    static { LibLZ4.initialize(); }
-
     protected LZ4() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4Frame.java
Patch:
@@ -24,6 +24,8 @@
  */
 public class LZ4Frame {
 
+    static { LibLZ4.initialize(); }
+
     /**
      * Version number.
      * 
@@ -180,8 +182,6 @@ public class LZ4Frame {
         LZ4F_ERROR_frameDecoding_alreadyStarted = 19,
         LZ4F_ERROR_maxCode                      = 20;
 
-    static { LibLZ4.initialize(); }
-
     protected LZ4Frame() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4HC.java
Patch:
@@ -48,6 +48,8 @@
  */
 public class LZ4HC {
 
+    static { LibLZ4.initialize(); }
+
     /** Compression level. */
     public static final int
         LZ4HC_CLEVEL_MIN     = 3,
@@ -71,8 +73,6 @@ public class LZ4HC {
 
     public static final int LZ4_STREAMHCSIZE_SIZET = (LZ4_STREAMHCSIZE / Pointer.POINTER_SIZE);
 
-    static { LibLZ4.initialize(); }
-
     protected LZ4HC() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/meow/src/generated/java/org/lwjgl/util/meow/Meow.java
Patch:
@@ -34,12 +34,12 @@
  */
 public class Meow {
 
+    static { LibMeow.initialize(); }
+
     public static final int MEOW_HASH_VERSION = 4;
 
     public static final String MEOW_HASH_VERSION_NAME = "0.4/himalayan";
 
-    static { LibMeow.initialize(); }
-
     protected Meow() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/meshoptimizer/src/generated/java/org/lwjgl/util/meshoptimizer/MeshOptimizer.java
Patch:
@@ -323,10 +323,10 @@
  */
 public class MeshOptimizer {
 
-    public static final int MESHOPTIMIZER_VERSION = 130;
-
     static { LibMeshOptimizer.initialize(); }
 
+    public static final int MESHOPTIMIZER_VERSION = 130;
+
     protected MeshOptimizer() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/Blendish.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class Blendish {
 
+    static { LibNanoVG.initialize(); }
+
     /** Alpha of disabled widget groups. Can be used in conjunction with {@link NanoVG#nvgGlobalAlpha GlobalAlpha}. */
     public static final float BND_DISABLED_ALPHA = 0.5f;
 
@@ -1088,8 +1090,6 @@ public class Blendish {
         BND_ICON_IMAGE_ZDEPTH           = BND_ICONID(12,0),
         BND_ICON_IMAGEFILE              = BND_ICONID(13,0);
 
-    static { LibNanoVG.initialize(); }
-
     protected Blendish() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NanoSVG.java
Patch:
@@ -34,6 +34,8 @@
  */
 public class NanoSVG {
 
+    static { LibNanoVG.initialize(); }
+
     /**
      * NSVGpaintType
      * 
@@ -117,8 +119,6 @@ public class NanoSVG {
     /** NSVGflags */
     public static final int NSVG_FLAGS_VISIBLE = 0x01;
 
-    static { LibNanoVG.initialize(); }
-
     protected NanoSVG() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NanoVG.java
Patch:
@@ -109,6 +109,8 @@
  */
 public class NanoVG {
 
+    static { LibNanoVG.initialize(); }
+
     /** PI */
     public static final float NVG_PI = 3.1415927f;
 
@@ -270,8 +272,6 @@ public class NanoVG {
         NVG_IMAGE_PREMULTIPLIED    = 1<<4,
         NVG_IMAGE_NEAREST          = 1<<5;
 
-    static { LibNanoVG.initialize(); }
-
     protected NanoVG() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NanoVGGL2.java
Patch:
@@ -15,6 +15,8 @@
 /** Implementation of the NanoVG API using OpenGL 2.0. */
 public class NanoVGGL2 {
 
+    static { LibNanoVG.initialize(); }
+
     /**
      * Create flags.
      * 
@@ -45,8 +47,6 @@ public class NanoVGGL2 {
      */
     public static final int NVG_IMAGE_NODELETE = 1<<16;
 
-    static { LibNanoVG.initialize(); }
-
     protected NanoVGGL2() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NanoVGGL3.java
Patch:
@@ -15,6 +15,8 @@
 /** Implementation of the NanoVG API using OpenGL 3.0. */
 public class NanoVGGL3 {
 
+    static { LibNanoVG.initialize(); }
+
     /**
      * Create flags.
      * 
@@ -45,8 +47,6 @@ public class NanoVGGL3 {
      */
     public static final int NVG_IMAGE_NODELETE = 1<<16;
 
-    static { LibNanoVG.initialize(); }
-
     protected NanoVGGL3() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NanoVGGLES2.java
Patch:
@@ -15,6 +15,8 @@
 /** Implementation of the NanoVG API using OpenGL ES 2.0. */
 public class NanoVGGLES2 {
 
+    static { LibNanoVG.initialize(); }
+
     /**
      * Create flags.
      * 
@@ -45,8 +47,6 @@ public class NanoVGGLES2 {
      */
     public static final int NVG_IMAGE_NODELETE = 1<<16;
 
-    static { LibNanoVG.initialize(); }
-
     protected NanoVGGLES2() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NanoVGGLES3.java
Patch:
@@ -15,6 +15,8 @@
 /** Implementation of the NanoVG API using OpenGL ES 3.0. */
 public class NanoVGGLES3 {
 
+    static { LibNanoVG.initialize(); }
+
     /**
      * Create flags.
      * 
@@ -45,8 +47,6 @@ public class NanoVGGLES3 {
      */
     public static final int NVG_IMAGE_NODELETE = 1<<16;
 
-    static { LibNanoVG.initialize(); }
-
     protected NanoVGGLES3() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/OUI.java
Patch:
@@ -16,6 +16,8 @@
 
 public class OUI {
 
+    static { LibNanoVG.initialize(); }
+
     /**
      * <h5>Enum values:</h5>
      * 
@@ -147,8 +149,6 @@ public class OUI {
         UI_KEY_UP          = 0x20000,
         UI_CHAR            = 0x40000;
 
-    static { LibNanoVG.initialize(); }
-
     protected OUI() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nfd/src/generated/java/org/lwjgl/util/nfd/NativeFileDialog.java
Patch:
@@ -62,6 +62,8 @@
  */
 public class NativeFileDialog {
 
+    static { LibNFD.initialize(); }
+
     /**
      * Result values.
      * 
@@ -78,8 +80,6 @@ public class NativeFileDialog {
         NFD_OKAY   = 1,
         NFD_CANCEL = 2;
 
-    static { LibNFD.initialize(); }
-
     protected NativeFileDialog() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/Nuklear.java
Patch:
@@ -228,6 +228,8 @@
  */
 public class Nuklear {
 
+    static { Library.loadSystem(System::load, System::loadLibrary, Nuklear.class, "org.lwjgl.nuklear", Platform.mapLibraryNameBundled("lwjgl_nuklear")); }
+
     /** Constants. */
     public static final int
         NK_UTF_INVALID       = 0xFFFD,
@@ -1214,8 +1216,6 @@ public class Nuklear {
         NK_WINDOW_MINIMIZED  = 1 << 15,
         NK_WINDOW_REMOVE_ROM = 1 << 16;
 
-    static { Library.loadSystem(System::load, System::loadLibrary, Nuklear.class, "org.lwjgl.nuklear", Platform.mapLibraryNameBundled("lwjgl_nuklear")); }
-
     protected Nuklear() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDDebugOutput.java
Patch:
@@ -49,6 +49,8 @@
  */
 public class AMDDebugOutput {
 
+    static { GL.initialize(); }
+
     /** Tokens accepted by GetIntegerv. */
     public static final int
         GL_MAX_DEBUG_MESSAGE_LENGTH_AMD  = 0x9143,
@@ -72,8 +74,6 @@ public class AMDDebugOutput {
         GL_DEBUG_CATEGORY_APPLICATION_AMD        = 0x914F,
         GL_DEBUG_CATEGORY_OTHER_AMD              = 0x9150;
 
-    static { GL.initialize(); }
-
     protected AMDDebugOutput() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDFramebufferMultisampleAdvanced.java
Patch:
@@ -26,6 +26,8 @@
  */
 public class AMDFramebufferMultisampleAdvanced {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of {@link GL30C#glGetRenderbufferParameteriv GetRenderbufferParameteriv}. */
     public static final int GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = 0x91B2;
 
@@ -37,8 +39,6 @@ public class AMDFramebufferMultisampleAdvanced {
         GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD       = 0x91B6,
         GL_SUPPORTED_MULTISAMPLE_MODES_AMD           = 0x91B7;
 
-    static { GL.initialize(); }
-
     protected AMDFramebufferMultisampleAdvanced() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDGPUShaderInt64.java
Patch:
@@ -33,6 +33,8 @@
  */
 public class AMDGPUShaderInt64 {
 
+    static { GL.initialize(); }
+
     /** Returned by the {@code type} parameter of GetActiveAttrib, GetActiveUniform, and GetTransformFeedbackVarying. */
     public static final int
         GL_INT64_NV               = 0x140E,
@@ -64,8 +66,6 @@ public class AMDGPUShaderInt64 {
         GL_FLOAT16_VEC3_NV        = 0x8FFA,
         GL_FLOAT16_VEC4_NV        = 0x8FFB;
 
-    static { GL.initialize(); }
-
     protected AMDGPUShaderInt64() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDInterleavedElements.java
Patch:
@@ -29,14 +29,14 @@
  */
 public class AMDInterleavedElements {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of VertexAttribParameteriAMD and GetVertexAttrib{iv|dv|fv|Iiv|Iuiv|Ldv}. */
     public static final int GL_VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4;
 
     /** Selected by the {@code pname} parameter of ProgramParameteri and GetProgramiv. */
     public static final int GL_VERTEX_ID_SWIZZLE_AMD = 0x91A5;
 
-    static { GL.initialize(); }
-
     protected AMDInterleavedElements() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDOcclusionQueryEvent.java
Patch:
@@ -18,6 +18,8 @@
  */
 public class AMDOcclusionQueryEvent {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code pname} argument to {@link #glQueryObjectParameteruiAMD QueryObjectParameteruiAMD}, {@link GL15C#glGetQueryObjectiv GetQueryObjectiv}, {@link GL15C#glGetQueryObjectuiv GetQueryObjectuiv},
      * {@link GL33C#glGetQueryObjecti64v GetQueryObjecti64v}, and {@link GL33C#glGetQueryObjectui64v GetQueryObjectui64v}.
@@ -32,8 +34,6 @@ public class AMDOcclusionQueryEvent {
         GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x8,
         GL_QUERY_ALL_EVENT_BITS_AMD              = 0xFFFFFFFF;
 
-    static { GL.initialize(); }
-
     protected AMDOcclusionQueryEvent() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDPerformanceMonitor.java
Patch:
@@ -26,6 +26,8 @@
  */
 public class AMDPerformanceMonitor {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pame} parameter of GetPerfMonitorCounterInfoAMD. */
     public static final int
         GL_COUNTER_TYPE_AMD  = 0x8BC0,
@@ -42,8 +44,6 @@ public class AMDPerformanceMonitor {
         GL_PERFMON_RESULT_SIZE_AMD      = 0x8BC5,
         GL_PERFMON_RESULT_AMD           = 0x8BC6;
 
-    static { GL.initialize(); }
-
     protected AMDPerformanceMonitor() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDSamplePositions.java
Patch:
@@ -25,11 +25,11 @@
  */
 public class AMDSamplePositions {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetFloatv. */
     public static final int GL_SUBSAMPLE_DISTANCE_AMD = 0x883F;
 
-    static { GL.initialize(); }
-
     protected AMDSamplePositions() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDSparseTexture.java
Patch:
@@ -24,6 +24,8 @@
  */
 public class AMDSparseTexture {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code flags} parameter to TexStorageSparseAMD and TextureStorageSparseAMD. */
     public static final int GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x1;
 
@@ -45,8 +47,6 @@ public class AMDSparseTexture {
     /** Accepted by the {@code pname} parameter of TexParameter{if}{v} and GetTexParameter{if}v. */
     public static final int GL_MIN_LOD_WARNING_AMD = 0x919C;
 
-    static { GL.initialize(); }
-
     protected AMDSparseTexture() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDStencilOperationExtended.java
Patch:
@@ -21,6 +21,8 @@
  */
 public class AMDStencilOperationExtended {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code sfail}, {@code dpfail} and {@code dppass} parameters of StencilOp and StencilOpSeparate. */
     public static final int
         GL_SET_AMD           = 0x874A,
@@ -31,8 +33,6 @@ public class AMDStencilOperationExtended {
         GL_STENCIL_OP_VALUE_AMD      = 0x874C,
         GL_STENCIL_BACK_OP_VALUE_AMD = 0x874D;
 
-    static { GL.initialize(); }
-
     protected AMDStencilOperationExtended() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDVertexShaderTessellator.java
Patch:
@@ -66,6 +66,8 @@
  */
 public class AMDVertexShaderTessellator {
 
+    static { GL.initialize(); }
+
     /** Returned by the {@code type} parameter of GetActiveUniform. */
     public static final int
         GL_SAMPLER_BUFFER_AMD              = 0x9001,
@@ -83,8 +85,6 @@ public class AMDVertexShaderTessellator {
     /** Accepted by GetFloatv. */
     public static final int GL_TESSELLATION_FACTOR_AMD = 0x9005;
 
-    static { GL.initialize(); }
-
     protected AMDVertexShaderTessellator() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBBindlessTexture.java
Patch:
@@ -45,11 +45,11 @@
  */
 public class ARBBindlessTexture {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of VertexAttribLPointer. */
     public static final int GL_UNSIGNED_INT64_ARB = 0x140F;
 
-    static { GL.initialize(); }
-
     protected ARBBindlessTexture() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBBlendFuncExtended.java
Patch:
@@ -25,6 +25,8 @@
  */
 public class ARBBlendFuncExtended {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code src} and {@code dst} parameters of BlendFunc and BlendFunci, and by the {@code srcRGB}, {@code dstRGB}, {@code srcAlpha} and
      * {@code dstAlpha} parameters of BlendFuncSeparate and BlendFuncSeparatei.
@@ -37,8 +39,6 @@ public class ARBBlendFuncExtended {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv and GetDoublev. */
     public static final int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
 
-    static { GL.initialize(); }
-
     protected ARBBlendFuncExtended() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBBufferStorage.java
Patch:
@@ -32,6 +32,8 @@
  */
 public class ARBBufferStorage {
 
+    static { GL.initialize(); }
+
     /** Accepted in the {@code flags} parameter of {@link #glBufferStorage BufferStorage} and {@link #glNamedBufferStorageEXT NamedBufferStorageEXT}. */
     public static final int
         GL_MAP_PERSISTENT_BIT  = 0x40,
@@ -47,8 +49,6 @@ public class ARBBufferStorage {
     /** Accepted by the {@code barriers} parameter of {@link GL42C#glMemoryBarrier MemoryBarrier}. */
     public static final int GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x4000;
 
-    static { GL.initialize(); }
-
     protected ARBBufferStorage() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBCLEvent.java
Patch:
@@ -20,14 +20,14 @@
  */
 public class ARBCLEvent {
 
+    static { GL.initialize(); }
+
     /** Returned in {@code values} for {@link GL32C#glGetSynciv GetSynciv} {@code pname} {@link GL32#GL_OBJECT_TYPE OBJECT_TYPE}. */
     public static final int GL_SYNC_CL_EVENT_ARB = 0x8240;
 
     /** Returned in {@code values} for {@link GL32C#glGetSynciv GetSynciv} {@code pname} {@link GL32#GL_SYNC_CONDITION SYNC_CONDITION}. */
     public static final int GL_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241;
 
-    static { GL.initialize(); }
-
     protected ARBCLEvent() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBClearTexture.java
Patch:
@@ -33,11 +33,11 @@
  */
 public class ARBClearTexture {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter for {@link GL42C#glGetInternalformativ GetInternalformativ} and {@link GL43C#glGetInternalformati64v GetInternalformati64v}. */
     public static final int GL_CLEAR_TEXTURE = 0x9365;
 
-    static { GL.initialize(); }
-
     protected ARBClearTexture() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBClipControl.java
Patch:
@@ -17,6 +17,8 @@
  */
 public class ARBClipControl {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code origin} parameter of {@link #glClipControl ClipControl}. */
     public static final int
         GL_LOWER_LEFT = 0x8CA1,
@@ -32,8 +34,6 @@ public class ARBClipControl {
         GL_CLIP_ORIGIN     = 0x935C,
         GL_CLIP_DEPTH_MODE = 0x935D;
 
-    static { GL.initialize(); }
-
     protected ARBClipControl() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBColorBufferFloat.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class ARBColorBufferFloat {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_RGBA_FLOAT_MODE_ARB = 0x8820;
 
@@ -43,8 +45,6 @@ public class ARBColorBufferFloat {
     /** Accepted by the {@code clamp} parameter of ClampColorARB. */
     public static final int GL_FIXED_ONLY_ARB = 0x891D;
 
-    static { GL.initialize(); }
-
     protected ARBColorBufferFloat() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBComputeShader.java
Patch:
@@ -34,6 +34,8 @@
  */
 public class ARBComputeShader {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of CreateShader and returned in the {@code params} parameter by GetShaderiv. */
     public static final int GL_COMPUTE_SHADER = 0x91B9;
 
@@ -72,8 +74,6 @@ public class ARBComputeShader {
     /** Accepted by the {@code stages} parameter of UseProgramStages. */
     public static final int GL_COMPUTE_SHADER_BIT = 0x20;
 
-    static { GL.initialize(); }
-
     protected ARBComputeShader() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBComputeVariableGroupSize.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class ARBComputeVariableGroupSize {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetIntegerv, GetBooleanv, GetFloatv, GetDoublev and GetInteger64v. */
     public static final int
         GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x9344,
@@ -33,8 +35,6 @@ public class ARBComputeVariableGroupSize {
         GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345,
         GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB    = 0x91BF;
 
-    static { GL.initialize(); }
-
     protected ARBComputeVariableGroupSize() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBCopyBuffer.java
Patch:
@@ -17,6 +17,8 @@
  */
 public class ARBCopyBuffer {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the target parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv, MapBufferRange,
      * FlushMappedBufferRange, GetBufferParameteriv, BindBufferRange, BindBufferBase, and CopyBufferSubData.
@@ -25,8 +27,6 @@ public class ARBCopyBuffer {
         GL_COPY_READ_BUFFER  = 0x8F36,
         GL_COPY_WRITE_BUFFER = 0x8F37;
 
-    static { GL.initialize(); }
-
     protected ARBCopyBuffer() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBDebugOutput.java
Patch:
@@ -61,6 +61,8 @@
  */
 public class ARBDebugOutput {
 
+    static { GL.initialize(); }
+
     /**
      * Tokens accepted by the {@code target} parameters of Enable, Disable, and IsEnabled.
      * 
@@ -137,8 +139,6 @@ public class ARBDebugOutput {
         GL_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147,
         GL_DEBUG_SEVERITY_LOW_ARB    = 0x9148;
 
-    static { GL.initialize(); }
-
     protected ARBDebugOutput() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBDirectStateAccess.java
Patch:
@@ -30,14 +30,14 @@
  */
 public class ARBDirectStateAccess {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetTextureParameter{if}v and GetTextureParameterI{i ui}v. */
     public static final int GL_TEXTURE_TARGET = 0x1006;
 
     /** Accepted by the {@code pname} parameter of GetQueryObjectiv. */
     public static final int GL_QUERY_TARGET = 0x82EA;
 
-    static { GL.initialize(); }
-
     protected ARBDirectStateAccess() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBDrawBuffers.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class ARBDrawBuffers {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_MAX_DRAW_BUFFERS_ARB = 0x8824,
@@ -43,8 +45,6 @@ public class ARBDrawBuffers {
         GL_DRAW_BUFFER14_ARB    = 0x8833,
         GL_DRAW_BUFFER15_ARB    = 0x8834;
 
-    static { GL.initialize(); }
-
     protected ARBDrawBuffers() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBDrawIndirect.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class ARBDrawIndirect {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * MapBufferRange, FlushMappedBufferRange, GetBufferParameteriv, and CopyBufferSubData.
@@ -37,8 +39,6 @@ public class ARBDrawIndirect {
     /** Accepted by the {@code value} parameter of GetIntegerv, GetBooleanv, GetFloatv, and GetDoublev. */
     public static final int GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
 
-    static { GL.initialize(); }
-
     protected ARBDrawIndirect() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBES2Compatibility.java
Patch:
@@ -19,6 +19,8 @@
  */
 public class ARBES2Compatibility {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code value} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int
         GL_SHADER_COMPILER                  = 0x8DFA,
@@ -45,8 +47,6 @@ public class ARBES2Compatibility {
     /** Accepted by the {@code format} parameter of most commands taking sized internal formats. */
     public static final int GL_RGB565 = 0x8D62;
 
-    static { GL.initialize(); }
-
     protected ARBES2Compatibility() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBES32Compatibility.java
Patch:
@@ -28,14 +28,14 @@
  */
 public class ARBES32Compatibility {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetFloatv, GetIntegerv, and GetInteger64v. */
     public static final int
         GL_PRIMITIVE_BOUNDING_BOX_ARB             = 0x92BE,
         GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB       = 0x9381,
         GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = 0x9382;
 
-    static { GL.initialize(); }
-
     protected ARBES32Compatibility() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBFramebufferNoAttachments.java
Patch:
@@ -45,6 +45,8 @@
  */
 public class ARBFramebufferNoAttachments {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code pname} parameter of FramebufferParameteri, GetFramebufferParameteriv, NamedFramebufferParameteriEXT, and
      * GetNamedFramebufferParameterivEXT.
@@ -63,8 +65,6 @@ public class ARBFramebufferNoAttachments {
         GL_MAX_FRAMEBUFFER_LAYERS  = 0x9317,
         GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318;
 
-    static { GL.initialize(); }
-
     protected ARBFramebufferNoAttachments() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBFramebufferObject.java
Patch:
@@ -194,6 +194,8 @@
  */
 public class ARBFramebufferObject {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameter of BindFramebuffer, CheckFramebufferStatus, FramebufferTexture{1D|2D|3D}, FramebufferRenderbuffer, and
      * GetFramebufferAttachmentParameteriv.
@@ -321,8 +323,6 @@ public class ARBFramebufferObject {
     /** Accepted by the {@code value} parameter of GetTexLevelParameter. */
     public static final int GL_TEXTURE_STENCIL_SIZE = 0x88F1;
 
-    static { GL.initialize(); }
-
     protected ARBFramebufferObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBGLSPIRV.java
Patch:
@@ -32,14 +32,14 @@
  */
 public class ARBGLSPIRV {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code binaryformat} parameter of {@link GL41C#glShaderBinary ShaderBinary}. */
     public static final int GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = 0x9551;
 
     /** Accepted by the {@code pname} parameter of {@link GL20C#glGetShaderiv GetShaderiv}. */
     public static final int GL_SPIR_V_BINARY_ARB = 0x9552;
 
-    static { GL.initialize(); }
-
     protected ARBGLSPIRV() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBGPUShaderFP64.java
Patch:
@@ -54,6 +54,8 @@
  */
 public class ARBGPUShaderFP64 {
 
+    static { GL.initialize(); }
+
     /** Returned in the {@code type} parameter of GetActiveUniform, and GetTransformFeedbackVarying. */
     public static final int
         GL_DOUBLE_VEC2   = 0x8FFC,
@@ -69,8 +71,6 @@ public class ARBGPUShaderFP64 {
         GL_DOUBLE_MAT4x2 = 0x8F4D,
         GL_DOUBLE_MAT4x3 = 0x8F4E;
 
-    static { GL.initialize(); }
-
     protected ARBGPUShaderFP64() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBGPUShaderInt64.java
Patch:
@@ -32,6 +32,8 @@
  */
 public class ARBGPUShaderInt64 {
 
+    static { GL.initialize(); }
+
     /** Returned by the {@code type} parameter of GetActiveAttrib, GetActiveUniform, and GetTransformFeedbackVarying. */
     public static final int
         GL_INT64_ARB               = 0x140E,
@@ -43,8 +45,6 @@ public class ARBGPUShaderInt64 {
         GL_UNSIGNED_INT64_VEC3_ARB = 0x8FF6,
         GL_UNSIGNED_INT64_VEC4_ARB = 0x8FF7;
 
-    static { GL.initialize(); }
-
     protected ARBGPUShaderInt64() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBGeometryShader4.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class ARBGeometryShader4 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of CreateShader and returned by the {@code params} parameter of GetShaderiv. */
     public static final int GL_GEOMETRY_SHADER_ARB = 0x8DD9;
 
@@ -72,8 +74,6 @@ public class ARBGeometryShader4 {
      */
     public static final int GL_PROGRAM_POINT_SIZE_ARB = 0x8642;
 
-    static { GL.initialize(); }
-
     protected ARBGeometryShader4() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBGetProgramBinary.java
Patch:
@@ -30,6 +30,8 @@
  */
 public class ARBGetProgramBinary {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of ProgramParameteri and GetProgramiv. */
     public static final int GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
 
@@ -41,8 +43,6 @@ public class ARBGetProgramBinary {
         GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE,
         GL_PROGRAM_BINARY_FORMATS     = 0x87FF;
 
-    static { GL.initialize(); }
-
     protected ARBGetProgramBinary() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBImaging.java
Patch:
@@ -19,6 +19,8 @@
 /** Native bindings to the OpenGL 1.2 optional imaging subset. */
 public class ARBImaging {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Enable, Disable, and IsEnabled, by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev, and by the {@code target} parameter of ColorTable, CopyColorTable, ColorTableParameteriv, ColorTableParameterfv,
@@ -201,8 +203,6 @@ public class ARBImaging {
         GL_FUNC_SUBTRACT         = 0x800A,
         GL_FUNC_REVERSE_SUBTRACT = 0x800B;
 
-    static { GL.initialize(); }
-
     protected ARBImaging() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBIndirectParameters.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class ARBIndirectParameters {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * MapBufferRange, FlushMappedBufferRange, GetBufferParameteriv, and CopyBufferSubData.
@@ -40,8 +42,6 @@ public class ARBIndirectParameters {
     /** Accepted by the {@code value} parameter of GetIntegerv, GetBooleanv, GetFloatv, and GetDoublev. */
     public static final int GL_PARAMETER_BUFFER_BINDING_ARB = 0x80EF;
 
-    static { GL.initialize(); }
-
     protected ARBIndirectParameters() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBInstancedArrays.java
Patch:
@@ -29,11 +29,11 @@
  */
 public class ARBInstancedArrays {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetVertexAttribdv, GetVertexAttribfv, and GetVertexAttribiv. */
     public static final int GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE;
 
-    static { GL.initialize(); }
-
     protected ARBInstancedArrays() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBInternalformatQuery.java
Patch:
@@ -22,11 +22,11 @@
  */
 public class ARBInternalformatQuery {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetInternalformativ. */
     public static final int GL_NUM_SAMPLE_COUNTS = 0x9380;
 
-    static { GL.initialize(); }
-
     protected ARBInternalformatQuery() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBInternalformatQuery2.java
Patch:
@@ -46,6 +46,8 @@
  */
 public class ARBInternalformatQuery2 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of GetInternalformativ and GetInternalformati64v. */
     public static final int
         GL_TEXTURE_1D                   = 0xDE0,
@@ -170,8 +172,6 @@ public class ARBInternalformatQuery2 {
         GL_VIEW_CLASS_BPTC_UNORM     = 0x82D2,
         GL_VIEW_CLASS_BPTC_FLOAT     = 0x82D3;
 
-    static { GL.initialize(); }
-
     protected ARBInternalformatQuery2() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBMapBufferRange.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class ARBMapBufferRange {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code access} parameter of MapBufferRange. */
     public static final int
         GL_MAP_READ_BIT              = 0x1,
@@ -40,8 +42,6 @@ public class ARBMapBufferRange {
         GL_MAP_FLUSH_EXPLICIT_BIT    = 0x10,
         GL_MAP_UNSYNCHRONIZED_BIT    = 0x20;
 
-    static { GL.initialize(); }
-
     protected ARBMapBufferRange() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBMatrixPalette.java
Patch:
@@ -27,6 +27,8 @@
  */
 public class ARBMatrixPalette {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code pname} parameters of GetFloatv, GetDoublev, and IsEnabled, by the {@code mode} parameter of MatrixMode, and by the {@code cap}
      * parameters of Enable and Disable.
@@ -54,8 +56,6 @@ public class ARBMatrixPalette {
     /** Accepted by the {@code pname} parameter of GetPointerv. */
     public static final int GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849;
 
-    static { GL.initialize(); }
-
     protected ARBMatrixPalette() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBMultisample.java
Patch:
@@ -27,6 +27,8 @@
  */
 public class ARBMultisample {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Enable, Disable, and IsEnabled, and by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev.
@@ -47,8 +49,6 @@ public class ARBMultisample {
         GL_SAMPLE_COVERAGE_VALUE_ARB  = 0x80AA,
         GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB;
 
-    static { GL.initialize(); }
-
     protected ARBMultisample() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBMultitexture.java
Patch:
@@ -22,6 +22,8 @@
  */
 public class ARBMultitexture {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code texture} parameter of ActiveTexture and MultiTexCoord. */
     public static final int
         GL_TEXTURE0_ARB  = 0x84C0,
@@ -63,8 +65,6 @@ public class ARBMultitexture {
         GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1,
         GL_MAX_TEXTURE_UNITS_ARB     = 0x84E2;
 
-    static { GL.initialize(); }
-
     protected ARBMultitexture() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBOcclusionQuery.java
Patch:
@@ -58,6 +58,8 @@
  */
 public class ARBOcclusionQuery {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of BeginQueryARB, EndQueryARB, and GetQueryivARB. */
     public static final int GL_SAMPLES_PASSED_ARB = 0x8914;
 
@@ -71,8 +73,6 @@ public class ARBOcclusionQuery {
         GL_QUERY_RESULT_ARB           = 0x8866,
         GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867;
 
-    static { GL.initialize(); }
-
     protected ARBOcclusionQuery() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBParallelShaderCompile.java
Patch:
@@ -18,14 +18,14 @@
  */
 public class ARBParallelShaderCompile {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int GL_MAX_SHADER_COMPILER_THREADS_ARB = 0x91B0;
 
     /** Accepted as part of the {@code pname} parameter to GetShaderiv() and accepted as part of the {@code pname} parameter to GetProgramiv(). */
     public static final int GL_COMPLETION_STATUS_ARB = 0x91B1;
 
-    static { GL.initialize(); }
-
     protected ARBParallelShaderCompile() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBPointParameters.java
Patch:
@@ -34,15 +34,15 @@
  */
 public class ARBPointParameters {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of PointParameterfvARB, and the {@code pname} of Get. */
     public static final int
         GL_POINT_SIZE_MIN_ARB             = 0x8126,
         GL_POINT_SIZE_MAX_ARB             = 0x8127,
         GL_POINT_FADE_THRESHOLD_SIZE_ARB  = 0x8128,
         GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129;
 
-    static { GL.initialize(); }
-
     protected ARBPointParameters() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBPolygonOffsetClamp.java
Patch:
@@ -19,11 +19,11 @@
  */
 public class ARBPolygonOffsetClamp {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int GL_POLYGON_OFFSET_CLAMP = 0x8E1B;
 
-    static { GL.initialize(); }
-
     protected ARBPolygonOffsetClamp() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBProgramInterfaceQuery.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class ARBProgramInterfaceQuery {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code programInterface} parameter of GetProgramInterfaceiv, GetProgramResourceIndex, GetProgramResourceName, GetProgramResourceiv,
      * GetProgramResourceLocation, and GetProgramResourceLocationIndex.
@@ -96,8 +98,6 @@ public class ARBProgramInterfaceQuery {
         GL_LOCATION_INDEX                       = 0x930F,
         GL_IS_PER_PATCH                         = 0x92E7;
 
-    static { GL.initialize(); }
-
     protected ARBProgramInterfaceQuery() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBProvokingVertex.java
Patch:
@@ -30,6 +30,8 @@
  */
 public class ARBProvokingVertex {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code mode} parameter of ProvokingVertex. */
     public static final int
         GL_FIRST_VERTEX_CONVENTION = 0x8E4D,
@@ -40,8 +42,6 @@ public class ARBProvokingVertex {
         GL_PROVOKING_VERTEX                         = 0x8E4F,
         GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;
 
-    static { GL.initialize(); }
-
     protected ARBProvokingVertex() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBRobustness.java
Patch:
@@ -75,6 +75,8 @@
  */
 public class ARBRobustness {
 
+    static { GL.initialize(); }
+
     /** Returned by GetGraphicsResetStatusARB. */
     public static final int
         GL_GUILTY_CONTEXT_RESET_ARB   = 0x8253,
@@ -92,8 +94,6 @@ public class ARBRobustness {
     /** Returned by GetIntegerv when {@code pname} is CONTEXT_FLAGS. */
     public static final int GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x4;
 
-    static { GL.initialize(); }
-
     protected ARBRobustness() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSampleLocations.java
Patch:
@@ -36,6 +36,8 @@
  */
 public class ARBSampleLocations {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int
         GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB           = 0x933D,
@@ -51,8 +53,6 @@ public class ARBSampleLocations {
         GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = 0x9342,
         GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB    = 0x9343;
 
-    static { GL.initialize(); }
-
     protected ARBSampleLocations() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSampleShading.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class ARBSampleShading {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Enable, Disable, and IsEnabled, and by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev.
@@ -37,8 +39,6 @@ public class ARBSampleShading {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetDoublev, GetIntegerv, and GetFloatv. */
     public static final int GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37;
 
-    static { GL.initialize(); }
-
     protected ARBSampleShading() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSamplerObjects.java
Patch:
@@ -29,11 +29,11 @@
  */
 public class ARBSamplerObjects {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code value} parameter of the GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv and GetDoublev functions. */
     public static final int GL_SAMPLER_BINDING = 0x8919;
 
-    static { GL.initialize(); }
-
     protected ARBSamplerObjects() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSeparateShaderObjects.java
Patch:
@@ -63,6 +63,8 @@
  */
 public class ARBSeparateShaderObjects {
 
+    static { GL.initialize(); }
+
     /** Accepted by {@code stages} parameter to UseProgramStages. */
     public static final int
         GL_VERTEX_SHADER_BIT          = 0x1,
@@ -81,8 +83,6 @@ public class ARBSeparateShaderObjects {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int GL_PROGRAM_PIPELINE_BINDING = 0x825A;
 
-    static { GL.initialize(); }
-
     protected ARBSeparateShaderObjects() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBShaderAtomicCounters.java
Patch:
@@ -40,6 +40,8 @@
  */
 public class ARBShaderAtomicCounters {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of BindBufferBase and BindBufferRange. */
     public static final int GL_ATOMIC_COUNTER_BUFFER = 0x92C0;
 
@@ -91,8 +93,6 @@ public class ARBShaderAtomicCounters {
     /** Returned in {@code params} by GetActiveUniform and GetActiveUniformsiv. */
     public static final int GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
 
-    static { GL.initialize(); }
-
     protected ARBShaderAtomicCounters() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBShaderImageLoadStore.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class ARBShaderImageLoadStore {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, GetDoublev, and GetInteger64v. */
     public static final int
         GL_MAX_IMAGE_UNITS                               = 0x8F38,
@@ -121,8 +123,6 @@ public class ARBShaderImageLoadStore {
         GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE  = 0x90C8,
         GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9;
 
-    static { GL.initialize(); }
-
     protected ARBShaderImageLoadStore() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBShaderObjects.java
Patch:
@@ -42,6 +42,8 @@
  */
 public class ARBShaderObjects {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} argument of GetHandleARB. */
     public static final int GL_PROGRAM_OBJECT_ARB = 0x8B40;
 
@@ -86,8 +88,6 @@ public class ARBShaderObjects {
         GL_SAMPLER_2D_RECT_ARB        = 0x8B63,
         GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64;
 
-    static { GL.initialize(); }
-
     protected ARBShaderObjects() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBShaderStorageBufferObject.java
Patch:
@@ -33,6 +33,8 @@
  */
 public class ARBShaderStorageBufferObject {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, and GetBufferPointerv. */
     public static final int GL_SHADER_STORAGE_BUFFER = 0x90D2;
 
@@ -66,8 +68,6 @@ public class ARBShaderStorageBufferObject {
     /** Also, add a new alias for the existing token MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS. */
     public static final int GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39;
 
-    static { GL.initialize(); }
-
     protected ARBShaderStorageBufferObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBShaderSubroutine.java
Patch:
@@ -22,6 +22,8 @@
  */
 public class ARBShaderSubroutine {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetProgramStageiv. */
     public static final int
         GL_ACTIVE_SUBROUTINES                   = 0x8DE5,
@@ -40,8 +42,6 @@ public class ARBShaderSubroutine {
         GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A,
         GL_COMPATIBLE_SUBROUTINES     = 0x8E4B;
 
-    static { GL.initialize(); }
-
     protected ARBShaderSubroutine() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBShadingLanguageInclude.java
Patch:
@@ -74,6 +74,8 @@
  */
 public class ARBShadingLanguageInclude {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of NamedStringARB. */
     public static final int GL_SHADER_INCLUDE_ARB = 0x8DAE;
 
@@ -82,8 +84,6 @@ public class ARBShadingLanguageInclude {
         GL_NAMED_STRING_LENGTH_ARB = 0x8DE9,
         GL_NAMED_STRING_TYPE_ARB   = 0x8DEA;
 
-    static { GL.initialize(); }
-
     protected ARBShadingLanguageInclude() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSparseBuffer.java
Patch:
@@ -18,14 +18,14 @@
  */
 public class ARBSparseBuffer {
 
+    static { GL.initialize(); }
+
     /** Accepted as part of the {@code flags} parameter to {@link GL44C#glBufferStorage BufferStorage}. */
     public static final int GL_SPARSE_STORAGE_BIT_ARB = 0x400;
 
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetDoublev, GetFloatv, GetIntegerv, and GetInteger64v. */
     public static final int GL_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8;
 
-    static { GL.initialize(); }
-
     protected ARBSparseBuffer() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSparseTexture.java
Patch:
@@ -22,6 +22,8 @@
  */
 public class ARBSparseTexture {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter to TexParameter{i f}{v}, TexParameterI{u}v, GetTexParameter{if}v and GetTexParameterIi{u}v. */
     public static final int
         GL_TEXTURE_SPARSE_ARB          = 0x91A6,
@@ -44,8 +46,6 @@ public class ARBSparseTexture {
         GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB        = 0x919A,
         GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9;
 
-    static { GL.initialize(); }
-
     protected ARBSparseTexture() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSync.java
Patch:
@@ -30,6 +30,8 @@
  */
 public class ARBSync {
 
+    static { GL.initialize(); }
+
     /** Accepted as the {@code pname} parameter of GetInteger64v. */
     public static final int GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;
 
@@ -64,8 +66,6 @@ public class ARBSync {
         GL_CONDITION_SATISFIED = 0x911C,
         GL_WAIT_FAILED         = 0x911D;
 
-    static { GL.initialize(); }
-
     protected ARBSync() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTessellationShader.java
Patch:
@@ -52,6 +52,8 @@
  */
 public class ARBTessellationShader {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code mode} parameter of Begin and all vertex array functions that implicitly call Begin. */
     public static final int GL_PATCHES = 0xE;
 
@@ -108,8 +110,6 @@ public class ARBTessellationShader {
         GL_TESS_EVALUATION_SHADER = 0x8E87,
         GL_TESS_CONTROL_SHADER    = 0x8E88;
 
-    static { GL.initialize(); }
-
     protected ARBTessellationShader() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTextureBufferObject.java
Patch:
@@ -32,6 +32,8 @@
  */
 public class ARBTextureBufferObject {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameter of BindBuffer, BufferData, BufferSubData, MapBuffer, MapBufferRangeARB, BindTexture, UnmapBuffer,
      * GetBufferSubData, GetBufferParameteriv, GetBufferPointerv, and TexBufferARB, and the {@code pname} parameter of GetBooleanv, GetDoublev, GetFloatv, and
@@ -46,8 +48,6 @@ public class ARBTextureBufferObject {
         GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D,
         GL_TEXTURE_BUFFER_FORMAT_ARB             = 0x8C2E;
 
-    static { GL.initialize(); }
-
     protected ARBTextureBufferObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTextureBufferRange.java
Patch:
@@ -19,6 +19,8 @@
  */
 public class ARBTextureBufferRange {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetTexLevelParameter. */
     public static final int
         GL_TEXTURE_BUFFER_OFFSET = 0x919D,
@@ -27,8 +29,6 @@ public class ARBTextureBufferRange {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F;
 
-    static { GL.initialize(); }
-
     protected ARBTextureBufferRange() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTextureCompression.java
Patch:
@@ -39,6 +39,8 @@
  */
 public class ARBTextureCompression {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code internalformat} parameter of TexImage1D, TexImage2D, TexImage3D, CopyTexImage1D, and CopyTexImage2D. */
     public static final int
         GL_COMPRESSED_ALPHA_ARB           = 0x84E9,
@@ -61,8 +63,6 @@ public class ARBTextureCompression {
         GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2,
         GL_COMPRESSED_TEXTURE_FORMATS_ARB     = 0x86A3;
 
-    static { GL.initialize(); }
-
     protected ARBTextureCompression() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTextureMultisample.java
Patch:
@@ -26,6 +26,8 @@
  */
 public class ARBTextureMultisample {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetMultisamplefv. */
     public static final int GL_SAMPLE_POSITION = 0x8E50;
 
@@ -73,8 +75,6 @@ public class ARBTextureMultisample {
         GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY          = 0x910C,
         GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
 
-    static { GL.initialize(); }
-
     protected ARBTextureMultisample() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTextureStorage.java
Patch:
@@ -27,11 +27,11 @@
  */
 public class ARBTextureStorage {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code value} parameter of GetTexParameter{if}v. */
     public static final int GL_TEXTURE_IMMUTABLE_FORMAT = 0x912F;
 
-    static { GL.initialize(); }
-
     protected ARBTextureStorage() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTextureView.java
Patch:
@@ -34,6 +34,8 @@
  */
 public class ARBTextureView {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetTexParameterfv and GetTexParameteriv. */
     public static final int
         GL_TEXTURE_VIEW_MIN_LEVEL   = 0x82DB,
@@ -42,8 +44,6 @@ public class ARBTextureView {
         GL_TEXTURE_VIEW_NUM_LAYERS  = 0x82DE,
         GL_TEXTURE_IMMUTABLE_LEVELS = 0x82DF;
 
-    static { GL.initialize(); }
-
     protected ARBTextureView() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTimerQuery.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class ARBTimerQuery {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of BeginQuery, EndQuery, and GetQueryiv. */
     public static final int GL_TIME_ELAPSED = 0x88BF;
 
@@ -37,8 +39,6 @@ public class ARBTimerQuery {
      */
     public static final int GL_TIMESTAMP = 0x8E28;
 
-    static { GL.initialize(); }
-
     protected ARBTimerQuery() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTransformFeedback2.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class ARBTransformFeedback2 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of BindTransformFeedback. */
     public static final int GL_TRANSFORM_FEEDBACK = 0x8E22;
 
@@ -40,8 +42,6 @@ public class ARBTransformFeedback2 {
         GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24,
         GL_TRANSFORM_FEEDBACK_BINDING       = 0x8E25;
 
-    static { GL.initialize(); }
-
     protected ARBTransformFeedback2() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTransformFeedback3.java
Patch:
@@ -45,13 +45,13 @@
  */
 public class ARBTransformFeedback3 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetDoublev, GetIntegerv, and GetFloatv. */
     public static final int
         GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70,
         GL_MAX_VERTEX_STREAMS             = 0x8E71;
 
-    static { GL.initialize(); }
-
     protected ARBTransformFeedback3() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBTransposeMatrix.java
Patch:
@@ -28,15 +28,15 @@
  */
 public class ARBTransposeMatrix {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_TRANSPOSE_MODELVIEW_MATRIX_ARB  = 0x84E3,
         GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4,
         GL_TRANSPOSE_TEXTURE_MATRIX_ARB    = 0x84E5,
         GL_TRANSPOSE_COLOR_MATRIX_ARB      = 0x84E6;
 
-    static { GL.initialize(); }
-
     protected ARBTransposeMatrix() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBUniformBufferObject.java
Patch:
@@ -89,6 +89,8 @@
  */
 public class ARBUniformBufferObject {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, and GetBufferPointerv. */
     public static final int GL_UNIFORM_BUFFER = 0x8A11;
 
@@ -143,8 +145,6 @@ public class ARBUniformBufferObject {
     /** Returned by GetActiveUniformsiv and GetUniformBlockIndex. */
     public static final int GL_INVALID_INDEX = 0xFFFFFFFF;
 
-    static { GL.initialize(); }
-
     protected ARBUniformBufferObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexArrayObject.java
Patch:
@@ -23,11 +23,11 @@
  */
 public class ARBVertexArrayObject {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_VERTEX_ARRAY_BINDING = 0x85B5;
 
-    static { GL.initialize(); }
-
     protected ARBVertexArrayObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexAttrib64Bit.java
Patch:
@@ -39,6 +39,8 @@
  */
 public class ARBVertexAttrib64Bit {
 
+    static { GL.initialize(); }
+
     /** Returned in the {@code type} parameter of GetActiveAttrib. */
     public static final int
         GL_DOUBLE_VEC2   = 0x8FFC,
@@ -54,8 +56,6 @@ public class ARBVertexAttrib64Bit {
         GL_DOUBLE_MAT4x2 = 0x8F4D,
         GL_DOUBLE_MAT4x3 = 0x8F4E;
 
-    static { GL.initialize(); }
-
     protected ARBVertexAttrib64Bit() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexAttribBinding.java
Patch:
@@ -41,6 +41,8 @@
  */
 public class ARBVertexAttribBinding {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetVertexAttrib*v. */
     public static final int
         GL_VERTEX_ATTRIB_BINDING         = 0x82D4,
@@ -58,8 +60,6 @@ public class ARBVertexAttribBinding {
         GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9,
         GL_MAX_VERTEX_ATTRIB_BINDINGS        = 0x82DA;
 
-    static { GL.initialize(); }
-
     protected ARBVertexAttribBinding() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexBlend.java
Patch:
@@ -24,6 +24,8 @@
  */
 public class ARBVertexBlend {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code value} parameters of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_MAX_VERTEX_UNITS_ARB    = 0x86A4,
@@ -90,8 +92,6 @@ public class ARBVertexBlend {
      */
     public static final int GL_WEIGHT_ARRAY_ARB = 0x86AD;
 
-    static { GL.initialize(); }
-
     protected ARBVertexBlend() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexBufferObject.java
Patch:
@@ -58,6 +58,8 @@
  */
 public class ARBVertexBufferObject {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBufferARB, BufferDataARB, BufferSubDataARB, MapBufferARB, UnmapBufferARB, GetBufferSubDataARB,
      * GetBufferParameterivARB, and GetBufferPointervARB.
@@ -111,8 +113,6 @@ public class ARBVertexBufferObject {
     /** Accepted by the {@code pname} parameter of GetBufferPointervARB. */
     public static final int GL_BUFFER_MAP_POINTER_ARB = 0x88BD;
 
-    static { GL.initialize(); }
-
     protected ARBVertexBufferObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexProgram.java
Patch:
@@ -50,6 +50,8 @@
  */
 public class ARBVertexProgram {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Disable, Enable, and IsEnabled, by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev, and by the {@code target} parameter of ProgramStringARB, BindProgramARB, ProgramEnvParameter4[df][v]ARB, ProgramLocalParameter4[df][v]ARB,
@@ -161,8 +163,6 @@ public class ARBVertexProgram {
         GL_MATRIX30_ARB = 0x88DE,
         GL_MATRIX31_ARB = 0x88DF;
 
-    static { GL.initialize(); }
-
     protected ARBVertexProgram() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexShader.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class ARBVertexShader {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code shaderType} argument of CreateShaderObjectARB and returned by the {@code params} parameter of GetObjectParameter{if}vARB. */
     public static final int GL_VERTEX_SHADER_ARB = 0x8B31;
 
@@ -78,8 +80,6 @@ public class ARBVertexShader {
         GL_FLOAT_MAT3_ARB = 0x8B5B,
         GL_FLOAT_MAT4_ARB = 0x8B5C;
 
-    static { GL.initialize(); }
-
     protected ARBVertexShader() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBVertexType2_10_10_10_REV.java
Patch:
@@ -20,14 +20,14 @@
  */
 public class ARBVertexType2_10_10_10_REV {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code type} parameter of VertexAttribPointer, VertexPointer, NormalPointer, ColorPointer, SecondaryColorPointer, TexCoordPointer,
      * VertexAttribP{1234}ui, VertexP*, TexCoordP*, MultiTexCoordP*, NormalP3ui, ColorP*, SecondaryColorP and VertexAttribP*.
      */
     public static final int GL_INT_2_10_10_10_REV = 0x8D9F;
 
-    static { GL.initialize(); }
-
     protected ARBVertexType2_10_10_10_REV() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBViewportArray.java
Patch:
@@ -29,6 +29,8 @@
  */
 public class ARBViewportArray {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, GetDoublev and GetInteger64v. */
     public static final int
         GL_MAX_VIEWPORTS                   = 0x825B,
@@ -40,8 +42,6 @@ public class ARBViewportArray {
     /** Returned in the {@code data} parameter from a Get query with a {@code pname} of LAYER_PROVOKING_VERTEX or VIEWPORT_INDEX_PROVOKING_VERTEX. */
     public static final int GL_UNDEFINED_VERTEX = 0x8260;
 
-    static { GL.initialize(); }
-
     protected ARBViewportArray() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTBindableUniform.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class EXTBindableUniform {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT   = 0x8DE2,
@@ -34,8 +36,6 @@ public class EXTBindableUniform {
     /** Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, and GetBufferPointerv. */
     public static final int GL_UNIFORM_BUFFER_EXT = 0x8DEE;
 
-    static { GL.initialize(); }
-
     protected EXTBindableUniform() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTBlendColor.java
Patch:
@@ -17,6 +17,8 @@
  */
 public class EXTBlendColor {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code sfactor} and {@code dfactor} parameters of BlendFunc. */
     public static final int
         GL_CONSTANT_COLOR_EXT           = 0x8001,
@@ -27,8 +29,6 @@ public class EXTBlendColor {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_BLEND_COLOR_EXT = 0x8005;
 
-    static { GL.initialize(); }
-
     protected EXTBlendColor() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTBlendEquationSeparate.java
Patch:
@@ -23,13 +23,13 @@
  */
 public class EXTBlendEquationSeparate {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_BLEND_EQUATION_RGB_EXT   = 0x8009,
         GL_BLEND_EQUATION_ALPHA_EXT = 0x883D;
 
-    static { GL.initialize(); }
-
     protected EXTBlendEquationSeparate() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTBlendFuncSeparate.java
Patch:
@@ -17,15 +17,15 @@
  */
 public class EXTBlendFuncSeparate {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_BLEND_DST_RGB_EXT   = 0x80C8,
         GL_BLEND_SRC_RGB_EXT   = 0x80C9,
         GL_BLEND_DST_ALPHA_EXT = 0x80CA,
         GL_BLEND_SRC_ALPHA_EXT = 0x80CB;
 
-    static { GL.initialize(); }
-
     protected EXTBlendFuncSeparate() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTBlendMinmax.java
Patch:
@@ -20,6 +20,8 @@
  */
 public class EXTBlendMinmax {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code mode} parameter of BlendEquationEXT. */
     public static final int
         GL_FUNC_ADD_EXT = 0x8006,
@@ -29,8 +31,6 @@ public class EXTBlendMinmax {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_BLEND_EQUATION_EXT = 0x8009;
 
-    static { GL.initialize(); }
-
     protected EXTBlendMinmax() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTCompiledVertexArray.java
Patch:
@@ -21,13 +21,13 @@
  */
 public class EXTCompiledVertexArray {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8,
         GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9;
 
-    static { GL.initialize(); }
-
     protected EXTCompiledVertexArray() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTDebugLabel.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class EXTDebugLabel {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of LabelObjectEXT and GetObjectLabelEXT. */
     public static final int
         GL_BUFFER_OBJECT_EXT           = 0x9151,
@@ -37,8 +39,6 @@ public class EXTDebugLabel {
         GL_QUERY_OBJECT_EXT            = 0x9153,
         GL_PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F;
 
-    static { GL.initialize(); }
-
     protected EXTDebugLabel() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTDepthBoundsTest.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class EXTDepthBoundsTest {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Enable, Disable, and IsEnabled, and by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev.
@@ -44,8 +46,6 @@ public class EXTDepthBoundsTest {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_DEPTH_BOUNDS_EXT = 0x8891;
 
-    static { GL.initialize(); }
-
     protected EXTDepthBoundsTest() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTDirectStateAccess.java
Patch:
@@ -169,14 +169,14 @@
  */
 public class EXTDirectStateAccess {
 
+    static { GL.initialize(); }
+
     /** GetBooleani_v, GetIntegeri_v, GetFloati_vEXT, GetDoublei_vEXT. */
     public static final int
         GL_PROGRAM_MATRIX_EXT             = 0x8E2D,
         GL_TRANSPOSE_PROGRAM_MATRIX_EXT   = 0x8E2E,
         GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F;
 
-    static { GL.initialize(); }
-
     protected EXTDirectStateAccess() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTFramebufferBlit.java
Patch:
@@ -18,6 +18,8 @@
  */
 public class EXTFramebufferBlit {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameter of BindFramebufferEXT, CheckFramebufferStatusEXT, FramebufferTexture{1D|2D|3D}EXT, FramebufferRenderbufferEXT,
      * and GetFramebufferAttachmentParameterivEXT.
@@ -31,8 +33,6 @@ public class EXTFramebufferBlit {
         GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6,
         GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA;
 
-    static { GL.initialize(); }
-
     protected EXTFramebufferBlit() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTFramebufferMultisample.java
Patch:
@@ -54,6 +54,8 @@
  */
 public class EXTFramebufferMultisample {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetRenderbufferParameterivEXT. */
     public static final int GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB;
 
@@ -63,8 +65,6 @@ public class EXTFramebufferMultisample {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_MAX_SAMPLES_EXT = 0x8D57;
 
-    static { GL.initialize(); }
-
     protected EXTFramebufferMultisample() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTFramebufferObject.java
Patch:
@@ -60,6 +60,8 @@
  */
 public class EXTFramebufferObject {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameter of BindFramebufferEXT, CheckFramebufferStatusEXT, FramebufferTexture{1D|2D|3D}EXT, FramebufferRenderbufferEXT,
      * and GetFramebufferAttachmentParameterivEXT.
@@ -141,8 +143,6 @@ public class EXTFramebufferObject {
     /** Returned by GetError(). */
     public static final int GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x506;
 
-    static { GL.initialize(); }
-
     protected EXTFramebufferObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTGPUShader4.java
Patch:
@@ -69,6 +69,8 @@
  */
 public class EXTGPUShader4 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetVertexAttribdv, GetVertexAttribfv, GetVertexAttribiv, GetVertexAttribIuivEXT and GetVertexAttribIivEXT. */
     public static final int GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD;
 
@@ -105,8 +107,6 @@ public class EXTGPUShader4 {
         GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904,
         GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905;
 
-    static { GL.initialize(); }
-
     protected EXTGPUShader4() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTGeometryShader4.java
Patch:
@@ -29,6 +29,8 @@
  */
 public class EXTGeometryShader4 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of CreateShader and returned by the {@code params} parameter of GetShaderiv. */
     public static final int GL_GEOMETRY_SHADER_EXT = 0x8DD9;
 
@@ -71,8 +73,6 @@ public class EXTGeometryShader4 {
      */
     public static final int GL_PROGRAM_POINT_SIZE_EXT = 0x8642;
 
-    static { GL.initialize(); }
-
     protected EXTGeometryShader4() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTMemoryObject.java
Patch:
@@ -41,6 +41,8 @@
  */
 public class EXTMemoryObject {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code pname} parameter of TexParameter{ifx}{v}, TexParameterI{i ui}v, TextureParameter{if}{v}, TextureParameterI{i ui}v,
      * GetTexParameter{if}v, GetTexParameterI{i ui}v, GetTextureParameter{if}v, and GetTextureParameterI{i ui}v.
@@ -77,8 +79,6 @@ public class EXTMemoryObject {
     /** Constant values. */
     public static final int GL_UUID_SIZE_EXT = 16;
 
-    static { GL.initialize(); }
-
     protected EXTMemoryObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTMemoryObjectFD.java
Patch:
@@ -17,11 +17,11 @@
  */
 public class EXTMemoryObjectFD {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code handleType} parameter of {@link #glImportMemoryFdEXT ImportMemoryFdEXT} */
     public static final int GL_HANDLE_TYPE_OPAQUE_FD_EXT = 0x9586;
 
-    static { GL.initialize(); }
-
     protected EXTMemoryObjectFD() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTMemoryObjectWin32.java
Patch:
@@ -17,6 +17,8 @@
  */
 public class EXTMemoryObjectWin32 {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code handleType} parameter of {@link #glImportMemoryWin32HandleEXT ImportMemoryWin32HandleEXT}, {@link #glImportMemoryWin32NameEXT ImportMemoryWin32NameEXT}, {@link EXTSemaphoreWin32#glImportSemaphoreWin32HandleEXT ImportSemaphoreWin32HandleEXT}, and
      * {@link EXTSemaphoreWin32#glImportSemaphoreWin32NameEXT ImportSemaphoreWin32NameEXT}.
@@ -46,8 +48,6 @@ public class EXTMemoryObjectWin32 {
     /** Accepted by the {@code handleType} parameter of {@link #glImportMemoryWin32HandleEXT ImportMemoryWin32HandleEXT}. */
     public static final int GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = 0x958C;
 
-    static { GL.initialize(); }
-
     protected EXTMemoryObjectWin32() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTPointParameters.java
Patch:
@@ -59,15 +59,15 @@
  */
 public class EXTPointParameters {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of glPointParameterfvEXT, and the {@code pname} of glGet. */
     public static final int
         GL_POINT_SIZE_MIN_EXT            = 0x8126,
         GL_POINT_SIZE_MAX_EXT            = 0x8127,
         GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128,
         GL_DISTANCE_ATTENUATION_EXT      = 0x8129;
 
-    static { GL.initialize(); }
-
     protected EXTPointParameters() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTPolygonOffsetClamp.java
Patch:
@@ -19,11 +19,11 @@
  */
 public class EXTPolygonOffsetClamp {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int GL_POLYGON_OFFSET_CLAMP_EXT = 0x8E1B;
 
-    static { GL.initialize(); }
-
     protected EXTPolygonOffsetClamp() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTProvokingVertex.java
Patch:
@@ -30,6 +30,8 @@
  */
 public class EXTProvokingVertex {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code mode} parameter of ProvokingVertexEXT. */
     public static final int
         GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D,
@@ -40,8 +42,6 @@ public class EXTProvokingVertex {
         GL_PROVOKING_VERTEX_EXT                         = 0x8E4F,
         GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C;
 
-    static { GL.initialize(); }
-
     protected EXTProvokingVertex() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTRasterMultisample.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class EXTRasterMultisample {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code cap} parameter of Enable, Disable, IsEnabled. */
     public static final int GL_RASTER_MULTISAMPLE_EXT = 0x9327;
 
@@ -34,8 +36,6 @@ public class EXTRasterMultisample {
         GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x932B,
         GL_EFFECTIVE_RASTER_SAMPLES_EXT          = 0x932C;
 
-    static { GL.initialize(); }
-
     protected EXTRasterMultisample() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTSecondaryColor.java
Patch:
@@ -21,6 +21,8 @@
  */
 public class EXTSecondaryColor {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Enable, Disable, and IsEnabled, and by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev.
@@ -40,8 +42,6 @@ public class EXTSecondaryColor {
     /** Accepted by the {@code array} parameter of EnableClientState and DisableClientState. */
     public static final int GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E;
 
-    static { GL.initialize(); }
-
     protected EXTSecondaryColor() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTSemaphore.java
Patch:
@@ -39,6 +39,8 @@
  */
 public class EXTSemaphore {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code pname} parameter of GetBooleanv, GetDoublev, GetFloatv, GetIntegerv, GetInteger64v, {@link #glGetUnsignedBytevEXT GetUnsignedBytevEXT}, and the
      * {@code target} parameter of GetBooleani_v, GetIntegeri_v,GetFloati_v, GetDoublei_v, GetInteger64i_v, and {@link #glGetUnsignedBytei_vEXT GetUnsignedBytei_vEXT}.
@@ -63,8 +65,6 @@ public class EXTSemaphore {
         GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = 0x9530,
         GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = 0x9531;
 
-    static { GL.initialize(); }
-
     protected EXTSemaphore() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTSemaphoreFD.java
Patch:
@@ -17,11 +17,11 @@
  */
 public class EXTSemaphoreFD {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code handleType} parameter of {@link #glImportSemaphoreFdEXT ImportSemaphoreFdEXT}. */
     public static final int GL_HANDLE_TYPE_OPAQUE_FD_EXT = 0x9586;
 
-    static { GL.initialize(); }
-
     protected EXTSemaphoreFD() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTSemaphoreWin32.java
Patch:
@@ -17,6 +17,8 @@
  */
 public class EXTSemaphoreWin32 {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code handleType} parameter of {@link EXTMemoryObjectWin32#glImportMemoryWin32HandleEXT ImportMemoryWin32HandleEXT}, {@link EXTMemoryObjectWin32#glImportMemoryWin32NameEXT ImportMemoryWin32NameEXT}, {@link #glImportSemaphoreWin32HandleEXT ImportSemaphoreWin32HandleEXT}, and
      * {@link #glImportSemaphoreWin32NameEXT ImportSemaphoreWin32NameEXT}.
@@ -43,8 +45,6 @@ public class EXTSemaphoreWin32 {
     /** Accepted by the {@code pname} parameter of {@link EXTSemaphore#glSemaphoreParameterui64vEXT SemaphoreParameterui64vEXT} and {@link EXTSemaphore#glGetSemaphoreParameterui64vEXT GetSemaphoreParameterui64vEXT}. */
     public static final int GL_D3D12_FENCE_VALUE_EXT = 0x9595;
 
-    static { GL.initialize(); }
-
     protected EXTSemaphoreWin32() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTSeparateShaderObjects.java
Patch:
@@ -52,11 +52,11 @@
  */
 public class EXTSeparateShaderObjects {
 
+    static { GL.initialize(); }
+
     /** Accepted by {@code type} parameter to GetIntegerv and GetFloatv. */
     public static final int GL_ACTIVE_PROGRAM_EXT = 0x8B8D;
 
-    static { GL.initialize(); }
-
     protected EXTSeparateShaderObjects() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTShaderImageLoadStore.java
Patch:
@@ -38,6 +38,8 @@
  */
 public class EXTShaderImageLoadStore {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_MAX_IMAGE_UNITS_EXT                               = 0x8F38,
@@ -105,8 +107,6 @@ public class EXTShaderImageLoadStore {
         GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT       = 0x906B,
         GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C;
 
-    static { GL.initialize(); }
-
     protected EXTShaderImageLoadStore() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTStencilClearTag.java
Patch:
@@ -45,13 +45,13 @@
  */
 public class EXTStencilClearTag {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int
         GL_STENCIL_TAG_BITS_EXT        = 0x88F2,
         GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3;
 
-    static { GL.initialize(); }
-
     protected EXTStencilClearTag() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTStencilTwoSide.java
Patch:
@@ -16,6 +16,8 @@
  */
 public class EXTStencilTwoSide {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Enable, Disable, and IsEnabled, and by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev.
@@ -25,8 +27,6 @@ public class EXTStencilTwoSide {
     /** Accepted by the {@code pname} parameters of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_ACTIVE_STENCIL_FACE_EXT = 0x8911;
 
-    static { GL.initialize(); }
-
     protected EXTStencilTwoSide() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTTextureArray.java
Patch:
@@ -32,6 +32,8 @@
  */
 public class EXTTextureArray {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of TexParameteri, TexParameteriv, TexParameterf, TexParameterfv, GenerateMipmapEXT, and BindTexture. */
     public static final int
         GL_TEXTURE_1D_ARRAY_EXT = 0x8C18,
@@ -75,8 +77,6 @@ public class EXTTextureArray {
         GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3,
         GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4;
 
-    static { GL.initialize(); }
-
     protected EXTTextureArray() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTTextureBufferObject.java
Patch:
@@ -33,6 +33,8 @@
  */
 public class EXTTextureBufferObject {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameter of BindBuffer, BufferData, BufferSubData, MapBuffer, BindTexture, UnmapBuffer, GetBufferSubData,
      * GetBufferParameteriv, GetBufferPointerv, and TexBufferEXT, and the {@code pname} parameter of GetBooleanv, GetDoublev, GetFloatv, and GetIntegerv.
@@ -46,8 +48,6 @@ public class EXTTextureBufferObject {
         GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D,
         GL_TEXTURE_BUFFER_FORMAT_EXT             = 0x8C2E;
 
-    static { GL.initialize(); }
-
     protected EXTTextureBufferObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTTextureInteger.java
Patch:
@@ -53,6 +53,8 @@
  */
 public class EXTTextureInteger {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameters of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_RGBA_INTEGER_MODE_EXT = 0x8D9E;
 
@@ -108,8 +110,6 @@ public class EXTTextureInteger {
         GL_LUMINANCE_INTEGER_EXT       = 0x8D9C,
         GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D;
 
-    static { GL.initialize(); }
-
     protected EXTTextureInteger() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTTimerQuery.java
Patch:
@@ -33,11 +33,11 @@
  */
 public class EXTTimerQuery {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of BeginQuery, EndQuery, and GetQueryiv. */
     public static final int GL_TIME_ELAPSED_EXT = 0x88BF;
 
-    static { GL.initialize(); }
-
     protected EXTTimerQuery() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTTransformFeedback.java
Patch:
@@ -42,6 +42,8 @@
  */
 public class EXTTransformFeedback {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * BindBufferRangeEXT, BindBufferOffsetEXT and BindBufferBaseEXT.
@@ -87,8 +89,6 @@ public class EXTTransformFeedback {
         GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT        = 0x8C7F,
         GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76;
 
-    static { GL.initialize(); }
-
     protected EXTTransformFeedback() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTVertexAttrib64bit.java
Patch:
@@ -43,6 +43,8 @@
  */
 public class EXTVertexAttrib64bit {
 
+    static { GL.initialize(); }
+
     /** Returned in the {@code type} parameter of GetActiveAttrib. */
     public static final int
         GL_DOUBLE_VEC2_EXT   = 0x8FFC,
@@ -58,8 +60,6 @@ public class EXTVertexAttrib64bit {
         GL_DOUBLE_MAT4x2_EXT = 0x8F4D,
         GL_DOUBLE_MAT4x3_EXT = 0x8F4E;
 
-    static { GL.initialize(); }
-
     protected EXTVertexAttrib64bit() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTWindowRectangles.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class EXTWindowRectangles {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code mode} parameter of {@link #glWindowRectanglesEXT WindowRectanglesEXT}. */
     public static final int
         GL_INCLUSIVE_EXT = 0x8F10,
@@ -54,8 +56,6 @@ public class EXTWindowRectangles {
         GL_MAX_WINDOW_RECTANGLES_EXT = 0x8F14,
         GL_NUM_WINDOW_RECTANGLES_EXT = 0x8F15;
 
-    static { GL.initialize(); }
-
     protected EXTWindowRectangles() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTX11SyncObject.java
Patch:
@@ -29,11 +29,11 @@
  */
 public class EXTX11SyncObject {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code external_sync_type} parameter of ImportSyncEXT. */
     public static final int GL_SYNC_X11_FENCE_EXT = 0x90E1;
 
-    static { GL.initialize(); }
-
     protected EXTX11SyncObject() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL11.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class GL11 {
 
+    static { GL.initialize(); }
+
     /** AccumOp */
     public static final int
         GL_ACCUM  = 0x100,
@@ -705,8 +707,6 @@ public class GL11 {
         GL_T2F_C4F_N3F_V3F             = 0x2A2C,
         GL_T4F_C4F_N3F_V4F             = 0x2A2D;
 
-    static { GL.initialize(); }
-
     protected GL11() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL11C.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class GL11C {
 
+    static { GL.initialize(); }
+
     /** AlphaFunction */
     public static final int
         GL_NEVER    = 0x200,
@@ -320,8 +322,6 @@ public class GL11C {
     /** vertex_array */
     public static final int GL_VERTEX_ARRAY = 0x8074;
 
-    static { GL.initialize(); }
-
     protected GL11C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL12.java
Patch:
@@ -40,6 +40,8 @@
  */
 public class GL12 extends GL11 {
 
+    static { GL.initialize(); }
+
     /** Aliases for smooth points and lines. */
     public static final int
         GL_ALIASED_POINT_SIZE_RANGE      = 0x846D,
@@ -134,8 +136,6 @@ public class GL12 extends GL11 {
         GL_MAX_ELEMENTS_VERTICES = 0x80E8,
         GL_MAX_ELEMENTS_INDICES  = 0x80E9;
 
-    static { GL.initialize(); }
-
     protected GL12() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL12C.java
Patch:
@@ -42,6 +42,8 @@
  */
 public class GL12C extends GL11C {
 
+    static { GL.initialize(); }
+
     /** Aliases for smooth points and lines. */
     public static final int
         GL_ALIASED_LINE_WIDTH_RANGE      = 0x846E,
@@ -121,8 +123,6 @@ public class GL12C extends GL11C {
         GL_MAX_ELEMENTS_VERTICES = 0x80E8,
         GL_MAX_ELEMENTS_INDICES  = 0x80E9;
 
-    static { GL.initialize(); }
-
     protected GL12C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL13.java
Patch:
@@ -34,6 +34,8 @@
  */
 public class GL13 extends GL12 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code internalformat} parameter of TexImage1D, TexImage2D, TexImage3D, CopyTexImage1D, and CopyTexImage2D. */
     public static final int
         GL_COMPRESSED_ALPHA           = 0x84E9,
@@ -208,8 +210,6 @@ public class GL13 extends GL12 {
         GL_TRANSPOSE_TEXTURE_MATRIX    = 0x84E5,
         GL_TRANSPOSE_COLOR_MATRIX      = 0x84E6;
 
-    static { GL.initialize(); }
-
     protected GL13() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL13C.java
Patch:
@@ -29,6 +29,8 @@
  */
 public class GL13C extends GL12C {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code internalformat} parameter of TexImage1D, TexImage2D, TexImage3D, CopyTexImage1D, and CopyTexImage2D. */
     public static final int
         GL_COMPRESSED_RGB  = 0x84ED,
@@ -137,8 +139,6 @@ public class GL13C extends GL12C {
      */
     public static final int GL_CLAMP_TO_BORDER = 0x812D;
 
-    static { GL.initialize(); }
-
     protected GL13C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL14.java
Patch:
@@ -38,6 +38,8 @@
  */
 public class GL14 extends GL13 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of TexParameteri, TexParameterf, TexParameteriv, TexParameterfv, GetTexParameteriv, and GetTexParameterfv. */
     public static final int GL_GENERATE_MIPMAP = 0x8191;
 
@@ -161,8 +163,6 @@ public class GL14 extends GL13 {
      */
     public static final int GL_MIRRORED_REPEAT = 0x8370;
 
-    static { GL.initialize(); }
-
     protected GL14() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL14C.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class GL14C extends GL13C {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code sfactor} and {@code dfactor} parameters of BlendFunc. */
     public static final int
         GL_CONSTANT_COLOR           = 0x8001,
@@ -97,8 +99,6 @@ public class GL14C extends GL13C {
      */
     public static final int GL_MIRRORED_REPEAT = 0x8370;
 
-    static { GL.initialize(); }
-
     protected GL14C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL15.java
Patch:
@@ -26,6 +26,8 @@
  */
 public class GL15 extends GL14 {
 
+    static { GL.initialize(); }
+
     /** New token names. */
     public static final int
         GL_FOG_COORD_SRC                  = 0x8450,
@@ -109,8 +111,6 @@ public class GL15 extends GL14 {
         GL_QUERY_RESULT           = 0x8866,
         GL_QUERY_RESULT_AVAILABLE = 0x8867;
 
-    static { GL.initialize(); }
-
     protected GL15() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL15C.java
Patch:
@@ -32,6 +32,8 @@
  */
 public class GL15C extends GL14C {
 
+    static { GL.initialize(); }
+
     /** New token names. */
     public static final int GL_SRC1_ALPHA = 0x8589;
 
@@ -92,8 +94,6 @@ public class GL15C extends GL14C {
         GL_QUERY_RESULT           = 0x8866,
         GL_QUERY_RESULT_AVAILABLE = 0x8867;
 
-    static { GL.initialize(); }
-
     protected GL15C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL20.java
Patch:
@@ -30,6 +30,8 @@
  */
 public class GL20 extends GL15 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code name} parameter of GetString. */
     public static final int GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
 
@@ -170,8 +172,6 @@ public class GL20 extends GL15 {
         GL_STENCIL_BACK_VALUE_MASK      = 0x8CA4,
         GL_STENCIL_BACK_WRITEMASK       = 0x8CA5;
 
-    static { GL.initialize(); }
-
     protected GL20() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL20C.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class GL20C extends GL15C {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code name} parameter of GetString. */
     public static final int GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
 
@@ -160,8 +162,6 @@ public class GL20C extends GL15C {
         GL_STENCIL_BACK_VALUE_MASK      = 0x8CA4,
         GL_STENCIL_BACK_WRITEMASK       = 0x8CA5;
 
-    static { GL.initialize(); }
-
     protected GL20C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL21.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class GL21 extends GL20 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F;
 
@@ -63,8 +65,6 @@ public class GL21 extends GL20 {
         GL_COMPRESSED_SLUMINANCE       = 0x8C4A,
         GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;
 
-    static { GL.initialize(); }
-
     protected GL21() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL21C.java
Patch:
@@ -27,6 +27,8 @@
  */
 public class GL21C extends GL20C {
 
+    static { GL.initialize(); }
+
     /** Returned by the {@code type} parameter of GetActiveUniform. */
     public static final int
         GL_FLOAT_MAT2x3 = 0x8B65,
@@ -58,8 +60,6 @@ public class GL21C extends GL20C {
         GL_COMPRESSED_SRGB       = 0x8C48,
         GL_COMPRESSED_SRGB_ALPHA = 0x8C49;
 
-    static { GL.initialize(); }
-
     protected GL21C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL30.java
Patch:
@@ -42,6 +42,8 @@
  */
 public class GL30 extends GL21 {
 
+    static { GL.initialize(); }
+
     /** GetTarget */
     public static final int
         GL_MAJOR_VERSION                       = 0x821B,
@@ -474,8 +476,6 @@ public class GL30 extends GL21 {
      */
     public static final int GL_FRAMEBUFFER_SRGB = 0x8DB9;
 
-    static { GL.initialize(); }
-
     protected GL30() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL30C.java
Patch:
@@ -48,6 +48,8 @@
  */
 public class GL30C extends GL21C {
 
+    static { GL.initialize(); }
+
     /** GetTarget */
     public static final int
         GL_MAJOR_VERSION                       = 0x821B,
@@ -472,8 +474,6 @@ public class GL30C extends GL21C {
      */
     public static final int GL_FRAMEBUFFER_SRGB = 0x8DB9;
 
-    static { GL.initialize(); }
-
     protected GL30C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL31.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class GL31 extends GL30 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code internalFormat} parameter of TexImage1D, TexImage2D, and TexImage3D. */
     public static final int
         GL_R8_SNORM     = 0x8F94,
@@ -159,8 +161,6 @@ public class GL31 extends GL30 {
     /** Returned by GetActiveUniformsiv and GetUniformBlockIndex. */
     public static final int GL_INVALID_INDEX = 0xFFFFFFFF;
 
-    static { GL.initialize(); }
-
     protected GL31() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL31C.java
Patch:
@@ -36,6 +36,8 @@
  */
 public class GL31C extends GL30C {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code internalFormat} parameter of TexImage1D, TexImage2D, and TexImage3D. */
     public static final int
         GL_R8_SNORM     = 0x8F94,
@@ -164,8 +166,6 @@ public class GL31C extends GL30C {
     /** Returned by GetActiveUniformsiv and GetUniformBlockIndex. */
     public static final int GL_INVALID_INDEX = 0xFFFFFFFF;
 
-    static { GL.initialize(); }
-
     protected GL31C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL32.java
Patch:
@@ -34,6 +34,8 @@
  */
 public class GL32 extends GL31 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetIntegerv. */
     public static final int GL_CONTEXT_PROFILE_MASK = 0x9126;
 
@@ -187,8 +189,6 @@ public class GL32 extends GL31 {
         GL_CONDITION_SATISFIED = 0x911C,
         GL_WAIT_FAILED         = 0x911D;
 
-    static { GL.initialize(); }
-
     protected GL32() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL32C.java
Patch:
@@ -39,6 +39,8 @@
  */
 public class GL32C extends GL31C {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetIntegerv. */
     public static final int GL_CONTEXT_PROFILE_MASK = 0x9126;
 
@@ -192,8 +194,6 @@ public class GL32C extends GL31C {
         GL_CONDITION_SATISFIED = 0x911C,
         GL_WAIT_FAILED         = 0x911D;
 
-    static { GL.initialize(); }
-
     protected GL32C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL33.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class GL33 extends GL32 {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code src} and {@code dst} parameters of BlendFunc and BlendFunci, and by the {@code srcRGB}, {@code dstRGB}, {@code srcAlpha} and
      * {@code dstAlpha} parameters of BlendFuncSeparate and BlendFuncSeparatei.
@@ -87,8 +89,6 @@ public class GL33 extends GL32 {
      */
     public static final int GL_INT_2_10_10_10_REV = 0x8D9F;
 
-    static { GL.initialize(); }
-
     protected GL33() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL33C.java
Patch:
@@ -36,6 +36,8 @@
  */
 public class GL33C extends GL32C {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code src} and {@code dst} parameters of BlendFunc and BlendFunci, and by the {@code srcRGB}, {@code dstRGB}, {@code srcAlpha} and
      * {@code dstAlpha} parameters of BlendFuncSeparate and BlendFuncSeparatei.
@@ -88,8 +90,6 @@ public class GL33C extends GL32C {
      */
     public static final int GL_INT_2_10_10_10_REV = 0x8D9F;
 
-    static { GL.initialize(); }
-
     protected GL33C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL40.java
Patch:
@@ -36,6 +36,8 @@
  */
 public class GL40 extends GL33 {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * MapBufferRange, FlushMappedBufferRange, GetBufferParameteriv, and CopyBufferSubData.
@@ -188,8 +190,6 @@ public class GL40 extends GL33 {
         GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70,
         GL_MAX_VERTEX_STREAMS             = 0x8E71;
 
-    static { GL.initialize(); }
-
     protected GL40() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL40C.java
Patch:
@@ -41,6 +41,8 @@
  */
 public class GL40C extends GL33C {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * MapBufferRange, FlushMappedBufferRange, GetBufferParameteriv, and CopyBufferSubData.
@@ -193,8 +195,6 @@ public class GL40C extends GL33C {
         GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70,
         GL_MAX_VERTEX_STREAMS             = 0x8E71;
 
-    static { GL.initialize(); }
-
     protected GL40C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL41.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class GL41 extends GL40 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code value} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int
         GL_SHADER_COMPILER                  = 0x8DFA,
@@ -97,8 +99,6 @@ public class GL41 extends GL40 {
     /** Returned in the {@code data} parameter from a Get query with a {@code pname} of LAYER_PROVOKING_VERTEX or VIEWPORT_INDEX_PROVOKING_VERTEX. */
     public static final int GL_UNDEFINED_VERTEX = 0x8260;
 
-    static { GL.initialize(); }
-
     protected GL41() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL41C.java
Patch:
@@ -36,6 +36,8 @@
  */
 public class GL41C extends GL40C {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code value} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int
         GL_SHADER_COMPILER                  = 0x8DFA,
@@ -102,8 +104,6 @@ public class GL41C extends GL40C {
     /** Returned in the {@code data} parameter from a Get query with a {@code pname} of LAYER_PROVOKING_VERTEX or VIEWPORT_INDEX_PROVOKING_VERTEX. */
     public static final int GL_UNDEFINED_VERTEX = 0x8260;
 
-    static { GL.initialize(); }
-
     protected GL41C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL42.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class GL42 extends GL41 {
 
+    static { GL.initialize(); }
+
     /** Renamed tokens. */
     public static final int
         GL_COPY_READ_BUFFER_BINDING  = GL31.GL_COPY_READ_BUFFER,
@@ -203,8 +205,6 @@ public class GL42 extends GL41 {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
 
-    static { GL.initialize(); }
-
     protected GL42() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL42C.java
Patch:
@@ -36,6 +36,8 @@
  */
 public class GL42C extends GL41C {
 
+    static { GL.initialize(); }
+
     /** Renamed tokens. */
     public static final int
         GL_COPY_READ_BUFFER_BINDING  = GL31.GL_COPY_READ_BUFFER,
@@ -208,8 +210,6 @@ public class GL42C extends GL41C {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
 
-    static { GL.initialize(); }
-
     protected GL42C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL43.java
Patch:
@@ -48,6 +48,8 @@
  */
 public class GL43 extends GL42 {
 
+    static { GL.initialize(); }
+
     /** No. of supported Shading Language Versions. Accepted by the {@code pname} parameter of GetIntegerv. */
     public static final int GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9;
 
@@ -442,8 +444,6 @@ public class GL43 extends GL42 {
         GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9,
         GL_MAX_VERTEX_ATTRIB_BINDINGS        = 0x82DA;
 
-    static { GL.initialize(); }
-
     protected GL43() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL43C.java
Patch:
@@ -53,6 +53,8 @@
  */
 public class GL43C extends GL42C {
 
+    static { GL.initialize(); }
+
     /** No. of supported Shading Language Versions. Accepted by the {@code pname} parameter of GetIntegerv. */
     public static final int GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9;
 
@@ -446,8 +448,6 @@ public class GL43C extends GL42C {
         GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9,
         GL_MAX_VERTEX_ATTRIB_BINDINGS        = 0x82DA;
 
-    static { GL.initialize(); }
-
     protected GL43C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL44.java
Patch:
@@ -33,6 +33,8 @@
  */
 public class GL44 extends GL43 {
 
+    static { GL.initialize(); }
+
     /** Implementation-dependent state which constrains the maximum value of stride parameters to vertex array pointer-setting commands. */
     public static final int GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5;
 
@@ -97,8 +99,6 @@ public class GL44 extends GL43 {
      */
     public static final int GL_MIRROR_CLAMP_TO_EDGE = 0x8743;
 
-    static { GL.initialize(); }
-
     protected GL44() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL44C.java
Patch:
@@ -37,6 +37,8 @@
  */
 public class GL44C extends GL43C {
 
+    static { GL.initialize(); }
+
     /** Implementation-dependent state which constrains the maximum value of stride parameters to vertex array pointer-setting commands. */
     public static final int GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5;
 
@@ -101,8 +103,6 @@ public class GL44C extends GL43C {
      */
     public static final int GL_MIRROR_CLAMP_TO_EDGE = 0x8743;
 
-    static { GL.initialize(); }
-
     protected GL44C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL45.java
Patch:
@@ -41,6 +41,8 @@
  */
 public class GL45 extends GL44 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code depth} parameter of {@link #glClipControl ClipControl}. */
     public static final int
         GL_NEGATIVE_ONE_TO_ONE = 0x935E,
@@ -95,8 +97,6 @@ public class GL45 extends GL44 {
     /** Returned by {@link GL11C#glGetError GetError}. */
     public static final int GL_CONTEXT_LOST = 0x507;
 
-    static { GL.initialize(); }
-
     protected GL45() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL45C.java
Patch:
@@ -42,6 +42,8 @@
  */
 public class GL45C extends GL44C {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code depth} parameter of {@link #glClipControl ClipControl}. */
     public static final int
         GL_NEGATIVE_ONE_TO_ONE = 0x935E,
@@ -96,8 +98,6 @@ public class GL45C extends GL44C {
     /** Returned by {@link GL11C#glGetError GetError}. */
     public static final int GL_CONTEXT_LOST = 0x507;
 
-    static { GL.initialize(); }
-
     protected GL45C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL46.java
Patch:
@@ -34,6 +34,8 @@
  */
 public class GL46 extends GL45 {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * MapBufferRange, FlushMappedBufferRange, GetBufferParameteriv, and CopyBufferSubData.
@@ -91,8 +93,6 @@ public class GL46 extends GL45 {
         GL_TRANSFORM_FEEDBACK_OVERFLOW        = 0x82EC,
         GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED;
 
-    static { GL.initialize(); }
-
     protected GL46() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL46C.java
Patch:
@@ -39,6 +39,8 @@
  */
 public class GL46C extends GL45C {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * MapBufferRange, FlushMappedBufferRange, GetBufferParameteriv, and CopyBufferSubData.
@@ -96,8 +98,6 @@ public class GL46C extends GL45C {
         GL_TRANSFORM_FEEDBACK_OVERFLOW        = 0x82EC,
         GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED;
 
-    static { GL.initialize(); }
-
     protected GL46C() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/INTELMapTexture.java
Patch:
@@ -33,6 +33,8 @@
  */
 public class INTELMapTexture {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of TexParameteri, for target TEXTURE_2D. */
     public static final int GL_TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF;
 
@@ -42,8 +44,6 @@ public class INTELMapTexture {
         GL_LAYOUT_LINEAR_INTEL            = 1,
         GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = 2;
 
-    static { GL.initialize(); }
-
     protected INTELMapTexture() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/INTELPerformanceQuery.java
Patch:
@@ -45,6 +45,8 @@
  */
 public class INTELPerformanceQuery {
 
+    static { GL.initialize(); }
+
     /** Returned by the capsMask parameter of GetPerfQueryInfoINTEL. */
     public static final int
         GL_PERFQUERY_SINGLE_CONTEXT_INTEL = 0x0,
@@ -82,8 +84,6 @@ public class INTELPerformanceQuery {
     /** Accepted by the {@code pname} parameter of GetBooleanv. */
     public static final int GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500;
 
-    static { GL.initialize(); }
-
     protected INTELPerformanceQuery() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/KHRBlendEquationAdvanced.java
Patch:
@@ -50,6 +50,8 @@
  */
 public class KHRBlendEquationAdvanced {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code mode} parameter of BlendEquation and BlendEquationi. */
     public static final int
         GL_MULTIPLY_KHR       = 0x9294,
@@ -68,8 +70,6 @@ public class KHRBlendEquationAdvanced {
         GL_HSL_COLOR_KHR      = 0x92AF,
         GL_HSL_LUMINOSITY_KHR = 0x92B0;
 
-    static { GL.initialize(); }
-
     protected KHRBlendEquationAdvanced() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/KHRDebug.java
Patch:
@@ -82,6 +82,8 @@
  */
 public class KHRDebug {
 
+    static { GL.initialize(); }
+
     /** Tokens accepted by the {@code target} parameters of Enable, Disable, and IsEnabled. */
     public static final int
         GL_DEBUG_OUTPUT             = 0x92E0,
@@ -155,8 +157,6 @@ public class KHRDebug {
         GL_SAMPLER          = 0x82E6,
         GL_DISPLAY_LIST     = 0x82E7;
 
-    static { GL.initialize(); }
-
     protected KHRDebug() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/KHRParallelShaderCompile.java
Patch:
@@ -16,14 +16,14 @@
  */
 public class KHRParallelShaderCompile {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int GL_MAX_SHADER_COMPILER_THREADS_KHR = 0x91B0;
 
     /** Accepted as part of the {@code pname} parameter to {@link GL20C#glGetShaderiv GetShaderiv} and accepted as part of the {@code pname} parameter to {@link GL20C#glGetProgramiv GetProgramiv}. */
     public static final int GL_COMPLETION_STATUS_KHR = 0x91B1;
 
-    static { GL.initialize(); }
-
     protected KHRParallelShaderCompile() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/KHRRobustness.java
Patch:
@@ -48,6 +48,8 @@
  */
 public class KHRRobustness {
 
+    static { GL.initialize(); }
+
     /** Returned by {@link #glGetGraphicsResetStatus GetGraphicsResetStatus}. */
     public static final int
         GL_NO_ERROR               = 0x0,
@@ -68,8 +70,6 @@ public class KHRRobustness {
     /** Returned by {@link GL11C#glGetError GetError}. */
     public static final int GL_CONTEXT_LOST = 0x507;
 
-    static { GL.initialize(); }
-
     protected KHRRobustness() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVAlphaToCoverageDitherControl.java
Patch:
@@ -15,6 +15,8 @@
  */
 public class NVAlphaToCoverageDitherControl {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code param} parameter of {@link #glAlphaToCoverageDitherControlNV AlphaToCoverageDitherControlNV}. */
     public static final int
         GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV = 0x934D,
@@ -24,8 +26,6 @@ public class NVAlphaToCoverageDitherControl {
     /** Accepted by the {@code param} of {@link GL11C#glGetIntegerv GetIntegerv}. */
     public static final int GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV = 0x92BF;
 
-    static { GL.initialize(); }
-
     protected NVAlphaToCoverageDitherControl() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVBlendEquationAdvanced.java
Patch:
@@ -20,6 +20,8 @@
  */
 public class NVBlendEquationAdvanced {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of BlendParameteriNV, GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int
         GL_BLEND_PREMULTIPLIED_SRC_NV = 0x9280,
@@ -78,8 +80,6 @@ public class NVBlendEquationAdvanced {
         GL_GREEN_NV              = 0x1904,
         GL_BLUE_NV               = 0x1905;
 
-    static { GL.initialize(); }
-
     protected NVBlendEquationAdvanced() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVClipSpaceWScaling.java
Patch:
@@ -29,6 +29,8 @@
  */
 public class NVClipSpaceWScaling {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code cap} parameter of Enable, Disable, IsEnabled. */
     public static final int GL_VIEWPORT_POSITION_W_SCALE_NV = 0x937C;
 
@@ -37,8 +39,6 @@ public class NVClipSpaceWScaling {
         GL_VIEWPORT_POSITION_W_SCALE_X_COEFF = 0x937D,
         GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF = 0x937E;
 
-    static { GL.initialize(); }
-
     protected NVClipSpaceWScaling() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVCommandList.java
Patch:
@@ -156,6 +156,8 @@
  */
 public class NVCommandList {
 
+    static { GL.initialize(); }
+
     /** Used in DrawCommandsStates buffer formats, in GetCommandHeaderNV to return the header. */
     public static final int
         GL_TERMINATE_SEQUENCE_COMMAND_NV      = 0x0,
@@ -178,8 +180,6 @@ public class NVCommandList {
         GL_SCISSOR_COMMAND_NV                 = 0x11,
         GL_FRONT_FACE_COMMAND_NV              = 0x12;
 
-    static { GL.initialize(); }
-
     protected NVCommandList() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVConditionalRender.java
Patch:
@@ -27,15 +27,15 @@
  */
 public class NVConditionalRender {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code mode} parameter of BeginConditionalRenderNV. */
     public static final int
         GL_QUERY_WAIT_NV              = 0x8E13,
         GL_QUERY_NO_WAIT_NV           = 0x8E14,
         GL_QUERY_BY_REGION_WAIT_NV    = 0x8E15,
         GL_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16;
 
-    static { GL.initialize(); }
-
     protected NVConditionalRender() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVConservativeRaster.java
Patch:
@@ -22,6 +22,8 @@
  */
 public class NVConservativeRaster {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code cap} parameter of Enable, Disable, IsEnabled. */
     public static final int GL_CONSERVATIVE_RASTERIZATION_NV = 0x9346;
 
@@ -31,8 +33,6 @@ public class NVConservativeRaster {
         GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV   = 0x9348,
         GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = 0x9349;
 
-    static { GL.initialize(); }
-
     protected NVConservativeRaster() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVConservativeRasterDilate.java
Patch:
@@ -21,14 +21,14 @@
  */
 public class NVConservativeRasterDilate {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of ConservativeRasterParameterfNV, GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int
         GL_CONSERVATIVE_RASTER_DILATE_NV             = 0x9379,
         GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV       = 0x937A,
         GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = 0x937B;
 
-    static { GL.initialize(); }
-
     protected NVConservativeRasterDilate() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVConservativeRasterPreSnapTriangles.java
Patch:
@@ -24,6 +24,8 @@
  */
 public class NVConservativeRasterPreSnapTriangles {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of ConservativeRasterParameteriNV. */
     public static final int GL_CONSERVATIVE_RASTER_MODE_NV = 0x954D;
 
@@ -32,8 +34,6 @@ public class NVConservativeRasterPreSnapTriangles {
         GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV          = 0x954E,
         GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = 0x954F;
 
-    static { GL.initialize(); }
-
     protected NVConservativeRasterPreSnapTriangles() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVDepthBufferFloat.java
Patch:
@@ -27,6 +27,8 @@
  */
 public class NVDepthBufferFloat {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code internalformat} parameter of TexImage1D, TexImage2D, TexImage3D, CopyTexImage1D, CopyTexImage2D, and RenderbufferStorageEXT, and
      * returned in the {@code data} parameter of GetTexLevelParameter and GetRenderbufferParameterivEXT.
@@ -44,8 +46,6 @@ public class NVDepthBufferFloat {
     /** Accepted by the {@code pname} parameters of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF;
 
-    static { GL.initialize(); }
-
     protected NVDepthBufferFloat() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVExplicitMultisample.java
Patch:
@@ -31,6 +31,8 @@
  */
 public class NVExplicitMultisample {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetMultisamplefvNV. */
     public static final int GL_SAMPLE_POSITION_NV = 0x8E50;
 
@@ -58,8 +60,6 @@ public class NVExplicitMultisample {
         GL_INT_SAMPLER_RENDERBUFFER_NV          = 0x8E57,
         GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58;
 
-    static { GL.initialize(); }
-
     protected NVExplicitMultisample() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVFence.java
Patch:
@@ -35,6 +35,8 @@
  */
 public class NVFence {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code condition} parameter of SetFenceNV. */
     public static final int GL_ALL_COMPLETED_NV = 0x84F2;
 
@@ -43,8 +45,6 @@ public class NVFence {
         GL_FENCE_STATUS_NV    = 0x84F3,
         GL_FENCE_CONDITION_NV = 0x84F4;
 
-    static { GL.initialize(); }
-
     protected NVFence() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVFragmentCoverageToColor.java
Patch:
@@ -21,14 +21,14 @@
  */
 public class NVFragmentCoverageToColor {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code cap} parameter of Enable, Disable, IsEnabled. */
     public static final int GL_FRAGMENT_COVERAGE_TO_COLOR_NV = 0x92DD;
 
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetDoublev, GetIntegerv, and GetFloatv. */
     public static final int GL_FRAGMENT_COVERAGE_COLOR_NV = 0x92DE;
 
-    static { GL.initialize(); }
-
     protected NVFragmentCoverageToColor() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVFramebufferMixedSamples.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class NVFramebufferMixedSamples {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code cap} parameter of Enable, Disable, IsEnabled. */
     public static final int
         GL_RASTER_MULTISAMPLE_EXT       = 0x9327,
@@ -48,8 +50,6 @@ public class NVFramebufferMixedSamples {
         GL_COVERAGE_MODULATION_NV                = 0x9332,
         GL_COVERAGE_MODULATION_TABLE_SIZE_NV     = 0x9333;
 
-    static { GL.initialize(); }
-
     protected NVFramebufferMixedSamples() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVFramebufferMultisampleCoverage.java
Patch:
@@ -25,6 +25,8 @@
  */
 public class NVFramebufferMultisampleCoverage {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetRenderbufferParameterivEXT. */
     public static final int
         GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB,
@@ -35,8 +37,6 @@ public class NVFramebufferMultisampleCoverage {
         GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11,
         GL_MULTISAMPLE_COVERAGE_MODES_NV     = 0x8E12;
 
-    static { GL.initialize(); }
-
     protected NVFramebufferMultisampleCoverage() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVGPUMulticast.java
Patch:
@@ -45,6 +45,8 @@
  */
 public class NVGPUMulticast {
 
+    static { GL.initialize(); }
+
     /** Accepted in the {@code flags} parameter of BufferStorage and NamedBufferStorageEXT. */
     public static final int GL_PER_GPU_STORAGE_BIT_NV = 0x800;
 
@@ -63,8 +65,6 @@ public class NVGPUMulticast {
     /** Accepted by the {@code pname} parameter of GetMultisamplefv. */
     public static final int GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9549;
 
-    static { GL.initialize(); }
-
     protected NVGPUMulticast() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVGPUShader5.java
Patch:
@@ -61,6 +61,8 @@
  */
 public class NVGPUShader5 {
 
+    static { GL.initialize(); }
+
     /** Returned by the {@code type} parameter of GetActiveAttrib, GetActiveUniform, and GetTransformFeedbackVarying. */
     public static final int
         GL_INT64_NV               = 0x140E,
@@ -92,8 +94,6 @@ public class NVGPUShader5 {
         GL_FLOAT16_VEC3_NV        = 0x8FFA,
         GL_FLOAT16_VEC4_NV        = 0x8FFB;
 
-    static { GL.initialize(); }
-
     protected NVGPUShader5() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVHalfFloat.java
Patch:
@@ -27,15 +27,15 @@
  */
 public class NVHalfFloat {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code type} argument of VertexPointer, NormalPointer, ColorPointer, TexCoordPointer, FogCoordPointerEXT, SecondaryColorPointerEXT,
      * VertexWeightPointerEXT, VertexAttribPointerNV, DrawPixels, ReadPixels, TexImage1D, TexImage2D, TexImage3D, TexSubImage1D, TexSubImage2D, TexSubImage3D,
      * and GetTexImage.
      */
     public static final int GL_HALF_FLOAT_NV = 0x140B;
 
-    static { GL.initialize(); }
-
     protected NVHalfFloat() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVInternalformatSampleQuery.java
Patch:
@@ -43,15 +43,15 @@
  */
 public class NVInternalformatSampleQuery {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetInternalformatSampleivNV */
     public static final int
         GL_MULTISAMPLES_NV        = 0x9371,
         GL_SUPERSAMPLE_SCALE_X_NV = 0x9372,
         GL_SUPERSAMPLE_SCALE_Y_NV = 0x9373,
         GL_CONFORMANT_NV          = 0x9374;
 
-    static { GL.initialize(); }
-
     protected NVInternalformatSampleQuery() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVMemoryAttachment.java
Patch:
@@ -24,6 +24,8 @@
  */
 public class NVMemoryAttachment {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code pname} parameter of TexParameter{ifx}{v}, TexParameterI{i ui}v, TextureParameter{if}{v}, TextureParameterI{i ui}v,
      * GetTexParameter{if}v, GetTexParameterI{i ui}v, GetTextureParameter{if}v, GetTextureParameterI{i ui}v, GetBufferParameter{i|i64}v and
@@ -53,8 +55,6 @@ public class NVMemoryAttachment {
         GL_MAX_DETACHED_TEXTURES_NV = 0x95AC,
         GL_MAX_DETACHED_BUFFERS_NV  = 0x95AD;
 
-    static { GL.initialize(); }
-
     protected NVMemoryAttachment() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVMeshShader.java
Patch:
@@ -19,6 +19,8 @@
  */
 public class NVMeshShader {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of {@link GL20C#glCreateShader CreateShader} and returned by the {@code params} parameter of {@link GL20C#glGetShaderiv GetShaderiv}. */
     public static final int
         GL_MESH_SHADER_NV = 0x9559,
@@ -97,8 +99,6 @@ public class NVMeshShader {
         GL_MESH_SHADER_BIT_NV = 0x40,
         GL_TASK_SHADER_BIT_NV = 0x80;
 
-    static { GL.initialize(); }
-
     protected NVMeshShader() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVPathRendering.java
Patch:
@@ -83,6 +83,8 @@
  */
 public class NVPathRendering {
 
+    static { GL.initialize(); }
+
     /** Accepted in elements of the {@code commands} array parameter of PathCommandsNV and PathSubCommandsNV. */
     public static final byte
         GL_CLOSE_PATH_NV                         = 0x0,
@@ -349,8 +351,6 @@ public class NVPathRendering {
         GL_OBJECT_LINEAR_NV = 0x2401,
         GL_CONSTANT_NV      = 0x8576;
 
-    static { GL.initialize(); }
-
     protected NVPathRendering() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVPixelDataRange.java
Patch:
@@ -48,6 +48,8 @@
  */
 public class NVPixelDataRange {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameter of PixelDataRangeNV and FlushPixelDataRangeNV, and by the {@code cap} parameter of EnableClientState,
      * DisableClientState, and IsEnabled.
@@ -66,8 +68,6 @@ public class NVPixelDataRange {
         GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C,
         GL_READ_PIXEL_DATA_RANGE_POINTER_NV  = 0x887D;
 
-    static { GL.initialize(); }
-
     protected NVPixelDataRange() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVPointSprite.java
Patch:
@@ -33,6 +33,8 @@
  */
 public class NVPointSprite {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of Enable, Disable, and IsEnabled, by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and
      * GetDoublev, and by the {@code target} parameter of TexEnvi, TexEnviv, TexEnvf, TexEnvfv, GetTexEnviv, and GetTexEnvfv.
@@ -51,8 +53,6 @@ public class NVPointSprite {
      */
     public static final int GL_POINT_SPRITE_R_MODE_NV = 0x8863;
 
-    static { GL.initialize(); }
-
     protected NVPointSprite() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVPrimitiveRestart.java
Patch:
@@ -26,6 +26,8 @@
  */
 public class NVPrimitiveRestart {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code array} parameter of EnableClientState and DisableClientState, by the {@code cap} parameter of IsEnabled, and by the {@code pname}
      * parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev.
@@ -35,8 +37,6 @@ public class NVPrimitiveRestart {
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetFloatv, and GetDoublev. */
     public static final int GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559;
 
-    static { GL.initialize(); }
-
     protected NVPrimitiveRestart() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVQueryResource.java
Patch:
@@ -32,6 +32,8 @@
  */
 public class NVQueryResource {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code queryType} parameter of {@link #glQueryResourceNV QueryResourceNV}. */
     public static final int GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV = 0x9540;
 
@@ -43,8 +45,6 @@ public class NVQueryResource {
         GL_QUERY_RESOURCE_RENDERBUFFER_NV   = 0x9546,
         GL_QUERY_RESOURCE_BUFFEROBJECT_NV   = 0x9547;
 
-    static { GL.initialize(); }
-
     protected NVQueryResource() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVSampleLocations.java
Patch:
@@ -36,6 +36,8 @@
  */
 public class NVSampleLocations {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBooleanv, GetIntegerv, GetInteger64v, GetFloatv, and GetDoublev. */
     public static final int
         GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV           = 0x933D,
@@ -53,8 +55,6 @@ public class NVSampleLocations {
         GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = 0x9342,
         GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV    = 0x9343;
 
-    static { GL.initialize(); }
-
     protected NVSampleLocations() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVScissorExclusive.java
Patch:
@@ -28,6 +28,8 @@
  */
 public class NVScissorExclusive {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of {@link CGL#CGLEnable Enable}, {@link CGL#CGLDisable Disable}, and {@link CGL#CGLIsEnabled IsEnabled}, by the {@code target} parameter of {@link GL30C#glEnablei Enablei}, {@link GL30C#glDisablei Disablei},
      * {@link GL30C#glIsEnabledi IsEnabledi}, {@link EXTDrawBuffers2#glEnableIndexedEXT EnableIndexedEXT}, {@link EXTDrawBuffers2#glDisableIndexedEXT DisableIndexedEXT}, and {@link EXTDrawBuffers2#glIsEnabledIndexedEXT IsEnabledIndexedEXT}, and by the {@code pname} parameter of {@link GL11C#glGetBooleanv GetBooleanv},
@@ -43,8 +45,6 @@ public class NVScissorExclusive {
      */
     public static final int GL_SCISSOR_BOX_EXCLUSIVE_NV = 0x9556;
 
-    static { GL.initialize(); }
-
     protected NVScissorExclusive() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVShaderBufferLoad.java
Patch:
@@ -89,6 +89,8 @@
  */
 public class NVShaderBufferLoad {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetBufferParameterui64vNV, GetNamedBufferParameterui64vNV. */
     public static final int GL_BUFFER_GPU_ADDRESS_NV = 0x8F1D;
 
@@ -98,8 +100,6 @@ public class NVShaderBufferLoad {
     /** Accepted by the {@code value} parameter of GetIntegerui64vNV. */
     public static final int GL_MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35;
 
-    static { GL.initialize(); }
-
     protected NVShaderBufferLoad() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVShadingRateImage.java
Patch:
@@ -43,6 +43,8 @@
  */
 public class NVShadingRateImage {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code cap} parameter of {@link CGL#CGLEnable Enable}, {@link CGL#CGLDisable Disable}, and {@link CGL#CGLIsEnabled IsEnabled}, by the {@code target} parameter of {@link GL30C#glEnablei Enablei}, {@link GL30C#glDisablei Disablei},
      * {@link GL30C#glIsEnabledi IsEnabledi}, {@link EXTDrawBuffers2#glEnableIndexedEXT EnableIndexedEXT}, {@link EXTDrawBuffers2#glDisableIndexedEXT DisableIndexedEXT}, and {@link EXTDrawBuffers2#glIsEnabledIndexedEXT IsEnabledIndexedEXT}, and by the {@code pname} parameter of {@link GL11C#glGetBooleanv GetBooleanv},
@@ -83,8 +85,6 @@ public class NVShadingRateImage {
         GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV  = 0x95AF,
         GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = 0x95B0;
 
-    static { GL.initialize(); }
-
     protected NVShadingRateImage() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVTextureMultisample.java
Patch:
@@ -17,13 +17,13 @@
  */
 public class NVTextureMultisample {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of GetTexLevelParameter. */
     public static final int
         GL_TEXTURE_COVERAGE_SAMPLES_NV = 0x9045,
         GL_TEXTURE_COLOR_SAMPLES_NV    = 0x9046;
 
-    static { GL.initialize(); }
-
     protected NVTextureMultisample() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVTimelineSemaphore.java
Patch:
@@ -25,6 +25,8 @@
  */
 public class NVTimelineSemaphore {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code pname} parameter of SemaphoreParameterivNV and GetSemaphoreParameterivNV. */
     public static final int GL_SEMAPHORE_TYPE_NV = 0x95B3;
 
@@ -39,8 +41,6 @@ public class NVTimelineSemaphore {
     /** Accepted by the {@code pname} parameter to GetIntegerv, GetFloatv, GetDoublev, GetInteger64v, and GetBooleanv. */
     public static final int GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV = 0x95B6;
 
-    static { GL.initialize(); }
-
     protected NVTimelineSemaphore() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVTransformFeedback.java
Patch:
@@ -41,6 +41,8 @@
  */
 public class NVTransformFeedback {
 
+    static { GL.initialize(); }
+
     /**
      * Accepted by the {@code target} parameters of BindBuffer, BufferData, BufferSubData, MapBuffer, UnmapBuffer, GetBufferSubData, GetBufferPointerv,
      * BindBufferRangeNV, BindBufferOffsetNV and BindBufferBaseNV.
@@ -103,8 +105,6 @@ public class NVTransformFeedback {
         GL_SECONDARY_COLOR_NV      = 0x852D,
         GL_LAYER_NV                = 0x8DAA;
 
-    static { GL.initialize(); }
-
     protected NVTransformFeedback() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVTransformFeedback2.java
Patch:
@@ -34,6 +34,8 @@
  */
 public class NVTransformFeedback2 {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code target} parameter of BindTransformFeedbackNV. */
     public static final int GL_TRANSFORM_FEEDBACK_NV = 0x8E22;
 
@@ -43,8 +45,6 @@ public class NVTransformFeedback2 {
         GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24,
         GL_TRANSFORM_FEEDBACK_BINDING_NV       = 0x8E25;
 
-    static { GL.initialize(); }
-
     protected NVTransformFeedback2() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVVertexArrayRange.java
Patch:
@@ -19,6 +19,8 @@
  */
 public class NVVertexArrayRange {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code cap} parameter of EnableClientState, DisableClientState, and IsEnabled. */
     public static final int GL_VERTEX_ARRAY_RANGE_NV = 0x851D;
 
@@ -31,8 +33,6 @@ public class NVVertexArrayRange {
     /** Accepted by the {@code pname} parameter of GetPointerv. */
     public static final int GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521;
 
-    static { GL.initialize(); }
-
     protected NVVertexArrayRange() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVVertexAttribInteger64bit.java
Patch:
@@ -27,13 +27,13 @@
  */
 public class NVVertexAttribInteger64bit {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code type} parameter of VertexAttribLPointerEXT, VertexArrayVertexAttribLOffsetEXT, and VertexAttribLFormatNV. */
     public static final int
         GL_INT64_NV          = 0x140E,
         GL_UNSIGNED_INT64_NV = 0x140F;
 
-    static { GL.initialize(); }
-
     protected NVVertexAttribInteger64bit() {
         throw new UnsupportedOperationException();
     }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVVertexBufferUnifiedMemory.java
Patch:
@@ -25,6 +25,8 @@
  */
 public class NVVertexBufferUnifiedMemory {
 
+    static { GL.initialize(); }
+
     /** Accepted by the {@code cap} parameter of DisableClientState, EnableClientState, IsEnabled. */
     public static final int
         GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E,
@@ -62,8 +64,6 @@ public class NVVertexBufferUnifiedMemory {
         GL_FOG_COORD_ARRAY_LENGTH_NV       = 0x8F32,
         GL_ELEMENT_ARRAY_LENGTH_NV         = 0x8F33;
 
-    static { GL.initialize(); }
-
     protected NVVertexBufferUnifiedMemory() {
         throw new UnsupportedOperationException();
     }

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/Demo.java
Patch:
@@ -920,7 +920,7 @@ static int loadDemoData(long vg, DemoData data) {
         }
 
         data.fontEmoji = nvgCreateFontMem(vg, "emoji", data.NotoEmojiRegular, 0);
-        if (data.fontBold == -1) {
+        if (data.fontEmoji == -1) {
             System.err.format("Could not add font emoji.\n");
             return -1;
         }

File: modules/lwjgl/core/src/main/java/org/lwjgl/Version.java
Patch:
@@ -12,8 +12,8 @@ public final class Version {
     /** Current version of library. */
     public static final int
         VERSION_MAJOR    = 3,
-        VERSION_MINOR    = 2,
-        VERSION_REVISION = 4;
+        VERSION_MINOR    = 3,
+        VERSION_REVISION = 0;
 
     /** The development state of the current build. */
     public static final BuildType BUILD_TYPE = BuildType.STABLE;

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWNativeEGL.java
Patch:
@@ -13,6 +13,7 @@
 
 import javax.annotation.*;
 import org.lwjgl.egl.EGL;
+import org.lwjgl.egl.EGL10;
 import org.lwjgl.opengles.GLES;
 
 import static org.lwjgl.system.MemoryUtil.*;

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CLCapabilities.java
Patch:
@@ -683,7 +683,7 @@ public class CLCapabilities {
     /**
      * This extension defines how modules using the SPIR-V extension {@code SPV_INTEL_media_block_io} may behave in an OpenCL environment.
      * 
-     * <p>Requires {@link CL21 OpenCL 2.1} and {@link  intel_media_block_io}.</p>
+     * <p>Requires {@link CL21 OpenCL 2.1} and <a target="_blank" href="http://www.khronos.org/registry/OpenCL/extensions/intel/cl_intel_media_block_io.txt">intel_spirv_media_block_io</a>.</p>
      */
     public final boolean cl_intel_spirv_media_block_io;
     /**

File: modules/lwjgl/core/src/main/resources/module-info.java
Patch:
@@ -7,7 +7,6 @@
 
     exports org.lwjgl;
     exports org.lwjgl.system;
-    exports org.lwjgl.system.dyncall;
     exports org.lwjgl.system.jni;
     exports org.lwjgl.system.libc;
     exports org.lwjgl.system.libffi;

File: modules/lwjgl/opencl/src/test/java/org/lwjgl/opencl/CLTest.java
Patch:
@@ -282,10 +282,10 @@ public void testEventCallback() {
                 clSetEventCallback(e, CL_COMPLETE, eventCallback = CLEventCallback.create((event, event_command_exec_status, user_data) -> {
                     assertEquals(event, e);
                     assertEquals(event_command_exec_status, CL_COMPLETE);
-                    assertEquals(user_data, 0xDEADBEEF);
+                    assertEquals(user_data, 0xDEADBEEFL);
 
                     eventLatch.countDown();
-                }), 0xDEADBEEF)
+                }), 0xDEADBEEFL)
             );
 
             checkCLError(clSetUserEventStatus(e, CL_COMPLETE));

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GLCapabilities.java
Patch:
@@ -7418,7 +7418,7 @@ private static boolean check_GL11(FunctionProvider provider, PointerBuffer caps,
             return false;
         }
 
-        int flag0 = ext.contains("GL_NV_vertex_buffer_unified_memory") ? 0 : Integer.MIN_VALUE;
+        int flag0 = fc || ext.contains("GL_NV_vertex_buffer_unified_memory") ? 0 : Integer.MIN_VALUE;
 
         return ((fc || checkFunctions(provider, caps, new int[] {
             2, 3, 4, 5, 6, 8, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 

File: modules/samples/src/test/java/org/lwjgl/demo/opengl/GLXGears.java
Patch:
@@ -81,7 +81,7 @@ public GLXGears() {
             ByteBuffer fs = ioResourceToByteBuffer("demo/gears/gears.frag", 4096);
 
             int version;
-            if (caps.OpenGL30) {
+            if (caps.OpenGL33) {
                 version = 330;
             } else if (caps.OpenGL21) {
                 version = 120;

File: modules/lwjgl/xxhash/src/generated/java/org/lwjgl/util/xxhash/XXHash.java
Patch:
@@ -652,7 +652,7 @@ public static XXH128Hash XXH128_hashFromCanonical(@NativeType("XXH128_canonical_
      * 
      * <p>The generated secret can then be used with any {@code *_withSecret()} variant. Functions {@link #XXH3_128bits_withSecret 3_128bits_withSecret}, {@link #XXH3_64bits_withSecret 3_64bits_withSecret},
      * {@link #XXH3_128bits_reset_withSecret 3_128bits_reset_withSecret} and {@link #XXH3_64bits_reset_withSecret 3_64bits_reset_withSecret} are part of this list. They all accept a {@code secret} parameter which must be very
-     * long for implementation reasons (&ge; {@link #XXH_3_SECRET_SIZE_MIN 3_SECRET_SIZE_MIN}) <i>and</i>> feature very high entropy (consist of random-looking bytes). These conditions can
+     * long for implementation reasons (&ge; {@link #XXH_3_SECRET_SIZE_MIN 3_SECRET_SIZE_MIN}) <i>and</i> feature very high entropy (consist of random-looking bytes). These conditions can
      * be a high bar to meet, so this function can be used to generate a secret of proper quality.</p>
      * 
      * <p>{@code customSeed} can be anything. It can have any size, even small ones, and its content can be anything, even stupidly "low entropy" source such as

File: modules/lwjgl/opengles/src/main/resources/module-info.java
Patch:
@@ -5,7 +5,5 @@
 module org.lwjgl.opengles {
     requires transitive org.lwjgl;
 
-    requires static org.lwjgl.egl;
-
     exports org.lwjgl.opengles;
 }
\ No newline at end of file

File: modules/lwjgl/opengles/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -119,7 +119,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
                     if (address == NULL) {
                         address = library.getFunctionAddress(functionName);
                         if (address == NULL && DEBUG_FUNCTIONS) {
-                            apiLog("Failed to locate address for GLES function " + functionName);
+                            apiLog("Failed to locate address for GLES function " + memASCII(functionName));
                         }
                     }
 

File: modules/lwjgl/egl/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -180,7 +180,7 @@ private static EGLCapabilities createClientCapabilities() {
             if (versionString == null) {
                 callI(functionProvider.getFunctionAddress("eglGetError")); // clear error
             } else {
-                APIVersion version = apiParseVersion(versionString, "EGL");
+                APIVersion version = apiParseVersion(versionString);
                 addEGLVersions(version.major, version.minor, ext);
             }
         }

File: modules/lwjgl/opencl/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -150,7 +150,7 @@ private boolean supportsOpenCL12(MemoryStack stack, long platform) {
                 return false;
             }
 
-            APIVersion apiVersion = apiParseVersion(memASCII(version, bytes - 1), "OpenCL");
+            APIVersion apiVersion = apiParseVersion(memASCII(version, bytes - 1));
             return 1 < apiVersion.major || 2 <= apiVersion.minor;
         }
 
@@ -268,7 +268,7 @@ public static CLCapabilities createPlatformCapabilities(long cl_platform_id) {
         }
 
         // Parse PLATFORM_VERSION string
-        APIVersion version = apiParseVersion(getPlatformInfoStringASCII(cl_platform_id, CL_PLATFORM_VERSION), "OpenCL");
+        APIVersion version = apiParseVersion(getPlatformInfoStringASCII(cl_platform_id, CL_PLATFORM_VERSION));
         CL.addCLVersions(version.major, version.minor, supportedExtensions);
 
         return new CLCapabilities(functionName -> getFunctionProvider().getFunctionAddress(cl_platform_id, functionName), supportedExtensions);
@@ -291,7 +291,7 @@ public static CLCapabilities createDeviceCapabilities(long cl_device_id, CLCapab
         CL.addExtensions(extensionsString, supportedExtensions);
 
         // Parse DEVICE_VERSION string
-        APIVersion version = apiParseVersion(getDeviceInfoStringASCII(cl_device_id, CL_DEVICE_VERSION), "OpenCL");
+        APIVersion version = apiParseVersion(getDeviceInfoStringASCII(cl_device_id, CL_DEVICE_VERSION));
         CL.addCLVersions(version.major, version.minor, supportedExtensions);
 
         return new CLCapabilities(platformCapabilities, supportedExtensions);

File: modules/lwjgl/opengles/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -266,7 +266,7 @@ public static GLESCapabilities createCapabilities(@Nullable IntFunction<PointerB
                         throw new IllegalStateException("There is no OpenGL ES context current in the current thread.");
                     }
 
-                    APIVersion version = apiParseVersion(versionString, "OpenGL ES");
+                    APIVersion version = apiParseVersion(versionString);
 
                     majorVersion = version.major;
                     minorVersion = version.minor;

File: modules/lwjgl/vulkan/src/main/java/org/lwjgl/vulkan/VK.java
Patch:
@@ -12,7 +12,6 @@
 import java.util.*;
 
 import static java.lang.Math.*;
-import static org.lwjgl.system.APIUtil.*;
 import static org.lwjgl.system.JNI.*;
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;

File: modules/lwjgl/shaderc/src/generated/java/org/lwjgl/util/shaderc/ShadercIncludeResult.java
Patch:
@@ -318,7 +318,7 @@ public static void ncontent(long struct, ByteBuffer value) {
     /** Sets the specified value to the {@code content_length} field of the specified {@code struct}. */
     public static void ncontent_length(long struct, long value) { memPutAddress(struct + ShadercIncludeResult.CONTENT_LENGTH, value); }
     /** Unsafe version of {@link #user_data(long) user_data}. */
-    public static void nuser_data(long struct, long value) { memPutAddress(struct + ShadercIncludeResult.USER_DATA, check(value)); }
+    public static void nuser_data(long struct, long value) { memPutAddress(struct + ShadercIncludeResult.USER_DATA, value); }
 
     /**
      * Validates pointer members that should not be {@code NULL}.
@@ -328,7 +328,6 @@ public static void ncontent(long struct, ByteBuffer value) {
     public static void validate(long struct) {
         check(memGetAddress(struct + ShadercIncludeResult.SOURCE_NAME));
         check(memGetAddress(struct + ShadercIncludeResult.CONTENT));
-        check(memGetAddress(struct + ShadercIncludeResult.USER_DATA));
     }
 
     /**

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL11C.java
Patch:
@@ -219,6 +219,9 @@ public class GL11C {
         GL_NAND          = 0x150E,
         GL_SET           = 0x150F;
 
+    /** Token accepted or provided by the {@code identifier} parameters of ObjectLabel and GetObjectLabel. */
+    public static final int GL_TEXTURE = 0x1702;
+
     /** PixelCopyType */
     public static final int
         GL_COLOR   = 0x1800,

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java
Patch:
@@ -615,7 +615,7 @@ private JNI() {}
     public static native long callPJPPPPP(long param0, long param1, long param2, long param3, long param4, long param5, long __functionAddress);
     public static native long callPPPJPPP(long param0, long param1, long param2, long param3, long param4, long param5, long __functionAddress);
     public static native long callPPPPPPP(long param0, int param1, long param2, long param3, long param4, long param5, long param6, long __functionAddress);
-    public static native long callPPPPPPP(long param0, int param1, long param2, long param3, int param4, long param5, long param6, long param7, long __functionAddress);
+    public static native long callPPPPPPPP(long param0, int param1, long param2, long param3, int param4, long param5, long param6, long param7, long param8, long __functionAddress);
     public static native long callPPPPPPPP(int param0, long param1, long param2, int param3, int param4, int param5, int param6, long param7, long param8, long param9, int param10, long param11, long param12, long __functionAddress);
     public static native long callPJPPPPPPP(long param0, long param1, long param2, long param3, long param4, long param5, long param6, long param7, long __functionAddress);
     public static native long callPPJPPPPPP(long param0, long param1, int param2, long param3, long param4, long param5, int param6, long param7, long param8, long param9, long __functionAddress);
@@ -1145,6 +1145,7 @@ private JNI() {}
     public static native long callPJPPPPP(long param0, long param1, long param2, long param3, @Nullable short[] param4, @Nullable int[] param5, long __functionAddress);
     public static native long callPPPJPPP(long param0, long param1, long param2, long param3, long param4, @Nullable int[] param5, long __functionAddress);
     public static native long callPPPPPPP(long param0, int param1, long param2, long param3, long param4, @Nullable int[] param5, @Nullable int[] param6, long __functionAddress);
+    public static native long callPPPPPPPP(long param0, int param1, long param2, long param3, int param4, long param5, long param6, long param7, @Nullable int[] param8, long __functionAddress);
     public static native long callPPPPPPPP(int param0, @Nullable int[] param1, @Nullable long[] param2, int param3, int param4, int param5, int param6, long param7, long param8, long param9, int param10, @Nullable int[] param11, @Nullable long[] param12, long __functionAddress);
     public static native long callPJPPPPPPP(long param0, long param1, long param2, long param3, long param4, long param5, long param6, @Nullable int[] param7, long __functionAddress);
     public static native long callPJPPPPPPP(long param0, long param1, long param2, long param3, long param4, long param5, @Nullable float[] param6, @Nullable int[] param7, long __functionAddress);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK10.java
Patch:
@@ -15100,7 +15100,7 @@ public static int VK_MAKE_VERSION(@NativeType("uint32_t") int major, @NativeType
      */
     @NativeType("uint32_t")
     public static int VK_VERSION_MAJOR(@NativeType("uint32_t") int version) {
-        return version >> 22;
+        return version >>> 22;
     }
 
     // --- [ VK_VERSION_MINOR ] ---
@@ -15112,7 +15112,7 @@ public static int VK_VERSION_MAJOR(@NativeType("uint32_t") int version) {
      */
     @NativeType("uint32_t")
     public static int VK_VERSION_MINOR(@NativeType("uint32_t") int version) {
-        return (version >> 12) & 0x3FF;
+        return (version >>> 12) & 0x3FF;
     }
 
     // --- [ VK_VERSION_PATCH ] ---

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -2394,10 +2394,10 @@ public static int memLengthUTF8(CharSequence value, boolean nullTerminated) {
                     // c >= 128: 1 (1 input char -> 2 output bytes)
                     bytes += (0x7F - c) >>> 31;
                 } else {
-                    // non-surrogate: 1 input char  -> 3 output bytes
-                    //     surrogate: 2 input chars -> 4 output bytes
+                    // non-high-surrogate: 1 input char  -> 3 output bytes
+                    //     surrogate-pair: 2 input chars -> 4 output bytes
                     bytes += 2;
-                    if (MIN_SURROGATE <= c && c <= MAX_SURROGATE) {
+                    if (isHighSurrogate(c)) {
                         i++;
                     }
                 }

File: modules/lwjgl/par/src/test/java/org/lwjgl/util/par/ParTest.java
Patch:
@@ -302,7 +302,7 @@ public void testLSystems() {
             .put(1, 1.0f)
             .put(2, 0.0f);
 
-        ParShapesMesh mesh = Objects.requireNonNull(par_shapes_create_lsystem(program, 5, 60));
+        ParShapesMesh mesh = Objects.requireNonNull(par_shapes_create_lsystem(program, 5, 60, null, NULL));
         ParShapesMesh disk = Objects.requireNonNull(par_shapes_create_disk(10, 30, O, J));
 
         par_shapes_merge(mesh, disk);

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVR.java
Patch:
@@ -700,6 +700,9 @@ public class OVR {
         OVR_MAX_EXTERNAL_CAMERA_COUNT = 16,
         OVR_EXTERNAL_CAMERA_NAME_SIZE = 32;
 
+    /** Defines the largest size for an extension name string, including the '\0' terminator. */
+    public static final int OVR_MAX_EXTENSION_NAME_SIZE = 128;
+
     /** Specifies the maximum number of layers supported by {@link #ovr_SubmitFrame SubmitFrame}. */
     public static final int ovrMaxLayerCount = 16;
 

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRExtensionProperties.java
Patch:
@@ -13,6 +13,8 @@
 
 import static org.lwjgl.system.MemoryUtil.*;
 
+import static org.lwjgl.ovr.OVR.OVR_MAX_EXTENSION_NAME_SIZE;
+
 /**
  * Describes the properties of an API extension.
  * 

File: modules/samples/src/test/java/org/lwjgl/demo/opengl/GLXGears.java
Patch:
@@ -81,7 +81,7 @@ public GLXGears() {
             if (caps.OpenGL30) {
                 version = 330;
             } else if (caps.OpenGL21) {
-                version = 130;
+                version = 120;
             } else {
                 version = 110;
             }
@@ -102,9 +102,9 @@ public GLXGears() {
         if (caps.OpenGL30) {
             int vao = glGenVertexArrays();
             glBindVertexArray(vao); // bind and forget
-            glEnableVertexAttribArray(positions);
-            glEnableVertexAttribArray(normals);
         }
+        glEnableVertexAttribArray(positions);
+        glEnableVertexAttribArray(normals);
 
         gear1 = new Gear(1.0, 4.0, 1.0, 20, 0.7, new float[] {0.8f, 0.1f, 0.0f, 1.0f});
         gear2 = new Gear(0.5, 2.0, 2.0, 10, 0.7, new float[] {0.0f, 0.8f, 0.2f, 1.0f});

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -373,7 +373,7 @@
  * <ol>
  * <li>Make sure extensions {@code VK_EXT_memory_budget} and {@code VK_KHR_get_physical_device_properties2} required by it are available and enable them.
  * Please note that the first is a device extension and the second is instance extension!</li>
- * <li>Use flag {@link #VMA_ALLOCATOR_CREATE_EXT_MEMORY_BUDGET_BIT ALLOCATOR_CREATE_EXT_MEMORY_BUDGET_BIT} when creating {@link VmaAllocator} object.</li>
+ * <li>Use flag {@link #VMA_ALLOCATOR_CREATE_EXT_MEMORY_BUDGET_BIT ALLOCATOR_CREATE_EXT_MEMORY_BUDGET_BIT} when creating {@code VmaAllocator} object.</li>
  * <li>Make sure to call {@link #vmaSetCurrentFrameIndex SetCurrentFrameIndex} every frame. Budget is queried from Vulkan inside of it to avoid overhead of querying it with every
  * allocation.</li>
  * </ol>
@@ -2524,7 +2524,7 @@ public static int vmaCheckCorruption(@NativeType("VmaAllocator") long allocator,
      * 
      * <p>Use this function instead of old, deprecated {@link #vmaDefragment Defragment}.</p>
      * 
-     * <p>Warning! Between the call to {@link #vmaDefragmentationBegin DefragmentationBegin} and {@link #vmaDefragmentationEnd DefragmentationEnd}:</p>
+     * <p>Warning! Between the call to {@code vmaDefragmentationBegin} and {@link #vmaDefragmentationEnd DefragmentationEnd}:</p>
      * 
      * <ul>
      * <li>You should not use any of allocations passed as {@code pInfo->pAllocations} or any allocations that belong to pools passed as

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSurface.java
Patch:
@@ -206,7 +206,7 @@ public class KHRSurface {
      * 
      * <pre><code>
      * E =  1.055 &times; L<sup>1/2.4</sup> - 0.055 for 0.0030186 &le; L &le; 1
-     *     12.92  &times; L for 0 &le; L &lt 0.0030186</code></pre>
+     *     12.92  &times; L for 0 &le; L &lt; 0.0030186</code></pre>
      * 
      * <p>where <code>L</code> is the linear value of a color channel and <code>E</code> is the encoded value (as stored in the image in memory).</p>
      * 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/XEvent.java
Patch:
@@ -142,7 +142,7 @@ public class XEvent extends Struct implements NativeResource {
             __member(XKeymapEvent.SIZEOF, XKeymapEvent.ALIGNOF),
             __member(XGenericEvent.SIZEOF, XGenericEvent.ALIGNOF),
             __member(XGenericEventCookie.SIZEOF, XGenericEventCookie.ALIGNOF),
-            __array(POINTER_SIZE, 24)
+            __array(CLONG_SIZE, 24)
         );
 
         SIZEOF = layout.getSize();
@@ -478,9 +478,9 @@ public static XEvent.Buffer callocStack(int capacity, MemoryStack stack) {
     public static XGenericEvent nxgeneric(long struct) { return XGenericEvent.create(struct + XEvent.XGENERIC); }
     /** Unsafe version of {@link #xcookie}. */
     public static XGenericEventCookie nxcookie(long struct) { return XGenericEventCookie.create(struct + XEvent.XCOOKIE); }
-    public static PointerBuffer npad(long struct) { return memPointerBuffer(struct + XEvent.PAD, 24); }
+    public static CLongBuffer npad(long struct) { return memCLongBuffer(struct + XEvent.PAD, 24); }
     public static long npad(long struct, int index) {
-        return memGetAddress(struct + XEvent.PAD + check(index, 24) * POINTER_SIZE);
+        return memGetCLong(struct + XEvent.PAD + check(index, 24) * CLONG_SIZE);
     }
 
     // -----------------------------------

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/XGenericEvent.java
Patch:
@@ -62,7 +62,7 @@ public class XGenericEvent extends Struct implements NativeResource {
     static {
         Layout layout = __struct(
             __member(4),
-            __member(POINTER_SIZE),
+            __member(CLONG_SIZE),
             __member(4),
             __member(POINTER_SIZE),
             __member(4),
@@ -299,7 +299,7 @@ public static XGenericEvent.Buffer callocStack(int capacity, MemoryStack stack)
     /** Unsafe version of {@link #type}. */
     public static int ntype(long struct) { return UNSAFE.getInt(null, struct + XGenericEvent.TYPE); }
     /** Unsafe version of {@link #serial}. */
-    public static long nserial(long struct) { return memGetAddress(struct + XGenericEvent.SERIAL); }
+    public static long nserial(long struct) { return memGetCLong(struct + XGenericEvent.SERIAL); }
     /** Unsafe version of {@link #send_event}. */
     public static int nsend_event(long struct) { return UNSAFE.getInt(null, struct + XGenericEvent.SEND_EVENT); }
     /** Unsafe version of {@link #display}. */
@@ -312,7 +312,7 @@ public static XGenericEvent.Buffer callocStack(int capacity, MemoryStack stack)
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XGenericEvent.TYPE, value); }
     /** Unsafe version of {@link #serial(long) serial}. */
-    public static void nserial(long struct, long value) { memPutAddress(struct + XGenericEvent.SERIAL, value); }
+    public static void nserial(long struct, long value) { memPutCLong(struct + XGenericEvent.SERIAL, value); }
     /** Unsafe version of {@link #send_event(boolean) send_event}. */
     public static void nsend_event(long struct, int value) { UNSAFE.putInt(null, struct + XGenericEvent.SEND_EVENT, value); }
     /** Unsafe version of {@link #display(long) display}. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/XGenericEventCookie.java
Patch:
@@ -66,7 +66,7 @@ public class XGenericEventCookie extends Struct implements NativeResource {
     static {
         Layout layout = __struct(
             __member(4),
-            __member(POINTER_SIZE),
+            __member(CLONG_SIZE),
             __member(4),
             __member(POINTER_SIZE),
             __member(4),
@@ -325,7 +325,7 @@ public static XGenericEventCookie.Buffer callocStack(int capacity, MemoryStack s
     /** Unsafe version of {@link #type}. */
     public static int ntype(long struct) { return UNSAFE.getInt(null, struct + XGenericEventCookie.TYPE); }
     /** Unsafe version of {@link #serial}. */
-    public static long nserial(long struct) { return memGetAddress(struct + XGenericEventCookie.SERIAL); }
+    public static long nserial(long struct) { return memGetCLong(struct + XGenericEventCookie.SERIAL); }
     /** Unsafe version of {@link #send_event}. */
     public static int nsend_event(long struct) { return UNSAFE.getInt(null, struct + XGenericEventCookie.SEND_EVENT); }
     /** Unsafe version of {@link #display}. */
@@ -342,7 +342,7 @@ public static XGenericEventCookie.Buffer callocStack(int capacity, MemoryStack s
     /** Unsafe version of {@link #type(int) type}. */
     public static void ntype(long struct, int value) { UNSAFE.putInt(null, struct + XGenericEventCookie.TYPE, value); }
     /** Unsafe version of {@link #serial(long) serial}. */
-    public static void nserial(long struct, long value) { memPutAddress(struct + XGenericEventCookie.SERIAL, value); }
+    public static void nserial(long struct, long value) { memPutCLong(struct + XGenericEventCookie.SERIAL, value); }
     /** Unsafe version of {@link #send_event(boolean) send_event}. */
     public static void nsend_event(long struct, int value) { UNSAFE.putInt(null, struct + XGenericEventCookie.SEND_EVENT, value); }
     /** Unsafe version of {@link #display(long) display}. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/XTimeCoord.java
Patch:
@@ -47,7 +47,7 @@ public class XTimeCoord extends Struct {
 
     static {
         Layout layout = __struct(
-            __member(POINTER_SIZE),
+            __member(CLONG_SIZE),
             __member(2),
             __member(2)
         );
@@ -113,7 +113,7 @@ public static XTimeCoord.Buffer createSafe(long address, int capacity) {
     // -----------------------------------
 
     /** Unsafe version of {@link #time}. */
-    public static long ntime(long struct) { return memGetAddress(struct + XTimeCoord.TIME); }
+    public static long ntime(long struct) { return memGetCLong(struct + XTimeCoord.TIME); }
     /** Unsafe version of {@link #x}. */
     public static short nx(long struct) { return UNSAFE.getShort(null, struct + XTimeCoord.X); }
     /** Unsafe version of {@link #y}. */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWNativeX11.java
Patch:
@@ -76,7 +76,7 @@ public static long glfwGetX11Adapter(@NativeType("GLFWmonitor *") long monitor)
         if (CHECKS) {
             check(monitor);
         }
-        return invokePP(monitor, __functionAddress);
+        return invokePN(monitor, __functionAddress);
     }
 
     // --- [ glfwGetX11Monitor ] ---
@@ -98,7 +98,7 @@ public static long glfwGetX11Monitor(@NativeType("GLFWmonitor *") long monitor)
         if (CHECKS) {
             check(monitor);
         }
-        return invokePP(monitor, __functionAddress);
+        return invokePN(monitor, __functionAddress);
     }
 
     // --- [ glfwGetX11Window ] ---
@@ -120,7 +120,7 @@ public static long glfwGetX11Window(@NativeType("GLFWwindow *") long window) {
         if (CHECKS) {
             check(window);
         }
-        return invokePP(window, __functionAddress);
+        return invokePN(window, __functionAddress);
     }
 
     // --- [ glfwSetX11SelectionString ] ---

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GLX.java
Patch:
@@ -270,7 +270,7 @@ public static void glXCopyContext(@NativeType("Display *") long display, @Native
             check(source);
             check(dest);
         }
-        callPPPPV(display, source, dest, mask, __functionAddress);
+        callPPPNV(display, source, dest, mask, __functionAddress);
     }
 
     // --- [ glXIsDirect ] ---
@@ -388,7 +388,7 @@ public static void glXSwapBuffers(@NativeType("Display *") long display, @Native
      */
     public static void glXUseXFont(@NativeType("Font") long font, int first, int count, int list_base) {
         long __functionAddress = Functions.UseXFont;
-        callPV(font, first, count, list_base, __functionAddress);
+        callNV(font, first, count, list_base, __functionAddress);
     }
 
     // --- [ glXCreateGLXPixmap ] ---
@@ -400,7 +400,7 @@ public static long nglXCreateGLXPixmap(long display, long visual, long pixmap) {
             check(display);
             XVisualInfo.validate(visual);
         }
-        return callPPPP(display, visual, pixmap, __functionAddress);
+        return callPPNP(display, visual, pixmap, __functionAddress);
     }
 
     /**

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GLXEXTImportContext.java
Patch:
@@ -92,7 +92,7 @@ public static long glXGetContextIDEXT(@NativeType("GLXContext const") long conte
             check(__functionAddress);
             check(context);
         }
-        return callPP(context, __functionAddress);
+        return callPN(context, __functionAddress);
     }
 
     // --- [ glXImportContextEXT ] ---
@@ -110,7 +110,7 @@ public static long glXImportContextEXT(@NativeType("Display *") long display, @N
             check(__functionAddress);
             check(display);
         }
-        return callPPP(display, contextID, __functionAddress);
+        return callPNP(display, contextID, __functionAddress);
     }
 
     // --- [ glXFreeContextEXT ] ---

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GLXSGIXFBConfig.java
Patch:
@@ -161,7 +161,7 @@ public static long glXCreateGLXPixmapWithConfigSGIX(@NativeType("Display *") lon
             check(display);
             check(config);
         }
-        return callPPPP(display, config, pixmap, __functionAddress);
+        return callPPNP(display, config, pixmap, __functionAddress);
     }
 
     // --- [ glXCreateContextWithConfigSGIX ] ---

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GLXSGIXPbuffer.java
Patch:
@@ -178,7 +178,7 @@ public static void glXSelectEventSGIX(@NativeType("Display *") long display, @Na
             check(display);
             check(drawable);
         }
-        callPPPV(display, drawable, mask, __functionAddress);
+        callPPNV(display, drawable, mask, __functionAddress);
     }
 
     // --- [ glXGetSelectedEventSGIX ] ---
@@ -201,7 +201,7 @@ public static void nglXGetSelectedEventSGIX(long display, long drawable, long ma
      * @param drawable the GLXDrawable
      * @param mask     returns the selection mask
      */
-    public static void glXGetSelectedEventSGIX(@NativeType("Display *") long display, @NativeType("GLXDrawable") long drawable, @NativeType("unsigned long *") PointerBuffer mask) {
+    public static void glXGetSelectedEventSGIX(@NativeType("Display *") long display, @NativeType("GLXDrawable") long drawable, @NativeType("unsigned long *") CLongBuffer mask) {
         if (CHECKS) {
             check(mask, 1);
         }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GLXStereoNotifyEventEXT.java
Patch:
@@ -63,7 +63,7 @@ public class GLXStereoNotifyEventEXT extends Struct {
     static {
         Layout layout = __struct(
             __member(4),
-            __member(POINTER_SIZE),
+            __member(CLONG_SIZE),
             __member(4),
             __member(POINTER_SIZE),
             __member(4),
@@ -154,7 +154,7 @@ public static GLXStereoNotifyEventEXT.Buffer createSafe(long address, int capaci
     /** Unsafe version of {@link #type}. */
     public static int ntype(long struct) { return UNSAFE.getInt(null, struct + GLXStereoNotifyEventEXT.TYPE); }
     /** Unsafe version of {@link #serial}. */
-    public static long nserial(long struct) { return memGetAddress(struct + GLXStereoNotifyEventEXT.SERIAL); }
+    public static long nserial(long struct) { return memGetCLong(struct + GLXStereoNotifyEventEXT.SERIAL); }
     /** Unsafe version of {@link #send_event}. */
     public static int nsend_event(long struct) { return UNSAFE.getInt(null, struct + GLXStereoNotifyEventEXT.SEND_EVENT); }
     /** Unsafe version of {@link #display}. */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTAcquireXlibDisplay.java
Patch:
@@ -137,7 +137,7 @@ public static int nvkGetRandROutputDisplayEXT(VkPhysicalDevice physicalDevice, l
             check(__functionAddress);
             check(dpy);
         }
-        return callPPPPI(physicalDevice.address(), dpy, rrOutput, pDisplay, __functionAddress);
+        return callPPNPI(physicalDevice.address(), dpy, rrOutput, pDisplay, __functionAddress);
     }
 
     /**
@@ -197,7 +197,7 @@ public static int vkGetRandROutputDisplayEXT(VkPhysicalDevice physicalDevice, @N
             check(dpy);
             check(pDisplay, 1);
         }
-        return callPPPPI(physicalDevice.address(), dpy, rrOutput, pDisplay, __functionAddress);
+        return callPPNPI(physicalDevice.address(), dpy, rrOutput, pDisplay, __functionAddress);
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRXlibSurface.java
Patch:
@@ -195,7 +195,7 @@ public static boolean vkGetPhysicalDeviceXlibPresentationSupportKHR(VkPhysicalDe
             check(__functionAddress);
             check(dpy);
         }
-        return callPPPI(physicalDevice.address(), queueFamilyIndex, dpy, visualID, __functionAddress) != 0;
+        return callPPNI(physicalDevice.address(), queueFamilyIndex, dpy, visualID, __functionAddress) != 0;
     }
 
     /** Array version of: {@link #vkCreateXlibSurfaceKHR CreateXlibSurfaceKHR} */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkXlibSurfaceCreateInfoKHR.java
Patch:
@@ -83,7 +83,7 @@ public class VkXlibSurfaceCreateInfoKHR extends Struct implements NativeResource
             __member(POINTER_SIZE),
             __member(4),
             __member(POINTER_SIZE),
-            __member(POINTER_SIZE)
+            __member(CLONG_SIZE)
         );
 
         SIZEOF = layout.getSize();
@@ -317,7 +317,7 @@ public static VkXlibSurfaceCreateInfoKHR.Buffer callocStack(int capacity, Memory
     /** Unsafe version of {@link #dpy}. */
     public static long ndpy(long struct) { return memGetAddress(struct + VkXlibSurfaceCreateInfoKHR.DPY); }
     /** Unsafe version of {@link #window}. */
-    public static long nwindow(long struct) { return memGetAddress(struct + VkXlibSurfaceCreateInfoKHR.WINDOW); }
+    public static long nwindow(long struct) { return memGetCLong(struct + VkXlibSurfaceCreateInfoKHR.WINDOW); }
 
     /** Unsafe version of {@link #sType(int) sType}. */
     public static void nsType(long struct, int value) { UNSAFE.putInt(null, struct + VkXlibSurfaceCreateInfoKHR.STYPE, value); }
@@ -328,7 +328,7 @@ public static VkXlibSurfaceCreateInfoKHR.Buffer callocStack(int capacity, Memory
     /** Unsafe version of {@link #dpy(long) dpy}. */
     public static void ndpy(long struct, long value) { memPutAddress(struct + VkXlibSurfaceCreateInfoKHR.DPY, check(value)); }
     /** Unsafe version of {@link #window(long) window}. */
-    public static void nwindow(long struct, long value) { memPutAddress(struct + VkXlibSurfaceCreateInfoKHR.WINDOW, value); }
+    public static void nwindow(long struct, long value) { memPutCLong(struct + VkXlibSurfaceCreateInfoKHR.WINDOW, value); }
 
     /**
      * Validates pointer members that should not be {@code NULL}.

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/NVStreamDMA.java
Patch:
@@ -15,14 +15,14 @@
  * extension. Transferring buffer contents through sockets is slower compared to DMA transfers. Since DMA transfers have higher throughput compared to
  * sockets, using {@code EGL_NV_stream_dma} extension, applications can request EGL to utilize DMA channels to perform buffer copies.</p>
  * 
- * <p>Requires {@link NVStreamRemote NV_stream_remote} and {@link  NV_stream_cross_system}.</p>
+ * <p>Requires {@link NVStreamRemote NV_stream_remote} and {@code NV_stream_cross_system}.</p>
  */
 public final class NVStreamDMA {
 
     /** Accepted as attribute names in {@link KHRStream#eglCreateStreamKHR CreateStreamKHR}, {@link KHRStreamAttrib#eglCreateStreamAttribKHR CreateStreamAttribKHR}, {@link KHRStream#eglQueryStreamKHR QueryStreamKHR}, and {@link KHRStreamAttrib#eglQueryStreamAttribKHR QueryStreamAttribKHR}. */
     public static final int
-        EGL_EGL_STREAM_DMA_NV        = 0x3371,
-        EGL_EGL_STREAM_DMA_SERVER_NV = 0x3372;
+        EGL_STREAM_DMA_NV        = 0x3371,
+        EGL_STREAM_DMA_SERVER_NV = 0x3372;
 
     private NVStreamDMA() {}
 

File: modules/lwjgl/shaderc/src/generated/java/org/lwjgl/util/shaderc/ShadercSpvc.java
Patch:
@@ -239,7 +239,7 @@ public static void shaderc_spvc_compile_options_set_source_env(@NativeType("shad
      * Sets the target shader environment, if this is different from the source environment, then a transform between the environments will be performed if
      * possible.
      * 
-     * <p>Currently only WebGPU <-> Vulkan 1.1 are defined. Default value for environment is Vulkan 1.0.</p>
+     * <p>Currently only WebGPU &lt;-&gt; Vulkan 1.1 are defined. Default value for environment is Vulkan 1.0.</p>
      */
     public static void shaderc_spvc_compile_options_set_target_env(@NativeType("shaderc_spvc_compile_options_t") long options, @NativeType("shaderc_target_env") int env, @NativeType("shaderc_env_version") int version) {
         long __functionAddress = Functions.compile_options_set_target_env;

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/ClangIndex.java
Patch:
@@ -2311,7 +2311,7 @@ protected ClangIndex() {
         throw new UnsupportedOperationException();
     }
 
-    private static final SharedLibrary CLANG = Library.loadNative(ClangIndex.class, "org.lwjgl.llvm", Configuration.LLVM_CLANG_LIBRARY_NAME, "libclang");
+    private static final SharedLibrary CLANG = Library.loadNative(ClangIndex.class, "org.lwjgl.llvm", Configuration.LLVM_CLANG_LIBRARY_NAME, "clang", "libclang");
 
     /** Contains the function pointers loaded from the CLANG {@link SharedLibrary}. */
     public static final class Functions {

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMCore.java
Patch:
@@ -699,7 +699,7 @@ protected LLVMCore() {
         throw new UnsupportedOperationException();
     }
 
-    private static final SharedLibrary LLVM = Library.loadNative(LLVMCore.class, "org.lwjgl.llvm", Configuration.LLVM_LIBRARY_NAME, "libLLVM");
+    private static final SharedLibrary LLVM = Library.loadNative(LLVMCore.class, "org.lwjgl.llvm", Configuration.LLVM_LIBRARY_NAME, "LLVM", "LLVM-C");
 
     /** Contains the function pointers loaded from the LLVM {@link SharedLibrary}. */
     public static final class Functions {

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/LLVMLTO.java
Patch:
@@ -129,7 +129,7 @@ protected LLVMLTO() {
         throw new UnsupportedOperationException();
     }
 
-    private static final SharedLibrary LTO = Library.loadNative(LLVMLTO.class, "org.lwjgl.llvm", Configuration.LLVM_LTO_LIBRARY_NAME, "libLTO");
+    private static final SharedLibrary LTO = Library.loadNative(LLVMLTO.class, "org.lwjgl.llvm", Configuration.LLVM_LTO_LIBRARY_NAME, "LTO");
 
     /** Contains the function pointers loaded from the LTO {@link SharedLibrary}. */
     public static final class Functions {

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Callback.java
Patch:
@@ -185,12 +185,11 @@ public static <T extends CallbackI> T getSafe(long functionPointer) {
      * @param functionPointer the function pointer
      */
     public static void free(long functionPointer) {
-        DeleteGlobalRef(dcbGetUserData(functionPointer));
-
         if (DEBUG_ALLOCATOR) {
             MemoryManage.DebugAllocator.untrack(functionPointer);
         }
 
+        DeleteGlobalRef(dcbGetUserData(functionPointer));
         dcbFreeCallback(functionPointer);
     }
 

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBDrawElementsBaseVertex.java
Patch:
@@ -311,10 +311,10 @@ public static void glDrawElementsInstancedBaseVertex(@NativeType("GLenum") int m
     /**
      * Unsafe version of: {@link #glMultiDrawElementsBaseVertex MultiDrawElementsBaseVertex}
      *
-     * @param primcount the size of the {@code count} array
+     * @param drawcount the size of the {@code count} array
      */
-    public static void nglMultiDrawElementsBaseVertex(int mode, long count, int type, long indices, int primcount, long basevertex) {
-        GL32C.nglMultiDrawElementsBaseVertex(mode, count, type, indices, primcount, basevertex);
+    public static void nglMultiDrawElementsBaseVertex(int mode, long count, int type, long indices, int drawcount, long basevertex) {
+        GL32C.nglMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex);
     }
 
     /**

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL32.java
Patch:
@@ -497,10 +497,10 @@ public static void glDrawElementsInstancedBaseVertex(@NativeType("GLenum") int m
     /**
      * Unsafe version of: {@link #glMultiDrawElementsBaseVertex MultiDrawElementsBaseVertex}
      *
-     * @param primcount the size of the {@code count} array
+     * @param drawcount the size of the {@code count} array
      */
-    public static void nglMultiDrawElementsBaseVertex(int mode, long count, int type, long indices, int primcount, long basevertex) {
-        GL32C.nglMultiDrawElementsBaseVertex(mode, count, type, indices, primcount, basevertex);
+    public static void nglMultiDrawElementsBaseVertex(int mode, long count, int type, long indices, int drawcount, long basevertex) {
+        GL32C.nglMultiDrawElementsBaseVertex(mode, count, type, indices, drawcount, basevertex);
     }
 
     /**

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL32C.java
Patch:
@@ -493,9 +493,9 @@ public static void glDrawElementsInstancedBaseVertex(@NativeType("GLenum") int m
     /**
      * Unsafe version of: {@link #glMultiDrawElementsBaseVertex MultiDrawElementsBaseVertex}
      *
-     * @param primcount the size of the {@code count} array
+     * @param drawcount the size of the {@code count} array
      */
-    public static native void nglMultiDrawElementsBaseVertex(int mode, long count, int type, long indices, int primcount, long basevertex);
+    public static native void nglMultiDrawElementsBaseVertex(int mode, long count, int type, long indices, int drawcount, long basevertex);
 
     /**
      * Renders multiple sets of primitives by specifying indices of array data elements and an offset to apply to each index.

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/EXTDrawElementsBaseVertex.java
Patch:
@@ -159,7 +159,7 @@ public static void glDrawElementsInstancedBaseVertexEXT(@NativeType("GLenum") in
 
     // --- [ glMultiDrawElementsBaseVertexEXT ] ---
 
-    public static native void nglMultiDrawElementsBaseVertexEXT(int mode, long count, int type, long indices, int primcount, long basevertex);
+    public static native void nglMultiDrawElementsBaseVertexEXT(int mode, long count, int type, long indices, int drawcount, long basevertex);
 
     public static void glMultiDrawElementsBaseVertexEXT(@NativeType("GLenum") int mode, @NativeType("GLsizei const *") IntBuffer count, @NativeType("GLenum") int type, @NativeType("void const * const *") PointerBuffer indices, @NativeType("GLint const *") IntBuffer basevertex) {
         if (CHECKS) {

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/EXTMultiDrawArrays.java
Patch:
@@ -37,7 +37,7 @@ static boolean isAvailable(GLESCapabilities caps) {
 
     // --- [ glMultiDrawArraysEXT ] ---
 
-    public static native void nglMultiDrawArraysEXT(int mode, long first, long count, int primcount);
+    public static native void nglMultiDrawArraysEXT(int mode, long first, long count, int drawcount);
 
     public static void glMultiDrawArraysEXT(@NativeType("GLenum") int mode, @NativeType("GLint const *") IntBuffer first, @NativeType("GLsizei const *") IntBuffer count) {
         if (CHECKS) {
@@ -48,7 +48,7 @@ public static void glMultiDrawArraysEXT(@NativeType("GLenum") int mode, @NativeT
 
     // --- [ glMultiDrawElementsEXT ] ---
 
-    public static native void nglMultiDrawElementsEXT(int mode, long count, int type, long indices, int primcount);
+    public static native void nglMultiDrawElementsEXT(int mode, long count, int type, long indices, int drawcount);
 
     public static void glMultiDrawElementsEXT(@NativeType("GLenum") int mode, @NativeType("GLsizei const *") IntBuffer count, @NativeType("GLenum") int type, @NativeType("void const * const *") PointerBuffer indices) {
         if (CHECKS) {

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/OESDrawElementsBaseVertex.java
Patch:
@@ -159,7 +159,7 @@ public static void glDrawElementsInstancedBaseVertexOES(@NativeType("GLenum") in
 
     // --- [ glMultiDrawElementsBaseVertexOES ] ---
 
-    public static native void nglMultiDrawElementsBaseVertexOES(int mode, long count, int type, long indices, int primcount, long basevertex);
+    public static native void nglMultiDrawElementsBaseVertexOES(int mode, long count, int type, long indices, int drawcount, long basevertex);
 
     public static void glMultiDrawElementsBaseVertexOES(@NativeType("GLenum") int mode, @NativeType("GLsizei const *") IntBuffer count, @NativeType("GLenum") int type, @NativeType("void const * const *") PointerBuffer indices, @NativeType("GLint const *") IntBuffer basevertex) {
         if (CHECKS) {

File: modules/generator/src/main/java/org/lwjgl/generator/util/ModuleInfoGen.java
Patch:
@@ -253,6 +253,7 @@ public CharSequence getCharContent(boolean ignoreEncodingErrors) {
             fileManager,
             diagnostics,
             Arrays.asList(
+                "--release", "9",
                 "--module-path", modulePath,
                 "-d", "bin/classes/lwjgl/" + module
             ),

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java
Patch:
@@ -106,7 +106,7 @@ public class Configuration<T> {
     );
 
     /**
-     * EXPERIMENTAL: Emulates {@link System#loadLibrary} behavior in {@link Library#loadNative(String)}.
+     * EXPERIMENTAL: Emulates {@link System#loadLibrary} behavior in {@link Library#loadNative}.
      *
      * <p style="font-family: monospace">
      * Property: <b>org.lwjgl.system.EmulateSystemLoadLibrary</b><br>

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/LibraryResource.java
Patch:
@@ -171,8 +171,8 @@ public static Path load(Class<?> context, String module, Configuration<String> n
     }
 
     /**
-     * Loads a library resource using {@link #load(String)} with the name specified by {@code name}. If {@code name} is not set,
-     * {@link #load(String)} will be called with the names specified by {@code defaultNames}. The first successful will be returned. If the resource could
+     * Loads a library resource using {@link #load(Class, String, String) load} with the name specified by {@code name}. If {@code name} is not set,
+     * {@code load} will be called with the names specified by {@code defaultNames}. The first successful will be returned. If the resource could
      * not be found, the {@code fallback} will be called.
      *
      * @param name         a {@link Configuration} that specifies the resource name

File: modules/samples/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -474,7 +474,7 @@ private NkContext setupWindow(long win) {
         });
 
         nk_init(ctx, ALLOCATOR, null);
-        ctx.clip(it -> it
+        ctx.clip()
             .copy((handle, text, len) -> {
                 if (len == 0) {
                     return;
@@ -493,7 +493,7 @@ private NkContext setupWindow(long win) {
                 if (text != NULL) {
                     nnk_textedit_paste(edit, text, nnk_strlen(text));
                 }
-            }));
+            });
 
         setupContext();
         return ctx;

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBDirectStateAccess.java
Patch:
@@ -894,7 +894,7 @@ public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @Nat
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @NativeType("GLenum") int access, @Nullable ByteBuffer old_buffer) {
-        return GL45C.glMapNamedBuffer(buffer, access);
+        return GL45C.glMapNamedBuffer(buffer, access, old_buffer);
     }
 
     /**
@@ -906,7 +906,7 @@ public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @Nat
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @NativeType("GLenum") int access, long length, @Nullable ByteBuffer old_buffer) {
-        return GL45C.glMapNamedBuffer(buffer, access);
+        return GL45C.glMapNamedBuffer(buffer, access, length, old_buffer);
     }
 
     // --- [ glMapNamedBufferRange ] ---
@@ -941,7 +941,7 @@ public static ByteBuffer glMapNamedBufferRange(@NativeType("GLuint") int buffer,
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapNamedBufferRange(@NativeType("GLuint") int buffer, @NativeType("GLintptr") long offset, @NativeType("GLsizeiptr") long length, @NativeType("GLbitfield") int access, @Nullable ByteBuffer old_buffer) {
-        return GL45C.glMapNamedBufferRange(buffer, offset, length, access);
+        return GL45C.glMapNamedBufferRange(buffer, offset, length, access, old_buffer);
     }
 
     // --- [ glUnmapNamedBuffer ] ---

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBMapBufferRange.java
Patch:
@@ -100,7 +100,7 @@ public static ByteBuffer glMapBufferRange(@NativeType("GLenum") int target, @Nat
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapBufferRange(@NativeType("GLenum") int target, @NativeType("GLintptr") long offset, @NativeType("GLsizeiptr") long length, @NativeType("GLbitfield") int access, @Nullable ByteBuffer old_buffer) {
-        return GL30C.glMapBufferRange(target, offset, length, access);
+        return GL30C.glMapBufferRange(target, offset, length, access, old_buffer);
     }
 
     // --- [ glFlushMappedBufferRange ] ---

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL15.java
Patch:
@@ -677,7 +677,7 @@ public static ByteBuffer glMapBuffer(@NativeType("GLenum") int target, @NativeTy
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapBuffer(@NativeType("GLenum") int target, @NativeType("GLenum") int access, @Nullable ByteBuffer old_buffer) {
-        return GL15C.glMapBuffer(target, access);
+        return GL15C.glMapBuffer(target, access, old_buffer);
     }
 
     /**
@@ -699,7 +699,7 @@ public static ByteBuffer glMapBuffer(@NativeType("GLenum") int target, @NativeTy
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapBuffer(@NativeType("GLenum") int target, @NativeType("GLenum") int access, long length, @Nullable ByteBuffer old_buffer) {
-        return GL15C.glMapBuffer(target, access);
+        return GL15C.glMapBuffer(target, access, length, old_buffer);
     }
 
     // --- [ glUnmapBuffer ] ---

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL30.java
Patch:
@@ -1423,7 +1423,7 @@ public static ByteBuffer glMapBufferRange(@NativeType("GLenum") int target, @Nat
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapBufferRange(@NativeType("GLenum") int target, @NativeType("GLintptr") long offset, @NativeType("GLsizeiptr") long length, @NativeType("GLbitfield") int access, @Nullable ByteBuffer old_buffer) {
-        return GL30C.glMapBufferRange(target, offset, length, access);
+        return GL30C.glMapBufferRange(target, offset, length, access, old_buffer);
     }
 
     // --- [ glFlushMappedBufferRange ] ---

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL45.java
Patch:
@@ -1041,7 +1041,7 @@ public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @Nat
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @NativeType("GLenum") int access, @Nullable ByteBuffer old_buffer) {
-        return GL45C.glMapNamedBuffer(buffer, access);
+        return GL45C.glMapNamedBuffer(buffer, access, old_buffer);
     }
 
     /**
@@ -1055,7 +1055,7 @@ public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @Nat
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapNamedBuffer(@NativeType("GLuint") int buffer, @NativeType("GLenum") int access, long length, @Nullable ByteBuffer old_buffer) {
-        return GL45C.glMapNamedBuffer(buffer, access);
+        return GL45C.glMapNamedBuffer(buffer, access, length, old_buffer);
     }
 
     // --- [ glMapNamedBufferRange ] ---
@@ -1094,7 +1094,7 @@ public static ByteBuffer glMapNamedBufferRange(@NativeType("GLuint") int buffer,
     @Nullable
     @NativeType("void *")
     public static ByteBuffer glMapNamedBufferRange(@NativeType("GLuint") int buffer, @NativeType("GLintptr") long offset, @NativeType("GLsizeiptr") long length, @NativeType("GLbitfield") int access, @Nullable ByteBuffer old_buffer) {
-        return GL45C.glMapNamedBufferRange(buffer, offset, length, access);
+        return GL45C.glMapNamedBufferRange(buffer, offset, length, access, old_buffer);
     }
 
     // --- [ glUnmapNamedBuffer ] ---

File: modules/lwjgl/shaderc/src/generated/java/org/lwjgl/util/shaderc/Shaderc.java
Patch:
@@ -701,7 +701,6 @@ public static void nshaderc_compile_options_set_include_callbacks(long options,
         long __functionAddress = Functions.compile_options_set_include_callbacks;
         if (CHECKS) {
             check(options);
-            check(user_data);
         }
         invokePPPPV(options, resolver, result_releaser, user_data, __functionAddress);
     }

File: modules/lwjgl/shaderc/src/generated/java/org/lwjgl/util/shaderc/ShadercIncludeResult.java
Patch:
@@ -305,15 +305,15 @@ public static ShadercIncludeResult.Buffer callocStack(int capacity, MemoryStack
 
     /** Unsafe version of {@link #source_name(ByteBuffer) source_name}. */
     public static void nsource_name(long struct, ByteBuffer value) {
-        if (CHECKS) { checkNT1(value); }
         memPutAddress(struct + ShadercIncludeResult.SOURCE_NAME, memAddress(value));
+        nsource_name_length(struct, value.remaining());
     }
     /** Sets the specified value to the {@code source_name_length} field of the specified {@code struct}. */
     public static void nsource_name_length(long struct, long value) { memPutAddress(struct + ShadercIncludeResult.SOURCE_NAME_LENGTH, value); }
     /** Unsafe version of {@link #content(ByteBuffer) content}. */
     public static void ncontent(long struct, ByteBuffer value) {
-        if (CHECKS) { checkNT1(value); }
         memPutAddress(struct + ShadercIncludeResult.CONTENT, memAddress(value));
+        ncontent_length(struct, value.remaining());
     }
     /** Sets the specified value to the {@code content_length} field of the specified {@code struct}. */
     public static void ncontent_length(long struct, long value) { memPutAddress(struct + ShadercIncludeResult.CONTENT_LENGTH, value); }

File: modules/lwjgl/egl/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -92,7 +92,7 @@ private static void create(SharedLibrary EGL) {
 
                 @Override
                 public long getFunctionAddress(ByteBuffer functionName) {
-                    long address = callPP(eglGetProcAddress, memAddress(functionName));
+                    long address = callPP(memAddress(functionName), eglGetProcAddress);
                     if (address == NULL) {
                         address = library.getFunctionAddress(functionName);
                         if (address == NULL && Checks.DEBUG_FUNCTIONS) {

File: modules/lwjgl/opengles/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -237,10 +237,10 @@ public static GLESCapabilities createCapabilities() {
                 IntBuffer pi = stack.ints(0);
 
                 // Try the 3.0+ version query first
-                callPV(GetIntegerv, GL_MAJOR_VERSION, memAddress(pi));
+                callPV(GL_MAJOR_VERSION, memAddress(pi), GetIntegerv);
                 if (callI(GetError) == GL_NO_ERROR && 3 <= (majorVersion = pi.get(0))) {
                     // We're on an 3.0+ context.
-                    callPV(GetIntegerv, GL_MINOR_VERSION, memAddress(pi));
+                    callPV(GL_MINOR_VERSION, memAddress(pi), GetIntegerv);
                     minorVersion = pi.get(0);
                 } else {
                     // Fallback to the string query.
@@ -302,7 +302,7 @@ public static GLESCapabilities createCapabilities() {
                 try (MemoryStack stack = stackPush()) {
                     IntBuffer pi = stack.ints(0);
 
-                    callPV(GetIntegerv, GL_NUM_EXTENSIONS, memAddress(pi));
+                    callPV(GL_NUM_EXTENSIONS, memAddress(pi), GetIntegerv);
                     extensionCount = pi.get(0);
                 }
 

File: modules/samples/src/test/java/org/lwjgl/demo/vulkan/HelloVulkan.java
Patch:
@@ -20,6 +20,7 @@
 import static org.lwjgl.vulkan.EXTDebugReport.*;
 import static org.lwjgl.vulkan.KHRSurface.*;
 import static org.lwjgl.vulkan.KHRSwapchain.*;
+import static org.lwjgl.vulkan.NVRayTracing.*;
 import static org.lwjgl.vulkan.VK10.*;
 
 /*
@@ -1537,6 +1538,7 @@ private void demo_prepare_descriptor_set() {
                 .sType(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET)
                 .dstSet(desc_set)
                 .descriptorType(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER)
+                .descriptorCount(tex_descs.remaining())
                 .pImageInfo(tex_descs);
 
             vkUpdateDescriptorSets(device, write, null);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRPushDescriptor.java
Patch:
@@ -85,7 +85,6 @@ public static void nvkCmdPushDescriptorSetKHR(VkCommandBuffer commandBuffer, int
         long __functionAddress = commandBuffer.getCapabilities().vkCmdPushDescriptorSetKHR;
         if (CHECKS) {
             check(__functionAddress);
-            VkWriteDescriptorSet.validate(pDescriptorWrites, descriptorWriteCount);
         }
         callPJPV(commandBuffer.address(), pipelineBindPoint, layout, set, descriptorWriteCount, pDescriptorWrites, __functionAddress);
     }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK10.java
Patch:
@@ -9157,9 +9157,6 @@ public static int vkFreeDescriptorSets(VkDevice device, @NativeType("VkDescripto
      */
     public static void nvkUpdateDescriptorSets(VkDevice device, int descriptorWriteCount, long pDescriptorWrites, int descriptorCopyCount, long pDescriptorCopies) {
         long __functionAddress = device.getCapabilities().vkUpdateDescriptorSets;
-        if (CHECKS) {
-            if (pDescriptorWrites != NULL) { VkWriteDescriptorSet.validate(pDescriptorWrites, descriptorWriteCount); }
-        }
         callPPPV(device.address(), descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies, __functionAddress);
     }
 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java
Patch:
@@ -107,9 +107,11 @@ private JNI() {}
     public static native long invokeP(long __functionAddress);
     public static native long invokeP(int param0, long __functionAddress);
     public static native long invokeP(short param0, long __functionAddress);
+    public static native long invokeP(boolean param0, long __functionAddress);
     public static native long invokeP(int param0, int param1, long __functionAddress);
     public static native long invokePP(long param0, long __functionAddress);
     public static native long invokePP(int param0, long param1, long __functionAddress);
+    public static native long invokePP(long param0, byte param1, long __functionAddress);
     public static native long invokePP(long param0, double param1, long __functionAddress);
     public static native long invokePP(long param0, int param1, long __functionAddress);
     public static native long invokePP(short param0, long param1, long __functionAddress);
@@ -119,6 +121,7 @@ private JNI() {}
     public static native long invokePP(int param0, int param1, int param2, long param3, long __functionAddress);
     public static native long invokePP(long param0, int param1, int param2, int param3, long __functionAddress);
     public static native long invokeJP(short param0, short param1, short param2, byte param3, int param4, long param5, long __functionAddress);
+    public static native long invokePP(long param0, int param1, byte param2, int param3, boolean param4, boolean param5, long __functionAddress);
     public static native long invokePJP(long param0, long param1, long __functionAddress);
     public static native long invokePPP(long param0, long param1, long __functionAddress);
     public static native long invokePJP(long param0, int param1, long param2, long __functionAddress);
@@ -261,7 +264,6 @@ private JNI() {}
     public static native void invokeJV(long param0, int param1, long __functionAddress);
     public static native void invokePV(byte param0, long param1, long __functionAddress);
     public static native void invokePV(int param0, long param1, long __functionAddress);
-    public static native void invokePV(long param0, byte param1, long __functionAddress);
     public static native void invokePV(long param0, float param1, long __functionAddress);
     public static native void invokePV(long param0, int param1, long __functionAddress);
     public static native void invokePV(long param0, short param1, long __functionAddress);
@@ -289,7 +291,6 @@ private JNI() {}
     public static native void invokePV(long param0, short param1, short param2, int param3, boolean param4, long __functionAddress);
     public static native void invokePV(long param0, byte param1, short param2, byte param3, int param4, int param5, long __functionAddress);
     public static native void invokePV(long param0, byte param1, short param2, int param3, int param4, short param5, long __functionAddress);
-    public static native void invokePV(long param0, int param1, byte param2, int param3, boolean param4, boolean param5, long __functionAddress);
     public static native void invokePV(long param0, int param1, int param2, int param3, int param4, boolean param5, long __functionAddress);
     public static native void invokePV(long param0, short param1, int param2, short param3, short param4, byte param5, long __functionAddress);
     public static native void invokePV(long param0, short param1, short param2, int param3, int param4, int param5, long __functionAddress);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDBufferMarker.java
Patch:
@@ -114,7 +114,7 @@ static boolean checkCapsDevice(FunctionProvider provider, java.util.Map<String,
      * <li>{@code commandBuffer} <b>must</b> be a valid {@code VkCommandBuffer} handle</li>
      * <li>{@code pipelineStage} <b>must</b> be a valid {@code VkPipelineStageFlagBits} value</li>
      * <li>{@code dstBuffer} <b>must</b> be a valid {@code VkBuffer} handle</li>
-     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
+     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
      * <li>The {@code VkCommandPool} that {@code commandBuffer} was allocated from <b>must</b> support transfer, graphics, or compute operations</li>
      * <li>Both of {@code commandBuffer}, and {@code dstBuffer} <b>must</b> have been created, allocated, or retrieved from the same {@code VkDevice}</li>
      * </ul>
@@ -129,7 +129,7 @@ static boolean checkCapsDevice(FunctionProvider provider, java.util.Map<String,
      * <h5>Command Properties</h5>
      * 
      * <table class="lwjgl">
-     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
+     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
      * <tbody><tr><td>Primary Secondary</td><td>Both</td><td>Transfer Graphics Compute</td><td>Transfer</td></tr></tbody>
      * </table>
      *

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDDrawIndirectCount.java
Patch:
@@ -15,7 +15,7 @@
  * 
  * <h5>Promotion to VK_KHR_draw_indirect_count</h5>
  * 
- * <p>All functionality in this extension is included in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_draw_indirect_count">VK_KHR_draw_indirect_count</a>, with the suffix changed to KHR. The original type, enum and command names are still available as aliases of the core functionality.</p>
+ * <p>All functionality in this extension is included in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_draw_indirect_count">VK_KHR_draw_indirect_count</a>, with the suffix changed to KHR. The original type, enum and command names are still available as aliases of the core functionality.</p>
  * 
  * <dl>
  * <dt><b>Name String</b></dt>
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_draw_indirect_count">VK_KHR_draw_indirect_count</a> extension</li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_draw_indirect_count">VK_KHR_draw_indirect_count</a> extension</li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDGPUShaderHalfFloat.java
Patch:
@@ -10,7 +10,7 @@
  * 
  * <h5>Deprecation by VK_KHR_shader_float16_int8</h5>
  * 
- * <p>Functionality in this extension was included in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension, when slink::VkPhysicalDeviceFloat16Int8FeaturesKHR{@code ::shaderFloat16} is enabled.</p>
+ * <p>Functionality in this extension was included in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension, when slink::VkPhysicalDeviceFloat16Int8FeaturesKHR{@code ::shaderFloat16} is enabled.</p>
  * 
  * <dl>
  * <dt><b>Name String</b></dt>
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension</li>
+ * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension</li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDGPUShaderInt16.java
Patch:
@@ -10,7 +10,7 @@
  * 
  * <h5>Deprecation by VK_KHR_shader_float16_int8</h5>
  * 
- * <p>Functionality in this extension was included in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension, when {@link VkPhysicalDeviceFeatures}{@code ::shaderInt16} and slink::VkPhysicalDeviceFloat16Int8FeaturesKHR{@code ::shaderFloat16} are enabled.</p>
+ * <p>Functionality in this extension was included in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension, when {@link VkPhysicalDeviceFeatures}{@code ::shaderInt16} and slink::VkPhysicalDeviceFloat16Int8FeaturesKHR{@code ::shaderFloat16} are enabled.</p>
  * 
  * <dl>
  * <dt><b>Name String</b></dt>
@@ -27,7 +27,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension</li>
+ * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_shader_float16_int8">VK_KHR_shader_float16_int8</a> extension</li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDNegativeViewportHeight.java
Patch:
@@ -31,10 +31,10 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Obsoleted</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_maintenance1">VK_KHR_maintenance1</a> extension
+ * <li><em>Obsoleted</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_maintenance1">VK_KHR_maintenance1</a> extension
  * 
  * <ul>
- * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul>
  * </li>
  * </ul></dd>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/AMDRasterizationOrder.java
Patch:
@@ -78,8 +78,8 @@ public final class AMDRasterizationOrder {
      * <h5>Description</h5>
      * 
      * <ul>
-     * <li>{@link #VK_RASTERIZATION_ORDER_STRICT_AMD RASTERIZATION_ORDER_STRICT_AMD} specifies that operations for each primitive in a subpass <b>must</b> occur in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#drawing-primitive-order">primitive order</a>.</li>
-     * <li>{@link #VK_RASTERIZATION_ORDER_RELAXED_AMD RASTERIZATION_ORDER_RELAXED_AMD} specifies that operations for each primitive in a subpass <b>may</b> not occur in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#drawing-primitive-order">primitive order</a>.</li>
+     * <li>{@link #VK_RASTERIZATION_ORDER_STRICT_AMD RASTERIZATION_ORDER_STRICT_AMD} specifies that operations for each primitive in a subpass <b>must</b> occur in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#drawing-primitive-order">primitive order</a>.</li>
+     * <li>{@link #VK_RASTERIZATION_ORDER_RELAXED_AMD RASTERIZATION_ORDER_RELAXED_AMD} specifies that operations for each primitive in a subpass <b>may</b> not occur in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#drawing-primitive-order">primitive order</a>.</li>
      * </ul>
      * 
      * <h5>See Also</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTBufferDeviceAddress.java
Patch:
@@ -124,8 +124,8 @@ public static long nvkGetBufferDeviceAddressEXT(VkDevice device, long pInfo) {
      * <h5>Valid Usage</h5>
      * 
      * <ul>
-     * <li>The <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-bufferDeviceAddress">bufferDeviceAddress</a> feature <b>must</b> be enabled</li>
-     * <li>If {@code device} was created with multiple physical devices, then the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-bufferDeviceAddressMultiDevice">bufferDeviceAddressMultiDevice</a> feature <b>must</b> be enabled</li>
+     * <li>The <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-bufferDeviceAddress">bufferDeviceAddress</a> feature <b>must</b> be enabled</li>
+     * <li>If {@code device} was created with multiple physical devices, then the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-bufferDeviceAddressMultiDevice">bufferDeviceAddressMultiDevice</a> feature <b>must</b> be enabled</li>
      * </ul>
      * 
      * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTCalibratedTimestamps.java
Patch:
@@ -67,7 +67,7 @@ public class EXTCalibratedTimestamps {
      * <h5>Description</h5>
      * 
      * <ul>
-     * <li>{@link #VK_TIME_DOMAIN_DEVICE_EXT TIME_DOMAIN_DEVICE_EXT} specifies the device time domain. Timestamp values in this time domain are comparable with device timestamp values captured using {@link VK10#vkCmdWriteTimestamp CmdWriteTimestamp} and are defined to be incrementing according to the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-timestampPeriod">timestampPeriod</a> of the device.</li>
+     * <li>{@link #VK_TIME_DOMAIN_DEVICE_EXT TIME_DOMAIN_DEVICE_EXT} specifies the device time domain. Timestamp values in this time domain are comparable with device timestamp values captured using {@link VK10#vkCmdWriteTimestamp CmdWriteTimestamp} and are defined to be incrementing according to the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-timestampPeriod">timestampPeriod</a> of the device.</li>
      * <li>{@link #VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT TIME_DOMAIN_CLOCK_MONOTONIC_EXT} specifies the CLOCK_MONOTONIC time domain available on POSIX platforms.</li>
      * <li>{@link #VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT} specifies the CLOCK_MONOTONIC_RAW time domain available on POSIX platforms.</li>
      * <li>{@link #VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT} specifies the performance counter (QPC) time domain available on Windows.</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDescriptorIndexing.java
Patch:
@@ -97,7 +97,7 @@ public final class EXTDescriptorIndexing {
      * <li>{@link #VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT} indicates that if descriptors in this binding are updated between when the descriptor set is bound in a command buffer and when that command buffer is submitted to a queue, then the submission will use the most recently set descriptors for this binding and the updates do not invalidate the command buffer. Descriptor bindings created with this flag are also partially exempt from the external synchronization requirement in {@link KHRDescriptorUpdateTemplate#vkUpdateDescriptorSetWithTemplateKHR UpdateDescriptorSetWithTemplateKHR} and {@link VK10#vkUpdateDescriptorSets UpdateDescriptorSets}. They <b>can</b> be updated concurrently with the set being bound to a command buffer in another thread, but not concurrently with the set being reset or freed.</li>
      * <li>{@link #VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT} indicates that descriptors in this binding that are not <em>dynamically used</em> need not contain valid descriptors at the time the descriptors are consumed. A descriptor is dynamically used if any shader invocation executes an instruction that performs any memory access using the descriptor.</li>
      * <li>{@link #VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT} indicates that descriptors in this binding <b>can</b> be updated after a command buffer has bound this descriptor set, or while a command buffer that uses this descriptor set is pending execution, as long as the descriptors that are updated are not used by those command buffers. If {@link #VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT} is also set, then descriptors <b>can</b> be updated as long as they are not dynamically used by any shader invocations. If {@link #VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT} is not set, then descriptors <b>can</b> be updated as long as they are not statically used by any shader invocations.</li>
-     * <li>{@link #VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT} indicates that this descriptor binding has a variable size that will be specified when a descriptor set is allocated using this layout. The value of {@code descriptorCount} is treated as an upper bound on the size of the binding. This <b>must</b> only be used for the last binding in the descriptor set layout (i.e. the binding with the largest value of {@code binding}). For the purposes of counting against limits such as {@code maxDescriptorSet}* and {@code maxPerStageDescriptor}*, the full value of {@code descriptorCount} is counted , except for descriptor bindings with a descriptor type of {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT} where {@code descriptorCount} specifies the upper bound on the byte size of the binding, thus it counts against the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-maxInlineUniformBlockSize">{@code maxInlineUniformBlockSize}</a> limit instead. .</li>
+     * <li>{@link #VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT} indicates that this descriptor binding has a variable size that will be specified when a descriptor set is allocated using this layout. The value of {@code descriptorCount} is treated as an upper bound on the size of the binding. This <b>must</b> only be used for the last binding in the descriptor set layout (i.e. the binding with the largest value of {@code binding}). For the purposes of counting against limits such as {@code maxDescriptorSet}* and {@code maxPerStageDescriptor}*, the full value of {@code descriptorCount} is counted , except for descriptor bindings with a descriptor type of {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT} where {@code descriptorCount} specifies the upper bound on the byte size of the binding, thus it counts against the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-maxInlineUniformBlockSize">{@code maxInlineUniformBlockSize}</a> limit instead. .</li>
      * </ul>
      * 
      * <div style="margin-left: 26px; border-left: 1px solid gray; padding-left: 14px;"><h5>Note</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDiscardRectangles.java
Patch:
@@ -150,7 +150,7 @@ public static void nvkCmdSetDiscardRectangleEXT(VkCommandBuffer commandBuffer, i
      * <ul>
      * <li>{@code commandBuffer} <b>must</b> be a valid {@code VkCommandBuffer} handle</li>
      * <li>{@code pDiscardRectangles} <b>must</b> be a valid pointer to an array of {@code discardRectangleCount} {@link VkRect2D} structures</li>
-     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
+     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
      * <li>The {@code VkCommandPool} that {@code commandBuffer} was allocated from <b>must</b> support graphics operations</li>
      * <li>{@code discardRectangleCount} <b>must</b> be greater than 0</li>
      * </ul>
@@ -165,7 +165,7 @@ public static void nvkCmdSetDiscardRectangleEXT(VkCommandBuffer commandBuffer, i
      * <h5>Command Properties</h5>
      * 
      * <table class="lwjgl">
-     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
+     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
      * <tbody><tr><td>Primary Secondary</td><td>Both</td><td>Graphics</td><td></td></tr></tbody>
      * </table>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTDisplayControl.java
Patch:
@@ -244,7 +244,7 @@ public static int nvkRegisterDeviceEventEXT(VkDevice device, long pDeviceEventIn
      *
      * @param device           a logical device on which the event <b>may</b> occur.
      * @param pDeviceEventInfo a pointer to an instance of the {@link VkDeviceEventInfoEXT} structure describing the event of interest to the application.
-     * @param pAllocator       controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
+     * @param pAllocator       controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
      * @param pFence           points to a handle in which the resulting fence object is returned.
      */
     @NativeType("VkResult")
@@ -308,7 +308,7 @@ public static int nvkRegisterDisplayEventEXT(VkDevice device, long display, long
      * @param device            a logical device associated with {@code display}
      * @param display           the display on which the event <b>may</b> occur.
      * @param pDisplayEventInfo a pointer to an instance of the {@link VkDisplayEventInfoEXT} structure describing the event of interest to the application.
-     * @param pAllocator        controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
+     * @param pAllocator        controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
      * @param pFence            points to a handle in which the resulting fence object is returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTHeadlessSurface.java
Patch:
@@ -126,7 +126,7 @@ public static int nvkCreateHeadlessSurfaceEXT(VkInstance instance, long pCreateI
      *
      * @param instance    the instance to associate the surface with.
      * @param pCreateInfo a pointer to an instance of the {@link VkHeadlessSurfaceCreateInfoEXT} structure containing parameters affecting the creation of the surface object.
-     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pSurface    points to a {@code VkSurfaceKHR} handle in which the created surface object is returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTHostQueryReset.java
Patch:
@@ -88,7 +88,7 @@ static boolean checkCapsDevice(FunctionProvider provider, java.util.Map<String,
      * <h5>Valid Usage</h5>
      * 
      * <ul>
-     * <li>The <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-hostQueryReset">hostQueryReset</a> feature <b>must</b> be enabled</li>
+     * <li>The <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-hostQueryReset">hostQueryReset</a> feature <b>must</b> be enabled</li>
      * <li>{@code firstQuery} <b>must</b> be less than the number of queries in {@code queryPool}</li>
      * <li>The sum of {@code firstQuery} and {@code queryCount} <b>must</b> be less than or equal to the number of queries in {@code queryPool}</li>
      * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTPostDepthCoverage.java
Patch:
@@ -12,9 +12,9 @@
  * <li>{@code SPV_KHR_post_depth_coverage}</li>
  * </ul>
  * 
- * <p>which allows the fragment shader to control whether values in the {@code SampleMask} built-in input variable reflect the coverage after the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fragops-early">early per-fragment</a> depth and stencil tests are applied.</p>
+ * <p>which allows the fragment shader to control whether values in the {@code SampleMask} built-in input variable reflect the coverage after the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fragops-early">early per-fragment</a> depth and stencil tests are applied.</p>
  * 
- * <p>This extension adds a new {@code PostDepthCoverage} execution mode under the {@code SampleMaskPostDepthCoverage} capability. When this mode is specified along with {@code EarlyFragmentTests}, the value of an input variable decorated with the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#interfaces-builtin-variables-samplemask"> {@code SampleMask}</a> built-in reflects the coverage after the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#shaders-fragment-earlytest"> early fragment tests</a> are applied. Otherwise, it reflects the coverage before the depth and stencil tests.</p>
+ * <p>This extension adds a new {@code PostDepthCoverage} execution mode under the {@code SampleMaskPostDepthCoverage} capability. When this mode is specified along with {@code EarlyFragmentTests}, the value of an input variable decorated with the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#interfaces-builtin-variables-samplemask"> {@code SampleMask}</a> built-in reflects the coverage after the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#shaders-fragment-earlytest"> early fragment tests</a> are applied. Otherwise, it reflects the coverage before the depth and stencil tests.</p>
  * 
  * <p>When using GLSL source-based shading languages, the {@code post_depth_coverage} layout qualifier from GL_ARB_post_depth_coverage or GL_EXT_post_depth_coverage maps to the {@code PostDepthCoverage} execution mode.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSampleLocations.java
Patch:
@@ -138,7 +138,7 @@ public static void nvkCmdSetSampleLocationsEXT(VkCommandBuffer commandBuffer, lo
      * <ul>
      * <li>{@code commandBuffer} <b>must</b> be a valid {@code VkCommandBuffer} handle</li>
      * <li>{@code pSampleLocationsInfo} <b>must</b> be a valid pointer to a valid {@link VkSampleLocationsInfoEXT} structure</li>
-     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
+     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
      * <li>The {@code VkCommandPool} that {@code commandBuffer} was allocated from <b>must</b> support graphics operations</li>
      * </ul>
      * 
@@ -152,7 +152,7 @@ public static void nvkCmdSetSampleLocationsEXT(VkCommandBuffer commandBuffer, lo
      * <h5>Command Properties</h5>
      * 
      * <table class="lwjgl">
-     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
+     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
      * <tbody><tr><td>Primary Secondary</td><td>Both</td><td>Graphics</td><td></td></tr></tbody>
      * </table>
      * 
@@ -183,7 +183,7 @@ public static void nvkGetPhysicalDeviceMultisamplePropertiesEXT(VkPhysicalDevice
      * 
      * <h5>C Specification</h5>
      * 
-     * <p>In addition to the minimum capabilities described for (<a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits">Limits</a>) above, implementations <b>may</b> support additional multisampling capabilities specific to a particular sample count.</p>
+     * <p>In addition to the minimum capabilities described for (<a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits">Limits</a>) above, implementations <b>may</b> support additional multisampling capabilities specific to a particular sample count.</p>
      * 
      * <p>To query additional sample count specific multisampling capabilities, call:</p>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTSamplerFilterMinmax.java
Patch:
@@ -74,7 +74,7 @@ public final class EXTSamplerFilterMinmax {
      * <h5>Description</h5>
      * 
      * <ul>
-     * <li>{@link #VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT} specifies that texel values are combined by computing a weighted average of values in the footprint, using weights as specified in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-unnormalized-to-integer">the image operations chapter</a>.</li>
+     * <li>{@link #VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT} specifies that texel values are combined by computing a weighted average of values in the footprint, using weights as specified in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#textures-unnormalized-to-integer">the image operations chapter</a>.</li>
      * <li>{@link #VK_SAMPLER_REDUCTION_MODE_MIN_EXT SAMPLER_REDUCTION_MODE_MIN_EXT} specifies that texel values are combined by taking the component-wise minimum of values in the footprint with non-zero weights.</li>
      * <li>{@link #VK_SAMPLER_REDUCTION_MODE_MAX_EXT SAMPLER_REDUCTION_MODE_MAX_EXT} specifies that texel values are combined by taking the component-wise maximum of values in the footprint with non-zero weights.</li>
      * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTValidationCache.java
Patch:
@@ -172,7 +172,7 @@ public static int nvkCreateValidationCacheEXT(VkDevice device, long pCreateInfo,
      *
      * @param device           the logical device that creates the validation cache object.
      * @param pCreateInfo      a pointer to a {@link VkValidationCacheCreateInfoEXT} structure that contains the initial parameters for the validation cache object.
-     * @param pAllocator       controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
+     * @param pAllocator       controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
      * @param pValidationCache a pointer to a {@code VkValidationCacheEXT} handle in which the resulting validation cache object is returned.
      */
     @NativeType("VkResult")
@@ -236,7 +236,7 @@ public static void nvkDestroyValidationCacheEXT(VkDevice device, long validation
      *
      * @param device          the logical device that destroys the validation cache object.
      * @param validationCache the handle of the validation cache to destroy.
-     * @param pAllocator      controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
+     * @param pAllocator      controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
      */
     public static void vkDestroyValidationCacheEXT(VkDevice device, @NativeType("VkValidationCacheEXT") long validationCache, @Nullable @NativeType("VkAllocationCallbacks const *") VkAllocationCallbacks pAllocator) {
         nvkDestroyValidationCacheEXT(device, validationCache, memAddressSafe(pAllocator));

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTYcbcrImageArrays.java
Patch:
@@ -6,7 +6,7 @@
 package org.lwjgl.vulkan;
 
 /**
- * This extension allows images of a format that requires <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion"> Y'C<sub>B</sub>C<sub>R</sub> conversion</a> to be created with multiple array layers, which is otherwise restricted.
+ * This extension allows images of a format that requires <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion"> Y'C<sub>B</sub>C<sub>R</sub> conversion</a> to be created with multiple array layers, which is otherwise restricted.
  * 
  * <dl>
  * <dt><b>Name String</b></dt>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHR16bitStorage.java
Patch:
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRBindMemory2.java
Patch:
@@ -34,7 +34,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDedicatedAllocation.java
Patch:
@@ -110,7 +110,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDeviceGroup.java
Patch:
@@ -67,7 +67,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDeviceGroupCreation.java
Patch:
@@ -68,7 +68,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDisplay.java
Patch:
@@ -491,7 +491,7 @@ public static int nvkCreateDisplayModeKHR(VkPhysicalDevice physicalDevice, long
      * @param physicalDevice the physical device associated with {@code display}.
      * @param display        the display to create an additional mode for.
      * @param pCreateInfo    a {@link VkDisplayModeCreateInfoKHR} structure describing the new mode to create.
-     * @param pAllocator     the allocator used for host memory allocated for the display mode object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator     the allocator used for host memory allocated for the display mode object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pMode          returns the handle of the mode created.
      */
     @NativeType("VkResult")
@@ -624,7 +624,7 @@ public static int nvkCreateDisplayPlaneSurfaceKHR(VkInstance instance, long pCre
      *
      * @param instance    the instance corresponding to the physical device the targeted display is on.
      * @param pCreateInfo a pointer to an instance of the {@link VkDisplaySurfaceCreateInfoKHR} structure specifying which mode, plane, and other parameters to use, as described below.
-     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pSurface    points to a {@code VkSurfaceKHR} handle in which the created surface is returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRDisplaySwapchain.java
Patch:
@@ -158,7 +158,7 @@ public static int nvkCreateSharedSwapchainsKHR(VkDevice device, int swapchainCou
      *
      * @param device       the device to create the swapchains for.
      * @param pCreateInfos a pointer to an array of {@link VkSwapchainCreateInfoKHR} structures specifying the parameters of the created swapchains.
-     * @param pAllocator   the allocator used for host memory allocated for the swapchain objects when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator   the allocator used for host memory allocated for the swapchain objects when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pSwapchains  a pointer to an array of {@code VkSwapchainKHR} handles in which the created swapchain objects will be returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFence.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceCapabilities.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceFd.java
Patch:
@@ -186,7 +186,7 @@ public static int nvkGetFenceFdKHR(VkDevice device, long pGetFdInfo, long pFd) {
      * 
      * <p>Where supported by the operating system, the implementation <b>must</b> set the file descriptor to be closed automatically when an {@code execve} system call is made.</p>
      * 
-     * <p>Exporting a file descriptor from a fence <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence State</a>.</p>
+     * <p>Exporting a file descriptor from a fence <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence State</a>.</p>
      * 
      * <h5>Valid Usage (Implicit)</h5>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalFenceWin32.java
Patch:
@@ -174,7 +174,7 @@ public static int nvkGetFenceWin32HandleKHR(VkDevice device, long pGetWin32Handl
      * 
      * <p>For handle types defined as NT handles, the handles returned by {@code vkGetFenceWin32HandleKHR} are owned by the application. To avoid leaking resources, the application <b>must</b> release ownership of them using the {@code CloseHandle} system call when they are no longer needed.</p>
      * 
-     * <p>Exporting a Windows handle from a fence <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence Payloads</a>.</p>
+     * <p>Exporting a Windows handle from a fence <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence Payloads</a>.</p>
      * 
      * <h5>Valid Usage (Implicit)</h5>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalMemory.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalMemoryCapabilities.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphore.java
Patch:
@@ -28,7 +28,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreCapabilities.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreFd.java
Patch:
@@ -183,7 +183,7 @@ public static int nvkGetSemaphoreFdKHR(VkDevice device, long pGetFdInfo, long pF
      * 
      * <p>Where supported by the operating system, the implementation <b>must</b> set the file descriptor to be closed automatically when an {@code execve} system call is made.</p>
      * 
-     * <p>Exporting a file descriptor from a semaphore <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore State</a>.</p>
+     * <p>Exporting a file descriptor from a semaphore <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore State</a>.</p>
      * 
      * <h5>Valid Usage (Implicit)</h5>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRExternalSemaphoreWin32.java
Patch:
@@ -174,7 +174,7 @@ public static int nvkGetSemaphoreWin32HandleKHR(VkDevice device, long pGetWin32H
      * 
      * <p>For handle types defined as NT handles, the handles returned by {@code vkGetSemaphoreWin32HandleKHR} are owned by the application. To avoid leaking resources, the application <b>must</b> release ownership of them using the {@code CloseHandle} system call when they are no longer needed.</p>
      * 
-     * <p>Exporting a Windows handle from a semaphore <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a>.</p>
+     * <p>Exporting a Windows handle from a semaphore <b>may</b> have side effects depending on the transference of the specified handle type, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a>.</p>
      * 
      * <h5>Valid Usage (Implicit)</h5>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRGetDisplayProperties2.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * This extension provides new entry points to query device display properties and capabilities in a way that can be easily extended by other extensions, without introducing any further entry points. This extension can be considered the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_display">VK_KHR_display</a> equivalent of the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_get_physical_device_properties2"> VK_KHR_get_physical_device_properties2</a> extension.
+ * This extension provides new entry points to query device display properties and capabilities in a way that can be easily extended by other extensions, without introducing any further entry points. This extension can be considered the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_display">VK_KHR_display</a> equivalent of the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_get_physical_device_properties2"> VK_KHR_get_physical_device_properties2</a> extension.
  * 
  * <dl>
  * <dt><b>Name String</b></dt>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRGetMemoryRequirements2.java
Patch:
@@ -37,7 +37,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRGetPhysicalDeviceProperties2.java
Patch:
@@ -87,7 +87,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMaintenance1.java
Patch:
@@ -45,7 +45,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMaintenance2.java
Patch:
@@ -77,7 +77,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMaintenance3.java
Patch:
@@ -40,7 +40,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRMultiview.java
Patch:
@@ -32,7 +32,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRRelaxedBlockLayout.java
Patch:
@@ -8,7 +8,7 @@
 /**
  * The {@code VK_KHR_relaxed_block_layout} extension allows implementations to indicate they can support more variation in block {@code Offset} decorations. For example, placing a vector of three floats at an offset of 16*N + 4.
  * 
- * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#interfaces-resources-layout">Offset and Stride Assignment</a> for details.</p>
+ * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#interfaces-resources-layout">Offset and Stride Assignment</a> for details.</p>
  * 
  * <h5>Promotion to Vulkan 1.1</h5>
  * 
@@ -29,7 +29,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSamplerYcbcrConversion.java
Patch:
@@ -41,7 +41,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>
@@ -313,7 +313,7 @@ public static int nvkCreateSamplerYcbcrConversionKHR(VkDevice device, long pCrea
      *
      * @param device           the logical device that creates the sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion.
      * @param pCreateInfo      a pointer to an instance of the {@link VkSamplerYcbcrConversionCreateInfo} specifying the requested sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion.
-     * @param pAllocator       controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
+     * @param pAllocator       controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
      * @param pYcbcrConversion points to a {@code VkSamplerYcbcrConversion} handle in which the resulting sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion is returned.
      */
     @NativeType("VkResult")
@@ -341,7 +341,7 @@ public static void nvkDestroySamplerYcbcrConversionKHR(VkDevice device, long ycb
      *
      * @param device          the logical device that destroys the Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion.
      * @param ycbcrConversion the conversion to destroy.
-     * @param pAllocator      controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
+     * @param pAllocator      controls host memory allocation as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a> chapter.
      */
     public static void vkDestroySamplerYcbcrConversionKHR(VkDevice device, @NativeType("VkSamplerYcbcrConversion") long ycbcrConversion, @Nullable @NativeType("VkAllocationCallbacks const *") VkAllocationCallbacks pAllocator) {
         nvkDestroySamplerYcbcrConversionKHR(device, ycbcrConversion, memAddressSafe(pAllocator));

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderDrawParameters.java
Patch:
@@ -30,7 +30,7 @@
  * 
  * <h5>Promotion to Vulkan 1.1</h5>
  * 
- * <p>All functionality in this extension is included in core Vulkan 1.1, however a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-shaderDrawParameters">feature bit was added</a> to distinguish whether it is actually available or not.</p>
+ * <p>All functionality in this extension is included in core Vulkan 1.1, however a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-shaderDrawParameters">feature bit was added</a> to distinguish whether it is actually available or not.</p>
  * 
  * <dl>
  * <dt><b>Name String</b></dt>
@@ -47,7 +47,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRShaderFloat16Int8.java
Patch:
@@ -10,7 +10,7 @@
  * 
  * <p>The {@code VK_KHR_shader_float16_int8} extension allows use of 16-bit floating-point types and 8-bit integer types in shaders for arithmetic operations.</p>
  * 
- * <p>It introduces two new optional features {@code shaderFloat16} and {@code shaderInt8} which directly map to the {@code Float16} and the {@code Int8} SPIR-V capabilities. The {@code VK_KHR_shader_float16_int8} extension also specifies precision requirements for half-precision floating-point SPIR-V operations. This extension does not enable use of 8-bit integer types or 16-bit floating-point types in any <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#interfaces-iointerfaces"> shader input and output interfaces</a> and therefore does not supersede the {@link KHR8bitStorage VK_KHR_8bit_storage} or {@link KHR16bitStorage VK_KHR_16bit_storage} extensions.</p>
+ * <p>It introduces two new optional features {@code shaderFloat16} and {@code shaderInt8} which directly map to the {@code Float16} and the {@code Int8} SPIR-V capabilities. The {@code VK_KHR_shader_float16_int8} extension also specifies precision requirements for half-precision floating-point SPIR-V operations. This extension does not enable use of 8-bit integer types or 16-bit floating-point types in any <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#interfaces-iointerfaces"> shader input and output interfaces</a> and therefore does not supersede the {@link KHR8bitStorage VK_KHR_8bit_storage} or {@link KHR16bitStorage VK_KHR_16bit_storage} extensions.</p>
  * 
  * <dl>
  * <dt><b>Name String</b></dt>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRStorageBufferStorageClass.java
Patch:
@@ -33,7 +33,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRSurface.java
Patch:
@@ -327,7 +327,7 @@ public static void nvkDestroySurfaceKHR(VkInstance instance, long surface, long
      *
      * @param instance   the instance used to create the surface.
      * @param surface    the surface to destroy.
-     * @param pAllocator the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      */
     public static void vkDestroySurfaceKHR(VkInstance instance, @NativeType("VkSurfaceKHR") long surface, @Nullable @NativeType("VkAllocationCallbacks const *") VkAllocationCallbacks pAllocator) {
         nvkDestroySurfaceKHR(instance, surface, memAddressSafe(pAllocator));

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRVariablePointers.java
Patch:
@@ -12,7 +12,7 @@
  * 
  * <h5>Promotion to Vulkan 1.1</h5>
  * 
- * <p>All functionality in this extension is included in core Vulkan 1.1, with the KHR suffix omitted, however support for the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-variablePointersStorageBuffer"> {@code variablePointersStorageBuffer}</a> feature is made optional. The original type, enum and command names are still available as aliases of the core functionality.</p>
+ * <p>All functionality in this extension is included in core Vulkan 1.1, with the KHR suffix omitted, however support for the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-variablePointersStorageBuffer"> {@code variablePointersStorageBuffer}</a> feature is made optional. The original type, enum and command names are still available as aliases of the core functionality.</p>
  * 
  * <dl>
  * <dt><b>Name String</b></dt>
@@ -31,7 +31,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRWaylandSurface.java
Patch:
@@ -140,7 +140,7 @@ public static int nvkCreateWaylandSurfaceKHR(VkInstance instance, long pCreateIn
      *
      * @param instance    the instance to associate the surface with.
      * @param pCreateInfo a pointer to an instance of the {@link VkWaylandSurfaceCreateInfoKHR} structure containing parameters affecting the creation of the surface object.
-     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pSurface    points to a {@code VkSurfaceKHR} handle in which the created surface object is returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRWin32Surface.java
Patch:
@@ -140,7 +140,7 @@ public static int nvkCreateWin32SurfaceKHR(VkInstance instance, long pCreateInfo
      *
      * @param instance    the instance to associate the surface with.
      * @param pCreateInfo a pointer to an instance of the {@link VkWin32SurfaceCreateInfoKHR} structure containing parameters affecting the creation of the surface object.
-     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pSurface    points to a {@code VkSurfaceKHR} handle in which the created surface object is returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/KHRXlibSurface.java
Patch:
@@ -140,7 +140,7 @@ public static int nvkCreateXlibSurfaceKHR(VkInstance instance, long pCreateInfo,
      *
      * @param instance    the instance to associate the surface with.
      * @param pCreateInfo a pointer to an instance of the {@link VkXlibSurfaceCreateInfoKHR} structure containing the parameters affecting the creation of the surface object.
-     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pSurface    points to a {@code VkSurfaceKHR} handle in which the created surface object is returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/MVKMacosSurface.java
Patch:
@@ -124,7 +124,7 @@ public static int nvkCreateMacOSSurfaceMVK(VkInstance instance, long pCreateInfo
      *
      * @param instance    the instance with which to associate the surface.
      * @param pCreateInfo a pointer to an instance of the {@link VkMacOSSurfaceCreateInfoMVK} structure containing parameters affecting the creation of the surface object.
-     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
+     * @param pAllocator  the allocator used for host memory allocated for the surface object when there is no more specific allocator available (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-allocation">Memory Allocation</a>).
      * @param pSurface    points to a {@code VkSurfaceKHR} handle in which the created surface object is returned.
      */
     @NativeType("VkResult")

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVClipSpaceWScaling.java
Patch:
@@ -197,7 +197,7 @@ public static void nvkCmdSetViewportWScalingNV(VkCommandBuffer commandBuffer, in
      * <ul>
      * <li>{@code commandBuffer} <b>must</b> be a valid {@code VkCommandBuffer} handle</li>
      * <li>{@code pViewportWScalings} <b>must</b> be a valid pointer to an array of {@code viewportCount} {@link VkViewportWScalingNV} structures</li>
-     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
+     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
      * <li>The {@code VkCommandPool} that {@code commandBuffer} was allocated from <b>must</b> support graphics operations</li>
      * <li>{@code viewportCount} <b>must</b> be greater than 0</li>
      * </ul>
@@ -212,7 +212,7 @@ public static void nvkCmdSetViewportWScalingNV(VkCommandBuffer commandBuffer, in
      * <h5>Command Properties</h5>
      * 
      * <table class="lwjgl">
-     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
+     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
      * <tbody><tr><td>Primary Secondary</td><td>Both</td><td>Graphics</td><td></td></tr></tbody>
      * </table>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDedicatedAllocation.java
Patch:
@@ -93,10 +93,10 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_dedicated_allocation">VK_KHR_dedicated_allocation</a> extension
+ * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_dedicated_allocation">VK_KHR_dedicated_allocation</a> extension
  * 
  * <ul>
- * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul>
  * </li>
  * </ul></dd>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVDeviceDiagnosticCheckpoints.java
Patch:
@@ -101,7 +101,7 @@ static boolean checkCapsDevice(FunctionProvider provider, java.util.Map<String,
      * 
      * <ul>
      * <li>{@code commandBuffer} <b>must</b> be a valid {@code VkCommandBuffer} handle</li>
-     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
+     * <li>{@code commandBuffer} <b>must</b> be in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#commandbuffers-lifecycle">recording state</a></li>
      * <li>The {@code VkCommandPool} that {@code commandBuffer} was allocated from <b>must</b> support graphics, compute, or transfer operations</li>
      * </ul>
      * 
@@ -114,7 +114,7 @@ static boolean checkCapsDevice(FunctionProvider provider, java.util.Map<String,
      * <h5>Command Properties</h5>
      * 
      * <table class="lwjgl">
-     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
+     * <thead><tr><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkCommandBufferLevel">Command Buffer Levels</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vkCmdBeginRenderPass">Render Pass Scope</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkQueueFlagBits">Supported Queue Types</a></th><th><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">Pipeline Type</a></th></tr></thead>
      * <tbody><tr><td>Primary Secondary</td><td>Both</td><td>Graphics Compute Transfer</td><td></td></tr></tbody>
      * </table>
      *

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVExternalMemory.java
Patch:
@@ -29,10 +29,10 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_external_memory">VK_KHR_external_memory</a> extension
+ * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_external_memory">VK_KHR_external_memory</a> extension
  * 
  * <ul>
- * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul>
  * </li>
  * </ul></dd>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVExternalMemoryCapabilities.java
Patch:
@@ -28,10 +28,10 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_external_memory_capabilities">VK_KHR_external_memory_capabilities</a> extension
+ * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_external_memory_capabilities">VK_KHR_external_memory_capabilities</a> extension
  * 
  * <ul>
- * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
+ * <li>Which in turn was <em>promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#versions-1.1-promotions">Vulkan 1.1</a></li>
  * </ul>
  * </li>
  * </ul></dd>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVExternalMemoryWin32.java
Patch:
@@ -167,7 +167,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_external_memory_win32">VK_KHR_external_memory_win32</a> extension</li>
+ * <li><em>Deprecated</em> by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_external_memory_win32">VK_KHR_external_memory_win32</a> extension</li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVViewportSwizzle.java
Patch:
@@ -56,7 +56,7 @@ public final class NVViewportSwizzle {
      * 
      * <h5>Description</h5>
      * 
-     * <p>These values are described in detail in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vertexpostproc-viewport-swizzle">Viewport Swizzle</a>.</p>
+     * <p>These values are described in detail in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vertexpostproc-viewport-swizzle">Viewport Swizzle</a>.</p>
      * 
      * <h5>See Also</h5>
      * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVWin32KeyedMutex.java
Patch:
@@ -156,7 +156,7 @@
  * </ul></dd>
  * <dt><b>Deprecation state</b></dt>
  * <dd><ul>
- * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VK_KHR_win32_keyed_mutex">VK_KHR_win32_keyed_mutex</a> extension</li>
+ * <li><em>Promoted</em> to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VK_KHR_win32_keyed_mutex">VK_KHR_win32_keyed_mutex</a> extension</li>
  * </ul></dd>
  * <dt><b>Contact</b></dt>
  * <dd><ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkAllocationFunction.java
Patch:
@@ -36,7 +36,7 @@
  * <p>For example, {@code pfnAllocation} (or {@code pfnReallocation}) could cause termination of running Vulkan instance(s) on a failed allocation for debugging purposes, either directly or indirectly. In these circumstances, it <b>cannot</b> be assumed that any part of any affected {@code VkInstance} objects are going to operate correctly (even {@link VK10#vkDestroyInstance DestroyInstance}), and the application <b>must</b> ensure it cleans up properly via other means (e.g. process termination).</p>
  * </div>
  * 
- * <p>If {@code pfnAllocation} returns {@code NULL}, and if the implementation is unable to continue correct processing of the current command without the requested allocation, it <b>must</b> treat this as a run-time error, and generate {@link VK10#VK_ERROR_OUT_OF_HOST_MEMORY ERROR_OUT_OF_HOST_MEMORY} at the appropriate time for the command in which the condition was detected, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fundamentals-errorcodes">Return Codes</a>.</p>
+ * <p>If {@code pfnAllocation} returns {@code NULL}, and if the implementation is unable to continue correct processing of the current command without the requested allocation, it <b>must</b> treat this as a run-time error, and generate {@link VK10#VK_ERROR_OUT_OF_HOST_MEMORY ERROR_OUT_OF_HOST_MEMORY} at the appropriate time for the command in which the condition was detected, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fundamentals-errorcodes">Return Codes</a>.</p>
  * 
  * <p>If the implementation is able to continue correct processing of the current command without the requested allocation, then it <b>may</b> do so, and <b>must</b> not generate {@link VK10#VK_ERROR_OUT_OF_HOST_MEMORY ERROR_OUT_OF_HOST_MEMORY} as a result of this failed allocation.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkAllocationFunctionI.java
Patch:
@@ -34,7 +34,7 @@
  * <p>For example, {@code pfnAllocation} (or {@code pfnReallocation}) could cause termination of running Vulkan instance(s) on a failed allocation for debugging purposes, either directly or indirectly. In these circumstances, it <b>cannot</b> be assumed that any part of any affected {@code VkInstance} objects are going to operate correctly (even {@link VK10#vkDestroyInstance DestroyInstance}), and the application <b>must</b> ensure it cleans up properly via other means (e.g. process termination).</p>
  * </div>
  * 
- * <p>If {@code pfnAllocation} returns {@code NULL}, and if the implementation is unable to continue correct processing of the current command without the requested allocation, it <b>must</b> treat this as a run-time error, and generate {@link VK10#VK_ERROR_OUT_OF_HOST_MEMORY ERROR_OUT_OF_HOST_MEMORY} at the appropriate time for the command in which the condition was detected, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fundamentals-errorcodes">Return Codes</a>.</p>
+ * <p>If {@code pfnAllocation} returns {@code NULL}, and if the implementation is unable to continue correct processing of the current command without the requested allocation, it <b>must</b> treat this as a run-time error, and generate {@link VK10#VK_ERROR_OUT_OF_HOST_MEMORY ERROR_OUT_OF_HOST_MEMORY} at the appropriate time for the command in which the condition was detected, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fundamentals-errorcodes">Return Codes</a>.</p>
  * 
  * <p>If the implementation is able to continue correct processing of the current command without the requested allocation, then it <b>may</b> do so, and <b>must</b> not generate {@link VK10#VK_ERROR_OUT_OF_HOST_MEMORY ERROR_OUT_OF_HOST_MEMORY} as a result of this failed allocation.</p>
  * 
@@ -67,7 +67,7 @@ default long callback(long args) {
      * @param pUserData       the value specified for {@link VkAllocationCallbacks}{@code ::pUserData} in the allocator specified by the application.
      * @param size            the size in bytes of the requested allocation.
      * @param alignment       the requested alignment of the allocation in bytes and <b>must</b> be a power of two.
-     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
+     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
      */
     @NativeType("void *") long invoke(@NativeType("void *") long pUserData, @NativeType("size_t") long size, @NativeType("size_t") long alignment, @NativeType("VkSystemAllocationScope") int allocationScope);
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkApplicationInfo.java
Patch:
@@ -45,7 +45,7 @@
  * <p>If we modify the above example so that the application sets {@code apiVersion} to 1.1, then the application <b>must</b> not use Vulkan 1.2 functionality on the physical device that supports Vulkan 1.2.</p>
  * </div>
  * 
- * <p>Implicit layers <b>must</b> be disabled if they do not support a version at least as high as {@code apiVersion}. See the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#LoaderAndLayerInterface">Vulkan Loader Specification and Architecture Overview</a> document for additional information.</p>
+ * <p>Implicit layers <b>must</b> be disabled if they do not support a version at least as high as {@code apiVersion}. See the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#LoaderAndLayerInterface">Vulkan Loader Specification and Architecture Overview</a> document for additional information.</p>
  * 
  * <div style="margin-left: 26px; border-left: 1px solid gray; padding-left: 14px;"><h5>Note</h5>
  * 
@@ -74,7 +74,7 @@
  * <li>{@code applicationVersion} &ndash; an unsigned integer variable containing the developer-supplied version number of the application.</li>
  * <li>{@code pEngineName} &ndash; {@code NULL} or is a pointer to a null-terminated UTF-8 string containing the name of the engine (if any) used to create the application.</li>
  * <li>{@code engineVersion} &ndash; an unsigned integer variable containing the developer-supplied version number of the engine used to create the application.</li>
- * <li>{@code apiVersion} &ndash; <b>must</b> be the highest version of Vulkan that the application is designed to use, encoded as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#extendingvulkan-coreversions-versionnumbers">Version Numbers</a>. The patch version number specified in {@code apiVersion} is ignored when creating an instance object. Only the major and minor versions of the instance <b>must</b> match those requested in {@code apiVersion}.</li>
+ * <li>{@code apiVersion} &ndash; <b>must</b> be the highest version of Vulkan that the application is designed to use, encoded as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#extendingvulkan-coreversions-versionnumbers">Version Numbers</a>. The patch version number specified in {@code apiVersion} is ignored when creating an instance object. Only the major and minor versions of the instance <b>must</b> match those requested in {@code apiVersion}.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkAttachmentDescription.java
Patch:
@@ -30,7 +30,7 @@
  * 
  * <p>The load and store operations apply on the first and last use of each view in the render pass, respectively. If a view index of an attachment is not included in the view mask in any subpass that uses it, then the load and store operations are ignored, and the attachment's memory contents will not be modified by execution of a render pass instance.</p>
  * 
- * <p>During a render pass instance, input/color attachments with color formats that have a component size of 8, 16, or 32 bits <b>must</b> be represented in the attachment's format throughout the instance. Attachments with other floating- or fixed-point color formats, or with depth components <b>may</b> be represented in a format with a precision higher than the attachment format, but <b>must</b> be represented with the same range. When such a component is loaded via the {@code loadOp}, it will be converted into an implementation-dependent format used by the render pass. Such components <b>must</b> be converted from the render pass format, to the format of the attachment, before they are resolved or stored at the end of a render pass instance via {@code storeOp}. Conversions occur as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fundamentals-numerics">Numeric Representation and Computation</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fundamentals-fixedconv">Fixed-Point Data Conversions</a>.</p>
+ * <p>During a render pass instance, input/color attachments with color formats that have a component size of 8, 16, or 32 bits <b>must</b> be represented in the attachment's format throughout the instance. Attachments with other floating- or fixed-point color formats, or with depth components <b>may</b> be represented in a format with a precision higher than the attachment format, but <b>must</b> be represented with the same range. When such a component is loaded via the {@code loadOp}, it will be converted into an implementation-dependent format used by the render pass. Such components <b>must</b> be converted from the render pass format, to the format of the attachment, before they are resolved or stored at the end of a render pass instance via {@code storeOp}. Conversions occur as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fundamentals-numerics">Numeric Representation and Computation</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fundamentals-fixedconv">Fixed-Point Data Conversions</a>.</p>
  * 
  * <p>If {@code flags} includes {@link VK10#VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT}, then the attachment is treated as if it shares physical memory with another attachment in the same render pass. This information limits the ability of the implementation to reorder certain operations (like layout transitions and the {@code loadOp}) such that it is not improperly reordered against other uses of the same physical memory via a different attachment. This is described in more detail below.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBindImageMemoryInfo.java
Patch:
@@ -32,8 +32,8 @@
  * <li>If the {@code pNext} chain includes an instance of the {@link VkBindImagePlaneMemoryInfo} structure, {@code memoryOffset} <b>must</b> be an integer multiple of the {@code alignment} member of the {@link VkMemoryRequirements} structure returned from a call to {@link VK11#vkGetImageMemoryRequirements2 GetImageMemoryRequirements2} with {@code image} and the correct {@code planeAspect} for this plane in the {@link VkImagePlaneMemoryRequirementsInfo} structure attached to the {@link VkImageMemoryRequirementsInfo2}&#8217;s {@code pNext} chain</li>
  * <li>If the {@code pNext} chain includes an instance of the {@link VkBindImagePlaneMemoryInfo} structure, the difference of the size of {@code memory} and {@code memoryOffset} <b>must</b> be greater than or equal to the {@code size} member of the {@link VkMemoryRequirements} structure returned from a call to {@link VK11#vkGetImageMemoryRequirements2 GetImageMemoryRequirements2} with the same {@code image} and the correct {@code planeAspect} for this plane in the {@link VkImagePlaneMemoryRequirementsInfo} structure attached to the {@link VkImageMemoryRequirementsInfo2}&#8217;s {@code pNext} chain</li>
  * <li>If {@code image} requires a dedicated allocation (as reported by {@link VK11#vkGetImageMemoryRequirements2 GetImageMemoryRequirements2} in {@link VkMemoryDedicatedRequirements}::requiresDedicatedAllocation for {@code image}), {@code memory} <b>must</b> have been created with {@link VkMemoryDedicatedAllocateInfo}{@code ::image} equal to {@code image} and {@code memoryOffset} <b>must</b> be zero</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-dedicatedAllocationImageAliasing">dedicated allocation image aliasing</a> feature is not enabled, and the {@link VkMemoryAllocateInfo} provided when {@code memory} was allocated included an instance of {@link VkMemoryDedicatedAllocateInfo} in its {@code pNext} chain, and {@link VkMemoryDedicatedAllocateInfo}{@code ::image} was not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, then {@code image} <b>must</b> equal {@link VkMemoryDedicatedAllocateInfo}{@code ::image} and {@code memoryOffset} <b>must</b> be zero.</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-dedicatedAllocationImageAliasing">dedicated allocation image aliasing</a> feature is enabled, and the {@link VkMemoryAllocateInfo} provided when {@code memory} was allocated included an instance of {@link VkMemoryDedicatedAllocateInfo} in its {@code pNext} chain, and {@link VkMemoryDedicatedAllocateInfo}{@code ::image} was not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, then {@code memoryOffset} <b>must</b> be zero, and {@code image} <b>must</b> be either equal to {@link VkMemoryDedicatedAllocateInfo}{@code ::image} or an image that was created using the same parameters in {@link VkImageCreateInfo}, with the exception that {@code extent} and {@code arrayLayers} <b>may</b> differ subject to the following restrictions: every dimension in the {@code extent} parameter of the image being bound <b>must</b> be equal to or smaller than the original image for which the allocation was created; and the {@code arrayLayers} parameter of the image being bound <b>must</b> be equal to or smaller than the original image for which the allocation was created.</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-dedicatedAllocationImageAliasing">dedicated allocation image aliasing</a> feature is not enabled, and the {@link VkMemoryAllocateInfo} provided when {@code memory} was allocated included an instance of {@link VkMemoryDedicatedAllocateInfo} in its {@code pNext} chain, and {@link VkMemoryDedicatedAllocateInfo}{@code ::image} was not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, then {@code image} <b>must</b> equal {@link VkMemoryDedicatedAllocateInfo}{@code ::image} and {@code memoryOffset} <b>must</b> be zero.</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-dedicatedAllocationImageAliasing">dedicated allocation image aliasing</a> feature is enabled, and the {@link VkMemoryAllocateInfo} provided when {@code memory} was allocated included an instance of {@link VkMemoryDedicatedAllocateInfo} in its {@code pNext} chain, and {@link VkMemoryDedicatedAllocateInfo}{@code ::image} was not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, then {@code memoryOffset} <b>must</b> be zero, and {@code image} <b>must</b> be either equal to {@link VkMemoryDedicatedAllocateInfo}{@code ::image} or an image that was created using the same parameters in {@link VkImageCreateInfo}, with the exception that {@code extent} and {@code arrayLayers} <b>may</b> differ subject to the following restrictions: every dimension in the {@code extent} parameter of the image being bound <b>must</b> be equal to or smaller than the original image for which the allocation was created; and the {@code arrayLayers} parameter of the image being bound <b>must</b> be equal to or smaller than the original image for which the allocation was created.</li>
  * <li>If {@code image} was created with {@link VkDedicatedAllocationImageCreateInfoNV}{@code ::dedicatedAllocation} equal to {@link VK10#VK_TRUE TRUE}, {@code memory} <b>must</b> have been created with {@link VkDedicatedAllocationMemoryAllocateInfoNV}{@code ::image} equal to {@code image} and {@code memoryOffset} <b>must</b> be zero</li>
  * <li>If the {@code pNext} chain includes {@link VkBindImageMemoryDeviceGroupInfo}, all instances of {@code memory} specified by {@link VkBindImageMemoryDeviceGroupInfo}{@code ::pDeviceIndices} <b>must</b> have been allocated</li>
  * <li>If the {@code pNext} chain includes {@link VkBindImageMemoryDeviceGroupInfo}, and {@link VkBindImageMemoryDeviceGroupInfo}{@code ::splitInstanceBindRegionCount} is not zero, then {@code image} <b>must</b> have been created with the {@link VK11#VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT} bit set</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBindImagePlaneMemoryInfo.java
Patch:
@@ -22,7 +22,7 @@
  * 
  * <ul>
  * <li>If the image&#8217;s tiling is {@link VK10#VK_IMAGE_TILING_LINEAR IMAGE_TILING_LINEAR} or {@link VK10#VK_IMAGE_TILING_OPTIMAL IMAGE_TILING_OPTIMAL}, then {@code planeAspect} <b>must</b> be a single valid <em>format plane</em> for the image. (That is, {@code planeAspect} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT} or {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT} for “{@code _2PLANE}” formats and {@code planeAspect} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT}, {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT}, or {@link VK11#VK_IMAGE_ASPECT_PLANE_2_BIT IMAGE_ASPECT_PLANE_2_BIT} for “{@code _3PLANE}” formats.)</li>
- * <li>If the image&#8217;s tiling is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, then {@code planeAspect} <b>must</b> be a single valid <em>memory plane</em> for the image. (That is, {@code aspectMask} <b>must</b> specify a plane index that is less than the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkDrmFormatModifierPropertiesEXT">{@code drmFormatModifierPlaneCount}</a> associated with the image&#8217;s <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkImageCreateInfo">{@code format}</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkImageDrmFormatModifierPropertiesEXT">{@code drmFormatModifier}</a>.)</li>
+ * <li>If the image&#8217;s tiling is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, then {@code planeAspect} <b>must</b> be a single valid <em>memory plane</em> for the image. (That is, {@code aspectMask} <b>must</b> specify a plane index that is less than the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkDrmFormatModifierPropertiesEXT">{@code drmFormatModifierPlaneCount}</a> associated with the image&#8217;s <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkImageCreateInfo">{@code format}</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkImageDrmFormatModifierPropertiesEXT">{@code drmFormatModifier}</a>.)</li>
  * <li>A single call to {@link VK11#vkBindImageMemory2 BindImageMemory2} <b>must</b> bind all or none of the planes of an image (i.e. bindings to all planes of an image <b>must</b> be made in a single {@link VK11#vkBindImageMemory2 BindImageMemory2} call), as separate bindings</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBindSparseInfo.java
Patch:
@@ -42,15 +42,15 @@
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
  * <li>{@code waitSemaphoreCount} &ndash; the number of semaphores upon which to wait before executing the sparse binding operations for the batch.</li>
- * <li>{@code pWaitSemaphores} &ndash; a pointer to an array of semaphores upon which to wait on before the sparse binding operations for this batch begin execution. If semaphores to wait on are provided, they define a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-waiting">semaphore wait operation</a>.</li>
+ * <li>{@code pWaitSemaphores} &ndash; a pointer to an array of semaphores upon which to wait on before the sparse binding operations for this batch begin execution. If semaphores to wait on are provided, they define a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-waiting">semaphore wait operation</a>.</li>
  * <li>{@code bufferBindCount} &ndash; the number of sparse buffer bindings to perform in the batch.</li>
  * <li>{@code pBufferBinds} &ndash; a pointer to an array of {@link VkSparseBufferMemoryBindInfo} structures.</li>
  * <li>{@code imageOpaqueBindCount} &ndash; the number of opaque sparse image bindings to perform.</li>
  * <li>{@code pImageOpaqueBinds} &ndash; a pointer to an array of {@link VkSparseImageOpaqueMemoryBindInfo} structures, indicating opaque sparse image bindings to perform.</li>
  * <li>{@code imageBindCount} &ndash; the number of sparse image bindings to perform.</li>
  * <li>{@code pImageBinds} &ndash; a pointer to an array of {@link VkSparseImageMemoryBindInfo} structures, indicating sparse image bindings to perform.</li>
  * <li>{@code signalSemaphoreCount} &ndash; the number of semaphores to be signaled once the sparse binding operations specified by the structure have completed execution.</li>
- * <li>{@code pSignalSemaphores} &ndash; a pointer to an array of semaphores which will be signaled when the sparse binding operations for this batch have completed execution. If semaphores to be signaled are provided, they define a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-signaling">semaphore signal operation</a>.</li>
+ * <li>{@code pSignalSemaphores} &ndash; a pointer to an array of semaphores which will be signaled when the sparse binding operations for this batch have completed execution. If semaphores to be signaled are provided, they define a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-signaling">semaphore signal operation</a>.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBufferViewCreateInfo.java
Patch:
@@ -25,7 +25,7 @@
  * <li>{@code offset} <b>must</b> be a multiple of {@link VkPhysicalDeviceLimits}{@code ::minTexelBufferOffsetAlignment}</li>
  * <li>If {@code range} is not equal to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, {@code range} <b>must</b> be greater than 0</li>
  * <li>If {@code range} is not equal to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, {@code range} <b>must</b> be an integer multiple of the texel block size of {@code format}</li>
- * <li>If {@code range} is not equal to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, {@code range} divided by the texel block size of {@code format}, multiplied by the number of texels per texel block for that format (as defined in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-compatibility">Compatible Formats</a> table), <b>must</b> be less than or equal to {@link VkPhysicalDeviceLimits}{@code ::maxTexelBufferElements}</li>
+ * <li>If {@code range} is not equal to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, {@code range} divided by the texel block size of {@code format}, multiplied by the number of texels per texel block for that format (as defined in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-compatibility">Compatible Formats</a> table), <b>must</b> be less than or equal to {@link VkPhysicalDeviceLimits}{@code ::maxTexelBufferElements}</li>
  * <li>If {@code range} is not equal to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, the sum of {@code offset} and {@code range} <b>must</b> be less than or equal to the size of {@code buffer}</li>
  * <li>{@code buffer} <b>must</b> have been created with a {@code usage} value containing at least one of {@link VK10#VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT} or {@link VK10#VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT}</li>
  * <li>If {@code buffer} was created with {@code usage} containing {@link VK10#VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT}, {@code format} <b>must</b> be supported for uniform texel buffers, as specified by the {@link VK10#VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT} flag in {@link VkFormatProperties}{@code ::bufferFeatures} returned by {@code vkGetPhysicalDeviceFormatProperties}</li>
@@ -56,7 +56,7 @@
  * <li>{@code buffer} &ndash; a {@code VkBuffer} on which the view will be created.</li>
  * <li>{@code format} &ndash; a {@code VkFormat} describing the format of the data elements in the buffer.</li>
  * <li>{@code offset} &ndash; an offset in bytes from the base address of the buffer. Accesses to the buffer view from shaders use addressing that is relative to this starting offset.</li>
- * <li>{@code range} &ndash; a size in bytes of the buffer view. If {@code range} is equal to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, the range from {@code offset} to the end of the buffer is used. If {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE} is used and the remaining size of the buffer is not a multiple of the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#texel-block-size">texel block size</a> of {@code format}, the nearest smaller multiple is used.</li>
+ * <li>{@code range} &ndash; a size in bytes of the buffer view. If {@code range} is equal to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, the range from {@code offset} to the end of the buffer is used. If {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE} is used and the remaining size of the buffer is not a multiple of the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#texel-block-size">texel block size</a> of {@code format}, the nearest smaller multiple is used.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkClearAttachment.java
Patch:
@@ -51,7 +51,7 @@
  * <ul>
  * <li>{@code aspectMask} &ndash; a mask selecting the color, depth and/or stencil aspects of the attachment to be cleared.</li>
  * <li>{@code colorAttachment} &ndash; only meaningful if {@link VK10#VK_IMAGE_ASPECT_COLOR_BIT IMAGE_ASPECT_COLOR_BIT} is set in {@code aspectMask}, in which case it is an index to the {@code pColorAttachments} array in the {@link VkSubpassDescription} structure of the current subpass which selects the color attachment to clear.</li>
- * <li>{@code clearValue} &ndash; the color or depth/stencil value to clear the attachment to, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#clears-values">Clear Values</a> below.</li>
+ * <li>{@code clearValue} &ndash; the color or depth/stencil value to clear the attachment to, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#clears-values">Clear Values</a> below.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkClearColorValue.java
Patch:
@@ -32,7 +32,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code float32} &ndash; are the color clear values when the format of the image or attachment is one of the formats in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-numericformat">Interpretation of Numeric Format</a> table other than signed integer ({@code SINT}) or unsigned integer ({@code UINT}). Floating point values are automatically converted to the format of the image, with the clear value being treated as linear if the image is sRGB.</li>
+ * <li>{@code float32} &ndash; are the color clear values when the format of the image or attachment is one of the formats in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-numericformat">Interpretation of Numeric Format</a> table other than signed integer ({@code SINT}) or unsigned integer ({@code UINT}). Floating point values are automatically converted to the format of the image, with the clear value being treated as linear if the image is sRGB.</li>
  * <li>{@code int32} &ndash; are the color clear values when the format of the image or attachment is signed integer ({@code SINT}). Signed integer values are converted to the format of the image by casting to the smaller type (with negative 32-bit values mapping to negative values in the smaller type). If the integer clear value is not representable in the target type (e.g. would overflow in conversion to that type), the clear value is undefined.</li>
  * <li>{@code uint32} &ndash; are the color clear values when the format of the image or attachment is unsigned integer ({@code UINT}). Unsigned integer values are converted to the format of the image by casting to the integer type with fewer bits.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCommandBufferInheritanceConditionalRenderingInfoEXT.java
Patch:
@@ -25,7 +25,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-inheritedConditionalRendering">inherited conditional rendering</a> feature is not enabled, {@code conditionalRenderingEnable} <b>must</b> be {@link VK10#VK_FALSE FALSE}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-inheritedConditionalRendering">inherited conditional rendering</a> feature is not enabled, {@code conditionalRenderingEnable} <b>must</b> be {@link VK10#VK_FALSE FALSE}</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCommandPoolCreateInfo.java
Patch:
@@ -36,7 +36,7 @@
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
  * <li>{@code flags} &ndash; a bitmask of {@code VkCommandPoolCreateFlagBits} indicating usage behavior for the pool and command buffers allocated from it.</li>
- * <li>{@code queueFamilyIndex} &ndash; designates a queue family as described in section <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#devsandqueues-queueprops">Queue Family Properties</a>. All command buffers allocated from this command pool <b>must</b> be submitted on queues from the same queue family.</li>
+ * <li>{@code queueFamilyIndex} &ndash; designates a queue family as described in section <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#devsandqueues-queueprops">Queue Family Properties</a>. All command buffers allocated from this command pool <b>must</b> be submitted on queues from the same queue family.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkComputePipelineCreateInfo.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>The parameters {@code basePipelineHandle} and {@code basePipelineIndex} are described in more detail in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#pipelines-pipeline-derivatives">Pipeline Derivatives</a>.</p>
+ * <p>The parameters {@code basePipelineHandle} and {@code basePipelineIndex} are described in more detail in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#pipelines-pipeline-derivatives">Pipeline Derivatives</a>.</p>
  * 
  * <p>{@code stage} points to a structure of type {@link VkPipelineShaderStageCreateInfo}.</p>
  * 
@@ -32,8 +32,8 @@
  * <li>If {@code flags} contains the {@link VK10#VK_PIPELINE_CREATE_DERIVATIVE_BIT PIPELINE_CREATE_DERIVATIVE_BIT} flag, and {@code basePipelineIndex} is not -1, {@code basePipelineHandle} <b>must</b> be {@link VK10#VK_NULL_HANDLE NULL_HANDLE}</li>
  * <li>If {@code flags} contains the {@link VK10#VK_PIPELINE_CREATE_DERIVATIVE_BIT PIPELINE_CREATE_DERIVATIVE_BIT} flag, and {@code basePipelineHandle} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code basePipelineIndex} <b>must</b> be -1</li>
  * <li>The {@code stage} member of {@code stage} <b>must</b> be {@link VK10#VK_SHADER_STAGE_COMPUTE_BIT SHADER_STAGE_COMPUTE_BIT}</li>
- * <li>The shader code for the entry point identified by {@code stage} and the rest of the state identified by this structure <b>must</b> adhere to the pipeline linking rules described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#interfaces">Shader Interfaces</a> chapter</li>
- * <li>{@code layout} <b>must</b> be <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#descriptorsets-pipelinelayout-consistency">consistent</a> with the layout of the compute shader specified in {@code stage}</li>
+ * <li>The shader code for the entry point identified by {@code stage} and the rest of the state identified by this structure <b>must</b> adhere to the pipeline linking rules described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#interfaces">Shader Interfaces</a> chapter</li>
+ * <li>{@code layout} <b>must</b> be <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#descriptorsets-pipelinelayout-consistency">consistent</a> with the layout of the compute shader specified in {@code stage}</li>
  * <li>The number of resources in {@code layout} accessible to the compute shader stage <b>must</b> be less than or equal to {@link VkPhysicalDeviceLimits}{@code ::maxPerStageResources}</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCopyDescriptorSet.java
Patch:
@@ -22,11 +22,11 @@
  * 
  * <ul>
  * <li>{@code srcBinding} <b>must</b> be a valid binding within {@code srcSet}</li>
- * <li>The sum of {@code srcArrayElement} and {@code descriptorCount} <b>must</b> be less than or equal to the number of array elements in the descriptor set binding specified by {@code srcBinding}, and all applicable consecutive bindings, as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
+ * <li>The sum of {@code srcArrayElement} and {@code descriptorCount} <b>must</b> be less than or equal to the number of array elements in the descriptor set binding specified by {@code srcBinding}, and all applicable consecutive bindings, as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
  * <li>{@code dstBinding} <b>must</b> be a valid binding within {@code dstSet}</li>
- * <li>The sum of {@code dstArrayElement} and {@code descriptorCount} <b>must</b> be less than or equal to the number of array elements in the descriptor set binding specified by {@code dstBinding}, and all applicable consecutive bindings, as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
+ * <li>The sum of {@code dstArrayElement} and {@code descriptorCount} <b>must</b> be less than or equal to the number of array elements in the descriptor set binding specified by {@code dstBinding}, and all applicable consecutive bindings, as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
  * <li>The type of {@code dstBinding} within {@code dstSet} <b>must</b> be equal to the type of {@code srcBinding} within {@code srcSet}</li>
- * <li>If {@code srcSet} is equal to {@code dstSet}, then the source and destination ranges of descriptors <b>must</b> not overlap, where the ranges <b>may</b> include array elements from consecutive bindings as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
+ * <li>If {@code srcSet} is equal to {@code dstSet}, then the source and destination ranges of descriptors <b>must</b> not overlap, where the ranges <b>may</b> include array elements from consecutive bindings as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
  * <li>If the descriptor type of the descriptor set binding specified by {@code srcBinding} is {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT}, {@code srcArrayElement} <b>must</b> be an integer multiple of 4</li>
  * <li>If the descriptor type of the descriptor set binding specified by {@code dstBinding} is {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT}, {@code dstArrayElement} <b>must</b> be an integer multiple of 4</li>
  * <li>If the descriptor type of the descriptor set binding specified by either {@code srcBinding} or {@code dstBinding} is {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT}, {@code descriptorCount} <b>must</b> be an integer multiple of 4</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkD3D12FenceSubmitInfoKHR.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>If the semaphore in {@link VkSubmitInfo}{@code ::pWaitSemaphores} or {@link VkSubmitInfo}{@code ::pSignalSemaphores} corresponding to an entry in {@code pWaitSemaphoreValues} or {@code pSignalSemaphoreValues} respectively does not currently have a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-payloads">payload</a> referring to a Direct3D 12 fence, the implementation <b>must</b> ignore the value in the {@code pWaitSemaphoreValues} or {@code pSignalSemaphoreValues} entry.</p>
+ * <p>If the semaphore in {@link VkSubmitInfo}{@code ::pWaitSemaphores} or {@link VkSubmitInfo}{@code ::pSignalSemaphores} corresponding to an entry in {@code pWaitSemaphoreValues} or {@code pSignalSemaphoreValues} respectively does not currently have a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-payloads">payload</a> referring to a Direct3D 12 fence, the implementation <b>must</b> ignore the value in the {@code pWaitSemaphoreValues} or {@code pSignalSemaphoreValues} entry.</p>
  * 
  * <h5>Valid Usage</h5>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugMarkerObjectNameInfoEXT.java
Patch:
@@ -28,7 +28,7 @@
  * <ul>
  * <li>{@code objectType} <b>must</b> not be {@link EXTDebugReport#VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT}</li>
  * <li>{@code object} <b>must</b> not be {@link VK10#VK_NULL_HANDLE NULL_HANDLE}</li>
- * <li>{@code object} <b>must</b> be a Vulkan object of the type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</li>
+ * <li>{@code object} <b>must</b> be a Vulkan object of the type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugMarkerObjectTagInfoEXT.java
Patch:
@@ -28,7 +28,7 @@
  * <ul>
  * <li>{@code objectType} <b>must</b> not be {@link EXTDebugReport#VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT}</li>
  * <li>{@code object} <b>must</b> not be {@link VK10#VK_NULL_HANDLE NULL_HANDLE}</li>
- * <li>{@code object} <b>must</b> be a Vulkan object of the type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</li>
+ * <li>{@code object} <b>must</b> be a Vulkan object of the type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugReportCallbackEXT.java
Patch:
@@ -35,7 +35,7 @@
  * 
  * <p>The callback returns a {@code VkBool32}, which is interpreted in a layer-specified manner. The application <b>should</b> always return {@link VK10#VK_FALSE FALSE}. The {@link VK10#VK_TRUE TRUE} value is reserved for use in layer development.</p>
  * 
- * <p>{@code object} <b>must</b> be a Vulkan object or {@link VK10#VK_NULL_HANDLE NULL_HANDLE}. If {@code objectType} is not {@link EXTDebugReport#VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT} and {@code object} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code object} <b>must</b> be a Vulkan object of the corresponding type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</p>
+ * <p>{@code object} <b>must</b> be a Vulkan object or {@link VK10#VK_NULL_HANDLE NULL_HANDLE}. If {@code objectType} is not {@link EXTDebugReport#VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT} and {@code object} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code object} <b>must</b> be a Vulkan object of the corresponding type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</p>
  * 
  * <h5>See Also</h5>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugReportCallbackEXTI.java
Patch:
@@ -33,7 +33,7 @@
  * 
  * <p>The callback returns a {@code VkBool32}, which is interpreted in a layer-specified manner. The application <b>should</b> always return {@link VK10#VK_FALSE FALSE}. The {@link VK10#VK_TRUE TRUE} value is reserved for use in layer development.</p>
  * 
- * <p>{@code object} <b>must</b> be a Vulkan object or {@link VK10#VK_NULL_HANDLE NULL_HANDLE}. If {@code objectType} is not {@link EXTDebugReport#VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT} and {@code object} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code object} <b>must</b> be a Vulkan object of the corresponding type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</p>
+ * <p>{@code object} <b>must</b> be a Vulkan object or {@link VK10#VK_NULL_HANDLE NULL_HANDLE}. If {@code objectType} is not {@link EXTDebugReport#VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT} and {@code object} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code object} <b>must</b> be a Vulkan object of the corresponding type associated with {@code objectType} as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debug-report-object-types">{@code VkDebugReportObjectTypeEXT} and Vulkan Handle Relationship</a>.</p>
  * 
  * <h5>See Also</h5>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugUtilsMessengerCallbackDataEXT.java
Patch:
@@ -62,9 +62,9 @@
  * <li>{@code messageIdNumber} &ndash; the ID number of the triggering message. If the message corresponds to a validation layer message, then this number is related to the internal number associated with the message being triggered.</li>
  * <li>{@code pMessage} &ndash; a null-terminated string detailing the trigger conditions.</li>
  * <li>{@code queueLabelCount} &ndash; a count of items contained in the {@code pQueueLabels} array.</li>
- * <li>{@code pQueueLabels} &ndash; NULL or a pointer to an array of {@link VkDebugUtilsLabelEXT} active in the current {@code VkQueue} at the time the callback was triggered. Refer to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debugging-queue-labels">Queue Labels</a> for more information.</li>
+ * <li>{@code pQueueLabels} &ndash; NULL or a pointer to an array of {@link VkDebugUtilsLabelEXT} active in the current {@code VkQueue} at the time the callback was triggered. Refer to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debugging-queue-labels">Queue Labels</a> for more information.</li>
  * <li>{@code cmdBufLabelCount} &ndash; a count of items contained in the {@code pCmdBufLabels} array.</li>
- * <li>{@code pCmdBufLabels} &ndash; NULL or a pointer to an array of {@link VkDebugUtilsLabelEXT} active in the current {@code VkCommandBuffer} at the time the callback was triggered. Refer to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debugging-command-buffer-labels">Command Buffer Labels</a> for more information.</li>
+ * <li>{@code pCmdBufLabels} &ndash; NULL or a pointer to an array of {@link VkDebugUtilsLabelEXT} active in the current {@code VkCommandBuffer} at the time the callback was triggered. Refer to <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debugging-command-buffer-labels">Command Buffer Labels</a> for more information.</li>
  * <li>{@code objectCount} &ndash; a count of items contained in the {@code pObjects} array.</li>
  * <li>{@code pObjects} &ndash; a pointer to an array of {@link VkDebugUtilsObjectNameInfoEXT} objects related to the detected issue. The array is roughly in order or importance, but the 0th element is always guaranteed to be the most important object for this message.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugUtilsObjectNameInfoEXT.java
Patch:
@@ -27,7 +27,7 @@
  * 
  * <ul>
  * <li>If {@code objectType} is {@link VK10#VK_OBJECT_TYPE_UNKNOWN OBJECT_TYPE_UNKNOWN}, {@code objectHandle} <b>must</b> not be {@link VK10#VK_NULL_HANDLE NULL_HANDLE}</li>
- * <li>If {@code objectType} is not {@link VK10#VK_OBJECT_TYPE_UNKNOWN OBJECT_TYPE_UNKNOWN}, {@code objectHandle} <b>must</b> be {@link VK10#VK_NULL_HANDLE NULL_HANDLE} or a valid Vulkan handle of the type associated with {@code objectType} as defined in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debugging-object-types">VkObjectType and Vulkan Handle Relationship</a> table</li>
+ * <li>If {@code objectType} is not {@link VK10#VK_OBJECT_TYPE_UNKNOWN OBJECT_TYPE_UNKNOWN}, {@code objectHandle} <b>must</b> be {@link VK10#VK_NULL_HANDLE NULL_HANDLE} or a valid Vulkan handle of the type associated with {@code objectType} as defined in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debugging-object-types">VkObjectType and Vulkan Handle Relationship</a> table</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugUtilsObjectTagInfoEXT.java
Patch:
@@ -27,7 +27,7 @@
  * 
  * <ul>
  * <li>{@code objectType} <b>must</b> not be {@link VK10#VK_OBJECT_TYPE_UNKNOWN OBJECT_TYPE_UNKNOWN}</li>
- * <li>{@code objectHandle} <b>must</b> be a valid Vulkan handle of the type associated with {@code objectType} as defined in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#debugging-object-types">VkObjectType and Vulkan Handle Relationship</a> table</li>
+ * <li>{@code objectHandle} <b>must</b> be a valid Vulkan handle of the type associated with {@code objectType} as defined in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#debugging-object-types">VkObjectType and Vulkan Handle Relationship</a> table</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDescriptorBufferInfo.java
Patch:
@@ -22,7 +22,7 @@
  * 
  * <div style="margin-left: 26px; border-left: 1px solid gray; padding-left: 14px;"><h5>Note</h5>
  * 
- * <p>When setting {@code range} to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, the effective range <b>must</b> not be larger than the maximum range for the descriptor type (<a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-maxUniformBufferRange">{@code maxUniformBufferRange}</a> or <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-maxStorageBufferRange">{@code maxStorageBufferRange}</a>). This means that {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE} is not typically useful in the common case where uniform buffer descriptors are suballocated from a buffer that is much larger than {@code maxUniformBufferRange}.</p>
+ * <p>When setting {@code range} to {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE}, the effective range <b>must</b> not be larger than the maximum range for the descriptor type (<a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-maxUniformBufferRange">{@code maxUniformBufferRange}</a> or <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-maxStorageBufferRange">{@code maxStorageBufferRange}</a>). This means that {@link VK10#VK_WHOLE_SIZE WHOLE_SIZE} is not typically useful in the common case where uniform buffer descriptors are suballocated from a buffer that is much larger than {@code maxUniformBufferRange}.</p>
  * </div>
  * 
  * <p>For {@link VK10#VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC} and {@link VK10#VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC} descriptor types, {@code offset} is the base offset from which the dynamic offset is applied and {@code range} is the static size used for all dynamic offsets.</p>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDescriptorImageInfo.java
Patch:
@@ -27,8 +27,8 @@
  * <ul>
  * <li>{@code imageView} <b>must</b> not be 2D or 2D array image view created from a 3D image</li>
  * <li>If {@code imageView} is created from a depth/stencil image, the {@code aspectMask} used to create the {@code imageView} <b>must</b> include either {@link VK10#VK_IMAGE_ASPECT_DEPTH_BIT IMAGE_ASPECT_DEPTH_BIT} or {@link VK10#VK_IMAGE_ASPECT_STENCIL_BIT IMAGE_ASPECT_STENCIL_BIT} but not both.</li>
- * <li>{@code imageLayout} <b>must</b> match the actual {@code VkImageLayout} of each subresource accessible from {@code imageView} at the time this descriptor is accessed as defined by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-image-layouts-matching-rule">image layout matching rules</a></li>
- * <li>If {@code sampler} is used and the {@code VkFormat} of the image is a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar format</a>, the image <b>must</b> have been created with {@link VK10#VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT IMAGE_CREATE_MUTABLE_FORMAT_BIT}, and the {@code aspectMask} of the {@code imageView} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT}, {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT} or (for three-plane formats only) {@link VK11#VK_IMAGE_ASPECT_PLANE_2_BIT IMAGE_ASPECT_PLANE_2_BIT}</li>
+ * <li>{@code imageLayout} <b>must</b> match the actual {@code VkImageLayout} of each subresource accessible from {@code imageView} at the time this descriptor is accessed as defined by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#resources-image-layouts-matching-rule">image layout matching rules</a></li>
+ * <li>If {@code sampler} is used and the {@code VkFormat} of the image is a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar format</a>, the image <b>must</b> have been created with {@link VK10#VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT IMAGE_CREATE_MUTABLE_FORMAT_BIT}, and the {@code aspectMask} of the {@code imageView} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT}, {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT} or (for three-plane formats only) {@link VK11#VK_IMAGE_ASPECT_PLANE_2_BIT IMAGE_ASPECT_PLANE_2_BIT}</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDescriptorUpdateTemplateEntry.java
Patch:
@@ -22,7 +22,7 @@
  * 
  * <ul>
  * <li>{@code dstBinding} <b>must</b> be a valid binding in the descriptor set layout implicitly specified when using a descriptor update template to update descriptors.</li>
- * <li>{@code dstArrayElement} and {@code descriptorCount} <b>must</b> be less than or equal to the number of array elements in the descriptor set binding implicitly specified when using a descriptor update template to update descriptors, and all applicable consecutive bindings, as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
+ * <li>{@code dstArrayElement} and {@code descriptorCount} <b>must</b> be less than or equal to the number of array elements in the descriptor set binding implicitly specified when using a descriptor update template to update descriptors, and all applicable consecutive bindings, as described by <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#descriptorsets-updates-consecutive">consecutive binding updates</a></li>
  * <li>If {@code descriptor} type is {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT}, {@code dstArrayElement} <b>must</b> be an integer multiple of 4</li>
  * <li>If {@code descriptor} type is {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT}, {@code descriptorCount} <b>must</b> be an integer multiple of 4</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceQueueCreateInfo.java
Patch:
@@ -49,7 +49,7 @@
  * <li>{@code flags} &ndash; a bitmask indicating behavior of the queue.</li>
  * <li>{@code queueFamilyIndex} &ndash; an unsigned integer indicating the index of the queue family to create on this device. This index corresponds to the index of an element of the {@code pQueueFamilyProperties} array that was returned by {@code vkGetPhysicalDeviceQueueFamilyProperties}.</li>
  * <li>{@code queueCount} &ndash; an unsigned integer specifying the number of queues to create in the queue family indicated by {@code queueFamilyIndex}.</li>
- * <li>{@code pQueuePriorities} &ndash; an array of {@code queueCount} normalized floating point values, specifying priorities of work that will be submitted to each created queue. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#devsandqueues-priority">Queue Priority</a> for more information.</li>
+ * <li>{@code pQueuePriorities} &ndash; an array of {@code queueCount} normalized floating point values, specifying priorities of work that will be submitted to each created queue. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#devsandqueues-priority">Queue Priority</a> for more information.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDrawIndexedIndirectCommand.java
Patch:
@@ -25,9 +25,9 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>For a given vertex buffer binding, any attribute data fetched <b>must</b> be entirely contained within the corresponding vertex buffer binding, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fxvertex-input">Vertex Input Description</a></li>
+ * <li>For a given vertex buffer binding, any attribute data fetched <b>must</b> be entirely contained within the corresponding vertex buffer binding, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fxvertex-input">Vertex Input Description</a></li>
  * <li><code>(indexSize * (firstIndex + indexCount) offset)</code> <b>must</b> be less than or equal to the size of the bound index buffer, with {@code indexSize} being based on the type specified by {@code indexType}, where the index buffer, {@code indexType}, and {@code offset} are specified via {@code vkCmdBindIndexBuffer}</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-drawIndirectFirstInstance">drawIndirectFirstInstance</a> feature is not enabled, {@code firstInstance} <b>must</b> be 0</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-drawIndirectFirstInstance">drawIndirectFirstInstance</a> feature is not enabled, {@code firstInstance} <b>must</b> be 0</li>
  * </ul>
  * 
  * <h5>See Also</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDrawIndirectCommand.java
Patch:
@@ -25,8 +25,8 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>For a given vertex buffer binding, any attribute data fetched <b>must</b> be entirely contained within the corresponding vertex buffer binding, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fxvertex-input">Vertex Input Description</a></li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-drawIndirectFirstInstance">drawIndirectFirstInstance</a> feature is not enabled, {@code firstInstance} <b>must</b> be 0</li>
+ * <li>For a given vertex buffer binding, any attribute data fetched <b>must</b> be entirely contained within the corresponding vertex buffer binding, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fxvertex-input">Vertex Input Description</a></li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-drawIndirectFirstInstance">drawIndirectFirstInstance</a> feature is not enabled, {@code firstInstance} <b>must</b> be 0</li>
  * </ul>
  * 
  * <h5>See Also</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDrmFormatModifierPropertiesEXT.java
Patch:
@@ -22,15 +22,15 @@
  * 
  * <p>The implementation <b>must</b> not return {@code DRM_FORMAT_MOD_INVALID} in {@code drmFormatModifier}.</p>
  * 
- * <p>An image's <em>memory planecount</em> (as returned by {@code drmFormatModifierPlaneCount}) is distinct from its <em>format planecount</em> (in the sense of <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar</a> Y'C<sub>B</sub>C<sub>R</sub> formats). In {@code VkImageAspectFlags}, each {@code VK_IMAGE_ASPECT_MEMORY_PLANE___i___BIT_EXT} represents a <em>memory plane</em> and each {@code VK_IMAGE_ASPECT_PLANE___i___BIT} a <em>format plane</em>.</p>
+ * <p>An image's <em>memory planecount</em> (as returned by {@code drmFormatModifierPlaneCount}) is distinct from its <em>format planecount</em> (in the sense of <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar</a> Y'C<sub>B</sub>C<sub>R</sub> formats). In {@code VkImageAspectFlags}, each {@code VK_IMAGE_ASPECT_MEMORY_PLANE___i___BIT_EXT} represents a <em>memory plane</em> and each {@code VK_IMAGE_ASPECT_PLANE___i___BIT} a <em>format plane</em>.</p>
  * 
  * <p>An image's set of <em>format planes</em> is an ordered partition of the image's <b>content</b> into separable groups of format channels. The ordered partition is encoded in the name of each {@code VkFormat}. For example, {@link VK11#VK_FORMAT_G8_B8R8_2PLANE_420_UNORM FORMAT_G8_B8R8_2PLANE_420_UNORM} contains two <em>format planes</em>; the first plane contains the green channel and the second plane contains the blue channel and red channel. If the format name does not contain {@code PLANE}, then the format contains a single plane; for example, {@link VK10#VK_FORMAT_R8G8B8A8_UNORM FORMAT_R8G8B8A8_UNORM}. Some commands, such as {@link VK10#vkCmdCopyBufferToImage CmdCopyBufferToImage}, do not operate on all format channels in the image, but instead operate only on the <em>format planes</em> explicitly chosen by the application and operate on each <em>format plane</em> independently.</p>
  * 
  * <p>An image's set of <em>memory planes</em> is an ordered partition of the image's <b>memory</b> rather than the image's <b>content</b>. Each <em>memory plane</em> is a contiguous range of memory. The union of an image's <em>memory planes</em> is not necessarily contiguous.</p>
  * 
- * <p>If an image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#glossary-linear-resource">linear</a>, then the partition is the same for <em>memory planes</em> and for <em>format planes</em>. Therefore, if the returned {@code drmFormatModifier} is {@code DRM_FORMAT_MOD_LINEAR}, then {@code drmFormatModifierPlaneCount} <b>must</b> equal the <em>format planecount</em>, and {@code drmFormatModifierTilingFeatures} <b>must</b> be identical to the {@link VkFormatProperties2}{@code ::linearTilingFeatures} returned in the same {@code pNext} chain.</p>
+ * <p>If an image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#glossary-linear-resource">linear</a>, then the partition is the same for <em>memory planes</em> and for <em>format planes</em>. Therefore, if the returned {@code drmFormatModifier} is {@code DRM_FORMAT_MOD_LINEAR}, then {@code drmFormatModifierPlaneCount} <b>must</b> equal the <em>format planecount</em>, and {@code drmFormatModifierTilingFeatures} <b>must</b> be identical to the {@link VkFormatProperties2}{@code ::linearTilingFeatures} returned in the same {@code pNext} chain.</p>
  * 
- * <p>If an image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#glossary-linear-resource">non-linear</a>, then the partition of the image's <b>memory</b> into <em>memory planes</em> is implementation-specific and <b>may</b> be unrelated to the partition of the image's <b>content</b> into <em>format planes</em>. For example, consider an image whose {@code format} is {@link VK11#VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM FORMAT_G8_B8_R8_3PLANE_420_UNORM}, {@code tiling} is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, whose {@code drmFormatModifier} is not {@code DRM_FORMAT_MOD_LINEAR}, and {@code flags} lacks {@link VK11#VK_IMAGE_CREATE_DISJOINT_BIT IMAGE_CREATE_DISJOINT_BIT}. The image has 3 <em>format planes</em>, and commands such {@link VK10#vkCmdCopyBufferToImage CmdCopyBufferToImage} act on each <em>format plane</em> independently as if the data of each <em>format plane</em> were separable from the data of the other planes. In a straightforward implementation, the implementation <b>may</b> store the image's content in 3 adjacent <em>memory planes</em> where each <em>memory plane</em> corresponds exactly to a <em>format plane</em>. However, the implementation <b>may</b> also store the image's content in a single <em>memory plane</em> where all format channels are combined using an implementation-private block-compressed format; or the implementation <b>may</b> store the image's content in a collection of 7 adjacent <em>memory planes</em> using an implementation-private sharding technique. Because the image is non-linear and non-disjoint, the implementation has much freedom when choosing the image's placement in memory.</p>
+ * <p>If an image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#glossary-linear-resource">non-linear</a>, then the partition of the image's <b>memory</b> into <em>memory planes</em> is implementation-specific and <b>may</b> be unrelated to the partition of the image's <b>content</b> into <em>format planes</em>. For example, consider an image whose {@code format} is {@link VK11#VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM FORMAT_G8_B8_R8_3PLANE_420_UNORM}, {@code tiling} is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, whose {@code drmFormatModifier} is not {@code DRM_FORMAT_MOD_LINEAR}, and {@code flags} lacks {@link VK11#VK_IMAGE_CREATE_DISJOINT_BIT IMAGE_CREATE_DISJOINT_BIT}. The image has 3 <em>format planes</em>, and commands such {@link VK10#vkCmdCopyBufferToImage CmdCopyBufferToImage} act on each <em>format plane</em> independently as if the data of each <em>format plane</em> were separable from the data of the other planes. In a straightforward implementation, the implementation <b>may</b> store the image's content in 3 adjacent <em>memory planes</em> where each <em>memory plane</em> corresponds exactly to a <em>format plane</em>. However, the implementation <b>may</b> also store the image's content in a single <em>memory plane</em> where all format channels are combined using an implementation-private block-compressed format; or the implementation <b>may</b> store the image's content in a collection of 7 adjacent <em>memory planes</em> using an implementation-private sharding technique. Because the image is non-linear and non-disjoint, the implementation has much freedom when choosing the image's placement in memory.</p>
  * 
  * <p>The <em>memory planecount</em> applies to function parameters and structures only when the API specifies an explicit requirement on {@code drmFormatModifierPlaneCount}. In all other cases, the <em>memory planecount</em> is ignored.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkFenceGetFdInfoKHR.java
Patch:
@@ -26,8 +26,8 @@
  * 
  * <ul>
  * <li>{@code handleType} <b>must</b> have been included in {@link VkExportFenceCreateInfo}{@code ::handleTypes} when {@code fence}&#8217;s current payload was created.</li>
- * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code fence} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-signaling">fence signal operation</a> pending execution.</li>
- * <li>{@code fence} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalFenceProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
+ * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code fence} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fences-signaling">fence signal operation</a> pending execution.</li>
+ * <li>{@code fence} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalFenceProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
  * <li>{@code handleType} <b>must</b> be defined as a POSIX file descriptor handle.</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkFenceGetWin32HandleInfoKHR.java
Patch:
@@ -27,8 +27,8 @@
  * <ul>
  * <li>{@code handleType} <b>must</b> have been included in {@link VkExportFenceCreateInfo}{@code ::handleTypes} when the {@code fence}&#8217;s current payload was created.</li>
  * <li>If {@code handleType} is defined as an NT handle, {@link KHRExternalFenceWin32#vkGetFenceWin32HandleKHR GetFenceWin32HandleKHR} <b>must</b> be called no more than once for each valid unique combination of {@code fence} and {@code handleType}.</li>
- * <li>{@code fence} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalFenceProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
- * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code fence} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-signaling">fence signal operation</a> pending execution.</li>
+ * <li>{@code fence} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fences-importing">Importing Fence Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalFenceProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
+ * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code fence} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fences-signaling">fence signal operation</a> pending execution.</li>
  * <li>{@code handleType} <b>must</b> be defined as an NT handle or a global share handle.</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkFramebufferCreateInfo.java
Patch:
@@ -21,7 +21,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>Applications <b>must</b> ensure that all accesses to memory that backs image subresources used as attachments in a given renderpass instance either happen-before the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#renderpass-load-store-ops">load operations</a> for those attachments, or happen-after the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#renderpass-load-store-ops">store operations</a> for those attachments.</p>
+ * <p>Applications <b>must</b> ensure that all accesses to memory that backs image subresources used as attachments in a given renderpass instance either happen-before the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#renderpass-load-store-ops">load operations</a> for those attachments, or happen-after the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#renderpass-load-store-ops">store operations</a> for those attachments.</p>
  * 
  * <p>For depth/stencil attachments, each aspect <b>can</b> be used separately as attachments and non-attachments as long as the non-attachment accesses are also via an image subresource in either the {@link VK11#VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL} layout or the {@link VK11#VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL} layout, and the attachment resource uses whichever of those two layouts the image accesses do not. Use of non-attachment aspects in this case is only well defined if the attachment is used in the subpass where the non-attachment access is being made, or the layout of the image subresource is constant throughout the entire render pass instance, including the {@code initialLayout} and {@code finalLayout}.</p>
  * 
@@ -41,7 +41,7 @@
  * <li>Each element of {@code pAttachments} that is used as a depth/stencil resolve attachment by {@code renderPass} <b>must</b> have been created with a {@code usage} value including {@link VK10#VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT}</li>
  * <li>Each element of {@code pAttachments} that is used as an input attachment by {@code renderPass} <b>must</b> have been created with a {@code usage} value including {@link VK10#VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT IMAGE_USAGE_INPUT_ATTACHMENT_BIT}</li>
  * <li>Each element of {@code pAttachments} that is used as a fragment density map attachment by {@code renderPass} <b>must</b> not have been created with a {@code flags} value including {@link EXTFragmentDensityMap#VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT IMAGE_CREATE_SUBSAMPLED_BIT_EXT}.</li>
- * <li>If {@code renderPass} has a fragment density map attachment and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-nonsubsampledimages">non-subsample image feature</a> is not enabled, each element of {@code pAttachments} <b>must</b> have been created with a {@code flags} value including {@link EXTFragmentDensityMap#VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT IMAGE_CREATE_SUBSAMPLED_BIT_EXT} unless that element is the fragment density map attachment.</li>
+ * <li>If {@code renderPass} has a fragment density map attachment and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-nonsubsampledimages">non-subsample image feature</a> is not enabled, each element of {@code pAttachments} <b>must</b> have been created with a {@code flags} value including {@link EXTFragmentDensityMap#VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT IMAGE_CREATE_SUBSAMPLED_BIT_EXT} unless that element is the fragment density map attachment.</li>
  * <li>Each element of {@code pAttachments} <b>must</b> have been created with an {@code VkFormat} value that matches the {@code VkFormat} specified by the corresponding {@link VkAttachmentDescription} in {@code renderPass}</li>
  * <li>Each element of {@code pAttachments} <b>must</b> have been created with a {@code samples} value that matches the {@code samples} value specified by the corresponding {@link VkAttachmentDescription} in {@code renderPass}</li>
  * <li>Each element of {@code pAttachments} <b>must</b> have dimensions at least as large as the corresponding framebuffer dimension except for any element that is referenced by {@code fragmentDensityMapAttachment}</li>
@@ -80,7 +80,7 @@
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
  * <li>{@code flags} &ndash; reserved for future use.</li>
- * <li>{@code renderPass} &ndash; a render pass that defines what render passes the framebuffer will be compatible with. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#renderpass-compatibility">Render Pass Compatibility</a> for details.</li>
+ * <li>{@code renderPass} &ndash; a render pass that defines what render passes the framebuffer will be compatible with. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#renderpass-compatibility">Render Pass Compatibility</a> for details.</li>
  * <li>{@code attachmentCount} &ndash; the number of attachments.</li>
  * <li>{@code pAttachments} &ndash; an array of {@code VkImageView} handles, each of which will be used as the corresponding attachment in a render pass instance.</li>
  * <li>{@code width} &ndash; {@code width}, {@code height} and {@code layers} define the dimensions of the framebuffer. If the render pass uses multiview, then {@code layers} <b>must</b> be one and each attachment requires a number of layers that is greater than the maximum bit index set in the view mask in the subpasses in which it is used.</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageDrmFormatModifierPropertiesEXT.java
Patch:
@@ -38,7 +38,7 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code drmFormatModifier} &ndash; returns the image&#8217;s <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#glossary-drm-format-modifier">Linux DRM format modifier</a>.</li>
+ * <li>{@code drmFormatModifier} &ndash; returns the image&#8217;s <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#glossary-drm-format-modifier">Linux DRM format modifier</a>.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageFormatListCreateInfoKHR.java
Patch:
@@ -26,7 +26,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If {@code viewFormatCount} is not 0, all of the formats in the {@code pViewFormats} array <b>must</b> be compatible with the format specified in the {@code format} field of {@link VkImageCreateInfo}, as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-compatibility">compatibility table</a>.</li>
+ * <li>If {@code viewFormatCount} is not 0, all of the formats in the {@code pViewFormats} array <b>must</b> be compatible with the format specified in the {@code format} field of {@link VkImageCreateInfo}, as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-compatibility">compatibility table</a>.</li>
  * <li>If {@link VkImageCreateInfo}{@code ::flags} does not contain {@link VK10#VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT IMAGE_CREATE_MUTABLE_FORMAT_BIT}, {@code viewFormatCount} <b>must</b> be 0 or 1.</li>
  * <li>If {@code viewFormatCount} is not 0, {@link VkImageCreateInfo}{@code ::format} <b>must</b> be in {@code pViewFormats}.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImagePlaneMemoryRequirementsInfo.java
Patch:
@@ -22,7 +22,7 @@
  * 
  * <ul>
  * <li>If the image&#8217;s tiling is {@link VK10#VK_IMAGE_TILING_LINEAR IMAGE_TILING_LINEAR} or {@link VK10#VK_IMAGE_TILING_OPTIMAL IMAGE_TILING_OPTIMAL}, then {@code planeAspect} <b>must</b> be a single valid <em>format plane</em> for the image. (That is, for a two-plane image {@code planeAspect} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT} or {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT}, and for a three-plane image {@code planeAspect} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT}, {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT} or {@link VK11#VK_IMAGE_ASPECT_PLANE_2_BIT IMAGE_ASPECT_PLANE_2_BIT}).</li>
- * <li>If the image&#8217;s tiling is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, then {@code planeAspect} <b>must</b> be a single valid <em>memory plane</em> for the image. (That is, {@code aspectMask} <b>must</b> specify a plane index that is less than the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkDrmFormatModifierPropertiesEXT">{@code drmFormatModifierPlaneCount}</a> associated with the image&#8217;s <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkImageCreateInfo">{@code format}</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkImageDrmFormatModifierPropertiesEXT">{@code drmFormatModifier}</a>.)</li>
+ * <li>If the image&#8217;s tiling is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, then {@code planeAspect} <b>must</b> be a single valid <em>memory plane</em> for the image. (That is, {@code aspectMask} <b>must</b> specify a plane index that is less than the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkDrmFormatModifierPropertiesEXT">{@code drmFormatModifierPlaneCount}</a> associated with the image&#8217;s <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkImageCreateInfo">{@code format}</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkImageDrmFormatModifierPropertiesEXT">{@code drmFormatModifier}</a>.)</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageSwapchainCreateInfoKHR.java
Patch:
@@ -21,7 +21,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If {@code swapchain} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, the fields of {@link VkImageCreateInfo} <b>must</b> match the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#swapchain-wsi-image-create-info">implied image creation parameters</a> of the swapchain</li>
+ * <li>If {@code swapchain} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, the fields of {@link VkImageCreateInfo} <b>must</b> match the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#swapchain-wsi-image-create-info">implied image creation parameters</a> of the swapchain</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageViewASTCDecodeModeEXT.java
Patch:
@@ -22,7 +22,7 @@
  * 
  * <ul>
  * <li>{@code decodeMode} <b>must</b> be one of {@link VK10#VK_FORMAT_R16G16B16A16_SFLOAT FORMAT_R16G16B16A16_SFLOAT}, {@link VK10#VK_FORMAT_R8G8B8A8_UNORM FORMAT_R8G8B8A8_UNORM}, or {@link VK10#VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 FORMAT_E5B9G9R9_UFLOAT_PACK32}</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-astc-decodeModeSharedExponent">{@code decodeModeSharedExponent}</a> feature is not enabled, {@code decodeMode} <b>must</b> not be {@link VK10#VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 FORMAT_E5B9G9R9_UFLOAT_PACK32}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-astc-decodeModeSharedExponent">{@code decodeModeSharedExponent}</a> feature is not enabled, {@code decodeMode} <b>must</b> not be {@link VK10#VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 FORMAT_E5B9G9R9_UFLOAT_PACK32}</li>
  * <li>If {@code decodeMode} is {@link VK10#VK_FORMAT_R8G8B8A8_UNORM FORMAT_R8G8B8A8_UNORM} the image view <b>must</b> not include blocks using any of the ASTC HDR modes</li>
  * <li>{@code format} of the image view <b>must</b> be one of {@link VK10#VK_FORMAT_ASTC_4x4_UNORM_BLOCK FORMAT_ASTC_4x4_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_4x4_SRGB_BLOCK FORMAT_ASTC_4x4_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_5x4_UNORM_BLOCK FORMAT_ASTC_5x4_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_5x4_SRGB_BLOCK FORMAT_ASTC_5x4_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_5x5_UNORM_BLOCK FORMAT_ASTC_5x5_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_5x5_SRGB_BLOCK FORMAT_ASTC_5x5_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_6x5_UNORM_BLOCK FORMAT_ASTC_6x5_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_6x5_SRGB_BLOCK FORMAT_ASTC_6x5_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_6x6_UNORM_BLOCK FORMAT_ASTC_6x6_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_6x6_SRGB_BLOCK FORMAT_ASTC_6x6_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_8x5_UNORM_BLOCK FORMAT_ASTC_8x5_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_8x5_SRGB_BLOCK FORMAT_ASTC_8x5_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_8x6_UNORM_BLOCK FORMAT_ASTC_8x6_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_8x6_SRGB_BLOCK FORMAT_ASTC_8x6_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_8x8_UNORM_BLOCK FORMAT_ASTC_8x8_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_8x8_SRGB_BLOCK FORMAT_ASTC_8x8_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x5_UNORM_BLOCK FORMAT_ASTC_10x5_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x5_SRGB_BLOCK FORMAT_ASTC_10x5_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x6_UNORM_BLOCK FORMAT_ASTC_10x6_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x6_SRGB_BLOCK FORMAT_ASTC_10x6_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x8_UNORM_BLOCK FORMAT_ASTC_10x8_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x8_SRGB_BLOCK FORMAT_ASTC_10x8_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x10_UNORM_BLOCK FORMAT_ASTC_10x10_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_10x10_SRGB_BLOCK FORMAT_ASTC_10x10_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_12x10_UNORM_BLOCK FORMAT_ASTC_12x10_UNORM_BLOCK}, {@link VK10#VK_FORMAT_ASTC_12x10_SRGB_BLOCK FORMAT_ASTC_12x10_SRGB_BLOCK}, {@link VK10#VK_FORMAT_ASTC_12x12_UNORM_BLOCK FORMAT_ASTC_12x12_UNORM_BLOCK}, or {@link VK10#VK_FORMAT_ASTC_12x12_SRGB_BLOCK FORMAT_ASTC_12x12_SRGB_BLOCK}</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImportFenceFdInfoKHR.java
Patch:
@@ -35,8 +35,8 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fence-handletypes-fd">Handle Types Supported by VkImportFenceFdInfoKHR</a> table.</li>
- * <li>{@code fd} <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-fence-handle-types-compatibility">external fence handle types compatibility</a>.</li>
+ * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fence-handletypes-fd">Handle Types Supported by VkImportFenceFdInfoKHR</a> table.</li>
+ * <li>{@code fd} <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-fence-handle-types-compatibility">external fence handle types compatibility</a>.</li>
  * </ul>
  * 
  * <p>If {@code handleType} is {@link VK11#VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT}, the special value {@code -1} for {@code fd} is treated like a valid sync file descriptor referring to an object that has already signaled. The import operation will succeed and the {@code VkFence} will have a temporarily imported payload as if a valid file descriptor had been provided.</p>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImportFenceWin32HandleInfoKHR.java
Patch:
@@ -38,13 +38,13 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fence-handletypes-win32">Handle Types Supported by VkImportFenceWin32HandleInfoKHR</a> table.</li>
+ * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-fence-handletypes-win32">Handle Types Supported by VkImportFenceWin32HandleInfoKHR</a> table.</li>
  * <li>If {@code handleType} is not {@link VK11#VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT}, {@code name} <b>must</b> be {@code NULL}.</li>
  * <li>If {@code handleType} is not 0 and {@code handle} is {@code NULL}, {@code name} <b>must</b> name a valid synchronization primitive of the type specified by {@code handleType}.</li>
  * <li>If {@code handleType} is not 0 and {@code name} is {@code NULL}, {@code handle} <b>must</b> be a valid handle of the type specified by {@code handleType}.</li>
  * <li>If {@code handle} is not {@code NULL}, {@code name} must be {@code NULL}.</li>
- * <li>If {@code handle} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-fence-handle-types-compatibility">external fence handle types compatibility</a>.</li>
- * <li>If {@code name} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-fence-handle-types-compatibility">external fence handle types compatibility</a>.</li>
+ * <li>If {@code handle} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-fence-handle-types-compatibility">external fence handle types compatibility</a>.</li>
+ * <li>If {@code name} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-fence-handle-types-compatibility">external fence handle types compatibility</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImportMemoryFdInfoKHR.java
Patch:
@@ -31,8 +31,8 @@
  * <li>The memory from which {@code fd} was exported <b>must</b> have been created on the same underlying physical device as {@code device}.</li>
  * <li>If {@code handleType} is not 0, it <b>must</b> be defined as a POSIX file descriptor handle.</li>
  * <li>If {@code handleType} is not 0, {@code fd} <b>must</b> be a valid handle of the type specified by {@code handleType}.</li>
- * <li>The memory represented by {@code fd} <b>must</b> have been created from a physical device and driver that is compatible with {@code device} and {@code handleType}, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-memory-handle-types-compatibility">External memory handle types compatibility</a>.</li>
- * <li>{@code fd} <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-memory-handle-types-compatibility">external memory handle types compatibility</a>.</li>
+ * <li>The memory represented by {@code fd} <b>must</b> have been created from a physical device and driver that is compatible with {@code device} and {@code handleType}, as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-memory-handle-types-compatibility">External memory handle types compatibility</a>.</li>
+ * <li>{@code fd} <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-memory-handle-types-compatibility">external memory handle types compatibility</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImportMemoryHostPointerInfoEXT.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>Importing memory from a host pointer shares ownership of the memory between the host and the Vulkan implementation. The application <b>can</b> continue to access the memory through the host pointer but it is the application's responsibility to synchronize device and non-device access to the underlying memory as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-device-hostaccess">Host Access to Device Memory Objects</a>.</p>
+ * <p>Importing memory from a host pointer shares ownership of the memory between the host and the Vulkan implementation. The application <b>can</b> continue to access the memory through the host pointer but it is the application's responsibility to synchronize device and non-device access to the underlying memory as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-device-hostaccess">Host Access to Device Memory Objects</a>.</p>
  * 
  * <p>Applications <b>can</b> import the same underlying memory into multiple instances of Vulkan and multiple times into a given Vulkan instance. However, implementations <b>may</b> fail to import the same underlying memory multiple times into a given physical device due to platform constraints.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImportMemoryWin32HandleInfoKHR.java
Patch:
@@ -37,8 +37,8 @@
  * <li>If {@code handleType} is not 0 and {@code handle} is {@code NULL}, {@code name} <b>must</b> name a valid memory resource of the type specified by {@code handleType}.</li>
  * <li>If {@code handleType} is not 0 and {@code name} is {@code NULL}, {@code handle} <b>must</b> be a valid handle of the type specified by {@code handleType}.</li>
  * <li>if {@code handle} is not {@code NULL}, {@code name} must be {@code NULL}.</li>
- * <li>If {@code handle} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-memory-handle-types-compatibility">external memory handle types compatibility</a>.</li>
- * <li>If {@code name} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-memory-handle-types-compatibility">external memory handle types compatibility</a>.</li>
+ * <li>If {@code handle} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-memory-handle-types-compatibility">external memory handle types compatibility</a>.</li>
+ * <li>If {@code name} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-memory-handle-types-compatibility">external memory handle types compatibility</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImportSemaphoreFdInfoKHR.java
Patch:
@@ -35,8 +35,8 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphore-handletypes-fd">Handle Types Supported by VkImportSemaphoreFdInfoKHR</a> table.</li>
- * <li>{@code fd} <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">external semaphore handle types compatibility</a>.</li>
+ * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphore-handletypes-fd">Handle Types Supported by VkImportSemaphoreFdInfoKHR</a> table.</li>
+ * <li>{@code fd} <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">external semaphore handle types compatibility</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImportSemaphoreWin32HandleInfoKHR.java
Patch:
@@ -39,13 +39,13 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphore-handletypes-win32">Handle Types Supported by VkImportSemaphoreWin32HandleInfoKHR</a> table.</li>
+ * <li>{@code handleType} <b>must</b> be a value included in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphore-handletypes-win32">Handle Types Supported by VkImportSemaphoreWin32HandleInfoKHR</a> table.</li>
  * <li>If {@code handleType} is not {@link VK11#VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT} or {@link VK11#VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT}, {@code name} <b>must</b> be {@code NULL}.</li>
  * <li>If {@code handleType} is not 0 and {@code handle} is {@code NULL}, {@code name} <b>must</b> name a valid synchronization primitive of the type specified by {@code handleType}.</li>
  * <li>If {@code handleType} is not 0 and {@code name} is {@code NULL}, {@code handle} <b>must</b> be a valid handle of the type specified by {@code handleType}.</li>
  * <li>If {@code handle} is not {@code NULL}, {@code name} must be {@code NULL}.</li>
- * <li>If {@code handle} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">external semaphore handle types compatibility</a>.</li>
- * <li>If {@code name} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">external semaphore handle types compatibility</a>.</li>
+ * <li>If {@code handle} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">external semaphore handle types compatibility</a>.</li>
+ * <li>If {@code name} is not {@code NULL}, it <b>must</b> obey any requirements listed for {@code handleType} in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">external semaphore handle types compatibility</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkInstanceCreateInfo.java
Patch:
@@ -43,7 +43,7 @@
  * <li>{@code flags} &ndash; reserved for future use.</li>
  * <li>{@code pApplicationInfo} &ndash; {@code NULL} or a pointer to an instance of {@link VkApplicationInfo}. If not {@code NULL}, this information helps implementations recognize behavior inherent to classes of applications. {@link VkApplicationInfo} is defined in detail below.</li>
  * <li>{@code enabledLayerCount} &ndash; the number of global layers to enable.</li>
- * <li>{@code ppEnabledLayerNames} &ndash; a pointer to an array of {@code enabledLayerCount} null-terminated UTF-8 strings containing the names of layers to enable for the created instance. See the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#extendingvulkan-layers">Layers</a> section for further details.</li>
+ * <li>{@code ppEnabledLayerNames} &ndash; a pointer to an array of {@code enabledLayerCount} null-terminated UTF-8 strings containing the names of layers to enable for the created instance. See the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#extendingvulkan-layers">Layers</a> section for further details.</li>
  * <li>{@code enabledExtensionCount} &ndash; the number of global extensions to enable.</li>
  * <li>{@code ppEnabledExtensionNames} &ndash; a pointer to an array of {@code enabledExtensionCount} null-terminated UTF-8 strings containing the names of extensions to enable.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkInternalAllocationNotificationI.java
Patch:
@@ -56,7 +56,7 @@ default void callback(long args) {
      * @param pUserData       the value specified for {@link VkAllocationCallbacks}{@code ::pUserData} in the allocator specified by the application.
      * @param size            the requested size of an allocation.
      * @param allocationType  a {@code VkInternalAllocationType} value specifying the requested type of an allocation.
-     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
+     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
      */
     void invoke(@NativeType("void *") long pUserData, @NativeType("size_t") long size, @NativeType("VkInternalAllocationType") int allocationType, @NativeType("VkSystemAllocationScope") int allocationScope);
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkInternalFreeNotificationI.java
Patch:
@@ -52,7 +52,7 @@ default void callback(long args) {
      * @param pUserData       the value specified for {@link VkAllocationCallbacks}{@code ::pUserData} in the allocator specified by the application.
      * @param size            the requested size of an allocation.
      * @param allocationType  a {@code VkInternalAllocationType} value specifying the requested type of an allocation.
-     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
+     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
      */
     void invoke(@NativeType("void *") long pUserData, @NativeType("size_t") long size, @NativeType("VkInternalAllocationType") int allocationType, @NativeType("VkSystemAllocationScope") int allocationScope);
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkLayerProperties.java
Patch:
@@ -24,7 +24,7 @@
  * 
  * <ul>
  * <li>{@code layerName} &ndash; a null-terminated UTF-8 string specifying the name of the layer. Use this name in the {@code ppEnabledLayerNames} array passed in the {@link VkInstanceCreateInfo} structure to enable this layer for an instance.</li>
- * <li>{@code specVersion} &ndash; the Vulkan version the layer was written to, encoded as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#extendingvulkan-coreversions-versionnumbers">Version Numbers</a>.</li>
+ * <li>{@code specVersion} &ndash; the Vulkan version the layer was written to, encoded as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#extendingvulkan-coreversions-versionnumbers">Version Numbers</a>.</li>
  * <li>{@code implementationVersion} &ndash; the version of this layer. It is an integer, increasing with backward compatible changes.</li>
  * <li>{@code description} &ndash; a null-terminated UTF-8 string providing additional details that <b>can</b> be used by the application to identify the layer.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT.java
Patch:
@@ -31,7 +31,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code advancedBlendCoherentOperations} &ndash; specifies whether blending using <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#framebuffer-blend-advanced">advanced blend operations</a> is guaranteed to execute atomically and in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#drawing-primitive-order">primitive order</a>. If this is {@link VK10#VK_TRUE TRUE}, {@link EXTBlendOperationAdvanced#VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT} is treated the same as {@link VK10#VK_ACCESS_COLOR_ATTACHMENT_READ_BIT ACCESS_COLOR_ATTACHMENT_READ_BIT}, and advanced blending needs no additional synchronization over basic blending. If this is {@link VK10#VK_FALSE FALSE}, then memory dependencies are required to guarantee order between two advanced blending operations that occur on the same sample.</li>
+ * <li>{@code advancedBlendCoherentOperations} &ndash; specifies whether blending using <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#framebuffer-blend-advanced">advanced blend operations</a> is guaranteed to execute atomically and in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#drawing-primitive-order">primitive order</a>. If this is {@link VK10#VK_TRUE TRUE}, {@link EXTBlendOperationAdvanced#VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT} is treated the same as {@link VK10#VK_ACCESS_COLOR_ATTACHMENT_READ_BIT ACCESS_COLOR_ATTACHMENT_READ_BIT}, and advanced blending needs no additional synchronization over basic blending. If this is {@link VK10#VK_FALSE FALSE}, then memory dependencies are required to guarantee order between two advanced blending operations that occur on the same sample.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT.java
Patch:
@@ -33,7 +33,7 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code advancedBlendMaxColorAttachments} &ndash; one greater than the highest color attachment index that <b>can</b> be used in a subpass, for a pipeline that uses an <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#framebuffer-blend-advanced">advanced blend operation</a>.</li>
+ * <li>{@code advancedBlendMaxColorAttachments} &ndash; one greater than the highest color attachment index that <b>can</b> be used in a subpass, for a pipeline that uses an <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#framebuffer-blend-advanced">advanced blend operation</a>.</li>
  * <li>{@code advancedBlendIndependentBlend} &ndash; specifies whether advanced blend operations <b>can</b> vary per-attachment.</li>
  * <li>{@code advancedBlendNonPremultipliedSrcColor} &ndash; specifies whether the source color <b>can</b> be treated as non-premultiplied. If this is {@link VK10#VK_FALSE FALSE}, then {@link VkPipelineColorBlendAdvancedStateCreateInfoEXT}{@code ::srcPremultiplied} <b>must</b> be {@link VK10#VK_TRUE TRUE}.</li>
  * <li>{@code advancedBlendNonPremultipliedDstColor} &ndash; specifies whether the destination color <b>can</b> be treated as non-premultiplied. If this is {@link VK10#VK_FALSE FALSE}, then {@link VkPipelineColorBlendAdvancedStateCreateInfoEXT}{@code ::dstPremultiplied} <b>must</b> be {@link VK10#VK_TRUE TRUE}.</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceComputeShaderDerivativesFeaturesNV.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#texture-derivatives-compute">Compute Shader Derivatives</a> for more information.</p>
+ * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#texture-derivatives-compute">Compute Shader Derivatives</a> for more information.</p>
  * 
  * <p>If the {@link VkPhysicalDeviceComputeShaderDerivativesFeaturesNV} structure is included in the {@code pNext} chain of {@link VkPhysicalDeviceFeatures2KHR}, it is filled with values indicating whether each feature is supported. {@link VkPhysicalDeviceComputeShaderDerivativesFeaturesNV} <b>can</b> also be used in the {@code pNext} chain of {@link VkDeviceCreateInfo} to enable features.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceConservativeRasterizationPropertiesEXT.java
Patch:
@@ -41,7 +41,7 @@
  * <li>{@code degenerateTrianglesRasterized} &ndash; false if the implementation culls primitives generated from triangles that become zero area after they are quantized to the fixed-point rasterization pixel grid. {@code degenerateTrianglesRasterized} is true if these primitives are not culled and the provoking vertex attributes and depth value are used for the fragments. The primitive area calculation is done on the primitive generated from the clipped triangle if applicable. Zero area primitives are backfacing and the application <b>can</b> enable backface culling if desired.</li>
  * <li>{@code degenerateLinesRasterized} &ndash; false if the implementation culls lines that become zero length after they are quantized to the fixed-point rasterization pixel grid. {@code degenerateLinesRasterized} is true if zero length lines are not culled and the provoking vertex attributes and depth value are used for the fragments.</li>
  * <li>{@code fullyCoveredFragmentShaderInputVariable} &ndash; true if the implementation supports the SPIR-V builtin fragment shader input variable FullyCoveredEXT which specifies that conservative rasterization is enabled and the fragment area is fully covered by the generating primitive.</li>
- * <li>{@code conservativeRasterizationPostDepthCoverage} &ndash; true if the implementation supports conservative rasterization with the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#shaders-fragment-earlytest-postdepthcoverage">{@code PostDepthCoverage}</a> execution mode enabled. When supported the {@code SampleMask} built-in input variable will reflect the coverage after the early per-fragment depth and stencil tests are applied even when conservative rasterization is enabled. Otherwise <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#shaders-fragment-earlytest-postdepthcoverage">{@code PostDepthCoverage}</a> execution mode <b>must</b> not be used when conservative rasterization is enabled.</li>
+ * <li>{@code conservativeRasterizationPostDepthCoverage} &ndash; true if the implementation supports conservative rasterization with the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#shaders-fragment-earlytest-postdepthcoverage">{@code PostDepthCoverage}</a> execution mode enabled. When supported the {@code SampleMask} built-in input variable will reflect the coverage after the early per-fragment depth and stencil tests are applied even when conservative rasterization is enabled. Otherwise <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#shaders-fragment-earlytest-postdepthcoverage">{@code PostDepthCoverage}</a> execution mode <b>must</b> not be used when conservative rasterization is enabled.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceCornerSampledImageFeaturesNV.java
Patch:
@@ -31,7 +31,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code cornerSampledImage} &ndash; specifies whether images can be created with a {@link VkImageCreateInfo}{@code ::flags} containing {@link NVCornerSampledImage#VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV IMAGE_CREATE_CORNER_SAMPLED_BIT_NV}. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-images-corner-sampled">Corner-Sampled Images</a>.</li>
+ * <li>{@code cornerSampledImage} &ndash; specifies whether images can be created with a {@link VkImageCreateInfo}{@code ::flags} containing {@link NVCornerSampledImage#VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV IMAGE_CREATE_CORNER_SAMPLED_BIT_NV}. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#resources-images-corner-sampled">Corner-Sampled Images</a>.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceDescriptorIndexingPropertiesEXT.java
Patch:
@@ -39,8 +39,8 @@
  * <li>{@code shaderStorageBufferArrayNonUniformIndexingNative} &ndash; a boolean value indicating whether storage buffer descriptors natively support nonuniform indexing. If this is {@link VK10#VK_FALSE FALSE}, then a single dynamic instance of an instruction that nonuniformly indexes an array of storage buffers <b>may</b> execute multiple times in order to access all the descriptors.</li>
  * <li>{@code shaderStorageImageArrayNonUniformIndexingNative} &ndash; a boolean value indicating whether storage image descriptors natively support nonuniform indexing. If this is {@link VK10#VK_FALSE FALSE}, then a single dynamic instance of an instruction that nonuniformly indexes an array of storage images <b>may</b> execute multiple times in order to access all the descriptors.</li>
  * <li>{@code shaderInputAttachmentArrayNonUniformIndexingNative} &ndash; a boolean value indicating whether input attachment descriptors natively support nonuniform indexing. If this is {@link VK10#VK_FALSE FALSE}, then a single dynamic instance of an instruction that nonuniformly indexes an array of input attachments <b>may</b> execute multiple times in order to access all the descriptors.</li>
- * <li>{@code robustBufferAccessUpdateAfterBind} &ndash; a boolean value indicating whether <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-robustBufferAccess">{@code robustBufferAccess}</a> <b>can</b> be enabled in a device simultaneously with {@code descriptorBindingUniformBufferUpdateAfterBind}, {@code descriptorBindingStorageBufferUpdateAfterBind}, {@code descriptorBindingUniformTexelBufferUpdateAfterBind}, and/or {@code descriptorBindingStorageTexelBufferUpdateAfterBind}. If this is {@link VK10#VK_FALSE FALSE}, then either {@code robustBufferAccess} <b>must</b> be disabled or all of these update-after-bind features <b>must</b> be disabled.</li>
- * <li>{@code quadDivergentImplicitLod} &ndash; a boolean value indicating whether implicit level of detail calculations for image operations have well-defined results when the image and/or sampler objects used for the instruction are not uniform within a quad. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-derivative-image-operations">Derivative Image Operations</a>.</li>
+ * <li>{@code robustBufferAccessUpdateAfterBind} &ndash; a boolean value indicating whether <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-robustBufferAccess">{@code robustBufferAccess}</a> <b>can</b> be enabled in a device simultaneously with {@code descriptorBindingUniformBufferUpdateAfterBind}, {@code descriptorBindingStorageBufferUpdateAfterBind}, {@code descriptorBindingUniformTexelBufferUpdateAfterBind}, and/or {@code descriptorBindingStorageTexelBufferUpdateAfterBind}. If this is {@link VK10#VK_FALSE FALSE}, then either {@code robustBufferAccess} <b>must</b> be disabled or all of these update-after-bind features <b>must</b> be disabled.</li>
+ * <li>{@code quadDivergentImplicitLod} &ndash; a boolean value indicating whether implicit level of detail calculations for image operations have well-defined results when the image and/or sampler objects used for the instruction are not uniform within a quad. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#textures-derivative-image-operations">Derivative Image Operations</a>.</li>
  * <li>{@code maxPerStageDescriptorUpdateAfterBindSamplers} &ndash; similar to {@code maxPerStageDescriptorSamplers} but counts descriptors from descriptor sets created with or without the {@link EXTDescriptorIndexing#VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT} bit set.</li>
  * <li>{@code maxPerStageDescriptorUpdateAfterBindUniformBuffers} &ndash; similar to {@code maxPerStageDescriptorUniformBuffers} but counts descriptors from descriptor sets created with or without the {@link EXTDescriptorIndexing#VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT} bit set.</li>
  * <li>{@code maxPerStageDescriptorUpdateAfterBindStorageBuffers} &ndash; similar to {@code maxPerStageDescriptorStorageBuffers} but counts descriptors from descriptor sets created with or without the {@link EXTDescriptorIndexing#VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT} bit set.</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceExclusiveScissorFeaturesNV.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fragops-exclusive-scissor">Exclusive Scissor Test</a> for more information.</p>
+ * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fragops-exclusive-scissor">Exclusive Scissor Test</a> for more information.</p>
  * 
  * <p>If the {@link VkPhysicalDeviceExclusiveScissorFeaturesNV} structure is included in the {@code pNext} chain of {@link VkPhysicalDeviceFeatures2KHR}, it is filled with values indicating whether the feature is supported. {@link VkPhysicalDeviceExclusiveScissorFeaturesNV} <b>can</b> also be used in the {@code pNext} chain of {@link VkDeviceCreateInfo} to enable the feature.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceFragmentDensityMapFeaturesEXT.java
Patch:
@@ -33,7 +33,7 @@
  * <ul>
  * <li>{@code fragmentDensityMap} &ndash; specifies whether the implementation supports render passes with a fragment density map attachment. If this feature is not enabled and the {@code pNext} chain of {@link VkRenderPassCreateInfo} contains {@link VkRenderPassFragmentDensityMapCreateInfoEXT}, {@code fragmentDensityMapAttachment} <b>must</b> be {@link VK10#VK_ATTACHMENT_UNUSED ATTACHMENT_UNUSED}.</li>
  * <li>{@code fragmentDensityMapDynamic} &ndash; specifies whether the implementation supports dynamic fragment density map image views. If this feature is not enabled, {@link EXTFragmentDensityMap#VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT} <b>must</b> not be included in {@link VkImageViewCreateInfo}{@code ::flags}.</li>
- * <li>{@code fragmentDensityMapNonSubsampledImages} &ndash; specifies whether the implementation supports regular non-subsampled image attachments with fragment density map render passes. If this feature is not enabled, render passes with a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#renderpass-fragmentdensitymapattachment">fragment density map attachment</a> <b>must</b> only have <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-subsampledimages">subsampled attachments</a> bound.</li>
+ * <li>{@code fragmentDensityMapNonSubsampledImages} &ndash; specifies whether the implementation supports regular non-subsampled image attachments with fragment density map render passes. If this feature is not enabled, render passes with a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#renderpass-fragmentdensitymapattachment">fragment density map attachment</a> <b>must</b> only have <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#resources-subsampledimages">subsampled attachments</a> bound.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceFragmentDensityMapPropertiesEXT.java
Patch:
@@ -33,7 +33,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code minFragmentDensityTexelSize} &ndash; the minimum <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#glossary-fragment-density-texel-size">fragment density texel size</a>.</li>
+ * <li>{@code minFragmentDensityTexelSize} &ndash; the minimum <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#glossary-fragment-density-texel-size">fragment density texel size</a>.</li>
  * <li>{@code maxFragmentDensityTexelSize} &ndash; the maximum fragment density texel size.</li>
  * <li>{@code fragmentDensityInvocations} &ndash; specifies whether the implementation <b>may</b> invoke additional fragment shader invocations for each covered sample.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#primsrast-barycentric">Barycentric Interpolation</a> for more information.</p>
+ * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#primsrast-barycentric">Barycentric Interpolation</a> for more information.</p>
  * 
  * <p>If the {@link VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV} structure is included in the {@code pNext} chain of {@link VkPhysicalDeviceFeatures2KHR}, it is filled with values indicating whether the feature is supported. {@link VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV} <b>can</b> also be used in the {@code pNext} chain of {@link VkDeviceCreateInfo} to enable features.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceIDProperties.java
Patch:
@@ -31,9 +31,9 @@
  * <p>{@code deviceUUID} and/or {@code driverUUID} <b>must</b> be used to determine whether a particular external object can be shared between driver components, where such a restriction exists as defined in the compatibility table for the particular object type:</p>
  * 
  * <ul>
- * <li><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-memory-handle-types-compatibility">External memory handle types compatibility</a></li>
- * <li><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">External semaphore handle types compatibility</a></li>
- * <li><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#external-fence-handle-types-compatibility">External fence handle types compatibility</a></li>
+ * <li><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-memory-handle-types-compatibility">External memory handle types compatibility</a></li>
+ * <li><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-semaphore-handle-types-compatibility">External semaphore handle types compatibility</a></li>
+ * <li><a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#external-fence-handle-types-compatibility">External fence handle types compatibility</a></li>
  * </ul>
  * 
  * <p>If {@code deviceLUIDValid} is {@link VK10#VK_FALSE FALSE}, the values of {@code deviceLUID} and {@code deviceNodeMask} are undefined. If {@code deviceLUIDValid} is {@link VK10#VK_TRUE TRUE} and Vulkan is running on the Windows operating system, the contents of {@code deviceLUID} <b>can</b> be cast to an {@code LUID} object and <b>must</b> be equal to the locally unique identifier of a {@code IDXGIAdapter1} object that corresponds to {@code physicalDevice}. If {@code deviceLUIDValid} is {@link VK10#VK_TRUE TRUE}, {@code deviceNodeMask} <b>must</b> contain exactly one bit. If Vulkan is running on an operating system that supports the Direct3D 12 API and {@code physicalDevice} corresponds to an individual device in a linked device adapter, {@code deviceNodeMask} identifies the Direct3D 12 node corresponding to {@code physicalDevice}. Otherwise, {@code deviceNodeMask} <b>must</b> be 1.</p>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceInlineUniformBlockPropertiesEXT.java
Patch:
@@ -33,7 +33,7 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code maxInlineUniformBlockSize} &ndash; the maximum size in bytes of an <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#descriptorsets-inlineuniformblock">inline uniform block</a> binding.</li>
+ * <li>{@code maxInlineUniformBlockSize} &ndash; the maximum size in bytes of an <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#descriptorsets-inlineuniformblock">inline uniform block</a> binding.</li>
  * <li>{@code maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks} &ndash; similar to {@code maxPerStageDescriptorInlineUniformBlocks} but counts descriptor bindings from descriptor sets created with or without the {@link EXTDescriptorIndexing#VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT} bit set.</li>
  * <li>{@code maxDescriptorSetInlineUniformBlocks} &ndash; the maximum number of inline uniform block bindings that <b>can</b> be included in descriptor bindings in a pipeline layout across all pipeline shader stages and descriptor set numbers. Descriptor bindings with a descriptor type of {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT} count against this limit. Only descriptor bindings in descriptor set layouts created without the {@link EXTDescriptorIndexing#VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT} bit set count against this limit.</li>
  * <li>{@code maxDescriptorSetUpdateAfterBindInlineUniformBlocks} &ndash; similar to {@code maxDescriptorSetInlineUniformBlocks} but counts descriptor bindings from descriptor sets created with or without the {@link EXTDescriptorIndexing#VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT} bit set.</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceMemoryProperties.java
Patch:
@@ -56,7 +56,7 @@
  * 
  * <div style="margin-left: 26px; border-left: 1px solid gray; padding-left: 14px;"><h5>Note</h5>
  * 
- * <p>There is no ordering requirement between <b>X</b> and <b>Y</b> elements for the case their {@code propertyFlags} members are not in a subset relation. That potentially allows more than one possible way to order the same set of memory types. Notice that the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-device-bitmask-list">list of all allowed memory property flag combinations</a> is written in a valid order. But if instead {@link VK10#VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT MEMORY_PROPERTY_DEVICE_LOCAL_BIT} was before {@link VK10#VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT MEMORY_PROPERTY_HOST_VISIBLE_BIT} | {@link VK10#VK_MEMORY_PROPERTY_HOST_COHERENT_BIT MEMORY_PROPERTY_HOST_COHERENT_BIT}, the list would still be in a valid order.</p>
+ * <p>There is no ordering requirement between <b>X</b> and <b>Y</b> elements for the case their {@code propertyFlags} members are not in a subset relation. That potentially allows more than one possible way to order the same set of memory types. Notice that the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-device-bitmask-list">list of all allowed memory property flag combinations</a> is written in a valid order. But if instead {@link VK10#VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT MEMORY_PROPERTY_DEVICE_LOCAL_BIT} was before {@link VK10#VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT MEMORY_PROPERTY_HOST_VISIBLE_BIT} | {@link VK10#VK_MEMORY_PROPERTY_HOST_COHERENT_BIT MEMORY_PROPERTY_HOST_COHERENT_BIT}, the list would still be in a valid order.</p>
  * </div>
  * 
  * <p>This ordering requirement enables applications to use a simple search loop to select the desired memory type along the lines of:</p>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceMeshShaderPropertiesNV.java
Patch:
@@ -34,7 +34,7 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code maxDrawMeshTasksCount} &ndash; the maximum number of local workgroups that <b>can</b> be launched by a single draw mesh tasks command. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#drawing-mesh-shading">Programmable Mesh Shading</a>.</li>
+ * <li>{@code maxDrawMeshTasksCount} &ndash; the maximum number of local workgroups that <b>can</b> be launched by a single draw mesh tasks command. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#drawing-mesh-shading">Programmable Mesh Shading</a>.</li>
  * <li>{@code maxTaskWorkGroupInvocations} &ndash; the maximum total number of task shader invocations in a single local workgroup. The product of the X, Y, and Z sizes as specified by the {@code LocalSize} execution mode in shader modules and by the object decorated by the {@code WorkgroupSize} decoration <b>must</b> be less than or equal to this limit.</li>
  * <li>{@code maxTaskWorkGroupSize} &ndash; the maximum size of a local task workgroup. These three values represent the maximum local workgroup size in the X, Y, and Z dimensions, respectively. The {@code x}, {@code y}, and {@code z} sizes specified by the {@code LocalSize} execution mode and by the object decorated by the {@code WorkgroupSize} decoration in shader modules <b>must</b> be less than or equal to the corresponding limit.</li>
  * <li>{@code maxTaskTotalMemorySize} &ndash; the maximum number of bytes that the task shader can use in total for shared and output memory combined.</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceMultiviewFeatures.java
Patch:
@@ -39,8 +39,8 @@
  * 
  * <ul>
  * <li>{@code multiview} &ndash; specifies whether the implementation supports multiview rendering within a render pass. If this feature is not enabled, the view mask of each subpass <b>must</b> always be zero.</li>
- * <li>{@code multiviewGeometryShader} &ndash; specifies whether the implementation supports multiview rendering within a render pass, with <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#geometry">geometry shaders</a>. If this feature is not enabled, then a pipeline compiled against a subpass with a non-zero view mask <b>must</b> not include a geometry shader.</li>
- * <li>{@code multiviewTessellationShader} &ndash; specifies whether the implementation supports multiview rendering within a render pass, with <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#tessellation">tessellation shaders</a>. If this feature is not enabled, then a pipeline compiled against a subpass with a non-zero view mask <b>must</b> not include any tessellation shaders.</li>
+ * <li>{@code multiviewGeometryShader} &ndash; specifies whether the implementation supports multiview rendering within a render pass, with <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#geometry">geometry shaders</a>. If this feature is not enabled, then a pipeline compiled against a subpass with a non-zero view mask <b>must</b> not include a geometry shader.</li>
+ * <li>{@code multiviewTessellationShader} &ndash; specifies whether the implementation supports multiview rendering within a render pass, with <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#tessellation">tessellation shaders</a>. If this feature is not enabled, then a pipeline compiled against a subpass with a non-zero view mask <b>must</b> not include any tessellation shaders.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceProtectedMemoryProperties.java
Patch:
@@ -33,7 +33,7 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code protectedNoFault} &ndash; specifies the behavior of the implementation when <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-protected-access-rules">protected memory access rules</a> are broken. If {@code protectedNoFault} is {@link VK10#VK_TRUE TRUE}, breaking those rules will not result in process termination or device loss.</li>
+ * <li>{@code protectedNoFault} &ndash; specifies the behavior of the implementation when <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-protected-access-rules">protected memory access rules</a> are broken. If {@code protectedNoFault} is {@link VK10#VK_TRUE TRUE}, breaking those rules will not result in process termination or device loss.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV.java
Patch:
@@ -31,7 +31,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code representativeFragmentTest} &ndash; indicates whether the implementation supports the representative fragment test. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fragops-rep-frag-test">Representative Fragment Test</a>.</li>
+ * <li>{@code representativeFragmentTest} &ndash; indicates whether the implementation supports the representative fragment test. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fragops-rep-frag-test">Representative Fragment Test</a>.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceSamplerYcbcrConversionFeatures.java
Patch:
@@ -27,7 +27,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code samplerYcbcrConversion} &ndash; specifies whether the implementation supports <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#samplers-YCbCr-conversion">sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion</a>. If {@code samplerYcbcrConversion} is {@link VK10#VK_FALSE FALSE}, sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion is not supported, and samplers using sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion <b>must</b> not be used.</li>
+ * <li>{@code samplerYcbcrConversion} &ndash; specifies whether the implementation supports <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#samplers-YCbCr-conversion">sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion</a>. If {@code samplerYcbcrConversion} is {@link VK10#VK_FALSE FALSE}, sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion is not supported, and samplers using sampler Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion <b>must</b> not be used.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceScalarBlockLayoutFeaturesEXT.java
Patch:
@@ -31,7 +31,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code scalarBlockLayout} &ndash; indicates that the implementation supports the layout of resource blocks in shaders using <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#interfaces-scalar-block-layout">scalar alignment</a>.</li>
+ * <li>{@code scalarBlockLayout} &ndash; indicates that the implementation supports the layout of resource blocks in shaders using <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#interfaces-scalar-block-layout">scalar alignment</a>.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceShaderImageFootprintFeaturesNV.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-footprint">Texel Footprint Evaluation</a> for more information.</p>
+ * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#textures-footprint">Texel Footprint Evaluation</a> for more information.</p>
  * 
  * <p>If the {@link VkPhysicalDeviceShaderImageFootprintFeaturesNV} structure is included in the {@code pNext} chain of {@link VkPhysicalDeviceFeatures2KHR}, it is filled with values indicating whether each feature is supported. {@link VkPhysicalDeviceShaderImageFootprintFeaturesNV} <b>can</b> also be used in the {@code pNext} chain of {@link VkDeviceCreateInfo} to enable features.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceShadingRateImageFeaturesNV.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#primsrast-shading-rate-image">Shading Rate Image</a> for more information.</p>
+ * <p>See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#primsrast-shading-rate-image">Shading Rate Image</a> for more information.</p>
  * 
  * <p>If the {@link VkPhysicalDeviceShadingRateImageFeaturesNV} structure is included in the {@code pNext} chain of {@link VkPhysicalDeviceFeatures2KHR}, it is filled with values indicating whether the feature is supported. {@link VkPhysicalDeviceShadingRateImageFeaturesNV} <b>can</b> also be used in the {@code pNext} chain of {@link VkDeviceCreateInfo} to enable features.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceSparseProperties.java
Patch:
@@ -19,9 +19,9 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code residencyStandard2DBlockShape} &ndash; {@link VK10#VK_TRUE TRUE} if the physical device will access all single-sample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#sparsememory-sparseblockshapessingle">Standard Sparse Image Block Shapes (Single Sample)</a> table. If this property is not supported the value returned in the {@code imageGranularity} member of the {@link VkSparseImageFormatProperties} structure for single-sample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</li>
- * <li>{@code residencyStandard2DMultisampleBlockShape} &ndash; {@link VK10#VK_TRUE TRUE} if the physical device will access all multisample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#sparsememory-sparseblockshapesmsaa">Standard Sparse Image Block Shapes (MSAA)</a> table. If this property is not supported, the value returned in the {@code imageGranularity} member of the {@link VkSparseImageFormatProperties} structure for multisample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</li>
- * <li>{@code residencyStandard3DBlockShape} &ndash; {@link VK10#VK_TRUE TRUE} if the physical device will access all 3D sparse resources using the standard sparse image block shapes (based on image format), as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#sparsememory-sparseblockshapessingle">Standard Sparse Image Block Shapes (Single Sample)</a> table. If this property is not supported, the value returned in the {@code imageGranularity} member of the {@link VkSparseImageFormatProperties} structure for 3D images is not required: to match the standard sparse image block dimensions listed in the table.</li>
+ * <li>{@code residencyStandard2DBlockShape} &ndash; {@link VK10#VK_TRUE TRUE} if the physical device will access all single-sample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#sparsememory-sparseblockshapessingle">Standard Sparse Image Block Shapes (Single Sample)</a> table. If this property is not supported the value returned in the {@code imageGranularity} member of the {@link VkSparseImageFormatProperties} structure for single-sample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</li>
+ * <li>{@code residencyStandard2DMultisampleBlockShape} &ndash; {@link VK10#VK_TRUE TRUE} if the physical device will access all multisample 2D sparse resources using the standard sparse image block shapes (based on image format), as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#sparsememory-sparseblockshapesmsaa">Standard Sparse Image Block Shapes (MSAA)</a> table. If this property is not supported, the value returned in the {@code imageGranularity} member of the {@link VkSparseImageFormatProperties} structure for multisample 2D images is not required: to match the standard sparse image block dimensions listed in the table.</li>
+ * <li>{@code residencyStandard3DBlockShape} &ndash; {@link VK10#VK_TRUE TRUE} if the physical device will access all 3D sparse resources using the standard sparse image block shapes (based on image format), as described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#sparsememory-sparseblockshapessingle">Standard Sparse Image Block Shapes (Single Sample)</a> table. If this property is not supported, the value returned in the {@code imageGranularity} member of the {@link VkSparseImageFormatProperties} structure for 3D images is not required: to match the standard sparse image block dimensions listed in the table.</li>
  * <li>{@code residencyAlignedMipSize} &ndash; {@link VK10#VK_TRUE TRUE} if images with mip level dimensions that are not integer multiples of the corresponding dimensions of the sparse image block <b>may</b> be placed in the mip tail. If this property is not reported, only mip levels with dimensions smaller than the {@code imageGranularity} member of the {@link VkSparseImageFormatProperties} structure will be placed in the mip tail. If this property is reported the implementation is allowed to return {@link VK10#VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT} in the {@code flags} member of {@link VkSparseImageFormatProperties}, indicating that mip level dimensions that are not integer multiples of the corresponding dimensions of the sparse image block will be placed in the mip tail.</li>
  * <li>{@code residencyNonResidentStrict} &ndash; specifies whether the physical device <b>can</b> consistently access non-resident regions of a resource. If this property is {@link VK10#VK_TRUE TRUE}, access to non-resident regions of resources will be guaranteed to return values as if the resource were populated with 0; writes to non-resident regions will be discarded.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceSubgroupProperties.java
Patch:
@@ -33,10 +33,10 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code subgroupSize} &ndash; the number of invocations in each subgroup. This will match any <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#interfaces-builtin-variables-sgs">{@code SubgroupSize}</a> decorated variable used in any shader module created on this device. {@code subgroupSize} is at least 1 if any of the physical device&#8217;s queues support {@link VK10#VK_QUEUE_GRAPHICS_BIT QUEUE_GRAPHICS_BIT} or {@link VK10#VK_QUEUE_COMPUTE_BIT QUEUE_COMPUTE_BIT}.</li>
+ * <li>{@code subgroupSize} &ndash; the number of invocations in each subgroup. This will match any <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#interfaces-builtin-variables-sgs">{@code SubgroupSize}</a> decorated variable used in any shader module created on this device. {@code subgroupSize} is at least 1 if any of the physical device&#8217;s queues support {@link VK10#VK_QUEUE_GRAPHICS_BIT QUEUE_GRAPHICS_BIT} or {@link VK10#VK_QUEUE_COMPUTE_BIT QUEUE_COMPUTE_BIT}.</li>
  * <li>{@code supportedStages} &ndash; a bitfield of {@code VkShaderStageFlagBits} describing the shader stages that subgroup operations are supported in. {@code supportedStages} will have the {@link VK10#VK_SHADER_STAGE_COMPUTE_BIT SHADER_STAGE_COMPUTE_BIT} bit set if any of the physical device&#8217;s queues support {@link VK10#VK_QUEUE_COMPUTE_BIT QUEUE_COMPUTE_BIT}.</li>
  * <li>{@code supportedOperations} &ndash; a bitmask of {@code VkSubgroupFeatureFlagBits} specifying the sets of subgroup operations supported on this device. {@code supportedOperations} will have the {@link VK11#VK_SUBGROUP_FEATURE_BASIC_BIT SUBGROUP_FEATURE_BASIC_BIT} bit set if any of the physical device&#8217;s queues support {@link VK10#VK_QUEUE_GRAPHICS_BIT QUEUE_GRAPHICS_BIT} or {@link VK10#VK_QUEUE_COMPUTE_BIT QUEUE_COMPUTE_BIT}.</li>
- * <li>{@code quadOperationsInAllStages} &ndash; a boolean that specifies whether <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-subgroup-quad">quad subgroup operations</a> are available in all stages, or are restricted to fragment and compute stages.</li>
+ * <li>{@code quadOperationsInAllStages} &ndash; a boolean that specifies whether <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-subgroup-quad">quad subgroup operations</a> are available in all stages, or are restricted to fragment and compute stages.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceVulkanMemoryModelFeaturesKHR.java
Patch:
@@ -29,9 +29,9 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code vulkanMemoryModel} &ndash; indicates whether the Vulkan Memory Model is supported, as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-model">Vulkan Memory Model</a>. This also indicates whether shader modules <b>can</b> declare the {@code VulkanMemoryModelKHR} capability.</li>
+ * <li>{@code vulkanMemoryModel} &ndash; indicates whether the Vulkan Memory Model is supported, as defined in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-model">Vulkan Memory Model</a>. This also indicates whether shader modules <b>can</b> declare the {@code VulkanMemoryModelKHR} capability.</li>
  * <li>{@code vulkanMemoryModelDeviceScope} &ndash; indicates whether the Vulkan Memory Model can use {@code Device} scope synchronization. This also indicates whether shader modules <b>can</b> declare the {@code VulkanMemoryModelDeviceScopeKHR} capability.</li>
- * <li>{@code vulkanMemoryModelAvailabilityVisibilityChains} &ndash; indicates whether the Vulkan Memory Model can use <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-model-availability-visibility">availability and visibility chains</a> with more than one element.</li>
+ * <li>{@code vulkanMemoryModelAvailabilityVisibilityChains} &ndash; indicates whether the Vulkan Memory Model can use <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-model-availability-visibility">availability and visibility chains</a> with more than one element.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceYcbcrImageArraysFeaturesEXT.java
Patch:
@@ -31,7 +31,7 @@
  * <h3>Member documentation</h3>
  * 
  * <ul>
- * <li>{@code ycbcrImageArrays} &ndash; indicates that the implementation supports creating images with a format that requires <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion</a> and has multiple array layers.</li>
+ * <li>{@code ycbcrImageArrays} &ndash; indicates that the implementation supports creating images with a format that requires <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">Y&#8217;C<sub>B</sub>C<sub>R</sub> conversion</a> and has multiple array layers.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineColorBlendAdvancedStateCreateInfoEXT.java
Patch:
@@ -25,9 +25,9 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-advancedBlendNonPremultipliedSrcColor">non-premultiplied source color</a> property is not supported, {@code srcPremultiplied} <b>must</b> be {@link VK10#VK_TRUE TRUE}</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-advancedBlendNonPremultipliedDstColor">non-premultiplied destination color</a> property is not supported, {@code dstPremultiplied} <b>must</b> be {@link VK10#VK_TRUE TRUE}</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-advancedBlendCorrelatedOverlap">correlated overlap</a> property is not supported, {@code blendOverlap} <b>must</b> be {@link EXTBlendOperationAdvanced#VK_BLEND_OVERLAP_UNCORRELATED_EXT BLEND_OVERLAP_UNCORRELATED_EXT}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-advancedBlendNonPremultipliedSrcColor">non-premultiplied source color</a> property is not supported, {@code srcPremultiplied} <b>must</b> be {@link VK10#VK_TRUE TRUE}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-advancedBlendNonPremultipliedDstColor">non-premultiplied destination color</a> property is not supported, {@code dstPremultiplied} <b>must</b> be {@link VK10#VK_TRUE TRUE}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-advancedBlendCorrelatedOverlap">correlated overlap</a> property is not supported, {@code blendOverlap} <b>must</b> be {@link EXTBlendOperationAdvanced#VK_BLEND_OVERLAP_UNCORRELATED_EXT BLEND_OVERLAP_UNCORRELATED_EXT}</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineCoverageToColorStateCreateInfoNV.java
Patch:
@@ -20,9 +20,9 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>If {@code coverageToColorEnable} is {@link VK10#VK_TRUE TRUE}, the fragment coverage information is treated as a bitmask with one bit for each sample (as in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fragops-samplemask">Sample Mask</a> section), and this bitmask replaces the first component of the color value corresponding to the fragment shader output location with {@code Location} equal to {@code coverageToColorLocation} and {@code Index} equal to zero. If the color attachment format has fewer bits than the sample coverage, the low bits of the sample coverage bitmask are taken without any clamping. If the color attachment format has more bits than the sample coverage, the high bits of the sample coverage bitmask are filled with zeros.</p>
+ * <p>If {@code coverageToColorEnable} is {@link VK10#VK_TRUE TRUE}, the fragment coverage information is treated as a bitmask with one bit for each sample (as in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fragops-samplemask">Sample Mask</a> section), and this bitmask replaces the first component of the color value corresponding to the fragment shader output location with {@code Location} equal to {@code coverageToColorLocation} and {@code Index} equal to zero. If the color attachment format has fewer bits than the sample coverage, the low bits of the sample coverage bitmask are taken without any clamping. If the color attachment format has more bits than the sample coverage, the high bits of the sample coverage bitmask are filled with zeros.</p>
  * 
- * <p>If <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#primsrast-sampleshading">Sample Shading</a> is in use, the coverage bitmask only has bits set for samples that correspond to the fragment shader invocation that shades those samples.</p>
+ * <p>If <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#primsrast-sampleshading">Sample Shading</a> is in use, the coverage bitmask only has bits set for samples that correspond to the fragment shader invocation that shades those samples.</p>
  * 
  * <p>This pipeline stage occurs after sample counting and before blending, and is always performed after fragment shading regardless of the setting of {@code EarlyFragmentTests}.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineInputAssemblyStateCreateInfo.java
Patch:
@@ -26,8 +26,8 @@
  * 
  * <ul>
  * <li>If {@code topology} is {@link VK10#VK_PRIMITIVE_TOPOLOGY_POINT_LIST PRIMITIVE_TOPOLOGY_POINT_LIST}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_LINE_LIST PRIMITIVE_TOPOLOGY_LINE_LIST}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST PRIMITIVE_TOPOLOGY_TRIANGLE_LIST}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY} or {@link VK10#VK_PRIMITIVE_TOPOLOGY_PATCH_LIST PRIMITIVE_TOPOLOGY_PATCH_LIST}, {@code primitiveRestartEnable} <b>must</b> be {@link VK10#VK_FALSE FALSE}</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-geometryShader">geometry shaders</a> feature is not enabled, {@code topology} <b>must</b> not be any of {@link VK10#VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY} or {@link VK10#VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY}</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-tessellationShader">tessellation shaders</a> feature is not enabled, {@code topology} <b>must</b> not be {@link VK10#VK_PRIMITIVE_TOPOLOGY_PATCH_LIST PRIMITIVE_TOPOLOGY_PATCH_LIST}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-geometryShader">geometry shaders</a> feature is not enabled, {@code topology} <b>must</b> not be any of {@link VK10#VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY}, {@link VK10#VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY} or {@link VK10#VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-tessellationShader">tessellation shaders</a> feature is not enabled, {@code topology} <b>must</b> not be {@link VK10#VK_PRIMITIVE_TOPOLOGY_PATCH_LIST PRIMITIVE_TOPOLOGY_PATCH_LIST}</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineRasterizationDepthClipStateCreateInfoEXT.java
Patch:
@@ -31,7 +31,7 @@
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
  * <li>{@code flags} &ndash; reserved for future use.</li>
- * <li>{@code depthClipEnable} &ndash; controls whether depth clipping is enabled as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vertexpostproc-clipping">Primitive Clipping</a>.</li>
+ * <li>{@code depthClipEnable} &ndash; controls whether depth clipping is enabled as described in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vertexpostproc-clipping">Primitive Clipping</a>.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineRepresentativeFragmentTestStateCreateInfoNV.java
Patch:
@@ -22,7 +22,7 @@
  * 
  * <p>If this structure is not present, {@code representativeFragmentTestEnable} is considered to be {@link VK10#VK_FALSE FALSE}, and the representative fragment test is disabled.</p>
  * 
- * <p>If <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fragops-early-mode">early fragment tests</a> are not enabled in the active fragment shader, the representative fragment shader test has no effect, even if enabled.</p>
+ * <p>If <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fragops-early-mode">early fragment tests</a> are not enabled in the active fragment shader, the representative fragment shader test has no effect, even if enabled.</p>
  * 
  * <h5>Valid Usage (Implicit)</h5>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportExclusiveScissorStateCreateInfoNV.java
Patch:
@@ -25,7 +25,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code exclusiveScissorCount} <b>must</b> be 0 or 1</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code exclusiveScissorCount} <b>must</b> be 0 or 1</li>
  * <li>{@code exclusiveScissorCount} <b>must</b> be less than or equal to {@link VkPhysicalDeviceLimits}{@code ::maxViewports}</li>
  * <li>{@code exclusiveScissorCount} <b>must</b> be 0 or identical to the {@code viewportCount} member of {@link VkPipelineViewportStateCreateInfo}</li>
  * <li>If no element of the {@code pDynamicStates} member of {@code pDynamicState} is {@link NVScissorExclusive#VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV} and {@code exclusiveScissorCount} is not 0, {@code pExclusiveScissors} <b>must</b> be a valid pointer to an array of {@code exclusiveScissorCount} {@link VkRect2D} structures</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportShadingRateImageStateCreateInfoNV.java
Patch:
@@ -25,7 +25,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code viewportCount} <b>must</b> be 0 or 1</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code viewportCount} <b>must</b> be 0 or 1</li>
  * <li>{@code viewportCount} <b>must</b> be less than or equal to {@link VkPhysicalDeviceLimits}{@code ::maxViewports}</li>
  * <li>If {@code shadingRateImageEnable} is {@link VK10#VK_TRUE TRUE}, {@code viewportCount} <b>must</b> be equal to the {@code viewportCount} member of {@link VkPipelineViewportStateCreateInfo}</li>
  * <li>If no element of the {@code pDynamicStates} member of {@code pDynamicState} is {@link NVShadingRateImage#VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV}, {@code pShadingRatePalettes} <b>must</b> be a valid pointer to an array of {@code viewportCount} {@link VkShadingRatePaletteNV} structures</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportStateCreateInfo.java
Patch:
@@ -21,8 +21,8 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code viewportCount} <b>must</b> be 1</li>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code scissorCount} <b>must</b> be 1</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code viewportCount} <b>must</b> be 1</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-multiViewport">multiple viewports</a> feature is not enabled, {@code scissorCount} <b>must</b> be 1</li>
  * <li>{@code viewportCount} <b>must</b> be between 1 and {@link VkPhysicalDeviceLimits}{@code ::maxViewports}, inclusive</li>
  * <li>{@code scissorCount} <b>must</b> be between 1 and {@link VkPhysicalDeviceLimits}{@code ::maxViewports}, inclusive</li>
  * <li>{@code scissorCount} and {@code viewportCount} <b>must</b> be identical</li>
@@ -52,7 +52,7 @@
  * <li>{@code flags} &ndash; reserved for future use.</li>
  * <li>{@code viewportCount} &ndash; the number of viewports used by the pipeline.</li>
  * <li>{@code pViewports} &ndash; a pointer to an array of {@link VkViewport} structures, defining the viewport transforms. If the viewport state is dynamic, this member is ignored.</li>
- * <li>{@code scissorCount} &ndash; the number of <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#fragops-scissor">scissors</a> and <b>must</b> match the number of viewports.</li>
+ * <li>{@code scissorCount} &ndash; the number of <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#fragops-scissor">scissors</a> and <b>must</b> match the number of viewports.</li>
  * <li>{@code pScissors} &ndash; a pointer to an array of {@link VkRect2D} structures which define the rectangular bounds of the scissor for the corresponding viewport. If the scissor state is dynamic, this member is ignored.</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkQueryPoolCreateInfo.java
Patch:
@@ -25,7 +25,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-pipelineStatisticsQuery">pipeline statistics queries</a> feature is not enabled, {@code queryType} <b>must</b> not be {@link VK10#VK_QUERY_TYPE_PIPELINE_STATISTICS QUERY_TYPE_PIPELINE_STATISTICS}</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-pipelineStatisticsQuery">pipeline statistics queries</a> feature is not enabled, {@code queryType} <b>must</b> not be {@link VK10#VK_QUERY_TYPE_PIPELINE_STATISTICS QUERY_TYPE_PIPELINE_STATISTICS}</li>
  * <li>If {@code queryType} is {@link VK10#VK_QUERY_TYPE_PIPELINE_STATISTICS QUERY_TYPE_PIPELINE_STATISTICS}, {@code pipelineStatistics} <b>must</b> be a valid combination of {@code VkQueryPipelineStatisticFlagBits} values</li>
  * </ul>
  * 
@@ -50,7 +50,7 @@
  * <li>{@code flags} &ndash; reserved for future use.</li>
  * <li>{@code queryType} &ndash; a {@code VkQueryType} value specifying the type of queries managed by the pool.</li>
  * <li>{@code queryCount} &ndash; the number of queries managed by the pool.</li>
- * <li>{@code pipelineStatistics} &ndash; a bitmask of {@code VkQueryPipelineStatisticFlagBits} specifying which counters will be returned in queries on the new pool, as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#queries-pipestats">Pipeline Statistics Queries</a>.</li>
+ * <li>{@code pipelineStatistics} &ndash; a bitmask of {@code VkQueryPipelineStatisticFlagBits} specifying which counters will be returned in queries on the new pool, as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#queries-pipestats">Pipeline Statistics Queries</a>.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkQueueFamilyProperties.java
Patch:
@@ -46,9 +46,9 @@
  * 
  * <p>Queues supporting graphics and/or compute operations <b>must</b> report <code>(1,1,1)</code> in {@code minImageTransferGranularity}, meaning that there are no additional restrictions on the granularity of image transfer operations for these queues. Other queues supporting image transfer operations are only required: to support whole mip level transfers, thus {@code minImageTransferGranularity} for queues belonging to such queue families <b>may</b> be <code>(0,0,0)</code>.</p>
  * 
- * <p>The <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-device">Device Memory</a> section describes memory properties queried from the physical device.</p>
+ * <p>The <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-device">Device Memory</a> section describes memory properties queried from the physical device.</p>
  * 
- * <p>For physical device feature queries see the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features">Features</a> chapter.</p>
+ * <p>For physical device feature queries see the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features">Features</a> chapter.</p>
  * 
  * <h5>See Also</h5>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRayTracingPipelineCreateInfoNV.java
Patch:
@@ -21,7 +21,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>The parameters {@code basePipelineHandle} and {@code basePipelineIndex} are described in more detail in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#pipelines-pipeline-derivatives">Pipeline Derivatives</a>.</p>
+ * <p>The parameters {@code basePipelineHandle} and {@code basePipelineIndex} are described in more detail in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#pipelines-pipeline-derivatives">Pipeline Derivatives</a>.</p>
  * 
  * <h5>Valid Usage</h5>
  * 
@@ -31,8 +31,8 @@
  * <li>If {@code flags} contains the {@link VK10#VK_PIPELINE_CREATE_DERIVATIVE_BIT PIPELINE_CREATE_DERIVATIVE_BIT} flag, and {@code basePipelineIndex} is not {@code -1}, {@code basePipelineHandle} <b>must</b> be {@link VK10#VK_NULL_HANDLE NULL_HANDLE}</li>
  * <li>If {@code flags} contains the {@link VK10#VK_PIPELINE_CREATE_DERIVATIVE_BIT PIPELINE_CREATE_DERIVATIVE_BIT} flag, and {@code basePipelineHandle} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code basePipelineIndex} <b>must</b> be {@code -1}</li>
  * <li>The {@code stage} member of one element of {@code pStages} <b>must</b> be {@link NVRayTracing#VK_SHADER_STAGE_RAYGEN_BIT_NV SHADER_STAGE_RAYGEN_BIT_NV}</li>
- * <li>The shader code for the entry points identified by {@code pStages}, and the rest of the state identified by this structure <b>must</b> adhere to the pipeline linking rules described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#interfaces">Shader Interfaces</a> chapter</li>
- * <li>{@code layout} <b>must</b> be <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#descriptorsets-pipelinelayout-consistency">consistent</a> with all shaders specified in {@code pStages}</li>
+ * <li>The shader code for the entry points identified by {@code pStages}, and the rest of the state identified by this structure <b>must</b> adhere to the pipeline linking rules described in the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#interfaces">Shader Interfaces</a> chapter</li>
+ * <li>{@code layout} <b>must</b> be <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#descriptorsets-pipelinelayout-consistency">consistent</a> with all shaders specified in {@code pStages}</li>
  * <li>The number of resources in {@code layout} accessible to each shader stage that is used by the pipeline <b>must</b> be less than or equal to {@link VkPhysicalDeviceLimits}{@code ::maxPerStageResources}</li>
  * <li>{@code maxRecursionDepth} <b>must</b> be less than or equal to {@link VkPhysicalDeviceRayTracingPropertiesNV}{@code ::maxRecursionDepth}</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkReallocationFunction.java
Patch:
@@ -38,7 +38,7 @@
  * 
  * <p>If this function fails and {@code pOriginal} is non-{@code NULL} the application <b>must</b> not free the old allocation.</p>
  * 
- * <p>{@code pfnReallocation} <b>must</b> follow the same <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkAllocationFunction_return_rules">rules for return values as tname:PFN_vkAllocationFunction</a>.</p>
+ * <p>{@code pfnReallocation} <b>must</b> follow the same <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vkAllocationFunction_return_rules">rules for return values as tname:PFN_vkAllocationFunction</a>.</p>
  * 
  * <h5>See Also</h5>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkReallocationFunctionI.java
Patch:
@@ -36,7 +36,7 @@
  * 
  * <p>If this function fails and {@code pOriginal} is non-{@code NULL} the application <b>must</b> not free the old allocation.</p>
  * 
- * <p>{@code pfnReallocation} <b>must</b> follow the same <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#vkAllocationFunction_return_rules">rules for return values as tname:PFN_vkAllocationFunction</a>.</p>
+ * <p>{@code pfnReallocation} <b>must</b> follow the same <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#vkAllocationFunction_return_rules">rules for return values as tname:PFN_vkAllocationFunction</a>.</p>
  * 
  * <h5>See Also</h5>
  * 
@@ -69,7 +69,7 @@ default long callback(long args) {
      * @param pOriginal       <b>must</b> be either {@code NULL} or a pointer previously returned by {@code pfnReallocation} or {@code pfnAllocation} of the same allocator.
      * @param size            the size in bytes of the requested allocation.
      * @param alignment       the requested alignment of the allocation in bytes and <b>must</b> be a power of two.
-     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
+     * @param allocationScope a {@code VkSystemAllocationScope} value specifying the allocation scope of the lifetime of the allocation, as described <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#memory-host-allocation-scope">here</a>.
      */
     @NativeType("void *") long invoke(@NativeType("void *") long pUserData, @NativeType("void *") long pOriginal, @NativeType("size_t") long size, @NativeType("size_t") long alignment, @NativeType("VkSystemAllocationScope") int allocationScope);
 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassBeginInfo.java
Patch:
@@ -34,7 +34,7 @@
  * 
  * <ul>
  * <li>{@code clearValueCount} <b>must</b> be greater than the largest attachment index in {@code renderPass} that specifies a {@code loadOp} (or {@code stencilLoadOp}, if the attachment has a depth/stencil format) of {@link VK10#VK_ATTACHMENT_LOAD_OP_CLEAR ATTACHMENT_LOAD_OP_CLEAR}</li>
- * <li>{@code renderPass} <b>must</b> be <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#renderpass-compatibility">compatible</a> with the {@code renderPass} member of the {@link VkFramebufferCreateInfo} structure specified when creating {@code framebuffer}.</li>
+ * <li>{@code renderPass} <b>must</b> be <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#renderpass-compatibility">compatible</a> with the {@code renderPass} member of the {@link VkFramebufferCreateInfo} structure specified when creating {@code framebuffer}.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassCreateInfo.java
Patch:
@@ -45,8 +45,8 @@
  * <li>If the {@code pNext} chain includes an instance of {@link VkRenderPassMultiviewCreateInfo}, and each element of its {@code pViewMasks} member is 0, the {@code dependencyFlags} member of each element of {@code pDependencies} <b>must</b> not include {@link VK11#VK_DEPENDENCY_VIEW_LOCAL_BIT DEPENDENCY_VIEW_LOCAL_BIT}</li>
  * <li>If the {@code pNext} chain includes an instance of {@link VkRenderPassMultiviewCreateInfo}, and each element of its {@code pViewMasks} member is 0, {@code correlatedViewMaskCount} <b>must</b> be 0</li>
  * <li>If the {@code pNext} chain includes an instance of {@link VkRenderPassMultiviewCreateInfo}, each element of its {@code pViewMask} member <b>must</b> not include a bit at a position greater than the value of {@link VkPhysicalDeviceLimits}{@code ::maxFramebufferLayers}</li>
- * <li>For any element of {@code pDependencies}, if the {@code srcSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code srcStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass</li>
- * <li>For any element of {@code pDependencies}, if the {@code dstSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code dstStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass</li>
+ * <li>For any element of {@code pDependencies}, if the {@code srcSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code srcStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass</li>
+ * <li>For any element of {@code pDependencies}, if the {@code dstSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code dstStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass</li>
  * <li>The {@code srcSubpass} member of each element of {@code pDependencies} <b>must</b> be less than {@code subpassCount}</li>
  * <li>The {@code dstSubpass} member of each element of {@code pDependencies} <b>must</b> be less than {@code subpassCount}</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassCreateInfo2KHR.java
Patch:
@@ -35,8 +35,8 @@
  * <li>If the {@code attachment} member of any element of {@code pInputAttachments}, {@code pColorAttachments}, {@code pResolveAttachments} or {@code pDepthStencilAttachment}, or any element of {@code pPreserveAttachments} in any given element of {@code pSubpasses} is not {@link VK10#VK_ATTACHMENT_UNUSED ATTACHMENT_UNUSED}, it <b>must</b> be less than {@code attachmentCount}</li>
  * <li>For any member of {@code pAttachments} with a {@code loadOp} equal to {@link VK10#VK_ATTACHMENT_LOAD_OP_CLEAR ATTACHMENT_LOAD_OP_CLEAR}, the first use of that attachment <b>must</b> not specify a {@code layout} equal to {@link VK10#VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL}, {@link VK10#VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL}, or {@link VK11#VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL}</li>
  * <li>For any member of {@code pAttachments} with a {@code stencilLoadOp} equal to {@link VK10#VK_ATTACHMENT_LOAD_OP_CLEAR ATTACHMENT_LOAD_OP_CLEAR}, the first use of that attachment <b>must</b> not specify a {@code layout} equal to {@link VK10#VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL}, {@link VK10#VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL}, or {@link VK11#VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL}.</li>
- * <li>For any element of {@code pDependencies}, if the {@code srcSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code srcStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass.</li>
- * <li>For any element of {@code pDependencies}, if the {@code dstSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code dstStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass.</li>
+ * <li>For any element of {@code pDependencies}, if the {@code srcSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code srcStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass.</li>
+ * <li>For any element of {@code pDependencies}, if the {@code dstSubpass} is not {@link VK10#VK_SUBPASS_EXTERNAL SUBPASS_EXTERNAL}, all stage flags included in the {@code dstStageMask} member of that dependency <b>must</b> be a pipeline stage supported by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-pipeline-stages-types">pipeline</a> identified by the {@code pipelineBindPoint} member of the source subpass.</li>
  * <li>The set of bits included in any element of {@code pCorrelatedViewMasks} <b>must</b> not overlap with the set of bits included in any other element of {@code pCorrelatedViewMasks}</li>
  * <li>If the {@link VkSubpassDescription2KHR}{@code ::viewMask} member of all elements of {@code pSubpasses} is 0, {@code correlatedViewMaskCount} <b>must</b> be 0</li>
  * <li>The {@link VkSubpassDescription2KHR}{@code ::viewMask} member of all elements of {@code pSubpasses} <b>must</b> either all be 0, or all not be 0</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassMultiviewCreateInfo.java
Patch:
@@ -25,7 +25,7 @@
  * 
  * <p>If the view mask is zero for all subpasses, multiview is considered to be disabled and all drawing commands execute normally, without this additional broadcasting.</p>
  * 
- * <p>Some implementations <b>may</b> not support multiview in conjunction with <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-multiview-gs">geometry shaders</a> or <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-multiview-tess">tessellation shaders</a>.</p>
+ * <p>Some implementations <b>may</b> not support multiview in conjunction with <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-multiview-gs">geometry shaders</a> or <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-multiview-tess">tessellation shaders</a>.</p>
  * 
  * <p>When multiview is enabled, the {@link VK11#VK_DEPENDENCY_VIEW_LOCAL_BIT DEPENDENCY_VIEW_LOCAL_BIT} bit in a dependency <b>can</b> be used to express a view-local dependency, meaning that each view in the destination subpass depends on a single view in the source subpass. Unlike pipeline barriers, a subpass dependency <b>can</b> potentially have a different view mask in the source subpass and the destination subpass. If the dependency is view-local, then each view (<code>dstView</code>) in the destination subpass depends on the view <code>dstView + pViewOffsets[dependency]</code> in the source subpass. If there is not such a view in the source subpass, then this dependency does not affect that view in the destination subpass. If the dependency is not view-local, then all views in the destination subpass depend on all views in the source subpass, and the view offset is ignored. A non-zero view offset is not allowed in a self-dependency.</p>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSemaphoreGetFdInfoKHR.java
Patch:
@@ -26,9 +26,9 @@
  * 
  * <ul>
  * <li>{@code handleType} <b>must</b> have been included in {@link VkExportSemaphoreCreateInfo}{@code ::handleTypes} when {@code semaphore}&#8217;s current payload was created.</li>
- * <li>{@code semaphore} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalSemaphoreProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
- * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, as defined below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a>, there <b>must</b> be no queue waiting on {@code semaphore}.</li>
- * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code semaphore} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-signaling">semaphore signal operation</a> pending execution.</li>
+ * <li>{@code semaphore} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalSemaphoreProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
+ * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, as defined below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a>, there <b>must</b> be no queue waiting on {@code semaphore}.</li>
+ * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code semaphore} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-signaling">semaphore signal operation</a> pending execution.</li>
  * <li>{@code handleType} <b>must</b> be defined as a POSIX file descriptor handle.</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSemaphoreGetWin32HandleInfoKHR.java
Patch:
@@ -27,9 +27,9 @@
  * <ul>
  * <li>{@code handleType} <b>must</b> have been included in {@link VkExportSemaphoreCreateInfo}{@code ::handleTypes} when the {@code semaphore}&#8217;s current payload was created.</li>
  * <li>If {@code handleType} is defined as an NT handle, {@link KHRExternalSemaphoreWin32#vkGetSemaphoreWin32HandleKHR GetSemaphoreWin32HandleKHR} <b>must</b> be called no more than once for each valid unique combination of {@code semaphore} and {@code handleType}.</li>
- * <li>{@code semaphore} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalSemaphoreProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
- * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, as defined below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a>, there <b>must</b> be no queue waiting on {@code semaphore}.</li>
- * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code semaphore} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-semaphores-signaling">semaphore signal operation</a> pending execution.</li>
+ * <li>{@code semaphore} <b>must</b> not currently have its payload replaced by an imported payload as described below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a> unless that imported payload&#8217;s handle type was included in {@link VkExternalSemaphoreProperties}{@code ::exportFromImportedHandleTypes} for {@code handleType}.</li>
+ * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, as defined below in <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-importing">Importing Semaphore Payloads</a>, there <b>must</b> be no queue waiting on {@code semaphore}.</li>
+ * <li>If {@code handleType} refers to a handle type with copy payload transference semantics, {@code semaphore} <b>must</b> be signaled, or have an associated <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#synchronization-semaphores-signaling">semaphore signal operation</a> pending execution.</li>
  * <li>{@code handleType} <b>must</b> be defined as an NT handle or a global share handle.</li>
  * </ul>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSparseImageMemoryBind.java
Patch:
@@ -21,9 +21,9 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-sparseResidencyAliased">sparse aliased residency</a> feature is not enabled, and if any other resources are bound to ranges of {@code memory}, the range of {@code memory} being bound <b>must</b> not overlap with those bound ranges</li>
- * <li>{@code memory} and {@code memoryOffset} <b>must</b> match the memory requirements of the calling command&#8217;s {@code image}, as described in section <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-association">Resource Memory Association</a></li>
- * <li>{@code subresource} <b>must</b> be a valid image subresource for {@code image} (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-image-views">Image Views</a>)</li>
+ * <li>If the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-sparseResidencyAliased">sparse aliased residency</a> feature is not enabled, and if any other resources are bound to ranges of {@code memory}, the range of {@code memory} being bound <b>must</b> not overlap with those bound ranges</li>
+ * <li>{@code memory} and {@code memoryOffset} <b>must</b> match the memory requirements of the calling command&#8217;s {@code image}, as described in section <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#resources-association">Resource Memory Association</a></li>
+ * <li>{@code subresource} <b>must</b> be a valid image subresource for {@code image} (see <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#resources-image-views">Image Views</a>)</li>
  * <li>{@code offset.x} <b>must</b> be a multiple of the sparse image block width ({@link VkSparseImageFormatProperties}{@code ::imageGranularity}.width) of the image</li>
  * <li>{@code extent.width} <b>must</b> either be a multiple of the sparse image block width of the image, or else <code>(extent.width offset.x)</code> <b>must</b> equal the width of the image subresource</li>
  * <li>{@code offset.y} <b>must</b> be a multiple of the sparse image block height ({@link VkSparseImageFormatProperties}{@code ::imageGranularity}.height) of the image</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSparseMemoryBind.java
Patch:
@@ -36,7 +36,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>If {@code memory} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code memory} and {@code memoryOffset} <b>must</b> match the memory requirements of the resource, as described in section <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-association">Resource Memory Association</a></li>
+ * <li>If {@code memory} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code memory} and {@code memoryOffset} <b>must</b> match the memory requirements of the resource, as described in section <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#resources-association">Resource Memory Association</a></li>
  * <li>If {@code memory} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code memory} <b>must</b> not have been created with a memory type that reports {@link VK10#VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT} bit set</li>
  * <li>{@code size} <b>must</b> be greater than 0</li>
  * <li>{@code resourceOffset} <b>must</b> be less than the size of the resource</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSubresourceLayout.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h5>Description</h5>
  * 
- * <p>If the image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#glossary-linear-resource">linear</a>, then {@code rowPitch}, {@code arrayPitch} and {@code depthPitch} describe the layout of the image subresource in linear memory. For uncompressed formats, {@code rowPitch} is the number of bytes between texels with the same x coordinate in adjacent rows (y coordinates differ by one). {@code arrayPitch} is the number of bytes between texels with the same x and y coordinate in adjacent array layers of the image (array layer values differ by one). {@code depthPitch} is the number of bytes between texels with the same x and y coordinate in adjacent slices of a 3D image (z coordinates differ by one). Expressed as an addressing formula, the starting byte of a texel in the image subresource has address:</p>
+ * <p>If the image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#glossary-linear-resource">linear</a>, then {@code rowPitch}, {@code arrayPitch} and {@code depthPitch} describe the layout of the image subresource in linear memory. For uncompressed formats, {@code rowPitch} is the number of bytes between texels with the same x coordinate in adjacent rows (y coordinates differ by one). {@code arrayPitch} is the number of bytes between texels with the same x and y coordinate in adjacent array layers of the image (array layer values differ by one). {@code depthPitch} is the number of bytes between texels with the same x and y coordinate in adjacent slices of a 3D image (z coordinates differ by one). Expressed as an addressing formula, the starting byte of a texel in the image subresource has address:</p>
  * 
  * <pre><code>
  * // (x,y,z,layer) are in texel coordinates
@@ -38,9 +38,9 @@
  * 
  * <p>If the image has a depth/stencil format and its tiling is {@link VK10#VK_IMAGE_TILING_LINEAR IMAGE_TILING_LINEAR} , then {@code aspectMask} <b>must</b> be either {@link VK10#VK_IMAGE_ASPECT_DEPTH_BIT IMAGE_ASPECT_DEPTH_BIT} or {@link VK10#VK_IMAGE_ASPECT_STENCIL_BIT IMAGE_ASPECT_STENCIL_BIT}. On implementations that store depth and stencil aspects separately, querying each of these image subresource layouts will return a different {@code offset} and {@code size} representing the region of memory used for that aspect. On implementations that store depth and stencil aspects interleaved, the same {@code offset} and {@code size} are returned and represent the interleaved memory allocation.</p>
  * 
- * <p>If the image has a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar format</a> and its tiling is {@link VK10#VK_IMAGE_TILING_LINEAR IMAGE_TILING_LINEAR} , then the {@code aspectMask} member of {@link VkImageSubresource} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT}, {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT}, or (for 3-plane formats only) {@link VK11#VK_IMAGE_ASPECT_PLANE_2_BIT IMAGE_ASPECT_PLANE_2_BIT}. Querying each of these image subresource layouts will return a different {@code offset} and {@code size} representing the region of memory used for that plane. If the image is <em>disjoint</em>, then the {@code offset} is relative to the base address of the plane. If the image is <em>non-disjoint</em>, then the {@code offset} is relative to the base address of the image.</p>
+ * <p>If the image has a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#formats-requiring-sampler-ycbcr-conversion">multi-planar format</a> and its tiling is {@link VK10#VK_IMAGE_TILING_LINEAR IMAGE_TILING_LINEAR} , then the {@code aspectMask} member of {@link VkImageSubresource} <b>must</b> be {@link VK11#VK_IMAGE_ASPECT_PLANE_0_BIT IMAGE_ASPECT_PLANE_0_BIT}, {@link VK11#VK_IMAGE_ASPECT_PLANE_1_BIT IMAGE_ASPECT_PLANE_1_BIT}, or (for 3-plane formats only) {@link VK11#VK_IMAGE_ASPECT_PLANE_2_BIT IMAGE_ASPECT_PLANE_2_BIT}. Querying each of these image subresource layouts will return a different {@code offset} and {@code size} representing the region of memory used for that plane. If the image is <em>disjoint</em>, then the {@code offset} is relative to the base address of the plane. If the image is <em>non-disjoint</em>, then the {@code offset} is relative to the base address of the image.</p>
  * 
- * <p>If the image's tiling is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, then the {@code aspectMask} member of {@link VkImageSubresource} <b>must</b> be one of {@code VK_IMAGE_ASPECT_MEMORY_PLANE_i_BIT_EXT}, where the maximum allowed plane index {@code i} is defined by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkDrmFormatModifierPropertiesEXT">{@code drmFormatModifierPlaneCount}</a> associated with the image's <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#VkImageCreateInfo">{@code format}</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#glossary-drm-format-modifier">modifier</a>. The memory range used by the subresource is described by {@code offset} and {@code size}. If the image is <em>disjoint</em>, then the {@code offset} is relative to the base address of the <em>memory plane</em>. If the image is <em>non-disjoint</em>, then the {@code offset} is relative to the base address of the image. If the image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#glossary-linear-resource">non-linear</a>, then {@code rowPitch}, {@code arrayPitch}, and {@code depthPitch} have an implementation-dependent meaning.</p>
+ * <p>If the image's tiling is {@link EXTImageDrmFormatModifier#VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT}, then the {@code aspectMask} member of {@link VkImageSubresource} <b>must</b> be one of {@code VK_IMAGE_ASPECT_MEMORY_PLANE_i_BIT_EXT}, where the maximum allowed plane index {@code i} is defined by the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkDrmFormatModifierPropertiesEXT">{@code drmFormatModifierPlaneCount}</a> associated with the image's <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VkImageCreateInfo">{@code format}</a> and <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#glossary-drm-format-modifier">modifier</a>. The memory range used by the subresource is described by {@code offset} and {@code size}. If the image is <em>disjoint</em>, then the {@code offset} is relative to the base address of the <em>memory plane</em>. If the image is <em>non-disjoint</em>, then the {@code offset} is relative to the base address of the image. If the image is <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#glossary-linear-resource">non-linear</a>, then {@code rowPitch}, {@code arrayPitch}, and {@code depthPitch} have an implementation-dependent meaning.</p>
  * 
  * <h5>See Also</h5>
  * 

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSurfaceCapabilities2EXT.java
Patch:
@@ -21,7 +21,7 @@
  * <h5>Valid Usage</h5>
  * 
  * <ul>
- * <li>{@code supportedSurfaceCounters} <b>must</b> not include {@link EXTDisplaySurfaceCounter#VK_SURFACE_COUNTER_VBLANK_EXT SURFACE_COUNTER_VBLANK_EXT} unless the surface queried is a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#wsi-display-surfaces">display surface</a>.</li>
+ * <li>{@code supportedSurfaceCounters} <b>must</b> not include {@link EXTDisplaySurfaceCounter#VK_SURFACE_COUNTER_VBLANK_EXT SURFACE_COUNTER_VBLANK_EXT} unless the surface queried is a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#wsi-display-surfaces">display surface</a>.</li>
  * </ul>
  * 
  * <h5>Valid Usage (Implicit)</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkVertexInputBindingDivisorDescriptionEXT.java
Patch:
@@ -40,7 +40,7 @@
  * 
  * <ul>
  * <li>{@code binding} &ndash; the binding number for which the divisor is specified.</li>
- * <li>{@code divisor} &ndash; the number of successive instances that will use the same value of the vertex attribute when instanced rendering is enabled. For example, if the divisor is N, the same vertex attribute will applied to N successive instances before moving on to the next vertex attribute. The maximum value of divisor is implementation dependent and can be queried using {@link VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT}{@code ::maxVertexAttribDivisor}. A value of 0 <b>can</b> be used for the divisor if the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-vertexAttributeInstanceRateZeroDivisor">{@code vertexAttributeInstanceRateZeroDivisor}</a> feature is enabled. In this case, the same vertex attribute will be applied to all instances.</li>
+ * <li>{@code divisor} &ndash; the number of successive instances that will use the same value of the vertex attribute when instanced rendering is enabled. For example, if the divisor is N, the same vertex attribute will applied to N successive instances before moving on to the next vertex attribute. The maximum value of divisor is implementation dependent and can be queried using {@link VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT}{@code ::maxVertexAttribDivisor}. A value of 0 <b>can</b> be used for the divisor if the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#features-vertexAttributeInstanceRateZeroDivisor">{@code vertexAttributeInstanceRateZeroDivisor}</a> feature is enabled. In this case, the same vertex attribute will be applied to all instances.</li>
  * </ul>
  * 
  * <h3>Layout</h3>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkViewport.java
Patch:
@@ -35,9 +35,9 @@
  * 
  * <p>The application <b>can</b> specify a negative term for {@code height}, which has the effect of negating the y coordinate in clip space before performing the transform. When using a negative {@code height}, the application <b>should</b> also adjust the {@code y} value to point to the lower left corner of the viewport instead of the upper left corner. Using the negative {@code height} allows the application to avoid having to negate the y component of the {@code Position} output from the last vertex processing stage in shaders that also target other graphics APIs.</p>
  * 
- * <p>The width and height of the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-maxViewportDimensions">implementation-dependent maximum viewport dimensions</a> <b>must</b> be greater than or equal to the width and height of the largest image which <b>can</b> be created and attached to a framebuffer.</p>
+ * <p>The width and height of the <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-maxViewportDimensions">implementation-dependent maximum viewport dimensions</a> <b>must</b> be greater than or equal to the width and height of the largest image which <b>can</b> be created and attached to a framebuffer.</p>
  * 
- * <p>The floating-point viewport bounds are represented with an <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#limits-viewportSubPixelBits">implementation-dependent precision</a>.</p>
+ * <p>The floating-point viewport bounds are represented with an <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#limits-viewportSubPixelBits">implementation-dependent precision</a>.</p>
  * 
  * <h5>Valid Usage</h5>
  * 

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -1348,8 +1348,8 @@ public class Vma {
      */
     public static final int
         VMA_MEMORY_USAGE_UNKNOWN    = 0,
-        VMA_MEMORY_USAGE_GPU_ONLY   = 2,
-        VMA_MEMORY_USAGE_CPU_ONLY   = 1,
+        VMA_MEMORY_USAGE_GPU_ONLY   = 1,
+        VMA_MEMORY_USAGE_CPU_ONLY   = 2,
         VMA_MEMORY_USAGE_CPU_TO_GPU = 3,
         VMA_MEMORY_USAGE_GPU_TO_CPU = 4;
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/Assimp.java
Patch:
@@ -1191,7 +1191,7 @@ public class Assimp {
      * <h5>Enum values:</h5>
      * 
      * <ul>
-     * <li>{@link #aiShadingMode_Fflat ShadingMode_Fflat} - Flat shading. Shading is done on per-face base, diffuse only. Also known as 'faceted shading'.</li>
+     * <li>{@link #aiShadingMode_Flat ShadingMode_Flat} - Flat shading. Shading is done on per-face base, diffuse only. Also known as 'faceted shading'.</li>
      * <li>{@link #aiShadingMode_Gouraud ShadingMode_Gouraud} - Simple Gouraud shading.</li>
      * <li>{@link #aiShadingMode_Phong ShadingMode_Phong} - Phong-Shading</li>
      * <li>{@link #aiShadingMode_Blinn ShadingMode_Blinn} - Phong-Blinn-Shading</li>
@@ -1204,7 +1204,7 @@ public class Assimp {
      * </ul>
      */
     public static final int
-        aiShadingMode_Fflat        = 0x1,
+        aiShadingMode_Flat         = 0x1,
         aiShadingMode_Gouraud      = 0x2,
         aiShadingMode_Phong        = 0x3,
         aiShadingMode_Blinn        = 0x4,

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVRayTracing.java
Patch:
@@ -678,7 +678,7 @@ public static void nvkCmdBuildAccelerationStructureNV(VkCommandBuffer commandBuf
      * 
      * <ul>
      * <li>{@code geometryCount} <b>must</b> be less than or equal to {@link VkPhysicalDeviceRayTracingPropertiesNV}{@code ::maxGeometryCount}</li>
-     * <li>{@code dst} <b>must</b> have been created with compatible {@link VkAccelerationStructureInfoNV} where {@link VkAccelerationStructureInfoNV}:{@code ::type} and {@link VkAccelerationStructureInfoNV}{@code ::flags} are identical, {@link VkAccelerationStructureInfoNV}{@code ::instanceCount} and {@link VkAccelerationStructureInfoNV}{@code ::geometryCount} for {@code dst} are greater than or equal to the build size and each geometry in {@link VkAccelerationStructureInfoNV}{@code ::pGeometries} for {@code dst} has greater than or equal to the number of vertices, indices, and AABBs.</li>
+     * <li>{@code dst} <b>must</b> have been created with compatible {@link VkAccelerationStructureInfoNV} where {@link VkAccelerationStructureInfoNV}{@code ::type} and {@link VkAccelerationStructureInfoNV}{@code ::flags} are identical, {@link VkAccelerationStructureInfoNV}{@code ::instanceCount} and {@link VkAccelerationStructureInfoNV}{@code ::geometryCount} for {@code dst} are greater than or equal to the build size and each geometry in {@link VkAccelerationStructureInfoNV}{@code ::pGeometries} for {@code dst} has greater than or equal to the number of vertices, indices, and AABBs.</li>
      * <li>If {@code update} is {@link VK10#VK_TRUE TRUE}, {@code src} <b>must</b> not be {@link VK10#VK_NULL_HANDLE NULL_HANDLE}</li>
      * <li>If {@code update} is {@link VK10#VK_TRUE TRUE}, {@code src} <b>must</b> have been built before with {@link #VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV} set in {@link VkAccelerationStructureInfoNV}{@code ::flags}</li>
      * <li>If {@code update} is {@link VK10#VK_FALSE FALSE}, The {@code size} member of the {@link VkMemoryRequirements} structure returned from a call to {@link #vkGetAccelerationStructureMemoryRequirementsNV GetAccelerationStructureMemoryRequirementsNV} with {@link VkAccelerationStructureMemoryRequirementsInfoNV}{@code ::accelerationStructure} set to {@code dst} and {@link VkAccelerationStructureMemoryRequirementsInfoNV}{@code ::type} set to {@link #VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV} <b>must</b> be less than or equal to the size of {@code scratch} minus {@code scratchOffset}</li>
@@ -1059,7 +1059,7 @@ public static int nvkGetRayTracingShaderGroupHandlesNV(VkDevice device, long pip
      *
      * @param device     the logical device that contains the ray tracing pipeline.
      * @param pipeline   the ray tracing pipeline object that contains the shaders.
-     * @param firstGroup the index of the first group to retrieve a handle for from the {@link VkPipelineShaderStageCreateInfo}{@code ::pGroups} array.
+     * @param firstGroup the index of the first group to retrieve a handle for from the {@link VkRayTracingShaderGroupCreateInfoNV}{@code ::pGroups} array.
      * @param groupCount the number of shader handles to retrieve.
      * @param pData      a pointer to a user-allocated buffer where the results will be written.
      */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceCreateInfo.java
Patch:
@@ -31,7 +31,7 @@
  * 
  * <ul>
  * <li>{@code sType} <b>must</b> be {@link VK10#VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO STRUCTURE_TYPE_DEVICE_CREATE_INFO}</li>
- * <li>Each {@code pNext} member of any structure (including this one) in the {@code pNext} chain <b>must</b> be either {@code NULL} or a pointer to a valid instance of {@link VkDeviceGroupDeviceCreateInfo}, {@link VkDeviceMemoryOverallocationCreateInfoAMD}, {@link VkPhysicalDevice16BitStorageFeatures}, {@link VkPhysicalDevice8BitStorageFeaturesKHR}, {@link VkPhysicalDeviceASTCDecodeFeaturesEXT}, {@link VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT}, {@link VkPhysicalDeviceBufferAddressFeaturesEXT}, {@link VkPhysicalDeviceComputeShaderDerivativesFeaturesNV}, {@link VkPhysicalDeviceConditionalRenderingFeaturesEXT}, {@link VkPhysicalDeviceCooperativeMatrixFeaturesNV}, {@link VkPhysicalDeviceCornerSampledImageFeaturesNV}, {@link VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV}, {@link VkPhysicalDeviceDepthClipEnableFeaturesEXT}, {@link VkPhysicalDeviceDescriptorIndexingFeaturesEXT}, {@link VkPhysicalDeviceExclusiveScissorFeaturesNV}, {@link VkPhysicalDeviceFeatures2}, {@link VkPhysicalDeviceFloat16Int8FeaturesKHR}, {@link VkPhysicalDeviceFragmentDensityMapFeaturesEXT}, {@link VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV}, {@link VkPhysicalDeviceHostQueryResetFeaturesEXT}, {@link VkPhysicalDeviceInlineUniformBlockFeaturesEXT}, {@link VkPhysicalDeviceMemoryPriorityFeaturesEXT}, {@link VkPhysicalDeviceMeshShaderFeaturesNV}, {@link VkPhysicalDeviceMultiviewFeatures}, {@link VkPhysicalDeviceProtectedMemoryFeatures}, {@link VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV}, {@link VkPhysicalDeviceSamplerYcbcrConversionFeatures}, {@link VkPhysicalDeviceScalarBlockLayoutFeaturesEXT}, {@link VkPhysicalDeviceShaderAtomicInt64FeaturesKHR}, {@link VkPhysicalDeviceShaderDrawParameterFeatures}, {@link VkPhysicalDeviceShaderImageFootprintFeaturesNV}, {@link VkPhysicalDeviceShadingRateImageFeaturesNV}, {@link VkPhysicalDeviceTransformFeedbackFeaturesEXT}, {@link VkPhysicalDeviceVariablePointerFeatures}, {@link VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT}, {@link VkPhysicalDeviceVulkanMemoryModelFeaturesKHR}, or {@link VkPhysicalDeviceYcbcrImageArraysFeaturesEXT}</li>
+ * <li>Each {@code pNext} member of any structure (including this one) in the {@code pNext} chain <b>must</b> be either {@code NULL} or a pointer to a valid instance of {@link VkDeviceGroupDeviceCreateInfo}, {@link VkDeviceMemoryOverallocationCreateInfoAMD}, {@link VkPhysicalDevice16BitStorageFeatures}, {@link VkPhysicalDevice8BitStorageFeaturesKHR}, {@link VkPhysicalDeviceASTCDecodeFeaturesEXT}, {@link VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT}, {@link VkPhysicalDeviceBufferDeviceAddressFeaturesEXT}, {@link VkPhysicalDeviceComputeShaderDerivativesFeaturesNV}, {@link VkPhysicalDeviceConditionalRenderingFeaturesEXT}, {@link VkPhysicalDeviceCooperativeMatrixFeaturesNV}, {@link VkPhysicalDeviceCornerSampledImageFeaturesNV}, {@link VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV}, {@link VkPhysicalDeviceDepthClipEnableFeaturesEXT}, {@link VkPhysicalDeviceDescriptorIndexingFeaturesEXT}, {@link VkPhysicalDeviceExclusiveScissorFeaturesNV}, {@link VkPhysicalDeviceFeatures2}, {@link VkPhysicalDeviceFloat16Int8FeaturesKHR}, {@link VkPhysicalDeviceFragmentDensityMapFeaturesEXT}, {@link VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV}, {@link VkPhysicalDeviceHostQueryResetFeaturesEXT}, {@link VkPhysicalDeviceInlineUniformBlockFeaturesEXT}, {@link VkPhysicalDeviceMemoryPriorityFeaturesEXT}, {@link VkPhysicalDeviceMeshShaderFeaturesNV}, {@link VkPhysicalDeviceMultiviewFeatures}, {@link VkPhysicalDeviceProtectedMemoryFeatures}, {@link VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV}, {@link VkPhysicalDeviceSamplerYcbcrConversionFeatures}, {@link VkPhysicalDeviceScalarBlockLayoutFeaturesEXT}, {@link VkPhysicalDeviceShaderAtomicInt64FeaturesKHR}, {@link VkPhysicalDeviceShaderDrawParametersFeatures}, {@link VkPhysicalDeviceShaderImageFootprintFeaturesNV}, {@link VkPhysicalDeviceShadingRateImageFeaturesNV}, {@link VkPhysicalDeviceTransformFeedbackFeaturesEXT}, {@link VkPhysicalDeviceVariablePointersFeatures}, {@link VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT}, {@link VkPhysicalDeviceVulkanMemoryModelFeaturesKHR}, or {@link VkPhysicalDeviceYcbcrImageArraysFeaturesEXT}</li>
  * <li>Each {@code sType} member in the {@code pNext} chain <b>must</b> be unique</li>
  * <li>{@code flags} <b>must</b> be 0</li>
  * <li>{@code pQueueCreateInfos} <b>must</b> be a valid pointer to an array of {@code queueCreateInfoCount} valid {@link VkDeviceQueueCreateInfo} structures</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPhysicalDeviceVariablePointerFeaturesKHR.java
Patch:
@@ -16,7 +16,7 @@
 import static org.lwjgl.system.MemoryStack.*;
 
 /**
- * See {@link VkPhysicalDeviceVariablePointerFeatures}.
+ * See {@link VkPhysicalDeviceVariablePointersFeatures}.
  * 
  * <h3>Layout</h3>
  * 
@@ -28,7 +28,7 @@
  *     VkBool32 variablePointers;
  * }</code></pre>
  */
-public class VkPhysicalDeviceVariablePointerFeaturesKHR extends VkPhysicalDeviceVariablePointerFeatures {
+public class VkPhysicalDeviceVariablePointerFeaturesKHR extends VkPhysicalDeviceVariablePointersFeatures {
 
     /**
      * Creates a {@code VkPhysicalDeviceVariablePointerFeaturesKHR} instance at the current position of the specified {@link ByteBuffer} container. Changes to the buffer's content will be
@@ -225,7 +225,7 @@ public static VkPhysicalDeviceVariablePointerFeaturesKHR.Buffer callocStack(int
     // -----------------------------------
 
     /** An array of {@link VkPhysicalDeviceVariablePointerFeaturesKHR} structs. */
-    public static class Buffer extends VkPhysicalDeviceVariablePointerFeatures.Buffer {
+    public static class Buffer extends VkPhysicalDeviceVariablePointersFeatures.Buffer {
 
         private static final VkPhysicalDeviceVariablePointerFeaturesKHR ELEMENT_FACTORY = VkPhysicalDeviceVariablePointerFeaturesKHR.create(-1L);
 

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CL10.java
Patch:
@@ -5287,7 +5287,7 @@ public static int clBuildProgram(@NativeType("cl_program") long program, @Nullab
      * @see <a target="_blank" href="https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/clBuildProgram.html">Reference Page</a>
      */
     @NativeType("cl_int")
-    public static int clBuildProgram(@NativeType("cl_program") long program, @Nullable @NativeType("cl_device_id const *") long device, @NativeType("cl_char const *") CharSequence options, @Nullable @NativeType("void (*) (cl_program, void *)") CLProgramCallbackI pfn_notify, @NativeType("void *") long user_data) {
+    public static int clBuildProgram(@NativeType("cl_program") long program, @NativeType("cl_device_id const *") long device, @NativeType("cl_char const *") CharSequence options, @Nullable @NativeType("void (*) (cl_program, void *)") CLProgramCallbackI pfn_notify, @NativeType("void *") long user_data) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
             stack.nASCII(options, true);
@@ -8139,7 +8139,7 @@ public static int clEnqueueNativeKernel(@NativeType("cl_command_queue") long com
      * @see <a target="_blank" href="https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/clEnqueueNativeKernel.html">Reference Page</a>
      */
     @NativeType("cl_int")
-    public static int clEnqueueNativeKernel(@NativeType("cl_command_queue") long command_queue, @NativeType("void (*) (void *)") CLNativeKernelI user_func, @Nullable @NativeType("void *") ByteBuffer args, @Nullable @NativeType("cl_mem const *") long memobj, @Nullable @NativeType("void const **") long memobj_loc, @Nullable @NativeType("cl_event const *") PointerBuffer event_wait_list, @Nullable @NativeType("cl_event *") PointerBuffer event) {
+    public static int clEnqueueNativeKernel(@NativeType("cl_command_queue") long command_queue, @NativeType("void (*) (void *)") CLNativeKernelI user_func, @Nullable @NativeType("void *") ByteBuffer args, @NativeType("cl_mem const *") long memobj, @NativeType("void const **") long memobj_loc, @Nullable @NativeType("cl_event const *") PointerBuffer event_wait_list, @Nullable @NativeType("cl_event *") PointerBuffer event) {
         if (CHECKS) {
             checkSafe(event, 1);
         }

File: modules/lwjgl/opencl/src/generated/java/org/lwjgl/opencl/CL12.java
Patch:
@@ -1249,7 +1249,7 @@ public static long clLinkProgram(@NativeType("cl_context") long context, @Nullab
      * @see <a target="_blank" href="https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/clLinkProgram.html">Reference Page</a>
      */
     @NativeType("cl_program")
-    public static long clLinkProgram(@NativeType("cl_context") long context, @Nullable @NativeType("cl_device_id const *") PointerBuffer device_list, @NativeType("cl_char const *") CharSequence options, @Nullable @NativeType("cl_program const *") long input_program, @Nullable @NativeType("void (*) (cl_program, void *)") CLProgramCallbackI pfn_notify, @NativeType("void *") long user_data) {
+    public static long clLinkProgram(@NativeType("cl_context") long context, @Nullable @NativeType("cl_device_id const *") PointerBuffer device_list, @NativeType("cl_char const *") CharSequence options, @NativeType("cl_program const *") long input_program, @Nullable @NativeType("void (*) (cl_program, void *)") CLProgramCallbackI pfn_notify, @NativeType("void *") long user_data) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
             stack.nASCII(options, true);

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/AMDDebugOutput.java
Patch:
@@ -166,7 +166,7 @@ public static void glDebugMessageEnableAMD(@NativeType("GLenum") int category, @
      * @param severity the message severity. One of:<br><table><tr><td>{@link #GL_DEBUG_SEVERITY_HIGH_AMD DEBUG_SEVERITY_HIGH_AMD}</td><td>{@link #GL_DEBUG_SEVERITY_MEDIUM_AMD DEBUG_SEVERITY_MEDIUM_AMD}</td><td>{@link #GL_DEBUG_SEVERITY_LOW_AMD DEBUG_SEVERITY_LOW_AMD}</td></tr></table>
      * @param enabled  whether to enable or disable the referenced subset of messages
      */
-    public static void glDebugMessageEnableAMD(@NativeType("GLenum") int category, @NativeType("GLenum") int severity, @Nullable @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
+    public static void glDebugMessageEnableAMD(@NativeType("GLenum") int category, @NativeType("GLenum") int severity, @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
             IntBuffer ids = stack.ints(id);

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBDebugOutput.java
Patch:
@@ -215,7 +215,7 @@ public static void glDebugMessageControlARB(@NativeType("GLenum") int source, @N
      * @param severity the message severity level. One of:<br><table><tr><td>{@link #GL_DEBUG_SEVERITY_HIGH_ARB DEBUG_SEVERITY_HIGH_ARB}</td><td>{@link #GL_DEBUG_SEVERITY_MEDIUM_ARB DEBUG_SEVERITY_MEDIUM_ARB}</td><td>{@link #GL_DEBUG_SEVERITY_LOW_ARB DEBUG_SEVERITY_LOW_ARB}</td></tr></table>
      * @param enabled  whether to enable or disable the references subset of messages
      */
-    public static void glDebugMessageControlARB(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @Nullable @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
+    public static void glDebugMessageControlARB(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
             IntBuffer ids = stack.ints(id);

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL43.java
Patch:
@@ -776,7 +776,7 @@ public static void glDebugMessageControl(@NativeType("GLenum") int source, @Nati
      * 
      * @see <a target="_blank" href="http://docs.gl/gl4/glDebugMessageControl">Reference Page</a>
      */
-    public static void glDebugMessageControl(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @Nullable @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
+    public static void glDebugMessageControl(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
         GL43C.glDebugMessageControl(source, type, severity, id, enabled);
     }
 

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL43C.java
Patch:
@@ -751,7 +751,7 @@ public static void glDebugMessageControl(@NativeType("GLenum") int source, @Nati
      * 
      * @see <a target="_blank" href="http://docs.gl/gl4/glDebugMessageControl">Reference Page</a>
      */
-    public static void glDebugMessageControl(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @Nullable @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
+    public static void glDebugMessageControl(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
             IntBuffer ids = stack.ints(id);

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/KHRDebug.java
Patch:
@@ -248,7 +248,7 @@ public static void glDebugMessageControl(@NativeType("GLenum") int source, @Nati
      * @param severity the severity of debug messages to enable or disable. One of:<br><table><tr><td>{@link GL43C#GL_DEBUG_SEVERITY_HIGH DEBUG_SEVERITY_HIGH}</td><td>{@link GL43C#GL_DEBUG_SEVERITY_MEDIUM DEBUG_SEVERITY_MEDIUM}</td><td>{@link GL43C#GL_DEBUG_SEVERITY_LOW DEBUG_SEVERITY_LOW}</td></tr><tr><td>{@link GL43C#GL_DEBUG_SEVERITY_NOTIFICATION DEBUG_SEVERITY_NOTIFICATION}</td></tr></table>
      * @param enabled  whether the selected messages should be enabled or disabled
      */
-    public static void glDebugMessageControl(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @Nullable @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
+    public static void glDebugMessageControl(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
         GL43C.glDebugMessageControl(source, type, severity, id, enabled);
     }
 

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/KHRDebug.java
Patch:
@@ -254,7 +254,7 @@ public static void glDebugMessageControlKHR(@NativeType("GLenum") int source, @N
      * @param severity the severity of debug messages to enable or disable. One of:<br><table><tr><td>{@link #GL_DEBUG_SEVERITY_HIGH_KHR DEBUG_SEVERITY_HIGH_KHR}</td><td>{@link #GL_DEBUG_SEVERITY_MEDIUM_KHR DEBUG_SEVERITY_MEDIUM_KHR}</td><td>{@link #GL_DEBUG_SEVERITY_LOW_KHR DEBUG_SEVERITY_LOW_KHR}</td></tr><tr><td>{@link #GL_DEBUG_SEVERITY_NOTIFICATION_KHR DEBUG_SEVERITY_NOTIFICATION_KHR}</td></tr></table>
      * @param enabled  whether the selected messages should be enabled or disabled
      */
-    public static void glDebugMessageControlKHR(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @Nullable @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
+    public static void glDebugMessageControlKHR(@NativeType("GLenum") int source, @NativeType("GLenum") int type, @NativeType("GLenum") int severity, @NativeType("GLuint const *") int id, @NativeType("GLboolean") boolean enabled) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
             IntBuffer ids = stack.ints(id);

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -2367,7 +2367,7 @@ public static String memASCII(long address) {
      * @return the decoded {@link String}
      */
     @SuppressWarnings("deprecation")
-    private static String memASCII(long address, int length) {
+    public static String memASCII(long address, int length) {
         if (length <= 0) {
             return "";
         }

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Library.java
Patch:
@@ -332,7 +332,7 @@ private static SharedLibrary loadNative(Class<?> context, String libName, String
             return null;
         }
 
-        SharedLibrary lib = apiCreateLibrary(libFile.toString());
+        SharedLibrary lib = apiCreateLibrary(libFile.toAbsolutePath().toString());
         apiLog(String.format("\tLoaded from %s: %s", property, libFile));
         checkHash(context, libFile);
         return lib;

File: modules/samples/src/test/java/org/lwjgl/demo/bgfx/HelloBGFX.java
Patch:
@@ -35,7 +35,6 @@ public static void main(String[] args) {
 
         // the client (renderer) API is managed by bgfx
         glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
-        glfwWindowHint(GLFW_SCALE_TO_MONITOR, GLFW_TRUE);
         if (Platform.get() == Platform.MACOSX) {
             glfwWindowHint(GLFW_COCOA_RETINA_FRAMEBUFFER, GLFW_FALSE);
         }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/X11.java
Patch:
@@ -401,7 +401,7 @@ protected X11() {
         throw new UnsupportedOperationException();
     }
 
-    private static final SharedLibrary X11 = Library.loadNative(X11.class, "X11");
+    private static final SharedLibrary X11 = Library.loadNative(X11.class, null, "libX11.so.6", "libX11.so");
 
     /** Contains the function pointers loaded from the X11 {@link SharedLibrary}. */
     public static final class Functions {

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXAllocatorInterface.java
Patch:
@@ -29,7 +29,7 @@
  * 
  * <pre><code>
  * struct bgfx_allocator_interface_t {
- *     {@link BGFXAllocatorVtbl bgfx_allocator_vtbl_t const} * vtbl;
+ *     {@link BGFXAllocatorVtbl bgfx_allocator_vtbl_t} const * vtbl;
  * }</code></pre>
  */
 @NativeType("struct bgfx_allocator_interface_t")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCallbackInterface.java
Patch:
@@ -33,7 +33,7 @@
  * 
  * <pre><code>
  * struct bgfx_callback_interface_t {
- *     {@link BGFXCallbackVtbl bgfx_callback_vtbl_t const} * vtbl;
+ *     {@link BGFXCallbackVtbl bgfx_callback_vtbl_t} const * vtbl;
  * }</code></pre>
  */
 @NativeType("struct bgfx_callback_interface_t")

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxBaseClassInfo.java
Patch:
@@ -18,7 +18,7 @@
  * 
  * <pre><code>
  * struct CXIdxBaseClassInfo {
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * base;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * base;
  *     {@link CXCursor CXCursor} cursor;
  *     {@link CXIdxLoc CXIdxLoc} loc;
  * }</code></pre>

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxCXXClassDeclInfo.java
Patch:
@@ -19,8 +19,8 @@
  * 
  * <pre><code>
  * struct CXIdxCXXClassDeclInfo {
- *     {@link CXIdxDeclInfo CXIdxDeclInfo const} * declInfo;
- *     {@link CXIdxBaseClassInfo CXIdxBaseClassInfo const} * const * bases;
+ *     {@link CXIdxDeclInfo CXIdxDeclInfo} const * declInfo;
+ *     {@link CXIdxBaseClassInfo CXIdxBaseClassInfo} const * const * bases;
  *     unsigned numBases;
  * }</code></pre>
  */

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxEntityInfo.java
Patch:
@@ -26,7 +26,7 @@
  *     char const * name;
  *     char const * USR;
  *     {@link CXCursor CXCursor} cursor;
- *     {@link CXIdxAttrInfo CXIdxAttrInfo const} * const * attributes;
+ *     {@link CXIdxAttrInfo CXIdxAttrInfo} const * const * attributes;
  *     unsigned numAttributes;
  * }</code></pre>
  */

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxEntityRefInfo.java
Patch:
@@ -40,9 +40,9 @@
  *     CXIdxEntityRefKind kind;
  *     {@link CXCursor CXCursor} cursor;
  *     {@link CXIdxLoc CXIdxLoc} loc;
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * referencedEntity;
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * parentEntity;
- *     {@link CXIdxContainerInfo CXIdxContainerInfo const} * container;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * referencedEntity;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * parentEntity;
+ *     {@link CXIdxContainerInfo CXIdxContainerInfo} const * container;
  *     CXSymbolRole role;
  * }</code></pre>
  */

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxIBOutletCollectionAttrInfo.java
Patch:
@@ -18,8 +18,8 @@
  * 
  * <pre><code>
  * struct CXIdxIBOutletCollectionAttrInfo {
- *     {@link CXIdxAttrInfo CXIdxAttrInfo const} * attrInfo;
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * objcClass;
+ *     {@link CXIdxAttrInfo CXIdxAttrInfo} const * attrInfo;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * objcClass;
  *     {@link CXCursor CXCursor} classCursor;
  *     {@link CXIdxLoc CXIdxLoc} classLoc;
  * }</code></pre>

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxObjCCategoryDeclInfo.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <pre><code>
  * struct CXIdxObjCCategoryDeclInfo {
- *     {@link CXIdxObjCContainerDeclInfo CXIdxObjCContainerDeclInfo const} * containerInfo;
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * objcClass;
+ *     {@link CXIdxObjCContainerDeclInfo CXIdxObjCContainerDeclInfo} const * containerInfo;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * objcClass;
  *     {@link CXCursor CXCursor} classCursor;
  *     {@link CXIdxLoc CXIdxLoc} classLoc;
- *     {@link CXIdxObjCProtocolRefListInfo CXIdxObjCProtocolRefListInfo const} * protocols;
+ *     {@link CXIdxObjCProtocolRefListInfo CXIdxObjCProtocolRefListInfo} const * protocols;
  * }</code></pre>
  */
 public class CXIdxObjCCategoryDeclInfo extends Struct {

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxObjCContainerDeclInfo.java
Patch:
@@ -18,7 +18,7 @@
  * 
  * <pre><code>
  * struct CXIdxObjCContainerDeclInfo {
- *     {@link CXIdxDeclInfo CXIdxDeclInfo const} * declInfo;
+ *     {@link CXIdxDeclInfo CXIdxDeclInfo} const * declInfo;
  *     CXIdxObjCContainerKind kind;
  * }</code></pre>
  */

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxObjCInterfaceDeclInfo.java
Patch:
@@ -18,9 +18,9 @@
  * 
  * <pre><code>
  * struct CXIdxObjCInterfaceDeclInfo {
- *     {@link CXIdxObjCContainerDeclInfo CXIdxObjCContainerDeclInfo const} * containerInfo;
- *     {@link CXIdxBaseClassInfo CXIdxBaseClassInfo const} * superInfo;
- *     {@link CXIdxObjCProtocolRefListInfo CXIdxObjCProtocolRefListInfo const} * protocols;
+ *     {@link CXIdxObjCContainerDeclInfo CXIdxObjCContainerDeclInfo} const * containerInfo;
+ *     {@link CXIdxBaseClassInfo CXIdxBaseClassInfo} const * superInfo;
+ *     {@link CXIdxObjCProtocolRefListInfo CXIdxObjCProtocolRefListInfo} const * protocols;
  * }</code></pre>
  */
 public class CXIdxObjCInterfaceDeclInfo extends Struct {

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxObjCPropertyDeclInfo.java
Patch:
@@ -18,9 +18,9 @@
  * 
  * <pre><code>
  * struct CXIdxObjCPropertyDeclInfo {
- *     {@link CXIdxDeclInfo CXIdxDeclInfo const} * declInfo;
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * getter;
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * setter;
+ *     {@link CXIdxDeclInfo CXIdxDeclInfo} const * declInfo;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * getter;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * setter;
  * }</code></pre>
  */
 public class CXIdxObjCPropertyDeclInfo extends Struct {

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxObjCProtocolRefInfo.java
Patch:
@@ -18,7 +18,7 @@
  * 
  * <pre><code>
  * struct CXIdxObjCProtocolRefInfo {
- *     {@link CXIdxEntityInfo CXIdxEntityInfo const} * protocol;
+ *     {@link CXIdxEntityInfo CXIdxEntityInfo} const * protocol;
  *     {@link CXCursor CXCursor} cursor;
  *     {@link CXIdxLoc CXIdxLoc} loc;
  * }</code></pre>

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXIdxObjCProtocolRefListInfo.java
Patch:
@@ -19,7 +19,7 @@
  * 
  * <pre><code>
  * struct CXIdxObjCProtocolRefListInfo {
- *     {@link CXIdxObjCProtocolRefInfo CXIdxObjCProtocolRefInfo const} * const * protocols;
+ *     {@link CXIdxObjCProtocolRefInfo CXIdxObjCProtocolRefInfo} const * const * protocols;
  *     unsigned numProtocols;
  * }</code></pre>
  */

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/RenderModel.java
Patch:
@@ -30,7 +30,7 @@
  * 
  * <pre><code>
  * struct RenderModel_t {
- *     {@link RenderModelVertex RenderModel_Vertex_t const} * rVertexData;
+ *     {@link RenderModelVertex RenderModel_Vertex_t} const * rVertexData;
  *     uint32_t unVertexCount;
  *     uint16_t const * IndexData;
  *     uint32_t unTriangleCount;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkAccelerationStructureInfoNV.java
Patch:
@@ -70,7 +70,7 @@
  *     VkBuildAccelerationStructureFlagsNV flags;
  *     uint32_t instanceCount;
  *     uint32_t geometryCount;
- *     {@link VkGeometryNV VkGeometryNV const} * pGeometries;
+ *     {@link VkGeometryNV VkGeometryNV} const * pGeometries;
  * }</code></pre>
  */
 public class VkAccelerationStructureInfoNV extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBindImageMemoryDeviceGroupInfo.java
Patch:
@@ -75,7 +75,7 @@
  *     uint32_t deviceIndexCount;
  *     uint32_t const * pDeviceIndices;
  *     uint32_t splitInstanceBindRegionCount;
- *     {@link VkRect2D VkRect2D const} * pSplitInstanceBindRegions;
+ *     {@link VkRect2D VkRect2D} const * pSplitInstanceBindRegions;
  * }</code></pre>
  */
 public class VkBindImageMemoryDeviceGroupInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBindImageMemoryDeviceGroupInfoKHR.java
Patch:
@@ -28,7 +28,7 @@
  *     uint32_t deviceIndexCount;
  *     uint32_t const * pDeviceIndices;
  *     uint32_t splitInstanceBindRegionCount;
- *     {@link VkRect2D VkRect2D const} * pSplitInstanceBindRegions;
+ *     {@link VkRect2D VkRect2D} const * pSplitInstanceBindRegions;
  * }</code></pre>
  */
 public class VkBindImageMemoryDeviceGroupInfoKHR extends VkBindImageMemoryDeviceGroupInfo {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkBindSparseInfo.java
Patch:
@@ -62,11 +62,11 @@
  *     uint32_t waitSemaphoreCount;
  *     VkSemaphore const * pWaitSemaphores;
  *     uint32_t bufferBindCount;
- *     {@link VkSparseBufferMemoryBindInfo VkSparseBufferMemoryBindInfo const} * pBufferBinds;
+ *     {@link VkSparseBufferMemoryBindInfo VkSparseBufferMemoryBindInfo} const * pBufferBinds;
  *     uint32_t imageOpaqueBindCount;
- *     {@link VkSparseImageOpaqueMemoryBindInfo VkSparseImageOpaqueMemoryBindInfo const} * pImageOpaqueBinds;
+ *     {@link VkSparseImageOpaqueMemoryBindInfo VkSparseImageOpaqueMemoryBindInfo} const * pImageOpaqueBinds;
  *     uint32_t imageBindCount;
- *     {@link VkSparseImageMemoryBindInfo VkSparseImageMemoryBindInfo const} * pImageBinds;
+ *     {@link VkSparseImageMemoryBindInfo VkSparseImageMemoryBindInfo} const * pImageBinds;
  *     uint32_t signalSemaphoreCount;
  *     VkSemaphore const * pSignalSemaphores;
  * }</code></pre>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCmdProcessCommandsInfoNVX.java
Patch:
@@ -87,7 +87,7 @@
  *     VkObjectTableNVX objectTable;
  *     VkIndirectCommandsLayoutNVX indirectCommandsLayout;
  *     uint32_t indirectCommandsTokenCount;
- *     {@link VkIndirectCommandsTokenNVX VkIndirectCommandsTokenNVX const} * pIndirectCommandsTokens;
+ *     {@link VkIndirectCommandsTokenNVX VkIndirectCommandsTokenNVX} const * pIndirectCommandsTokens;
  *     uint32_t maxSequencesCount;
  *     VkCommandBuffer targetCommandBuffer;
  *     VkBuffer sequencesCountBuffer;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCoarseSampleOrderCustomNV.java
Patch:
@@ -61,7 +61,7 @@
  *     VkShadingRatePaletteEntryNV shadingRate;
  *     uint32_t sampleCount;
  *     uint32_t sampleLocationCount;
- *     {@link VkCoarseSampleLocationNV VkCoarseSampleLocationNV const} * pSampleLocations;
+ *     {@link VkCoarseSampleLocationNV VkCoarseSampleLocationNV} const * pSampleLocations;
  * }</code></pre>
  */
 public class VkCoarseSampleOrderCustomNV extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkCommandBufferBeginInfo.java
Patch:
@@ -54,7 +54,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     VkCommandBufferUsageFlags flags;
- *     {@link VkCommandBufferInheritanceInfo VkCommandBufferInheritanceInfo const} * pInheritanceInfo;
+ *     {@link VkCommandBufferInheritanceInfo VkCommandBufferInheritanceInfo} const * pInheritanceInfo;
  * }</code></pre>
  */
 public class VkCommandBufferBeginInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDebugUtilsMessengerCallbackDataEXT.java
Patch:
@@ -80,11 +80,11 @@
  *     int32_t messageIdNumber;
  *     char const * pMessage;
  *     uint32_t queueLabelCount;
- *     {@link VkDebugUtilsLabelEXT VkDebugUtilsLabelEXT const} * pQueueLabels;
+ *     {@link VkDebugUtilsLabelEXT VkDebugUtilsLabelEXT} const * pQueueLabels;
  *     uint32_t cmdBufLabelCount;
- *     {@link VkDebugUtilsLabelEXT VkDebugUtilsLabelEXT const} * pCmdBufLabels;
+ *     {@link VkDebugUtilsLabelEXT VkDebugUtilsLabelEXT} const * pCmdBufLabels;
  *     uint32_t objectCount;
- *     {@link VkDebugUtilsObjectNameInfoEXT VkDebugUtilsObjectNameInfoEXT const} * pObjects;
+ *     {@link VkDebugUtilsObjectNameInfoEXT VkDebugUtilsObjectNameInfoEXT} const * pObjects;
  * }</code></pre>
  */
 public class VkDebugUtilsMessengerCallbackDataEXT extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDescriptorPoolCreateInfo.java
Patch:
@@ -71,7 +71,7 @@
  *     VkDescriptorPoolCreateFlags flags;
  *     uint32_t maxSets;
  *     uint32_t poolSizeCount;
- *     {@link VkDescriptorPoolSize VkDescriptorPoolSize const} * pPoolSizes;
+ *     {@link VkDescriptorPoolSize VkDescriptorPoolSize} const * pPoolSizes;
  * }</code></pre>
  */
 public class VkDescriptorPoolCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDescriptorSetLayoutCreateInfo.java
Patch:
@@ -61,7 +61,7 @@
  *     void const * pNext;
  *     VkDescriptorSetLayoutCreateFlags flags;
  *     uint32_t bindingCount;
- *     {@link VkDescriptorSetLayoutBinding VkDescriptorSetLayoutBinding const} * pBindings;
+ *     {@link VkDescriptorSetLayoutBinding VkDescriptorSetLayoutBinding} const * pBindings;
  * }</code></pre>
  */
 public class VkDescriptorSetLayoutCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDescriptorUpdateTemplateCreateInfo.java
Patch:
@@ -68,7 +68,7 @@
  *     void const * pNext;
  *     VkDescriptorUpdateTemplateCreateFlags flags;
  *     uint32_t descriptorUpdateEntryCount;
- *     {@link VkDescriptorUpdateTemplateEntry VkDescriptorUpdateTemplateEntry const} * pDescriptorUpdateEntries;
+ *     {@link VkDescriptorUpdateTemplateEntry VkDescriptorUpdateTemplateEntry} const * pDescriptorUpdateEntries;
  *     VkDescriptorUpdateTemplateType templateType;
  *     VkDescriptorSetLayout descriptorSetLayout;
  *     VkPipelineBindPoint pipelineBindPoint;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDescriptorUpdateTemplateCreateInfoKHR.java
Patch:
@@ -27,7 +27,7 @@
  *     void const * pNext;
  *     VkDescriptorUpdateTemplateCreateFlags flags;
  *     uint32_t descriptorUpdateEntryCount;
- *     {@link VkDescriptorUpdateTemplateEntry VkDescriptorUpdateTemplateEntry const} * pDescriptorUpdateEntries;
+ *     {@link VkDescriptorUpdateTemplateEntry VkDescriptorUpdateTemplateEntry} const * pDescriptorUpdateEntries;
  *     VkDescriptorUpdateTemplateType templateType;
  *     VkDescriptorSetLayout descriptorSetLayout;
  *     VkPipelineBindPoint pipelineBindPoint;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceCreateInfo.java
Patch:
@@ -68,12 +68,12 @@
  *     void const * pNext;
  *     VkDeviceCreateFlags flags;
  *     uint32_t queueCreateInfoCount;
- *     {@link VkDeviceQueueCreateInfo VkDeviceQueueCreateInfo const} * pQueueCreateInfos;
+ *     {@link VkDeviceQueueCreateInfo VkDeviceQueueCreateInfo} const * pQueueCreateInfos;
  *     uint32_t enabledLayerCount;
  *     char const * const * ppEnabledLayerNames;
  *     uint32_t enabledExtensionCount;
  *     char const * const * ppEnabledExtensionNames;
- *     {@link VkPhysicalDeviceFeatures VkPhysicalDeviceFeatures const} * pEnabledFeatures;
+ *     {@link VkPhysicalDeviceFeatures VkPhysicalDeviceFeatures} const * pEnabledFeatures;
  * }</code></pre>
  */
 public class VkDeviceCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceGroupRenderPassBeginInfo.java
Patch:
@@ -65,7 +65,7 @@
  *     void const * pNext;
  *     uint32_t deviceMask;
  *     uint32_t deviceRenderAreaCount;
- *     {@link VkRect2D VkRect2D const} * pDeviceRenderAreas;
+ *     {@link VkRect2D VkRect2D} const * pDeviceRenderAreas;
  * }</code></pre>
  */
 public class VkDeviceGroupRenderPassBeginInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDeviceGroupRenderPassBeginInfoKHR.java
Patch:
@@ -27,7 +27,7 @@
  *     void const * pNext;
  *     uint32_t deviceMask;
  *     uint32_t deviceRenderAreaCount;
- *     {@link VkRect2D VkRect2D const} * pDeviceRenderAreas;
+ *     {@link VkRect2D VkRect2D} const * pDeviceRenderAreas;
  * }</code></pre>
  */
 public class VkDeviceGroupRenderPassBeginInfoKHR extends VkDeviceGroupRenderPassBeginInfo {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkExportFenceWin32HandleInfoKHR.java
Patch:
@@ -65,7 +65,7 @@
  * struct VkExportFenceWin32HandleInfoKHR {
  *     VkStructureType sType;
  *     void const * pNext;
- *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES const} * pAttributes;
+ *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES} const * pAttributes;
  *     DWORD dwAccess;
  *     LPCWSTR name;
  * }</code></pre>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkExportMemoryWin32HandleInfoKHR.java
Patch:
@@ -73,7 +73,7 @@
  * struct VkExportMemoryWin32HandleInfoKHR {
  *     VkStructureType sType;
  *     void const * pNext;
- *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES const} * pAttributes;
+ *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES} const * pAttributes;
  *     DWORD dwAccess;
  *     LPCWSTR name;
  * }</code></pre>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkExportMemoryWin32HandleInfoNV.java
Patch:
@@ -50,7 +50,7 @@
  * struct VkExportMemoryWin32HandleInfoNV {
  *     VkStructureType sType;
  *     void const * pNext;
- *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES const} * pAttributes;
+ *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES} const * pAttributes;
  *     DWORD dwAccess;
  * }</code></pre>
  */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkExportSemaphoreWin32HandleInfoKHR.java
Patch:
@@ -73,7 +73,7 @@
  * struct VkExportSemaphoreWin32HandleInfoKHR {
  *     VkStructureType sType;
  *     void const * pNext;
- *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES const} * pAttributes;
+ *     {@link SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES} const * pAttributes;
  *     DWORD dwAccess;
  *     LPCWSTR name;
  * }</code></pre>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkImageDrmFormatModifierExplicitCreateInfoEXT.java
Patch:
@@ -64,7 +64,7 @@
  *     void const * pNext;
  *     uint64_t drmFormatModifier;
  *     uint32_t drmFormatModifierPlaneCount;
- *     {@link VkSubresourceLayout VkSubresourceLayout const} * pPlaneLayouts;
+ *     {@link VkSubresourceLayout VkSubresourceLayout} const * pPlaneLayouts;
  * }</code></pre>
  */
 public class VkImageDrmFormatModifierExplicitCreateInfoEXT extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkIndirectCommandsLayoutCreateInfoNVX.java
Patch:
@@ -87,7 +87,7 @@
  *     VkPipelineBindPoint pipelineBindPoint;
  *     VkIndirectCommandsLayoutUsageFlagsNVX flags;
  *     uint32_t tokenCount;
- *     {@link VkIndirectCommandsLayoutTokenNVX VkIndirectCommandsLayoutTokenNVX const} * pTokens;
+ *     {@link VkIndirectCommandsLayoutTokenNVX VkIndirectCommandsLayoutTokenNVX} const * pTokens;
  * }</code></pre>
  */
 public class VkIndirectCommandsLayoutCreateInfoNVX extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkInstanceCreateInfo.java
Patch:
@@ -55,7 +55,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     VkInstanceCreateFlags flags;
- *     {@link VkApplicationInfo VkApplicationInfo const} * pApplicationInfo;
+ *     {@link VkApplicationInfo VkApplicationInfo} const * pApplicationInfo;
  *     uint32_t enabledLayerCount;
  *     char const * const * ppEnabledLayerNames;
  *     uint32_t enabledExtensionCount;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineColorBlendStateCreateInfo.java
Patch:
@@ -67,7 +67,7 @@
  *     VkBool32 logicOpEnable;
  *     VkLogicOp logicOp;
  *     uint32_t attachmentCount;
- *     {@link VkPipelineColorBlendAttachmentState VkPipelineColorBlendAttachmentState const} * pAttachments;
+ *     {@link VkPipelineColorBlendAttachmentState VkPipelineColorBlendAttachmentState} const * pAttachments;
  *     float blendConstants[4];
  * }</code></pre>
  */

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineDiscardRectangleStateCreateInfoEXT.java
Patch:
@@ -56,7 +56,7 @@
  *     VkPipelineDiscardRectangleStateCreateFlagsEXT flags;
  *     VkDiscardRectangleModeEXT discardRectangleMode;
  *     uint32_t discardRectangleCount;
- *     {@link VkRect2D VkRect2D const} * pDiscardRectangles;
+ *     {@link VkRect2D VkRect2D} const * pDiscardRectangles;
  * }</code></pre>
  */
 public class VkPipelineDiscardRectangleStateCreateInfoEXT extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineLayoutCreateInfo.java
Patch:
@@ -101,7 +101,7 @@
  *     uint32_t setLayoutCount;
  *     VkDescriptorSetLayout const * pSetLayouts;
  *     uint32_t pushConstantRangeCount;
- *     {@link VkPushConstantRange VkPushConstantRange const} * pPushConstantRanges;
+ *     {@link VkPushConstantRange VkPushConstantRange} const * pPushConstantRanges;
  * }</code></pre>
  */
 public class VkPipelineLayoutCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineShaderStageCreateInfo.java
Patch:
@@ -83,7 +83,7 @@
  *     VkShaderStageFlagBits stage;
  *     VkShaderModule module;
  *     char const * pName;
- *     {@link VkSpecializationInfo VkSpecializationInfo const} * pSpecializationInfo;
+ *     {@link VkSpecializationInfo VkSpecializationInfo} const * pSpecializationInfo;
  * }</code></pre>
  */
 public class VkPipelineShaderStageCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineVertexInputDivisorStateCreateInfoEXT.java
Patch:
@@ -47,7 +47,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     uint32_t vertexBindingDivisorCount;
- *     {@link VkVertexInputBindingDivisorDescriptionEXT VkVertexInputBindingDivisorDescriptionEXT const} * pVertexBindingDivisors;
+ *     {@link VkVertexInputBindingDivisorDescriptionEXT VkVertexInputBindingDivisorDescriptionEXT} const * pVertexBindingDivisors;
  * }</code></pre>
  */
 public class VkPipelineVertexInputDivisorStateCreateInfoEXT extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineVertexInputStateCreateInfo.java
Patch:
@@ -63,9 +63,9 @@
  *     void const * pNext;
  *     VkPipelineVertexInputStateCreateFlags flags;
  *     uint32_t vertexBindingDescriptionCount;
- *     {@link VkVertexInputBindingDescription VkVertexInputBindingDescription const} * pVertexBindingDescriptions;
+ *     {@link VkVertexInputBindingDescription VkVertexInputBindingDescription} const * pVertexBindingDescriptions;
  *     uint32_t vertexAttributeDescriptionCount;
- *     {@link VkVertexInputAttributeDescription VkVertexInputAttributeDescription const} * pVertexAttributeDescriptions;
+ *     {@link VkVertexInputAttributeDescription VkVertexInputAttributeDescription} const * pVertexAttributeDescriptions;
  * }</code></pre>
  */
 public class VkPipelineVertexInputStateCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportCoarseSampleOrderStateCreateInfoNV.java
Patch:
@@ -64,7 +64,7 @@
  *     void const * pNext;
  *     VkCoarseSampleOrderTypeNV sampleOrderType;
  *     uint32_t customSampleOrderCount;
- *     {@link VkCoarseSampleOrderCustomNV VkCoarseSampleOrderCustomNV const} * pCustomSampleOrders;
+ *     {@link VkCoarseSampleOrderCustomNV VkCoarseSampleOrderCustomNV} const * pCustomSampleOrders;
  * }</code></pre>
  */
 public class VkPipelineViewportCoarseSampleOrderStateCreateInfoNV extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportExclusiveScissorStateCreateInfoNV.java
Patch:
@@ -58,7 +58,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     uint32_t exclusiveScissorCount;
- *     {@link VkRect2D VkRect2D const} * pExclusiveScissors;
+ *     {@link VkRect2D VkRect2D} const * pExclusiveScissors;
  * }</code></pre>
  */
 public class VkPipelineViewportExclusiveScissorStateCreateInfoNV extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportShadingRateImageStateCreateInfoNV.java
Patch:
@@ -60,7 +60,7 @@
  *     void const * pNext;
  *     VkBool32 shadingRateImageEnable;
  *     uint32_t viewportCount;
- *     {@link VkShadingRatePaletteNV VkShadingRatePaletteNV const} * pShadingRatePalettes;
+ *     {@link VkShadingRatePaletteNV VkShadingRatePaletteNV} const * pShadingRatePalettes;
  * }</code></pre>
  */
 public class VkPipelineViewportShadingRateImageStateCreateInfoNV extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportStateCreateInfo.java
Patch:
@@ -64,9 +64,9 @@
  *     void const * pNext;
  *     VkPipelineViewportStateCreateFlags flags;
  *     uint32_t viewportCount;
- *     {@link VkViewport VkViewport const} * pViewports;
+ *     {@link VkViewport VkViewport} const * pViewports;
  *     uint32_t scissorCount;
- *     {@link VkRect2D VkRect2D const} * pScissors;
+ *     {@link VkRect2D VkRect2D} const * pScissors;
  * }</code></pre>
  */
 public class VkPipelineViewportStateCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportSwizzleStateCreateInfoNV.java
Patch:
@@ -56,7 +56,7 @@
  *     void const * pNext;
  *     VkPipelineViewportSwizzleStateCreateFlagsNV flags;
  *     uint32_t viewportCount;
- *     {@link VkViewportSwizzleNV VkViewportSwizzleNV const} * pViewportSwizzles;
+ *     {@link VkViewportSwizzleNV VkViewportSwizzleNV} const * pViewportSwizzles;
  * }</code></pre>
  */
 public class VkPipelineViewportSwizzleStateCreateInfoNV extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPipelineViewportWScalingStateCreateInfoNV.java
Patch:
@@ -47,7 +47,7 @@
  *     void const * pNext;
  *     VkBool32 viewportWScalingEnable;
  *     uint32_t viewportCount;
- *     {@link VkViewportWScalingNV VkViewportWScalingNV const} * pViewportWScalings;
+ *     {@link VkViewportWScalingNV VkViewportWScalingNV} const * pViewportWScalings;
  * }</code></pre>
  */
 public class VkPipelineViewportWScalingStateCreateInfoNV extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPresentRegionKHR.java
Patch:
@@ -40,7 +40,7 @@
  * <pre><code>
  * struct VkPresentRegionKHR {
  *     uint32_t rectangleCount;
- *     {@link VkRectLayerKHR VkRectLayerKHR const} * pRectangles;
+ *     {@link VkRectLayerKHR VkRectLayerKHR} const * pRectangles;
  * }</code></pre>
  */
 public class VkPresentRegionKHR extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPresentRegionsKHR.java
Patch:
@@ -52,7 +52,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     uint32_t swapchainCount;
- *     {@link VkPresentRegionKHR VkPresentRegionKHR const} * pRegions;
+ *     {@link VkPresentRegionKHR VkPresentRegionKHR} const * pRegions;
  * }</code></pre>
  */
 public class VkPresentRegionsKHR extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkPresentTimesInfoGOOGLE.java
Patch:
@@ -52,7 +52,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     uint32_t swapchainCount;
- *     {@link VkPresentTimeGOOGLE VkPresentTimeGOOGLE const} * pTimes;
+ *     {@link VkPresentTimeGOOGLE VkPresentTimeGOOGLE} const * pTimes;
  * }</code></pre>
  */
 public class VkPresentTimesInfoGOOGLE extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRayTracingPipelineCreateInfoNV.java
Patch:
@@ -79,9 +79,9 @@
  *     void const * pNext;
  *     VkPipelineCreateFlags flags;
  *     uint32_t stageCount;
- *     {@link VkPipelineShaderStageCreateInfo VkPipelineShaderStageCreateInfo const} * pStages;
+ *     {@link VkPipelineShaderStageCreateInfo VkPipelineShaderStageCreateInfo} const * pStages;
  *     uint32_t groupCount;
- *     {@link VkRayTracingShaderGroupCreateInfoNV VkRayTracingShaderGroupCreateInfoNV const} * pGroups;
+ *     {@link VkRayTracingShaderGroupCreateInfoNV VkRayTracingShaderGroupCreateInfoNV} const * pGroups;
  *     uint32_t maxRecursionDepth;
  *     VkPipelineLayout layout;
  *     VkPipeline basePipelineHandle;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassBeginInfo.java
Patch:
@@ -75,7 +75,7 @@
  *     VkFramebuffer framebuffer;
  *     {@link VkRect2D VkRect2D} renderArea;
  *     uint32_t clearValueCount;
- *     {@link VkClearValue VkClearValue const} * pClearValues;
+ *     {@link VkClearValue VkClearValue} const * pClearValues;
  * }</code></pre>
  */
 public class VkRenderPassBeginInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassCreateInfo.java
Patch:
@@ -89,11 +89,11 @@
  *     void const * pNext;
  *     VkRenderPassCreateFlags flags;
  *     uint32_t attachmentCount;
- *     {@link VkAttachmentDescription VkAttachmentDescription const} * pAttachments;
+ *     {@link VkAttachmentDescription VkAttachmentDescription} const * pAttachments;
  *     uint32_t subpassCount;
- *     {@link VkSubpassDescription VkSubpassDescription const} * pSubpasses;
+ *     {@link VkSubpassDescription VkSubpassDescription} const * pSubpasses;
  *     uint32_t dependencyCount;
- *     {@link VkSubpassDependency VkSubpassDependency const} * pDependencies;
+ *     {@link VkSubpassDependency VkSubpassDependency} const * pDependencies;
  * }</code></pre>
  */
 public class VkRenderPassCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassCreateInfo2KHR.java
Patch:
@@ -88,11 +88,11 @@
  *     void const * pNext;
  *     VkRenderPassCreateFlags flags;
  *     uint32_t attachmentCount;
- *     {@link VkAttachmentDescription2KHR VkAttachmentDescription2KHR const} * pAttachments;
+ *     {@link VkAttachmentDescription2KHR VkAttachmentDescription2KHR} const * pAttachments;
  *     uint32_t subpassCount;
- *     {@link VkSubpassDescription2KHR VkSubpassDescription2KHR const} * pSubpasses;
+ *     {@link VkSubpassDescription2KHR VkSubpassDescription2KHR} const * pSubpasses;
  *     uint32_t dependencyCount;
- *     {@link VkSubpassDependency2KHR VkSubpassDependency2KHR const} * pDependencies;
+ *     {@link VkSubpassDependency2KHR VkSubpassDependency2KHR} const * pDependencies;
  *     uint32_t correlatedViewMaskCount;
  *     uint32_t const * pCorrelatedViewMasks;
  * }</code></pre>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassInputAttachmentAspectCreateInfo.java
Patch:
@@ -47,7 +47,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     uint32_t aspectReferenceCount;
- *     {@link VkInputAttachmentAspectReference VkInputAttachmentAspectReference const} * pAspectReferences;
+ *     {@link VkInputAttachmentAspectReference VkInputAttachmentAspectReference} const * pAspectReferences;
  * }</code></pre>
  */
 public class VkRenderPassInputAttachmentAspectCreateInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassInputAttachmentAspectCreateInfoKHR.java
Patch:
@@ -26,7 +26,7 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     uint32_t aspectReferenceCount;
- *     {@link VkInputAttachmentAspectReference VkInputAttachmentAspectReference const} * pAspectReferences;
+ *     {@link VkInputAttachmentAspectReference VkInputAttachmentAspectReference} const * pAspectReferences;
  * }</code></pre>
  */
 public class VkRenderPassInputAttachmentAspectCreateInfoKHR extends VkRenderPassInputAttachmentAspectCreateInfo {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkRenderPassSampleLocationsBeginInfoEXT.java
Patch:
@@ -49,9 +49,9 @@
  *     VkStructureType sType;
  *     void const * pNext;
  *     uint32_t attachmentInitialSampleLocationsCount;
- *     {@link VkAttachmentSampleLocationsEXT VkAttachmentSampleLocationsEXT const} * pAttachmentInitialSampleLocations;
+ *     {@link VkAttachmentSampleLocationsEXT VkAttachmentSampleLocationsEXT} const * pAttachmentInitialSampleLocations;
  *     uint32_t postSubpassSampleLocationsCount;
- *     {@link VkSubpassSampleLocationsEXT VkSubpassSampleLocationsEXT const} * pPostSubpassSampleLocations;
+ *     {@link VkSubpassSampleLocationsEXT VkSubpassSampleLocationsEXT} const * pPostSubpassSampleLocations;
  * }</code></pre>
  */
 public class VkRenderPassSampleLocationsBeginInfoEXT extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSampleLocationsInfoEXT.java
Patch:
@@ -66,7 +66,7 @@
  *     VkSampleCountFlagBits sampleLocationsPerPixel;
  *     {@link VkExtent2D VkExtent2D} sampleLocationGridSize;
  *     uint32_t sampleLocationsCount;
- *     {@link VkSampleLocationEXT VkSampleLocationEXT const} * pSampleLocations;
+ *     {@link VkSampleLocationEXT VkSampleLocationEXT} const * pSampleLocations;
  * }</code></pre>
  */
 public class VkSampleLocationsInfoEXT extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSparseBufferMemoryBindInfo.java
Patch:
@@ -45,7 +45,7 @@
  * struct VkSparseBufferMemoryBindInfo {
  *     VkBuffer buffer;
  *     uint32_t bindCount;
- *     {@link VkSparseMemoryBind VkSparseMemoryBind const} * pBinds;
+ *     {@link VkSparseMemoryBind VkSparseMemoryBind} const * pBinds;
  * }</code></pre>
  */
 public class VkSparseBufferMemoryBindInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSparseImageMemoryBindInfo.java
Patch:
@@ -52,7 +52,7 @@
  * struct VkSparseImageMemoryBindInfo {
  *     VkImage image;
  *     uint32_t bindCount;
- *     {@link VkSparseImageMemoryBind VkSparseImageMemoryBind const} * pBinds;
+ *     {@link VkSparseImageMemoryBind VkSparseImageMemoryBind} const * pBinds;
  * }</code></pre>
  */
 public class VkSparseImageMemoryBindInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSparseImageOpaqueMemoryBindInfo.java
Patch:
@@ -51,7 +51,7 @@
  * struct VkSparseImageOpaqueMemoryBindInfo {
  *     VkImage image;
  *     uint32_t bindCount;
- *     {@link VkSparseMemoryBind VkSparseMemoryBind const} * pBinds;
+ *     {@link VkSparseMemoryBind VkSparseMemoryBind} const * pBinds;
  * }</code></pre>
  */
 public class VkSparseImageOpaqueMemoryBindInfo extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSpecializationInfo.java
Patch:
@@ -55,7 +55,7 @@
  * <pre><code>
  * struct VkSpecializationInfo {
  *     uint32_t mapEntryCount;
- *     {@link VkSpecializationMapEntry VkSpecializationMapEntry const} * pMapEntries;
+ *     {@link VkSpecializationMapEntry VkSpecializationMapEntry} const * pMapEntries;
  *     size_t dataSize;
  *     void const * pData;
  * }</code></pre>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkSubpassDescriptionDepthStencilResolveKHR.java
Patch:
@@ -65,7 +65,7 @@
  *     void const * pNext;
  *     VkResolveModeFlagBitsKHR depthResolveMode;
  *     VkResolveModeFlagBitsKHR stencilResolveMode;
- *     {@link VkAttachmentReference2KHR VkAttachmentReference2KHR const} * pDepthStencilResolveAttachment;
+ *     {@link VkAttachmentReference2KHR VkAttachmentReference2KHR} const * pDepthStencilResolveAttachment;
  * }</code></pre>
  */
 public class VkSubpassDescriptionDepthStencilResolveKHR extends Struct implements NativeResource {

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkWriteDescriptorSet.java
Patch:
@@ -110,8 +110,8 @@
  *     uint32_t dstArrayElement;
  *     uint32_t descriptorCount;
  *     VkDescriptorType descriptorType;
- *     {@link VkDescriptorImageInfo VkDescriptorImageInfo const} * pImageInfo;
- *     {@link VkDescriptorBufferInfo VkDescriptorBufferInfo const} * pBufferInfo;
+ *     {@link VkDescriptorImageInfo VkDescriptorImageInfo} const * pImageInfo;
+ *     {@link VkDescriptorBufferInfo VkDescriptorBufferInfo} const * pBufferInfo;
  *     VkBufferView const * pTexelBufferView;
  * }</code></pre>
  */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkTextEdit.java
Patch:
@@ -39,7 +39,7 @@
  * }</code></pre>
  */
 @NativeType("struct nk_text_edit")
-class NkTextEdit extends Struct implements NativeResource {
+public class NkTextEdit extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
@@ -111,7 +111,7 @@ class NkTextEdit extends Struct implements NativeResource {
      *
      * <p>The created instance holds a strong reference to the container object.</p>
      */
-    NkTextEdit(ByteBuffer container) {
+    public NkTextEdit(ByteBuffer container) {
         super(memAddress(container), __checkContainer(container, SIZEOF));
     }
 

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkTextUndoRecord.java
Patch:
@@ -25,7 +25,7 @@
  * }</code></pre>
  */
 @NativeType("struct nk_text_undo_record")
-class NkTextUndoRecord extends Struct {
+public class NkTextUndoRecord extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
@@ -63,7 +63,7 @@ class NkTextUndoRecord extends Struct {
      *
      * <p>The created instance holds a strong reference to the container object.</p>
      */
-    NkTextUndoRecord(ByteBuffer container) {
+    public NkTextUndoRecord(ByteBuffer container) {
         super(memAddress(container), __checkContainer(container, SIZEOF));
     }
 

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkTextUndoState.java
Patch:
@@ -28,7 +28,7 @@
  * }</code></pre>
  */
 @NativeType("struct nk_text_undo_state")
-class NkTextUndoState extends Struct {
+public class NkTextUndoState extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
@@ -72,7 +72,7 @@ class NkTextUndoState extends Struct {
      *
      * <p>The created instance holds a strong reference to the container object.</p>
      */
-    NkTextUndoState(ByteBuffer container) {
+    public NkTextUndoState(ByteBuffer container) {
         super(memAddress(container), __checkContainer(container, SIZEOF));
     }
 

File: modules/lwjgl/llvm/src/generated/java/org/lwjgl/llvm/CXCursorAndRangeVisitor.java
Patch:
@@ -39,8 +39,6 @@ public class CXCursorAndRangeVisitor extends Struct implements NativeResource {
         VISIT;
 
     static {
-        LibLLVM.initialize();
-
         Layout layout = __struct(
             __member(POINTER_SIZE),
             __member(POINTER_SIZE)

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Callback.java
Patch:
@@ -186,11 +186,12 @@ public static <T extends CallbackI> T getSafe(long functionPointer) {
      */
     public static void free(long functionPointer) {
         DeleteGlobalRef(dcbGetUserData(functionPointer));
-        dcbFreeCallback(functionPointer);
 
         if (DEBUG_ALLOCATOR) {
             MemoryManage.DebugAllocator.untrack(functionPointer);
         }
+
+        dcbFreeCallback(functionPointer);
     }
 
     public boolean equals(Object o) {

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AILight.java
Patch:
@@ -27,7 +27,7 @@
  * <li>{@code mName} &ndash; 
  * The name of the light source. There must be a node in the scenegraph with the same name. This node specifies the position of the light in the scene
  * hierarchy and can be animated.</li>
- * <li>{@code mType} &ndash; The type of the light source. {@link Assimp#aiLightSource_UNDEFINED LightSource_UNDEFINED} is not a valid value for this member.</li>
+ * <li>{@code mType} &ndash; The type of the light source. {@link Assimp#aiLightSource_UNDEFINED LightSource_UNDEFINED} is not a valid value for this member. One of:<br><table><tr><td>{@link Assimp#aiLightSource_DIRECTIONAL LightSource_DIRECTIONAL}</td><td>{@link Assimp#aiLightSource_POINT LightSource_POINT}</td><td>{@link Assimp#aiLightSource_SPOT LightSource_SPOT}</td><td>{@link Assimp#aiLightSource_AMBIENT LightSource_AMBIENT}</td></tr><tr><td>{@link Assimp#aiLightSource_AREA LightSource_AREA}</td></tr></table></li>
  * <li>{@code mPosition} &ndash; 
  * Position of the light source in space. Relative to the transformation of the node corresponding to the light. The position is undefined for directional
  * lights.</li>

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRCompositor.java
Patch:
@@ -762,7 +762,7 @@ public static int VRCompositor_SubmitExplicitTimingData() {
     /**
      * Indicates whether or not motion smoothing is enabled by the user settings.
      * 
-     * <p>If you want to know if motion smoothing actually triggered due to a late frame, check {@link Compositor_FrameTiming} {@code m_nReprojectionFlags} &amp;
+     * <p>If you want to know if motion smoothing actually triggered due to a late frame, check {@link CompositorFrameTiming} {@code m_nReprojectionFlags} &amp;
      * {@code VRCompositor_ReprojectionMotion} instead.</p>
      */
     @NativeType("bool")

File: modules/lwjgl/openal/src/generated/java/org/lwjgl/openal/AL11.java
Patch:
@@ -53,7 +53,7 @@ static boolean isAvailable(ALCapabilities caps) {
      * @param value3    the third value
      */
     @NativeType("ALvoid")
-    public static void alListener3i(@NativeType("ALenum") int paramName, @NativeType("ALfloat") float value1, @NativeType("ALfloat") float value2, @NativeType("ALfloat") float value3) {
+    public static void alListener3i(@NativeType("ALenum") int paramName, @NativeType("ALint") int value1, @NativeType("ALint") int value2, @NativeType("ALint") int value3) {
         long __functionAddress = AL.getICD().alListener3i;
         if (CHECKS) {
             check(__functionAddress);

File: modules/lwjgl/opus/src/generated/java/org/lwjgl/util/opus/OpusProjection.java
Patch:
@@ -507,7 +507,6 @@ public static int opus_projection_decoder_ctl(@NativeType("OpusProjectionDecoder
      * Copies the demixing matrix to the supplied pointer location.
      *
      * @param matrix returns the demixing matrix to the supplied pointer location.
-     * @param size   the size in bytes of the reserved memory at the pointer location.
      */
     public static CTLRequest OPUS_PROJECTION_GET_DEMIXING_MATRIX(ByteBuffer matrix) {
         long address = memAddress(matrix);

File: modules/lwjgl/meow/src/generated/java/org/lwjgl/util/meow/MeowHash.java
Patch:
@@ -43,7 +43,7 @@ public class MeowHash extends Struct implements NativeResource {
 
     static {
         Layout layout = __union(
-            __member(MeowU128.SIZEOF, MeowU128.ALIGNOF),
+            __member(MeowU128.SIZEOF, MeowU128.ALIGNOF, true),
             __array(8, 2),
             __array(4, 4)
         );

File: modules/lwjgl/bullet/src/generated/java/org/lwjgl/bullet/PhysicsClient.java
Patch:
@@ -4808,7 +4808,7 @@ public static int b3GetJointState(@NativeType("b3PhysicsClientHandle") long phys
 
     public static native int nb3GetJointStateMultiDof(long physClient, long statusHandle, int jointIndex, long state);
 
-    public static int b3GetJointStateMultiDof(@NativeType("b3PhysicsClientHandle") long physClient, @NativeType("b3SharedMemoryStatusHandle") long statusHandle, int jointIndex, @NativeType("struct b3JointSensorState *") B3JointSensorState state) {
+    public static int b3GetJointStateMultiDof(@NativeType("b3PhysicsClientHandle") long physClient, @NativeType("b3SharedMemoryStatusHandle") long statusHandle, int jointIndex, @NativeType("struct b3JointSensorState2 *") B3JointSensorState2 state) {
         if (CHECKS) {
             check(physClient);
             check(statusHandle);

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVRayTracing.java
Patch:
@@ -287,7 +287,7 @@ public class NVRayTracing {
      * <li>{@link #VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV} disables face culling for this instance.</li>
      * <li>{@link #VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV} indicates that the front face of the triangle for culling purposes should be the face that&#8217;s counter clockwise in object space relative to the ray origin. Because the facing is determined in object space, an instance transform matrix does not changing winding, but a geometry transform does.</li>
      * <li>{@link #VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV} causes this instance to act as though {@link #VK_GEOMETRY_OPAQUE_BIT_NV GEOMETRY_OPAQUE_BIT_NV} were specified on all geometries referenced by this instance. This behavior can be overridden by the ray flag gl_RayFlagsNoOpaqueNV.</li>
-     * <li>{@link #VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV} causes this instance to act as though {@link #VK_GEOMETRY_NO_OPAQUE_BIT_NV GEOMETRY_NO_OPAQUE_BIT_NV} were specified on all geometries referenced by this instance. This behavior can be overridden by the ray flag gl_RayFlagsOpaqueNV.</li>
+     * <li>{@link #VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV} causes this instance to act as though {@link #VK_GEOMETRY_OPAQUE_BIT_NV GEOMETRY_OPAQUE_BIT_NV} were not specified on any geometries referenced by this instance. This behavior can be overridden by the ray flag gl_RayFlagsOpaqueNV.</li>
      * </ul>
      * 
      * <p>{@link #VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV} and {@link #VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV} <b>must</b> not be used in the same flag.</p>
@@ -323,7 +323,7 @@ public class NVRayTracing {
      * 
      * <ul>
      * <li>{@link #VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV} indicates that the specified acceleration structure <b>may</b> be updated with {@code update} of true in {@link #vkCmdBuildAccelerationStructureNV CmdBuildAccelerationStructureNV}. This flag <b>must</b> only be set on a build that is not an update or is an update with a source that also had this flag set.</li>
-     * <li>{@link #VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV} indicates that the specified acceleration structure <b>may</b> act as the source for {@link #vkCmdCopyAccelerationStructureNN CmdCopyAccelerationStructureNN} with {@code mode} of {@link #VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV} to produce a compacted acceleration structure.</li>
+     * <li>{@link #VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV} indicates that the specified acceleration structure <b>may</b> act as the source for {@link #vkCmdCopyAccelerationStructureNV CmdCopyAccelerationStructureNV} with {@code mode} of {@link #VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV} to produce a compacted acceleration structure.</li>
      * <li>{@link #VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV} indicates that the given acceleration structure build should prioritize trace performance over build time.</li>
      * <li>{@link #VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV} indicates that the given acceleration structure build should prioritize build time over trace performance.</li>
      * <li>{@link #VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV} indicates that this acceleration structure should minimize the size of scratch memory and final result build, potentially at the expense of build time or trace performance.</li>
@@ -354,7 +354,7 @@ public class NVRayTracing {
      * 
      * <ul>
      * <li>{@link #VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV} creates a direct copy of the acceleration structure specified in {@code src} into the one specified by {@code dst}. The {@code dst} acceleration structure <b>must</b> have been created with the same parameters as {@code src}.</li>
-     * <li>{@link #VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV} creates a more compact version of an acceleration structure {@code src} into {@code dst}. The acceleration structure {@code dst} <b>must</b> have been created with a {@code compactedSize} corresponding to the one returned by {@code vkCmdWriteAccelerationStructurePropertiesNV} after the build of the acceleration structure specified by {@code src}.</li>
+     * <li>{@link #VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV} creates a more compact version of an acceleration structure {@code src} into {@code dst}. The acceleration structure {@code dst} <b>must</b> have been created with a {@code compactedSize} corresponding to the one returned by {@code vkCmdWriteAccelerationStructuresPropertiesNV} after the build of the acceleration structure specified by {@code src}.</li>
      * </ul>
      * 
      * <h5>See Also</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkAccelerationStructureCreateInfoNV.java
Patch:
@@ -41,7 +41,7 @@
  * <ul>
  * <li>{@code sType} &ndash; the type of this structure.</li>
  * <li>{@code pNext} &ndash; {@code NULL} or a pointer to an extension-specific structure.</li>
- * <li>{@code compactedSize} &ndash; the size from the result of {@link #CmdWriteAccelerationStructurePropertiesNV}, if this acceleration structure is going to be the target of a compacting copy.</li>
+ * <li>{@code compactedSize} &ndash; the size from the result of {@link NVRayTracing#vkCmdWriteAccelerationStructuresPropertiesNV CmdWriteAccelerationStructuresPropertiesNV}, if this acceleration structure is going to be the target of a compacting copy.</li>
  * <li>{@code info} &ndash; contains the {@code VkAccelerationStructureInfoNV} information for the acceleration structure&#8217;s parameters</li>
  * </ul>
  * 

File: modules/samples/src/test/java/org/lwjgl/jmh/HashingTest.java
Patch:
@@ -23,7 +23,7 @@ public class HashingTest {
     private int length;
 
     private ByteBuffer buffer;
-    private MeowHash   hash;
+    private MeowU128   hash;
 
     @Setup
     public void setup() {
@@ -34,7 +34,7 @@ public void setup() {
             buffer.put(i, (byte)(rand.nextInt() & 0xFF));
         }
 
-        hash = MeowHash.create(nmemAlignedAlloc(16, MeowHash.SIZEOF));
+        hash = MeowU128.create(nmemAlignedAlloc(MeowU128.ALIGNOF, MeowU128.SIZEOF));
 
         assertEquals(xxhashJava(), xxhash());
     }
@@ -74,7 +74,7 @@ public long java() {
 
     @Benchmark
     public long meow() {
-        return MeowHash1(7, buffer, hash).u64(0);
+        return MeowU64From(MeowHash1(7, buffer, hash));
     }
 
     @Benchmark

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRCompositor.java
Patch:
@@ -345,7 +345,7 @@ public static int nVRCompositor_SetSkyboxOverride(long pTextures, int unTextureC
      * a lat-long stereo pair.</p>
      */
     @NativeType("EVRCompositorError")
-    public static int VRCompositor_SetSkyboxOverride(@NativeType("Texture_t *") Texture.Buffer pTextures) {
+    public static int VRCompositor_SetSkyboxOverride(@NativeType("Texture_t const *") Texture.Buffer pTextures) {
         return nVRCompositor_SetSkyboxOverride(pTextures.address(), pTextures.remaining());
     }
 

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRDriverManager.java
Patch:
@@ -80,7 +80,7 @@ public static long nVRDriverManager_GetDriverHandle(long pchDriverName) {
      * @param pchDriverName the driver name
      */
     @NativeType("DriverHandle_t")
-    public static long VRDriverManager_GetDriverHandle(@NativeType("char *") ByteBuffer pchDriverName) {
+    public static long VRDriverManager_GetDriverHandle(@NativeType("char const *") ByteBuffer pchDriverName) {
         if (CHECKS) {
             checkNT1(pchDriverName);
         }
@@ -93,7 +93,7 @@ public static long VRDriverManager_GetDriverHandle(@NativeType("char *") ByteBuf
      * @param pchDriverName the driver name
      */
     @NativeType("DriverHandle_t")
-    public static long VRDriverManager_GetDriverHandle(@NativeType("char *") CharSequence pchDriverName) {
+    public static long VRDriverManager_GetDriverHandle(@NativeType("char const *") CharSequence pchDriverName) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
         try {
             ByteBuffer pchDriverNameEncoded = stack.ASCII(pchDriverName);

File: modules/lwjgl/tinyexr/src/generated/java/org/lwjgl/util/tinyexr/TinyEXR.java
Patch:
@@ -117,9 +117,6 @@ public static int FreeEXRHeader(@NativeType("EXRHeader *") EXRHeader exr_header)
 
     /** Free's internal data of {@link EXRImage} struct */
     public static int FreeEXRImage(@NativeType("EXRImage *") EXRImage exr_image) {
-        if (CHECKS) {
-            EXRImage.validate(exr_image.address());
-        }
         return nFreeEXRImage(exr_image.address());
     }
 

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CU60.java
Patch:
@@ -90,7 +90,6 @@ public static int cuPointerSetAttribute(@NativeType("void const *") ByteBuffer v
     public static int cuStreamAttachMemAsync(@NativeType("CUstream") long hStream, @NativeType("CUdeviceptr") long dptr, @NativeType("size_t") long length, @NativeType("unsigned int") int flags) {
         long __functionAddress = Functions.StreamAttachMemAsync;
         if (CHECKS) {
-            check(hStream);
             check(dptr);
         }
         return callPPPI(__functionAddress, hStream, dptr, length, flags);

File: modules/lwjgl/cuda/src/generated/java/org/lwjgl/cuda/CU90.java
Patch:
@@ -73,7 +73,6 @@ public static int ncuLaunchCooperativeKernel(long f, int gridDimX, int gridDimY,
         long __functionAddress = Functions.LaunchCooperativeKernel;
         if (CHECKS) {
             check(f);
-            check(hStream);
         }
         return callPPPI(__functionAddress, f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams);
     }

File: modules/lwjgl/libdivide/src/generated/java/org/lwjgl/util/libdivide/LibDivide.java
Patch:
@@ -508,7 +508,7 @@ public static LibDivideU32BranchFree libdivide_u32_branchfree_gen(@NativeType("u
         }
 
         __result.magic(magic);
-        __result.more((byte)more);
+        __result.more((byte)(more & LIBDIVIDE_32_SHIFT_MASK));
         return __result;
     }
 
@@ -576,7 +576,7 @@ public static LibDivideU64BranchFree libdivide_u64_branchfree_gen(@NativeType("u
         }
 
         __result.magic(magic);
-        __result.more((byte)more);
+        __result.more((byte)(more & LIBDIVIDE_64_SHIFT_MASK));
         return __result;
     }
 

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerCube.java
Patch:
@@ -57,7 +57,7 @@ public class OVRLayerCube extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __member(OVRQuatf.SIZEOF, OVRQuatf.ALIGNOF),
             __member(POINTER_SIZE)
         );

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerCylinder.java
Patch:
@@ -99,7 +99,7 @@ public class OVRLayerCylinder extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __member(POINTER_SIZE),
             __member(OVRRecti.SIZEOF, OVRRecti.ALIGNOF),
             __member(OVRPosef.SIZEOF, OVRPosef.ALIGNOF),

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerEyeFov.java
Patch:
@@ -70,7 +70,7 @@ public class OVRLayerEyeFov extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __array(POINTER_SIZE, ovrEye_Count),
             __array(OVRRecti.SIZEOF, OVRRecti.ALIGNOF, ovrEye_Count),
             __array(OVRFovPort.SIZEOF, OVRFovPort.ALIGNOF, ovrEye_Count),

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerEyeFovDepth.java
Patch:
@@ -88,7 +88,7 @@ public class OVRLayerEyeFovDepth extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __array(POINTER_SIZE, ovrEye_Count),
             __array(OVRRecti.SIZEOF, OVRRecti.ALIGNOF, ovrEye_Count),
             __array(OVRFovPort.SIZEOF, OVRFovPort.ALIGNOF, ovrEye_Count),

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerEyeFovMultires.java
Patch:
@@ -86,7 +86,7 @@ public class OVRLayerEyeFovMultires extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __array(POINTER_SIZE, ovrEye_Count),
             __array(OVRRecti.SIZEOF, OVRRecti.ALIGNOF, ovrEye_Count),
             __array(OVRFovPort.SIZEOF, OVRFovPort.ALIGNOF, ovrEye_Count),

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerEyeMatrix.java
Patch:
@@ -89,7 +89,7 @@ public class OVRLayerEyeMatrix extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __array(POINTER_SIZE, ovrEye_Count),
             __array(OVRRecti.SIZEOF, OVRRecti.ALIGNOF, ovrEye_Count),
             __array(OVRPosef.SIZEOF, OVRPosef.ALIGNOF, ovrEye_Count),

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerQuad.java
Patch:
@@ -71,7 +71,7 @@ public class OVRLayerQuad extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __member(POINTER_SIZE),
             __member(OVRRecti.SIZEOF, OVRRecti.ALIGNOF),
             __member(OVRPosef.SIZEOF, OVRPosef.ALIGNOF),

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRLayerUnion.java
Patch:
@@ -60,7 +60,7 @@ public class OVRLayerUnion extends Struct implements NativeResource {
 
     static {
         Layout layout = __union(
-            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF),
+            __member(OVRLayerHeader.SIZEOF, OVRLayerHeader.ALIGNOF, true),
             __member(OVRLayerEyeFov.SIZEOF, OVRLayerEyeFov.ALIGNOF),
             __member(OVRLayerEyeFovDepth.SIZEOF, OVRLayerEyeFovDepth.ALIGNOF),
             __member(OVRLayerEyeMatrix.SIZEOF, OVRLayerEyeMatrix.ALIGNOF),

File: modules/lwjgl/ovr/src/generated/java/org/lwjgl/ovr/OVRTextureLayoutDescUnion.java
Patch:
@@ -43,7 +43,7 @@ public class OVRTextureLayoutDescUnion extends Struct implements NativeResource
 
     static {
         Layout layout = __union(
-            __array(OVRTextureLayoutOctilinear.SIZEOF, OVRTextureLayoutOctilinear.ALIGNOF, ovrEye_Count)
+            __array(OVRTextureLayoutOctilinear.SIZEOF, OVRTextureLayoutOctilinear.ALIGNOF, true, ovrEye_Count)
         );
 
         SIZEOF = layout.getSize();

File: modules/lwjgl/opencl/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -57,8 +57,9 @@ public static void create() {
                 CL = Library.loadNative(CL.class, Configuration.OPENCL_LIBRARY_NAME, "OpenCL");
                 break;
             case MACOSX:
-                CL = Configuration.OPENCL_LIBRARY_NAME.get() != null
-                    ? Library.loadNative(CL.class, Configuration.OPENCL_LIBRARY_NAME)
+                String override = Configuration.OPENCL_LIBRARY_NAME.get();
+                CL = override != null
+                    ? Library.loadNative(CL.class, override)
                     : MacOSXLibrary.getWithIdentifier("com.apple.opencl");
                 break;
             default:

File: modules/lwjgl/opengl/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -99,8 +99,9 @@ public static void create() {
                 GL = Library.loadNative(GL.class, Configuration.OPENGL_LIBRARY_NAME, "libGL.so.1", "libGL.so");
                 break;
             case MACOSX:
-                GL = Configuration.OPENGL_LIBRARY_NAME.get() != null
-                    ? Library.loadNative(GL.class, Configuration.OPENGL_LIBRARY_NAME)
+                String override = Configuration.OPENGL_LIBRARY_NAME.get();
+                GL = override != null
+                    ? Library.loadNative(GL.class, override)
                     : MacOSXLibrary.getWithIdentifier("com.apple.opengl");
                 break;
             case WINDOWS:

File: modules/lwjgl/zstd/src/generated/java/org/lwjgl/util/zstd/ZstdX.java
Patch:
@@ -1322,7 +1322,7 @@ public static long ZSTD_compressBegin_usingCDict(@NativeType("ZSTD_CCtx *") long
     public static native long nZSTD_compressBegin_usingCDict_advanced(long cctx, long cdict, long fParams, long pledgedSrcSize);
 
     @NativeType("size_t")
-    public static long ZSTD_compressBegin_usingCDict_advanced(@NativeType("ZSTD_CCtx const *") long cctx, @NativeType("ZSTD_CDict const * const") long cdict, @NativeType("ZSTD_frameParameters const") ZSTDFrameParameters fParams, @NativeType("unsigned long long") long pledgedSrcSize) {
+    public static long ZSTD_compressBegin_usingCDict_advanced(@NativeType("ZSTD_CCtx * const") long cctx, @NativeType("ZSTD_CDict const * const") long cdict, @NativeType("ZSTD_frameParameters const") ZSTDFrameParameters fParams, @NativeType("unsigned long long") long pledgedSrcSize) {
         if (CHECKS) {
             check(cctx);
             check(cdict);

File: modules/lwjgl/xxhash/src/generated/java/org/lwjgl/util/xxhash/XXHash.java
Patch:
@@ -229,7 +229,7 @@ public static int XXH32_hashFromCanonical(@NativeType("XXH32_canonical_t const *
      * @param seed  the seed that can be used to alter the result predictably
      */
     @NativeType("XXH32_hash_t")
-    public static long XXH64(@NativeType("void const *") ByteBuffer input, @NativeType("long long") long seed) {
+    public static long XXH64(@NativeType("void const *") ByteBuffer input, @NativeType("unsigned long long") long seed) {
         return nXXH64(memAddress(input), input.remaining(), seed);
     }
 
@@ -281,7 +281,7 @@ public static void XXH64_copyState(@NativeType("XXH64_state_t *") XXH64State dst
      * @param seed     the seed that can be used to alter the hashing result predictably
      */
     @NativeType("XXH_errorcode")
-    public static int XXH64_reset(@NativeType("XXH64_state_t *") XXH64State statePtr, @NativeType("long long") long seed) {
+    public static int XXH64_reset(@NativeType("XXH64_state_t *") XXH64State statePtr, @NativeType("unsigned long long") long seed) {
         return nXXH64_reset(statePtr.address(), seed);
     }
 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/ObjCRuntime.java
Patch:
@@ -2529,7 +2529,7 @@ public static void nprotocol_getMethodDescription(long p, long aSel, boolean isR
      *                         <p>If the protocol does not contain the specified method, returns an objc_method_description structure with the value {@code {NULL, NULL}}.</p>
      */
     @NativeType("struct objc_method_description")
-    public static ObjCMethodDescription protocol_getMethodDescription(@NativeType("Protocol *") long p, @NativeType("SEL") long aSel, @NativeType("BOOL") boolean isRequiredMethod, @NativeType("BOOL") boolean isInstanceMethod, ObjCMethodDescription __result) {
+    public static ObjCMethodDescription protocol_getMethodDescription(@NativeType("Protocol *") long p, @NativeType("SEL") long aSel, @NativeType("BOOL") boolean isRequiredMethod, @NativeType("BOOL") boolean isInstanceMethod, @NativeType("struct objc_method_description") ObjCMethodDescription __result) {
         nprotocol_getMethodDescription(p, aSel, isRequiredMethod, isInstanceMethod, __result.address());
         return __result;
     }

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRCompositor.java
Patch:
@@ -299,7 +299,7 @@ public static void nVRCompositor_GetCurrentFadeColor(boolean bBackground, long _
 
     /** Get current fade color value. */
     @NativeType("HmdColor_t")
-    public static HmdColor VRCompositor_GetCurrentFadeColor(@NativeType("bool") boolean bBackground, HmdColor __result) {
+    public static HmdColor VRCompositor_GetCurrentFadeColor(@NativeType("bool") boolean bBackground, @NativeType("HmdColor_t") HmdColor __result) {
         nVRCompositor_GetCurrentFadeColor(bBackground, __result.address());
         return __result;
     }

File: modules/lwjgl/stb/src/generated/java/org/lwjgl/stb/STBVorbis.java
Patch:
@@ -119,7 +119,7 @@ protected STBVorbis() {
      * @param f an ogg vorbis file decoder
      */
     @NativeType("stb_vorbis_info")
-    public static STBVorbisInfo stb_vorbis_get_info(@NativeType("stb_vorbis *") long f, STBVorbisInfo __result) {
+    public static STBVorbisInfo stb_vorbis_get_info(@NativeType("stb_vorbis *") long f, @NativeType("stb_vorbis_info") STBVorbisInfo __result) {
         if (CHECKS) {
             check(f);
         }

File: modules/lwjgl/libdivide/src/main/resources/module-info.java
Patch:
@@ -2,7 +2,7 @@
  * Copyright LWJGL. All rights reserved.
  * License terms: https://www.lwjgl.org/license
  */
-module org.lwjgl.lmdb {
+module org.lwjgl.libdivide {
     requires transitive org.lwjgl;
 
     exports org.lwjgl.util.libdivide;

File: modules/lwjgl/core/src/main/resources/module-info.java
Patch:
@@ -3,7 +3,7 @@
  * License terms: https://www.lwjgl.org/license
  */
 module org.lwjgl {
-    requires jdk.unsupported;
+    requires transitive jdk.unsupported;
 
     exports org.lwjgl;
     exports org.lwjgl.system;

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/EXTImageDrmFormatModifier.java
Patch:
@@ -59,7 +59,7 @@
  * 
  * <p>The application creates the image by chaining {@link VkImageDrmFormatModifierListCreateInfoEXT} and {@link VkExternalMemoryImageCreateInfo} onto {@link VkImageCreateInfo}. The protocol and APIs by which the application will share the image with external consumers will likely determine the value of {@link VkExternalMemoryImageCreateInfo}{@code ::handleTypes}. The implementation chooses for the image an optimal <em>modifier</em> from {@link VkImageDrmFormatModifierListCreateInfoEXT}{@code ::pDrmFormatModifiers}. The application then queries the implementation-chosen <em>modifier</em> with {@link #vkGetImageDrmFormatModifierPropertiesEXT GetImageDrmFormatModifierPropertiesEXT}, and queries the memory layout of each plane with {@link VK10#vkGetImageSubresourceLayout GetImageSubresourceLayout}.</p>
  * 
- * <p>The application then allocates the image's memory with {@link VkMemoryAllocateInfo}, adding chained extension structures for external memory; binds it to the image; and exports the memory, for example, with {@link #vkGetMemoryFd GetMemoryFd}.</p>
+ * <p>The application then allocates the image's memory with {@link VkMemoryAllocateInfo}, adding chained extension structures for external memory; binds it to the image; and exports the memory, for example, with {@link KHRExternalMemoryFd#vkGetMemoryFdKHR GetMemoryFdKHR}.</p>
  * 
  * <p>Finally, the application sends the image's creation parameters, its <em>modifier</em>, its per-plane memory layout, and the exported memory handle to the external consumers. The details of how the application transmits this information to external consumers is outside the scope of this specification.</p>
  * </li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkDrmFormatModifierPropertiesEXT.java
Patch:
@@ -24,7 +24,7 @@
  * 
  * <p>An image's <em>memory planecount</em> (as returned by {@code drmFormatModifierPlaneCount}) is distinct from its <em>format planecount</em> (in the sense of <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#features-formats-requiring-sampler-ycbcr-conversion">multi-planar</a> Y'C<sub>B</sub>C<sub>R</sub> formats). In {@code VkImageAspectFlags}, each {@code VK_IMAGE_ASPECT_MEMORY_PLANE___i___BIT_EXT} represents a <em>memory plane</em> and each {@code VK_IMAGE_ASPECT_PLANE___i___BIT} a <em>format plane</em>.</p>
  * 
- * <p>An image's set of <em>format planes</em> is an ordered partition of the image's <b>content</b> into separable groups of format channels. The ordered partition is encoded in the name of each {@code VkFormat}. For example, {@link VK11#VK_FORMAT_G8_B8R8_2PLANE_420_UNORM FORMAT_G8_B8R8_2PLANE_420_UNORM} contains two <em>format planes</em>; the first plane contains the green channel and the second plane contains the blue channel and red channel. If the format name does not contain {@code PLANE}, then the format contains a single plane; for example, {@link VK10#VK_FORMAT_R8G8B8A8_UNORM FORMAT_R8G8B8A8_UNORM}. Some commands, such as {@link #CmdBufferToImage}, do not operate on all format channels in the image, but instead operate only on the <em>format planes</em> explicitly chosen by the application and operate on each <em>format plane</em> independently.</p>
+ * <p>An image's set of <em>format planes</em> is an ordered partition of the image's <b>content</b> into separable groups of format channels. The ordered partition is encoded in the name of each {@code VkFormat}. For example, {@link VK11#VK_FORMAT_G8_B8R8_2PLANE_420_UNORM FORMAT_G8_B8R8_2PLANE_420_UNORM} contains two <em>format planes</em>; the first plane contains the green channel and the second plane contains the blue channel and red channel. If the format name does not contain {@code PLANE}, then the format contains a single plane; for example, {@link VK10#VK_FORMAT_R8G8B8A8_UNORM FORMAT_R8G8B8A8_UNORM}. Some commands, such as {@link VK10#vkCmdCopyBufferToImage CmdCopyBufferToImage}, do not operate on all format channels in the image, but instead operate only on the <em>format planes</em> explicitly chosen by the application and operate on each <em>format plane</em> independently.</p>
  * 
  * <p>An image's set of <em>memory planes</em> is an ordered partition of the image's <b>memory</b> rather than the image's <b>content</b>. Each <em>memory plane</em> is a contiguous range of memory. The union of an image's <em>memory planes</em> is not necessarily contiguous.</p>
  * 

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4.java
Patch:
@@ -15,16 +15,16 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * Native bindings to <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>, a lossless compression algorithm, providing compression speed > 500 MB/s per core,
+ * Native bindings to <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>, a lossless compression algorithm, providing compression speed &gt; 500 MB/s per core,
  * scalable with multi-cores CPU. It features an extremely fast decoder, with speed in multiple GB/s per core, typically reaching RAM speed limits on
  * multi-core systems.
  * 
  * <p>Speed can be tuned dynamically, selecting an "acceleration" factor which trades compression ratio for faster speed. On the other end, a high
  * compression derivative, {@code LZ4_HC}, is also provided, trading CPU time for improved compression ratio. All versions feature the same decompression
  * speed.</p>
  * 
- * <p>LZ4 is also compatible with <a target="_blank" href="https://github.com/facebook/{@link zstd#the}-case-for-small-data-compression">dictionary compression</a>, and can ingest
- * any input file as dictionary, including those created by <a target="_blank" href="https://github.com/facebook/zstd/blob/v1.3.5/programs/zstd.1.{@link md#dictionary}-builder">Zstandard Dictionary Builder</a>. (note: only the final 64KB are used).</p>
+ * <p>LZ4 is also compatible with <a target="_blank" href="https://github.com/facebook/zstd#the-case-for-small-data-compression">dictionary compression</a>, and can ingest
+ * any input file as dictionary, including those created by <a target="_blank" href="https://github.com/facebook/zstd/blob/v1.3.5/programs/zstd.1.md#dictionary-builder">Zstandard Dictionary Builder</a>. (note: only the final 64KB are used).</p>
  * 
  * <p>The raw LZ4 block compression format is detailed within <a href="https://github.com/lz4/lz4/blob/dev/doc/lz4_Block_format.md">lz4_Block_format</a>.</p>
  * 

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/package-info.java
Patch:
@@ -5,7 +5,7 @@
  */
 
 /**
- * Contains bindings to <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>, a lossless compression algorithm, providing compression speed > 500 MB/s per core,
+ * Contains bindings to <a target="_blank" href="http://lz4.github.io/lz4/">LZ4</a>, a lossless compression algorithm, providing compression speed &gt; 500 MB/s per core,
  * scalable with multi-cores CPU. It features an extremely fast decoder, with speed in multiple GB/s per core, typically reaching RAM speed limits on
  * multi-core systems.
  */

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/NVShadingRateImage.java
Patch:
@@ -33,7 +33,7 @@
  * <p>When this extension is advertised by an OpenGL implementation, the implementation must also support the GLSL extension
  * {@code "GL_NV_shading_rate_image"} (documented separately), which provides new built-in variables that allow fragment shaders to determine the
  * effective shading rate used for each fragment. Additionally, the GLSL extension also provides new layout qualifiers allowing the interlock
- * functionality provided by {@link  ARB_fragment_shader_interlock} to guarantee mutual exclusion across an entire fragment when the shading rate specifies
+ * functionality provided by <a target="_blank" href="https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_fragment_shader_interlock.txt">ARB_fragment_shader_interlock</a> to guarantee mutual exclusion across an entire fragment when the shading rate specifies
  * multiple pixels per fragment shader invocation.</p>
  * 
  * <p>Note that this extension requires the use of a framebuffer object; the shading rate image and related state are ignored when rendering to the default

File: modules/lwjgl/stb/src/generated/java/org/lwjgl/stb/STBImage.java
Patch:
@@ -41,7 +41,7 @@
  * <p>Features:</p>
  * 
  * <ul>
- * <li>decode from memory <s>or through FILE (define STBI_NO_STDIO to remove code)</s></li>
+ * <li>decode from memory</li>
  * <li>decode from arbitrary I/O callbacks</li>
  * <li>SIMD acceleration on x86/x64 (SSE2) and ARM (NEON)</li>
  * </ul>

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -949,7 +949,7 @@
  * 
  * <ul>
  * <li><i>{@code vkBindBufferMemory()}: Binding memory to buffer {@code 0xeb8e4} but {@code vkGetBufferMemoryRequirements()} has not been called on that
- * buffer.<i>
+ * buffer.</i>
  * 
  * <p>It happens when {@code VK_KHR_dedicated_allocation} extension is enabled. {@code vkGetBufferMemoryRequirements2KHR} function is used instead, while
  * validation layer seems to be unaware of it.</p></li>

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java
Patch:
@@ -396,7 +396,6 @@ private JNI() {}
     public static native int callPPPPPPPI(long __functionAddress, long param0, long param1, long param2, long param3, int param4, long param5, long param6, long param7);
     public static native int callPJPPPI(long __functionAddress, long param0, long param1, long param2, long param3, long param4);
     public static native int callPPPPPI(long __functionAddress, long param0, long param1, long param2, long param3, long param4);
-    public static native int callPPJPPI(long __functionAddress, long param0, long param1, long param2, long param3, long param4);
     public static native int callPPPPPPPI(long __functionAddress, long param0, long param1, long param2, long param3, long param4, int param5, long param6, long param7);
     public static native int callPJJJJPI(long __functionAddress, long param0, long param1, long param2, long param3, long param4, long param5);
     public static native int callPPPPPPI(long __functionAddress, long param0, long param1, long param2, long param3, long param4, long param5);
@@ -763,6 +762,7 @@ private JNI() {}
     public static native boolean callJPZ(long __functionAddress, long param0, long param1, int param2);
     public static native boolean callJPPZ(long __functionAddress, long param0, long param1, long param2);
     public static native boolean callPPPZ(long __functionAddress, long param0, long param1, long param2);
+    public static native boolean callPPJPPZ(long __functionAddress, long param0, long param1, long param2, long param3, long param4);
     public static native boolean callPPPPPZ(long __functionAddress, long param0, long param1, long param2, long param3, long param4);
     public static native boolean callZ(long __functionAddress, boolean param0);
     public static native boolean callPZ(long __functionAddress, boolean param0, long param1);

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/OpenVR.java
Patch:
@@ -852,7 +852,7 @@ public static final class IVRInput {
             GetSkeletalActionData,
             GetSkeletalBoneData,
             GetSkeletalBoneDataCompressed,
-            UncompressSkeletalActionData,
+            DecompressSkeletalBoneData,
             TriggerHapticVibrationAction,
             GetActionOrigins,
             GetOriginLocalizedName,
@@ -873,7 +873,7 @@ public IVRInput(long tableAddress) {
             GetSkeletalActionData = table.get(8);
             GetSkeletalBoneData = table.get(9);
             GetSkeletalBoneDataCompressed = table.get(10);
-            UncompressSkeletalActionData = table.get(11);
+            DecompressSkeletalBoneData = table.get(11);
             TriggerHapticVibrationAction = table.get(12);
             GetActionOrigins = table.get(13);
             GetOriginLocalizedName = table.get(14);

File: modules/lwjgl/core/src/main/java/org/lwjgl/BufferUtils.java
Patch:
@@ -76,7 +76,7 @@ public static ByteBuffer createByteBuffer(int capacity) {
     }
 
     static int getAllocationSize(int elements, int elementShift) {
-        apiCheckAllocation(elements, apiGetBytes(elements, elementShift), 0x7FFFFFFFL);
+        apiCheckAllocation(elements, apiGetBytes(elements, elementShift), 0x7FFF_FFFFL);
         return elements << elementShift;
     }
 

File: modules/lwjgl/yoga/src/test/java/org/lwjgl/util/yoga/YogaNode.java
Patch:
@@ -454,12 +454,12 @@ static final class YogaValue extends YGValue {
         static final YGValue ZERO      = YGValue.create().set(0, YogaUnit.POINT);
         static final YGValue AUTO      = YGValue.create().set(YogaConstants.UNDEFINED, YogaUnit.AUTO);
 
-        YogaValue(long address, @Nullable ByteBuffer container) {
-            super(address, container);
+        YogaValue(ByteBuffer container) {
+            super(container);
         }
 
         public static YogaValue create(MemoryStack stack, float value, int unit) {
-            YogaValue v = new YogaValue(stack.nmalloc(ALIGNOF, SIZEOF), null);
+            YogaValue v = wrap(YogaValue.class, stack.nmalloc(ALIGNOF, SIZEOF));
             v.set(value, unit);
             return v;
         }

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVCornerSampledImage.java
Patch:
@@ -10,8 +10,8 @@
  * 
  * <ul>
  * <li>Texels are centered on integer coordinates. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-unnormalized-to-integer">Unnormalized Texel Coordinate Operations</a></li>
- * <li>Normalized coordinates are scaled using <code>coord <b> (dim - 1)</code> rather than <code>coord </b> dim</code>, where dim is the size of one dimension of the image. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-normalized-to-unnormalized">normalized texel coordinate transform</a>.</li>
- * <li>Partial derivatives are scaled using <code>coord <b> (dim - 1)</code> rather than <code>coord </b> dim</code>. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-scale-factor">Scale Factor Operation</a>.</li>
+ * <li>Normalized coordinates are scaled using <code>coord * (dim - 1)</code> rather than <code>coord * dim</code>, where dim is the size of one dimension of the image. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-normalized-to-unnormalized">normalized texel coordinate transform</a>.</li>
+ * <li>Partial derivatives are scaled using <code>coord * (dim - 1)</code> rather than <code>coord * dim</code>. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#textures-scale-factor">Scale Factor Operation</a>.</li>
  * <li>Calculation of the next higher lod size goes according to <code>⌈dim / 2⌉</code> rather than <code>⌊dim / 2⌋</code>. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-image-miplevel-sizing">Image Miplevel Sizing</a>.</li>
  * <li>The minimum level size is 2x2 for 2D images and 2x2x2 for 3D images. See <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#resources-image-miplevel-sizing">Image Miplevel Sizing</a>.</li>
  * </ul>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/NVShadingRateImage.java
Patch:
@@ -113,7 +113,7 @@ public class NVShadingRateImage {
      * 
      * <h5>Description</h5>
      * 
-     * <p>The following table indicates the width and height (in pixels) of each fragment generated using the indicated shading rate, as well as the maximum number of fragment shader invocations launched for each fragment. When processing regions of a primitive that have a shading rate of {@link #VK_SHADING_RATE_PALETTE_ENTRY_NO_PIXELS_NV SHADING_RATE_PALETTE_ENTRY_NO_PIXELS_NV}, no fragments will be generated in that region.</p>
+     * <p>The following table indicates the width and height (in pixels) of each fragment generated using the indicated shading rate, as well as the maximum number of fragment shader invocations launched for each fragment. When processing regions of a primitive that have a shading rate of {@link #VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV}, no fragments will be generated in that region.</p>
      * 
      * <table class="lwjgl">
      * <thead><tr><th>Shading Rate</th><th>Width</th><th>Height</th><th>Invocations</th></tr></thead>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkGraphicsPipelineCreateInfo.java
Patch:
@@ -37,7 +37,7 @@
  * <li>If {@code flags} contains the {@link VK10#VK_PIPELINE_CREATE_DERIVATIVE_BIT PIPELINE_CREATE_DERIVATIVE_BIT} flag, and {@code basePipelineIndex} is not -1, {@code basePipelineHandle} <b>must</b> be {@link VK10#VK_NULL_HANDLE NULL_HANDLE}</li>
  * <li>If {@code flags} contains the {@link VK10#VK_PIPELINE_CREATE_DERIVATIVE_BIT PIPELINE_CREATE_DERIVATIVE_BIT} flag, and {@code basePipelineHandle} is not {@link VK10#VK_NULL_HANDLE NULL_HANDLE}, {@code basePipelineIndex} <b>must</b> be -1</li>
  * <li>The {@code stage} member of each element of {@code pStages} <b>must</b> be unique</li>
- * <li>The geometric shader stages provided in {@code pStages} <b>must</b> be either from the mesh shading pipeline ({@code stage} is {@link NVMeshShader#VK_SHADER_STAGE_TASK_BIT_NV SHADER_STAGE_TASK_BIT_NV} or {@link NVMeshShader#VK_SHADER_STAGE_MESH_BIT_NV SHADER_STAGE_MESH_BIT_NV}) or from the primitive shading pipeline ({@code stage} is {@link VK10#VK_SHADER_STAGE_VERTEX_BIT SHADER_STAGE_VERTEX_BIT}, {@link VK10#VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT SHADER_STAGE_TESSELLATION_CONTROL_BIT}, {@link VK10#VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT SHADER_STAGE_TESSELLATION_EVALUATION_BIT}, or {@link #SHADER_STAGE_GEOEMETRY_BIT}).</li>
+ * <li>The geometric shader stages provided in {@code pStages} <b>must</b> be either from the mesh shading pipeline ({@code stage} is {@link NVMeshShader#VK_SHADER_STAGE_TASK_BIT_NV SHADER_STAGE_TASK_BIT_NV} or {@link NVMeshShader#VK_SHADER_STAGE_MESH_BIT_NV SHADER_STAGE_MESH_BIT_NV}) or from the primitive shading pipeline ({@code stage} is {@link VK10#VK_SHADER_STAGE_VERTEX_BIT SHADER_STAGE_VERTEX_BIT}, {@link VK10#VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT SHADER_STAGE_TESSELLATION_CONTROL_BIT}, {@link VK10#VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT SHADER_STAGE_TESSELLATION_EVALUATION_BIT}, or {@link VK10#VK_SHADER_STAGE_GEOMETRY_BIT SHADER_STAGE_GEOMETRY_BIT}).</li>
  * <li>The {@code stage} member of one element of {@code pStages} <b>must</b> be either {@link VK10#VK_SHADER_STAGE_VERTEX_BIT SHADER_STAGE_VERTEX_BIT} or {@link NVMeshShader#VK_SHADER_STAGE_MESH_BIT_NV SHADER_STAGE_MESH_BIT_NV}.</li>
  * <li>The {@code stage} member of each element of {@code pStages} <b>must</b> not be {@link VK10#VK_SHADER_STAGE_COMPUTE_BIT SHADER_STAGE_COMPUTE_BIT}</li>
  * <li>If {@code pStages} includes a tessellation control shader stage, it <b>must</b> include a tessellation evaluation shader stage</li>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VkWriteDescriptorSet.java
Patch:
@@ -26,7 +26,7 @@
  * 
  * <div style="margin-left: 26px; border-left: 1px solid gray; padding-left: 14px;"><h5>Note</h5>
  * 
- * <p>The same behavior applies to bindings with a descriptor type of {@link #DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK} where {@code descriptorCount} specifies the number of bytes to update while {@code dstArrayElement} specifies the starting byte offset, thus in this case if the {@code dstBinding} has a smaller byte size than the sum of {@code dstArrayElement} and {@code descriptorCount}, then the remainder will be used to update the subsequent binding - <code>dstBinding+1</code> starting at offset zero. This falls out as a special case of the above rule.</p>
+ * <p>The same behavior applies to bindings with a descriptor type of {@link EXTInlineUniformBlock#VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT} where {@code descriptorCount} specifies the number of bytes to update while {@code dstArrayElement} specifies the starting byte offset, thus in this case if the {@code dstBinding} has a smaller byte size than the sum of {@code dstArrayElement} and {@code descriptorCount}, then the remainder will be used to update the subsequent binding - <code>dstBinding+1</code> starting at offset zero. This falls out as a special case of the above rule.</p>
  * </div>
  * 
  * <h5>Valid Usage</h5>

File: modules/lwjgl/vulkan/src/generated/java/org/lwjgl/vulkan/VK10.java
Patch:
@@ -4310,7 +4310,7 @@ public static int vkQueueSubmit(VkQueue queue, @Nullable @NativeType("VkSubmitIn
      * @param fence an optional: handle to a fence to be signaled once all submitted command buffers have completed execution. If {@code fence} is not {@link #VK_NULL_HANDLE NULL_HANDLE}, it defines a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-signaling">fence signal operation</a>.
      */
     @NativeType("VkResult")
-    public static int vkQueueSubmit(VkQueue queue, @Nullable @NativeType("VkSubmitInfo const *") VkSubmitInfo pSubmit, @NativeType("VkFence") long fence) {
+    public static int vkQueueSubmit(VkQueue queue, @NativeType("VkSubmitInfo const *") VkSubmitInfo pSubmit, @NativeType("VkFence") long fence) {
         return nvkQueueSubmit(queue, 1, pSubmit.address(), fence);
     }
 
@@ -5617,7 +5617,7 @@ public static int vkQueueBindSparse(VkQueue queue, @Nullable @NativeType("VkBind
      * @param fence     an optional: handle to a fence to be signaled. If {@code fence} is not {@link #VK_NULL_HANDLE NULL_HANDLE}, it defines a <a target="_blank" href="https://www.khronos.org/registry/vulkan/specs/1.0-extensions/html/vkspec.html#synchronization-fences-signaling">fence signal operation</a>.
      */
     @NativeType("VkResult")
-    public static int vkQueueBindSparse(VkQueue queue, @Nullable @NativeType("VkBindSparseInfo const *") VkBindSparseInfo pBindInfo, @NativeType("VkFence") long fence) {
+    public static int vkQueueBindSparse(VkQueue queue, @NativeType("VkBindSparseInfo const *") VkBindSparseInfo pBindInfo, @NativeType("VkFence") long fence) {
         return nvkQueueBindSparse(queue, 1, pBindInfo.address(), fence);
     }
 

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -443,7 +443,7 @@ public class GLFW {
         GLFW_MAXIMIZED               = 0x20008,
         GLFW_CENTER_CURSOR           = 0x20009,
         GLFW_TRANSPARENT_FRAMEBUFFER = 0x2000A,
-        GLFW_HOVERED                 = 0x2000A,
+        GLFW_HOVERED                 = 0x2000B,
         GLFW_FOCUS_ON_SHOW           = 0x2000C;
 
     /** Input options. */

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRCompositor.java
Patch:
@@ -71,8 +71,8 @@ public static int nVRCompositor_WaitGetPoses(long pRenderPoseArray, int unRender
      * start rendering.
      */
     @NativeType("EVRCompositorError")
-    public static int VRCompositor_WaitGetPoses(@NativeType("TrackedDevicePose_t *") TrackedDevicePose.Buffer pRenderPoseArray, @NativeType("TrackedDevicePose_t *") TrackedDevicePose.Buffer pGamePoseArray) {
-        return nVRCompositor_WaitGetPoses(pRenderPoseArray.address(), pRenderPoseArray.remaining(), pGamePoseArray.address(), pGamePoseArray.remaining());
+    public static int VRCompositor_WaitGetPoses(@NativeType("TrackedDevicePose_t *") TrackedDevicePose.Buffer pRenderPoseArray, @Nullable @NativeType("TrackedDevicePose_t *") TrackedDevicePose.Buffer pGamePoseArray) {
+        return nVRCompositor_WaitGetPoses(pRenderPoseArray.address(), pRenderPoseArray.remaining(), memAddressSafe(pGamePoseArray), remainingSafe(pGamePoseArray));
     }
 
     // --- [ VRCompositor_GetLastPoses ] ---

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/MemoryAccessJNI.java
Patch:
@@ -8,7 +8,7 @@
 import static org.lwjgl.system.Checks.*;
 
 /** Memory access utilities. */
-class MemoryAccessJNI {
+final class MemoryAccessJNI {
 
     static { Library.initialize(); }
 

File: modules/lwjgl/core/src/main/java/org/lwjgl/Version.java
Patch:
@@ -45,7 +45,7 @@ public enum BuildType {
         /** Feature complete, stable, official release. */
         STABLE("");
 
-        final String postfix;
+        public final String postfix;
 
         BuildType(String postfix) {
             this.postfix = postfix;

File: modules/lwjgl/odbc/src/generated/java/org/lwjgl/odbc/SQL.java
Patch:
@@ -2442,9 +2442,6 @@ public static short SQLGetConnectAttr(@NativeType("SQLHDBC") long ConnectionHand
      */
     public static short nSQLSetEnvAttr(long EnvironmentHandle, int Attribute, long Value, int StringLength) {
         long __functionAddress = Functions.SetEnvAttr;
-        if (CHECKS) {
-            check(EnvironmentHandle);
-        }
         return callPPS(__functionAddress, EnvironmentHandle, Attribute, Value, StringLength);
     }
 

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryTextDecoding.java
Patch:
@@ -123,7 +123,7 @@ static String decodeUTF16(ByteBuffer buffer, int length, int offset) {
             return "";
         }
 
-        return memCharBuffer(memAddress(buffer) + offset, length).toString();
+        return memCharBuffer(memAddress0(buffer) + offset, length).toString();
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/core/src/main/java9/org/lwjgl/system/MemoryTextDecoding.java
Patch:
@@ -28,7 +28,7 @@ static String decodeASCII(ByteBuffer buffer, int length, int offset) {
         }
 
         byte[] bytes = new byte[length];
-        memByteBuffer(memAddress(buffer) + offset, length).get(bytes);
+        memByteBuffer(memAddress0(buffer) + offset, length).get(bytes);
         return new String(bytes, StandardCharsets.ISO_8859_1);
     }
 
@@ -41,7 +41,7 @@ static String decodeUTF8(ByteBuffer buffer, int length, int offset) {
         }
 
         byte[] bytes = new byte[length];
-        memByteBuffer(memAddress(buffer) + offset, length).get(bytes);
+        memByteBuffer(memAddress0(buffer) + offset, length).get(bytes);
         return new String(bytes, StandardCharsets.UTF_8);
     }
 
@@ -53,7 +53,7 @@ static String decodeUTF16(ByteBuffer buffer, int length, int offset) {
             return "";
         }
 
-        return memCharBuffer(memAddress(buffer) + offset, length).toString();
+        return memCharBuffer(memAddress0(buffer) + offset, length).toString();
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/Vma.java
Patch:
@@ -998,7 +998,7 @@ public class Vma {
      */
     public static final int VMA_POOL_CREATE_IGNORE_BUFFER_IMAGE_GRANULARITY_BIT = 0x2;
 
-    static { Library.initialize(); }
+    static { LibVma.initialize(); }
 
     protected Vma() {
         throw new UnsupportedOperationException();

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/ThreadLocalUtil.java
Patch:
@@ -161,7 +161,7 @@ public static void setEnv(long capabilities, int index) {
             }
         } else {
             if (env == JNI_NATIVE_INTERFACE) {
-                long newEnv = nmemAlloc(SIZE_OF_JNI_NATIVE_INTERFACE);
+                long newEnv = nmemAllocChecked(SIZE_OF_JNI_NATIVE_INTERFACE);
                 memCopy(env, newEnv, SIZE_OF_JNI_NATIVE_INTERFACE);
                 setThreadJNIEnv(env = newEnv);
             }

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/Assimp.java
Patch:
@@ -2088,7 +2088,7 @@ public static void naiCopyScene(long pIn, long pOut) {
      * const, a modifiable copy is needed.</p>
      *
      * @param pIn  Valid scene to be copied
-     * @param pOut Receives a modifyable copy of the scene. Use {@link #aiFreeScene FreeScene} to delete it again.
+     * @param pOut Receives a modifiable copy of the scene. Use {@link #aiFreeScene FreeScene} to delete it again.
      */
     public static void aiCopyScene(@NativeType("struct aiScene const *") AIScene pIn, @NativeType("struct aiScene **") PointerBuffer pOut) {
         if (CHECKS) {
@@ -2105,6 +2105,7 @@ public static void aiCopyScene(@NativeType("struct aiScene const *") AIScene pIn
      *
      * @param pIn Valid scene to be copied
      */
+    @Nullable
     @NativeType("void")
     public static AIScene aiCopyScene(@NativeType("struct aiScene const *") AIScene pIn) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();

File: modules/lwjgl/stb/src/generated/java/org/lwjgl/stb/STBTruetype.java
Patch:
@@ -1051,6 +1051,7 @@ public static int stbtt_GetCodepointShape(@NativeType("stbtt_fontinfo const *")
      * @param info              an {@link STBTTFontinfo} struct
      * @param unicode_codepoint the unicode codepoint
      */
+    @Nullable
     @NativeType("int")
     public static STBTTVertex.Buffer stbtt_GetCodepointShape(@NativeType("stbtt_fontinfo const *") STBTTFontinfo info, int unicode_codepoint) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();
@@ -1088,6 +1089,7 @@ public static int stbtt_GetGlyphShape(@NativeType("stbtt_fontinfo const *") STBT
      * @param info        an {@link STBTTFontinfo} struct
      * @param glyph_index the unicode codepoint
      */
+    @Nullable
     @NativeType("int")
     public static STBTTVertex.Buffer stbtt_GetGlyphShape(@NativeType("stbtt_fontinfo const *") STBTTFontinfo info, int glyph_index) {
         MemoryStack stack = stackGet(); int stackPointer = stack.getPointer();

File: modules/lwjgl/stb/src/generated/java/org/lwjgl/stb/STBVorbis.java
Patch:
@@ -361,6 +361,7 @@ public static int stb_vorbis_decode_filename(@NativeType("char const *") CharSeq
      *
      * @return the number of samples decoded, or -1 if the file could not be opened or was not an ogg vorbis file
      */
+    @Nullable
     @NativeType("int")
     public static ShortBuffer stb_vorbis_decode_filename(@NativeType("char const *") CharSequence filename, @NativeType("int *") IntBuffer channels, @NativeType("int *") IntBuffer sample_rate) {
         if (CHECKS) {
@@ -411,6 +412,7 @@ public static int stb_vorbis_decode_memory(@NativeType("unsigned char const *")
      * @param channels    returns the number of channels
      * @param sample_rate returns the sample rate
      */
+    @Nullable
     @NativeType("int")
     public static ShortBuffer stb_vorbis_decode_memory(@NativeType("unsigned char const *") ByteBuffer mem, @NativeType("int *") IntBuffer channels, @NativeType("int *") IntBuffer sample_rate) {
         if (CHECKS) {

File: modules/lwjgl/opencl/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -366,7 +366,7 @@ private static String getDeviceInfoStringASCII(long cl_device_id, int param_name
 
     private static void checkCLError(int errcode) {
         if (errcode != CL_SUCCESS) {
-            throw new RuntimeException(String.format("OpenCL error [0x%X]", errcode));
+            throw new RuntimeException(String.format("OpenCL error [%d]", errcode));
         }
     }
 

File: modules/lwjgl/opencl/src/test/java/org/lwjgl/opencl/InfoUtil.java
Patch:
@@ -125,7 +125,7 @@ public static void checkCLError(IntBuffer errcode) {
 
     public static void checkCLError(int errcode) {
         if (errcode != CL_SUCCESS) {
-            throw new RuntimeException(String.format("OpenCL error [0x%X]", errcode));
+            throw new RuntimeException(String.format("OpenCL error [%d]", errcode));
         }
     }
 

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -4401,7 +4401,7 @@ public static double glfwGetTime() {
      * Sets the value of the GLFW timer. It then continues to count up from that value. The value must be a positive finite number less than or equal to
      * 18446744073.0, which is approximately 584.5 years.
      * 
-     * <p>The upper limit of the timer is calculated as <code>floor((2&lt;sup&gt;64&lt;/sup&gt; - 1) / 10&lt;sup&gt;9&lt;/sup&gt;)</code> and is due to implementations storing nanoseconds
+     * <p>The upper limit of the timer is calculated as <code>floor((2<sup>64</sup> - 1) / 10<sup>9</sup>)</code> and is due to implementations storing nanoseconds
      * in 64 bits. The limit may be increased in the future.</p>
      * 
      * <p>This function may be called from any thread. Reading and writing of the internal timer offset is not atomic, so it needs to be externally synchronized

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIAnimMesh.java
Patch:
@@ -43,7 +43,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiAnimMesh {
  *     {@link AIVector3D struct aiVector3D} * mVertices;
  *     {@link AIVector3D struct aiVector3D} * mNormals;
@@ -52,14 +52,15 @@
  *     {@link AIColor4D struct aiColor4D} * mColors[Assimp.AI_MAX_NUMBER_OF_COLOR_SETS];
  *     {@link AIVector3D struct aiVector3D} * mTextureCoords[Assimp.AI_MAX_NUMBER_OF_TEXTURECOORDS];
  *     unsigned int mNumVertices;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiAnimMesh")
 public class AIAnimMesh extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIAnimation.java
Patch:
@@ -35,7 +35,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiAnimation {
  *     {@link AIString struct aiString} mName;
  *     double mDuration;
@@ -44,14 +44,15 @@
  *     {@link AINodeAnim struct aiNodeAnim} ** mChannels;
  *     unsigned int mNumMeshChannels;
  *     {@link AIMeshAnim struct aiMeshAnim} ** mMeshChannels;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiAnimation")
 public class AIAnimation extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIBone.java
Patch:
@@ -39,20 +39,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiBone {
  *     {@link AIString struct aiString} mName;
  *     unsigned int mNumWeights;
  *     {@link AIVertexWeight struct aiVertexWeight} * mWeights;
  *     {@link AIMatrix4x4 struct aiMatrix4x4} mOffsetMatrix;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiBone")
 public class AIBone extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AICamera.java
Patch:
@@ -52,7 +52,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiCamera {
  *     {@link AIString struct aiString} mName;
  *     {@link AIVector3D struct aiVector3D} mPosition;
@@ -62,14 +62,15 @@
  *     float mClipPlaneNear;
  *     float mClipPlaneFar;
  *     float mAspect;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiCamera")
 public class AICamera extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIColor3D.java
Patch:
@@ -26,19 +26,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiColor3D {
  *     float r;
  *     float g;
  *     float b;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiColor3D")
 public class AIColor3D extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIColor4D.java
Patch:
@@ -29,20 +29,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiColor4D {
  *     float r;
  *     float g;
  *     float b;
  *     float a;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiColor4D")
 public class AIColor4D extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIExportDataBlob.java
Patch:
@@ -40,20 +40,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiExportDataBlob {
  *     size_t size;
  *     void * data;
  *     {@link AIString struct aiString} name;
  *     {@link AIExportDataBlob struct aiExportDataBlob} * next;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiExportDataBlob")
 public class AIExportDataBlob extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIExportFormatDesc.java
Patch:
@@ -32,19 +32,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiExportFormatDesc {
  *     char const * id;
  *     char const * description;
  *     char const * fileExtension;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiExportFormatDesc")
 public class AIExportFormatDesc extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFace.java
Patch:
@@ -35,18 +35,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiFace {
  *     unsigned int mNumIndices;
  *     unsigned int * mIndices;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiFace")
 public class AIFace extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFile.java
Patch:
@@ -36,7 +36,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiFile {
  *     {@link AIFileReadProcI aiFileReadProc} ReadProc;
  *     {@link AIFileWriteProcI aiFileWriteProc} WriteProc;
@@ -45,14 +45,15 @@
  *     {@link AIFileSeekI aiFileSeek} SeekProc;
  *     {@link AIFileFlushProcI aiFileFlushProc} FlushProc;
  *     aiUserData UserData;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiFile")
 public class AIFile extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileCloseProc.java
Patch:
@@ -14,11 +14,11 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     struct aiFileIO *pFileIO,
  *     struct aiFile *pFile
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AIFileCloseProc extends Callback implements AIFileCloseProcI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileCloseProcI.java
Patch:
@@ -12,11 +12,11 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     struct aiFileIO *pFileIO,
  *     struct aiFile *pFile
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiFileCloseProc")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileFlushProc.java
Patch:
@@ -14,10 +14,10 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     struct aiFile *pFile
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AIFileFlushProc extends Callback implements AIFileFlushProcI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileFlushProcI.java
Patch:
@@ -12,10 +12,10 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     struct aiFile *pFile
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiFileFlushProc")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileIO.java
Patch:
@@ -30,19 +30,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiFileIO {
  *     {@link AIFileOpenProcI aiFileOpenProc} OpenProc;
  *     {@link AIFileCloseProcI aiFileCloseProc} CloseProc;
  *     aiUserData UserData;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiFileIO")
 public class AIFileIO extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileOpenProc.java
Patch:
@@ -14,12 +14,12 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiFile * (*) (
  *     struct aiFileIO *pFileIO,
  *     char const *fileName,
  *     char const *openMode
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AIFileOpenProc extends Callback implements AIFileOpenProcI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileOpenProcI.java
Patch:
@@ -12,12 +12,12 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiFile * (*) (
  *     struct aiFileIO *pFileIO,
  *     char const *fileName,
  *     char const *openMode
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiFileOpenProc")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileReadProc.java
Patch:
@@ -14,13 +14,13 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * size_t (*) (
  *     struct aiFile *pFile,
  *     char *pBuffer,
  *     size_t size,
  *     size_t count
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AIFileReadProc extends Callback implements AIFileReadProcI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileReadProcI.java
Patch:
@@ -12,13 +12,13 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * size_t (*) (
  *     struct aiFile *pFile,
  *     char *pBuffer,
  *     size_t size,
  *     size_t count
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiFileReadProc")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileSeek.java
Patch:
@@ -14,12 +14,12 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * aiReturn (*) (
  *     struct aiFile *pFile,
  *     size_t offset,
  *     aiOrigin origin
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AIFileSeek extends Callback implements AIFileSeekI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileSeekI.java
Patch:
@@ -12,12 +12,12 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * aiReturn (*) (
  *     struct aiFile *pFile,
  *     size_t offset,
  *     aiOrigin origin
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiFileSeek")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileTellProc.java
Patch:
@@ -14,10 +14,10 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * size_t (*) (
  *     struct aiFile *pFile
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AIFileTellProc extends Callback implements AIFileTellProcI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileTellProcI.java
Patch:
@@ -12,10 +12,10 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * size_t (*) (
  *     struct aiFile *pFile
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiFileTellProc")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileWriteProc.java
Patch:
@@ -14,13 +14,13 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * size_t (*) (
  *     struct aiFile *pFile,
  *     char const *pBuffer,
  *     size_t memB,
  *     size_t count
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AIFileWriteProc extends Callback implements AIFileWriteProcI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIFileWriteProcI.java
Patch:
@@ -12,13 +12,13 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * size_t (*) (
  *     struct aiFile *pFile,
  *     char const *pBuffer,
  *     size_t memB,
  *     size_t count
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiFileWriteProc")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIImporterDesc.java
Patch:
@@ -44,7 +44,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiImporterDesc {
  *     char const * mName;
  *     char const * mAuthor;
@@ -56,14 +56,15 @@
  *     unsigned int mMaxMajor;
  *     unsigned int mMaxMinor;
  *     char const * mFileExtensions;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiImporterDesc")
 public class AIImporterDesc extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AILight.java
Patch:
@@ -71,7 +71,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiLight {
  *     {@link AIString struct aiString} mName;
  *     aiLightSourceType mType;
@@ -87,14 +87,15 @@
  *     float mAngleInnerCone;
  *     float mAngleOuterCone;
  *     {@link AIVector2D struct aiVector2D} mSize;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiLight")
 public class AILight extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AILogStream.java
Patch:
@@ -28,18 +28,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiLogStream {
  *     {@link AILogStreamCallbackI aiLogStreamCallback} callback;
  *     void * user;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiLogStream")
 public class AILogStream extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AILogStreamCallback.java
Patch:
@@ -14,11 +14,11 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     char const *message,
  *     void *user
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class AILogStreamCallback extends Callback implements AILogStreamCallbackI {
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AILogStreamCallbackI.java
Patch:
@@ -12,11 +12,11 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     char const *message,
  *     void *user
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("aiLogStreamCallback")

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMaterial.java
Patch:
@@ -33,19 +33,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMaterial {
  *     {@link AIMaterialProperty struct aiMaterialProperty} ** mProperties;
  *     unsigned int mNumProperties;
  *     unsigned int mNumAllocated;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMaterial")
 public class AIMaterial extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMatrix3x3.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMatrix3x3 {
  *     float a1;
  *     float a2;
@@ -34,14 +34,15 @@
  *     float d1;
  *     float d2;
  *     float d3;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMatrix3x3")
 public class AIMatrix3x3 extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMatrix4x4.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMatrix4x4 {
  *     float a1;
  *     float a2;
@@ -38,14 +38,15 @@
  *     float d2;
  *     float d3;
  *     float d4;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMatrix4x4")
 public class AIMatrix4x4 extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMemoryInfo.java
Patch:
@@ -33,7 +33,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMemoryInfo {
  *     unsigned int textures;
  *     unsigned int materials;
@@ -43,14 +43,15 @@
  *     unsigned int cameras;
  *     unsigned int lights;
  *     unsigned int total;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMemoryInfo")
 public class AIMemoryInfo extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMesh.java
Patch:
@@ -79,7 +79,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMesh {
  *     unsigned int mPrimitiveTypes;
  *     unsigned int mNumVertices;
@@ -98,14 +98,15 @@
  *     {@link AIString struct aiString} mName;
  *     unsigned int mNumAnimMeshes;
  *     {@link AIAnimMesh struct aiAnimMesh} ** mAnimMeshes;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMesh")
 public class AIMesh extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMeshAnim.java
Patch:
@@ -33,19 +33,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMeshAnim {
  *     {@link AIString struct aiString} mName;
  *     unsigned int mNumKeys;
  *     {@link AIMeshKey struct aiMeshKey} * mKeys;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMeshAnim")
 public class AIMeshAnim extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMeshKey.java
Patch:
@@ -29,18 +29,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMeshKey {
  *     double mTime;
  *     unsigned int mValue;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMeshKey")
 public class AIMeshKey extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMetaData.java
Patch:
@@ -27,19 +27,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMetadata {
  *     unsigned int mNumProperties;
  *     {@link AIString struct aiString} * mKeys;
  *     {@link AIMetaDataEntry struct aiMetadataEntry} * mValues;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMetadata")
 public class AIMetaData extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMetaDataEntry.java
Patch:
@@ -19,18 +19,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiMetadataEntry {
  *     aiMetadataType mType;
  *     void * mData;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiMetadataEntry")
 public class AIMetaDataEntry extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AINode.java
Patch:
@@ -37,7 +37,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiNode {
  *     {@link AIString struct aiString} mName;
  *     {@link AIMatrix4x4 struct aiMatrix4x4} mTransformation;
@@ -47,14 +47,15 @@
  *     unsigned int mNumMeshes;
  *     unsigned int * mMeshes;
  *     {@link AIMetaData struct aiMetadata} * mMetadata;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiNode")
 public class AINode extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AINodeAnim.java
Patch:
@@ -55,7 +55,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiNodeAnim {
  *     {@link AIString struct aiString} mNodeName;
  *     unsigned int mNumPositionKeys;
@@ -66,14 +66,15 @@
  *     {@link AIVectorKey struct aiVectorKey} * mScalingKeys;
  *     aiAnimBehaviour mPreState;
  *     aiAnimBehaviour mPostState;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiNodeAnim")
 public class AINodeAnim extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIPropertyStore.java
Patch:
@@ -20,17 +20,18 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiPropertyStore {
  *     char sentinel;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiPropertyStore")
 public class AIPropertyStore extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIQuatKey.java
Patch:
@@ -27,18 +27,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiQuatKey {
  *     double mTime;
  *     {@link AIQuaternion struct aiQuaternion} mValue;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiQuatKey")
 public class AIQuatKey extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIQuaternion.java
Patch:
@@ -29,20 +29,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiQuaternion {
  *     float w;
  *     float x;
  *     float y;
  *     float z;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiQuaternion")
 public class AIQuaternion extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIScene.java
Patch:
@@ -60,7 +60,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiScene {
  *     unsigned int mFlags;
  *     {@link AINode struct aiNode} * mRootNode;
@@ -78,14 +78,15 @@
  *     {@link AICamera struct aiCamera} ** mCameras;
  *     {@link AIMetaData struct aiMetadata} * mMetaData;
  *     char * mPrivate;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiScene")
 public class AIScene extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIString.java
Patch:
@@ -28,18 +28,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiString {
  *     size_t length;
  *     char data[Assimp.MAXLEN];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiString")
 public class AIString extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AITexel.java
Patch:
@@ -27,20 +27,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiTexel {
  *     unsigned char b;
  *     unsigned char g;
  *     unsigned char r;
  *     unsigned char a;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiTexel")
 public class AITexel extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AITexture.java
Patch:
@@ -50,21 +50,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiTexture {
  *     unsigned int mWidth;
  *     unsigned int mHeight;
  *     char achFormatHint[4];
  *     {@link AITexel struct aiTexel} * pcData;
  *     {@link AIString struct aiString} mFilename;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiTexture")
 public class AITexture extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIUVTransform.java
Patch:
@@ -33,19 +33,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiUVTransform {
  *     {@link AIVector2D struct aiVector2D} mTranslation;
  *     {@link AIVector2D struct aiVector2D} mScaling;
  *     float mRotation;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiUVTransform")
 public class AIUVTransform extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIVector2D.java
Patch:
@@ -16,18 +16,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiVector2D {
  *     float x;
  *     float y;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiVector2D")
 public class AIVector2D extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIVector3D.java
Patch:
@@ -18,19 +18,20 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiVector3D {
  *     float x;
  *     float y;
  *     float z;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiVector3D")
 public class AIVector3D extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIVectorKey.java
Patch:
@@ -27,18 +27,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiVectorKey {
  *     double mTime;
  *     {@link AIVector3D struct aiVector3D} mValue;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiVectorKey")
 public class AIVectorKey extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIVertexWeight.java
Patch:
@@ -27,18 +27,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct aiVertexWeight {
  *     unsigned int mVertexId;
  *     float mWeight;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct aiVertexWeight")
 public class AIVertexWeight extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXAllocatorInterface.java
Patch:
@@ -27,17 +27,18 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_allocator_interface_t {
  *     {@link BGFXAllocatorVtbl bgfx_allocator_vtbl_t const} * vtbl;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_allocator_interface_t")
 public class BGFXAllocatorInterface extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXAllocatorVtbl.java
Patch:
@@ -27,17 +27,18 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_allocator_vtbl_t {
  *     void * (*{@link BGFXReallocCallbackI realloc}) (bgfx_allocator_interface_t *_this, void *_ptr, size_t _size, size_t _align, char *_file, uint32_t _line);
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_allocator_vtbl_t")
 public class BGFXAllocatorVtbl extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXAttachment.java
Patch:
@@ -28,19 +28,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_attachment_t {
  *     bgfx_texture_handle_t handle;
  *     uint16_t mip;
  *     uint16_t layer;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_attachment_t")
 public class BGFXAttachment extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCacheReadCallback.java
Patch:
@@ -16,13 +16,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint64_t _id,
  *     void *_data,
  *     uint32_t _size
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXCacheReadCallback extends Callback implements BGFXCacheReadCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCacheReadCallbackI.java
Patch:
@@ -14,13 +14,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint64_t _id,
  *     void *_data,
  *     uint32_t _size
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("bool (*) (bgfx_callback_interface_t *, uint64_t, void *, uint32_t)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCacheReadSizeCallback.java
Patch:
@@ -16,11 +16,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * uint32_t (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint64_t _id
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXCacheReadSizeCallback extends Callback implements BGFXCacheReadSizeCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCacheReadSizeCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * uint32_t (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint64_t _id
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("uint32_t (*) (bgfx_callback_interface_t *, uint64_t)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCacheWriteCallback.java
Patch:
@@ -16,13 +16,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint64_t _id,
  *     void const *_data,
  *     uint32_t _size
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXCacheWriteCallback extends Callback implements BGFXCacheWriteCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCacheWriteCallbackI.java
Patch:
@@ -14,13 +14,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint64_t _id,
  *     void const *_data,
  *     uint32_t _size
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, uint64_t, void const *, uint32_t)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCallbackInterface.java
Patch:
@@ -31,17 +31,18 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_callback_interface_t {
  *     {@link BGFXCallbackVtbl bgfx_callback_vtbl_t const} * vtbl;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_callback_interface_t")
 public class BGFXCallbackInterface extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCallbackVtbl.java
Patch:
@@ -38,7 +38,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_callback_vtbl_t {
  *     void (*{@link BGFXFatalCallbackI fatal}) (bgfx_callback_interface_t *_this, bgfx_fatal_t _code, char *_str);
  *     void (*{@link BGFXTraceVarArgsCallbackI trace_vargs}) (bgfx_callback_interface_t *_this, char const *_filePath, uint16_t _line, char const *_format, va_list _argList);
@@ -52,14 +52,15 @@
  *     void (*{@link BGFXCaptureBeginCallbackI capture_begin}) (bgfx_callback_interface_t *_this, uint32_t _width, uint32_t _height, uint32_t _pitch, bgfx_texture_format_t _format, bool _yflip);
  *     void (*{@link BGFXCaptureEndCallbackI capture_end}) (bgfx_callback_interface_t *_this);
  *     void (*{@link BGFXCaptureFrameCallbackI capture_frame}) (bgfx_callback_interface_t *_this, void const *_data, uint32_t _size);
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_callback_vtbl_t")
 public class BGFXCallbackVtbl extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCaps.java
Patch:
@@ -36,7 +36,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_caps_t {
  *     bgfx_renderer_type_t rendererType;
  *     uint64_t supported;
@@ -48,14 +48,15 @@
  *     {@link BGFXCapsGPU bgfx_caps_gpu_t} gpu[4];
  *     {@link BGFXCapsLimits bgfx_caps_limits_t} limits;
  *     uint16_t formats[BGFX_TEXTURE_FORMAT_COUNT];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_caps_t")
 public class BGFXCaps extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCapsGPU.java
Patch:
@@ -25,18 +25,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_caps_gpu_t {
  *     uint16_t vendorId;
  *     uint16_t deviceId;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_caps_gpu_t")
 public class BGFXCapsGPU extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCapsLimits.java
Patch:
@@ -45,7 +45,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_caps_limits_t {
  *     uint32_t maxDrawCalls;
  *     uint32_t maxBlits;
@@ -69,14 +69,15 @@
  *     uint32_t maxEncoders;
  *     uint32_t transientVbSize;
  *     uint32_t transientIbSize;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_caps_limits_t")
 public class BGFXCapsLimits extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCaptureBeginCallback.java
Patch:
@@ -16,15 +16,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint32_t _width,
  *     uint32_t _height,
  *     uint32_t _pitch,
  *     bgfx_texture_format_t _format,
  *     bool _yflip
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXCaptureBeginCallback extends Callback implements BGFXCaptureBeginCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCaptureBeginCallbackI.java
Patch:
@@ -14,15 +14,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     uint32_t _width,
  *     uint32_t _height,
  *     uint32_t _pitch,
  *     bgfx_texture_format_t _format,
  *     bool _yflip
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, uint32_t, uint32_t, uint32_t, bgfx_texture_format_t, bool)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCaptureEndCallback.java
Patch:
@@ -16,10 +16,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXCaptureEndCallback extends Callback implements BGFXCaptureEndCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCaptureEndCallbackI.java
Patch:
@@ -14,10 +14,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCaptureFrameCallback.java
Patch:
@@ -16,12 +16,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     void const *_data,
  *     uint32_t _size
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXCaptureFrameCallback extends Callback implements BGFXCaptureFrameCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXCaptureFrameCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     void const *_data,
  *     uint32_t _size
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, void const *, uint32_t)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXEncoderStats.java
Patch:
@@ -25,18 +25,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_encoder_stats_t {
  *     int64_t cpuTimeBegin;
  *     int64_t cpuTimeEnd;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_encoder_stats_t")
 public class BGFXEncoderStats extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXFatalCallback.java
Patch:
@@ -19,12 +19,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     bgfx_fatal_t _code,
  *     char *_str
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXFatalCallback extends Callback implements BGFXFatalCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXFatalCallbackI.java
Patch:
@@ -17,12 +17,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     bgfx_fatal_t _code,
  *     char *_str
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, bgfx_fatal_t, char *)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXHmd.java
Patch:
@@ -29,22 +29,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_hmd_t {
  *     {@link BGFXHmdEye bgfx_hmd_eye_t} eye[2];
  *     uint16_t width;
  *     uint16_t height;
  *     uint32_t deviceWidth;
  *     uint32_t deviceHeight;
  *     uint8_t flags;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_hmd_t")
 public class BGFXHmd extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXHmdEye.java
Patch:
@@ -30,22 +30,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_hmd_eye_t {
  *     float rotation[4];
  *     float translation[3];
  *     float fov[4];
  *     float viewOffset[3];
  *     float projection[16];
  *     float pixelsPerTanAngle[2];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_hmd_eye_t")
 public class BGFXHmdEye extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXInit.java
Patch:
@@ -31,7 +31,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_init_t {
  *     bgfx_renderer_type_t type;
  *     uint16_t vendorId;
@@ -40,14 +40,15 @@
  *     {@link BGFXInitLimits bgfx_init_limits_t} limits;
  *     {@link BGFXCallbackInterface bgfx_callback_interface_t} * callback;
  *     {@link BGFXAllocatorInterface bgfx_allocator_interface_t} * allocator;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_init_t")
 public class BGFXInit extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXInitLimits.java
Patch:
@@ -26,19 +26,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_init_limits_t {
  *     uint16_t maxEncoders;
  *     uint32_t transientVbSize;
  *     uint32_t transientIbSize;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_init_limits_t")
 public class BGFXInitLimits extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXInstanceDataBuffer.java
Patch:
@@ -32,22 +32,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_instance_data_buffer_t {
  *     uint8_t * data;
  *     uint32_t size;
  *     uint32_t offset;
  *     uint32_t num;
  *     uint16_t stride;
  *     bgfx_vertex_buffer_handle_t handle;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_instance_data_buffer_t")
 public class BGFXInstanceDataBuffer extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXInternalData.java
Patch:
@@ -25,18 +25,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_internal_data_t {
  *     {@link BGFXCaps bgfx_caps_t} * caps;
  *     void * context;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_internal_data_t")
 public class BGFXInternalData extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXMemory.java
Patch:
@@ -28,18 +28,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_memory_t {
  *     uint8_t * data;
  *     uint32_t size;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_memory_t")
 public class BGFXMemory extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXPlatformData.java
Patch:
@@ -31,22 +31,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_platform_data_t {
  *     void * ndt;
  *     void * nwh;
  *     void * context;
  *     void * backBuffer;
  *     void * backBufferDS;
  *     void * session;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_platform_data_t")
 public class BGFXPlatformData extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXProfilerBegin.java
Patch:
@@ -16,14 +16,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_name,
  *     uint32_t _abgr,
  *     char const *_filePath,
  *     uint16_t _line
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXProfilerBegin extends Callback implements BGFXProfilerBeginI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXProfilerBeginI.java
Patch:
@@ -14,14 +14,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_name,
  *     uint32_t _abgr,
  *     char const *_filePath,
  *     uint16_t _line
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, char const *, uint32_t, char const *, uint16_t)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXProfilerBeginLiteral.java
Patch:
@@ -16,14 +16,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_name,
  *     uint32_t _abgr,
  *     char const *_filePath,
  *     uint16_t _line
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXProfilerBeginLiteral extends Callback implements BGFXProfilerBeginLiteralI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXProfilerBeginLiteralI.java
Patch:
@@ -14,14 +14,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_name,
  *     uint32_t _abgr,
  *     char const *_filePath,
  *     uint16_t _line
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, char const *, uint32_t, char const *, uint16_t)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXProfilerEnd.java
Patch:
@@ -16,10 +16,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXProfilerEnd extends Callback implements BGFXProfilerEndI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXProfilerEndI.java
Patch:
@@ -14,10 +14,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXReallocCallback.java
Patch:
@@ -16,15 +16,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void * (*) (
  *     bgfx_allocator_interface_t *_this,
  *     void *_ptr,
  *     size_t _size,
  *     size_t _align,
  *     char *_file,
  *     uint32_t _line
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXReallocCallback extends Callback implements BGFXReallocCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXReallocCallbackI.java
Patch:
@@ -14,15 +14,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void * (*) (
  *     bgfx_allocator_interface_t *_this,
  *     void *_ptr,
  *     size_t _size,
  *     size_t _align,
  *     char *_file,
  *     uint32_t _line
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void * (*) (bgfx_allocator_interface_t *, void *, size_t, size_t, char *, uint32_t)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXReleaseFunctionCallback.java
Patch:
@@ -16,11 +16,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     void *_ptr,
  *     void *_userData
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXReleaseFunctionCallback extends Callback implements BGFXReleaseFunctionCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXReleaseFunctionCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     void *_ptr,
  *     void *_userData
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("bgfx_release_fn_t")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXResolution.java
Patch:
@@ -28,19 +28,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_resolution_t {
  *     uint32_t width;
  *     uint32_t height;
  *     uint32_t reset;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_resolution_t")
 public class BGFXResolution extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXScreenShotCallback.java
Patch:
@@ -16,7 +16,7 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_filePath,
@@ -26,7 +26,7 @@
  *     void const *_data,
  *     uint32_t _size,
  *     bool _yflip
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXScreenShotCallback extends Callback implements BGFXScreenShotCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXScreenShotCallbackI.java
Patch:
@@ -14,7 +14,7 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_filePath,
@@ -24,7 +24,7 @@
  *     void const *_data,
  *     uint32_t _size,
  *     bool _yflip
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, char const *, uint32_t, uint32_t, uint32_t, void const *, uint32_t, bool)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXStats.java
Patch:
@@ -66,7 +66,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_stats_t {
  *     int64_t cpuTimeFrame;
  *     int64_t cpuTimeBegin;
@@ -106,14 +106,15 @@
  *     {@link BGFXViewStats bgfx_view_stats_t} * viewStats;
  *     uint16_t numEncoder;
  *     {@link BGFXEncoderStats bgfx_encoder_stats_t} * encoderStats;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_stats_t")
 public class BGFXStats extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXTextureInfo.java
Patch:
@@ -34,7 +34,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_texture_info_t {
  *     bgfx_texture_format_t format;
  *     uint32_t storageSize;
@@ -45,14 +45,15 @@
  *     uint8_t numMips;
  *     uint8_t bitsPerPixel;
  *     bool cubeMap;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_texture_info_t")
 public class BGFXTextureInfo extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXTraceVarArgsCallback.java
Patch:
@@ -18,14 +18,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_filePath,
  *     uint16_t _line,
  *     char const *_format,
  *     va_list _argList
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class BGFXTraceVarArgsCallback extends Callback implements BGFXTraceVarArgsCallbackI {
 

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXTraceVarArgsCallbackI.java
Patch:
@@ -16,14 +16,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     bgfx_callback_interface_t *_this,
  *     char const *_filePath,
  *     uint16_t _line,
  *     char const *_format,
  *     va_list _argList
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (bgfx_callback_interface_t *, char const *, uint16_t, char const *, va_list)")

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXTransform.java
Patch:
@@ -27,18 +27,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_transform_t {
  *     float * data;
  *     uint16_t num;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_transform_t")
 public class BGFXTransform extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXTransientIndexBuffer.java
Patch:
@@ -30,20 +30,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_transient_index_buffer_t {
  *     uint8_t * data;
  *     uint32_t size;
  *     bgfx_index_buffer_handle_t handle;
  *     uint32_t startIndex;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_transient_index_buffer_t")
 public class BGFXTransientIndexBuffer extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXTransientVertexBuffer.java
Patch:
@@ -32,22 +32,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_transient_vertex_buffer_t {
  *     uint8_t * data;
  *     uint32_t size;
  *     uint32_t startVertex;
  *     uint16_t stride;
  *     bgfx_vertex_buffer_handle_t handle;
  *     bgfx_vertex_decl_handle_t decl;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_transient_vertex_buffer_t")
 public class BGFXTransientVertexBuffer extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXUniformInfo.java
Patch:
@@ -29,19 +29,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_uniform_info_t {
  *     char name[256];
  *     bgfx_uniform_type_t type;
  *     uint16_t num;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_uniform_info_t")
 public class BGFXUniformInfo extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXVertexDecl.java
Patch:
@@ -30,20 +30,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_vertex_decl_t {
  *     uint32_t hash;
  *     uint16_t stride;
  *     uint16_t offset[BGFX_ATTRIB_COUNT];
  *     uint16_t attributes[BGFX_ATTRIB_COUNT];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_vertex_decl_t")
 public class BGFXVertexDecl extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXViewStats.java
Patch:
@@ -27,20 +27,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct bgfx_view_stats_t {
  *     char name[256];
  *     bgfx_view_id_t view;
  *     int64_t cpuTimeElapsed;
  *     int64_t gpuTimeElapsed;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct bgfx_view_stats_t")
 public class BGFXViewStats extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/dyncall/DynLoad.java
Patch:
@@ -251,7 +251,6 @@ public static int dlSymsCount(@NativeType("DLSyms *") long pSyms) {
      * Returns the symbol name exported by the specified library at the specified index.
      *
      * @param pSyms a {@code DLSyms} object
-     * @param index 
      */
     @Nullable
     @NativeType("char const *")

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/jni/JNINativeMethod.java
Patch:
@@ -19,18 +19,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct JNINativeMethod {
  *     char * name;
  *     char * signature;
  *     void * fnPtr;
- * }</pre></code>
+ * }</code></pre>
  */
 public class JNINativeMethod extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/DynamicLinkLoader.java
Patch:
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;
 
-/** Native bindings to <dlfcn.h>. */
+/** Native bindings to &lt;dlfcn.h&gt;. */
 public class DynamicLinkLoader {
 
     /** The {@code mode} argument to {@link #dlopen} contains one of the following. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/Visual.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct Visual {
  *     void * ext_data;
  *     VisualID visualid;
@@ -30,13 +30,14 @@
  *     unsigned long blue_mask;
  *     int bits_per_rgb;
  *     int map_entries;
- * }</pre></code>
+ * }</code></pre>
  */
 public class Visual extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/XSetWindowAttributes.java
Patch:
@@ -20,7 +20,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct XSetWindowAttributes {
  *     Pixmap background_pixmap;
  *     unsigned long background_pixel;
@@ -37,13 +37,14 @@
  *     Bool override_redirect;
  *     Colormap colormap;
  *     Cursor cursor;
- * }</pre></code>
+ * }</code></pre>
  */
 public class XSetWindowAttributes extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/linux/XVisualInfo.java
Patch:
@@ -21,7 +21,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct XVisualInfo {
  *     {@link Visual Visual} * visual;
  *     VisualID visualid;
@@ -33,13 +33,14 @@
  *     unsigned long blue_mask;
  *     int colormap_size;
  *     int bits_per_rgb;
- * }</pre></code>
+ * }</code></pre>
  */
 public class XVisualInfo extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/DynamicLinkLoader.java
Patch:
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;
 
-/** Native bindings to <dlfcn.h>. */
+/** Native bindings to &lt;dlfcn.h&gt;. */
 public class DynamicLinkLoader {
 
     /** The {@code mode} argument to {@link #dlopen} contains one of the following. */
@@ -210,7 +210,7 @@ public static String dlerror() {
      * <p>The value of handle specifies what images this function searches for to locate the symbol specified by the symbol parameter. The following table
      * describes the possible values for the handle parameter:</p>
      * 
-     * <table class=lwjgl>
+     * <table class=striped>
      * <tr><th>Handle value</th><th>Search scope</th></tr>
      * <tr><td>{@code dlopen} handle</td><td>Image associated with the {@link #dlopen} handle.</td></tr>
      * <tr><td>{@link #RTLD_DEFAULT}</td><td>Every dependent library or {@link #RTLD_GLOBAL}–opened library in the current process, in the order they were loaded.</td></tr>
@@ -238,7 +238,7 @@ public static long dlsym(@NativeType("void *") long handle, @NativeType("char co
      * <p>The value of handle specifies what images this function searches for to locate the symbol specified by the symbol parameter. The following table
      * describes the possible values for the handle parameter:</p>
      * 
-     * <table class=lwjgl>
+     * <table class=striped>
      * <tr><th>Handle value</th><th>Search scope</th></tr>
      * <tr><td>{@code dlopen} handle</td><td>Image associated with the {@link #dlopen} handle.</td></tr>
      * <tr><td>{@link #RTLD_DEFAULT}</td><td>Every dependent library or {@link #RTLD_GLOBAL}–opened library in the current process, in the order they were loaded.</td></tr>

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/EnumerationMutationHandler.java
Patch:
@@ -16,10 +16,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     id id
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class EnumerationMutationHandler extends Callback implements EnumerationMutationHandlerI {
 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/EnumerationMutationHandlerI.java
Patch:
@@ -14,10 +14,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     id id
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("EnumerationMutationHandler")

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/ObjCMethodDescription.java
Patch:
@@ -27,18 +27,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct objc_method_description {
  *     SEL name;
  *     char * types;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct objc_method_description")
 public class ObjCMethodDescription extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/macosx/ObjCPropertyAttribute.java
Patch:
@@ -28,18 +28,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct objc_property_attribute_t {
  *     char * name;
  *     char * value;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct objc_property_attribute_t")
 public class ObjCPropertyAttribute extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/DEVMODE.java
Patch:
@@ -93,7 +93,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct DEVMODE {
  *     TCHAR dmDeviceName[32];
  *     WORD dmSpecVersion;
@@ -141,13 +141,14 @@
  *     DWORD dmReserved2;
  *     DWORD dmPanningWidth;
  *     DWORD dmPanningHeight;
- * }</pre></code>
+ * }</code></pre>
  */
 public class DEVMODE extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/DISPLAY_DEVICE.java
Patch:
@@ -35,21 +35,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct DISPLAY_DEVICE {
  *     DWORD cb;
  *     TCHAR DeviceName[32];
  *     TCHAR DeviceString[128];
  *     DWORD StateFlags;
  *     TCHAR DeviceID[128];
  *     TCHAR DeviceKey[128];
- * }</pre></code>
+ * }</code></pre>
  */
 public class DISPLAY_DEVICE extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/MONITORINFOEX.java
Patch:
@@ -40,20 +40,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct MONITORINFOEX {
  *     DWORD cbSize;
  *     {@link RECT RECT} rcMonitor;
  *     {@link RECT RECT} rcWork;
  *     DWORD dwFlags;
  *     TCHAR szDevice[32];
- * }</pre></code>
+ * }</code></pre>
  */
 public class MONITORINFOEX extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/MSG.java
Patch:
@@ -31,21 +31,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct MSG {
  *     HWND hwnd;
  *     UINT message;
  *     WPARAM wParam;
  *     LPARAM lParam;
  *     DWORD time;
  *     {@link POINT POINT} pt;
- * }</pre></code>
+ * }</code></pre>
  */
 public class MSG extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/PIXELFORMATDESCRIPTOR.java
Patch:
@@ -57,7 +57,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct PIXELFORMATDESCRIPTOR {
  *     WORD nSize;
  *     WORD nVersion;
@@ -85,13 +85,14 @@
  *     DWORD dwLayerMask;
  *     DWORD dwVisibleMask;
  *     DWORD dwDamageMask;
- * }</pre></code>
+ * }</code></pre>
  */
 public class PIXELFORMATDESCRIPTOR extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/POINT.java
Patch:
@@ -27,17 +27,18 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct POINT {
  *     LONG x;
  *     LONG y;
- * }</pre></code>
+ * }</code></pre>
  */
 public class POINT extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/POINTL.java
Patch:
@@ -27,17 +27,18 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct POINTL {
  *     LONG x;
  *     LONG y;
- * }</pre></code>
+ * }</code></pre>
  */
 public class POINTL extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/RECT.java
Patch:
@@ -29,19 +29,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct RECT {
  *     LONG left;
  *     LONG top;
  *     LONG right;
  *     LONG bottom;
- * }</pre></code>
+ * }</code></pre>
  */
 public class RECT extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/SECURITY_ATTRIBUTES.java
Patch:
@@ -35,18 +35,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct SECURITY_ATTRIBUTES {
  *     DWORD nLength;
  *     LPVOID lpSecurityDescriptor;
  *     BOOL bInheritHandle;
- * }</pre></code>
+ * }</code></pre>
  */
 public class SECURITY_ATTRIBUTES extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/TOUCHINPUT.java
Patch:
@@ -49,7 +49,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct TOUCHINPUT {
  *     LONG x;
  *     LONG y;
@@ -61,13 +61,14 @@
  *     ULONG_PTR dwExtraInfo;
  *     DWORD cxContact;
  *     DWORD cyContact;
- * }</pre></code>
+ * }</code></pre>
  */
 public class TOUCHINPUT extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/WINDOWPLACEMENT.java
Patch:
@@ -33,21 +33,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct WINDOWPLACEMENT {
  *     UINT length;
  *     UINT flags;
  *     UINT showCmd;
  *     {@link POINT POINT} ptMinPosition;
  *     {@link POINT POINT} ptMaxPosition;
  *     {@link RECT RECT} rcNormalPosition;
- * }</pre></code>
+ * }</code></pre>
  */
 public class WINDOWPLACEMENT extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/WNDCLASSEX.java
Patch:
@@ -46,7 +46,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct WNDCLASSEX {
  *     UINT cbSize;
  *     UINT style;
@@ -60,13 +60,14 @@
  *     LPCTSTR lpszMenuName;
  *     LPCTSTR lpszClassName;
  *     HICON hIconSm;
- * }</pre></code>
+ * }</code></pre>
  */
 public class WNDCLASSEX extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/WindowProc.java
Patch:
@@ -16,13 +16,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * LRESULT (*) (
  *     HWND hwnd,
  *     UINT uMsg,
  *     WPARAM wParam,
  *     LPARAM lParam
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class WindowProc extends Callback implements WindowProcI {
 

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/windows/WindowProcI.java
Patch:
@@ -14,13 +14,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * LRESULT (*) (
  *     HWND hwnd,
  *     UINT uMsg,
  *     WPARAM wParam,
  *     LPARAM lParam
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("WNDPROC")

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Callback.java
Patch:
@@ -162,7 +162,7 @@ private static long getNativeFunction(char type) {
     }
 
     /**
-     * Converts the specified function pointer to the {@code CallbackI} instance associated with it.</p>
+     * Converts the specified function pointer to the {@code CallbackI} instance associated with it.
      *
      * @param functionPointer a function pointer
      * @param <T>             the {@code CallbackI} instance type

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/CallbackI.java
Patch:
@@ -5,9 +5,9 @@
 package org.lwjgl.system;
 
 /**
- * Base interface for dynamically created native functions that call into Java code. Pointers to such functions can be passed to native APIs as callbacks.
+ * <p>Base interface for dynamically created native functions that call into Java code. Pointers to such functions can be passed to native APIs as callbacks.</p>
  *
- * <p>This interface does not define a callback method, therefore it should not be implemented directly. The following inner interfaces should be used instead:
+ * <p>This interface does not define a callback method, therefore it should not be implemented directly. The following inner interfaces should be used instead:</p>
  * <ul>
  * <li>{@link V}</li>
  * <li>{@link Z}</li>
@@ -18,7 +18,7 @@
  * <li>{@link F}</li>
  * <li>{@link D}</li>
  * <li>{@link P}</li>
- * </ul></p>
+ * </ul>
  */
 public interface CallbackI extends Pointer {
 

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -1937,7 +1937,7 @@ public static String memUTF16Safe(@Nullable ByteBuffer buffer) {
     /**
      * Decodes the bytes with index {@code [position(), position()+(length*2)}) in {@code buffer}, as a UTF-16 string.
      *
-     * <p>The current {@code position} and {@code limit} of the specified {@code buffer} are not affected by this operation.></p>
+     * <p>The current {@code position} and {@code limit} of the specified {@code buffer} are not affected by this operation.</p>
      *
      * @param buffer the {@link ByteBuffer} to decode
      * @param length the number of characters to decode

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/StructBuffer.java
Patch:
@@ -77,7 +77,7 @@ public SELF put(T value) {
      *
      * @return the struct at the specified index
      *
-     * @throws IndexOutOfBoundsException If <tt>index</tt> is negative or not smaller than the buffer's limit
+     * @throws IndexOutOfBoundsException If {@code index} is negative or not smaller than the buffer's limit
      */
     public T get(int index) {
         return nget(check(index, limit));
@@ -94,7 +94,7 @@ private T nget(long index) {
      *
      * @return the struct at the specified index
      *
-     * @throws IndexOutOfBoundsException If <tt>index</tt> is negative or not smaller than the buffer's limit
+     * @throws IndexOutOfBoundsException If {@code index} is negative or not smaller than the buffer's limit
      */
     public SELF get(int index, T value) {
         memCopy(address + check(index, limit) * sizeof(), value.address(), sizeof());
@@ -111,7 +111,7 @@ public SELF get(int index, T value) {
      *
      * @return This buffer
      *
-     * @throws IndexOutOfBoundsException        If <tt>index</tt> is negative or not smaller than the buffer's limit
+     * @throws IndexOutOfBoundsException        If {@code index} is negative or not smaller than the buffer's limit
      * @throws java.nio.ReadOnlyBufferException If this buffer is read-only
      */
     public SELF put(int index, T value) {

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGL12.java
Patch:
@@ -130,9 +130,9 @@ public static boolean eglWaitClient() {
     }
 
     /**
-     * <p><a target="_blank" href="https://www.khronos.org/registry/EGL/sdk/docs/man/html/eglCreatePbufferFromClientBuffer.xhtml">Reference Page</a></p>
-     * 
      * Array version of: {@link #eglCreatePbufferFromClientBuffer CreatePbufferFromClientBuffer}
+     * 
+     * @see <a target="_blank" href="https://www.khronos.org/registry/EGL/sdk/docs/man/html/eglCreatePbufferFromClientBuffer.xhtml">Reference Page</a>
      */
     @NativeType("EGLSurface")
     public static long eglCreatePbufferFromClientBuffer(@NativeType("EGLDisplay") long dpy, @NativeType("EGLenum") int buftype, @NativeType("EGLClientBuffer") long buffer, @NativeType("EGLConfig") long config, @Nullable @NativeType("EGLint const *") int[] attrib_list) {

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLCapabilities.java
Patch:
@@ -207,11 +207,11 @@ public class EGLCapabilities {
      * <p>We suggest that each future extension clearly state its type by including the following toplevel section in its extension specification, preceding the
      * Dependencies section. For client extensions, this suggestion is a requirement.</p>
      * 
-     * <code><pre>
+     * <pre><code>
      *         Extension Type
      * 
      *             &lt;Either "EGL display extension" or "EGL client extension" or
-     *              a future extension type.&gt;</pre></code>
+     *              a future extension type.&gt;</code></pre>
      * 
      * <p>By cleanly separating display extensions from client extensions, EGL_EXT_client_extensions solves a bootstrap problem for future EGL extensions that
      * will modify display initialization. To query for such extensions without EGL_EXT_client_extensions, an EGL client would need to initialize a throw-away

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLClientPixmapHI.java
Patch:
@@ -35,20 +35,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct EGLClientPixmapHI {
  *     void * pData;
  *     EGLint iWidth;
  *     EGLint iHeight;
  *     EGLint iStride;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct EGLClientPixmapHI")
 public class EGLClientPixmapHI extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLDebugMessageKHRCallback.java
Patch:
@@ -16,15 +16,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     EGLenum error,
  *     char const *command,
  *     EGLint messageType,
  *     EGLLabelKHR threadLabel,
  *     EGLLabelKHR objectLabel,
  *     char const *message
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class EGLDebugMessageKHRCallback extends Callback implements EGLDebugMessageKHRCallbackI {
 

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLDebugMessageKHRCallbackI.java
Patch:
@@ -14,15 +14,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     EGLenum error,
  *     char const *command,
  *     EGLint messageType,
  *     EGLLabelKHR threadLabel,
  *     EGLLabelKHR objectLabel,
  *     char const *message
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("EGLDEBUGPROCKHR")

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLGetBlobFuncANDROID.java
Patch:
@@ -16,13 +16,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * EGLsizeiANDROID (*) (
  *     void const *key,
  *     EGLsizeiANDROID keySize,
  *     void *value,
  *     EGLsizeiANDROID valueSize
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class EGLGetBlobFuncANDROID extends Callback implements EGLGetBlobFuncANDROIDI {
 

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLGetBlobFuncANDROIDI.java
Patch:
@@ -14,13 +14,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * EGLsizeiANDROID (*) (
  *     void const *key,
  *     EGLsizeiANDROID keySize,
  *     void *value,
  *     EGLsizeiANDROID valueSize
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("EGLGetBlobFuncANDROID")

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLSetBlobFuncANDROID.java
Patch:
@@ -16,13 +16,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     void const *key,
  *     EGLsizeiANDROID keySize,
  *     void const *value,
  *     EGLsizeiANDROID valueSize
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class EGLSetBlobFuncANDROID extends Callback implements EGLSetBlobFuncANDROIDI {
 

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/EGLSetBlobFuncANDROIDI.java
Patch:
@@ -14,13 +14,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     void const *key,
  *     EGLsizeiANDROID keySize,
  *     void const *value,
  *     EGLsizeiANDROID valueSize
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("EGLSetBlobFuncANDROID")

File: modules/lwjgl/egl/src/generated/java/org/lwjgl/egl/KHRNoConfigContext.java
Patch:
@@ -12,7 +12,7 @@
  * done with respect to an {@code EGLConfig} specifying buffer formats, and constrains contexts to only work with surfaces created with a "compatible"
  * config.</p>
  * 
- * <p>This extension allows creation of GL & ES contexts without specifying an {@code EGLConfig}.</p>
+ * <p>This extension allows creation of GL &amp; ES contexts without specifying an {@code EGLConfig}.</p>
  * 
  * <p>Requires {@link EGL14 EGL 1.4}.</p>
  */

File: modules/lwjgl/egl/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -17,11 +17,12 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /**
- * This class must be used before any EGL function is called. It has the following responsibilities:
+ * <p>This class must be used before any EGL function is called. It has the following responsibilities:</p>
  * <ul>
  * <li>Loads the EGL native library into the JVM process.</li>
  * <li>Creates instances of {@link EGLCapabilities} classes. An {@code EGLCapabilities} instance contains flags for functionality that is available in an
  * EGLDisplay or the EGL client library. Internally, it also contains function pointers that are only valid in that specific EGLDisplay or client library.</li>
+ * </ul>
  *
  * <h3>Library lifecycle</h3>
  * <p>The EGL library is loaded automatically when this class is initialized. Set the {@link Configuration#EGL_EXPLICIT_INIT} option to override this behavior.

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCharCallback.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     unsigned int codepoint
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 2.4
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCharCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     unsigned int codepoint
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 2.4
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCharModsCallback.java
Patch:
@@ -20,12 +20,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     unsigned int codepoint,
  *     int mods
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.1
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCharModsCallbackI.java
Patch:
@@ -16,12 +16,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     unsigned int codepoint,
  *     int mods
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.1
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCursorEnterCallback.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int entered
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCursorEnterCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int entered
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCursorPosCallback.java
Patch:
@@ -18,12 +18,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     double xpos,
  *     double ypos
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWCursorPosCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     double xpos,
  *     double ypos
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWDropCallback.java
Patch:
@@ -18,12 +18,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int count,
  *     char const **names
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.1
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWDropCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int count,
  *     char const **names
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.1
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWErrorCallback.java
Patch:
@@ -21,11 +21,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     int error,
  *     char *description
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWErrorCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     int error,
  *     char *description
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWFramebufferSizeCallback.java
Patch:
@@ -18,12 +18,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int width,
  *     int height
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWFramebufferSizeCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int width,
  *     int height
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWGamepadState.java
Patch:
@@ -28,11 +28,11 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct GLFWgamepadstate {
  *     unsigned char buttons[15];
  *     float axes[6];
- * }</pre></code>
+ * }</code></pre>
  *
  * @since version 3.3
  */
@@ -42,6 +42,7 @@ public class GLFWGamepadState extends Struct implements NativeResource {
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWGammaRamp.java
Patch:
@@ -30,13 +30,13 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct GLFWgammaramp {
  *     unsigned short * red;
  *     unsigned short * green;
  *     unsigned short * blue;
  *     unsigned int size;
- * }</pre></code>
+ * }</code></pre>
  *
  * @since version 3.0
  */
@@ -46,6 +46,7 @@ public class GLFWGammaRamp extends Struct implements NativeResource {
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWImage.java
Patch:
@@ -31,12 +31,12 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct GLFWimage {
  *     int width;
  *     int height;
  *     unsigned char * pixels;
- * }</pre></code>
+ * }</code></pre>
  *
  * @since version 2.1
  */
@@ -46,6 +46,7 @@ public class GLFWImage extends Struct implements NativeResource {
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWJoystickCallback.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     int jid,
  *     int event
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.2
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWJoystickCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     int jid,
  *     int event
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.2
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWKeyCallback.java
Patch:
@@ -18,14 +18,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int key,
  *     int scancode,
  *     int action,
  *     int mods
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class GLFWKeyCallback extends Callback implements GLFWKeyCallbackI {
 

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWKeyCallbackI.java
Patch:
@@ -14,14 +14,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int key,
  *     int scancode,
  *     int action,
  *     int mods
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("GLFWkeyfun")

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWMonitorCallback.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWmonitor *monitor,
  *     int event
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWMonitorCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWmonitor *monitor,
  *     int event
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWMouseButtonCallback.java
Patch:
@@ -18,13 +18,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int button,
  *     int action,
  *     int mods
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class GLFWMouseButtonCallback extends Callback implements GLFWMouseButtonCallbackI {
 

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWMouseButtonCallbackI.java
Patch:
@@ -14,13 +14,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int button,
  *     int action,
  *     int mods
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("GLFWmousebuttonfun")

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWNativeEGL.java
Patch:
@@ -79,8 +79,6 @@ public static long glfwGetEGLContext(@NativeType("GLFWwindow *") long window) {
      * 
      * <p>This function may be called from any thread. Access is not synchronized.</p>
      *
-     * @param window 
-     *
      * @return the {@code EGLSurface} of the specified window, or {@link EGL10#EGL_NO_SURFACE} if an error occurred
      *
      * @since version 3.0

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWScrollCallback.java
Patch:
@@ -18,12 +18,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     double xoffset,
  *     double yoffset
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWScrollCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     double xoffset,
  *     double yoffset
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWVidMode.java
Patch:
@@ -29,22 +29,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct GLFWvidmode {
  *     int width;
  *     int height;
  *     int redBits;
  *     int greenBits;
  *     int blueBits;
  *     int refreshRate;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct GLFWvidmode")
 public class GLFWVidMode extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowCloseCallback.java
Patch:
@@ -18,10 +18,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 2.5
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowCloseCallbackI.java
Patch:
@@ -14,10 +14,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 2.5
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowContentScaleCallback.java
Patch:
@@ -18,12 +18,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     float xscale,
  *     float yscale
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.3
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowContentScaleCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     float xscale,
  *     float yscale
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.3
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowFocusCallback.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int focused
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowFocusCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int focused
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowIconifyCallback.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int iconified
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowIconifyCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int iconified
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowMaximizeCallback.java
Patch:
@@ -18,11 +18,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int maximized
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.3
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowMaximizeCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int maximized
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.3
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowPosCallback.java
Patch:
@@ -18,12 +18,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int xpos,
  *     int ypos
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowPosCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int xpos,
  *     int ypos
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 3.0
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowRefreshCallback.java
Patch:
@@ -18,10 +18,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 2.5
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowRefreshCallbackI.java
Patch:
@@ -14,10 +14,10 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window
- * )</pre></code>
+ * )</code></pre>
  *
  * @since version 2.5
  */

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowSizeCallback.java
Patch:
@@ -18,12 +18,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int width,
  *     int height
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class GLFWWindowSizeCallback extends Callback implements GLFWWindowSizeCallbackI {
 

File: modules/lwjgl/glfw/src/generated/java/org/lwjgl/glfw/GLFWWindowSizeCallbackI.java
Patch:
@@ -14,12 +14,12 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     GLFWwindow *window,
  *     int width,
  *     int height
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("GLFWwindowsizefun")

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWT.java
Patch:
@@ -26,7 +26,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct JAWT {
  *     jint version;
  *     void * GetDrawingSurface;
@@ -37,13 +37,14 @@
  *     void * CreateEmbeddedFrame;
  *     void * SetBounds;
  *     void * SynthesizeWindowActivation;
- * }</pre></code>
+ * }</code></pre>
  */
 public class JAWT extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWTDrawingSurface.java
Patch:
@@ -31,22 +31,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct JAWT_DrawingSurface {
  *     JNIEnv * env;
  *     jobject target;
  *     void * Lock;
  *     void * GetDrawingSurfaceInfo;
  *     void * FreeDrawingSurfaceInfo;
  *     void * Unlock;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct JAWT_DrawingSurface")
 public class JAWTDrawingSurface extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWTDrawingSurfaceInfo.java
Patch:
@@ -29,21 +29,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct JAWT_DrawingSurfaceInfo {
  *     void * platformInfo;
  *     {@link JAWTDrawingSurface JAWT_DrawingSurface} * ds;
  *     {@link JAWTRectangle JAWT_Rectangle} bounds;
  *     jint clipSize;
  *     {@link JAWTRectangle JAWT_Rectangle} * clip;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct JAWT_DrawingSurfaceInfo")
 public class JAWTDrawingSurfaceInfo extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWTFunctions.java
Patch:
@@ -48,11 +48,11 @@ public class JAWTFunctions {
      * rectangle. If the window the Component belongs to has a {@code CALayer} attached to it, this layer will be accessible via the {@code windowLayer}
      * property.</p>
      * 
-     * <code><pre>
+     * <pre><code>
      * &#64;protocol JAWT_SurfaceLayers
      *     &#64;property (readwrite, retain) CALayer *layer;
      *     &#64;property (readonly) CALayer *windowLayer;
-     * &#64;end</pre></code>
+     * &#64;end</code></pre>
      */
     public static final int JAWT_MACOSX_USE_CALAYER = 0x10008;
 

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWTRectangle.java
Patch:
@@ -29,20 +29,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct JAWT_Rectangle {
  *     jint x;
  *     jint y;
  *     jint width;
  *     jint height;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct JAWT_Rectangle")
 public class JAWTRectangle extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWTWin32DrawingSurfaceInfo.java
Patch:
@@ -30,7 +30,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct JAWT_Win32DrawingSurfaceInfo {
  *     union {
  *         HWND hwnd;
@@ -39,14 +39,15 @@
  *     };
  *     HDC hdc;
  *     HPALETTE hpalette;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct JAWT_Win32DrawingSurfaceInfo")
 public class JAWTWin32DrawingSurfaceInfo extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/jawt/src/generated/java/org/lwjgl/system/jawt/JAWTX11DrawingSurfaceInfo.java
Patch:
@@ -28,21 +28,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct JAWT_X11DrawingSurfaceInfo {
  *     Drawable drawable;
  *     Display * display;
  *     VisualID visualID;
  *     Colormap colormapID;
  *     int depth;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct JAWT_X11DrawingSurfaceInfo")
 public class JAWTX11DrawingSurfaceInfo extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentAlloc.java
Patch:
@@ -16,7 +16,7 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void * (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *new_addr,
@@ -25,7 +25,7 @@
  *     bool *zero,
  *     bool *commit,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentAlloc extends Callback implements ExtentAllocI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentCommit.java
Patch:
@@ -16,15 +16,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *addr,
  *     size_t size,
  *     size_t offset,
  *     size_t length,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentCommit extends Callback implements ExtentCommitI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentDalloc.java
Patch:
@@ -16,14 +16,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *addr,
  *     size_t size,
  *     bool committed,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentDalloc extends Callback implements ExtentDallocI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentDecommit.java
Patch:
@@ -16,15 +16,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *addr,
  *     size_t size,
  *     size_t offset,
  *     size_t length,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentDecommit extends Callback implements ExtentDecommitI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentDestroy.java
Patch:
@@ -16,14 +16,14 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *addr,
  *     size_t size,
  *     bool committed,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentDestroy extends Callback implements ExtentDestroyI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentHooks.java
Patch:
@@ -40,7 +40,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct extent_hooks_t {
  *     {@link ExtentAllocI extent_alloc_t} alloc;
  *     {@link ExtentDallocI extent_dalloc_t} dalloc;
@@ -51,14 +51,15 @@
  *     {@link ExtentPurgeI extent_purge_t} purge_forced;
  *     {@link ExtentSplitI extent_split_t} split;
  *     {@link ExtentMergeI extent_merge_t} merge;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct extent_hooks_t")
 public class ExtentHooks extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentMerge.java
Patch:
@@ -16,7 +16,7 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *addr_a,
@@ -25,7 +25,7 @@
  *     size_t size_b,
  *     bool committed,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentMerge extends Callback implements ExtentMergeI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentPurge.java
Patch:
@@ -16,15 +16,15 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *addr,
  *     size_t size,
  *     size_t offset,
  *     size_t length,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentPurge extends Callback implements ExtentPurgeI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/ExtentSplit.java
Patch:
@@ -16,7 +16,7 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * bool (*) (
  *     extent_hooks_t *extent_hooks,
  *     void *addr,
@@ -25,7 +25,7 @@
  *     size_t size_b,
  *     bool committed,
  *     unsigned int arena_ind
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class ExtentSplit extends Callback implements ExtentSplitI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/MallocMessageCallback.java
Patch:
@@ -16,11 +16,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     void *cbopaque,
  *     char const *s
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class MallocMessageCallback extends Callback implements MallocMessageCallbackI {
 

File: modules/lwjgl/jemalloc/src/generated/java/org/lwjgl/system/jemalloc/MallocMessageCallbackI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     void *cbopaque,
  *     char const *s
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("void (*) (void *, char const *)")

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/LMDB.java
Patch:
@@ -82,7 +82,7 @@
  * <p>Also note that a transaction is tied to one thread by default using Thread Local Storage. If you want to pass read-only transactions across threads,
  * you can use the {@link #MDB_NOTLS NOTLS} option on the environment.</p>
  * 
- * <h3><Transactions, Rollbacks, etc.</h3>
+ * <h3>Transactions, Rollbacks, etc.</h3>
  * 
  * <p>To actually get anything done, a transaction must be committed using {@link #mdb_txn_commit txn_commit}. Alternatively, all of a transaction's operations can be discarded
  * using {@link #mdb_txn_abort txn_abort}. In a read-only transaction, any cursors will <b>not</b> automatically be freed. In a read-write transaction, all cursors will be

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBCmpFunc.java
Patch:
@@ -14,11 +14,11 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * int (*) (
  *     MDB_val const *a,
  *     MDB_val const *b
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class MDBCmpFunc extends Callback implements MDBCmpFuncI {
 

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBCmpFuncI.java
Patch:
@@ -12,11 +12,11 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * int (*) (
  *     MDB_val const *a,
  *     MDB_val const *b
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("MDB_cmp_func *")

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBEnvInfo.java
Patch:
@@ -31,22 +31,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct MDB_envinfo {
  *     void * me_mapaddr;
  *     mdb_size_t me_mapsize;
  *     mdb_size_t me_last_pgno;
  *     mdb_size_t me_last_txnid;
  *     unsigned int me_maxreaders;
  *     unsigned int me_numreaders;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct MDB_envinfo")
 public class MDBEnvInfo extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBMsgFunc.java
Patch:
@@ -16,11 +16,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * int (*) (
  *     char const *msg,
  *     void *ctx
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class MDBMsgFunc extends Callback implements MDBMsgFuncI {
 

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBMsgFuncI.java
Patch:
@@ -14,11 +14,11 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * int (*) (
  *     char const *msg,
  *     void *ctx
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("MDB_msg_func *")

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBRelFunc.java
Patch:
@@ -20,13 +20,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     MDB_val *item,
  *     void *oldptr,
  *     void *newptr,
  *     void *relctx
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class MDBRelFunc extends Callback implements MDBRelFuncI {
 

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBRelFuncI.java
Patch:
@@ -18,13 +18,13 @@
  * 
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void (*) (
  *     MDB_val *item,
  *     void *oldptr,
  *     void *newptr,
  *     void *relctx
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("MDB_rel_func *")

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBStat.java
Patch:
@@ -31,22 +31,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct MDB_stat {
  *     unsigned int ms_psize;
  *     unsigned int ms_depth;
  *     mdb_size_t ms_branch_pages;
  *     mdb_size_t ms_leaf_pages;
  *     mdb_size_t ms_overflow_pages;
  *     mdb_size_t ms_entries;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct MDB_stat")
 public class MDBStat extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/MDBVal.java
Patch:
@@ -33,18 +33,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct MDB_val {
  *     size_t mv_size;
  *     void * mv_data;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct MDB_val")
 public class MDBVal extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4FCompressOptions.java
Patch:
@@ -25,18 +25,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct LZ4F_compressOptions_t {
  *     unsigned stableSrc;
  *     unsigned reserved[3];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct LZ4F_compressOptions_t")
 public class LZ4FCompressOptions extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4FDecompressOptions.java
Patch:
@@ -26,18 +26,19 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct LZ4F_decompressOptions_t {
  *     unsigned stableDst;
  *     unsigned reserved[3];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct LZ4F_decompressOptions_t")
 public class LZ4FDecompressOptions extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4FFrameInfo.java
Patch:
@@ -34,7 +34,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct LZ4F_frameInfo_t {
  *     LZ4F_blockSizeID_t blockSizeID;
  *     LZ4F_blockMode_t blockMode;
@@ -43,14 +43,15 @@
  *     unsigned long long contentSize;
  *     unsigned dictID;
  *     LZ4F_blockChecksum_t blockChecksumFlag;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct LZ4F_frameInfo_t")
 public class LZ4FFrameInfo extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4FPreferences.java
Patch:
@@ -28,21 +28,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct LZ4F_preferences_t {
  *     {@link LZ4FFrameInfo LZ4F_frameInfo_t} frameInfo;
  *     int compressionLevel;
  *     unsigned autoFlush;
  *     unsigned favorDecSpeed;
  *     unsigned reserved[3];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct LZ4F_preferences_t")
 public class LZ4FPreferences extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4HCCCtxInternal.java
Patch:
@@ -30,7 +30,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct LZ4HC_CCtx_internal {
  *     uint32_t hashTable[LZ4HC_HASHTABLESIZE];
  *     uint16_t chainTable[LZ4HC_MAXD];
@@ -43,14 +43,15 @@
  *     short compressionLevel;
  *     short favorDecSpeed;
  *     {@link LZ4HCCCtxInternal LZ4HC_CCtx_internal} * const dictCtx;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct LZ4HC_CCtx_internal")
 public class LZ4HCCCtxInternal extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4Stream.java
Patch:
@@ -19,18 +19,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * union LZ4_stream_t {
  *     unsigned long long table[LZ4_STREAMSIZE_U64];
  *     {@link LZ4StreamInternal struct LZ4_stream_t_internal} internal_donotuse;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("union LZ4_stream_t")
 public class LZ4Stream extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4StreamDecode.java
Patch:
@@ -19,18 +19,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * union LZ4_streamDecode_t {
  *     unsigned long long table[LZ4_STREAMDECODESIZE_U64];
  *     {@link LZ4StreamDecodeInternal LZ4_streamDecode_t_internal} internal_donotuse;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("union LZ4_streamDecode_t")
 public class LZ4StreamDecode extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4StreamDecodeInternal.java
Patch:
@@ -16,20 +16,21 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct LZ4_streamDecode_t_internal {
  *     uint8_t const * externalDict;
  *     size_t extDictSize;
  *     uint8_t const * prefixEnd;
  *     size_t prefixSize;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct LZ4_streamDecode_t_internal")
 public class LZ4StreamDecodeInternal extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4StreamHC.java
Patch:
@@ -20,18 +20,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * union LZ4_streamHC_t {
  *     size_t table[LZ4_STREAMHCSIZE_SIZET];
  *     {@link LZ4HCCCtxInternal struct LZ4HC_CCtx_internal} internal_donotuse;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("union LZ4_streamHC_t")
 public class LZ4StreamHC extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/lz4/src/generated/java/org/lwjgl/util/lz4/LZ4StreamInternal.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct LZ4_stream_t_internal {
  *     uint32_t hashTable[LZ4_HASH_SIZE_U32];
  *     uint32_t currentOffset;
@@ -28,14 +28,15 @@
  *     uint8_t const * dictionary;
  *     {@link LZ4StreamInternal LZ4_stream_t_internal} * const dictCtx;
  *     uint32_t dictSize;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct LZ4_stream_t_internal")
 public class LZ4StreamInternal extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NSVGGradient.java
Patch:
@@ -17,22 +17,23 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NSVGgradient {
  *     float xform[6];
  *     char spread;
  *     float fx;
  *     float fy;
  *     int nstops;
  *     {@link NSVGGradientStop NSVGgradientStop} pstops[1];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NSVGgradient")
 public class NSVGGradient extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NSVGGradientStop.java
Patch:
@@ -16,18 +16,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NSVGgradientStop {
  *     unsigned int color;
  *     float offset;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NSVGgradientStop")
 public class NSVGGradientStop extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NSVGImage.java
Patch:
@@ -24,19 +24,20 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NSVGimage {
  *     float width;
  *     float height;
  *     {@link NSVGShape NSVGshape} * shapes;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NSVGimage")
 public class NSVGImage extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NSVGPaint.java
Patch:
@@ -16,21 +16,22 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NSVGpaint {
  *     char type;
  *     union {
  *         unsigned int color;
  *         {@link NSVGGradient NSVGgradient} * gradient;
  *     };
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NSVGpaint")
 public class NSVGPaint extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NSVGPath.java
Patch:
@@ -27,21 +27,22 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NSVGpath {
  *     float * pts;
  *     int npts;
  *     char closed;
  *     float bounds[4];
  *     {@link NSVGPath NSVGpath} * next;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NSVGpath")
 public class NSVGPath extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NSVGShape.java
Patch:
@@ -38,7 +38,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NSVGshape {
  *     char id[64];
  *     {@link NSVGPaint NSVGpaint} fill;
@@ -56,14 +56,15 @@
  *     float bounds[4];
  *     {@link NSVGPath NSVGpath} * paths;
  *     {@link NSVGShape NSVGshape} * next;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NSVGshape")
 public class NSVGShape extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NVGColor.java
Patch:
@@ -31,7 +31,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NVGcolor {
  *     union {
  *         float rgba[4];
@@ -42,14 +42,15 @@
  *             float a;
  *         };
  *     };
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NVGcolor")
 public class NVGColor extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NVGGlyphPosition.java
Patch:
@@ -29,20 +29,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NVGglyphPosition {
  *     char * str;
  *     float x;
  *     float minx;
  *     float maxx;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NVGglyphPosition")
 public class NVGGlyphPosition extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NVGLUFramebuffer.java
Patch:
@@ -27,20 +27,21 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NVGLUframebuffer {
  *     GLuint fbo;
  *     GLuint rbo;
  *     GLuint texture;
  *     int image;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NVGLUframebuffer")
 public class NVGLUFramebuffer extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NVGPaint.java
Patch:
@@ -33,7 +33,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NVGpaint {
  *     float xform[6];
  *     float extent[2];
@@ -42,14 +42,15 @@
  *     {@link NVGColor NVGcolor} innerColor;
  *     {@link NVGColor NVGcolor} outerColor;
  *     int image;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NVGpaint")
 public class NVGPaint extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/NVGTextRow.java
Patch:
@@ -31,22 +31,23 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct NVGtextRow {
  *     char * start;
  *     char * end;
  *     char * next;
  *     float width;
  *     float minx;
  *     float maxx;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct NVGtextRow")
 public class NVGTextRow extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nfd/src/generated/java/org/lwjgl/util/nfd/NFDPathSet.java
Patch:
@@ -22,6 +22,7 @@ public class NFDPathSet extends Struct implements NativeResource {
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     static {

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkAllocator.java
Patch:
@@ -18,19 +18,20 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_allocator {
  *     {@link NkHandle nk_handle} userdata;
  *     {@link NkPluginAllocI nk_plugin_alloc} alloc;
  *     {@link NkPluginFreeI nk_plugin_free} mfree;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_allocator")
 public class NkAllocator extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkBuffer.java
Patch:
@@ -33,7 +33,7 @@
  * 
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_buffer {
  *     {@link NkBufferMarker struct nk_buffer_marker} marker[2];
  *     {@link NkAllocator struct nk_allocator} pool;
@@ -44,14 +44,15 @@
  *     nk_size needed;
  *     nk_size calls;
  *     nk_size size;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_buffer")
 public class NkBuffer extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkBufferMarker.java
Patch:
@@ -16,18 +16,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_buffer_marker {
  *     int active;
  *     nk_size offset;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_buffer_marker")
 public class NkBufferMarker extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkChart.java
Patch:
@@ -17,22 +17,23 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_chart {
  *     int slot;
  *     float x;
  *     float y;
  *     float w;
  *     float h;
  *     {@link NkChartSlot struct nk_chart_slot} slots[4];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_chart")
 public class NkChart extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkChartSlot.java
Patch:
@@ -16,7 +16,7 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_chart_slot {
  *     enum nk_chart_type type;
  *     {@link NkColor struct nk_color} color;
@@ -27,14 +27,15 @@
  *     int count;
  *     {@link NkVec2 struct nk_vec2} last;
  *     int index;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_chart_slot")
 public class NkChartSlot extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkClipboard.java
Patch:
@@ -18,19 +18,20 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_clipboard {
  *     {@link NkHandle nk_handle} userdata;
  *     {@link NkPluginPasteI nk_plugin_paste} paste;
  *     {@link NkPluginCopyI nk_plugin_copy} copy;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_clipboard")
 public class NkClipboard extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkColor.java
Patch:
@@ -18,20 +18,21 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_color {
  *     nk_byte r;
  *     nk_byte g;
  *     nk_byte b;
  *     nk_byte a;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_color")
 public class NkColor extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkColorf.java
Patch:
@@ -18,20 +18,21 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_colorf {
  *     float r;
  *     float g;
  *     float b;
  *     float a;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_colorf")
 public class NkColorf extends Struct implements NativeResource {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkCommand.java
Patch:
@@ -16,19 +16,20 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_command {
  *     enum nk_command_type type;
  *     nk_size next;
  *     {@link NkHandle nk_handle} userdata;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_command")
 public class NkCommand extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkCommandBuffer.java
Patch:
@@ -16,7 +16,7 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_command_buffer {
  *     {@link NkBuffer struct nk_buffer} * base;
  *     {@link NkRect struct nk_rect} clip;
@@ -25,14 +25,15 @@
  *     nk_size begin;
  *     nk_size end;
  *     nk_size last;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_command_buffer")
 public class NkCommandBuffer extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkCommandCustomCallback.java
Patch:
@@ -14,15 +14,15 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void * (*) (
  *     void *canvas,
  *     short x,
  *     short y,
  *     unsigned short w,
  *     unsigned short h,
  *     nk_handle callback_data
- * )</pre></code>
+ * )</code></pre>
  */
 public abstract class NkCommandCustomCallback extends Callback implements NkCommandCustomCallbackI {
 

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkCommandCustomCallbackI.java
Patch:
@@ -12,15 +12,15 @@
 /**
  * <h3>Type</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * void * (*) (
  *     void *canvas,
  *     short x,
  *     short y,
  *     unsigned short w,
  *     unsigned short h,
  *     nk_handle callback_data
- * )</pre></code>
+ * )</code></pre>
  */
 @FunctionalInterface
 @NativeType("nk_command_custom_callback")

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkConfigStackButtonBehavior.java
Patch:
@@ -17,18 +17,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_config_stack_button_behavior {
  *     int head;
  *     {@link NkConfigStackButtonBehaviorElement struct nk_config_stack_button_behavior_element} elements[8];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_config_stack_button_behavior")
 class NkConfigStackButtonBehavior extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkConfigStackButtonBehaviorElement.java
Patch:
@@ -16,18 +16,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_config_stack_button_behavior_element {
  *     enum nk_button_behavior * pValues;
  *     enum nk_button_behavior old_value;
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_config_stack_button_behavior_element")
 class NkConfigStackButtonBehaviorElement extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/lwjgl/nuklear/src/generated/java/org/lwjgl/nuklear/NkConfigStackColor.java
Patch:
@@ -17,18 +17,19 @@
 /**
  * <h3>Layout</h3>
  * 
- * <code><pre>
+ * <pre><code>
  * struct nk_config_stack_color {
  *     int head;
  *     {@link NkConfigStackColorElement struct nk_config_stack_color_element} elements[32];
- * }</pre></code>
+ * }</code></pre>
  */
 @NativeType("struct nk_config_stack_color")
 class NkConfigStackColor extends Struct {
 
     /** The struct size in bytes. */
     public static final int SIZEOF;
 
+    /** The struct alignment in bytes. */
     public static final int ALIGNOF;
 
     /** The struct member offsets. */

File: modules/samples/src/test/java/org/lwjgl/demo/egl/EGLDemo.java
Patch:
@@ -115,6 +115,8 @@ public static void main(String[] args) {
             glfwSwapBuffers(window);
         }
 
+        GLES.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwTerminate();
     }

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Events.java
Patch:
@@ -316,6 +316,8 @@ private static void demo() {
             glfwSwapBuffers(window);
         }
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         Objects.requireNonNull(glfwSetJoystickCallback(null)).free();
         Objects.requireNonNull(glfwSetMonitorCallback(null)).free();

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Gears.java
Patch:
@@ -213,6 +213,8 @@ private void loop() {
     }
 
     private void destroy() {
+        GL.setCapabilities(null);
+
         if (debugProc != null) {
             debugProc.free();
         }

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/MultipleWindows.java
Patch:
@@ -103,6 +103,7 @@ private static void demo() {
                 }
             }
         }
+        GL.setCapabilities(null);
     }
 
     private static class Window {

File: modules/samples/src/test/java/org/lwjgl/demo/glfw/Threads.java
Patch:
@@ -127,6 +127,7 @@ public void run() {
                 glClear(GL_COLOR_BUFFER_BIT);
                 glfwSwapBuffers(window);
             }
+            GL.setCapabilities(null);
         }
     }
 }

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleFBO.java
Patch:
@@ -254,6 +254,8 @@ public static void main(String[] args) {
         System.out.format("          CPU Time: %.2f ms\n", getGraphAverage(cpuGraph) * 1000.0f);
         System.out.format("          GPU Time: %.2f ms\n", getGraphAverage(gpuGraph) * 1000.0f);
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwTerminate();
         Objects.requireNonNull(glfwSetErrorCallback(null)).free();

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleGL2.java
Patch:
@@ -148,6 +148,8 @@ public static void main(String[] args) {
 
         nvgDelete(vg);
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwTerminate();
         Objects.requireNonNull(glfwSetErrorCallback(null)).free();

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/ExampleGL3.java
Patch:
@@ -189,6 +189,8 @@ public static void main(String[] args) {
         System.out.printf("          CPU Time: %.2f ms\n", getGraphAverage(cpuGraph) * 1000.0f);
         System.out.printf("          GPU Time: %.2f ms\n", getGraphAverage(gpuGraph) * 1000.0f);
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwTerminate();
         Objects.requireNonNull(glfwSetErrorCallback(null)).free();

File: modules/samples/src/test/java/org/lwjgl/demo/nanovg/SVGDemo.java
Patch:
@@ -344,6 +344,8 @@ private void render() {
     }
 
     private void destroy() {
+        GL.setCapabilities(null);
+
         if (debugProc != null) {
             debugProc.free();
         }

File: modules/samples/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -643,6 +643,8 @@ private void destroy() {
         glDeleteBuffers(vbo);
         glDeleteBuffers(ebo);
         nk_buffer_free(cmds);
+
+        GL.setCapabilities(null);
     }
 
     private void shutdown() {

File: modules/samples/src/test/java/org/lwjgl/demo/opencl/Mandelbrot.java
Patch:
@@ -559,6 +559,8 @@ private void cleanup() {
         if (debugProc != null) {
             debugProc.free();
         }
+
+        GL.setCapabilities(null);
     }
 
     private void display() {

File: modules/samples/src/test/java/org/lwjgl/demo/stb/FontDemo.java
Patch:
@@ -279,6 +279,8 @@ private void setLineOffset(int offset) {
     protected abstract void loop();
 
     private void destroy() {
+        GL.setCapabilities(null);
+
         if (debugProc != null) {
             debugProc.free();
         }

File: modules/samples/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -327,6 +327,8 @@ private void render() {
     }
 
     private void destroy() {
+        GL.setCapabilities(null);
+
         if (debugProc != null) {
             debugProc.free();
         }

File: modules/samples/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -397,6 +397,8 @@ private void run(String title) {
     }
 
     private void destroy() {
+        GL.setCapabilities(null);
+
         chardata.free();
 
         if (debugProc != null) {

File: modules/samples/src/test/java/org/lwjgl/demo/stb/Vorbis.java
Patch:
@@ -250,6 +250,8 @@ private Vorbis(String filePath) {
 
     @Override
     public void close() {
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwDestroyWindow(window);
 

File: modules/samples/src/test/java/org/lwjgl/demo/util/nfd/HelloNFD.java
Patch:
@@ -97,6 +97,8 @@ public static void main(String[] args) {
             glfwSwapBuffers(window);
         }
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwDestroyWindow(window);
         glfwTerminate();

File: modules/samples/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -480,6 +480,8 @@ private void cleanup() {
         glDeleteBuffers(ibo);
         glDeleteBuffers(vbo);
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwTerminate();
         Objects.requireNonNull(glfwSetErrorCallback(null)).free();

File: modules/samples/src/test/java/org/lwjgl/demo/util/tinyfd/HelloTinyFD.java
Patch:
@@ -127,6 +127,8 @@ public static void main(String[] args) {
             glfwSwapBuffers(window);
         }
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwDestroyWindow(window);
         glfwTerminate();

File: modules/samples/src/test/java/org/lwjgl/demo/util/tootle/HelloTootle.java
Patch:
@@ -424,6 +424,8 @@ private void cleanup() {
 
         glDeleteVertexArrays(vao);
 
+        GL.setCapabilities(null);
+
         glfwFreeCallbacks(window);
         glfwTerminate();
         Objects.requireNonNull(glfwSetErrorCallback(null)).free();

File: modules/samples/src/test/java/org/lwjgl/demo/util/yoga/HolyGrail.java
Patch:
@@ -260,6 +260,8 @@ private void destroy() {
         }
 
         if (window != NULL) {
+            GL.setCapabilities(null);
+
             glfwFreeCallbacks(window);
             glfwDestroyWindow(window);
         }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBComputeShader.java
Patch:
@@ -128,7 +128,7 @@ public static void nglDispatchComputeIndirect(long indirect) {
      *                 stored.
      */
     public static void glDispatchComputeIndirect(@NativeType("GLintptr") long indirect) {
-        nglDispatchComputeIndirect(indirect);
+        GL43.glDispatchComputeIndirect(indirect);
     }
 
 }
\ No newline at end of file

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/EXTSemaphore.java
Patch:
@@ -83,7 +83,7 @@ public static void nglGetUnsignedBytevEXT(int pname, long data) {
     }
 
     public static void glGetUnsignedBytevEXT(@NativeType("GLenum") int pname, @NativeType("GLubyte *") ByteBuffer data) {
-        nglGetUnsignedBytevEXT(pname, memAddress(data));
+        EXTMemoryObject.glGetUnsignedBytevEXT(pname, data);
     }
 
     // --- [ glGetUnsignedBytei_vEXT ] ---
@@ -93,7 +93,7 @@ public static void nglGetUnsignedBytei_vEXT(int target, int index, long data) {
     }
 
     public static void glGetUnsignedBytei_vEXT(@NativeType("GLenum") int target, @NativeType("GLuint") int index, @NativeType("GLubyte *") ByteBuffer data) {
-        nglGetUnsignedBytei_vEXT(target, index, memAddress(data));
+        EXTMemoryObject.glGetUnsignedBytei_vEXT(target, index, data);
     }
 
     // --- [ glGenSemaphoresEXT ] ---

File: modules/lwjgl/opengles/src/generated/java/org/lwjgl/opengles/EXTSemaphore.java
Patch:
@@ -83,7 +83,7 @@ public static void nglGetUnsignedBytevEXT(int pname, long data) {
     }
 
     public static void glGetUnsignedBytevEXT(@NativeType("GLenum") int pname, @NativeType("GLubyte *") ByteBuffer data) {
-        nglGetUnsignedBytevEXT(pname, memAddress(data));
+        EXTMemoryObject.glGetUnsignedBytevEXT(pname, data);
     }
 
     // --- [ glGetUnsignedBytei_vEXT ] ---
@@ -93,7 +93,7 @@ public static void nglGetUnsignedBytei_vEXT(int target, int index, long data) {
     }
 
     public static void glGetUnsignedBytei_vEXT(@NativeType("GLenum") int target, @NativeType("GLuint") int index, @NativeType("GLubyte *") ByteBuffer data) {
-        nglGetUnsignedBytei_vEXT(target, index, memAddress(data));
+        EXTMemoryObject.glGetUnsignedBytei_vEXT(target, index, data);
     }
 
     // --- [ glGenSemaphoresEXT ] ---

File: modules/lwjgl/openvr/src/generated/java/org/lwjgl/openvr/VRInput.java
Patch:
@@ -322,7 +322,7 @@ public static int nVRInput_GetSkeletalActionData(long action, int eBoneParent, f
      * @param pTransformArray          
      */
     @NativeType("EVRInputError")
-    public static int VRInput_GetSkeletalActionData(@NativeType("VRActionHandle_t") long action, @NativeType("EVRSkeletalTransformSpace") int eBoneParent, float fPredictedSecondsFromNow, @NativeType("InputSkeletonActionData_t *") InputSkeletonActionData.Buffer pActionData, @NativeType("VRBoneTransform_t *") VRBoneTransform_.Buffer pTransformArray) {
+    public static int VRInput_GetSkeletalActionData(@NativeType("VRActionHandle_t") long action, @NativeType("EVRSkeletalTransformSpace") int eBoneParent, float fPredictedSecondsFromNow, @NativeType("InputSkeletonActionData_t *") InputSkeletonActionData.Buffer pActionData, @NativeType("VRBoneTransform_t *") VRBoneTransform.Buffer pTransformArray) {
         return nVRInput_GetSkeletalActionData(action, eBoneParent, fPredictedSecondsFromNow, pActionData.address(), pActionData.remaining(), pTransformArray.address(), pTransformArray.remaining());
     }
 
@@ -374,7 +374,7 @@ public static int nVRInput_UncompressSkeletalActionData(long pvCompressedBuffer,
      * @param pTransformArray    
      */
     @NativeType("EVRInputError")
-    public static int VRInput_UncompressSkeletalActionData(@NativeType("void *") ByteBuffer pvCompressedBuffer, @NativeType("EVRSkeletalTransformSpace *") IntBuffer peBoneParent, @NativeType("VRBoneTransform_t *") VRBoneTransform_.Buffer pTransformArray) {
+    public static int VRInput_UncompressSkeletalActionData(@NativeType("void *") ByteBuffer pvCompressedBuffer, @NativeType("EVRSkeletalTransformSpace *") IntBuffer peBoneParent, @NativeType("VRBoneTransform_t *") VRBoneTransform.Buffer pTransformArray) {
         if (CHECKS) {
             check(peBoneParent, 1);
         }

File: modules/lwjgl/core/src/generated/java/org/lwjgl/system/jni/JNINativeInterface.java
Patch:
@@ -39,7 +39,8 @@ public class JNINativeInterface {
         JNI_VERSION_1_4 = 0x10004,
         JNI_VERSION_1_6 = 0x10006,
         JNI_VERSION_1_8 = 0x10008,
-        JNI_VERSION_9   = 0x90000;
+        JNI_VERSION_9   = 0x90000,
+        JNI_VERSION_10  = 0xA0000;
 
     /**
      * {@code jobjectRefType}: Return values from {@link #GetObjectRefType}.

File: modules/lwjgl/openal/src/main/java/org/lwjgl/openal/AL.java
Patch:
@@ -235,7 +235,7 @@ private static class ICDStatic implements ICD {
         public void set(@Nullable ALCapabilities caps) {
             if (tempCaps == null) {
                 tempCaps = caps;
-            } else if (caps != null && caps != tempCaps && !ThreadLocalUtil.compareCapabilities(tempCaps.addresses, caps.addresses)) {
+            } else if (caps != null && caps != tempCaps && ThreadLocalUtil.areCapabilitiesDifferent(tempCaps.addresses, caps.addresses)) {
                 apiLog("[WARNING] Incompatible context detected. Falling back to thread/process lookup for AL contexts.");
                 icd = AL::getCapabilities; // fall back to thread/process lookup
             }

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/ARBSync.java
Patch:
@@ -60,7 +60,7 @@ public class ARBSync {
     public static final int GL_SYNC_FLUSH_COMMANDS_BIT = 0x1;
 
     /** Accepted in the {@code timeout} parameter of WaitSync. */
-    public static final long GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFl;
+    public static final long GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFL;
 
     /** Returned by ClientWaitSync. */
     public static final int

File: modules/lwjgl/opengl/src/generated/java/org/lwjgl/opengl/GL32.java
Patch:
@@ -181,7 +181,7 @@ public class GL32 {
     public static final int GL_SYNC_FLUSH_COMMANDS_BIT = 0x1;
 
     /** Accepted in the {@code timeout} parameter of WaitSync. */
-    public static final long GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFl;
+    public static final long GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFL;
 
     /** Returned by ClientWaitSync. */
     public static final int

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXAllocatorVtbl.java
Patch:
@@ -29,7 +29,6 @@
  * 
  * <code><pre>
  * struct bgfx_allocator_vtbl_t {
- *     char[POINTER_SIZE];
  *     void * (*{@link BGFXReallocCallbackI realloc}) (bgfx_allocator_interface_t *_this, void *_ptr, size_t _size, size_t _align, char *_file, uint32_t _line);
  * }</pre></code>
  */
@@ -47,14 +46,13 @@ public class BGFXAllocatorVtbl extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
-            __padding(POINTER_SIZE, true),
             __member(POINTER_SIZE)
         );
 
         SIZEOF = layout.getSize();
         ALIGNOF = layout.getAlignment();
 
-        REALLOC = layout.offsetof(1);
+        REALLOC = layout.offsetof(0);
     }
 
     BGFXAllocatorVtbl(long address, @Nullable ByteBuffer container) {

File: modules/lwjgl/lmdb/src/generated/java/org/lwjgl/util/lmdb/LibLMDB.java
Patch:
@@ -16,7 +16,7 @@ final class LibLMDB {
         String libName = Platform.mapLibraryNameBundled("lwjgl_lmdb");
         Library.loadSystem(System::load, System::loadLibrary, LibLMDB.class, libName);
 
-        MemoryAllocator allocator = getAllocator();
+        MemoryAllocator allocator = getAllocator(Configuration.DEBUG_MEMORY_ALLOCATOR_INTERNAL.get(true));
         setupMalloc(
             allocator.getMalloc(),
             allocator.getCalloc(),

File: modules/lwjgl/nanovg/src/generated/java/org/lwjgl/nanovg/LibNanoVG.java
Patch:
@@ -16,7 +16,7 @@ final class LibNanoVG {
         String libName = Platform.mapLibraryNameBundled("lwjgl_nanovg");
         Library.loadSystem(System::load, System::loadLibrary, LibNanoVG.class, libName);
 
-        MemoryAllocator allocator = getAllocator();
+        MemoryAllocator allocator = getAllocator(Configuration.DEBUG_MEMORY_ALLOCATOR_INTERNAL.get(true));
         setupMalloc(
             allocator.getMalloc(),
             allocator.getCalloc(),

File: modules/lwjgl/nfd/src/generated/java/org/lwjgl/util/nfd/LibNFD.java
Patch:
@@ -16,7 +16,7 @@ final class LibNFD {
         String libName = Platform.mapLibraryNameBundled("lwjgl_nfd");
         Library.loadSystem(System::load, System::loadLibrary, LibNFD.class, libName);
 
-        MemoryAllocator allocator = getAllocator();
+        MemoryAllocator allocator = getAllocator(Configuration.DEBUG_MEMORY_ALLOCATOR_INTERNAL.get(true));
         setupMalloc(
             allocator.getMalloc(),
             allocator.getCalloc(),

File: modules/lwjgl/par/src/generated/java/org/lwjgl/util/par/LibPar.java
Patch:
@@ -16,7 +16,7 @@ final class LibPar {
         String libName = Platform.mapLibraryNameBundled("lwjgl_par");
         Library.loadSystem(System::load, System::loadLibrary, LibPar.class, libName);
 
-        MemoryAllocator allocator = getAllocator();
+        MemoryAllocator allocator = getAllocator(Configuration.DEBUG_MEMORY_ALLOCATOR_INTERNAL.get(true));
         setupMalloc(
             allocator.getMalloc(),
             allocator.getCalloc(),

File: modules/lwjgl/stb/src/generated/java/org/lwjgl/stb/LibSTB.java
Patch:
@@ -16,7 +16,7 @@ final class LibSTB {
         String libName = Platform.mapLibraryNameBundled("lwjgl_stb");
         Library.loadSystem(System::load, System::loadLibrary, LibSTB.class, libName);
 
-        MemoryAllocator allocator = getAllocator();
+        MemoryAllocator allocator = getAllocator(Configuration.DEBUG_MEMORY_ALLOCATOR_INTERNAL.get(true));
         setupMalloc(
             allocator.getMalloc(),
             allocator.getCalloc(),

File: modules/lwjgl/vma/src/generated/java/org/lwjgl/util/vma/LibVma.java
Patch:
@@ -16,7 +16,7 @@ final class LibVma {
         String libName = Platform.mapLibraryNameBundled("lwjgl_vma");
         Library.loadSystem(System::load, System::loadLibrary, LibVma.class, libName);
 
-        MemoryAllocator allocator = getAllocator();
+        MemoryAllocator allocator = getAllocator(Configuration.DEBUG_MEMORY_ALLOCATOR_INTERNAL.get(true));
         setupMalloc(
             allocator.getMalloc(),
             allocator.getCalloc(),

File: modules/lwjgl/xxhash/src/generated/java/org/lwjgl/util/xxhash/LibXXHash.java
Patch:
@@ -16,7 +16,7 @@ final class LibXXHash {
         String libName = Platform.mapLibraryNameBundled("lwjgl_xxhash");
         Library.loadSystem(System::load, System::loadLibrary, LibXXHash.class, libName);
 
-        MemoryAllocator allocator = getAllocator();
+        MemoryAllocator allocator = getAllocator(Configuration.DEBUG_MEMORY_ALLOCATOR_INTERNAL.get(true));
         setupMalloc(
             allocator.getMalloc(),
             allocator.getCalloc(),

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXAllocatorVtbl.java
Patch:
@@ -29,6 +29,7 @@
  * 
  * <code><pre>
  * struct bgfx_allocator_vtbl_t {
+ *     char[POINTER_SIZE];
  *     void * (*{@link BGFXReallocCallbackI realloc}) (bgfx_allocator_interface_t *_this, void *_ptr, size_t _size, size_t _align, char *_file, uint32_t _line);
  * }</pre></code>
  */
@@ -46,13 +47,14 @@ public class BGFXAllocatorVtbl extends Struct implements NativeResource {
 
     static {
         Layout layout = __struct(
+            __padding(POINTER_SIZE, true),
             __member(POINTER_SIZE)
         );
 
         SIZEOF = layout.getSize();
         ALIGNOF = layout.getAlignment();
 
-        REALLOC = layout.offsetof(0);
+        REALLOC = layout.offsetof(1);
     }
 
     BGFXAllocatorVtbl(long address, @Nullable ByteBuffer container) {

File: modules/lwjgl/bgfx/src/generated/java/org/lwjgl/bgfx/BGFXStats.java
Patch:
@@ -14,6 +14,8 @@
 import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryUtil.*;
 
+import static org.lwjgl.bgfx.BGFX.BGFX_TOPOLOGY_COUNT;
+
 /**
  * Renderer statistics data.
  * 

File: modules/lwjgl/yoga/src/test/java/org/lwjgl/util/yoga/YogaNodeTest.java
Patch:
@@ -293,7 +293,7 @@ public void testCloneNodeListener() throws Exception {
         YogaConfig    config               = new YogaConfig();
         config.setOnCloneNode((oldNode, owner, childIndex) -> {
             onNodeClonedExecuted.set(true);
-            return YGNodeClone(oldNode);
+            return YogaNode.create(oldNode).clone(owner).node;
         });
         YogaNode root = new YogaNode(config);
         root.setWidth(100f);
@@ -317,8 +317,6 @@ public void testCloneNodeListener() throws Exception {
 
             assertEquals(child0.getWidth(v).value(), clonedNode.getWidth(v).value());
             assertEquals(50f, clonedNode.getWidth(v).value(), 0.01f);
-        } catch (Exception e) {
-            e.printStackTrace();
         }
     }
 

File: modules/lwjgl/assimp/src/generated/java/org/lwjgl/assimp/AIMesh.java
Patch:
@@ -33,8 +33,8 @@
  * <li>{@code mNumVertices} &ndash; 
  * The number of vertices in this mesh. This is also the size of all of the per-vertex data arrays. The maximum value for this member is {@link Assimp#AI_MAX_VERTICES}.</li>
  * <li>{@code mNumFaces} &ndash; 
- * The number of primitives (triangles, polygons, lines) in this mesh. This is also the size of the mFaces array. The maximum value for this member is
- * {@link Assimp#AI_MAX_FACES}.</li>
+ * The number of primitives (triangles, polygons, lines) in this mesh. This is also the size of the {@code mFaces} array. The maximum value for this
+ * member is {@link Assimp#AI_MAX_FACES}.</li>
  * <li>{@code mVertices} &ndash; Vertex positions. This array is always present in a mesh. The array is {@code mNumVertices} in size.</li>
  * <li>{@code mNormals} &ndash; 
  * Vertex normals. The array contains normalized vectors, {@code NULL} if not present. The array is {@code mNumVertices} in size. Normals are undefined for point

File: modules/lwjgl/vulkan/src/main/java/org/lwjgl/vulkan/VK.java
Patch:
@@ -195,7 +195,7 @@ static Set<String> getEnabledExtensionSet(int apiVersion, @Nullable PointerBuffe
         int minorVersion = VK_VERSION_MINOR(apiVersion);
 
         int[] VK_VERSIONS = {
-            0, 1 // Vulkan 1.0 to 1.1
+            1 // Vulkan 1.0 to 1.1
         };
 
         int maxMajor = min(majorVersion, VK_VERSIONS.length);

File: modules/lwjgl/glfw/src/main/java/org/lwjgl/glfw/Callbacks.java
Patch:
@@ -34,6 +34,7 @@ public static void glfwFreeCallbacks(@NativeType("GLFWwindow *") long window) {
             GLFW.Functions.SetWindowIconifyCallback,
             GLFW.Functions.SetWindowMaximizeCallback,
             GLFW.Functions.SetFramebufferSizeCallback,
+            GLFW.Functions.SetWindowContentScaleCallback,
             GLFW.Functions.SetKeyCallback,
             GLFW.Functions.SetCharCallback,
             GLFW.Functions.SetCharModsCallback,

File: modules/lwjgl/core/src/main/java/org/lwjgl/PointerBuffer.java
Patch:
@@ -295,7 +295,7 @@ public PointerBuffer put(DoubleBuffer buffer) {
      *
      * @throws BufferOverflowException If this buffer's current position is not smaller than its limit
      */
-    public PointerBuffer putAddressOf(CustomBuffer buffer) {
+    public PointerBuffer putAddressOf(CustomBuffer<?> buffer) {
         put(memAddress(buffer));
         return this;
     }
@@ -339,7 +339,7 @@ public PointerBuffer put(int index, DoubleBuffer buffer) {
     }
 
     /** Puts the address of the specified {@code buffer} at the specified {@code index}. */
-    public PointerBuffer putAddressOf(int index, CustomBuffer buffer) {
+    public PointerBuffer putAddressOf(int index, CustomBuffer<?> buffer) {
         put(index, memAddress(buffer));
         return this;
     }

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibrary.java
Patch:
@@ -25,7 +25,7 @@ public static MacOSXLibrary getWithIdentifier(String bundleID) {
     public static MacOSXLibrary create(String name) {
         return name.endsWith(".framework")
             ? MacOSXLibraryBundle.create(name)
-            : MacOSXLibraryDL.create(name);
+            : new MacOSXLibraryDL(name);
     }
 
 }

File: modules/generator/src/main/java/org/lwjgl/system/BlockListPostProcess.java
Patch:
@@ -42,7 +42,7 @@ static String process(String html) {
         StringBuilder out = new StringBuilder(html.length());
         while (m.find()) {
             if (lastMatch == null) {
-                out.append(html.substring(0, m.start()));
+                out.append(html, 0, m.start());
 
                 matches.add(lastMatch = new Match(m));
                 continue;
@@ -58,7 +58,7 @@ static String process(String html) {
             flush(out, matches);
 
             if (lastMatch.end != match.start) {
-                out.append(html.substring(lastMatch.end, match.start));
+                out.append(html, lastMatch.end, match.start);
             }
 
             matches.clear();

File: modules/generator/src/main/java/org/lwjgl/system/FieldSummaryPostProcess.java
Patch:
@@ -43,7 +43,7 @@ static String process(String html) {
         boolean       altColor = false;
         while (m.find()) {
             if (lastMatch == null) {
-                out.append(html.substring(0, m.start()));
+                out.append(html, 0, m.start());
 
                 matches.add(lastMatch = new Match(m));
                 continue;

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/Platform.java
Patch:
@@ -9,7 +9,7 @@
 public enum Platform {
 
     LINUX("Linux") {
-        private final Pattern SO = Pattern.compile("(?:^|/)lib\\w+[.]so(?:[.]\\d+){0,3}$");
+        private final Pattern SO = Pattern.compile("(?:^|/)lib\\w+[.]so(?:[.]\\d+)*$");
 
         @Override
         String mapLibraryName(String name) {
@@ -20,8 +20,8 @@ String mapLibraryName(String name) {
             return System.mapLibraryName(name);
         }
     },
-    MACOSX("Mac OS X") {
-        private final Pattern DYLIB = Pattern.compile("(?:^|/)lib\\w+[.]dylib$");
+    MACOSX("macOS") {
+        private final Pattern DYLIB = Pattern.compile("(?:^|/)lib\\w+(?:[.]\\d+)*[.]dylib$");
 
         @Override
         String mapLibraryName(String name) {

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/linux/LinuxLibrary.java
Patch:
@@ -26,7 +26,7 @@ public LinuxLibrary(String name, long handle) {
     private static long loadLibrary(String name) {
         long handle;
         try (MemoryStack stack = stackPush()) {
-            handle = dlopen(stack.ASCII(name), RTLD_LAZY | RTLD_GLOBAL);
+            handle = dlopen(stack.ASCII(name), RTLD_LAZY | RTLD_LOCAL);
         }
         if (handle == NULL) {
             throw new UnsatisfiedLinkError("Failed to dynamically load library: " + name + "(error = " + dlerror() + ")");

File: modules/lwjgl/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryDL.java
Patch:
@@ -26,7 +26,7 @@ public MacOSXLibraryDL(String name, long handle) {
     private static long loadLibrary(String name) {
         long handle;
         try (MemoryStack stack = stackPush()) {
-            handle = dlopen(stack.ASCII(name), RTLD_LAZY | RTLD_GLOBAL);
+            handle = dlopen(stack.ASCII(name), RTLD_LAZY | RTLD_LOCAL);
         }
         if (handle == NULL) {
             throw new UnsatisfiedLinkError("Failed to dynamically load library: " + name + "(error = " + dlerror() + ")");

File: modules/lwjgl/opencl/src/test/java/org/lwjgl/opencl/CLTest.java
Patch:
@@ -31,10 +31,9 @@ public class CLTest {
     private void createCL() {
         try {
             CL.getFunctionProvider();
+            CL.destroy();
         } catch (Throwable t) {
             throw new SkipException("Skipped because OpenCL initialization failed [" + t.getMessage() + "]");
-        } finally {
-            CL.destroy();
         }
     }
 

File: modules/samples/src/test/java/org/lwjgl/demo/util/nfd/HelloNFD.java
Patch:
@@ -169,7 +169,7 @@ private static void checkResult(int result, PointerBuffer path) {
             case NFD_OKAY:
                 System.out.println("Success!");
                 System.out.println(path.getStringUTF8(0));
-                nNFDi_Free(path.get(0));
+                nNFD_Free(path.get(0));
                 break;
             case NFD_CANCEL:
                 System.out.println("User pressed cancel.");

File: modules/samples/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -571,7 +571,7 @@ private void exportMesh() {
                 case NFD_OKAY:
                     long path = pp.get(0);
                     npar_shapes_export(mesh.address(), path);
-                    nNFDi_Free(path);
+                    nNFD_Free(path);
                     break;
                 case NFD_ERROR:
                     System.err.format("Error: %s\n", NFD_GetError());

File: modules/samples/src/test/java/org/lwjgl/demo/util/tootle/HelloTootle.java
Patch:
@@ -948,7 +948,7 @@ private void importMesh() {
                         null,
                         propertyStore
                     );
-                    nNFDi_Free(pp.get(0));
+                    nNFD_Free(pp.get(0));
 
                     if (scene != null) {
                         try {

File: modules/lwjgl/nanovg/src/main/resources/module-info.java
Patch:
@@ -5,5 +5,8 @@
 module org.lwjgl.nanovg {
     requires transitive org.lwjgl;
 
+    requires static org.lwjgl.opengl;
+    requires static org.lwjgl.opengles;
+
     exports org.lwjgl.nanovg;
 }
\ No newline at end of file

File: modules/lwjgl/opengles/src/main/resources/module-info.java
Patch:
@@ -5,5 +5,7 @@
 module org.lwjgl.opengles {
     requires transitive org.lwjgl;
 
+    requires static org.lwjgl.egl;
+
     exports org.lwjgl.opengles;
 }
\ No newline at end of file

File: modules/lwjgl/ovr/src/main/resources/module-info.java
Patch:
@@ -5,5 +5,8 @@
 module org.lwjgl.ovr {
     requires transitive org.lwjgl;
 
+    requires static org.lwjgl.opengl;
+    requires static org.lwjgl.vulkan;
+
     exports org.lwjgl.ovr;
 }
\ No newline at end of file

File: modules/core/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -351,9 +351,9 @@ private void updateMesh(int key) {
             glBufferSubData(GL_ARRAY_BUFFER, vc * (0 + 0) * 4, mesh.points(vc * 3));
             glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, vc * (0 + 0) * 4);
 
-            hasNormals = memGetAddress(mesh.address() + ParShapesMesh.NORMALS) != NULL;
-            if (hasNormals) {
-                glBufferSubData(GL_ARRAY_BUFFER, vc * (3 + 0) * 4, mesh.normals(vc * 3));
+            FloatBuffer normals = mesh.normals(vc * 3);
+            if (hasNormals = normals != null) {
+                glBufferSubData(GL_ARRAY_BUFFER, vc * (3 + 0) * 4, normals);
                 glVertexAttribPointer(1, 3, GL_FLOAT, false, 0, vc * (3 + 0) * 4);
             }
 

File: modules/core/src/test/java/org/lwjgl/demo/util/tootle/HelloTootle.java
Patch:
@@ -747,9 +747,9 @@ private void updateMeshGPU() {
 
         glBufferSubData(GL_ARRAY_BUFFER, vc * (0 + 0) * 4, mesh.points(vc * 3));
 
-        hasNormals = memGetAddress(mesh.address() + ParShapesMesh.NORMALS) != NULL;
-        if (hasNormals) {
-            glBufferSubData(GL_ARRAY_BUFFER, vc * (3 + 0) * 4, mesh.normals(vc * 3));
+        FloatBuffer normals = mesh.normals(vc * 3);
+        if (hasNormals = normals != null) {
+            glBufferSubData(GL_ARRAY_BUFFER, vc * (3 + 0) * 4, normals);
         }
 
         int tc = mesh.ntriangles();

File: modules/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -87,7 +87,7 @@ public static Optional<String> apiGetManifestValue(String attributeName) {
             String classURL = url.toString();
             if (classURL.startsWith("jar:")) {
                 try (InputStream stream = new URL(classURL.substring(0, classURL.lastIndexOf("!") + 1) + '/' + JarFile.MANIFEST_NAME).openStream()) {
-                    return Optional.ofNullable(new Manifest(stream).getAttributes("org/lwjgl/")).map(attr -> attr.getValue(attributeName));
+                    return Optional.ofNullable(new Manifest(stream).getMainAttributes().getValue(attributeName));
                 } catch (Exception e) {
                     e.printStackTrace(APIUtil.DEBUG_STREAM);
                 }

File: modules/module-info-gen/src/main/java/org/lwjgl/tool/ModuleInfoGen.java
Patch:
@@ -15,7 +15,7 @@ public final class ModuleInfoGen {
 
     private static final String JAVA_PACKAGE = "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\s*\\.\\s*\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*";
 
-    private static final Pattern MODULE_NAME = Pattern.compile("^\\s*(?:open\\s+)?module\\s+(" + JAVA_PACKAGE + ")\\s*\\{");
+    private static final Pattern MODULE_NAME = Pattern.compile("^\\s*(?:open\\s+)?module\\s+(" + JAVA_PACKAGE + ")\\s*\\{", Pattern.MULTILINE);
 
     private static final Pattern EXPORTS = Pattern.compile(
         "[{;]\\s*exports\\s+(" + JAVA_PACKAGE + ")(?:\\s+to\\s+" + JAVA_PACKAGE + ")?\\s*(?=;)",

File: modules/core/src/test/java/org/lwjgl/demo/util/IOUtil.java
Patch:
@@ -66,7 +66,7 @@ public static ByteBuffer ioResourceToByteBuffer(String resource, int bufferSize)
         }
 
         buffer.flip();
-        return buffer;
+        return buffer.slice();
     }
 
 }
\ No newline at end of file

File: modules/core/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -102,7 +102,7 @@ public static void main(String[] args) {
 
     public GLFWDemo() {
         try {
-            this.ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 160 * 1024);
+            this.ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 512 * 1024);
         } catch (IOException e) {
             throw new RuntimeException(e);
         }

File: modules/core/src/test/java/org/lwjgl/demo/stb/Truetype.java
Patch:
@@ -32,7 +32,7 @@ private Truetype(String filePath) {
         super(24, filePath);
 
         try {
-            ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 160 * 1024);
+            ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 512 * 1024);
         } catch (IOException e) {
             throw new RuntimeException(e);
         }

File: modules/core/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -91,7 +91,7 @@ private void load_fonts() {
         chardata = STBTTPackedchar.malloc(6 * 128);
 
         try (STBTTPackContext pc = STBTTPackContext.malloc()) {
-            ByteBuffer ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 160 * 1024);
+            ByteBuffer ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 512 * 1024);
 
             ByteBuffer bitmap = BufferUtils.createByteBuffer(BITMAP_W * BITMAP_H);
 

File: modules/core/src/test/java/org/lwjgl/demo/util/IOUtil.java
Patch:
@@ -59,7 +59,7 @@ public static ByteBuffer ioResourceToByteBuffer(String resource, int bufferSize)
                         break;
                     }
                     if (buffer.remaining() == 0) {
-                        buffer = resizeBuffer(buffer, buffer.capacity() * 2);
+                        buffer = resizeBuffer(buffer, buffer.capacity() * 3 / 2); // 50%
                     }
                 }
             }

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -172,7 +172,7 @@ static long track(long address, long size) {
                     THREADS.put(threadId, t.getName());
                 }
 
-                Allocation allocation = ALLOCATIONS.put(address, new Allocation(stackWalkGetTrace(4, MemoryUtil.class), size));
+                Allocation allocation = ALLOCATIONS.put(address, new Allocation(stackWalkGetTrace(), size));
                 if (allocation != null) {
                     throw new IllegalStateException("The memory address specified is already being tracked");
                 }

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/SVGDemo.java
Patch:
@@ -20,6 +20,7 @@
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.nanovg.NanoSVG.*;
 import static org.lwjgl.opengl.GL11.*;
+import static org.lwjgl.opengl.GL12.*;
 import static org.lwjgl.stb.STBImageResize.*;
 import static org.lwjgl.system.MemoryUtil.*;
 
@@ -251,6 +252,8 @@ private int createTexture() {
         glBindTexture(GL_TEXTURE_2D, texID);
         glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
         glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
+        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
 
         premultiplyAlpha();
 

File: modules/core/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -17,6 +17,7 @@
 import static org.lwjgl.glfw.Callbacks.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opengl.GL11.*;
+import static org.lwjgl.opengl.GL12.*;
 import static org.lwjgl.stb.STBImage.*;
 import static org.lwjgl.stb.STBImageResize.*;
 import static org.lwjgl.system.MemoryStack.*;
@@ -217,6 +218,8 @@ private int createTexture() {
         glBindTexture(GL_TEXTURE_2D, texID);
         glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
         glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
+        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
 
         int format;
         if (comp == 3) {

File: modules/core/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -278,6 +278,7 @@ private void loop() {
         int texID = createTexture();
 
         glEnable(GL_TEXTURE_2D);
+        glClearColor(43f / 255f, 43f / 255f, 43f / 255f, 0f);
 
         while (!glfwWindowShouldClose(window)) {
             glfwPollEvents();

File: modules/core/src/main/java/org/lwjgl/system/Library.java
Patch:
@@ -97,7 +97,7 @@ public static void loadSystem(
         String libName = Platform.get().mapLibraryName(name);
 
         // METHOD 2: org.lwjgl.librarypath
-        URL libURL = context.getResource("/" + libName);
+        URL libURL = context.getClassLoader().getResource(libName);
         if (libURL == null) {
             if (loadSystem(load, context, libName, Configuration.LIBRARY_PATH)) {
                 return;
@@ -215,7 +215,7 @@ public static SharedLibrary loadNative(Class<?> context, String name, boolean bu
         SharedLibrary lib;
 
         // METHOD 2: org.lwjgl.librarypath
-        URL libURL = context.getResource("/" + libName);
+        URL libURL = context.getClassLoader().getResource(libName);
         if (libURL == null) {
             lib = loadNative(context, libName, Configuration.LIBRARY_PATH);
             if (lib != null) {

File: modules/core/src/test/java/org/lwjgl/system/MemoryUtilTest.java
Patch:
@@ -64,7 +64,7 @@ public void testMemCopy() {
             src.put(i, (byte)i);
         }
 
-        memCopy(memAddress(src), memAddress(dst), src.capacity());
+        memCopy(src, dst);
 
         for (int i = 0; i < src.capacity(); i++) {
             assertEquals(src.get(i), dst.get(i));

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -26,7 +26,7 @@ static MemoryAllocator getInstance() {
             return (MemoryAllocator)allocator;
         }
 
-        if (!"system".equals(allocator)) {
+        if (!((allocator == null && Platform.get() == Platform.WINDOWS) || "system".equals(allocator))) {
             String className;
             if (allocator == null || "jemalloc".equals(allocator)) {
                 className = "org.lwjgl.system.jemalloc.JEmallocAllocator";

File: modules/core/src/main/java/org/lwjgl/glfw/Callbacks.java
Patch:
@@ -20,7 +20,7 @@ private Callbacks() {}
      *
      * @param window the GLFW window
      */
-    public static void glfwFreeCallbacks(long window) {
+    public static void glfwFreeCallbacks(@NativeType("GLFWwindow *") long window) {
         if (Checks.CHECKS) {
             check(window);
         }

File: modules/core/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -308,8 +308,8 @@ static void addCLVersions(int MAJOR, int MINOR, Set<String> supportedExtensions)
         addCLVersions(
             MAJOR, MINOR, supportedExtensions, "",
             new int[][] {
-                {0, 1, 2},    // 10, 11, 12
-                {0, 1},       // 20, 21
+                {0, 1, 2}, // 10, 11, 12
+                {0, 1, 2}, // 20, 21, 22
             }
         );
 

File: modules/generator/src/main/java/org/lwjgl/system/FieldSummaryPostProcess.java
Patch:
@@ -10,7 +10,7 @@
 final class FieldSummaryPostProcess {
 
     /*
-	Group 1: Row class
+    Group 1: Row class
     Group 2: Field type
     Group 3: Link URL
     Group 4: Field name

File: modules/core/src/test/java/org/lwjgl/demo/vulkan/HelloVulkan.java
Patch:
@@ -1883,8 +1883,8 @@ private void demo_cleanup() {
 		vkDestroySurfaceKHR(inst, surface, null);
 		if ( msg_callback != NULL )
 			vkDestroyDebugReportCallbackEXT(inst, msg_callback, null);
-		dbgFunc.free();
 		vkDestroyInstance(inst, null);
+		dbgFunc.free();
 
 		gpu_features.free();
 		gpu_props.free();

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -73,7 +73,7 @@ public final class GL {
 	private static GLXCapabilities capabilitiesGLX;
 
 	static {
-		Library.loadSystem(System::loadLibrary, GL.class, Platform.mapLibraryNameBundled("lwjgl_opengl"));
+		Library.loadSystem(System::load, System::loadLibrary, GL.class, Platform.mapLibraryNameBundled("lwjgl_opengl"));
 
 		MAX_VERSION = apiParseVersion(Configuration.OPENGL_MAXVERSION);
 

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -58,7 +58,7 @@ public final class GLES {
 	private static ICD icd = new ICDStatic();
 
 	static {
-		Library.loadSystem(System::loadLibrary, GLES.class, Platform.mapLibraryNameBundled("lwjgl_opengles"));
+		Library.loadSystem(System::load, System::loadLibrary, GLES.class, Platform.mapLibraryNameBundled("lwjgl_opengles"));
 
 		MAX_VERSION = apiParseVersion(Configuration.OPENGLES_MAXVERSION);
 

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -73,7 +73,7 @@ public final class GL {
 	private static GLXCapabilities capabilitiesGLX;
 
 	static {
-		Library.loadSystem(GL.class, Platform.mapLibraryNameBundled("lwjgl_opengl"));
+		Library.loadSystem(System::loadLibrary, GL.class, Platform.mapLibraryNameBundled("lwjgl_opengl"));
 
 		MAX_VERSION = apiParseVersion(Configuration.OPENGL_MAXVERSION);
 

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -58,7 +58,7 @@ public final class GLES {
 	private static ICD icd = new ICDStatic();
 
 	static {
-		Library.loadSystem(GLES.class, Platform.mapLibraryNameBundled("lwjgl_opengles"));
+		Library.loadSystem(System::loadLibrary, GLES.class, Platform.mapLibraryNameBundled("lwjgl_opengles"));
 
 		MAX_VERSION = apiParseVersion(Configuration.OPENGLES_MAXVERSION);
 

File: modules/core/src/main/java/org/lwjgl/openal/AL.java
Patch:
@@ -145,7 +145,7 @@ public static ALCapabilities createCapabilities(ALCCapabilities alcCaps) {
 				throw new IllegalStateException("Core OpenAL functions could not be found. Make sure that the OpenAL library has been loaded correctly.");
 
 			long versionString = invokeP(GetString, AL_VERSION);
-			if ( versionString == NULL || callI(GetError) != AL_NO_ERROR )
+			if ( versionString == NULL || invokeI(GetError) != AL_NO_ERROR )
 				throw new IllegalStateException("There is no OpenAL context current in the current thread or process.");
 
 			APIVersion apiVersion = apiParseVersion(memASCII(versionString));

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -157,6 +157,7 @@ public static FunctionProvider getFunctionProvider() {
 	public static void setCapabilities(GLESCapabilities caps) {
 		capabilitiesTLS.set(caps);
 		ThreadLocalUtil.setEnv(caps == null ? NULL : memAddress(caps.addresses), 3);
+		icd.set(caps);
 	}
 
 	/**

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -565,7 +565,7 @@ public static GLXCapabilities createCapabilitiesGLX(long display, int screen) {
 			IntBuffer piMajor = stack.ints(0);
 			IntBuffer piMinor = stack.ints(0);
 
-			if ( glXQueryVersion(display, piMajor, piMinor) == 0 )
+			if ( !glXQueryVersion(display, piMajor, piMinor) )
 				throw new IllegalStateException("Failed to query GLX version");
 
 			majorVersion = piMajor.get(0);

File: modules/core/src/test/java/org/lwjgl/opencl/CLTest.java
Patch:
@@ -157,7 +157,7 @@ public void testNativeKernel() {
 			for ( int i = 0; i < bufferContents.capacity(); i++ )
 				bufferContents.put(i, (byte)i);
 
-			checkCLError(clEnqueueWriteBuffer(queue, buffer, CL_TRUE, 0, bufferContents, null, null));
+			checkCLError(clEnqueueWriteBuffer(queue, buffer, true, 0, bufferContents, null, null));
 
 			// Prepare enqueue arguments
 

File: modules/generator/src/main/java/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -445,14 +445,12 @@ private static String formatFunctions(String input, String prefix, boolean prefi
 					builder.append('\t');
 					// const
 					if ( paramMatcher.group(1) != null || paramMatcher.group(4) != null )
-						builder.append("(const..");
+						builder.append("const..");
 					// type
 					formatType(paramMatcher, builder, prefixTypes ? prefix : "");
 					// pointer
 					if ( paramMatcher.group(5) != null )
 						writerPointer(builder, paramMatcher);
-					if ( paramMatcher.group(1) != null )
-						builder.append(')');
 					builder.append("(\n");
 					builder.append("\t\t\"");
 					builder.append(strip(paramMatcher.group(6), prefix));

File: modules/core/src/test/java/org/lwjgl/system/dyncall/DynCallTest.java
Patch:
@@ -54,7 +54,7 @@ public void testDynCall() {
 	}
 
 	private static long getPutIntAddress() {
-		try ( SharedLibrary lib = Library.loadNative(Library.JNI_LIBRARY_NAME) ) {
+		try ( SharedLibrary lib = Library.loadNative(Library.JNI_LIBRARY_NAME, true) ) {
 			long putInt = lib.getFunctionAddress(
 				Platform.get() == Platform.WINDOWS && Pointer.BITS32
 					? "_Java_org_lwjgl_system_MemoryAccessJNI_nputInt@20" // __stdcall (Win32)

File: modules/core/src/main/java/org/lwjgl/system/Pointer.java
Patch:
@@ -19,7 +19,7 @@
 public interface Pointer {
 
 	/** The pointer size in bytes. Will be 4 on a 32bit JVM and 8 on a 64bit one. */
-	int POINTER_SIZE = MemoryAccess.getPointerSize();
+	int POINTER_SIZE = MemoryAccessJNI.getPointerSize();
 
 	/** The pointer size power-of-two. Will be 2 on a 32bit JVM and 3 on a 64bit one. */
 	int POINTER_SHIFT = POINTER_SIZE == 8 ? 3 : 2;

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -442,7 +442,7 @@ private static WGLCapabilities createCapabilitiesWGLDummy() {
 				.style(CS_HREDRAW | CS_VREDRAW)
 				.hInstance(WindowsLibrary.HINSTANCE)
 				.lpszClassName(stack.UTF16("WGL"));
-			WNDCLASSEX.nlpfnWndProc(wc.address(), User32.Functions.DefWindowProc);
+			WNDCLASSEX.nlpfnWndProc(wc.address(), WindowProc.create(User32.Functions.DefWindowProc));
 
 			classAtom = RegisterClassEx(wc);
 			if ( classAtom == 0 )

File: modules/core/src/main/java/org/lwjgl/system/Library.java
Patch:
@@ -109,8 +109,8 @@ public static void loadSystem(String name) throws UnsatisfiedLinkError {
 					checkHash(libFile);
 				}
 				return;
-			} catch (Exception e) {
-				apiLog(String.format("\t%s not found in %s=%s", libName, JAVA_LIBRARY_PATH, paths));
+			} catch (Throwable t) {
+				apiLog(String.format("\t%s not found in %s", libName, JAVA_LIBRARY_PATH));
 			}
 		}
 

File: modules/core/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -172,7 +172,7 @@ else if ( caps.GL_KHR_debug ) {
 			ByteBuffer bitmap = memAlloc(BITMAP_W * BITMAP_H);
 
 			STBTTPackContext pc = STBTTPackContext.mallocStack(stack);
-			stbtt_PackBegin(pc, bitmap, BITMAP_W, BITMAP_H, 0, 1, null);
+			stbtt_PackBegin(pc, bitmap, BITMAP_W, BITMAP_H, 0, 1, NULL);
 			stbtt_PackSetOversampling(pc, 4, 4);
 			stbtt_PackFontRange(pc, ttf, 0, FONT_HEIGHT, 32, cdata);
 			stbtt_PackEnd(pc);

File: modules/core/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -101,7 +101,7 @@ private void load_fonts() {
 
 			ByteBuffer bitmap = BufferUtils.createByteBuffer(BITMAP_W * BITMAP_H);
 
-			stbtt_PackBegin(pc, bitmap, BITMAP_W, BITMAP_H, 0, 1, null);
+			stbtt_PackBegin(pc, bitmap, BITMAP_W, BITMAP_H, 0, 1, NULL);
 			for ( int i = 0; i < 2; i++ ) {
 				int p = (i * 3 + 0) * 128 + 32;
 				chardata.limit(p + 95);

File: modules/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -1331,7 +1331,7 @@ public static ByteBuffer memASCII(CharSequence text, boolean nullTerminated) {
 	 * @param text           the text to encode
 	 * @param nullTerminated if true, the text will be terminated with a '\0'.
 	 *
-	 * @return the encoded text or null
+	 * @return the number of bytes of the encoded string
 	 */
 	public static int memASCII(CharSequence text, boolean nullTerminated, ByteBuffer target) {
 		return memASCII(text, nullTerminated, target, target.position());
@@ -1788,4 +1788,4 @@ public static String memUTF16(ByteBuffer buffer, int length, int offset) {
 		return MemoryTextUtil.decodeUTF16(buffer, length, offset);
 	}
 
-}
\ No newline at end of file
+}

File: modules/generator/src/main/java/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -381,7 +381,7 @@ private static Long validateInteger(String intValue) {
 
 	private static final Pattern TYPE_PATTERN = Pattern.compile(
 		"(?:const\\s+)?" + // const
-			"(?:(?:un)signed\\s+)?" + // (un)signed
+			"(?:(?:un)?signed\\s+)?" + // (un)signed
 			"(?:(?:struct|enum)\\s+)?" + // struct or enum (ignored)
 			"[0-9a-zA-Z_]++" + // type
 			"(?:\\s+const)?(?:\\s*[*]+\\s*|\\s+)" + // pointer. This is a little funny because we can have whitespace on either side of *

File: modules/core/src/test/java/org/lwjgl/demo/util/nfd/HelloNFD.java
Patch:
@@ -164,7 +164,7 @@ private static void checkResult(int result, PointerBuffer path) {
 			case NFD_OKAY:
 				System.out.println("Success!");
 				System.out.println(path.getStringUTF8(0));
-				nNFD_Free(path.get(0));
+				nNFDi_Free(path.get(0));
 				break;
 			case NFD_CANCEL:
 				System.out.println("User pressed cancel.");

File: modules/core/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -539,7 +539,7 @@ private void exportMesh() {
 				case NFD_OKAY:
 					long path = outPath.get(0);
 					npar_shapes_export(mesh.address(), path);
-					nNFD_Free(path);
+					nNFDi_Free(path);
 					break;
 				case NFD_ERROR:
 					System.err.format("Error: %s\n", NFD_GetError());

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/ExampleGL2.java
Patch:
@@ -85,8 +85,8 @@ public static void main(String[] args) {
 		GL.createCapabilities();
 
 		long vg = DEMO_MSAA
-			? nvgCreateGL2(NVG_STENCIL_STROKES | NVG_DEBUG)
-			: nvgCreateGL2(NVG_ANTIALIAS | NVG_STENCIL_STROKES | NVG_DEBUG);
+			? nvgCreate(NVG_STENCIL_STROKES | NVG_DEBUG)
+			: nvgCreate(NVG_ANTIALIAS | NVG_STENCIL_STROKES | NVG_DEBUG);
 
 		if ( vg == NULL )
 			throw new RuntimeException("Could not init nanovg.");
@@ -138,7 +138,7 @@ public static void main(String[] args) {
 
 		freeDemoData(vg, data);
 
-		nvgDeleteGL2(vg);
+		nvgDelete(vg);
 
 		glfwFreeCallbacks(window);
 		glfwTerminate();

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/ExampleGL3.java
Patch:
@@ -99,8 +99,8 @@ public static void main(String[] args) {
 		GL.createCapabilities();
 
 		long vg = DEMO_MSAA
-			? nvgCreateGL3(NVG_STENCIL_STROKES | NVG_DEBUG)
-			: nvgCreateGL3(NVG_ANTIALIAS | NVG_STENCIL_STROKES | NVG_DEBUG);
+			? nvgCreate(NVG_STENCIL_STROKES | NVG_DEBUG)
+			: nvgCreate(NVG_ANTIALIAS | NVG_STENCIL_STROKES | NVG_DEBUG);
 
 		if ( vg == NULL ) {
 			throw new RuntimeException("Could not init nanovg.");
@@ -174,7 +174,7 @@ public static void main(String[] args) {
 
 		freeDemoData(vg, data);
 
-		nvgDeleteGL3(vg);
+		nvgDelete(vg);
 
 		System.out.printf("Average Frame Time: %.2f ms\n", getGraphAverage(fps) * 1000.0f);
 		System.out.printf("          CPU Time: %.2f ms\n", getGraphAverage(cpuGraph) * 1000.0f);

File: modules/core/src/test/java/org/lwjgl/demo/bgfx/HelloBGFX.java
Patch:
@@ -14,6 +14,7 @@
 import java.nio.ByteBuffer;
 
 import static org.lwjgl.bgfx.BGFX.*;
+import static org.lwjgl.bgfx.BGFXPlatform.*;
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.system.MemoryUtil.*;
 
@@ -29,7 +30,6 @@ private HelloBGFX() {}
 
 	@SuppressWarnings("UnnecessaryLocalVariable")
 	public static void main(String[] args) {
-
 		int renderer = BGFX_RENDERER_TYPE_COUNT;
 		int pciId = BGFX_PCI_ID_NONE;
 		int width = 1280;
@@ -123,4 +123,4 @@ public static void main(String[] args) {
 		glfwTerminate();
 	}
 
-}
+}
\ No newline at end of file

File: modules/generator/src/main/java/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -1,4 +1,4 @@
-/* 
+/*
  * Copyright LWJGL. All rights reserved.
  * License terms: https://www.lwjgl.org/license
  */

File: modules/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -52,7 +52,7 @@ private static PrintStream getDebugStream() {
 		Object state = Configuration.DEBUG_STREAM.get();
 		if ( state instanceof String ) {
 			try {
-				Supplier<PrintStream> factory = (Supplier<PrintStream>)Class.forName((String)state).newInstance();
+				Supplier<PrintStream> factory = (Supplier<PrintStream>)Class.forName((String)state).getConstructor().newInstance();
 				debugStream = factory.get();
 			} catch (Exception e) {
 				e.printStackTrace();

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -31,7 +31,7 @@ static MemoryAllocator getInstance() {
 			try {
 				// check if the jemalloc library is available
 				Class<?> JEmallocAllocator = Class.forName("org.lwjgl.system.jemalloc.JEmallocAllocator");
-				return (MemoryAllocator)JEmallocAllocator.newInstance();
+				return (MemoryAllocator)JEmallocAllocator.getConstructor().newInstance();
 			} catch (Throwable t) {
 				if ( Checks.DEBUG )
 					t.printStackTrace(DEBUG_STREAM);
@@ -42,7 +42,7 @@ static MemoryAllocator getInstance() {
 			return new StdlibAllocator();
 		} else {
 			try {
-				return (MemoryAllocator)Class.forName(allocator.toString()).newInstance();
+				return (MemoryAllocator)Class.forName(allocator.toString()).getConstructor().newInstance();
 			} catch (Throwable t) {
 				throw new RuntimeException("Failed to instantiate custom memory allocator: " + allocator);
 			}

File: modules/core/src/test/java/org/lwjgl/demo/openal/ALCDemo.java
Patch:
@@ -85,7 +85,7 @@ private static void testPlayback() {
 			ShortBuffer pcm = readVorbis("demo/footsteps.ogg", 32 * 1024, info);
 
 			//copy to buffer
-			alBufferData(buffer, AL_FORMAT_MONO16, pcm, info.sample_rate());
+			alBufferData(buffer, info.channels() == 1 ? AL_FORMAT_MONO16 : AL_FORMAT_STEREO16, pcm, info.sample_rate());
 			checkALError();
 		}
 
@@ -141,7 +141,7 @@ static ShortBuffer readVorbis(String resource, int bufferSize, STBVorbisInfo inf
 
 		ShortBuffer pcm = BufferUtils.createShortBuffer(lengthSamples);
 
-		stb_vorbis_get_samples_short_interleaved(decoder, channels, pcm);
+		pcm.limit(stb_vorbis_get_samples_short_interleaved(decoder, channels, pcm) * channels);
 		stb_vorbis_close(decoder);
 
 		return pcm;

File: modules/core/src/main/java/org/lwjgl/openal/ALC.java
Patch:
@@ -64,7 +64,7 @@ public static void create() {
 				throw new IllegalStateException();
 		}
 
-		create(Configuration.OPENAL_LIBRARY_NAME.get(Pointer.BITS64 ? libName : libName + "32"));
+		create(Configuration.OPENAL_LIBRARY_NAME.get(Platform.mapLibraryNameBundled(libName)));
 	}
 
 	private static class SharedLibraryAL extends SharedLibrary.Delegate implements FunctionProviderLocal {

File: modules/core/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -57,13 +57,13 @@ private Image(String imagePath) {
 
 		// Use info to read image metadata without decoding the entire image.
 		// We don't need this for this demo, just testing the API.
-		if ( stbi_info_from_memory(imageBuffer, w, h, comp) == 0 )
+		if ( !stbi_info_from_memory(imageBuffer, w, h, comp) )
 			throw new RuntimeException("Failed to read image information: " + stbi_failure_reason());
 
 		System.out.println("Image width: " + w.get(0));
 		System.out.println("Image height: " + h.get(0));
 		System.out.println("Image components: " + comp.get(0));
-		System.out.println("Image HDR: " + (stbi_is_hdr_from_memory(imageBuffer) == 1));
+		System.out.println("Image HDR: " + stbi_is_hdr_from_memory(imageBuffer));
 
 		// Decode the image
 		image = stbi_load_from_memory(imageBuffer, w, h, comp, 0);

File: modules/core/src/test/java/org/lwjgl/demo/stb/Vorbis.java
Patch:
@@ -55,7 +55,7 @@ public static void main(String[] args) {
 		ALCCapabilities deviceCaps = ALC.createCapabilities(device);
 
 		long context = alcCreateContext(device, (IntBuffer)null);
-		if ( device == NULL )
+		if ( context == NULL )
 			throw new IllegalStateException("Failed to create an OpenAL context.");
 
 		alcMakeContextCurrent(context);

File: modules/core/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -53,7 +53,7 @@ public static void create() {
 				CL = Library.loadNative(Configuration.OPENCL_LIBRARY_NAME, "OpenCL");
 				break;
 			case MACOSX:
-				CL = Library.loadNative(Configuration.OPENCL_LIBRARY_NAME, "OpenCL", "/System/Library/Frameworks/OpenCL.framework");
+				CL = Library.loadNative(Configuration.OPENCL_LIBRARY_NAME, "/System/Library/Frameworks/OpenCL.framework");
 				break;
 			default:
 				throw new IllegalStateException();

File: modules/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -93,7 +93,7 @@ public static Optional<String> apiGetManifestValue(String attributeName) {
 			String classURL = url.toString();
 			if ( classURL.startsWith("jar:") ) {
 				try ( InputStream stream = new URL(classURL.substring(0, classURL.lastIndexOf("!") + 1) + '/' + JarFile.MANIFEST_NAME).openStream() ) {
-					return Optional.ofNullable(new Manifest(stream).getAttributes("org/lwjgl/").getValue(attributeName));
+					return Optional.ofNullable(new Manifest(stream).getAttributes("org/lwjgl/")).map(attr -> attr.getValue(attributeName));
 				} catch (Exception e) {
 					e.printStackTrace(APIUtil.DEBUG_STREAM);
 				}

File: modules/core/src/main/java/org/lwjgl/system/Struct.java
Patch:
@@ -12,7 +12,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /** Base class of all struct implementations. */
-public abstract class Struct extends Pointer.Default implements NativeResource {
+public abstract class Struct extends Pointer.Default {
 
 	static {
 		Library.initialize();
@@ -39,7 +39,6 @@ public void clear() {
 	 *
 	 * <p>This method should not be used if the memory backing this struct is not owned by the struct.</p>
 	 */
-	@Override
 	public void free() {
 		nmemFree(address());
 	}

File: modules/core/src/main/java/org/lwjgl/system/StructBuffer.java
Patch:
@@ -9,7 +9,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /** This is the base class of struct data container implementations. Its interface mirrors the NIO API for convenience. */
-public abstract class StructBuffer<T extends Struct, SELF extends StructBuffer<T, SELF>> implements Pointer, NativeResource {
+public abstract class StructBuffer<T extends Struct, SELF extends StructBuffer<T, SELF>> implements Pointer {
 
 	private long address;
 
@@ -67,7 +67,6 @@ public long address(int position) {
 	 *
 	 * <p>This method should not be used if the memory backing this struct buffer is not owned by the struct buffer.</p>
 	 */
-	@Override
 	public void free() {
 		nmemFree(address0());
 	}

File: modules/core/src/main/java/org/lwjgl/system/SharedLibraryLoader.java
Patch:
@@ -33,7 +33,7 @@ private SharedLibraryLoader() {
 	 * Extracts the LWJGL native libraries from the classpath to a temporary directory and prepends the path to that directory to the
 	 * {@link Configuration#LIBRARY_PATH} option.
 	 */
-	static void load() {
+	private static void load() {
 		try {
 			// Extract the lwjgl shared library and get the library path
 			extractPath = extractFile(Platform.get().mapLibraryName(Library.JNI_LIBRARY_NAME), null).getParentFile();

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -323,7 +323,7 @@ public static GLCapabilities createCapabilities(boolean forwardCompatible) {
 
 			int errorCode = callI(GetError);
 			if ( errorCode != GL_NO_ERROR )
-				apiLog(String.format("An OpenGL context was in an error state before the creation of its capabilities instance. Error: 0x%X" + errorCode));
+				apiLog(String.format("An OpenGL context was in an error state before the creation of its capabilities instance. Error: 0x%X", errorCode));
 
 			int majorVersion;
 			int minorVersion;
@@ -665,4 +665,4 @@ private static final class WriteOnce {
 
 	}
 
-}
\ No newline at end of file
+}

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -323,7 +323,7 @@ public static GLCapabilities createCapabilities(boolean forwardCompatible) {
 
 			int errorCode = callI(GetError);
 			if ( errorCode != GL_NO_ERROR )
-				apiLog(String.format("An OpenGL context was in an error state before the creation of its capabilities instance. Error: 0x%X" + errorCode));
+				apiLog(String.format("An OpenGL context was in an error state before the creation of its capabilities instance. Error: 0x%X", errorCode));
 
 			int majorVersion;
 			int minorVersion;
@@ -665,4 +665,4 @@ private static final class WriteOnce {
 
 	}
 
-}
\ No newline at end of file
+}

File: modules/core/src/main/java/org/lwjgl/system/Pointer.java
Patch:
@@ -41,7 +41,7 @@ public interface Pointer {
 	abstract class Default implements Pointer {
 
 		// Removed final due to JDK-8139758. TODO: Restore if the fix is backported to JDK 8.
-		protected long address;
+		private long address;
 
 		protected Default(long address) {
 			this.address = address;

File: modules/core/src/test/java/org/lwjgl/demo/nuklear/GLFWDemo.java
Patch:
@@ -273,7 +273,8 @@ else if ( caps.GL_KHR_debug ) {
 		nk_glfw3_shutdown();
 
 		glfwFreeCallbacks(win);
-		debugProc.free();
+		if ( debugProc != null )
+			debugProc.free();
 		glfwTerminate();
 		glfwSetErrorCallback(null).free();
 	}

File: modules/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -153,6 +153,9 @@ public static long apiCreateCallback(CallbackI function, String signature, boole
 		if ( handle == NULL )
 			throw new IllegalStateException("Failed to create the DCCallback object");
 
+		if ( Configuration.DEBUG_MEMORY_ALLOCATOR.get(false) )
+			MemoryManage.DebugAllocator.track(handle, 2 * POINTER_SIZE);
+
 		return handle;
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -215,7 +215,7 @@ public void config(long malloc, long calloc, long realloc, long free, long align
 			allocator.config(malloc, calloc, realloc, free, aligned_alloc, aligned_free);
 		}
 
-		private static long track(long address, long size) {
+		static long track(long address, long size) {
 			if ( address != NULL ) {
 				Thread t = Thread.currentThread();
 				Long threadId = t.getId();
@@ -237,7 +237,7 @@ private static long track(long address, long size) {
 			return address;
 		}
 
-		private static void untrack(long address) {
+		static void untrack(long address) {
 			if ( address == NULL )
 				return;
 

File: modules/core/src/test/java/org/lwjgl/demo/stb/Truetype.java
Patch:
@@ -113,7 +113,7 @@ private void renderText(STBTTBakedChar.Buffer cdata, int BITMAP_W, int BITMAP_H)
 					continue;
 				} else if ( c < 32 || 128 <= c )
 					continue;
-				stbtt_GetBakedQuad(cdata, BITMAP_W, BITMAP_H, c - 32, x, y, q, 1);
+				stbtt_GetBakedQuad(cdata, BITMAP_W, BITMAP_H, c - 32, x, y, q, true);
 
 				glTexCoord2f(q.s0(), q.t0());
 				glVertex2f(q.x0(), q.y0());

File: modules/core/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -175,7 +175,7 @@ private void print(float x, float y, int font, String text) {
 
 		glBegin(GL_QUADS);
 		for ( int i = 0; i < text.length(); i++ ) {
-			stbtt_GetPackedQuad(chardata, BITMAP_W, BITMAP_H, text.charAt(i), xb, yb, q, font == 0 && integer_align ? 1 : 0);
+			stbtt_GetPackedQuad(chardata, BITMAP_W, BITMAP_H, text.charAt(i), xb, yb, q, font == 0 && integer_align);
 			drawBoxTC(
 				q.x0(), q.y0(), q.x1(), q.y1(),
 				q.s0(), q.t0(), q.s1(), q.t1()

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -559,7 +559,7 @@ public static GLXCapabilities createCapabilitiesGLX(long display, int screen) {
 				throw new IllegalStateException("Failed to query GLX version");
 
 			majorVersion = piMajor.get(0);
-			minorVersion = piMinor.get(1);
+			minorVersion = piMinor.get(0);
 			if ( majorVersion != 1 )
 				throw new IllegalStateException("Invalid GLX major version: " + majorVersion);
 		}

File: modules/core/src/main/java/org/lwjgl/system/MemoryStack.java
Patch:
@@ -450,7 +450,7 @@ public DoubleBuffer doubles(double... values) {
 	/** Pointer version of {@link #malloc(int)}. */
 	public PointerBuffer mallocPointer(int size) { return memPointerBuffer(nmalloc(POINTER_SIZE, size << POINTER_SHIFT), size); }
 	/** Pointer version of {@link #calloc(int)}. */
-	public PointerBuffer callocPointer(int size) { return memPointerBuffer(ncalloc(POINTER_SIZE, size, POINTER_SHIFT), size); }
+	public PointerBuffer callocPointer(int size) { return memPointerBuffer(ncalloc(POINTER_SIZE, size, POINTER_SIZE), size); }
 
 	/** Single value version of {@link #mallocPointer}. */
 	public PointerBuffer pointers(long x) { return mallocPointer(1).put(0, x); }

File: modules/generator/src/main/java/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -288,12 +288,12 @@ private static String formatConstantsGL(String input, String prefix) {
 						builder.append("\"..");
 						builder.append(intValue);
 					} else {
-						builder.append("\" expr \"");
+						builder.append("\"..\"");
 						builder.append(intValue);
 						builder.append("\"");
 					}
 				} catch (NumberFormatException e) {
-					builder.append("\" expr \"");
+					builder.append("\"..\"");
 					builder.append(value.charAt(0) == '(' ? value.substring(1, value.length() - 1) : value);
 					builder.append("\"");
 				}

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -323,9 +323,7 @@ public static GLCapabilities createCapabilities(boolean forwardCompatible) {
 
 			int errorCode = callI(GetError);
 			if ( errorCode != GL_NO_ERROR )
-				apiLog(
-					"An OpenGL context was in an error state before the creation of its capabilities instance. Error: " + GLUtil.getErrorString(errorCode)
-				);
+				apiLog(String.format("An OpenGL context was in an error state before the creation of its capabilities instance. Error: 0x%X" + errorCode));
 
 			int majorVersion;
 			int minorVersion;

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -201,9 +201,7 @@ public static GLESCapabilities createCapabilities() {
 
 			int errorCode = invokeI(GetError);
 			if ( errorCode != GL_NO_ERROR )
-				apiLog(
-					"An OpenGL ES context was in an error state before the creation of its capabilities instance. Error: " + GLESUtil.getErrorString(errorCode)
-				);
+				apiLog(String.format("An OpenGL ES context was in an error state before the creation of its capabilities instance. Error: [0x%X]", errorCode));
 
 			int majorVersion;
 			int minorVersion;

File: modules/core/src/test/java/org/lwjgl/demo/openal/ALCDemo.java
Patch:
@@ -14,11 +14,11 @@
 import java.nio.ShortBuffer;
 import java.util.List;
 
+import static org.lwjgl.demo.openal.OpenALInfo.*;
 import static org.lwjgl.demo.util.IOUtil.*;
 import static org.lwjgl.openal.AL10.*;
 import static org.lwjgl.openal.ALC10.*;
 import static org.lwjgl.openal.ALC11.*;
-import static org.lwjgl.openal.ALUtil.*;
 import static org.lwjgl.stb.STBVorbis.*;
 import static org.lwjgl.system.MemoryUtil.*;
 import static org.testng.Assert.*;
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 		if ( deviceCaps.OpenALC11 ) {
 			List<String> devices = ALUtil.getStringList(NULL, ALC_ALL_DEVICES_SPECIFIER);
 			if ( devices == null )
-				ALUtil.checkALCError(NULL);
+				checkALCError(NULL);
 			else {
 				for ( int i = 0; i < devices.size(); i++ )
 					System.out.println(i + ": " + devices.get(i));

File: modules/core/src/test/java/org/lwjgl/demo/opencl/CLDemo.java
Patch:
@@ -17,7 +17,6 @@
 
 import static org.lwjgl.opencl.CL10.*;
 import static org.lwjgl.opencl.CL11.*;
-import static org.lwjgl.opencl.CLUtil.*;
 import static org.lwjgl.opencl.InfoUtil.*;
 import static org.lwjgl.opencl.KHRICD.*;
 import static org.lwjgl.system.MemoryStack.*;

File: modules/core/src/test/java/org/lwjgl/demo/opencl/CLGLInteropDemo.java
Patch:
@@ -18,9 +18,7 @@
 
 import static org.lwjgl.glfw.GLFW.*;
 import static org.lwjgl.opencl.CL10.*;
-import static org.lwjgl.opencl.CLUtil.*;
 import static org.lwjgl.opencl.InfoUtil.*;
-import static org.lwjgl.opencl.InfoUtil.getPlatformInfoStringASCII;
 import static org.lwjgl.opencl.KHRICD.*;
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;

File: modules/core/src/test/java/org/lwjgl/demo/opencl/Mandelbrot.java
Patch:
@@ -30,7 +30,6 @@
 import static org.lwjgl.glfw.GLFWNativeX11.*;
 import static org.lwjgl.opencl.CL10.*;
 import static org.lwjgl.opencl.CL10GL.*;
-import static org.lwjgl.opencl.CLUtil.*;
 import static org.lwjgl.opencl.InfoUtil.*;
 import static org.lwjgl.opencl.KHRGLSharing.*;
 import static org.lwjgl.opengl.ARBCLEvent.*;

File: modules/core/src/test/java/org/lwjgl/demo/vulkan/HelloVulkan.java
Patch:
@@ -304,7 +304,7 @@ private HelloVulkan() {
 
 	private static void check(int errcode) {
 		if ( errcode != 0 )
-			throw new IllegalStateException(VKUtil.translateVulkanResult(errcode));
+			throw new IllegalStateException(String.format("Vulkan error [0x%X]", errcode));
 	}
 
 	private static void demo_init_connection() {

File: modules/core/src/test/java/org/lwjgl/opencl/CLTest.java
Patch:
@@ -18,7 +18,6 @@
 
 import static org.lwjgl.opencl.CL10.*;
 import static org.lwjgl.opencl.CL11.*;
-import static org.lwjgl.opencl.CLUtil.*;
 import static org.lwjgl.opencl.InfoUtil.*;
 import static org.lwjgl.opencl.InfoUtil.getMemObjectInfoPointer;
 import static org.lwjgl.system.MemoryStack.*;

File: modules/core/src/main/java/org/lwjgl/BufferUtils.java
Patch:
@@ -136,9 +136,9 @@ public static FloatBuffer createFloatBuffer(int capacity) {
 	 * Allocates a direct native-order doublebuffer with the specified number
 	 * of elements.
 	 *
-	 * @param capacity The capacity, in floats
+	 * @param capacity The capacity, in doubles
 	 *
-	 * @return a FloatBuffer
+	 * @return a DoubleBuffer
 	 */
 	public static DoubleBuffer createDoubleBuffer(int capacity) {
 		return createByteBuffer(capacity << 3).asDoubleBuffer();
@@ -221,4 +221,4 @@ public static void zeroBuffer(DoubleBuffer buffer) {
 		memSet(memAddress(buffer), 0, buffer.remaining() << 3);
 	}
 
-}
\ No newline at end of file
+}

File: modules/core/src/main/java/org/lwjgl/BufferUtils.java
Patch:
@@ -136,9 +136,9 @@ public static FloatBuffer createFloatBuffer(int capacity) {
 	 * Allocates a direct native-order doublebuffer with the specified number
 	 * of elements.
 	 *
-	 * @param capacity The capacity, in floats
+	 * @param capacity The capacity, in doubles
 	 *
-	 * @return a FloatBuffer
+	 * @return a DoubleBuffer
 	 */
 	public static DoubleBuffer createDoubleBuffer(int capacity) {
 		return createByteBuffer(capacity << 3).asDoubleBuffer();
@@ -221,4 +221,4 @@ public static void zeroBuffer(DoubleBuffer buffer) {
 		memSet(memAddress(buffer), 0, buffer.remaining() << 3);
 	}
 
-}
\ No newline at end of file
+}

File: modules/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryBundle.java
Patch:
@@ -9,7 +9,6 @@
 
 import java.nio.ByteBuffer;
 
-import static org.lwjgl.system.APIUtil.*;
 import static org.lwjgl.system.Checks.*;
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;
@@ -31,9 +30,8 @@ private static long createBundle(String path) {
 
 			long bundleRef = CFBundleCreate(NULL, url);
 			if ( bundleRef == NULL )
-				throw new RuntimeException("Failed to dynamically load bundle: " + path);
+				throw new UnsatisfiedLinkError("Failed to dynamically load bundle: " + path);
 
-			apiLog("Loaded native library bundle: " + path);
 			return bundleRef;
 		} finally {
 			if ( url != NULL ) CFRelease(url);

File: modules/core/src/main/java/org/lwjgl/system/Configuration.java
Patch:
@@ -374,7 +374,6 @@ public void set(T value) {
 	 *
 	 * <p>If the option value has not been set, null will be returned.</p>
 	 */
-	@SuppressWarnings("unchecked")
 	public T get() {
 		return state;
 	}
@@ -386,7 +385,6 @@ public T get() {
 	 *
 	 * @param defaultValue the default value
 	 */
-	@SuppressWarnings("unchecked")
 	public T get(T defaultValue) {
 		T state = this.state;
 		if ( state == null )

File: modules/core/src/main/java/org/lwjgl/system/Struct.java
Patch:
@@ -18,6 +18,7 @@ public abstract class Struct extends Pointer.Default implements NativeResource {
 		Library.initialize();
 	}
 
+	@SuppressWarnings("unused")
 	private ByteBuffer container;
 
 	protected Struct(long address, ByteBuffer container) {

File: modules/core/src/main/java/org/lwjgl/system/ThreadLocalUtil.java
Patch:
@@ -35,7 +35,6 @@ private interface State {
 		ThreadLocalState get();
 	}
 
-	@SuppressWarnings("unchecked")
 	private static State getInstance() {
 		String tls = Configuration.THREAD_LOCAL_SPACE.get("unsafe");
 

File: modules/core/src/main/java/org/lwjgl/system/package-info.java
Patch:
@@ -21,10 +21,12 @@
  * the API of certain interfaces and classes will remain as stable as possible. This affects the following classes:</p>
  * <ul>
  * <li>{@link org.lwjgl.system.MemoryUtil MemoryUtil}, used for off-heap data access and memory allocation/deallocation.</li>
+ * <li>{@link org.lwjgl.system.MemoryStack MemoryStack}, used for emulated off-heap stack allocations.</li>
  * <li>{@link org.lwjgl.system.FunctionProvider FunctionProvider}, {@link org.lwjgl.system.Library Library} and
  * {@link org.lwjgl.system.SharedLibrary SharedLibrary}, used for loading shared libraries and accessing function pointers.</li>
  * <li>{@link org.lwjgl.system.Pointer Pointer}, used as off-heap resource abstractions.</li>
  * <li>{@link org.lwjgl.system.Configuration Configuration}, used for programmatic configuration at runtime.</li>
+ * <li>{@link org.lwjgl.system.Struct Struct} and {@link org.lwjgl.system.StructBuffer StructBuffer}, the base classes for struct types and struct buffers.</li>
  * </ul>
  */
 package org.lwjgl.system;

File: modules/core/src/main/java/org/lwjgl/system/MemoryAccess.java
Patch:
@@ -35,7 +35,7 @@ static MemoryAccessor getInstance() {
 				// Depends on sun.nio.ch.DirectBuffer and sun.reflect.FieldAccessor
 				accessor = new MemoryAccessorReflect();
 			} catch (Throwable t1) {
-				apiLog("[MemoryAccessor] Unsupported JVM detected, this will likely result in low performance. Please inform LWJGL developers.");
+				DEBUG_STREAM.println("[LWJGL] [MemoryAccessor] Unsupported JVM detected, this will likely result in low performance. Please inform LWJGL developers.");
 				accessor = new MemoryAccessorJNI();
 			}
 		}

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/Demo.java
Patch:
@@ -295,7 +295,7 @@ private static void drawEditBoxNum(
 
 		drawEditBoxBase(vg, x, y, w, h);
 
-		uw = nvgTextBounds(vg, 0, 0, units, NULL, null);
+		uw = nvgTextBounds(vg, 0, 0, units, NULL, (FloatBuffer)null);
 
 		nvgFontSize(vg, 18.0f);
 		nvgFontFace(vg, "sans");
@@ -358,11 +358,11 @@ private static void drawButton(long vg, ByteBuffer preicon, String text, float x
 
 			nvgFontSize(vg, 20.0f);
 			nvgFontFace(vg, "sans-bold");
-			tw = nvgTextBounds(vg, 0, 0, textEncoded, NULL, null);
+			tw = nvgTextBounds(vg, 0, 0, textEncoded, NULL, (FloatBuffer)null);
 			if ( preicon != null ) {
 				nvgFontSize(vg, h * 1.3f);
 				nvgFontFace(vg, "icons");
-				iw = nvgTextBounds(vg, 0, 0, preicon, NULL, null);
+				iw = nvgTextBounds(vg, 0, 0, preicon, NULL, (FloatBuffer)null);
 				iw += h * 0.15f;
 			}
 

File: modules/core/src/test/java/org/lwjgl/demo/openal/ALCDemo.java
Patch:
@@ -55,7 +55,7 @@ public static void main(String[] args) {
 		assertTrue(defaultDeviceSpecifier != null);
 		System.out.println("Default device: " + defaultDeviceSpecifier);
 
-		long context = alcCreateContext(device, null);
+		long context = alcCreateContext(device, (IntBuffer)null);
 		alcMakeContextCurrent(context);
 		AL.createCapabilities(deviceCaps);
 

File: modules/core/src/test/java/org/lwjgl/demo/openal/EFXTest.java
Patch:
@@ -254,7 +254,7 @@ private static void playbackTest() throws Exception {
 		}
 		System.out.println("EXTEfx found.");
 
-		long alContext = alcCreateContext(device, null);
+		long alContext = alcCreateContext(device, (IntBuffer)null);
 		alcMakeContextCurrent(alContext);
 		AL.createCapabilities(deviceCaps);
 
@@ -339,7 +339,7 @@ private static void efxUtilTest() throws Exception {
 		}
 		System.out.println("EXTEfx found.");
 
-		long alContext = alcCreateContext(device, null);
+		long alContext = alcCreateContext(device, (IntBuffer)null);
 		alcMakeContextCurrent(alContext);
 		AL.createCapabilities(deviceCaps);
 

File: modules/core/src/test/java/org/lwjgl/demo/openal/OpenALInfo.java
Patch:
@@ -6,6 +6,7 @@
 
 import org.lwjgl.openal.*;
 
+import java.nio.IntBuffer;
 import java.util.HashMap;
 import java.util.List;
 
@@ -32,7 +33,7 @@ protected void execute(String[] args) {
 
 		ALCCapabilities deviceCaps = ALC.createCapabilities(device);
 
-		long alContext = alcCreateContext(device, null);
+		long alContext = alcCreateContext(device, (IntBuffer)null);
 		ALUtil.checkALCError(device);
 
 		alcMakeContextCurrent(alContext);

File: modules/core/src/test/java/org/lwjgl/demo/stb/Vorbis.java
Patch:
@@ -54,7 +54,7 @@ public static void main(String[] args) {
 
 		ALCCapabilities deviceCaps = ALC.createCapabilities(device);
 
-		long context = alcCreateContext(device, null);
+		long context = alcCreateContext(device, (IntBuffer)null);
 		if ( device == NULL )
 			throw new IllegalStateException("Failed to create an OpenAL context.");
 

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -473,7 +473,7 @@ private static WGLCapabilities createCapabilitiesWGLDummy() {
 			if ( DescribePixelFormat(hdc, pixelFormat, pfd) == 0 )
 				windowsThrowException("Failed to obtain pixel format information");
 
-			if ( SetPixelFormat(hdc, pixelFormat, pfd) == 0 )
+			if ( !SetPixelFormat(hdc, pixelFormat, pfd) )
 				windowsThrowException("Failed to set the pixel format");
 
 			hglrc = checkPointer(wglCreateContext(hdc));

File: modules/core/src/main/java/org/lwjgl/system/windows/WindowsLibrary.java
Patch:
@@ -58,7 +58,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 
 	@Override
 	public void free() {
-		if ( FreeLibrary(address()) == FALSE )
+		if ( !FreeLibrary(address()) )
 			windowsThrowException("Failed to unload library: " + getName());
 	}
 

File: modules/core/src/test/java/org/lwjgl/demo/glfw/Gears.java
Patch:
@@ -51,7 +51,7 @@ private void run() {
 
 	private void init() {
 		errorCB = GLFWErrorCallback.createPrint().set();
-		if ( glfwInit() != GLFW_TRUE )
+		if ( !glfwInit() )
 			throw new IllegalStateException("Unable to initialize glfw");
 
 		glfwDefaultWindowHints();
@@ -92,7 +92,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 
 				switch ( key ) {
 					case GLFW_KEY_ESCAPE:
-						glfwSetWindowShouldClose(window, GLFW_TRUE);
+						glfwSetWindowShouldClose(window, true);
 						break;
 					case GLFW_KEY_F:
 						if ( glfwGetWindowMonitor(window) == NULL ) {
@@ -144,7 +144,7 @@ private void loop() {
 		long lastUpdate = System.currentTimeMillis();
 		int frames = 0;
 
-		while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window) ) {
 			glfwPollEvents();
 
 			renderLoop();

File: modules/core/src/test/java/org/lwjgl/demo/glfw/Threads.java
Patch:
@@ -35,7 +35,7 @@ private Threads() {
 	public static void main(String[] args) {
 		GLFWErrorCallback errorfun = GLFWErrorCallback.createPrint();
 		glfwSetErrorCallback(errorfun);
-		if ( glfwInit() != GLFW_TRUE )
+		if ( !glfwInit() )
 			throw new IllegalStateException("Failed to initialize GLFW.");
 
 		glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE);
@@ -51,7 +51,7 @@ public static void main(String[] args) {
 			GLFWKeyCallback keyfun;
 			glfwSetKeyCallback(window, keyfun = GLFWKeyCallback.create((window1, key, scancode, action, mods) -> {
 				if ( key == GLFW_KEY_ESCAPE && action == GLFW_RELEASE )
-					glfwSetWindowShouldClose(window1, GLFW_TRUE);
+					glfwSetWindowShouldClose(window1, true);
 			}));
 			glfwSetWindowPos(window, 200 + 250 * i, 200);
 			glfwShowWindow(window);
@@ -65,7 +65,7 @@ public static void main(String[] args) {
 			glfwWaitEvents();
 
 			for ( int i = 0; i < titles.length; i++ ) {
-				if ( glfwWindowShouldClose(threads[i].window) == GLFW_TRUE ) {
+				if ( !glfwWindowShouldClose(threads[i].window) ) {
 					quit.countDown();
 					break out;
 				}

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/ExampleFBO.java
Patch:
@@ -109,7 +109,7 @@ public static void main(String[] args) {
 		GLFWErrorCallback errorcb;
 		glfwSetErrorCallback(errorcb = GLFWErrorCallback.createThrow());
 
-		if ( glfwInit() == GLFW_FALSE )
+		if ( !glfwInit() )
 			throw new RuntimeException("Failed to init GLFW.");
 
 		GPUtimer gpuTimer = new GPUtimer();
@@ -142,7 +142,7 @@ public static void main(String[] args) {
 		GLFWKeyCallback key;
 		glfwSetKeyCallback(window, key = GLFWKeyCallback.create((windowHandle, keyCode, scancode, action, mods) -> {
 			if ( keyCode == GLFW_KEY_ESCAPE && action == GLFW_PRESS )
-				glfwSetWindowShouldClose(windowHandle, GL_TRUE);
+				glfwSetWindowShouldClose(windowHandle, true);
 		}));
 
 		glfwMakeContextCurrent(window);
@@ -175,7 +175,7 @@ public static void main(String[] args) {
 		glfwSetTime(0);
 		double prevt = glfwGetTime();
 
-		while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window) ) {
 			double t = glfwGetTime();
 			double dt = t - prevt;
 			prevt = t;

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/ExampleGL2.java
Patch:
@@ -53,7 +53,7 @@ public static void main(String[] args) {
 		GLFWErrorCallback errorcb;
 		glfwSetErrorCallback(errorcb = GLFWErrorCallback.createThrow());
 
-		if ( glfwInit() == GLFW_FALSE )
+		if ( !glfwInit() )
 			throw new RuntimeException("Failed to init GLFW.");
 
 		DemoData data = new DemoData();
@@ -75,7 +75,7 @@ public static void main(String[] args) {
 		GLFWKeyCallback key;
 		glfwSetKeyCallback(window, key = GLFWKeyCallback.create((windowHandle, keyCode, scancode, action, mods) -> {
 			if ( keyCode == GLFW_KEY_ESCAPE && action == GLFW_PRESS )
-				glfwSetWindowShouldClose(windowHandle, GLFW_TRUE);
+				glfwSetWindowShouldClose(windowHandle, true);
 			if ( keyCode == GLFW_KEY_SPACE && action == GLFW_PRESS )
 				blowup = !blowup;
 			if ( keyCode == GLFW_KEY_S && action == GLFW_PRESS )
@@ -102,7 +102,7 @@ public static void main(String[] args) {
 		glfwSetTime(0);
 		double prevt = glfwGetTime();
 
-		while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window) ) {
 			double t = glfwGetTime();
 			double dt = t - prevt;
 			prevt = t;

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/ExampleGL3.java
Patch:
@@ -54,7 +54,7 @@ public static void main(String[] args) {
 		GLFWErrorCallback errorcb;
 		glfwSetErrorCallback(errorcb = GLFWErrorCallback.createThrow());
 
-		if ( glfwInit() == GLFW_FALSE )
+		if ( !glfwInit() )
 			throw new RuntimeException("Failed to init GLFW.");
 
 		DemoData data = new DemoData();
@@ -89,7 +89,7 @@ public static void main(String[] args) {
 		GLFWKeyCallback key;
 		glfwSetKeyCallback(window, key = GLFWKeyCallback.create((windowHandle, keyCode, scancode, action, mods) -> {
 			if ( keyCode == GLFW_KEY_ESCAPE && action == GLFW_PRESS )
-				glfwSetWindowShouldClose(windowHandle, GLFW_TRUE);
+				glfwSetWindowShouldClose(windowHandle, true);
 			if ( keyCode == GLFW_KEY_SPACE && action == GLFW_PRESS )
 				blowup = !blowup;
 			if ( keyCode == GLFW_KEY_S && action == GLFW_PRESS )
@@ -119,7 +119,7 @@ public static void main(String[] args) {
 		glfwSetTime(0);
 		double prevt = glfwGetTime();
 
-		while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window) ) {
 			double t, dt;
 			float pxRatio;
 

File: modules/core/src/test/java/org/lwjgl/demo/opencl/CLGLInteropDemo.java
Patch:
@@ -86,7 +86,7 @@ public static void main(String... args) {
 
 		GLFWErrorCallback errorfun;
 		glfwSetErrorCallback(errorfun = GLFWErrorCallback.createPrint());
-		if ( glfwInit() != GLFW_TRUE ) {
+		if ( !glfwInit() ) {
 			System.out.println("Unable to initialize glfw");
 			System.exit(-1);
 		}

File: modules/core/src/test/java/org/lwjgl/demo/opencl/Mandelbrot.java
Patch:
@@ -392,7 +392,7 @@ public Mandelbrot(long platform, CLCapabilities platformCaps, GLFWWindow window,
 
 			switch ( key ) {
 				case GLFW_KEY_ESCAPE:
-					glfwSetWindowShouldClose(windowHandle, GLFW_TRUE);
+					glfwSetWindowShouldClose(windowHandle, true);
 					break;
 				case GLFW_KEY_D:
 					events.offer(() -> {
@@ -489,7 +489,7 @@ void renderLoop() {
 		long startTime = System.currentTimeMillis() + 5000;
 		long fps = 0;
 
-		while ( glfwWindowShouldClose(window.handle) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window.handle) ) {
 			Runnable event;
 			while ( (event = events.poll()) != null )
 				event.run();

File: modules/core/src/test/java/org/lwjgl/demo/stb/EasyFont.java
Patch:
@@ -43,7 +43,7 @@ protected void loop() {
 		glClearColor(43f / 255f, 43f / 255f, 43f / 255f, 0f); // BG color
 		glColor3f(169f / 255f, 183f / 255f, 198f / 255f); // Text color
 
-		while ( glfwWindowShouldClose(getWindow()) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(getWindow()) ) {
 			glfwPollEvents();
 
 			glClear(GL_COLOR_BUFFER_BIT);

File: modules/core/src/test/java/org/lwjgl/demo/stb/FontDemo.java
Patch:
@@ -95,7 +95,7 @@ protected FontDemo(int fontHeight, String filePath) {
 
 			switch ( key ) {
 				case GLFW_KEY_ESCAPE:
-					glfwSetWindowShouldClose(windowHandle, GLFW_TRUE);
+					glfwSetWindowShouldClose(windowHandle, true);
 					break;
 				case GLFW_KEY_PAGE_UP:
 					setLineOffset(lineOffset - wh / FontDemo.this.lineHeight);
@@ -169,7 +169,7 @@ protected void run(String title) {
 
 	private void init(String title) {
 		errorfun.set();
-		if ( glfwInit() != GLFW_TRUE )
+		if ( !glfwInit() )
 			throw new IllegalStateException("Unable to initialize GLFW");
 
 		glfwDefaultWindowHints();

File: modules/core/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -106,7 +106,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 
 				switch ( key ) {
 					case GLFW_KEY_ESCAPE:
-						glfwSetWindowShouldClose(window, GLFW_TRUE);
+						glfwSetWindowShouldClose(window, true);
 						break;
 					case GLFW_KEY_KP_ADD:
 					case GLFW_KEY_EQUAL:
@@ -160,7 +160,7 @@ private void run() {
 
 	private void init() {
 		errorfun.set();
-		if ( glfwInit() != GLFW_TRUE )
+		if ( !glfwInit() )
 			throw new IllegalStateException("Unable to initialize GLFW");
 
 		glfwDefaultWindowHints();
@@ -222,7 +222,7 @@ private void loop() {
 
 		glEnable(GL_TEXTURE_2D);
 
-		while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window) ) {
 			glfwPollEvents();
 
 			glClear(GL_COLOR_BUFFER_BIT);

File: modules/core/src/test/java/org/lwjgl/demo/stb/Truetype.java
Patch:
@@ -72,7 +72,7 @@ protected void loop() {
 
 		STBTTBakedChar.Buffer cdata = init(BITMAP_W, BITMAP_H);
 
-		while ( glfwWindowShouldClose(getWindow()) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(getWindow()) ) {
 			glfwPollEvents();
 
 			glClear(GL_COLOR_BUFFER_BIT);

File: modules/core/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -115,7 +115,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 
 				switch ( key ) {
 					case GLFW_KEY_ESCAPE:
-						glfwSetWindowShouldClose(window, GLFW_TRUE);
+						glfwSetWindowShouldClose(window, true);
 						break;
 					case GLFW_KEY_O:
 						font = (font + 1) % 3 + (font / 3) * 3;
@@ -337,7 +337,7 @@ private void loopmode(float dt) {
 
 	private void createWindow(String title) {
 		glfwSetErrorCallback(errorfun);
-		if ( glfwInit() != GLFW_TRUE )
+		if ( !glfwInit() )
 			throw new IllegalStateException("Unable to initialize GLFW");
 
 		glfwDefaultWindowHints();
@@ -381,7 +381,7 @@ private void run(String title) {
 			load_fonts();
 
 			long time = System.nanoTime();
-			while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+			while ( !glfwWindowShouldClose(window) ) {
 				glfwPollEvents();
 
 				long t = System.nanoTime();

File: modules/core/src/test/java/org/lwjgl/demo/system/jawt/LWJGLCanvas.java
Patch:
@@ -75,7 +75,7 @@ public void paint(Graphics g) {
 							createContext(dsi_win);
 							gears.initGLState();
 						} else {
-							if ( wglMakeCurrent(hdc, hglrc) == 0 )
+							if ( !wglMakeCurrent(hdc, hglrc) )
 								throw new IllegalStateException("wglMakeCurrent() failed");
 
 							GL.setCapabilities(caps);
@@ -129,7 +129,7 @@ private void createContext(JAWTWin32DrawingSurfaceInfo dsi_win) {
 				if ( pixelFormat < 1 )
 					throw new IllegalStateException("ChoosePixelFormat() failed: " + WinBase.getLastError());
 
-				if ( SetPixelFormat(hdc, pixelFormat, null) == 0 )
+				if ( !SetPixelFormat(hdc, pixelFormat, null) )
 					throw new IllegalStateException("SetPixelFormat() failed: " + WinBase.getLastError());
 			}
 
@@ -138,7 +138,7 @@ private void createContext(JAWTWin32DrawingSurfaceInfo dsi_win) {
 			if ( hglrc == NULL )
 				throw new IllegalStateException("wglCreateContext() failed");
 
-			if ( wglMakeCurrent(hdc, hglrc) == 0 )
+			if ( !wglMakeCurrent(hdc, hglrc) )
 				throw new IllegalStateException("wglMakeCurrent() failed");
 
 			caps = GL.createCapabilities();

File: modules/core/src/test/java/org/lwjgl/demo/util/nfd/HelloNFD.java
Patch:
@@ -42,7 +42,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 
 				switch ( key ) {
 					case GLFW_KEY_ESCAPE:
-						glfwSetWindowShouldClose(window, GLFW_TRUE);
+						glfwSetWindowShouldClose(window, true);
 						break;
 					case GLFW_KEY_O:
 						if ( (mods & mod) != 0 ) {
@@ -61,7 +61,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 		};
 
 		errorfun.set();
-		if ( glfwInit() != GLFW_TRUE )
+		if ( !glfwInit() )
 			throw new IllegalStateException("Unable to initialize GLFW");
 
 		long window = glfwCreateWindow(300, 300, "Hello NativeFileDialog!", NULL, NULL);
@@ -86,7 +86,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 		System.out.println("Press " + modDescr + "+O to launch the single file open dialog.");
 		System.out.println("Press " + modDescr + "+Shift+O to launch the multi file open dialog.");
 		System.out.println("Press " + modDescr + "+S to launch the file save dialog.");
-		while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window) ) {
 			glfwPollEvents();
 
 			glClear(GL_COLOR_BUFFER_BIT);

File: modules/core/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -131,7 +131,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 						updateHUD(mesh == null);
 						break;
 					case GLFW_KEY_ESCAPE:
-						glfwSetWindowShouldClose(window, GLFW_TRUE);
+						glfwSetWindowShouldClose(window, true);
 						break;
 				}
 			}
@@ -155,7 +155,7 @@ public void invoke(long window, int width, int height) {
 
 	private void init() {
 		errorCB.set();
-		if ( glfwInit() != GLFW_TRUE )
+		if ( !glfwInit() )
 			throw new IllegalStateException("Unable to initialize GLFW");
 
 		glfwDefaultWindowHints();
@@ -484,7 +484,7 @@ private void cleanup() {
 	private void run() {
 		init();
 
-		while ( glfwWindowShouldClose(window) == GLFW_FALSE ) {
+		while ( !glfwWindowShouldClose(window) ) {
 			glfwPollEvents();
 
 			glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

File: modules/core/src/test/java/org/lwjgl/demo/nanovg/Demo.java
Patch:
@@ -362,11 +362,11 @@ private static void drawButton(long vg, ByteBuffer preicon, String text, float x
 
 			nvgFontSize(vg, 20.0f);
 			nvgFontFace(vg, "sans-bold");
-			tw = nvgTextBounds(vg, 0, 0, textEncoded, NULL, (ByteBuffer)null);
+			tw = nvgTextBounds(vg, 0, 0, textEncoded, NULL, null);
 			if ( preicon != null ) {
 				nvgFontSize(vg, h * 1.3f);
 				nvgFontFace(vg, "icons");
-				iw = nvgTextBounds(vg, 0, 0, preicon, NULL, (ByteBuffer)null);
+				iw = nvgTextBounds(vg, 0, 0, preicon, NULL, null);
 				iw += h * 0.15f;
 			}
 

File: modules/core/src/test/java/org/lwjgl/demo/openal/OpenALInfo.java
Patch:
@@ -35,7 +35,7 @@ protected void execute(String[] args) {
 
 		ALCCapabilities deviceCaps = ALC.createCapabilities(device);
 
-		long alContext = alcCreateContext(device, (ByteBuffer)null);
+		long alContext = alcCreateContext(device, null);
 		ALUtil.checkALCError(device);
 
 		alcMakeContextCurrent(alContext);

File: modules/core/src/test/java/org/lwjgl/demo/util/par/ParShapesDemo.java
Patch:
@@ -171,7 +171,7 @@ private void init() {
 		GL.createCapabilities();
 		debugCB = GLUtil.setupDebugMessageCallback();
 		if ( debugCB != null && GL.getCapabilities().OpenGL43 )
-			glDebugMessageControl(GL_DEBUG_SOURCE_API, GL_DEBUG_TYPE_OTHER, GL_DEBUG_SEVERITY_NOTIFICATION, 0, null, false);
+			glDebugMessageControl(GL_DEBUG_SOURCE_API, GL_DEBUG_TYPE_OTHER, GL_DEBUG_SEVERITY_NOTIFICATION, null, false);
 
 		keyCB.set(window);
 		framebufferSizeCB.set(window);

File: modules/core/src/main/java/org/lwjgl/system/FunctionProvider.java
Patch:
@@ -32,7 +32,7 @@ abstract class Default implements FunctionProvider {
 		public long getFunctionAddress(CharSequence functionName) {
 			MemoryStack stack = stackPush();
 			try {
-				return getFunctionAddress(stack.ASCII(functionName, true));
+				return getFunctionAddress(stack.ASCII(functionName));
 			} finally {
 				stack.pop();
 			}

File: modules/core/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -42,7 +42,7 @@ public final class EGL {
 	private static EGLCapabilities caps;
 
 	static {
-		if ( !Configuration.EGL_EXPLICIT_INIT.get() )
+		if ( !Configuration.EGL_EXPLICIT_INIT.get(false) )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/openal/ALC.java
Patch:
@@ -43,7 +43,7 @@ public final class ALC {
 	private static ALCCapabilities icd;
 
 	static {
-		if ( !Configuration.OPENAL_EXPLICIT_INIT.get() )
+		if ( !Configuration.OPENAL_EXPLICIT_INIT.get(false) )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -39,7 +39,7 @@ public final class CL {
 	private static CLCapabilities icd;
 
 	static {
-		if ( !Configuration.OPENCL_EXPLICIT_INIT.get() )
+		if ( !Configuration.OPENCL_EXPLICIT_INIT.get(false) )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -21,7 +21,6 @@
 import static org.lwjgl.opengl.WGL.*;
 import static org.lwjgl.system.APIUtil.*;
 import static org.lwjgl.system.Checks.*;
-import static org.lwjgl.system.Checks.checkPointer;
 import static org.lwjgl.system.JNI.*;
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;
@@ -72,7 +71,7 @@ public final class GL {
 	private static GLXCapabilities capabilitiesGLX;
 
 	static {
-		MAX_VERSION = Configuration.getAPIVersion(Configuration.OPENGL_MAXVERSION);
+		MAX_VERSION = apiParseVersion(Configuration.OPENGL_MAXVERSION);
 
 		String capsStateType = Configuration.OPENGL_CAPABILITIES_STATE.get("ThreadLocal");
 		if ( "static".equals(capsStateType) )
@@ -82,7 +81,7 @@ else if ( "ThreadLocal".equals(capsStateType) )
 		else
 			throw new IllegalStateException("Invalid " + Configuration.OPENGL_CAPABILITIES_STATE.getProperty() + " specified.");
 
-		if ( !Configuration.OPENGL_EXPLICIT_INIT.get() )
+		if ( !Configuration.OPENGL_EXPLICIT_INIT.get(false) )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -17,7 +17,6 @@
 import static org.lwjgl.opengles.GLES30.*;
 import static org.lwjgl.system.APIUtil.*;
 import static org.lwjgl.system.Checks.*;
-import static org.lwjgl.system.Checks.checkPointer;
 import static org.lwjgl.system.JNI.*;
 import static org.lwjgl.system.MemoryStack.*;
 import static org.lwjgl.system.MemoryUtil.*;
@@ -60,7 +59,7 @@ public final class GLES {
 	private static final CapabilitiesState capabilitiesState;
 
 	static {
-		MAX_VERSION = Configuration.getAPIVersion(Configuration.OPENGLES_MAXVERSION);
+		MAX_VERSION = apiParseVersion(Configuration.OPENGLES_MAXVERSION);
 
 		String capsStateType = Configuration.OPENGLES_CAPABILITIES_STATE.get("ThreadLocal");
 		if ( "static".equals(capsStateType) )
@@ -70,7 +69,7 @@ else if ( "ThreadLocal".equals(capsStateType) )
 		else
 			throw new IllegalStateException("Invalid " + Configuration.OPENGLES_CAPABILITIES_STATE.getProperty() + " specified.");
 
-		if ( !Configuration.OPENGLES_EXPLICIT_INIT.get() )
+		if ( !Configuration.OPENGLES_EXPLICIT_INIT.get(false) )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/Checks.java
Patch:
@@ -32,7 +32,7 @@ public final class Checks {
 	 *
 	 * <p>If maximum performance is required, they can be disabled by setting {@link Configuration#DISABLE_CHECKS} to true.</p>
 	 */
-	public static final boolean CHECKS = !Configuration.DISABLE_CHECKS.get();
+	public static final boolean CHECKS = !Configuration.DISABLE_CHECKS.get(false);
 
 	/**
 	 * Debug mode flag.
@@ -43,7 +43,7 @@ public final class Checks {
 	 *
 	 * <p>Can be enabled by setting {@link Configuration#DEBUG} to true.</p>
 	 */
-	public static final boolean DEBUG = Configuration.DEBUG.get();
+	public static final boolean DEBUG = Configuration.DEBUG.get(false);
 
 	/**
 	 * Debug functions flag.
@@ -52,7 +52,7 @@ public final class Checks {
 	 *
 	 * <p>Can be enabled by setting {@link Configuration#DEBUG_FUNCTIONS} to true.</p>
 	 */
-	public static final boolean DEBUG_FUNCTIONS = Configuration.DEBUG_FUNCTIONS.get();
+	public static final boolean DEBUG_FUNCTIONS = Configuration.DEBUG_FUNCTIONS.get(false);
 
 	static {
 		if ( DEBUG_FUNCTIONS && !DEBUG )

File: modules/core/src/main/java/org/lwjgl/system/MemoryStack.java
Patch:
@@ -30,7 +30,7 @@ public class MemoryStack {
 	private static final int DEFAULT_STACK_SIZE   = Configuration.STACK_SIZE.get(32) * 1024;
 	private static final int DEFAULT_STACK_FRAMES = 8;
 
-	private static final boolean DEBUG_STACK = Configuration.DEBUG_STACK.get();
+	private static final boolean DEBUG_STACK = Configuration.DEBUG_STACK.get(false);
 
 	static {
 		if ( DEFAULT_STACK_SIZE < 0 )

File: modules/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -66,7 +66,7 @@ public final class MemoryUtil {
 		apiLog("MemoryUtil accessor: " + ACCESSOR.getClass().getSimpleName());
 
 		ALLOCATOR_IMPL = MemoryManage.getInstance();
-		ALLOCATOR = Configuration.DEBUG_MEMORY_ALLOCATOR.get()
+		ALLOCATOR = Configuration.DEBUG_MEMORY_ALLOCATOR.get(false)
 			? new DebugAllocator(ALLOCATOR_IMPL)
 			: ALLOCATOR_IMPL;
 

File: modules/core/src/main/java/org/lwjgl/vulkan/VK.java
Patch:
@@ -31,7 +31,7 @@ public final class VK {
 	private static VKCapabilities globalCommands;
 
 	static {
-		if ( !Configuration.VULKAN_EXPLICIT_INIT.get() )
+		if ( !Configuration.VULKAN_EXPLICIT_INIT.get(false) )
 			create();
 	}
 

File: modules/core/src/test/java/org/lwjgl/system/StackTest.java
Patch:
@@ -87,7 +87,7 @@ public void testOOME() {
 
 	@Test(expectedExceptions = StackOverflowError.class)
 	public void testSOE() {
-		MemoryStack stack = new MemoryStack();
+		MemoryStack stack = MemoryStack.create();
 
 		// Test growing of the stack frame array,
 		// the Java stack should overflow before we have any issues

File: modules/core/src/main/java/org/lwjgl/system/ThreadLocalUtil.java
Patch:
@@ -40,7 +40,7 @@ public static class TLS implements Runnable {
 		public ALCapabilities alCaps;
 
 		public TLS() {
-			stack = new MemoryStack();
+			stack = MemoryStack.create();
 		}
 
 		@Override

File: modules/core/src/test/java/org/lwjgl/demo/opencl/CLDemo.java
Patch:
@@ -81,8 +81,6 @@ private static void demo(MemoryStack stack) {
 				CLCapabilities caps = CL.createDeviceCapabilities(device, platformCaps);
 
 				System.out.printf("\n\t** NEW DEVICE: [0x%X]\n", device);
-				System.out.print("\t");
-				System.out.println(caps);
 
 				System.out.println("\tCL_DEVICE_TYPE = " + getDeviceInfoLong(device, CL_DEVICE_TYPE));
 				System.out.println("\tCL_DEVICE_VENDOR_ID = " + getDeviceInfoInt(device, CL_DEVICE_VENDOR_ID));

File: modules/core/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -94,7 +94,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 					if ( address == NULL ) {
 						address = EGL.getFunctionAddress(functionName);
 						if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-							apiLog("Failed to locate address for EGL function " + functionName);
+							apiLog("Failed to locate address for EGL function " + memDecodeASCII(functionName));
 					}
 
 					return address;

File: modules/core/src/main/java/org/lwjgl/openal/AL.java
Patch:
@@ -75,7 +75,7 @@ static void init() {
 			public long getFunctionAddress(ByteBuffer functionName) {
 				long address = invokePP(alGetProcAddress, memAddress(functionName));
 				if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-					apiLog("Failed to locate address for AL function " + functionName);
+					apiLog("Failed to locate address for AL function " + memDecodeASCII(functionName));
 				return address;
 			}
 

File: modules/core/src/main/java/org/lwjgl/openal/ALC.java
Patch:
@@ -91,15 +91,15 @@ public static void create(String libName) {
 				public long getFunctionAddress(ByteBuffer functionName) {
 					long address = OPENAL.getFunctionAddress(functionName);
 					if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-						apiLog("Failed to locate address for ALC core function " + functionName);
+						apiLog("Failed to locate address for ALC core function " + memDecodeASCII(functionName));
 					return address;
 				}
 
 				@Override
 				public long getFunctionAddress(long handle, ByteBuffer functionName) {
 					long address = invokePPP(alcGetProcAddress, handle, memAddress(functionName));
 					if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-						apiLog("Failed to locate address for ALC extension function " + functionName);
+						apiLog("Failed to locate address for ALC extension function " + memDecodeASCII(functionName));
 					return address;
 				}
 

File: modules/core/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -158,7 +158,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 					if ( address == NULL ) {
 						address = OPENCL.getFunctionAddress(functionName);
 						if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-							apiLog("Failed to locate address for CL function " + functionName);
+							apiLog("Failed to locate address for CL function " + memDecodeASCII(functionName));
 					}
 
 					return address;

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -114,7 +114,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 				if ( address == NULL ) {
 					address = OPENGL.getFunctionAddress(functionName);
 					if ( address == NULL && DEBUG_FUNCTIONS )
-						apiLog("Failed to locate address for GL function " + functionName);
+						apiLog("Failed to locate address for GL function " + memDecodeASCII(functionName));
 				}
 
 				return address;

File: modules/core/src/main/java/org/lwjgl/vulkan/VK.java
Patch:
@@ -89,7 +89,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 					if ( address == NULL ) {
 						address = VULKAN.getFunctionAddress(functionName);
 						if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-							apiLog("Failed to locate address for VK function " + functionName);
+							apiLog("Failed to locate address for VK function " + memDecodeASCII(functionName));
 					}
 
 					return address;

File: modules/core/src/main/java/org/lwjgl/vulkan/VkDevice.java
Patch:
@@ -41,7 +41,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 						if ( address == NULL ) {
 							address = VK.getFunctionProvider().getFunctionAddress(functionName);
 							if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-								apiLog("Failed to locate address for VK device function " + functionName);
+								apiLog("Failed to locate address for VK device function " + memDecodeASCII(functionName));
 						}
 					}
 

File: modules/core/src/main/java/org/lwjgl/vulkan/VkInstance.java
Patch:
@@ -51,7 +51,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 				if ( address == NULL ) {
 					address = VK.getFunctionProvider().getFunctionAddress(functionName);
 					if ( address == NULL && Checks.DEBUG_FUNCTIONS )
-						apiLog("Failed to locate address for VK instance function " + functionName);
+						apiLog("Failed to locate address for VK instance function " + memDecodeASCII(functionName));
 				}
 
 				return address;

File: modules/core/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -42,7 +42,7 @@ public final class EGL {
 	private static EGLCapabilities caps;
 
 	static {
-		if ( !Configuration.EGL_EXPLICIT_INIT.<Boolean>get() )
+		if ( !Configuration.EGL_EXPLICIT_INIT.get() )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/openal/ALC.java
Patch:
@@ -43,7 +43,7 @@ public final class ALC {
 	private static ALCCapabilities icd;
 
 	static {
-		if ( !Configuration.OPENAL_EXPLICIT_INIT.<Boolean>get() )
+		if ( !Configuration.OPENAL_EXPLICIT_INIT.get() )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/opencl/CL.java
Patch:
@@ -39,7 +39,7 @@ public final class CL {
 	private static CLCapabilities icd;
 
 	static {
-		if ( !Configuration.OPENCL_EXPLICIT_INIT.<Boolean>get() )
+		if ( !Configuration.OPENCL_EXPLICIT_INIT.get() )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -70,7 +70,7 @@ else if ( "ThreadLocal".equals(capsStateType) )
 		else
 			throw new IllegalStateException("Invalid " + Configuration.OPENGL_CAPABILITIES_STATE.getProperty() + " specified.");
 
-		if ( !Configuration.OPENGL_EXPLICIT_INIT.<Boolean>get() )
+		if ( !Configuration.OPENGL_EXPLICIT_INIT.get() )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -70,7 +70,7 @@ else if ( "ThreadLocal".equals(capsStateType) )
 		else
 			throw new IllegalStateException("Invalid " + Configuration.OPENGLES_CAPABILITIES_STATE.getProperty() + " specified.");
 
-		if ( !Configuration.OPENGLES_EXPLICIT_INIT.<Boolean>get() )
+		if ( !Configuration.OPENGLES_EXPLICIT_INIT.get() )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/Checks.java
Patch:
@@ -28,7 +28,7 @@ public final class Checks {
 	 *
 	 * <p>If maximum performance is required, they can be disabled by setting {@link Configuration#DISABLE_CHECKS} to true.</p>
 	 */
-	public static final boolean CHECKS = !Configuration.DISABLE_CHECKS.<Boolean>get();
+	public static final boolean CHECKS = !Configuration.DISABLE_CHECKS.get();
 
 	/**
 	 * Debug mode flag.
@@ -39,7 +39,7 @@ public final class Checks {
 	 *
 	 * <p>Can be enabled by setting {@link Configuration#DEBUG} to true.</p>
 	 */
-	public static final boolean DEBUG = Configuration.DEBUG.<Boolean>get();
+	public static final boolean DEBUG = Configuration.DEBUG.get();
 
 	/**
 	 * Debug functions flag.
@@ -48,7 +48,7 @@ public final class Checks {
 	 *
 	 * <p>Can be enabled by setting {@link Configuration#DEBUG_FUNCTIONS} to true.</p>
 	 */
-	public static final boolean DEBUG_FUNCTIONS = Configuration.DEBUG_FUNCTIONS.<Boolean>get();
+	public static final boolean DEBUG_FUNCTIONS = Configuration.DEBUG_FUNCTIONS.get();
 
 	static {
 		if ( DEBUG_FUNCTIONS && !DEBUG )

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -26,7 +26,7 @@ private MemoryManage() {
 	}
 
 	static MemoryAllocator getInstance() {
-		Object allocator = Configuration.MEMORY_ALLOCATOR.<Object>get("jemalloc");
+		Object allocator = Configuration.MEMORY_ALLOCATOR.get("jemalloc");
 		if ( allocator instanceof MemoryAllocator )
 			return (MemoryAllocator)allocator;
 

File: modules/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -65,7 +65,7 @@ public final class MemoryUtil {
 		apiLog("MemoryUtil accessor: " + ACCESSOR.getClass().getSimpleName());
 
 		ALLOCATOR_IMPL = MemoryManage.getInstance();
-		ALLOCATOR = Configuration.DEBUG_MEMORY_ALLOCATOR.<Boolean>get()
+		ALLOCATOR = Configuration.DEBUG_MEMORY_ALLOCATOR.get()
 			? new DebugAllocator(ALLOCATOR_IMPL)
 			: ALLOCATOR_IMPL;
 

File: modules/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryBundle.java
Patch:
@@ -5,7 +5,6 @@
 package org.lwjgl.system.macosx;
 
 import org.lwjgl.system.SharedLibrary;
-import org.lwjgl.system.libc.Stdlib;
 
 import java.nio.ByteBuffer;
 

File: modules/core/src/main/java/org/lwjgl/vulkan/VK.java
Patch:
@@ -28,7 +28,7 @@ public final class VK {
 	private static VKCapabilities globalCommands;
 
 	static {
-		if ( !Configuration.VULKAN_EXPLICIT_INIT.<Boolean>get() )
+		if ( !Configuration.VULKAN_EXPLICIT_INIT.get() )
 			create();
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryBundle.java
Patch:
@@ -51,7 +51,7 @@ public long getFunctionAddress(ByteBuffer functionName) {
 	}
 
 	private static long CString2CFString(ByteBuffer name, int encoding) {
-		long string = CFStringCreateWithCStringNoCopy(NULL, name, encoding, kCFAllocatorMalloc());
+		long string = CFStringCreateWithCStringNoCopy(NULL, name, encoding, kCFAllocatorNull());
 		if ( string == NULL )
 			throw new NullPointerException();
 

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -33,7 +33,7 @@ static MemoryAllocator getInstance() {
 		if ( "jemalloc".equals(allocator) ) {
 			try {
 				// check if the jemalloc library is available
-				Class.forName("org.lwjgl.system.jemalloc.JEmalloc").getMethod("getInstance").invoke(null);
+				Class.forName("org.lwjgl.system.jemalloc.JEmalloc").getMethod("getLibrary").invoke(null);
 				return new JEmallocAllocator();
 			} catch (Throwable t) {
 				if ( Checks.DEBUG )

File: modules/core/src/main/java/org/lwjgl/system/MemoryStack.java
Patch:
@@ -175,10 +175,10 @@ public long nmalloc(int size) {
 	public long nmalloc(int alignment, int size) {
 		int newPointer = pointer - size;
 
-		if ( CHECKS ) {
+		if ( DEBUG )
 			checkAlignment(alignment);
+		if ( CHECKS )
 			checkPointer(newPointer);
-		}
 
 		// Align pointer to the specified alignment
 		newPointer &= ~(alignment - 1);

File: modules/core/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -156,7 +156,7 @@ public static EGLCapabilities getCapabilities() {
 
 	private static EGLCapabilities createClientCapabilities() {
 		long QueryString = functionProvider.getFunctionAddress("eglQueryString");
-		long versionString = invokePIP(QueryString, EGL_NO_DISPLAY, EGL_EXTENSIONS);
+		long versionString = invokePIP(QueryString, EGL_NO_DISPLAY, EGL_VERSION);
 
 		Set<String> ext = new HashSet<String>(32);
 

File: modules/core/src/main/java/org/lwjgl/system/Library.java
Patch:
@@ -163,9 +163,9 @@ public static SharedLibrary loadNative(String name) {
 	 *
 	 * @throws RuntimeException if the library could not be loaded
 	 */
-	public static SharedLibrary loadNative(Configuration name, String... defaultNames) {
+	public static SharedLibrary loadNative(Configuration<String> name, String... defaultNames) {
 		if ( name.get() != null )
-			return loadNative(name.<String>get());
+			return loadNative(name.get());
 		else if ( defaultNames.length <= 1 ) {
 			if ( defaultNames.length == 0 )
 				throw new RuntimeException("No default names specified.");

File: modules/core/src/main/java/org/lwjgl/system/linux/LinuxLibrary.java
Patch:
@@ -26,7 +26,7 @@ public LinuxLibrary(String name) {
 	}
 
 	private static long loadLibrary(String name) {
-		ByteBuffer nameEncoded = memEncodeUTF16(name, SYSTEM_ALLOCATOR);
+		ByteBuffer nameEncoded = memEncodeASCII(name, SYSTEM_ALLOCATOR);
 		try {
 			return dlopen(nameEncoded, RTLD_LAZY | RTLD_GLOBAL);
 		} finally {

File: modules/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryDL.java
Patch:
@@ -26,7 +26,7 @@ public MacOSXLibraryDL(String name) {
 	}
 
 	private static long loadLibrary(String name) {
-		ByteBuffer nameEncoded = memEncodeUTF16(name, SYSTEM_ALLOCATOR);
+		ByteBuffer nameEncoded = memEncodeASCII(name, SYSTEM_ALLOCATOR);
 		try {
 			return dlopen(nameEncoded, RTLD_LAZY | RTLD_GLOBAL);
 		} finally {

File: modules/core/src/test/java/org/lwjgl/demo/stb/Truetype.java
Patch:
@@ -103,7 +103,7 @@ private void renderText(STBTTBakedChar.Buffer cdata, int BITMAP_W, int BITMAP_H)
 		FloatBuffer x = stack.floats(0.0f);
 		FloatBuffer y = stack.floats(0.0f);
 
-		STBTTAlignedQuad q = STBTTAlignedQuad.malloc(stack);
+		STBTTAlignedQuad q = STBTTAlignedQuad.mallocStack(stack);
 
 		glBegin(GL_QUADS);
 		for ( int i = 0; i < text.length(); i++ ) {

File: modules/core/src/test/java/org/lwjgl/demo/vulkan/HelloVulkan.java
Patch:
@@ -1606,7 +1606,7 @@ private void demo_prepare_descriptor_set() {
 		MemoryStack stack = stackPush();
 
 		LongBuffer layouts = stack.mallocLong(1).put(0, desc_layout);
-		VkDescriptorSetAllocateInfo alloc_info = VkDescriptorSetAllocateInfo.malloc(stack)
+		VkDescriptorSetAllocateInfo alloc_info = VkDescriptorSetAllocateInfo.mallocStack(stack)
 			.sType(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO)
 			.pNext(NULL)
 			.descriptorPool(desc_pool)
@@ -1619,7 +1619,7 @@ private void demo_prepare_descriptor_set() {
 
 		stack.push();
 
-		VkDescriptorImageInfo.Buffer tex_descs = VkDescriptorImageInfo.calloc(DEMO_TEXTURE_COUNT, stack);
+		VkDescriptorImageInfo.Buffer tex_descs = VkDescriptorImageInfo.callocStack(DEMO_TEXTURE_COUNT, stack);
 
 		for ( int i = 0; i < DEMO_TEXTURE_COUNT; i++ ) {
 			tex_descs.get(i)
@@ -1628,7 +1628,7 @@ private void demo_prepare_descriptor_set() {
 				.imageLayout(VK_IMAGE_LAYOUT_GENERAL);
 		}
 
-		VkWriteDescriptorSet.Buffer write = VkWriteDescriptorSet.calloc(1, stack)
+		VkWriteDescriptorSet.Buffer write = VkWriteDescriptorSet.callocStack(1, stack)
 			.sType(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET)
 			.dstSet(desc_set)
 			.descriptorType(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER)

File: modules/core/src/test/java/org/lwjgl/demo/vulkan/HelloVulkan.java
Patch:
@@ -1619,7 +1619,7 @@ private void demo_prepare_descriptor_set() {
 
 		stack.push();
 
-		VkDescriptorImageInfo.Buffer tex_descs = VkDescriptorImageInfo.calloc(stack, DEMO_TEXTURE_COUNT);
+		VkDescriptorImageInfo.Buffer tex_descs = VkDescriptorImageInfo.calloc(DEMO_TEXTURE_COUNT, stack);
 
 		for ( int i = 0; i < DEMO_TEXTURE_COUNT; i++ ) {
 			tex_descs.get(i)
@@ -1628,7 +1628,7 @@ private void demo_prepare_descriptor_set() {
 				.imageLayout(VK_IMAGE_LAYOUT_GENERAL);
 		}
 
-		VkWriteDescriptorSet.Buffer write = VkWriteDescriptorSet.calloc(stack, 1)
+		VkWriteDescriptorSet.Buffer write = VkWriteDescriptorSet.calloc(1, stack)
 			.sType(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET)
 			.dstSet(desc_set)
 			.descriptorType(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER)

File: modules/core/src/main/java/org/lwjgl/system/package-info.java
Patch:
@@ -23,7 +23,7 @@
  * <li>{@link org.lwjgl.system.MemoryUtil MemoryUtil}, used for off-heap data access and memory allocation/deallocation.</li>
  * <li>{@link org.lwjgl.system.FunctionProvider FunctionProvider}, {@link org.lwjgl.system.Library Library} and
  * {@link org.lwjgl.system.SharedLibrary SharedLibrary}, used for loading shared libraries and accessing function pointers.</li>
- * <li>{@link org.lwjgl.system.Pointer Pointer} and {@link org.lwjgl.system.Retainable Retainable}, used as off-heap resource abstractions.</li>
+ * <li>{@link org.lwjgl.system.Pointer Pointer}, used as off-heap resource abstractions.</li>
  * <li>{@link org.lwjgl.system.Configuration Configuration}, used for programmatic configuration at runtime.</li>
  * </ul>
  */

File: modules/core/src/test/java/org/lwjgl/util/simd/SSETest.java
Patch:
@@ -2,13 +2,13 @@
  * Copyright LWJGL. All rights reserved.
  * License terms: http://lwjgl.org/license.php
  */
-package org.lwjgl.system.simd;
+package org.lwjgl.util.simd;
 
 import org.testng.annotations.Test;
 
 import static java.lang.Math.*;
-import static org.lwjgl.system.simd.SSE.*;
-import static org.lwjgl.system.simd.SSE3.*;
+import static org.lwjgl.util.simd.SSE.*;
+import static org.lwjgl.util.simd.SSE3.*;
 import static org.testng.Assert.*;
 
 @Test

File: modules/core/src/test/java/org/lwjgl/demo/vulkan/HelloVulkan.java
Patch:
@@ -504,7 +504,7 @@ else if ( err != 0 )
 
 		if ( validate ) {
 			VkDebugReportCallbackCreateInfoEXT dbgCreateInfo = VkDebugReportCallbackCreateInfoEXT.malloc()
-				.sType(VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT)
+				.sType(VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT)
 				.pNext(NULL)
 				.flags(VK_DEBUG_REPORT_ERROR_BIT_EXT | VK_DEBUG_REPORT_WARNING_BIT_EXT)
 				.pfnCallback(dbgFunc)

File: modules/core/src/main/java/org/lwjgl/glfw/EventLoop.java
Patch:
@@ -87,7 +87,7 @@ private static boolean isMainThread() {
 		long NSThread = objc_getClass("NSThread");
 		long currentThread = invokePPP(objc_msgSend, NSThread, sel_getUid("currentThread"));
 
-		return invokePPB(objc_msgSend, currentThread, sel_getUid("isMainThread")) != 0;
+		return invokePPZ(objc_msgSend, currentThread, sel_getUid("isMainThread"));
 	}
 
 	private static boolean isJavaStartedOnFirstThread() {

File: modules/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryBundle.java
Patch:
@@ -29,7 +29,7 @@ public MacOSXLibraryBundle(String name) {
 			if ( fsPath == NULL )
 				throw new NullPointerException();
 
-			url = CFURLCreateWithFileSystemPath(NULL, fsPath, kCFURLPOSIXPathStyle, TRUE);
+			url = CFURLCreateWithFileSystemPath(NULL, fsPath, kCFURLPOSIXPathStyle, true);
 			if ( url == NULL )
 				throw new NullPointerException();
 

File: modules/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -135,7 +135,7 @@ public static APIVersion apiParseVersion(String version) {
 	public static APIVersion apiParseVersion(String version, String prefix) {
 		String pattern = "([0-9]+)[.]([0-9]+)([.]\\S+)?\\s*(.+)?";
 		if ( prefix != null )
-			pattern = prefix + "\\s+" + pattern;
+			pattern = "(?:" + prefix + "\\s+)?" + pattern;
 
 		Matcher matcher = Pattern.compile(pattern).matcher(version);
 		if ( !matcher.matches() )

File: modules/core/src/test/java/org/lwjgl/demo/stb/Vorbis.java
Patch:
@@ -85,7 +85,8 @@ public static void main(String[] args) {
 			alDeleteBuffers(buffers);
 			alDeleteSources(source);
 
-			AL.destroy(al);
+			al.destroy();
+			al.getDevice().close();
 		}
 	}
 

File: modules/core/src/test/java/org/lwjgl/demo/stb/Truetype.java
Patch:
@@ -42,7 +42,7 @@ protected void loop() {
 		int BITMAP_H = 512;
 
 		int texID = glGenTextures();
-		STBTTBakedChar.Buffer cdata = STBTTBakedChar.mallocBuffer(96);
+		STBTTBakedChar.Buffer cdata = STBTTBakedChar.malloc(96);
 
 		try {
 			ByteBuffer ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 160 * 1024);

File: modules/core/src/test/java/org/lwjgl/demo/stb/TruetypeOversample.java
Patch:
@@ -161,7 +161,7 @@ public static void main(String[] args) {
 
 	private void load_fonts() {
 		font_tex = glGenTextures();
-		chardata = STBTTPackedchar.mallocBuffer(6 * 128);
+		chardata = STBTTPackedchar.malloc(6 * 128);
 
 		try {
 			ByteBuffer ttf = ioResourceToByteBuffer("demo/FiraSans.ttf", 160 * 1024);

File: modules/core/src/test/java/org/lwjgl/system/StructTest.java
Patch:
@@ -65,7 +65,7 @@ public void testStructCopy() {
 	}
 
 	public void testStructBuffer() {
-		FFIType.Buffer b = FFIType.callocBuffer(1);
+		FFIType.Buffer b = FFIType.calloc(1);
 
 		// copy
 		FFIType copy = FFIType.malloc();
@@ -104,7 +104,7 @@ public void testStructBuffer() {
 	}
 
 	public void testStructBufferIteration() {
-		FFIType.Buffer b = FFIType.callocBuffer(10);
+		FFIType.Buffer b = FFIType.calloc(10);
 
 		while ( b.hasRemaining() ) {
 			int pos = b.position();
@@ -123,7 +123,7 @@ public void testStructBufferIteration() {
 	}
 
 	public void testStructBufferIterationAbs() {
-		FFIType.Buffer b = FFIType.callocBuffer(10);
+		FFIType.Buffer b = FFIType.calloc(10);
 
 		int i = 0;
 		while ( i < b.capacity() ) {

File: modules/core/src/test/java/org/lwjgl/demo/ovr/HelloLibOVR.java
Patch:
@@ -31,7 +31,7 @@ public void invoke(long userData, int level, long message) {
 		};
 
 		OVRInitParams initParams = OVRInitParams.calloc();
-		initParams.LogCallback(callback.address());
+		initParams.LogCallback(callback);
 		initParams.Flags(ovrInit_Debug);
 
 		System.out.println("ovr_Initialize = " + ovr_Initialize(initParams));

File: modules/core/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -272,7 +272,7 @@ public static GLCapabilities createCapabilities(boolean forwardCompatible) {
 			} else {
 				// Fallback to the string query.
 				long versionString = callIP(GetString, GL_VERSION);
-				if ( callI(GetError) != GL_NO_ERROR )
+				if ( versionString == NULL || callI(GetError) != GL_NO_ERROR )
 					throw new IllegalStateException("There is no OpenGL context current in the current thread.");
 
 				APIVersion version = apiParseVersion(memDecodeUTF8(versionString));
@@ -319,7 +319,7 @@ public static GLCapabilities createCapabilities(boolean forwardCompatible) {
 				callIPV(GetIntegerv, GL_NUM_EXTENSIONS, __buffer.address());
 				int extensionCount = __buffer.intValue(0);
 
-				long GetStringi = checkPointer(checkFunctionAddress(functionProvider.getFunctionAddress("glGetStringi")));
+				long GetStringi = checkFunctionAddress(functionProvider.getFunctionAddress("glGetStringi"));
 				for ( int i = 0; i < extensionCount; i++ )
 					supportedExtensions.add(memDecodeASCII(callIIP(GetStringi, GL_EXTENSIONS, i)));
 

File: modules/core/src/main/java/org/lwjgl/opengles/GLESChecks.java
Patch:
@@ -73,7 +73,7 @@ static int typeToByteShift(int type) {
 			case GL_UNSIGNED_INT64_NV:
 				return 3;*/
 			default:
-				throw new IllegalArgumentException(apiUnknownToken("Unsupported OpenGL type", type));
+				throw new IllegalArgumentException(apiUnknownToken("Unsupported OpenGL ES type", type));
 		}
 	}
 

File: modules/core/src/main/java/org/lwjgl/openal/ALContext.java
Patch:
@@ -4,7 +4,7 @@
  */
 package org.lwjgl.openal;
 
-import org.lwjgl.system.PointerWrapper;
+import org.lwjgl.system.Pointer;
 
 import java.nio.IntBuffer;
 
@@ -17,7 +17,7 @@
  * one AL Context per process can be current at a time. Applications maintaining multiple AL Contexts, whether threaded or not, have to set the current context
  * accordingly. Applications can have multiple threads that share one more or contexts. In other words, AL and ALC are threadsafe.
  */
-public class ALContext extends PointerWrapper {
+public class ALContext extends Pointer.Default {
 
 	private final ALDevice device;
 

File: modules/core/src/main/java/org/lwjgl/openal/ALDevice.java
Patch:
@@ -5,7 +5,7 @@
 package org.lwjgl.openal;
 
 import org.lwjgl.system.Checks;
-import org.lwjgl.system.PointerWrapper;
+import org.lwjgl.system.Pointer;
 
 import java.nio.ByteBuffer;
 
@@ -20,7 +20,7 @@
  * system resources for audio, including a single hardware output device. The details are left to the implementation, which has to map the available backends to
  * unique device specifiers.
  */
-public class ALDevice extends PointerWrapper {
+public class ALDevice extends Pointer.Default {
 
 	/*
 	 * When calling ALC functions, we want to use the device associated with the current AL context.

File: modules/core/src/main/java/org/lwjgl/opencl/CLDevice.java
Patch:
@@ -5,7 +5,7 @@
 package org.lwjgl.opencl;
 
 import org.lwjgl.system.Checks;
-import org.lwjgl.system.PointerWrapper;
+import org.lwjgl.system.Pointer;
 
 import java.util.HashSet;
 import java.util.Set;
@@ -15,7 +15,7 @@
 import static org.lwjgl.system.APIUtil.*;
 
 /** This class is a wrapper around a cl_device_id pointer. */
-public class CLDevice extends PointerWrapper {
+public class CLDevice extends Pointer.Default {
 
 	private final CLCapabilities capabilities;
 

File: modules/core/src/main/java/org/lwjgl/opencl/CLPlatform.java
Patch:
@@ -6,7 +6,7 @@
 
 import org.lwjgl.system.APIBuffer;
 import org.lwjgl.system.Checks;
-import org.lwjgl.system.PointerWrapper;
+import org.lwjgl.system.Pointer;
 
 import java.util.*;
 
@@ -18,7 +18,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /** This class is a wrapper around a cl_platform_id pointer. */
-public class CLPlatform extends PointerWrapper {
+public class CLPlatform extends Pointer.Default {
 
 	private final CLCapabilities capabilities;
 

File: modules/core/src/main/java/org/lwjgl/system/APIBuffer.java
Patch:
@@ -10,9 +10,9 @@
 import java.nio.ByteBuffer;
 import java.util.Arrays;
 
-import static org.lwjgl.system.Pointer.*;
 import static org.lwjgl.system.MathUtil.*;
 import static org.lwjgl.system.MemoryUtil.*;
+import static org.lwjgl.system.Pointer.*;
 
 /**
  * Helper class for alternative API functions. Instead of the user
@@ -206,7 +206,7 @@ public int pointerParam(long value) {
 	}
 
 	/** Ensures space for an additional pointer value, sets the specified value at the allocated offset and returns that offset. */
-	public int pointerParam(PointerWrapper value) {
+	public int pointerParam(Pointer value) {
 		return pointerParam(value.address());
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/Struct.java
Patch:
@@ -12,7 +12,7 @@
 import static org.lwjgl.system.MemoryUtil.*;
 
 /** Base class of all struct implementations. */
-public abstract class Struct extends PointerWrapper {
+public abstract class Struct extends Pointer.Default {
 
 	static {
 		Library.initialize();

File: modules/core/src/main/java/org/lwjgl/Version.java
Patch:
@@ -21,7 +21,7 @@ public final class Version {
 		VERSION_REVISION = 0;
 
 	/** The development state of the current build. */
-	public static final BuildType BUILD_TYPE = BuildType.BETA;
+	public static final BuildType BUILD_TYPE = BuildType.STABLE;
 
 	private Version() {
 	}

File: modules/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -1195,9 +1195,6 @@ public static void memPutAddress(long ptr, long value) {
 		-------------------------------------
 	    ------------------------------------- */
 
-	/** Returns the {@code sizeof(void *)}. */
-	static native int memGetPointerSize();
-
 	/**
 	 * Returns the object that the specified global reference points to.
 	 *

File: modules/core/src/main/java/org/lwjgl/system/Pointer.java
Patch:
@@ -6,8 +6,6 @@
 
 import org.lwjgl.PointerBuffer;
 
-import static org.lwjgl.system.MemoryUtil.*;
-
 /**
  * Pointer interface.
  *
@@ -21,7 +19,7 @@
 public interface Pointer {
 
 	/** The pointer size in bytes. Will be 4 on a 32bit JVM and 8 on a 64bit one. */
-	int POINTER_SIZE = memGetPointerSize();
+	int POINTER_SIZE = MemoryAccess.getPointerSize();
 
 	/** The pointer size power-of-two. Will be 2 on a 32bit JVM and 3 on a 64bit one. */
 	int POINTER_SHIFT = POINTER_SIZE == 8 ? 3 : 2;

File: modules/core/src/test/java/org/lwjgl/demo/glfw/Gears.java
Patch:
@@ -89,7 +89,7 @@ private void createWindow(boolean fullscreen) {
 		GLFWVidMode vidmode = glfwGetVideoMode(monitor);
 
 		long window = fullscreen
-			? glfwCreateWindow(vidmode.getWidth(), vidmode.getHeight(), "GLFW Gears Demo", monitor, this.window)
+			? glfwCreateWindow(vidmode.width(), vidmode.height(), "GLFW Gears Demo", monitor, this.window)
 			: glfwCreateWindow(WIDTH, HEIGHT, "GLFW Gears Demo", NULL, this.window);
 
 		if ( window == NULL )
@@ -115,8 +115,8 @@ private void createWindow(boolean fullscreen) {
 			// Center window
 			glfwSetWindowPos(
 				window,
-				(vidmode.getWidth() - WIDTH) / 2,
-				(vidmode.getHeight() - HEIGHT) / 2
+				(vidmode.width() - WIDTH) / 2,
+				(vidmode.height() - HEIGHT) / 2
 			);
 		}
 

File: modules/core/src/test/java/org/lwjgl/demo/openal/ALCDemo.java
Patch:
@@ -80,7 +80,7 @@ private static void testPlayback() {
 		checkALError();
 
 		//copy to buffer
-		alBufferData(buffer, AL_FORMAT_MONO16, pcm, info.getSampleRate());
+		alBufferData(buffer, AL_FORMAT_MONO16, pcm, info.sample_rate());
 		checkALError();
 
 		info.free();
@@ -131,7 +131,7 @@ static ByteBuffer readVorbis(String resource, int bufferSize, STBVorbisInfo info
 
 		stb_vorbis_get_info(decoder, info);
 
-		int channels = info.getChannels();
+		int channels = info.channels();
 
 		int lengthSamples = stb_vorbis_stream_length_in_samples(decoder);
 

File: modules/core/src/test/java/org/lwjgl/demo/openal/EFXTest.java
Patch:
@@ -261,7 +261,7 @@ private static void playbackTest() throws Exception {
 		STBVorbisInfo info = STBVorbisInfo.malloc();
 		ByteBuffer pcm = ALCDemo.readVorbis("demo/footsteps.ogg", 32 * 1024, info);
 
-		alBufferData(buffer, AL_FORMAT_MONO16, pcm, info.getSampleRate());
+		alBufferData(buffer, AL_FORMAT_MONO16, pcm, info.sample_rate());
 		info.free();
 		alSourcei(source, AL_BUFFER, buffer);
 		alSourcei(source, AL_LOOPING, AL_TRUE);

File: modules/core/src/test/java/org/lwjgl/demo/stb/FontDemo.java
Patch:
@@ -204,8 +204,8 @@ private void init(String title) {
 
 		glfwSetWindowPos(
 			window,
-			(vidmode.getWidth() - ww) / 2,
-			(vidmode.getHeight() - wh) / 2
+			(vidmode.width() - ww) / 2,
+			(vidmode.height() - wh) / 2
 		);
 
 		// Create context

File: modules/core/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -186,8 +186,8 @@ private void init() {
 
 		glfwSetWindowPos(
 			window,
-			(vidmode.getWidth() - ww) / 2,
-			(vidmode.getHeight() - wh) / 2
+			(vidmode.width() - ww) / 2,
+			(vidmode.height() - wh) / 2
 		);
 
 		// Create context

File: modules/core/src/main/java/org/lwjgl/system/libffi/Closure.java
Patch:
@@ -248,7 +248,7 @@ protected static long staticAllocText(String text) {
 		return address;
 	}
 
-	protected static void prepareCIF(int ABI, FFICIF CIF, long rtype, PointerBuffer ARGS, long... atypes) {
+	protected static void prepareCIF(int ABI, FFICIF CIF, FFIType rtype, PointerBuffer ARGS, FFIType... atypes) {
 		for ( int i = 0; i < atypes.length; i++ )
 			ARGS.put(i, atypes[i]);
 

File: modules/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -44,7 +44,7 @@ private APIUtil() {
 	}
 
 	/**
-	 * Prints the specified message to the {@link Platform#DEBUG_STREAM} if {@link Platform#DEBUG} is true.
+	 * Prints the specified message to the {@link #DEBUG_STREAM} if {@link Checks#DEBUG} is true.
 	 *
 	 * @param msg the message to print
 	 */

File: modules/core/src/main/java/org/lwjgl/system/MemoryAccess.java
Patch:
@@ -27,11 +27,11 @@ static MemoryAccessor getInstance() {
 		try {
 			// Depends on sun.nio.ch.DirectBuffer and sun.misc.Unsafe
 			accessor = (MemoryAccessor)Class.forName("org.lwjgl.system.MemoryAccess$MemoryAccessorUnsafe").newInstance();
-		} catch (Exception e0) {
+		} catch (Throwable t0) {
 			try {
 				// Depends on sun.nio.ch.DirectBuffer and sun.reflect.FieldAccessor
 				accessor = new MemoryAccessorReflect();
-			} catch (Exception e1) {
+			} catch (Throwable t1) {
 				LWJGLUtil.log("[MemoryAccessor] Unsupported JVM detected, this will likely result in low performance. Please inform LWJGL developers.");
 				accessor = new MemoryAccessorJNI();
 			}

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -35,9 +35,9 @@ static MemoryAllocator getInstance() {
 				// check if the jemalloc library is available
 				Class.forName("org.lwjgl.system.jemalloc.JEmalloc").getMethod("getInstance").invoke(null);
 				return new JEmallocAllocator();
-			} catch (Exception e) {
+			} catch (Throwable t) {
 				if ( DEBUG )
-					e.printStackTrace(DEBUG_STREAM);
+					t.printStackTrace(DEBUG_STREAM);
 				LWJGLUtil.log("[MemoryAllocator] Failed to load the jemalloc library.");
 				return new StdlibAllocator();
 			}
@@ -46,7 +46,7 @@ static MemoryAllocator getInstance() {
 		} else {
 			try {
 				return (MemoryAllocator)Class.forName(allocator.toString()).newInstance();
-			} catch (Exception e) {
+			} catch (Throwable t) {
 				throw new RuntimeException("Failed to instantiate custom memory allocator: " + allocator);
 			}
 		}

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -153,7 +153,7 @@ public void run() {
 							Long.toHexString(address).toUpperCase()
 						);
 						for ( StackTraceElement el : allocation.stackTrace )
-							DEBUG_STREAM.println("\t" + el.toString());
+							DEBUG_STREAM.format("\tat %s\n", el.toString());
 					}
 				}
 			});

File: modules/core/src/main/java/org/lwjgl/Sys.java
Patch:
@@ -32,7 +32,9 @@ public final class Sys {
 	public static final BuildType BUILD_TYPE = BuildType.BETA;
 
 	static {
-		log("Version " + getVersion() + " | " + System.getProperty("os.name") + " | " + System.getProperty("os.arch"));
+		if ( LWJGLUtil.DEBUG )
+			log("Version " + getVersion() + " | " + System.getProperty("os.name") + " | " + System.getProperty("os.arch"));
+
 		try {
 			loadLibrarySystem(JNI_LIBRARY_NAME);
 		} catch (UnsatisfiedLinkError ule) {

File: modules/core/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -58,14 +58,14 @@ public static void create() {
 		String libName = Configuration.LIBRARY_NAME_EGL.get();
 		if ( libName == null ) {
 			switch ( LWJGLUtil.getPlatform() ) {
-				case WINDOWS:
-					libName = "libEGL";
-					break;
 				case LINUX:
 					libName = "EGL";
 					break;
 				case MACOSX:
 					throw new UnsupportedOperationException("MacOS X does not support EGL");
+				case WINDOWS:
+					libName = "libEGL";
+					break;
 				default:
 					throw new IllegalStateException();
 			}

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -72,13 +72,13 @@ public static void create() {
 		String libName;
 		switch ( LWJGLUtil.getPlatform() ) {
 			case LINUX:
-				libName = "libGLESv2";
-				break;
-			case WINDOWS:
 				libName = "GLESv2";
 				break;
 			case MACOSX:
 				throw new UnsupportedOperationException("MacOS X does not support OpenGL ES");
+			case WINDOWS:
+				libName = "libGLESv2";
+				break;
 			default:
 				throw new IllegalStateException();
 		}

File: modules/core/src/main/java/org/lwjgl/egl/EGL.java
Patch:
@@ -59,9 +59,11 @@ public static void create() {
 		if ( libName == null ) {
 			switch ( LWJGLUtil.getPlatform() ) {
 				case WINDOWS:
-				case LINUX:
 					libName = "libEGL";
 					break;
+				case LINUX:
+					libName = "EGL";
+					break;
 				case MACOSX:
 					throw new UnsupportedOperationException("MacOS X does not support EGL");
 				default:

File: modules/core/src/main/java/org/lwjgl/opengles/GLES.java
Patch:
@@ -72,9 +72,11 @@ public static void create() {
 		String libName;
 		switch ( LWJGLUtil.getPlatform() ) {
 			case LINUX:
-			case WINDOWS:
 				libName = "libGLESv2";
 				break;
+			case WINDOWS:
+				libName = "GLESv2";
+				break;
 			case MACOSX:
 				throw new UnsupportedOperationException("MacOS X does not support OpenGL ES");
 			default:

File: modules/core/src/main/java/org/lwjgl/system/Checks.java
Patch:
@@ -243,14 +243,14 @@ public static void checkBuffer(PointerBuffer buf, long size) {
 	 *
 	 * @throws IllegalArgumentException
 	 */
-	public static void checkBuffer(StructBuffer buf, int size) {
+	public static void checkBuffer(StructBuffer<?, ?> buf, int size) {
 		if ( buf.container.remaining() < size * buf.sizeof() ) {
 			throwBufferSizeException(buf, size);
 		}
 	}
 
 	/** @see #checkBuffer(StructBuffer, int) */
-	public static void checkBuffer(StructBuffer buf, long size) {
+	public static void checkBuffer(StructBuffer<?, ?> buf, long size) {
 		checkBuffer(buf, (int)size);
 	}
 
@@ -284,7 +284,7 @@ private static void throwBufferSizeException(PointerBuffer buf, int size) {
 		throw new IllegalArgumentException("Number of remaining pointer values in buffer is " + buf.remaining() + ", must be at least " + size);
 	}
 
-	private static void throwBufferSizeException(StructBuffer buf, int size) {
+	private static void throwBufferSizeException(StructBuffer<?, ?> buf, int size) {
 		throw new IllegalArgumentException("Number of remaining struct values in buffer is " + buf.remaining() + ", must be at least " + size);
 	}
 

File: modules/core/src/main/java/org/lwjgl/Pointer.java
Patch:
@@ -33,6 +33,6 @@ public interface Pointer {
 	 *
 	 * @return the pointer address
 	 */
-	long getPointer();
+	long address();
 
 }
\ No newline at end of file

File: modules/core/src/main/java/org/lwjgl/PointerBuffer.java
Patch:
@@ -370,13 +370,13 @@ public static void put(ByteBuffer target, int index, long p) {
 
 	/** Puts the pointer value of the specified {@link Pointer} at the current position and then increments the position. */
 	public PointerBuffer put(Pointer wrapper) {
-		put(wrapper.getPointer());
+		put(wrapper.address());
 		return this;
 	}
 
 	/** Puts the pointer value of the specified {@link Pointer} at the specified index. */
 	public PointerBuffer put(int index, Pointer wrapper) {
-		put(index, wrapper.getPointer());
+		put(index, wrapper.address());
 		return this;
 	}
 

File: modules/core/src/main/java/org/lwjgl/openal/ALDevice.java
Patch:
@@ -47,7 +47,7 @@ public ALCCapabilities getCapabilities() {
 	}
 
 	public void destroy() {
-		alcCloseDevice(getPointer());
+		alcCloseDevice(address());
 		if ( lastDevice == this )
 			lastDevice = null;
 	}

File: modules/core/src/main/java/org/lwjgl/openal/ALUtil.java
Patch:
@@ -14,9 +14,9 @@ private ALUtil() {
 	}
 
 	public static void checkALCError(ALDevice device) {
-		int err = alcGetError(device.getPointer());
+		int err = alcGetError(device.address());
 		if ( err != ALC_NO_ERROR )
-			throw new OpenALException(alcGetString(device.getPointer(), err));
+			throw new OpenALException(alcGetString(device.address(), err));
 	}
 
 	public static void checkALError() {

File: modules/core/src/main/java/org/lwjgl/opencl/CLDevice.java
Patch:
@@ -22,7 +22,7 @@ public class CLDevice extends PointerWrapper {
 	public CLDevice(long cl_device_id, CLPlatform platform) {
 		this(cl_device_id, platform.getCapabilities());
 
-		if ( LWJGLUtil.DEBUG && clGetDeviceInfoPointer(cl_device_id, CL_DEVICE_PLATFORM) != platform.getPointer() )
+		if ( LWJGLUtil.DEBUG && clGetDeviceInfoPointer(cl_device_id, CL_DEVICE_PLATFORM) != platform.address() )
 			throw new IllegalArgumentException("The specified device does not belong to the specified platform.");
 	}
 

File: modules/core/src/main/java/org/lwjgl/opencl/CLPlatform.java
Patch:
@@ -152,7 +152,7 @@ public List<CLDevice> getDevices(int device_type) {
 	 */
 	public List<CLDevice> getDevices(int device_type, Filter<CLDevice> filter) {
 		APIBuffer __buffer = apiBuffer();
-		int errcode = clGetDeviceIDs(getPointer(), device_type, 0, null, __buffer.buffer());
+		int errcode = clGetDeviceIDs(address(), device_type, 0, null, __buffer.buffer());
 		if ( errcode == CL_DEVICE_NOT_FOUND )
 			return Collections.emptyList();
 		checkCLError(errcode);
@@ -163,7 +163,7 @@ public List<CLDevice> getDevices(int device_type, Filter<CLDevice> filter) {
 
 		__buffer.bufferParam(num_devices << POINTER_SHIFT);
 
-		errcode = clGetDeviceIDs(getPointer(), device_type, num_devices, __buffer.buffer(), null);
+		errcode = clGetDeviceIDs(address(), device_type, num_devices, __buffer.buffer(), null);
 		checkCLError(errcode);
 
 		long[] deviceIDs = new long[num_devices];

File: modules/core/src/main/java/org/lwjgl/system/APIBuffer.java
Patch:
@@ -207,7 +207,7 @@ public int pointerParam(long value) {
 
 	/** Ensures space for an additional pointer value, sets the specified value at the allocated offset and returns that offset. */
 	public int pointerParam(PointerWrapper value) {
-		return pointerParam(value.getPointer());
+		return pointerParam(value.address());
 	}
 
 	// ----

File: modules/core/src/main/java/org/lwjgl/system/PointerWrapper.java
Patch:
@@ -15,14 +15,14 @@ public abstract class PointerWrapper implements Pointer {
 	protected final long pointer;
 
 	protected PointerWrapper(long pointer) {
-		if ( LWJGLUtil.DEBUG && pointer == NULL )
+		if ( LWJGLUtil.CHECKS && pointer == NULL )
 			throw new NullPointerException();
 
 		this.pointer = pointer;
 	}
 
 	@Override
-	public final long getPointer() {
+	public final long address() {
 		return pointer;
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/linux/LinuxLibrary.java
Patch:
@@ -26,7 +26,7 @@ public LinuxLibrary(String name) {
 	}
 
 	@Override
-	public long getPointer() {
+	public long address() {
 		return handle;
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryBundle.java
Patch:
@@ -45,7 +45,7 @@ public MacOSXLibraryBundle(String name) {
 	}
 
 	@Override
-	public long getPointer() {
+	public long address() {
 		return bundleRef;
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/macosx/MacOSXLibraryDL.java
Patch:
@@ -25,7 +25,7 @@ public MacOSXLibraryDL(String name) {
 	}
 
 	@Override
-	public long getPointer() {
+	public long address() {
 		return handle;
 	}
 

File: modules/core/src/main/java/org/lwjgl/system/windows/WindowsLibrary.java
Patch:
@@ -36,7 +36,7 @@ public WindowsLibrary(String name) {
 	}
 
 	@Override
-	public long getPointer() {
+	public long address() {
 		return handle;
 	}
 

File: modules/core/src/test/java/org/lwjgl/demo/openal/OpenALInfo.java
Patch:
@@ -74,7 +74,7 @@ private void printALCInfo(ALContext alContext) {
 		System.out.println("ALC version: " + majorVersion + "." + minorVersion);
 
 		System.out.println("ALC extensions:");
-		String[] extensions = alcGetString(alContext.getDevice().getPointer(), ALC_EXTENSIONS).split(" ");
+		String[] extensions = alcGetString(alContext.getDevice().address(), ALC_EXTENSIONS).split(" ");
 		for ( String extension : extensions ) {
 			if ( extension.trim().isEmpty() ) {
 				continue;
@@ -105,7 +105,7 @@ private void printEFXInfo(ALContext alContext) {
 			return;
 		}
 
-		long device = alContext.getDevice().getPointer();
+		long device = alContext.getDevice().address();
 
 		int efxMajor = alcGetInteger(device, ALC_EFX_MAJOR_VERSION);
 		int efxMinor = alcGetInteger(device, ALC_EFX_MINOR_VERSION);
@@ -169,7 +169,7 @@ private void die(String kind, String description) {
 
 	private void checkForErrors(ALContext alContext) {
 		{
-			long device = alContext.getDevice().getPointer();
+			long device = alContext.getDevice().address();
 
 			int error = alcGetError(device);
 			if ( error != ALC_NO_ERROR ) {

File: modules/core/src/test/java/org/lwjgl/demo/stb/FontDemo.java
Patch:
@@ -201,7 +201,7 @@ private void init(String title) {
 		scrollfun.set(window);
 
 		// Center window
-		GLFWvidmode vidmode = new GLFWvidmode(glfwGetVideoMode(glfwGetPrimaryMonitor()));
+		GLFWvidmode vidmode = glfwGetVideoMode(glfwGetPrimaryMonitor());
 
 		glfwSetWindowPos(
 			window,

File: modules/core/src/test/java/org/lwjgl/demo/stb/Image.java
Patch:
@@ -183,7 +183,7 @@ private void init() {
 		scrollfun.set(window);
 
 		// Center window
-		GLFWvidmode vidmode = new GLFWvidmode(glfwGetVideoMode(glfwGetPrimaryMonitor()));
+		GLFWvidmode vidmode = glfwGetVideoMode(glfwGetPrimaryMonitor());
 
 		glfwSetWindowPos(
 			window,

File: modules/core/src/test/java/org/lwjgl/system/libffi/LibFFITest.java
Patch:
@@ -28,7 +28,7 @@ public void testLibFFI() {
 		long memPutInt = getMemPutIntAddress();
 
 		// Prepare the call interface
-		ByteBuffer cif = FFICIF.malloc();
+		FFICIF cif = FFICIF.malloc();
 
 		PointerBuffer argumentTypes = BufferUtils.createPointerBuffer(4); // 4 arguments
 		argumentTypes.put(0, ffi_type_pointer); // JNIEnv*
@@ -81,6 +81,8 @@ public void testLibFFI() {
 
 		// Validate
 		assertEquals(target.get(0), 0xBAADF00D);
+
+		cif.free();
 	}
 
 	private static long getMemPutIntAddress() {

File: modules/templates/src/main/java/org/lwjgl/PointerBuffer.java
Patch:
@@ -8,7 +8,6 @@
 
 /** Interface version of PointerBuffer, used for compiling the Templates module before the Core module. */
 public interface PointerBuffer extends Comparable<PointerBuffer> {
-	long address();
 	long address0();
 	int capacity();
 	int position();

File: modules/core/src/main/java/org/lwjgl/system/libffi/Closure.java
Patch:
@@ -270,7 +270,7 @@ protected Long(ByteBuffer cif) {
 			super(cif, NATIVE_CALLBACK_LONG);
 		}
 
-		protected abstract int callback(long args);
+		protected abstract long callback(long args);
 	}
 
 	/** A {@code Closure} that returns a float value. */
@@ -279,7 +279,7 @@ protected Float(ByteBuffer cif) {
 			super(cif, NATIVE_CALLBACK_FLOAT);
 		}
 
-		protected abstract int callback(long args);
+		protected abstract float callback(long args);
 	}
 
 	/** A {@code Closure} that returns a double value. */
@@ -288,7 +288,7 @@ protected Double(ByteBuffer cif) {
 			super(cif, NATIVE_CALLBACK_DOUBLE);
 		}
 
-		protected abstract int callback(long args);
+		protected abstract double callback(long args);
 	}
 
 	/** A {@code Closure} that returns a pointer value. */

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -199,7 +199,7 @@ private static long track(long address, long size) {
 					THREADS.put(threadId, t.getName());
 
 				StackTraceElement[] stackTrace = t.getStackTrace();
-				int depth = 3;
+				int depth = Math.min(stackTrace.length, 4);
 				for (; depth < stackTrace.length; depth++ ) {
 					if ( !"org.lwjgl.system.MemoryUtil".equals(stackTrace[depth].getClassName()) )
 						break;

File: modules/core/src/test/java/org/lwjgl/demo/opengl/AbstractGears.java
Patch:
@@ -41,8 +41,8 @@ public void execute() {
 		} finally {
 			try {
 				destroy();
-			} catch (Exception e) {
-				e.printStackTrace();
+			} catch (Throwable t) {
+				t.printStackTrace();
 			}
 		}
 	}

File: modules/core/src/main/java/org/lwjgl/glfw/LibGLFW.java
Patch:
@@ -6,6 +6,7 @@
 
 import org.lwjgl.LWJGLUtil;
 import org.lwjgl.LWJGLUtil.Platform;
+import org.lwjgl.Pointer;
 import org.lwjgl.system.FunctionProvider;
 
 /**
@@ -28,7 +29,7 @@ final class LibGLFW {
 
 	// TODO: Refactor when GLFW adds client library selection
 	static {
-		FunctionProvider functionProvider = LWJGLUtil.loadLibraryNative(System.getProperty("org.lwjgl.glfw.libname", "glfw"));
+		FunctionProvider functionProvider = LWJGLUtil.loadLibraryNative(System.getProperty("org.lwjgl.glfw.libname", Pointer.BITS64 ? "glfw" : "glfw32"));
 
 		__GLFW = new GLFW(functionProvider);
 

File: modules/core/src/main/java/org/lwjgl/system/MemoryManage.java
Patch:
@@ -24,7 +24,9 @@ static MemoryAllocator getInstance() {
 				Class.forName("org.lwjgl.system.jemalloc.JEmalloc").getMethod("getInstance").invoke(null);
 				return new JEmallocAllocator();
 			} catch (Exception e) {
-				LWJGLUtil.log("[MemoryAllocator] Failed to load the jemalloc library: " + e.getMessage());
+				if ( LWJGLUtil.DEBUG )
+					e.printStackTrace();
+				LWJGLUtil.log("[MemoryAllocator] Failed to load the jemalloc library.");
 			}
 		}
 

File: modules/core/src/main/java/org/lwjgl/system/windows/WindowsLibrary.java
Patch:
@@ -4,6 +4,7 @@
  */
 package org.lwjgl.system.windows;
 
+import org.lwjgl.LWJGLUtil;
 import org.lwjgl.Sys;
 import org.lwjgl.system.DynamicLinkLibrary;
 
@@ -30,6 +31,8 @@ public WindowsLibrary(String name) {
 		handle = LoadLibrary(name);
 		if ( handle == NULL )
 			windowsThrowException("Failed to load library: " + name);
+
+		LWJGLUtil.log("Loaded native library: " + name);
 	}
 
 	@Override

File: modules/core/src/main/java/org/lwjgl/opencl/CLPlatform.java
Patch:
@@ -105,7 +105,7 @@ public static List<CLPlatform> getPlatforms(Filter<CLPlatform> filter) {
 		long clGetPlatformIDs = CL10.getInstance().GetPlatformIDs;
 
 		APIBuffer __buffer = apiBuffer();
-		int errcode = invokeIPPI(clGetPlatformIDs, 0, NULL, __buffer.address());
+		int errcode = callIPPI(clGetPlatformIDs, 0, NULL, __buffer.address());
 		checkCLError(errcode);
 
 		int num_platforms = __buffer.intValue(0);
@@ -114,7 +114,7 @@ public static List<CLPlatform> getPlatforms(Filter<CLPlatform> filter) {
 
 		__buffer.bufferParam(num_platforms << POINTER_SHIFT);
 
-		errcode = invokeIPPI(clGetPlatformIDs, num_platforms, __buffer.address(), NULL);
+		errcode = callIPPI(clGetPlatformIDs, num_platforms, __buffer.address(), NULL);
 		checkCLError(errcode);
 
 		long[] platformIDs = new long[num_platforms];

File: modules/core/src/main/java/org/lwjgl/system/APIBuffer.java
Patch:
@@ -21,7 +21,7 @@
  */
 public class APIBuffer {
 
-	private static final int DEFAULT_CAPACITY = 1024;
+	private static final int DEFAULT_CAPACITY = 128;
 
 	private ByteBuffer buffer;
 	private long       address;
@@ -32,7 +32,7 @@ public class APIBuffer {
 	private int[] stack = new int[4];
 
 	public APIBuffer() {
-		buffer = BufferUtils.createAlignedByteBufferPage(DEFAULT_CAPACITY);
+		buffer = BufferUtils.createAlignedByteBufferCacheLine(DEFAULT_CAPACITY);
 		address = memAddress(buffer);
 	}
 
@@ -98,7 +98,7 @@ private void ensureCapacity(int capacity) {
 		if ( capacity <= buffer.capacity() )
 			return;
 
-		ByteBuffer resized = BufferUtils.createAlignedByteBufferPage(mathRoundPoT(capacity));
+		ByteBuffer resized = BufferUtils.createAlignedByteBufferCacheLine(mathRoundPoT(capacity));
 
 		resized.put(buffer);
 		resized.clear();

File: modules/core/src/main/java/org/lwjgl/system/APIUtil.java
Patch:
@@ -33,7 +33,7 @@ protected APIBuffer initialValue() {
 	private APIUtil() {
 	}
 
-	/** Returns a resetted thread-local {@link APIBuffer}. */
+	/** Returns a thread-local {@link APIBuffer} that has been reset. */
 	public static APIBuffer apiBuffer() {
 		return API_BUFFERS.get().reset();
 	}

File: modules/core/src/main/java/org/lwjgl/Pointer.java
Patch:
@@ -4,8 +4,6 @@
  */
 package org.lwjgl;
 
-import static org.lwjgl.system.MemoryUtil.*;
-
 /**
  * Pointer interface.
  * <p/>
@@ -19,7 +17,7 @@
 public interface Pointer {
 
 	/** The pointer size in bytes. Will be 4 on a 32bit JVM and 8 on a 64bit one. */
-	int POINTER_SIZE = memPointerSize();
+	int POINTER_SIZE = Sys.getPointerSize();
 
 	/** The pointer size power-of-two. Will be 2 on a 32bit JVM and 3 on a 64bit one. */
 	int POINTER_SHIFT = POINTER_SIZE == 8 ? 3 : 2;

File: modules/core/src/main/java/org/lwjgl/Sys.java
Patch:
@@ -37,6 +37,9 @@ static void touch() {
 		// Intentionally empty
 	}
 
+	// Returns sizeof(void *)
+	static native int getPointerSize();
+
 	/** Returns the LWJGL version. */
 	public static String getVersion() {
 		return String.valueOf(VERSION_MAJOR) + '.' + VERSION_MINOR + '.' + VERSION_REVISION + BUILD_TYPE.postfix;

File: modules/core/src/main/java/org/lwjgl/LWJGLUtil.java
Patch:
@@ -274,7 +274,7 @@ public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Intege
 		return target;
 	}
 
-	public static Class getOptionalClass(String className) {
+	public static Class<?> getOptionalClass(String className) {
 		try {
 			return Class.forName(className);
 		} catch (ClassNotFoundException e) {

File: modules/core/src/main/java/org/lwjgl/egl/EGLException.java
Patch:
@@ -7,6 +7,8 @@
 /** A runtime exception thrown by LWJGL when it encounters an EGL error. */
 public class EGLException extends RuntimeException {
 
+	private static final long serialVersionUID = 1L;
+
 	public EGLException(int errorCode) {
 		this(String.format("%s [0x%X]", EGLUtil.getErrorString(errorCode), errorCode));
 	}

File: modules/core/src/main/java/org/lwjgl/openal/OpenALException.java
Patch:
@@ -7,6 +7,8 @@
 /** A runtime exception thrown by LWJGL when it encounters an OpenAL error. */
 public class OpenALException extends RuntimeException {
 
+	private static final long serialVersionUID = 1L;
+
 	public OpenALException() {
 		super();
 	}
@@ -23,5 +25,4 @@ public OpenALException(Throwable cause) {
 		super(cause);
 	}
 
-}
-
+}
\ No newline at end of file

File: modules/core/src/main/java/org/lwjgl/opencl/OpenCLException.java
Patch:
@@ -7,6 +7,8 @@
 /** A runtime exception thrown by LWJGL when it encounters an OpenCL error. */
 public class OpenCLException extends RuntimeException {
 
+	private static final long serialVersionUID = 1L;
+
 	public OpenCLException() {
 		super();
 	}
@@ -23,5 +25,4 @@ public OpenCLException(Throwable cause) {
 		super(cause);
 	}
 
-}
-
+}
\ No newline at end of file

File: modules/core/src/main/java/org/lwjgl/opengl/OpenGLException.java
Patch:
@@ -7,6 +7,8 @@
 /** A runtime exception thrown by LWJGL when it encounters an OpenGL error. */
 public class OpenGLException extends RuntimeException {
 
+	private static final long serialVersionUID = 1L;
+
 	public OpenGLException(int gl_error_code) {
 		this(String.format("%s [0x%X]", GLUtil.getErrorString(gl_error_code), gl_error_code));
 	}
@@ -19,5 +21,4 @@ public OpenGLException(String format, Object... args) {
 		super(String.format(format, args));
 	}
 
-}
-
+}
\ No newline at end of file

File: modules/core/src/main/java/org/lwjgl/opengles/OpenGLESException.java
Patch:
@@ -7,6 +7,8 @@
 /** A runtime exception thrown by LWJGL when it encounters an OpenGL ES error. */
 public class OpenGLESException extends RuntimeException {
 
+	private static final long serialVersionUID = 1L;
+
 	public OpenGLESException(int errorCode) {
 		this(String.format("%s [0x%X]", GLESUtil.getErrorString(errorCode), errorCode));
 	}
@@ -19,5 +21,4 @@ public OpenGLESException(String format, Object... args) {
 		super(String.format(format, args));
 	}
 
-}
-
+}
\ No newline at end of file

File: modules/core/src/main/java/org/lwjgl/system/libffi/ClosureError.java
Patch:
@@ -10,6 +10,8 @@
  */
 public class ClosureError extends Error {
 
+	private static final long serialVersionUID = 1L;
+
 	public ClosureError() {
 		super("Callback failed because the closure instance has been garbage collected.");
 	}

File: modules/core/src/test/java/org/lwjgl/demo/glfw/Events.java
Patch:
@@ -66,7 +66,7 @@ private static void demo() {
 		System.out.println("Window opened.");
 
 		try {
-			Class STBImage = Class.forName("org.lwjgl.stb.STBImage"); // Skip if the stb bindings are not available
+			Class<?> STBImage = Class.forName("org.lwjgl.stb.STBImage"); // Skip if the stb bindings are not available
 
 			ByteBuffer png;
 			try {

File: modules/core/src/main/java/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -1076,7 +1076,7 @@ public static int memStrLen2(ByteBuffer buffer, int from) {
 	 * @return the decode {@link String} or null if the specified {@code address} is null
 	 */
 	public static String memDecodeASCII(long address) {
-		return memDecodeASCII(memByteBufferNT1(address));
+		return address == NULL ? null : memDecodeASCII(memByteBufferNT1(address));
 	}
 
 	/**
@@ -1137,7 +1137,7 @@ public static String memDecodeASCII(ByteBuffer buffer, int length, int offset) {
 	 * @return the decode {@link String} or null if the specified {@code address} is null
 	 */
 	public static String memDecodeUTF8(long address) {
-		return memDecodeUTF8(memByteBufferNT1(address));
+		return address == NULL ? null : memDecodeUTF8(memByteBufferNT1(address));
 	}
 
 	/**
@@ -1248,7 +1248,7 @@ private static boolean isMalformed4(int b2, int b3, int b4) {
 	 * @return the decode {@link String} or null if the specified {@code address} is null
 	 */
 	public static String memDecodeUTF16(long address) {
-		return memDecodeUTF16(memByteBufferNT2(address));
+		return address == NULL ? null : memDecodeUTF16(memByteBufferNT2(address));
 	}
 
 	/**

File: modules/core/src/main/java/org/lwjgl/system/linux/LinuxLibrary.java
Patch:
@@ -26,7 +26,7 @@ public LinuxLibrary(String name) {
 			handle = dlopen(name, RTLD_LAZY | RTLD_GLOBAL);
 
 		if ( handle == NULL ) // TODO: better error handling
-			throw new RuntimeException("Failed to dynamically load library: " + name);
+			throw new RuntimeException("Failed to dynamically load library: " + name + "(error = " + dlerror() + ")");
 
 		this.handle = handle;
 	}

File: modules/core/src/main/java/org/lwjgl/Sys.java
Patch:
@@ -53,7 +53,7 @@ public static String getVersion() {
 	}
 
 	/** The development state of the current build. */
-	public static enum BuildType {
+	public enum BuildType {
 		/** Work in progress, unstable. */
 		ALPHA("a"),
 		/** Feature complete, unstable. */

File: modules/core/src/main/java/org/lwjgl/opengl/GLContext.java
Patch:
@@ -168,7 +168,7 @@ public Closure setupDebugMessageCallback(PrintStream stream) {
 			log("[GL] Using KHR_debug for error logging.");
 			GLDebugMessageCallback proc = createDEBUGPROC(stream);
 			KHRDebug.glDebugMessageCallback(proc, NULL);
-			if ( (glGetInteger(GL_CONTEXT_FLAGS) & GL_CONTEXT_FLAG_DEBUG_BIT) == 0 ) {
+			if ( capabilities.OpenGL30 && (glGetInteger(GL_CONTEXT_FLAGS) & GL_CONTEXT_FLAG_DEBUG_BIT) == 0 ) {
 				log("[GL] Warning: A non-debug context may not produce any debug output.");
 				glEnable(GL_DEBUG_OUTPUT);
 			}

File: modules/core/src/test/java/org/lwjgl/demo/glfw/Events.java
Patch:
@@ -66,7 +66,7 @@ private static void demo() {
 		System.out.println("Window opened.");
 
 		try {
-			Class.forName("STBImage"); // Skip if the stb bindings are not available
+			Class.forName("org.lwjgl.stb.STBImage"); // Skip if the stb bindings are not available
 
 			ByteBuffer png;
 			try {

File: src/core/org/lwjgl/opencl/CLPlatform.java
Patch:
@@ -152,6 +152,8 @@ public List<CLDevice> getDevices(int device_type) {
 	public List<CLDevice> getDevices(int device_type, Filter<CLDevice> filter) {
 		APIBuffer __buffer = apiBuffer();
 		int errcode = clGetDeviceIDs(getPointer(), device_type, 0, null, __buffer.buffer());
+		if ( errcode == CL_DEVICE_NOT_FOUND )
+			return Collections.emptyList();
 		checkCLError(errcode);
 
 		int num_devices = __buffer.intValue(0);

File: src/tests/org/lwjgl/demo/stb/Vorbis.java
Patch:
@@ -48,7 +48,7 @@ public static void main(String[] args) {
 		} else
 			filePath = args[0];
 
-		ALContext al = ALContext.create(null, 48000, 60, false);
+		ALContext al = ALContext.create();
 
 		int source = alGenSources();
 

File: src/core/org/lwjgl/Sys.java
Patch:
@@ -16,7 +16,7 @@
 public final class Sys {
 
 	/** The native library name */
-	private static final String JNI_LIBRARY_NAME = System.getProperty("org.lwjgl.libname", "lwjgl");
+	public static final String JNI_LIBRARY_NAME = System.getProperty("org.lwjgl.libname", System.getProperty("os.arch").contains("64") ? "lwjgl" : "lwjgl32");
 
 	/** Current version of library. */
 	public static final int

File: src/core/org/lwjgl/openal/ALC.java
Patch:
@@ -5,6 +5,7 @@
 package org.lwjgl.openal;
 
 import org.lwjgl.LWJGLUtil;
+import org.lwjgl.Pointer;
 import org.lwjgl.system.APIBuffer;
 import org.lwjgl.system.DynamicLinkLibrary;
 import org.lwjgl.system.FunctionProviderLocal;
@@ -32,7 +33,7 @@ public static void create() {
 		String libName;
 		switch ( LWJGLUtil.getPlatform() ) {
 			case WINDOWS:
-				libName = "OpenAL32";
+				libName = "OpenAL";
 				break;
 			case LINUX:
 				libName = "openal";
@@ -44,7 +45,7 @@ public static void create() {
 				throw new IllegalStateException();
 		}
 
-		create(System.getProperty("org.lwjgl.openal.libname", libName));
+		create(System.getProperty("org.lwjgl.openal.libname", Pointer.BITS64 ? libName : libName + "32"));
 	}
 
 	public static void create(String libName) {

File: src/core/org/lwjgl/system/windows/WindowsLibrary.java
Patch:
@@ -4,6 +4,7 @@
  */
 package org.lwjgl.system.windows;
 
+import org.lwjgl.Sys;
 import org.lwjgl.system.DynamicLinkLibrary;
 
 import static org.lwjgl.system.windows.WinBase.*;
@@ -13,7 +14,7 @@
 public class WindowsLibrary extends DynamicLinkLibrary.Default {
 
 	/** The LWJGL dll handle. */
-	public static final long HINSTANCE = GetModuleHandle("lwjgl");
+	public static final long HINSTANCE = GetModuleHandle(Sys.JNI_LIBRARY_NAME);
 
 	static {
 		if ( HINSTANCE == 0 )

File: src/tests/org/lwjgl/system/libffi/LibFFITest.java
Patch:
@@ -7,6 +7,7 @@
 import org.lwjgl.BufferUtils;
 import org.lwjgl.LWJGLUtil;
 import org.lwjgl.PointerBuffer;
+import org.lwjgl.Sys;
 import org.lwjgl.system.DynamicLinkLibrary;
 import org.testng.annotations.Test;
 
@@ -85,7 +86,7 @@ public void testLibFFI() {
 	}
 
 	private static long getMemPutIntAddress() {
-		DynamicLinkLibrary lib = LWJGLUtil.loadLibraryNative("lwjgl");
+		DynamicLinkLibrary lib = LWJGLUtil.loadLibraryNative(Sys.JNI_LIBRARY_NAME);
 
 		long nMemPutInt = lib.getFunctionAddress("Java_org_lwjgl_system_MemoryUtil_nMemPutInt");
 		if ( nMemPutInt == NULL )

File: src/tests/org/lwjgl/system/windows/WindowsTest.java
Patch:
@@ -4,6 +4,7 @@
  */
 package org.lwjgl.system.windows;
 
+import org.lwjgl.Sys;
 import org.testng.annotations.Test;
 
 import java.nio.ByteBuffer;
@@ -40,7 +41,7 @@ public static void main(String[] args) {
 
 	public void testLWJGLInstance() {
 		assertEquals(
-			GetModuleHandle("lwjgl"),
+			GetModuleHandle(Sys.JNI_LIBRARY_NAME),
 			HINSTANCE
 		);
 	}

File: src/core/org/lwjgl/openal/ALContext.java
Patch:
@@ -93,7 +93,7 @@ public static ALContext create() {
 	 * @param refresh    the refresh intervals, in Hz
 	 * @param sync       a flag, indicating a synchronous context
 	 *
-	 * @return
+	 * @return the new ALContext
 	 */
 	public static ALContext create(String deviceName, int frequency, int refresh, boolean sync) {
 		ALDevice device = ALDevice.create(deviceName);

File: src/templates/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -200,7 +200,7 @@ private void format() {
 		Pattern.MULTILINE | Pattern.DOTALL
 	);
 
-	private static final Pattern COMMENT_CLEANUP = Pattern.compile("[\n\n]*(?:\\s*[*])?\\s+", Pattern.MULTILINE);
+	private static final Pattern COMMENT_CLEANUP = Pattern.compile("[\n\r]*(?:\\s*[*])?\\s+", Pattern.MULTILINE);
 	private static final Pattern CODE_CLEANUP    = Pattern.compile("<([^>]+)>");
 	private static final Pattern TOKEN_SPLIT     = Pattern.compile("(?<!@code)\\s+"); // Don't split code fragments
 

File: src/core/org/lwjgl/openal/AL.java
Patch:
@@ -8,7 +8,6 @@
 import org.lwjgl.system.APIBuffer;
 import org.lwjgl.system.FunctionProvider;
 
-import java.nio.ByteBuffer;
 import java.util.HashSet;
 import java.util.Set;
 import java.util.StringTokenizer;

File: src/core/org/lwjgl/opengl/GLChecks.java
Patch:
@@ -7,7 +7,6 @@
 import org.lwjgl.LWJGLUtil;
 
 import static org.lwjgl.opengl.GL11.*;
-import static org.lwjgl.opengl.GL11.glGetInteger;
 import static org.lwjgl.opengl.GL15.*;
 import static org.lwjgl.opengl.GL21.*;
 import static org.lwjgl.opengl.GL30.*;

File: src/core/org/lwjgl/opengl/GLContext.java
Patch:
@@ -18,7 +18,6 @@
 import static org.lwjgl.opengl.ARBDebugOutput.*;
 import static org.lwjgl.opengl.ARBImaging.*;
 import static org.lwjgl.opengl.GL11.*;
-import static org.lwjgl.opengl.GL11.glGetInteger;
 import static org.lwjgl.opengl.GL30.*;
 import static org.lwjgl.opengl.GL43.*;
 import static org.lwjgl.system.MemoryUtil.*;

File: src/tests/org/lwjgl/demo/opencl/Mandelbrot.java
Patch:
@@ -784,7 +784,7 @@ private void initGLObjects() {
 
 		FloatBuffer projectionMatrix = BufferUtils.createFloatBuffer(4 * 4);
 		glOrtho(0.0f, width, 0.0f, height, 0.0f, 1.0f, projectionMatrix);
-		glUniformMatrix4(projectionUniform, false, projectionMatrix);
+		glUniformMatrix4fv(projectionUniform, false, projectionMatrix);
 
 		shouldInitBuffers = false;
 	}

File: src/tests/org/lwjgl/demo/opengl/raytracing/Demo.java
Patch:
@@ -336,7 +336,7 @@ private void initQuadProgram() {
 	private void initComputeProgram() {
 		glUseProgram(computeProgram);
 		IntBuffer workGroupSize = BufferUtils.createIntBuffer(3);
-		glGetProgram(computeProgram, GL_COMPUTE_WORK_GROUP_SIZE, workGroupSize);
+		glGetProgramiv(computeProgram, GL_COMPUTE_WORK_GROUP_SIZE, workGroupSize);
 		workGroupSizeX = workGroupSize.get(0);
 		workGroupSizeY = workGroupSize.get(1);
 		eyeUniform = glGetUniformLocation(computeProgram, "eye");
@@ -351,7 +351,7 @@ private void initComputeProgram() {
 		/* Query the "image binding point" of the image uniform */
 		IntBuffer params = BufferUtils.createIntBuffer(1);
 		int loc = glGetUniformLocation(computeProgram, "framebufferImage");
-		glGetUniform(computeProgram, loc, params);
+		glGetUniformiv(computeProgram, loc, params);
 		framebufferImageBinding = params.get(0);
 
 		glUseProgram(0);

File: src/tests/org/lwjgl/demo/opengl/raytracing/Demo20.java
Patch:
@@ -378,8 +378,7 @@ private void createBoxesTexture() {
 			fb.put(min.x).put(min.y).put(min.z).put(0.0f);
 			fb.put(max.x).put(max.y).put(max.z).put(0.0f);
 		}
-		glTexImage2D(GL_TEXTURE_2D, 0, ARBTextureFloat.GL_RGBA32F_ARB, Demo20.boxes.length, 1, 0, GL_RGBA, GL_FLOAT,
-				(ByteBuffer) bb);
+		glTexImage2D(GL_TEXTURE_2D, 0, ARBTextureFloat.GL_RGBA32F_ARB, Demo20.boxes.length, 1, 0, GL_RGBA, GL_FLOAT, bb);
 		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
 		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
 		glBindTexture(GL_TEXTURE_2D, 0);

File: src/tests/org/lwjgl/demo/opengl/textures/Texture2DArrayMipmapping.java
Patch:
@@ -292,7 +292,7 @@ private void matrixUniform(int location, Matrix4f value, boolean transpose) {
 				.put(value.m11).put(value.m21).put(value.m31).put(value.m02).put(value.m12).put(value.m22)
 				.put(value.m32).put(value.m03).put(value.m13).put(value.m23).put(value.m33);
 		matrixByteBufferFloatView.rewind();
-		glUniformMatrix4f(location, 1, transpose, matrixByteBuffer);
+		glUniformMatrix4fv(location, 1, transpose, matrixByteBuffer);
 	}
 
 	private void update() {

File: src/tests/org/lwjgl/demo/opengl/raytracing/Demo20.java
Patch:
@@ -110,7 +110,7 @@ private void init() throws IOException {
 			@Override
 			public void invoke(int error, long description) {
 				if (error == GLFW_VERSION_UNAVAILABLE)
-					System.err.println("This demo requires OpenGL 3.3 or higher.");
+					System.err.println("This demo requires OpenGL 2.0 or higher.");
 				delegate.invoke(error, description);
 			}
 

File: src/tests/org/lwjgl/demo/opengl/raytracing/PhotonMappingBindlessDemo.java
Patch:
@@ -129,14 +129,14 @@ class TextureInfo {
 	private float rotationAboutY = 0.8f;
 
 	private long firstTime;
-	private float lightRadius = 0.4f;
+	private float lightRadius = 0.2f;
 
 	private Vector3f tmpVector = new Vector3f();
 	private Vector3f cameraLookAt = new Vector3f(0.0f, 0.5f, 0.0f);
 	private Vector3f cameraUp = new Vector3f(0.0f, 1.0f, 0.0f);
 	private ByteBuffer matrixByteBuffer = BufferUtils.createByteBuffer(4 * 16);
 	private FloatBuffer matrixByteBufferFloatView = matrixByteBuffer.asFloatBuffer();
-	private Vector3f lightCenterPosition = new Vector3f(2.5f, 2.9f, 3);
+	private Vector3f lightCenterPosition = new Vector3f(2.5f, 1.4f, 3);
 	private ByteBuffer clearTexBuffer = BufferUtils.createByteBuffer(4);
 
 	GLFWErrorCallback errCallback;

File: src/tests/org/lwjgl/demo/opengl/raytracing/PhotonMappingBindlessDemo.java
Patch:
@@ -642,7 +642,7 @@ private void createRasterProgram() throws IOException {
 		IntBuffer props = BufferUtils.createIntBuffer(1);
 		IntBuffer params = BufferUtils.createIntBuffer(1);
 		props.put(0, GL_BUFFER_BINDING);
-		int samplersResourceIndex = glGetProgramResourceIndex(photonTraceProgram, GL_UNIFORM_BLOCK, "Samplers");
+		int samplersResourceIndex = glGetProgramResourceIndex(rasterProgram, GL_UNIFORM_BLOCK, "Samplers");
 		glGetProgramResource(rasterProgram, GL_UNIFORM_BLOCK, samplersResourceIndex, props, null, params);
 		samplersUboBinding = params.get(0);
 	}

File: src/tests/org/lwjgl/demo/opengl/raytracing/PhotonMappingBindlessDemo.java
Patch:
@@ -643,7 +643,7 @@ private void createRasterProgram() throws IOException {
 		IntBuffer params = BufferUtils.createIntBuffer(1);
 		props.put(0, GL_BUFFER_BINDING);
 		int samplersResourceIndex = glGetProgramResourceIndex(photonTraceProgram, GL_UNIFORM_BLOCK, "Samplers");
-		glGetProgramResource(photonTraceProgram, GL_UNIFORM_BLOCK, samplersResourceIndex, props, null, params);
+		glGetProgramResource(rasterProgram, GL_UNIFORM_BLOCK, samplersResourceIndex, props, null, params);
 		samplersUboBinding = params.get(0);
 	}
 

File: src/tests/org/lwjgl/demo/opengl/textures/Texture2DArrayMipmapping.java
Patch:
@@ -61,7 +61,7 @@ private void init() throws IOException {
 			@Override
 			public void invoke(int error, long description) {
 				if (error == GLFW_VERSION_UNAVAILABLE)
-					System.err.println("This demo requires OpenGL 4.3 or higher.");
+					System.err.println("This demo requires OpenGL 3.3 or higher.");
 				delegate.invoke(error, description);
 			}
 

File: src/tests/org/lwjgl/demo/opengl/raytracing/HybridDemo.java
Patch:
@@ -537,7 +537,7 @@ private void createRaytracingTexture() {
 		glBindTexture(GL_TEXTURE_2D, raytraceTexture);
 		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
 		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
-		glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA32F, width, height, 0, GL_RGBA, GL_FLOAT, (ByteBuffer) null);
+		glTexStorage2D(GL_TEXTURE_2D, 1, GL_RGBA32F, width, height);
 		glBindTexture(GL_TEXTURE_2D, 0);
 	}
 

File: src/tests/org/lwjgl/demo/opengl/raytracing/HybridDemo.java
Patch:
@@ -537,7 +537,7 @@ private void createRaytracingTexture() {
 		glBindTexture(GL_TEXTURE_2D, raytraceTexture);
 		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
 		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
-		glTexStorage2D(GL_TEXTURE_2D, 1, GL_RGBA32F, width, height);
+		glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA32F, width, height, 0, GL_RGBA, GL_FLOAT, (ByteBuffer) null);
 		glBindTexture(GL_TEXTURE_2D, 0);
 	}
 

File: src/tests/org/lwjgl/demo/opengl/raytracing/PhotonMappingDemo.java
Patch:
@@ -164,8 +164,6 @@ public void release() {
 			throw new AssertionError("Failed to create the GLFW window");
 		}
 
-		System.out.println("Press keypad '+' or 'page up' to increase the number of bounces.");
-		System.out.println("Press keypad '-' or 'page down' to decrease the number of bounces.");
 		glfwSetKeyCallback(window, keyCallback = new GLFWKeyCallback() {
 			@Override
 			public void invoke(long window, int key, int scancode, int action, int mods) {

File: src/tests/org/lwjgl/demo/opengl/raytracing/HybridDemoSsbo.java
Patch:
@@ -261,7 +261,7 @@ public void invoke(long window, int button, int action, int mods) {
 	private void createSceneSSBO() {
 		this.ssbo = glGenBuffers();
 		glBindBuffer(GL_SHADER_STORAGE_BUFFER, ssbo);
-		ByteBuffer ssboData = BufferUtils.createByteBuffer(4 * (4 + 4) * boxes.length);
+		ByteBuffer ssboData = BufferUtils.createByteBuffer(4 * (4 + 4) * boxes.length / 2);
 		FloatBuffer fv = ssboData.asFloatBuffer();
 		for (int i = 0; i < boxes.length; i += 2) {
 			Vector3f min = boxes[i];

File: src/tests/org/lwjgl/demo/opengl/raytracing/HybridDemoSsboInstancing.java
Patch:
@@ -265,7 +265,7 @@ public void invoke(long window, int button, int action, int mods) {
 	private void createSceneSSBO() {
 		this.ssbo = glGenBuffers();
 		glBindBuffer(GL_SHADER_STORAGE_BUFFER, ssbo);
-		ByteBuffer ssboData = BufferUtils.createByteBuffer(4 * (4 + 4) * boxes.length);
+		ByteBuffer ssboData = BufferUtils.createByteBuffer(4 * (4 + 4) * boxes.length / 2);
 		FloatBuffer fv = ssboData.asFloatBuffer();
 		for (int i = 0; i < boxes.length; i += 2) {
 			Vector3f min = boxes[i];

File: src/tests/org/lwjgl/demo/opengl/raytracing/PhotonMappingDemo.java
Patch:
@@ -261,7 +261,7 @@ public void invoke(long window, int button, int action, int mods) {
 	private void createSceneSSBO() {
 		this.ssbo = glGenBuffers();
 		glBindBuffer(GL_SHADER_STORAGE_BUFFER, ssbo);
-		ByteBuffer ssboData = BufferUtils.createByteBuffer(4 * (4 + 4) * boxes.length);
+		ByteBuffer ssboData = BufferUtils.createByteBuffer(4 * (4 + 4) * boxes.length / 2);
 		FloatBuffer fv = ssboData.asFloatBuffer();
 		for (int i = 0; i < boxes.length; i += 2) {
 			Vector3f min = boxes[i];

File: src/tests/org/lwjgl/demo/opengl/raytracing/PhotonMappingDemo.java
Patch:
@@ -100,7 +100,7 @@ public class PhotonMappingDemo {
 	private Vector3f cameraUp = new Vector3f(0.0f, 1.0f, 0.0f);
 	private ByteBuffer matrixByteBuffer = BufferUtils.createByteBuffer(4 * 16);
 	private FloatBuffer matrixByteBufferFloatView = matrixByteBuffer.asFloatBuffer();
-	private Vector3f lightCenterPosition = new Vector3f(1.5f, 2.9f, 3);
+	private Vector3f lightCenterPosition = new Vector3f(2.5f, 2.9f, 3);
 
 	GLFWErrorCallback errCallback;
 	GLFWKeyCallback keyCallback;

File: src/core/org/lwjgl/system/libffi/Closure.java
Patch:
@@ -149,15 +149,15 @@ public abstract class Closure extends Retainable.Default implements Pointer {
 
 	@Override
 	public long getPointer() {
-		if ( closure == NULL )
+		if ( isDestroyed() )
 			throw new IllegalStateException("This closure instance has been destroyed.");
 
 		return pointer;
 	}
 
 	@Override
 	protected void destroy() {
-		if ( jweak == NULL )
+		if ( isDestroyed() )
 			throw new IllegalStateException("This closure instance has been destroyed.");
 
 		memDeleteWeakGlobalRef(jweak);

File: src/tests/org/lwjgl/demo/util/Matrix4f.java
Patch:
@@ -112,7 +112,6 @@ public void set(float m[]) {
 	}
 
 	public float determinant() {
-		// less *,+,- calculation than expanded expression.
 		return
 			(m00 * m11 - m01 * m10) * (m22 * m33 - m23 * m32) - (m00 * m12 - m02 * m10) * (m21 * m33 - m23 * m31) +
 			(m00 * m13 - m03 * m10) * (m21 * m32 - m22 * m31) + (m01 * m12 - m02 * m11) * (m20 * m33 - m23 * m30) -

File: src/tests/org/lwjgl/demo/opengl/raytracing/Demo.java
Patch:
@@ -97,7 +97,7 @@ private void init() throws IOException {
 			@Override
 			public void invoke(int error, long description) {
 				if ( error == GLFW_VERSION_UNAVAILABLE )
-					System.err.println("This demo requires OpenGL 4.3 or higher. The Demo version works on OpenGL 3.3 or higher.");
+					System.err.println("This demo requires OpenGL 4.3 or higher. The Demo33 version works on OpenGL 3.3 or higher.");
 				delegate.invoke(error, description);
 			}
 

File: src/tests/org/lwjgl/demo/opencl/CLDemo.java
Patch:
@@ -122,7 +122,7 @@ public void invoke(long memobj, long user_data) {
 
 				long subbuffer = NULL;
 				if ( caps.OpenCL11 ) {
-					ByteBuffer buffer_region = cl_buffer_region.malloc(0, 64);
+					ByteBuffer buffer_region = CLBufferRegion.malloc(0, 64);
 
 					subbuffer = clCreateSubBuffer(buffer, CL_MEM_READ_ONLY, CL_BUFFER_CREATE_TYPE_REGION, buffer_region, errcode_ret);
 					checkCLError(errcode_ret);

File: src/tests/org/lwjgl/opencl/CLTest.java
Patch:
@@ -351,7 +351,7 @@ public void test(CLPlatform platform, PointerBuffer ctxProps, CLDevice device) {
 				if ( doContextCountChecks )
 					assertEquals(clGetContextInfoInt(context, CL_CONTEXT_REFERENCE_COUNT), 2);
 
-				ByteBuffer bufferRegion = cl_buffer_region.malloc(0, 64);
+				ByteBuffer bufferRegion = CLBufferRegion.malloc(0, 64);
 
 				long subbuffer = clCreateSubBuffer(buffer, CL_MEM_READ_ONLY, CL_BUFFER_CREATE_TYPE_REGION, bufferRegion, errcode_ret);
 				checkCLError(errcode_ret);

File: src/tests/org/lwjgl/system/libffi/LibFFITest.java
Patch:
@@ -48,7 +48,7 @@ public void testLibFFI() {
 		long glfwGetWindowSize = glfwGetWindowSizeAddress();
 
 		// Prepare the call interface
-		ByteBuffer cif = ffi_cif.malloc();
+		ByteBuffer cif = FFICIF.malloc();
 
 		PointerBuffer argumentTypes = BufferUtils.createPointerBuffer(5); // 5 arguments
 		argumentTypes.put(0, ffi_type_pointer); // JNIEnv*

File: src/tests/org/lwjgl/demo/glfw/WGLInterop.java
Patch:
@@ -89,7 +89,7 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 
 		// Creates an LWJGL GLContext from the GLFW context.
 		GLContext context = GLContext.createFromCurrent();
-		Closure debugproc = context.setupDebugMessageCallback();
+		Closure debugProc = context.setupDebugMessageCallback();
 
 		// Now we can retrieve the GLFW context's capabilities
 		ContextCapabilities caps = context.getCapabilities();
@@ -215,7 +215,8 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
 		wglDeleteBufferRegionARB(bufferRegion);
 
 		glfwDestroyWindow(window);
-		debugproc.release();
+		if ( debugProc != null )
+			debugProc.release();
 		keyfun.release();
 		windowsizefun.release();
 	}

File: src/tests/org/lwjgl/demo/windows/WGLDemo.java
Patch:
@@ -178,7 +178,8 @@ public static void main(String[] args) {
 		wglDeleteBufferRegionARB(bufferRegion);
 
 		context.destroy();
-		debugProc.release();
+		if ( debugProc != null )
+			debugProc.release();
 
 		window.destroy();
 	}

File: src/core/org/lwjgl/glfw/Callbacks.java
Patch:
@@ -228,12 +228,12 @@ public static String[] dropCallbackNamesString(int count, long names) {
 		return strings;
 	}
 
-	/** A functional interface that can be used with {@link #dropCallbackNamesApply(int, long, DropConsumerBuffer) dropfunNamesApply}. */
+	/** A functional interface that can be used with {@link #dropCallbackNamesApply(int, long, DropConsumerBuffer) dropCallbackNamesApply}. */
 	public interface DropConsumerBuffer {
 		void accept(int index, ByteBuffer name);
 	}
 
-	/** A functional interface that can be used with {@link #dropCallbackNamesApply(int, long, DropConsumerString) dropfunNamesApply}. */
+	/** A functional interface that can be used with {@link #dropCallbackNamesApply(int, long, DropConsumerString) dropCallbackNamesApply}. */
 	public interface DropConsumerString {
 		void accept(int index, String name);
 	}

File: src/tests/org/lwjgl/demo/windows/WGLDemo.java
Patch:
@@ -5,6 +5,7 @@
 package org.lwjgl.demo.windows;
 
 import org.lwjgl.BufferUtils;
+import org.lwjgl.demo.opengl.GLUtil;
 import org.lwjgl.opengl.ContextCapabilities;
 import org.lwjgl.opengl.DEBUGPROCAMD;
 import org.lwjgl.opengl.GL;
@@ -55,8 +56,7 @@ public static void main(String[] args) {
 
 		ContextCapabilities caps = GL.getCapabilities();
 
-		if ( caps.GL_AMD_debug_output )
-			glDebugMessageCallbackAMD(DEBUGPROCAMD.Util.getDefault());
+		GLUtil.debugSetupCallback(caps);
 
 		if ( caps.WGL_AMD_gpu_association ) {
 			int GPUs = wglGetGPUIDsAMD(null);

File: src/tests/org/lwjgl/demo/glfw/Events.java
Patch:
@@ -5,6 +5,7 @@
 import org.lwjgl.system.glfw.MonitorCallback;
 import org.lwjgl.system.glfw.WindowCallback;
 
+import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.glfw.GLFW.*;
 
 /** GLFW events demo. */
@@ -31,7 +32,7 @@ public static void main(String[] args) {
 
 	private static void demo() {
 		glfwDefaultWindowHints();
-		long window = glfwCreateWindow(640, 480, "GLFW Event Demo", 0L, 0L);
+		long window = glfwCreateWindow(640, 480, "GLFW Event Demo", NULL, NULL);
 		if ( window == 0L )
 			throw new IllegalStateException("Failed to create GLFW window.");
 

File: src/tests/org/lwjgl/demo/glfw/Gears.java
Patch:
@@ -17,6 +17,7 @@
 import java.nio.ByteBuffer;
 
 import static org.lwjgl.opengl.GL11.*;
+import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.glfw.GLFW.*;
 import static org.lwjgl.system.macosx.CGL.*;
 
@@ -51,7 +52,7 @@ protected void init() {
 		int WIDTH = 300;
 		int HEIGHT = 300;
 
-		window = glfwCreateWindow(WIDTH, HEIGHT, "GLFW Gears Demo", 0L, 0L);
+		window = glfwCreateWindow(WIDTH, HEIGHT, "GLFW Gears Demo", NULL, NULL);
 
 		WindowCallback.set(window, new WindowCallbackAdapter() {
 			@Override

File: src/tests/org/lwjgl/demo/glfw/MultipleWindows.java
Patch:
@@ -45,7 +45,7 @@ private static void demo() {
 		for ( int i = 0; i < windows.length; i++ ) {
 			final int windowIndex = i + 1;
 
-			long window = glfwCreateWindow(300, 200, "GLFW Demo - " + windowIndex, 0L, 0L);
+			long window = glfwCreateWindow(300, 200, "GLFW Demo - " + windowIndex, NULL, NULL);
 			if ( window == 0L )
 				error();
 

File: src/tests/org/lwjgl/demo/glfw/Threads.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.concurrent.CountDownLatch;
 
 import static org.lwjgl.opengl.GL11.*;
+import static org.lwjgl.system.MemoryUtil.*;
 import static org.lwjgl.system.glfw.GLFW.*;
 
 /**
@@ -45,7 +46,7 @@ public static void main(String[] args) {
 
 		GLFWThread[] threads = new GLFWThread[titles.length];
 		for ( int i = 0; i < titles.length; i++ ) {
-			long window = glfwCreateWindow(200, 200, titles[i], 0, 0);
+			long window = glfwCreateWindow(200, 200, titles[i], NULL, NULL);
 
 			if ( window == 0 ) {
 				System.out.println("Unable to create glfw window");

File: src/tests/org/lwjgl/demo/glfw/WGLInterop.java
Patch:
@@ -54,7 +54,7 @@ private static void demo() {
 		glfwWindowHint(GLFW_VISIBLE, GL_FALSE);
 		glfwWindowHint(GLFW_OPENGL_DEBUG_CONTEXT, GL_TRUE);
 
-		long window = glfwCreateWindow(640, 480, "GLFW-WGL Interop", 0L, 0L);
+		long window = glfwCreateWindow(640, 480, "GLFW-WGL Interop", NULL, NULL);
 		if ( window == 0L )
 			throw new IllegalStateException("Failed to create GLFW window.");
 

File: src/tests/org/lwjgl/system/libffi/LibFFITest.java
Patch:
@@ -125,7 +125,7 @@ private static long createGLFWWindow(int width, int height) {
 		glfwDefaultWindowHints();
 		glfwWindowHint(GLFW_VISIBLE, GL_FALSE);
 
-		return glfwCreateWindow(width, height, "LibFFI Demo", 0L, 0L);
+		return glfwCreateWindow(width, height, "LibFFI Demo", NULL, NULL);
 	}
 
 	private static long glfwGetWindowSizeAddress() {

File: src/tests/org/lwjgl/demo/opencl/CLDemo.java
Patch:
@@ -134,7 +134,7 @@ public void invoke(long cl_mem) {
 					PointerBuffer ev = BufferUtils.createPointerBuffer(1);
 
 					ByteBuffer kernelArgs = BufferUtils.createByteBuffer(POINTER_SIZE * 2 + 4);
-					kernelArgs.putInt(POINTER_SIZE, 1337);
+					kernelArgs.putInt(POINTER_SIZE * 2, 1337);
 
 					errcode = clEnqueueNativeKernel(queue, new CLNativeKernel.BufAdapter() {
 						@Override

File: src/tests/org/lwjgl/system/libffi/LibFFITest.java
Patch:
@@ -133,9 +133,6 @@ private static long createGLFWWindow(int width, int height) {
 	private static long glfwGetWindowSizeAddress() {
 		// dlopen cannot find Sys.getNativeLibrary(), so resolve the path manually.
 		String library = System.mapLibraryName(Sys.getNativeLibrary());
-		if ( LWJGLUtil.getPlatform() == Platform.MACOSX )
-			library = library.substring(0, library.length() - ".dylib".length()) + ".jnilib";
-
 		String[] libPaths = System.getProperty("org.lwjgl.librarypath", System.getProperty("java.library.path")).split(File.pathSeparator);
 		Path libPath = null;
 		for ( String path : libPaths ) {

File: src/core/org/lwjgl/LWJGLUtil.java
Patch:
@@ -314,7 +314,7 @@ public static String getPlatformName() {
 	 */
 	public static String[] getLibraryPaths(ClassLoader classloader, String libname, String... platform_lib_names) {
 		// need to pass path of possible locations of library to native side
-		List<String> possible_paths = new ArrayList<String>();
+		List<String> possible_paths = new ArrayList<>();
 
 		String classloader_path = getPathFromClassLoader(libname, classloader);
 		if ( classloader_path != null ) {
@@ -532,7 +532,7 @@ public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Intege
 	 */
 	public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Integer, String> target, Iterable<Class<?>> tokenClasses) {
 		if ( target == null )
-			target = new HashMap<Integer, String>(64);
+			target = new HashMap<>(64);
 
 		int TOKEN_MODIFIERS = Modifier.PUBLIC | Modifier.STATIC | Modifier.FINAL;
 

File: src/core/org/lwjgl/openal/AL.java
Patch:
@@ -78,7 +78,7 @@ public static ALCapabilities createCapabilities(long device) {
 			{ 0, 1 }  // OpenAL 1
 		};
 
-		Set<String> supportedExtensions = new HashSet<String>(32);
+		Set<String> supportedExtensions = new HashSet<>(32);
 
 		for ( int major = 1; major <= AL_VERSIONS.length; major++ ) {
 			int[] minors = AL_VERSIONS[major - 1];

File: src/core/org/lwjgl/openal/ALC.java
Patch:
@@ -155,7 +155,7 @@ public static List<String> getStringList(long deviceHandle, int token) {
 
 		ByteBuffer buffer = memByteBuffer(__result, Integer.MAX_VALUE);
 
-		List<String> strings = new ArrayList<String>();
+		List<String> strings = new ArrayList<>();
 
 		int offset = 0;
 		while ( true ) {
@@ -207,7 +207,7 @@ static ALCCapabilities createCapabilities(long device) {
 			{ 0, 1 },  // ALC 1
 		};
 
-		Set<String> supportedExtensions = new HashSet<String>(16);
+		Set<String> supportedExtensions = new HashSet<>(16);
 
 		for ( int major = 1; major <= ALC_VERSIONS.length; major++ ) {
 			int[] minors = ALC_VERSIONS[major - 1];

File: src/core/org/lwjgl/opencl/CL.java
Patch:
@@ -157,7 +157,7 @@ public static CLCapabilities createCapabilities(long platform) {
 		if ( LWJGLUtil.DEBUG && (clGetPlatformInfo == NULL || clGetDeviceIDs == NULL || clGetDeviceInfo == NULL) )
 			throw new OpenCLException("A core OpenCL function is missing. Make sure that OpenCL is available.");
 
-		Set<String> supportedExtensions = new HashSet<String>(32);
+		Set<String> supportedExtensions = new HashSet<>(32);
 
 		// Parse PLATFORM_EXTENSIONS string
 		String extensionsString = getPlatformInfo(platform, CL_PLATFORM_EXTENSIONS, clGetPlatformInfo);

File: src/core/org/lwjgl/opencl/CLDevice.java
Patch:
@@ -33,7 +33,7 @@ public static CLDevice create(long cl_device_id, CLPlatform platform) {
 	private static CLCapabilities createCapabilities(long cl_device_id, CLPlatform platform) {
 		long clGetDeviceInfo = CL10.getInstance(platform).GetDeviceInfo;
 
-		Set<String> supportedExtensions = new HashSet<String>(32);
+		Set<String> supportedExtensions = new HashSet<>(32);
 
 		// Parse DEVICE_EXTENSIONS string
 		String extensionsString = CL.getDeviceInfo(cl_device_id, CL_DEVICE_EXTENSIONS, clGetDeviceInfo);

File: src/core/org/lwjgl/opencl/CLPlatform.java
Patch:
@@ -20,7 +20,7 @@
 /** This class is a wrapper around a cl_platform_id pointer. */
 public class CLPlatform extends CLObject {
 
-	private static final FastLongMap<CLPlatform> platforms = new FastLongMap<CLPlatform>();
+	private static final FastLongMap<CLPlatform> platforms = new FastLongMap<>();
 
 	private CLCapabilities capabilities;
 
@@ -90,7 +90,7 @@ public static List<CLPlatform> getPlatforms(Filter<CLPlatform> filter) {
 		for ( int i = 0; i < num_platforms; i++ )
 			platformIDs[i] = __buffer.pointerValue(i << POINTER_SHIFT);
 
-		List<CLPlatform> platforms = new ArrayList<CLPlatform>(num_platforms);
+		List<CLPlatform> platforms = new ArrayList<>(num_platforms);
 		for ( int i = 0; i < num_platforms; i++ ) {
 			CLPlatform platform = create(platformIDs[i]);
 			if ( filter == null || filter.accept(platform) )
@@ -144,7 +144,7 @@ public List<CLDevice> getDevices(int device_type, Filter<CLDevice> filter) {
 		for ( int i = 0; i < num_devices; i++ )
 			deviceIDs[i] = __buffer.pointerValue(i << POINTER_SHIFT);
 
-		List<CLDevice> devices = new ArrayList<CLDevice>(num_devices);
+		List<CLDevice> devices = new ArrayList<>(num_devices);
 		for ( int i = 0; i < num_devices; i++ ) {
 			CLDevice device = CLDevice.create(deviceIDs[i], this);
 			if ( filter == null || filter.accept(device) )

File: src/core/org/lwjgl/opengl/GL.java
Patch:
@@ -33,7 +33,7 @@ public final class GL {
 
 	private static FunctionProvider functionProvider;
 
-	private static final ThreadLocal<GLContext> contextTL = new ThreadLocal<GLContext>();
+	private static final ThreadLocal<GLContext> contextTL = new ThreadLocal<>();
 
 	static {
 		create();
@@ -247,7 +247,7 @@ public static ContextCapabilities createCapabilities(boolean forwardCompatible)
 			{ 0, 1, 2, 3 },     // OpenGL 4
 		};
 
-		Set<String> supportedExtensions = new HashSet<String>(128);
+		Set<String> supportedExtensions = new HashSet<>(128);
 
 		for ( int major = 1; major <= GL_VERSIONS.length; major++ ) {
 			int[] minors = GL_VERSIONS[major - 1];

File: src/core/org/lwjgl/system/FastLongMap.java
Patch:
@@ -77,7 +77,7 @@ public V put(long key, V value) {
 			return oldValue;
 		}
 
-		table[index] = new Entry<V>(key, value, table[index]);
+		table[index] = new Entry<>(key, value, table[index]);
 
 		if ( size++ >= threshold )
 			rehash(table);

File: src/core/org/lwjgl/system/MemoryAccessSun.java
Patch:
@@ -5,7 +5,6 @@
 package org.lwjgl.system;
 
 import org.lwjgl.LWJGLUtil;
-import org.lwjgl.system.MemoryAccess.*;
 
 import java.lang.reflect.Field;
 import java.lang.reflect.Modifier;

File: src/core/org/lwjgl/system/glfw/WindowCallback.java
Patch:
@@ -73,7 +73,7 @@ public static enum Event {
 	}
 
 	// This is used like a Set.
-	private static final FastLongMap<Long> windows = new FastLongMap<Long>();
+	private static final FastLongMap<Long> windows = new FastLongMap<>();
 
 	private EnumSet<Event> eventTypes = EnumSet.noneOf(Event.class);
 

File: src/core/org/lwjgl/system/jglfw/JGLFW.java
Patch:
@@ -354,7 +354,7 @@ public final class JGLFW {
 
 	private static List<GLFWmonitor> monitors;
 
-	static List<GLFWwindow> windows = new ArrayList<GLFWwindow>(8);
+	static List<GLFWwindow> windows = new ArrayList<>(8);
 
 	private JGLFW() {
 	}
@@ -535,7 +535,7 @@ public static List<GLFWmonitor> glfwGetMonitors() {
 		if ( notInitialized() )
 			return null;
 
-		return new ArrayList<GLFWmonitor>(monitors);
+		return new ArrayList<>(monitors);
 	}
 
 	/**

File: src/core/org/lwjgl/system/jglfw/PlatformWin.java
Patch:
@@ -68,7 +68,7 @@ class PlatformWin implements Platform<GLFWwindowWin> {
 
 	private final TimerWin timer = new TimerWin();
 
-	private final ThreadLocal<GLFWwindowWin> currentWindow = new ThreadLocal<GLFWwindowWin>();
+	private final ThreadLocal<GLFWwindowWin> currentWindow = new ThreadLocal<>();
 
 	@Override
 	public boolean init() {
@@ -112,7 +112,7 @@ private void freeLibraries() {
 
 	@Override
 	public List<GLFWmonitor> getMonitors() {
-		List<GLFWmonitor> monitors = new ArrayList<GLFWmonitor>(4);
+		List<GLFWmonitor> monitors = new ArrayList<>(4);
 
 		ByteBuffer adapter = DISPLAY_DEVICE.malloc();
 		ByteBuffer device = DISPLAY_DEVICE.malloc();
@@ -183,7 +183,7 @@ public void getMonitorPos(GLFWmonitor monitor, IntBuffer xpos, IntBuffer ypos) {
 
 	@Override
 	public List<GLFWvidmode> getVideoModes(GLFWmonitor monitor) {
-		List<GLFWvidmode> vidmodes = new ArrayList<GLFWvidmode>(64);
+		List<GLFWvidmode> vidmodes = new ArrayList<>(64);
 
 		ByteBuffer monitorName = memEncodeUTF16(((GLFWmonitorWin)monitor).getAdapterName());
 

File: src/core/org/lwjgl/system/linux/XErrorHandler.java
Patch:
@@ -1,7 +1,5 @@
 package org.lwjgl.system.linux;
 
-import org.lwjgl.LWJGLUtil;
-
 import java.lang.reflect.Method;
 import java.nio.ByteBuffer;
 

File: src/templates/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -280,7 +280,7 @@ private static String formatConstants(String input, String prefix) {
 
 	private static void validateInteger(String intValue) {
 		Long l = Long.decode(intValue);
-		if ( (1L << 32) - 1 < l.longValue() )
+		if ( (1L << 32) - 1 < l )
 			throw new NumberFormatException("long value");
 	}
 

File: src/templates/org/lwjgl/system/ExcludeDoclet.java
Patch:
@@ -72,7 +72,7 @@ private static Object process(Object obj, Class expect) {
 				return obj;
 
 			Object[] entries = (Object[])obj;
-			List<Object> processed = new ArrayList<Object>(entries.length);
+			List<Object> processed = new ArrayList<>(entries.length);
 
 			for ( Object entry : entries ) {
 				if ( shouldExclude(entry) )

File: src/core/org/lwjgl/opencl/CLCommandQueue.java
Patch:
@@ -31,7 +31,7 @@ public CLContext getContext() {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetCommandQueueInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetCommandQueueInfo);
+		return nclGetCommandQueueInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetCommandQueueInfo);
 	}
 
 }
\ No newline at end of file

File: src/core/org/lwjgl/opencl/CLContext.java
Patch:
@@ -48,7 +48,7 @@ static CLContext create(long cl_context, CLPlatform platform, CLContextCallback
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetContextInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetContextInfo);
+		return nclGetContextInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetContextInfo);
 	}
 
 	@Override

File: src/core/org/lwjgl/opencl/CLDevice.java
Patch:
@@ -31,7 +31,7 @@ public static CLDevice create(long cl_device_id, CLPlatform platform) {
 	}
 
 	private static CLCapabilities createCapabilities(long cl_device_id, CLPlatform platform) {
-		long clGetDeviceInfo = CL10.getInstance(platform).clGetDeviceInfo;
+		long clGetDeviceInfo = CL10.getInstance(platform).GetDeviceInfo;
 
 		Set<String> supportedExtensions = new HashSet<String>(32);
 
@@ -63,7 +63,7 @@ public CLCapabilities getCapabilities() {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetDeviceInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetDeviceInfo);
+		return nclGetDeviceInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetDeviceInfo);
 	}
 
 }
\ No newline at end of file

File: src/core/org/lwjgl/opencl/CLEvent.java
Patch:
@@ -23,7 +23,7 @@ public static CLEvent create(long cl_event, CLContext context) {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetEventInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetEventInfo);
+		return nclGetEventInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetEventInfo);
 	}
 
 }
\ No newline at end of file

File: src/core/org/lwjgl/opencl/CLKernel.java
Patch:
@@ -61,7 +61,7 @@ public CLKernel setArg(int index, short value) {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetKernelInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetKernelInfo);
+		return nclGetKernelInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetKernelInfo);
 	}
 
 	/**

File: src/core/org/lwjgl/opencl/CLMem.java
Patch:
@@ -39,7 +39,7 @@ public static CLMem create(long pointer, CLMem parent) {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetMemObjectInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetMemObjectInfo);
+		return nclGetMemObjectInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetMemObjectInfo);
 	}
 
 }
\ No newline at end of file

File: src/core/org/lwjgl/opencl/CLPlatform.java
Patch:
@@ -102,7 +102,7 @@ public static List<CLPlatform> getPlatforms(Filter<CLPlatform> filter) {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetPlatformInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetPlatformInfo);
+		return nclGetPlatformInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetPlatformInfo);
 	}
 
 	/**

File: src/core/org/lwjgl/opencl/CLProgram.java
Patch:
@@ -28,11 +28,11 @@ public static CLProgram create(long cl_program, CLContext context) {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetProgramInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetProgramInfo);
+		return nclGetProgramInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetProgramInfo);
 	}
 
 	private int getBuildInfo(CLDevice device, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetProgramBuildInfo(getPointer(), device.getPointer(), param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetProgramBuildInfo);
+		return nclGetProgramBuildInfo(getPointer(), device.getPointer(), param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetProgramBuildInfo);
 	}
 
 	public int getBuildInfoInt(CLDevice device, int param_name) {

File: src/core/org/lwjgl/opencl/CLSampler.java
Patch:
@@ -23,7 +23,7 @@ public static CLSampler create(long cl_sampler, CLContext context) {
 
 	@Override
 	protected int getInfo(long pointer, int param_name, long param_value_size, long param_value, long param_value_size_ret) {
-		return nclGetSamplerInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.clGetSamplerInfo);
+		return nclGetSamplerInfo(pointer, param_name, param_value_size, param_value, param_value_size_ret, getCapabilities().__CL10.GetSamplerInfo);
 	}
 
 }
\ No newline at end of file

File: src/core/org/lwjgl/LWJGLUtil.java
Patch:
@@ -471,7 +471,8 @@ public Integer run() {
 	 */
 	public static void log(CharSequence msg) {
 		if ( DEBUG ) {
-			System.err.println("[LWJGL] " + msg);
+			System.err.print("[LWJGL] ");
+			System.err.println(msg);
 		}
 	}
 
@@ -567,7 +568,7 @@ public interface TokenFilter {
 		 * @param field the Field to test
 		 * @param value the integer value of the field
 		 *
-		 * @result true if the Field is accepted
+		 * @return true if the Field is accepted
 		 */
 		boolean accept(Field field, int value);
 

File: src/core/org/lwjgl/Sys.java
Patch:
@@ -58,9 +58,9 @@ public static String getVersion() {
 	private static String loadLibrary(String libraryName) {
 		// actively try to load 64bit libs on 64bit architectures first
 		String osArch = System.getProperty("os.arch");
-		boolean is64bit = "amd64".equals(osArch) || "x86_64".equals(osArch);
+		boolean try64First = LWJGLUtil.getPlatform() != LWJGLUtil.Platform.MACOSX && ("amd64".equals(osArch) || "x86_64".equals(osArch));
 
-		if ( is64bit ) {
+		if ( try64First ) {
 			try {
 				return doLoadLibrary(libraryName + POSTFIX64BIT);
 			} catch (UnsatisfiedLinkError e) {

File: src/core/org/lwjgl/opencl/CL.java
Patch:
@@ -236,7 +236,7 @@ static void addCLVersions(int majorVersion, int minorVersion, Set<String> suppor
 	static String getPlatformInfo(long platform, int param_name, long clGetPlatformInfo) {
 		APIBuffer __buffer = apiBuffer();
 
-		__buffer.intValue(0, 0);
+		__buffer.intParam(0);
 		int errcode = nclGetPlatformInfo(platform, param_name, 0L, NULL, __buffer.address(), clGetPlatformInfo);
 		if ( LWJGLUtil.DEBUG && errcode != CL_SUCCESS )
 			throw new OpenCLException("Failed to query size of OpenCL platform information.");
@@ -254,7 +254,7 @@ static String getPlatformInfo(long platform, int param_name, long clGetPlatformI
 	static String getDeviceInfo(long device_id, int param_name, long clGetDeviceInfo) {
 		APIBuffer __buffer = apiBuffer();
 
-		__buffer.intValue(0, 0);
+		__buffer.intParam(0);
 		int errcode = nclGetDeviceInfo(device_id, param_name, 0L, NULL, __buffer.address(), clGetDeviceInfo);
 		if ( LWJGLUtil.DEBUG && errcode != CL_SUCCESS )
 			throw new OpenCLException("Failed to query size of OpenCL device information.");

File: src/core/org/lwjgl/system/jglfw/GLFWwindowWin.java
Patch:
@@ -74,7 +74,7 @@ private static int GET_Y_LPARAM(long param) {
 		return HIWORD(param);
 	}
 
-	private class WindowProcWin extends WindowProc {
+	private class WindowProcWin implements WindowProc {
 
 		private final PlatformWin platform;
 

File: src/core/org/lwjgl/system/jglfw/PlatformLinux.java
Patch:
@@ -1985,7 +1985,7 @@ private boolean createContext(GLFWwindowLinux window, GLFWwndconfig wndconfig, G
 		}
 
 		glfwErrorCode = Success;
-		XSetErrorHandler(new XErrorHandler() {
+		XSetErrorHandler(new XErrorHandler.BufAdapter() {
 			@Override
 			public int invoke(long display, ByteBuffer error_event) {
 				glfwErrorCode = XErrorEvent.error_code(error_event);

File: src/core/org/lwjgl/system/windows/WindowsDisplay.java
Patch:
@@ -153,7 +153,7 @@ public boolean isCloseRequested() {
 		return closeRequested;
 	}
 
-	private class WindowProcImpl extends WindowProc {
+	private class WindowProcImpl implements WindowProc {
 
 		@Override
 		public long invoke(long hWnd, int msg, long wParam, long lParam) {

File: src/tests/org/lwjgl/demo/glfw/MultipleWindows.java
Patch:
@@ -22,7 +22,7 @@ private MultipleWindows() {
 	public static void main(String[] args) {
 		Sys.touch();
 
-		glfwSetErrorCallback(new ErrorCallback());
+		glfwSetErrorCallback(ErrorCallback.Util.getDefault());
 		if ( glfwInit() == 0 )
 			throw new IllegalStateException("Failed to initialize GLFW.");
 

File: src/tests/org/lwjgl/demo/glfw/Threads.java
Patch:
@@ -37,7 +37,7 @@ public static void main(String[] args) {
 			System.exit(-1);
 		}
 
-		glfwSetErrorCallback(new ErrorCallback());
+		glfwSetErrorCallback(ErrorCallback.Util.getDefault());
 
 		glfwWindowHint(GLFW_VISIBLE, GL_FALSE);
 

File: src/tests/org/lwjgl/demo/glfw/WGLInterop.java
Patch:
@@ -36,7 +36,7 @@ private WGLInterop() {
 	public static void main(String[] args) {
 		Sys.touch();
 
-		glfwSetErrorCallback(new ErrorCallback());
+		glfwSetErrorCallback(ErrorCallback.Util.getDefault());
 		if ( glfwInit() == 0 )
 			throw new IllegalStateException("Failed to initialize GLFW.");
 
@@ -86,7 +86,7 @@ public void key(long window, int key, int scancode, int action, int mods) {
 		ContextCapabilities caps = GL.getCapabilities();
 
 		if ( caps.GL_AMD_debug_output )
-			glDebugMessageCallbackAMD(new DEBUGPROCAMD());
+			glDebugMessageCallbackAMD(DEBUGPROCAMD.Util.getDefault());
 
 		int success;
 

File: src/tests/org/lwjgl/demo/windows/WGLDemo.java
Patch:
@@ -56,7 +56,7 @@ public static void main(String[] args) {
 		ContextCapabilities caps = GL.getCapabilities();
 
 		if ( caps.GL_AMD_debug_output )
-			glDebugMessageCallbackAMD(new DEBUGPROCAMD());
+			glDebugMessageCallbackAMD(DEBUGPROCAMD.Util.getDefault());
 
 		if ( caps.WGL_AMD_gpu_association ) {
 			int GPUs = wglGetGPUIDsAMD(null);

File: src/core/org/lwjgl/system/jglfw/TimerLinux.java
Patch:
@@ -32,7 +32,7 @@ public double getResolution() {
 				@Override
 				public long getRawTime() {
 					clock_gettime(CLOCK_MONOTONIC, time);
-					return timespec.secGet(time) * 1000000000L + timespec.nsecGet(time);
+					return timespec.sec(time) * 1000000000L + timespec.nsec(time);
 				}
 			};
 		} else {
@@ -45,7 +45,7 @@ public double getResolution() {
 				@Override
 				public long getRawTime() {
 					gettimeofday(time, null);
-					return timeval.secGet(time) * 1000000L + timeval.usecGet(time);
+					return timeval.sec(time) * 1000000L + timeval.usec(time);
 				}
 			};
 		}

File: src/tests/org/lwjgl/demo/glfw/Gears.java
Patch:
@@ -40,8 +40,8 @@ protected void init() {
 		long monitor = glfwGetPrimaryMonitor();
 		ByteBuffer vidmode = glfwGetVideoMode(monitor);
 
-		int monitorWidth = GLFWvidmode.widthGet(vidmode);
-		int monitorHeight = GLFWvidmode.heightGet(vidmode);
+		int monitorWidth = GLFWvidmode.width(vidmode);
+		int monitorHeight = GLFWvidmode.height(vidmode);
 
 		glfwDefaultWindowHints();
 		glfwWindowHint(GLFW_VISIBLE, GL_FALSE);

File: src/tests/org/lwjgl/demo/openal/OpenALInfo.java
Patch:
@@ -2,7 +2,7 @@
  * Copyright LWJGL. All rights reserved.
  * License terms: http://lwjgl.org/license.php
  */
-package org.lwjgl.test.openal;
+package org.lwjgl.demo.openal;
 
 import org.lwjgl.openal.*;
 

File: src/tests/org/lwjgl/demo/opencl/CLDemo.java
Patch:
@@ -154,8 +154,8 @@ public void invoke(long cl_event, int command_exec_status) {
 					checkCLError(errcode);
 
 					try {
-						boolean result = latch.await(500, TimeUnit.MILLISECONDS);
-						if ( !result )
+						boolean expired = !latch.await(500, TimeUnit.MILLISECONDS);
+						if ( expired )
 							System.out.println("\t\tKERNEL EXEC FAILED!");
 					} catch (InterruptedException exc) {
 						exc.printStackTrace();

File: src/tests/org/lwjgl/system/APIBufferTest.java
Patch:
@@ -106,8 +106,8 @@ public void testStackAlignment() {
 			int z = nestedBuffer.intParam();
 			int w = nestedBuffer.intParam();
 
-			assertEquals(z, 8);
-			assertEquals(w, 12);
+			assertEquals(z, POINTER_SIZE);
+			assertEquals(w, POINTER_SIZE + 4);
 
 			nestedBuffer.pop();
 		}

File: src/core/org/lwjgl/LWJGLUtil.java
Patch:
@@ -512,7 +512,7 @@ public static boolean isMacOSXEqualsOrBetterThan(int major_required, int minor_r
 	 * @return the token map
 	 */
 
-	public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Integer, String> target, Class... tokenClasses) {
+	public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Integer, String> target, Class<?>... tokenClasses) {
 		return getClassTokens(filter, target, Arrays.asList(tokenClasses));
 	}
 
@@ -529,13 +529,13 @@ public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Intege
 	 *
 	 * @return the token map
 	 */
-	public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Integer, String> target, Iterable<Class> tokenClasses) {
+	public static Map<Integer, String> getClassTokens(TokenFilter filter, Map<Integer, String> target, Iterable<Class<?>> tokenClasses) {
 		if ( target == null )
 			target = new HashMap<Integer, String>(64);
 
 		int TOKEN_MODIFIERS = Modifier.PUBLIC | Modifier.STATIC | Modifier.FINAL;
 
-		for ( Class tokenClass : tokenClasses ) {
+		for ( Class<?> tokenClass : tokenClasses ) {
 			for ( Field field : tokenClass.getDeclaredFields() ) {
 				// Get only <public static final int> fields.
 				if ( (field.getModifiers() & TOKEN_MODIFIERS) == TOKEN_MODIFIERS && field.getType() == int.class ) {

File: src/core/org/lwjgl/system/APIUtil.java
Patch:
@@ -33,8 +33,7 @@ private APIUtil() {
 	 *
 	 * @return the callback method
 	 */
-	@SuppressWarnings("unchecked")
-	public static Method apiCallbackMethod(Class clazz, Class<?>... parameterTypes) {
+	public static Method apiCallbackMethod(Class<?> clazz, Class<?>... parameterTypes) {
 		try {
 			return clazz.getMethod("invoke", parameterTypes);
 		} catch (NoSuchMethodException e) {

File: src/core/org/lwjgl/system/windows/WindowProc.java
Patch:
@@ -54,15 +54,15 @@ public class WindowProc {
 	 * The given {@code callback} method must have a signature that matches {@link #invoke(long, int, long, long)} and must be a static method of the given
 	 * {@code clazz}.
 	 */
-	public static native long setCallbackStaticSync(Class clazz, Method callback);
+	public static native long setCallbackStaticSync(Class<?> clazz, Method callback);
 
 	/**
 	 * May be used to setup an alternative WNDPROC function. The WNDPROC may be invoked from any thread.
 	 * <p/>
 	 * The given {@code callback} method must have a signature that matches {@link #invoke(long, int, long, long)} and must be a static method of the given
 	 * {@code clazz}.
 	 */
-	public static native long setCallbackStaticAsync(Class clazz, Method callback);
+	public static native long setCallbackStaticAsync(Class<?> clazz, Method callback);
 
 	/**
 	 * The application-defined function that processes messages sent to a window.

File: src/core/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -148,7 +148,7 @@ private MemoryUtil() {
 	 * @return the new ByteBuffer
 	 */
 	public static ByteBuffer memByteBuffer(long address, int capacity) {
-		if ( LWJGLUtil.DEBUG && (address <= NULL || capacity < 0) )
+		if ( LWJGLUtil.DEBUG && (address == NULL || capacity < 0) )
 			throw new IllegalArgumentException();
 
 		return ACCESSOR.newByteBuffer(address, capacity);

File: src/core/org/lwjgl/system/windows/WindowsFunctionProvider.java
Patch:
@@ -20,7 +20,7 @@ public WindowsFunctionProvider(WindowsLibrary library) {
 
 	@Override
 	public long getFunctionAddress(String functionName) {
-		return library.getProcAddress(functionName);
+		return library.getFunctionAddress(functionName);
 	}
 
 	@Override

File: src/templates/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -256,7 +256,7 @@ private static String formatConstants(String input, String prefix) {
 
 	private static final Pattern TYPE_PATTERN = Pattern.compile(
 		// This is a little funny because we can have whitespace on either side of *
-		"(?:const\\s+)?(?:unsigned\\s+)?[0-9a-zA-Z]+(?:(?:\\s*[*]+\\s*)|\\s+)[0-9a-zA-Z_]+"
+		"(?:const\\s+)?(?:unsigned\\s+)?[0-9a-zA-Z_]+(?:(?:\\s*[*]+\\s*)|\\s+)[0-9a-zA-Z_]+"
 	);
 
 	private static final Pattern FUNCTION_PATTERN = Pattern.compile(
@@ -266,7 +266,7 @@ private static String formatConstants(String input, String prefix) {
 
 	// Same as TYPE_PATTERN, with capturing groups and without the whitespace stuff (we've already verified correct syntax)
 	private static final Pattern PARAM_PATTERN = Pattern.compile(
-		"(const\\s+)?((?:unsigned\\s+)?[0-9a-zA-Z]+)\\s*([*]+)?\\s*([0-9a-zA-Z_]+)",
+		"(const\\s+)?((?:unsigned\\s+)?[0-9a-zA-Z_]+)\\s*([*]+)?\\s*([0-9a-zA-Z_]+)",
 		Pattern.MULTILINE
 	);
 

File: src/core/org/lwjgl/system/windows/opengl/WindowsGLContext.java
Patch:
@@ -24,7 +24,8 @@ public WindowsGLContext(ContextCapabilities capabilities, long hdc, long hglrc)
 	}
 
 	protected void makeCurrentImpl() {
-		wglMakeCurrent(hdc, hglrc);
+		if ( wglMakeCurrent(hdc, hglrc) == 0 )
+			throw new RuntimeException("Failed to make the OpenGL context current.");
 	}
 
 	public boolean isCurrent() {

File: src/tests/org/lwjgl/demo/glfw/AbstractDemo.java
Patch:
@@ -68,7 +68,6 @@ protected static int findPixelFormatARB(int pixelFormat, ByteBuffer pfd) {
         long pushGLRC = wglGetCurrentContext();
 
         WindowsDisplay dummy = new WindowsDisplay();
-        dummy.setVisible(true);
 
         int success = SetPixelFormat(dummy.getHdc(), pixelFormat, pfd);
         assertTrue(success != 0);

File: src/core/org/lwjgl/openal/ALCContext.java
Patch:
@@ -12,7 +12,7 @@ public class ALCContext {
 
 	private final ALCCapabilities capabilities;
 
-	public ALCContext(final long device) {
+	public ALCContext(long device) {
 		this.device = device;
 
 		this.capabilities = ALC.createCapabilities(device);

File: src/core/org/lwjgl/openal/ALContext.java
Patch:
@@ -14,7 +14,7 @@ public class ALContext {
 
 	private final ALCapabilities capabilities;
 
-	public ALContext(final ALCContext deviceContext, final long handle) {
+	public ALContext(ALCContext deviceContext, long handle) {
 		this.deviceContext = deviceContext;
 		this.handle = handle;
 

File: src/core/org/lwjgl/opengl/GLContext.java
Patch:
@@ -8,7 +8,7 @@ public abstract class GLContext {
 
 	final ContextCapabilities capabilities;
 
-	protected GLContext(final ContextCapabilities capabilities) {
+	protected GLContext(ContextCapabilities capabilities) {
 		this.capabilities = capabilities;
 
 		GL.setCurrent(this);

File: src/core/org/lwjgl/opengl/OpenGLException.java
Patch:
@@ -18,7 +18,7 @@ public OpenGLException(int gl_error_code) {
 	}
 
 	private static String createErrorMessage(int gl_error_code) {
-		final String error_string = Util.translateGLErrorString(gl_error_code);
+		String error_string = Util.translateGLErrorString(gl_error_code);
 		return error_string + " (" + gl_error_code + ")";
 	}
 

File: src/core/org/lwjgl/opengl/Util.java
Patch:
@@ -16,7 +16,7 @@ private Util() {
 
 	/** Throws OpenGLException if glGetError() returns anything else than GL_NO_ERROR */
 	public static void checkGLError() throws OpenGLException {
-		final int err = glGetError();
+		int err = glGetError();
 		if ( err != GL_NO_ERROR )
 			throw new OpenGLException(err);
 	}

File: src/core/org/lwjgl/system/CharSequenceNT.java
Patch:
@@ -9,7 +9,7 @@ final class CharSequenceNT implements CharSequence {
 
 	final CharSequence source;
 
-	CharSequenceNT(final CharSequence source) {
+	CharSequenceNT(CharSequence source) {
 		this.source = source;
 	}
 
@@ -18,12 +18,12 @@ public int length() {
 
 	}
 
-	public char charAt(final int index) {
+	public char charAt(int index) {
 		return index == source.length() ? '\0' : source.charAt(index);
 
 	}
 
-	public CharSequence subSequence(final int start, final int end) {
+	public CharSequence subSequence(int start, int end) {
 		return new CharSequenceNT(source.subSequence(start, Math.min(end, source.length())));
 	}
 

File: src/core/org/lwjgl/system/Checks.java
Patch:
@@ -18,7 +18,7 @@
  * <p/>
  * Internal class, don't use.
  */
-public class Checks {
+public final class Checks {
 
 	private Checks() {
 	}

File: src/core/org/lwjgl/system/FunctionMap.java
Patch:
@@ -9,4 +9,5 @@
  * of functionality for a platform or context.
  */
 public interface FunctionMap {
+
 }
\ No newline at end of file

File: src/core/org/lwjgl/system/MathUtil.java
Patch:
@@ -9,7 +9,7 @@ public final class MathUtil {
 	private MathUtil() {
 	}
 
-	public static int mathNextPoT(final int value) {
+	public static int mathNextPoT(int value) {
 		int v = value - 1;
 
 		v |= (v >>> 1);

File: src/core/org/lwjgl/system/glfw/ErrorCallback.java
Patch:
@@ -32,7 +32,7 @@ public ErrorCallback() {
 
 	private static native long setCallback(Method callback);
 
-	static long register(final ErrorCallback proc) {
+	static long register(ErrorCallback proc) {
 		callback = proc;
 		return CALLBACK;
 	}
@@ -48,12 +48,12 @@ private static void callback(int error, long description) {
 	 * @param error       the error code
 	 * @param description a UTF-8 encoded string describing the error
 	 */
-	public void invoke(final int error, final long description) {
+	public void invoke(int error, long description) {
 		callback(error, memDecodeUTF8(memByteBufferNT1(description)));
 	}
 
 	/** String version of {@link #callback(int, long)}. */
-	public void callback(final int error, final String description) {
+	public void callback(int error, String description) {
 		System.err.println("[LWJGL] GLFW error");
 		System.err.println("\tCode: " + LWJGLUtil.toHexString(error));
 		System.err.println("\tDescription: " + description);

File: src/core/org/lwjgl/system/glfw/MonitorCallback.java
Patch:
@@ -28,7 +28,7 @@ protected MonitorCallback() {
 
 	private static native long setCallback(Method callback);
 
-	static long register(final MonitorCallback proc) {
+	static long register(MonitorCallback proc) {
 		callback = proc;
 		return CALLBACK;
 	}

File: src/core/org/lwjgl/system/windows/WindowsLibrary.java
Patch:
@@ -25,7 +25,7 @@ public class WindowsLibrary implements Library {
 
 	private final long handle;
 
-	public WindowsLibrary(final String name) {
+	public WindowsLibrary(String name) {
 		this.name = name;
 
 		handle = LoadLibrary(memEncodeUTF16(name));
@@ -41,7 +41,7 @@ public long getHandle() {
 		return handle;
 	}
 
-	public long getProcAddress(final String name) {
+	public long getProcAddress(String name) {
 		return GetProcAddress(handle, memEncodeASCII(name));
 	}
 

File: src/core/org/lwjgl/system/windows/WindowsPlatform.java
Patch:
@@ -18,17 +18,17 @@ public boolean has64Bit() {
 		return true;
 	}
 
-	static void windowsCheckHandle(final long handle, final String msg) {
+	static void windowsCheckHandle(long handle, String msg) {
 		if ( handle == 0 )
 			windowsThrowException(msg);
 	}
 
-	static void windowsCheckResult(final int result, final String action) {
+	static void windowsCheckResult(int result, String action) {
 		if ( LWJGLUtil.DEBUG && result == 0 )
 			throw new RuntimeException(action + " failed (error code = " + GetLastError() + ")");
 	}
 
-	static void windowsThrowException(final String msg) {
+	static void windowsThrowException(String msg) {
 		throw new RuntimeException(msg + " (error code = " + GetLastError() + ")");
 	}
 

File: src/tests/org/lwjgl/demo/glfw/MultipleWindows.java
Patch:
@@ -31,7 +31,7 @@ public static void main(String[] args) {
 	private static void demo() {
 		glfwDefaultWindowHints();
 
-		final long[] windows = new long[4];
+		long[] windows = new long[4];
 
 		final AtomicInteger latch = new AtomicInteger(windows.length);
 
@@ -44,13 +44,13 @@ private static void demo() {
 
 			WindowCallback.set(window, new WindowCallbackAdapter() {
 				@Override
-				public void cursorEnter(final long window, final int entered) {
+				public void cursorEnter(long window, int entered) {
 					if ( entered != 0 )
 						System.out.println("Mouse entered window: " + windowIndex);
 				}
 
 				@Override
-				public void key(final long window, final int key, final int action) {
+				public void key(long window, int key, int action) {
 					if ( key == GLFW_KEY_ESCAPE && action == GLFW_RELEASE )
 						latch.set(0); // Tests WindowCallback clean-up
 				}

File: src/tests/org/lwjgl/system/windows/StructTest.java
Patch:
@@ -14,7 +14,7 @@
 public class StructTest {
 
 	public void testStructLayout() {
-		final ByteBuffer gmf = GLYPHMETRICSFLOAT.malloc();
+		ByteBuffer gmf = GLYPHMETRICSFLOAT.malloc();
 
 		assertEquals(GLYPHMETRICSFLOAT.SIZEOF, 24);
 		assertEquals(gmf.capacity(), GLYPHMETRICSFLOAT.SIZEOF);

File: src/tests/org/lwjgl/system/windows/WinGDITest.java
Patch:
@@ -14,9 +14,9 @@
 public class WinGDITest {
 
 	public void testEnumObjects() {
-		final long dc = GetDC(0);
+		long dc = GetDC(0);
 		EnumObjects(dc, OBJ_BRUSH, new EnumObjectsProc() {
-			public int invoke(final long logObject) {
+			public int invoke(long logObject) {
 				assertTrue(logObject != 0L);
 				return 1;
 			}

File: src/tests/org/lwjgl/system/windows/WindowsPlatformTest.java
Patch:
@@ -13,7 +13,7 @@
 public class WindowsPlatformTest {
 
 	public void test64Bit() {
-		final WindowsPlatform platform = (WindowsPlatform)Sys.getPlatform();
+		WindowsPlatform platform = (WindowsPlatform)Sys.getPlatform();
 
 		assertTrue(platform.has64Bit());
 	}

File: src/core/org/lwjgl/openal/AL.java
Patch:
@@ -38,6 +38,7 @@ public long getFunctionAddress(final String functionName) {
 			return address;
 		}
 
+		public void destroy() {}
 	};
 
 	private static ALContext context;

File: src/core/org/lwjgl/opengl/GLContext.java
Patch:
@@ -6,7 +6,7 @@
 
 public abstract class GLContext {
 
-	private final ContextCapabilities capabilities;
+	final ContextCapabilities capabilities;
 
 	protected GLContext(final ContextCapabilities capabilities) {
 		this.capabilities = capabilities;

File: src/core/org/lwjgl/system/FunctionProvider.java
Patch:
@@ -17,4 +17,6 @@ public interface FunctionProvider {
 	 */
 	long getFunctionAddress(String functionName);
 
+	void destroy();
+
 }
\ No newline at end of file

File: src/core/org/lwjgl/system/MemoryUtil.java
Patch:
@@ -437,6 +437,8 @@ public static void memCopy(long src, long dst, int bytes) {
 	 */
 	public static native long memGlobalRefNew(Object obj);
 
+	public static native <T> T memGlobalRefToObject(long globalRef);
+
 	/**
 	 * Deletes a global reference.
 	 *

File: src/tests/org/lwjgl/system/windows/WindowsTest.java
Patch:
@@ -4,6 +4,7 @@
  */
 package org.lwjgl.system.windows;
 
+import org.lwjgl.LWJGLUtil;
 import org.lwjgl.Sys;
 import org.testng.annotations.Test;
 
@@ -42,7 +43,7 @@ public static void main(String[] args) {
 
 	public void testLWJGLInstance() {
 		assertEquals(
-			GetModuleHandle(memEncodeUTF16("lwjgl.dll")),
+			GetModuleHandle(memEncodeUTF16(Sys.getNativeLibrary())),
 			HINSTANCE
 		);
 	}

File: src/templates/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -244,7 +244,7 @@ private static String formatConstants(final String input) {
 
 	private static final Pattern TYPE_PATTERN = Pattern.compile(
 		// This is a little funny because we can have whitespace on either side of *
-		"(?:const\\s+)?[a-zA-Z]+(?:(?:\\s*[*]+\\s*)|\\s+)[0-9a-zA-Z_]+"
+		"(?:const\\s+)?[0-9a-zA-Z]+(?:(?:\\s*[*]+\\s*)|\\s+)[0-9a-zA-Z_]+"
 	);
 
 	private static final Pattern FUNCTION_PATTERN = Pattern.compile(
@@ -254,7 +254,7 @@ private static String formatConstants(final String input) {
 
 	// Same as TYPE_PATTERN, with capturing groups and without the whitespace stuff (we've already verified correct syntax)
 	private static final Pattern PARAM_PATTERN = Pattern.compile(
-		"(const\\s+)?([a-zA-Z]+)\\s*([*]+)?\\s*([0-9a-zA-Z_]+)",
+		"(const\\s+)?([0-9a-zA-Z]+)\\s*([*]+)?\\s*([0-9a-zA-Z_]+)",
 		Pattern.MULTILINE
 	);
 

File: src/templates/org/lwjgl/generator/util/TemplateFormatter.java
Patch:
@@ -5,7 +5,6 @@
 package org.lwjgl.generator.util;
 
 import java.awt.*;
-import java.awt.datatransfer.StringSelection;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.io.File;
@@ -167,7 +166,7 @@ private void format() {
 	// ---[ CONSTANT FORMATTING ]----
 
 	private static final Pattern BLOCK_PATTERN = Pattern.compile(
-		"([^:]+):\\s+((?:[0-9A-Za-z_]+\\s+[0-9xA-Fa-f]+\\s*)+)",
+		"([^:]+):\\s+((?:\\s*[0-9A-Za-z_]+\\s+[0-9xA-Fa-f]+$)+)\\s*",
 		Pattern.MULTILINE
 	);
 

File: src/core/org/lwjgl/system/MemoryAccess.java
Patch:
@@ -149,7 +149,7 @@ ByteBuffer newByteBuffer(final long address, final int capacity) {
 
 	abstract static class MemoryAccessorJava extends MemoryAccessor {
 
-		private final ByteBuffer globalBuffer = ByteBuffer.allocateDirect(0);
+		private final ByteBuffer globalBuffer = ByteBuffer.allocateDirect(0).order(ByteOrder.nativeOrder());
 
 		final ByteBuffer newByteBuffer(final long address, final int capacity) {
 			return setupBuffer(

File: src/core/org/lwjgl/system/windows/opengl/WindowsContext.java
Patch:
@@ -2,6 +2,7 @@
 
 import org.lwjgl.opengl.Context;
 import org.lwjgl.opengl.ContextCapabilities;
+import org.lwjgl.opengl.GLContext;
 
 import static org.lwjgl.system.windows.WGL.*;
 
@@ -79,7 +80,7 @@ public static WindowsContext create(final long hdc, final long hglrc) {
 		if ( wglGetCurrentContext() != hglrc )
 			throw new IllegalStateException("The specified OpenGL context must be current in the current thread.");
 
-		final ContextCapabilities capabilities = new ContextCapabilities();
+		final ContextCapabilities capabilities = GLContext.createCapabilities(false);
 
 		return new WindowsContext(capabilities, hdc, hglrc);
 	}

