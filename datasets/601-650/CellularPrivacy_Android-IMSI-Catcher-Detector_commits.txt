File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/MeasuredCellStrengthAdapter.java
Patch:
@@ -5,7 +5,6 @@
  */
 package com.secupwn.aimsicd.adapters;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -29,8 +28,8 @@
  */
 public class MeasuredCellStrengthAdapter extends RealmBaseAdapter<Measure> {
 
-    public MeasuredCellStrengthAdapter(Context context, RealmResults<Measure> realmResults) {
-        super(context, realmResults);
+    public MeasuredCellStrengthAdapter(RealmResults<Measure> realmResults) {
+        super(realmResults);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/adapter/BaseStationAdapter.java
Patch:
@@ -5,7 +5,6 @@
  */
 package com.secupwn.aimsicd.data.adapter;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -28,8 +27,8 @@
  */
 public class BaseStationAdapter extends RealmBaseAdapter<BaseTransceiverStation> {
 
-    public BaseStationAdapter(Context context, RealmResults<BaseTransceiverStation> realmResults) {
-        super(context, realmResults);
+    public BaseStationAdapter(RealmResults<BaseTransceiverStation> realmResults) {
+        super(realmResults);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/adapter/DefaultLocationAdapter.java
Patch:
@@ -5,7 +5,6 @@
  */
 package com.secupwn.aimsicd.data.adapter;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -21,8 +20,8 @@
 
 public class DefaultLocationAdapter extends RealmBaseAdapter<DefaultLocation> {
 
-    public DefaultLocationAdapter(Context context, RealmResults<DefaultLocation> realmResults) {
-        super(context, realmResults);
+    public DefaultLocationAdapter(RealmResults<DefaultLocation> realmResults) {
+        super(realmResults);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/adapter/DetectionStringAdapter.java
Patch:
@@ -1,6 +1,5 @@
 package com.secupwn.aimsicd.data.adapter;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -14,8 +13,8 @@
 
 public class DetectionStringAdapter extends RealmBaseAdapter<SmsDetectionString> {
 
-    public DetectionStringAdapter(Context context, RealmResults<SmsDetectionString> realmResults) {
-        super(context, realmResults);
+    public DetectionStringAdapter(RealmResults<SmsDetectionString> realmResults) {
+        super(realmResults);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/adapter/EventAdapter.java
Patch:
@@ -1,6 +1,5 @@
 package com.secupwn.aimsicd.data.adapter;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -18,8 +17,8 @@
 
 public class EventAdapter extends RealmBaseAdapter<Event> {
 
-    public EventAdapter(Context context, RealmResults<Event> realmResults) {
-        super(context, realmResults);
+    public EventAdapter(RealmResults<Event> realmResults) {
+        super(realmResults);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/adapter/ImportAdapter.java
Patch:
@@ -5,7 +5,6 @@
  */
 package com.secupwn.aimsicd.data.adapter;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -23,8 +22,8 @@
 
 public class ImportAdapter extends RealmBaseAdapter<Import> {
 
-    public ImportAdapter(Context context, RealmResults<Import> realmResults) {
-        super(context, realmResults);
+    public ImportAdapter(RealmResults<Import> realmResults) {
+        super(realmResults);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/adapter/MeasureAdapter.java
Patch:
@@ -1,6 +1,5 @@
 package com.secupwn.aimsicd.data.adapter;
 
-import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -21,8 +20,8 @@
  */
 public class MeasureAdapter extends RealmBaseAdapter<Measure> {
 
-    public MeasureAdapter(Context context, RealmResults<Measure> realmResults) {
-        super(context, realmResults);
+    public MeasureAdapter(RealmResults<Measure> realmResults) {
+        super(realmResults);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/smsdetection/AdvancedUserActivity.java
Patch:
@@ -50,9 +50,9 @@ protected void onCreate(Bundle savedInstanceState) {
 
         realm = Realm.getDefaultInstance();
 
-        RealmResults<SmsDetectionString> msgItems = realm.where(SmsDetectionString.class).findAll();
+        RealmResults<SmsDetectionString> msgItems = realm.where(SmsDetectionString.class).findAllAsync();
 
-        listViewAdv.setAdapter(new DetectionStringAdapter(this, msgItems));
+        listViewAdv.setAdapter(new DetectionStringAdapter(msgItems));
 
         listViewAdv.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
             @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/smsdetection/AdvancedUserSmsActivity.java
Patch:
@@ -44,9 +44,9 @@ protected void onCreate(Bundle savedInstanceState) {
         realm = Realm.getDefaultInstance();
 
         dbaccess = new RealmHelper(getApplicationContext());
-        RealmResults<SmsData> msgitems = realm.where(SmsData.class).findAllSorted("timestamp");
+        RealmResults<SmsData> msgitems = realm.where(SmsData.class).findAllSortedAsync("timestamp");
 
-        listViewAdv.setAdapter(new SmsDataAdapter(getApplicationContext(), msgitems));
+        listViewAdv.setAdapter(new SmsDataAdapter(msgitems));
 
         listViewAdv.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
             @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/widget/HighlightTextView.java
Patch:
@@ -1,20 +1,20 @@
 package com.secupwn.aimsicd.ui.widget;
 
 import android.content.Context;
+import android.support.v7.widget.AppCompatTextView;
 import android.util.AttributeSet;
 import android.view.View;
-import android.widget.TextView;
 
-import com.secupwn.aimsicd.R;
 import com.kaichunlin.transition.ViewTransitionBuilder;
 import com.kaichunlin.transition.animation.AnimationManager;
 import com.kaichunlin.transition.internal.TransitionController;
 import com.nineoldandroids.animation.ArgbEvaluator;
+import com.secupwn.aimsicd.R;
 
 /**
  * Highlight the updated text
  */
-public class HighlightTextView extends TextView {
+public class HighlightTextView extends AppCompatTextView {
     private static final int DURATION = 3000;
 
     public HighlightTextView(Context context) {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/AndroidIMSICatcherDetector.java
Patch:
@@ -97,15 +97,15 @@ public void addTask(Activity activity, BaseAsyncTask<?, ?, ?> pTask) {
             return;
         }
 
-        log.debug("BaseTask addTask activity:" + activity.getClass().getCanonicalName());
+        log.debug("BaseTask addTask activity:{}", activity.getClass().getCanonicalName());
 
         int key = activity.getClass().getCanonicalName().hashCode();
         List<BaseAsyncTask<?, ?, ?>> tasks = mActivityTaskMap.get(key);
         if (tasks == null) {
             tasks = new ArrayList<>();
             mActivityTaskMap.put(key, tasks);
         }
-        log.debug("BaseTask added:" + pTask.toString());
+        log.debug("BaseTask added:{}", pTask.toString());
         tasks.add(pTask);
     }
 
@@ -128,7 +128,7 @@ public void attach(InjectionAppCompatActivity activity) {
         if (activity == null) {
             return;
         }
-        log.debug("BaseTask attach:" + activity.getClass().getCanonicalName());
+        log.debug("BaseTask attach:{}", activity.getClass().getCanonicalName());
 
         List<BaseAsyncTask<?, ?, ?>> tasks = mActivityTaskMap.get(activity.getClass().getCanonicalName().hashCode());
         if (tasks != null) {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/rilexecutor/RilExecutor.java
Patch:
@@ -78,7 +78,7 @@ public RilExecutor(Context context) {
         mRilExecutorDetectResult = mRequestExecutor.detect();
         if (!mRilExecutorDetectResult.available) {
             mMultiRilCompatible = false;
-            log.error("Samsung Multiclient RIL not available: " + mRilExecutorDetectResult.error);
+            log.error("Samsung Multiclient RIL not available: {}", mRilExecutorDetectResult.error);
             mRequestExecutor = null;
         } else {
             mRequestExecutor.start();

File: AIMSICD/src/main/java/com/secupwn/aimsicd/service/LocationTracker.java
Patch:
@@ -131,7 +131,7 @@ public GeoLocation lastKnownLocation() {
                     try {
                         Cell cell = context.getCell();
                         if (cell != null) {
-                            log.debug("Looking up MCC " + cell.getMobileCountryCode());
+                            log.debug("Looking up MCC {}", cell.getMobileCountryCode());
 
                             @Cleanup Realm realm = Realm.getDefaultInstance();
                             GpsLocation defLoc = mDbHelper.getDefaultLocation(realm, cell.getMobileCountryCode());
@@ -146,7 +146,7 @@ public GeoLocation lastKnownLocation() {
         }
 
         if (loc != null) {
-            log.info("Last known location " + loc.toString());
+            log.info("Last known location {}", loc.toString());
         }
 
         return loc;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/BaseActivity.java
Patch:
@@ -46,7 +46,7 @@ protected void onResume() {
     private BroadcastReceiver mMessageReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
-            log.debug("StatusWatcher received status change to " + ((AndroidIMSICatcherDetector) getApplication()).getStatus().name() + ", updating icon");
+            log.debug("StatusWatcher received status change to {}, updating icon", ((AndroidIMSICatcherDetector) getApplication()).getStatus().name());
             updateIcon(context);
         }
     };

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MapViewerOsmDroid.java
Patch:
@@ -209,7 +209,7 @@ protected void onPause() {
         public void onReceive(Context context, Intent intent) {
             loadEntries();
             if (BuildConfig.DEBUG && mCellTowerGridMarkerClusterer != null && mCellTowerGridMarkerClusterer.getItems() != null) {
-                log.debug("mMessageReceiver CellTowerMarkers.invalidate() markers.size():" + mCellTowerGridMarkerClusterer.getItems().size());
+                log.debug("mMessageReceiver CellTowerMarkers.invalidate() markers.size():{}", mCellTowerGridMarkerClusterer.getItems().size());
             }
 
         }
@@ -552,7 +552,7 @@ protected void onPostExecute(GeoPoint defaultLoc) {
                 }
                 if (mCellTowerGridMarkerClusterer != null) {
                     if (BuildConfig.DEBUG && mCellTowerGridMarkerClusterer.getItems() != null) {
-                        log.debug("CellTowerMarkers.invalidate() markers.size():" + mCellTowerGridMarkerClusterer.getItems().size());
+                        log.debug("CellTowerMarkers.invalidate() markers.size():{}", mCellTowerGridMarkerClusterer.getItems().size());
                     }
                     //Drawing markers of cell tower immediately as possible
                     mCellTowerGridMarkerClusterer.invalidate();

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/fragments/DeviceFragment.java
Patch:
@@ -207,7 +207,7 @@ private void updateUI() {
                     break;
                 }
                 default:
-                    log.error("unknown phone type: " + mDevice.getPhoneId());
+                    log.error("unknown phone type: {}", mDevice.getPhoneId());
             }
 
             if (mAimsicdService.getCell().getTimingAdvance() != Integer.MAX_VALUE) {
@@ -330,7 +330,7 @@ private Cell responseToCell(Response response) {
 
     private void processFinish(Cell cell) {
         if (cell != null) {
-            log.info("processFinish - Cell =" + cell.toString());
+            log.info("processFinish - Cell ={}", cell.toString());
             if (cell.isValid()) {
                 mAimsicdService.setCell(cell);
                 Helpers.msgShort(mContext, getActivity().getString(R.string.refreshed_cell_id_info));  // TODO re-translating other languages

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/fragments/MapFragment.java
Patch:
@@ -215,7 +215,7 @@ public void onDestroyView() {
         public void onReceive(Context context, Intent intent) {
             loadEntries();
             if (BuildConfig.DEBUG && mCellTowerGridMarkerClusterer != null && mCellTowerGridMarkerClusterer.getItems() != null) {
-                log.debug("mMessageReceiver CellTowerMarkers.invalidate() markers.size():" + mCellTowerGridMarkerClusterer.getItems().size());
+                log.debug("mMessageReceiver CellTowerMarkers.invalidate() markers.size():{}", mCellTowerGridMarkerClusterer.getItems().size());
             }
 
         }
@@ -562,7 +562,7 @@ protected void onPostExecute(GeoPoint defaultLoc) {
                 }
                 if (mCellTowerGridMarkerClusterer != null) {
                     if (BuildConfig.DEBUG && mCellTowerGridMarkerClusterer.getItems() != null) {
-                        log.debug("CellTowerMarkers.invalidate() markers.size():" + mCellTowerGridMarkerClusterer.getItems().size());
+                        log.debug("CellTowerMarkers.invalidate() markers.size():{}", mCellTowerGridMarkerClusterer.getItems().size());
                     }
                     //Drawing markers of cell tower immediately as possible
                     mCellTowerGridMarkerClusterer.invalidate();

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/CMDProcessor.java
Patch:
@@ -77,7 +77,7 @@ public static boolean canSU() {
         out.append(r.getStdOut());
         out.append(" ; ");
         out.append(r.getStdErr());
-        log.debug("canSU() su[" + r.getExitValue() + "]: " + out);
+        log.debug("canSU() su[{}]: {}", r.getExitValue(), out);
         return r.success();
     }
 }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/CommandResult.java
Patch:
@@ -52,7 +52,7 @@ public CommandResult(long startTime, int exitValue,
         this.stdErr = stderr;
         this.endTime = endTime;
 
-        log.debug("Time to execute: " + (this.endTime - this.startTime) + " ns (nanoseconds)");
+        log.debug("Time to execute: {} ns (nanoseconds)", this.endTime - this.startTime);
         // this is set last so log from here
         checkForErrors();
     }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/Device.java
Patch:
@@ -139,7 +139,7 @@ public void refreshDeviceInfo(TelephonyManager tm, Context context) {
                                     cell.setMobileNetworkCode(Integer.valueOf(homeOperator.substring(3, 5)));
                                 }
                             } catch (Exception e) {
-                                log.info("HomeOperator parse exception - " + e.getMessage(), e);
+                                log.info("HomeOperator parse exception - {}", e.getMessage(), e);
                             }
                         }
                     }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/DeviceApi17.java
Patch:
@@ -99,9 +99,7 @@ public static void loadCellInfo(TelephonyManager tm, Device pDevice) {
                         pDevice.cell.setPrimaryScramblingCode(identityWcdma.getPsc());
 
                     } else {
-                        log.info("Unknown type of cell signal! "
-                                + "ClassName: " + info.getClass().getSimpleName()
-                                + " ToString: " + info.toString());
+                        log.info("Unknown type of cell signal! ClassName: {} ToString: {}", info.getClass().getSimpleName(), info.toString());
                     }
                     if (pDevice.cell.isValid()) {
                         break;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/DeviceApi18.java
Patch:
@@ -98,9 +98,7 @@ public static void loadCellInfo(TelephonyManager tm, Device pDevice) {
                         pDevice.cell.setPrimaryScramblingCode(identityWcdma.getPsc());
 
                     } else {
-                        log.info("Unknown type of cell signal!"
-                                + "\n ClassName: " + info.getClass().getSimpleName()
-                                + "\n ToString: " + info.toString());
+                        log.info("Unknown type of cell signal!\n ClassName: {}\n ToString: {}", info.getClass().getSimpleName(), info.toString());
                     }
                     if (pDevice.cell.isValid()) {
                         break;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/atcmd/TtyPrivFile.java
Patch:
@@ -28,7 +28,7 @@ private TtyPrivFile(Process read, Process write) {
         mReadProc = read;
         mWriteProc = write;
 
-        log.debug("mReadProc=" + mReadProc + ", mWriteProc=" + mWriteProc);
+        log.debug("mReadProc={}, mWriteProc={}", mReadProc, mWriteProc);
     }
 
     @Override

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/Helpers.java
Patch:
@@ -24,7 +24,6 @@
 import android.content.Intent;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
-import android.os.ParcelFileDescriptor;
 import android.support.v4.app.Fragment;
 import android.text.TextUtils;
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/ImportTask.java
Patch:
@@ -12,11 +12,9 @@
 
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileReader;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.io.LineNumberReader;
 import java.io.Reader;
 import java.util.Arrays;
 import java.util.Date;
@@ -219,8 +217,9 @@ protected String doInBackground(String... commandString) {
     @NonNull
     private Reader createFileReader() throws IOException {
         InputStream fileStream = new FileInputStream(new File(celltowersPath));
-        if (isPathGzip())
+        if (isPathGzip()) {
             fileStream = new FixedGZIPInputStream(new GZIPInputStream(fileStream));
+        }
         return new InputStreamReader(fileStream);
     }
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/constants/DrawerMenu.java
Patch:
@@ -49,6 +49,7 @@ public static class DATABASE_SETTINGS {
          */
         public static class APPLICATION {
             public static final int DOWNLOAD_LOCAL_BTS_DATA = 400;  //Download Local BST Data FIXME     Is this should be "Download Local OCID Data" ?
+            public static final int IMPORT_CELL_TOWERS_DATA = 401;  //Download CellTowers Data
             public static final int UPLOAD_LOCAL_BTS_DATA = 410;    //Upload Local BST Data
             public static final int ADD_GET_OCID_API_KEY = 420;     // Add/Get OCID API key
             public static final int FAQ = 450;                      // TODO Help/FAQ

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/drawer/DrawerMenuActivityConfiguration.java
Patch:
@@ -96,6 +96,7 @@ public DrawerMenuActivityConfiguration build() {
             //Section Application
             menu.add(DrawerMenuSection.create(DrawerMenu.ID.SECTION_APPLICATION, mContext.getString(R.string.application)));
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA, mContext.getString(R.string.get_opencellid), R.drawable.stat_sys_download_anim0, false));
+            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.IMPORT_CELL_TOWERS_DATA, mContext.getString(R.string.import_cell_towers), R.drawable.stat_sys_download_anim0, false));
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BTS_DATA, mContext.getString(R.string.upload_bts), R.drawable.stat_sys_upload_anim0, false));
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.QUIT, mContext.getString(R.string.quit), R.drawable.ic_action_remove, false));
             mNavItems = menu;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/drawer/DrawerMenuItem.java
Patch:
@@ -90,6 +90,9 @@ public int getHelpStringId() {
             case APPLICATION.DOWNLOAD_LOCAL_BTS_DATA:
                 return R.string.help_app_download_local_bts;
 
+            case APPLICATION.IMPORT_CELL_TOWERS_DATA:
+                return R.string.help_app_import_cell_towers;
+
             case APPLICATION.ADD_GET_OCID_API_KEY:
                 return R.string.help_app_add_get_ocid_api_key;
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/fragments/MapFragment.java
Patch:
@@ -195,7 +195,7 @@ public void onDestroyView() {
             mMyLocationOverlay.disableMyLocation();
         }
 
-        if(prefs != null) {
+        if (prefs != null) {
             prefs.unregisterOnSharedPreferenceChangeListener(this);
         }
         // Unbind from the service

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/UncaughtExceptionLogger.java
Patch:
@@ -49,8 +49,9 @@ public static Optional<File> getDir() {
     public void uncaughtException(Thread thread, Throwable ex) {
         processException(thread, ex);
 
-        if (originalExceptionHandler != null)
+        if (originalExceptionHandler != null) {
             originalExceptionHandler.uncaughtException(thread, ex);
+        }
     }
 
     private void processException(Thread thread, Throwable ex) {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/RealmHelper.java
Patch:
@@ -419,7 +419,7 @@ public void execute(Realm realm) {
                         .findAll().clear();*/
 
                 // =========== CID ===========
-                realm.where(Import.class).lessThan("cell", 1).findAll().deleteAllFromRealm();
+                realm.where(Import.class).lessThan("cellId", 1).findAll().deleteAllFromRealm();
 
                 // We should delete cells with UMTS/LTE (3,13) CID not in [1,268435455] (0xFFF FFFF) but
                 // we can simplify this to:

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/model/Measure.java
Patch:
@@ -20,7 +20,7 @@ public class Measure extends RealmObject {
     private String radioAccessTechnology;
     private int timingAdvance;
     private boolean submitted;
-    private boolean neighbour;
+    private boolean neighbor;
 
     @Override
     public void removeFromRealm() {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MainActivity.java
Patch:
@@ -223,7 +223,7 @@ void selectDrawerItem(int position) {
                 openFragment(deviceFragment);
                 title = getString(R.string.app_name_short);
                 break;
-            case DrawerMenu.ID.MAIN.NEIGHBOURING_CELLS:
+            case DrawerMenu.ID.MAIN.NEIGHBORING_CELLS:
                 openFragment(cellInfoFragment);
                 title = getString(R.string.app_name_short);
                 break;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MapViewerOsmDroid.java
Patch:
@@ -456,7 +456,7 @@ public void run() {
                         log.error("Error getting default location!", e);
                     }
                 }
-                // plot neighbouring cells
+                // plot neighboring cells
                 while (mAimsicdService == null) {
                     try {
                         if (isCancelled()) {
@@ -467,7 +467,7 @@ public void run() {
                         log.warn("thread interrupted", e);
                     }
                 }
-                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighbouringCells();
+                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighboringCells();
                 for (Cell cell : nc) {
                     if (isCancelled()) {
                         return null;
@@ -493,7 +493,7 @@ public void run() {
                         ovm.setIcon(getResources().getDrawable(R.drawable.ic_map_pin_orange));
                         items.add(ovm);
                     } catch (Exception e) {
-                        log.error("Error plotting neighbouring cells", e);
+                        log.error("Error plotting neighboring cells", e);
                     }
                 }
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/drawer/DrawerMenuItem.java
Patch:
@@ -72,8 +72,8 @@ public int getHelpStringId() {
             case MAIN.PHONE_SIM_DETAILS:
                 return R.string.help_main_phone_sim_details;
 
-            case MAIN.NEIGHBOURING_CELLS:
-                return R.string.help_main_neighbouring_cells;
+            case MAIN.NEIGHBORING_CELLS:
+                return R.string.help_main_neighboring_cells;
 
             case MAIN.DB_VIEWER:
                 return R.string.help_main_database_viewer;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/fragments/MapFragment.java
Patch:
@@ -464,7 +464,7 @@ public void run() {
                         log.error("Error getting default location!", e);
                     }
                 }
-                // plot neighbouring cells
+                // plot neighboring cells
                 while (mAimsicdService == null) {
                     try {
                         if (isCancelled() || !isAdded()) {
@@ -475,7 +475,7 @@ public void run() {
                         log.warn("thread interrupted", e);
                     }
                 }
-                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighbouringCells();
+                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighboringCells();
                 for (Cell cell : nc) {
                     if (isCancelled() || !isAdded()) {
                         return null;
@@ -501,7 +501,7 @@ public void run() {
                         ovm.setIcon(getResources().getDrawable(R.drawable.ic_map_pin_orange));
                         items.add(ovm);
                     } catch (Exception e) {
-                        log.error("Error plotting neighbouring cells", e);
+                        log.error("Error plotting neighboring cells", e);
                     }
                 }
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/RealmHelper.java
Patch:
@@ -606,7 +606,7 @@ public void insertBTS(Realm realm, Cell cell) {
             measure.setRadioAccessTechnology(String.valueOf(cell.getRat()));
             measure.setTimingAdvance(cell.getTimingAdvance()); //TODO does this actually get timing advance?
             measure.setSubmitted(false);
-            measure.setNeighbour(false);
+            measure.setNeighbor(false);
 
             realm.commitTransaction();
             log.info("Measure inserted cellId=" + cell.getCellId());

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MainActivity.java
Patch:
@@ -223,7 +223,7 @@ void selectDrawerItem(int position) {
                 openFragment(deviceFragment);
                 title = getString(R.string.app_name_short);
                 break;
-            case DrawerMenu.ID.MAIN.NEIGHBOURING_CELLS:
+            case DrawerMenu.ID.MAIN.NEIGHBORING_CELLS:
                 openFragment(cellInfoFragment);
                 title = getString(R.string.app_name_short);
                 break;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MapViewerOsmDroid.java
Patch:
@@ -456,7 +456,7 @@ public void run() {
                         log.error("Error getting default location!", e);
                     }
                 }
-                // plot neighbouring cells
+                // plot neighboring cells
                 while (mAimsicdService == null) {
                     try {
                         if (isCancelled()) {
@@ -467,7 +467,7 @@ public void run() {
                         log.warn("thread interrupted", e);
                     }
                 }
-                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighbouringCells();
+                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighboringCells();
                 for (Cell cell : nc) {
                     if (isCancelled()) {
                         return null;
@@ -493,7 +493,7 @@ public void run() {
                         ovm.setIcon(getResources().getDrawable(R.drawable.ic_map_pin_orange));
                         items.add(ovm);
                     } catch (Exception e) {
-                        log.error("Error plotting neighbouring cells", e);
+                        log.error("Error plotting neighboring cells", e);
                     }
                 }
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/drawer/DrawerMenuItem.java
Patch:
@@ -72,8 +72,8 @@ public int getHelpStringId() {
             case MAIN.PHONE_SIM_DETAILS:
                 return R.string.help_main_phone_sim_details;
 
-            case MAIN.NEIGHBOURING_CELLS:
-                return R.string.help_main_neighbouring_cells;
+            case MAIN.NEIGHBORING_CELLS:
+                return R.string.help_main_neighboring_cells;
 
             case MAIN.DB_VIEWER:
                 return R.string.help_main_database_viewer;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/fragments/MapFragment.java
Patch:
@@ -464,7 +464,7 @@ public void run() {
                         log.error("Error getting default location!", e);
                     }
                 }
-                // plot neighbouring cells
+                // plot neighboring cells
                 while (mAimsicdService == null) {
                     try {
                         if (isCancelled() || !isAdded()) {
@@ -475,7 +475,7 @@ public void run() {
                         log.warn("thread interrupted", e);
                     }
                 }
-                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighbouringCells();
+                List<Cell> nc = mAimsicdService.getCellTracker().updateNeighboringCells();
                 for (Cell cell : nc) {
                     if (isCancelled() || !isAdded()) {
                         return null;
@@ -501,7 +501,7 @@ public void run() {
                         ovm.setIcon(getResources().getDrawable(R.drawable.ic_map_pin_orange));
                         items.add(ovm);
                     } catch (Exception e) {
-                        log.error("Error plotting neighbouring cells", e);
+                        log.error("Error plotting neighboring cells", e);
                     }
                 }
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/drawer/DrawerMenuItem.java
Patch:
@@ -72,8 +72,8 @@ public int getHelpStringId() {
             case MAIN.PHONE_SIM_DETAILS:
                 return R.string.help_main_phone_sim_details;
 
-            case MAIN.CURRENT_TREAT_LEVEL:
-                return R.string.help_main_current_threat_level;
+            case MAIN.NEIGHBOURING_CELLS:
+                return R.string.help_main_neighbouring_cells;
 
             case MAIN.DB_VIEWER:
                 return R.string.help_main_database_viewer;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/DefaultDataTransaction.java
Patch:
@@ -260,19 +260,18 @@ private void storeDefaultLocation(Realm realm, int mobileCountryCode, String cou
                 .equalTo("country", country)
                 .findFirst();
 
-        if(location == null) {
+        if (location == null) {
             location = realm.createObject(DefaultLocation.class);
         }
 
         location.setCountry(country);
         location.setMobileCountryCode(mobileCountryCode);
 
-        if(location.getGpsLocation() == null) {
+        if (location.getGpsLocation() == null) {
             location.setGpsLocation(realm.createObject(GpsLocation.class));
         }
 
         location.getGpsLocation().setLatitude(latitude);
         location.getGpsLocation().setLongitude(longitude);
-
     }
 }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/model/DefaultLocation.java
Patch:
@@ -1,15 +1,13 @@
 package com.secupwn.aimsicd.data.model;
 
 import io.realm.RealmObject;
-import io.realm.annotations.PrimaryKey;
 import lombok.Getter;
 import lombok.Setter;
 
 @Getter
 @Setter
 public class DefaultLocation extends RealmObject {
 
-    @PrimaryKey
     private int mobileCountryCode;
     private String country;
     private GpsLocation gpsLocation;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/fragments/DbViewerFragment.java
Patch:
@@ -81,6 +81,7 @@ public void onItemSelected(AdapterView<?> parentView, View selectedItemView, fin
                 }
                 mTableSelected = (StatesDbViewer) selectedItem;
 
+                realm.refresh();
                 switch (position) {
                     case 0:
                         setListAdapter(new BaseStationAdapter(getActivity(), realm.allObjects(BaseTransceiverStation.class), true));

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/RealmHelper.java
Patch:
@@ -636,7 +636,8 @@ public void insertBTS(Realm realm, Cell cell) {
                     .equalTo("baseStation.cellId", cell.getCellId())
                     .findAll();
 
-            for (Measure measure : all) {
+            for (int i = 0; i < all.size(); i++) {
+                Measure measure = all.get(i);
 
                 if (Double.doubleToRawLongBits(cell.getLat()) != 0
                         && Double.doubleToRawLongBits(cell.getLon()) != 0) {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/service/LocationTracker.java
Patch:
@@ -16,6 +16,7 @@
 
 import com.secupwn.aimsicd.R;
 import com.secupwn.aimsicd.adapters.AIMSICDDbAdapter;
+import com.secupwn.aimsicd.data.LocationInfo;
 import com.secupwn.aimsicd.utils.Cell;
 import com.secupwn.aimsicd.utils.GeoLocation;
 import com.secupwn.aimsicd.utils.TruncatedLocation;
@@ -131,9 +132,9 @@ public GeoLocation lastKnownLocation() {
                         if (cell != null) {
                             log.debug("Looking up MCC " + cell.getMcc());
 
-                            double[] defLoc = mDbHelper.getDefaultLocation(cell.getMcc());
+                            LocationInfo defLoc = mDbHelper.getDefaultLocation(cell.getMcc());
 
-                            loc = GeoLocation.fromDegrees(defLoc[0], defLoc[1]);
+                            loc = GeoLocation.fromDegrees(defLoc.getLatitude(), defLoc.getLongitude());
                         }
                     } catch (Exception e) {
                         log.error("Unable to get location from MCC", e);

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MapViewerOsmDroid.java
Patch:
@@ -33,6 +33,7 @@
 import com.secupwn.aimsicd.adapters.AIMSICDDbAdapter;
 import com.secupwn.aimsicd.constants.DBTableColumnIds;
 import com.secupwn.aimsicd.constants.TinyDbKeys;
+import com.secupwn.aimsicd.data.LocationInfo;
 import com.secupwn.aimsicd.map.CellTowerGridMarkerClusterer;
 import com.secupwn.aimsicd.map.CellTowerMarker;
 import com.secupwn.aimsicd.map.MarkerData;
@@ -456,8 +457,8 @@ public void run() {
                 if (mBound) {
                     try {
                         int mcc = mAimsicdService.getCell().getMcc();
-                        double[] d = mDbHelper.getDefaultLocation(mcc);
-                        ret = new GeoPoint(d[0], d[1]);
+                        LocationInfo d = mDbHelper.getDefaultLocation(mcc);
+                        ret = new GeoPoint(d.getLatitude(), d.getLongitude());
                     } catch (Exception e) {
                         log.error("Error getting default location!", e);
                     }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/fragments/MapFragment.java
Patch:
@@ -32,6 +32,7 @@
 import com.secupwn.aimsicd.AndroidIMSICatcherDetector;
 import com.secupwn.aimsicd.BuildConfig;
 import com.secupwn.aimsicd.R;
+import com.secupwn.aimsicd.data.LocationInfo;
 import com.secupwn.aimsicd.ui.activities.MapPrefActivity;
 import com.secupwn.aimsicd.adapters.AIMSICDDbAdapter;
 import com.secupwn.aimsicd.constants.DBTableColumnIds;
@@ -458,8 +459,8 @@ public void run() {
                 if (mBound) {
                     try {
                         int mcc = mAimsicdService.getCell().getMcc();
-                        double[] d = mDbHelper.getDefaultLocation(mcc);
-                        ret = new GeoPoint(d[0], d[1]);
+                        LocationInfo d = mDbHelper.getDefaultLocation(mcc);
+                        ret = new GeoPoint(d.getLatitude(), d.getLongitude());
                     } catch (Exception e) {
                         log.error("Error getting default location!", e);
                     }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MainActivity.java
Patch:
@@ -309,7 +309,7 @@ private void downloadBtsDataIfApiKeyAvailable() {
             TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
             String networkOperator = tm.getNetworkOperator();
 
-            if (networkOperator != null) {
+            if (networkOperator != null && !networkOperator.isEmpty()) {
                 int mcc = Integer.parseInt(networkOperator.substring(0, 3));
                 cell.setMcc(mcc);
                 int mnc = Integer.parseInt(networkOperator.substring(3));

File: AIMSICD/src/main/java/com/secupwn/aimsicd/ui/activities/MainActivity.java
Patch:
@@ -309,7 +309,7 @@ private void downloadBtsDataIfApiKeyAvailable() {
             TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
             String networkOperator = tm.getNetworkOperator();
 
-            if (networkOperator != null) {
+            if (networkOperator != null && !networkOperator.isEmpty()) {
                 int mcc = Integer.parseInt(networkOperator.substring(0, 3));
                 cell.setMcc(mcc);
                 int mnc = Integer.parseInt(networkOperator.substring(3));

File: AIMSICD/src/main/java/com/secupwn/aimsicd/smsdetection/SmsDetector.java
Patch:
@@ -164,7 +164,7 @@ public void run() {
         while (getSmsDetectionState()) {
             try {
                 logcatLine = mLogcatReader.readLine();
-                if (logcatLines.size() >= LOGCAT_BUFFER_MAX_SIZE || logcatLine != null) {
+                if (logcatLines.size() <= LOGCAT_BUFFER_MAX_SIZE || logcatLine != null) {
                     logcatLines.add(logcatLine);
                 } else if (logcatLines.size() == 0) {
                     /**

File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/AIMSICDDbAdapter.java
Patch:
@@ -1640,7 +1640,7 @@ public void execute(Realm realm) {
                     RealmResults<Event> events = realm.where(Event.class).findAllSorted("timestamp");
 
                     boolean insertData;
-                    if(events.isEmpty()) {
+                    if (events.isEmpty()) {
                         insertData = true;
                     } else {
                         Event lastEvent = events.last();

File: AIMSICD/src/main/java/com/secupwn/aimsicd/data/Event.java
Patch:
@@ -19,7 +19,7 @@
  */
 @Getter
 @Setter
-public class Event extends RealmObject{
+public class Event extends RealmObject {
 
     private Date timestamp;
     private String message;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/MiscUtils.java
Patch:
@@ -82,7 +82,7 @@ public static Date parseLogcatTimeStamp(String line) {
             calendar.set(Calendar.MONTH, month - 1);
             calendar.set(Calendar.DAY_OF_MONTH, day);
 
-            calendar.set(Calendar.HOUR, hour);
+            calendar.set(Calendar.HOUR_OF_DAY, hour);
             calendar.set(Calendar.MINUTE, minute);
             calendar.set(Calendar.SECOND, second);
             calendar.set(Calendar.MILLISECOND, ms);

File: AIMSICD/src/main/java/com/secupwn/aimsicd/AndroidIMSICatcherDetector.java
Patch:
@@ -105,6 +105,7 @@ public void execute(Realm realm) {
                 }
             });
         }
+        realm.close();
     }
 
     public void removeTask(BaseAsyncTask<?, ?, ?> pTask) {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/AndroidIMSICatcherDetector.java
Patch:
@@ -74,7 +74,7 @@ public void onCreate() {
 
     private void ensureDefaultData() {
         Realm realm = Realm.getDefaultInstance();
-        if(realm.where(SmsDetectionString.class).count() == 0){
+        if (realm.where(SmsDetectionString.class).count() == 0) {
             realm.executeTransactionAsync(new Realm.Transaction() {
                 @Override
                 public void execute(Realm realm) {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/MiscUtils.java
Patch:
@@ -68,7 +68,7 @@ public static void showNotification(Context context, String tickertext, String c
     public static Date parseLogcatTimeStamp(String line) {
         Matcher matcher = LOGCAT_TIMESTAMP_PATTERN.matcher(line);
 
-        if(matcher.find()) {
+        if (matcher.find()) {
             int month = Integer.valueOf(matcher.group(1));
             int day = Integer.valueOf(matcher.group(2));
 

File: AIMSICD/src/test/java/com/secupwn/aimsicd/utils/MiscUtilsTest.java
Patch:
@@ -19,4 +19,4 @@ public void testParseLogcatTimeStamp() throws Exception {
         assertEquals(4, date.getMinutes());
         assertEquals(39, date.getSeconds());
     }
-}
\ No newline at end of file
+}

File: AIMSICD/src/main/java/com/secupwn/aimsicd/service/CellTracker.java
Patch:
@@ -1077,7 +1077,8 @@ void setNotification() {
                     .setColor(color)
                     .setLargeIcon(largeIcon)
                     .setTicker(tickerText)
-                    .setContentTitle(context.getResources().getString(R.string.main_app_name))
+                    .setContentTitle(context.getString(R.string.status) + " " + context.getString(status.getName()))
+                    .setContentInfo(context.getResources().getString(R.string.app_name_short))
                     .setContentText(contentText)
                     .setOngoing(true)
                     .setAutoCancel(false)

File: AIMSICD/src/main/java/com/secupwn/aimsicd/fragments/MapFragment.java
Patch:
@@ -392,7 +392,7 @@ protected GeoPoint doInBackground(Void... voids) {
                  */
                 if (c != null && c.moveToFirst()) {
                     do {
-                        if (isCancelled()) {
+                        if (isCancelled() || !isAdded()) {
                             return null;
                         }
                         // The indexing here is that of DB table
@@ -470,7 +470,7 @@ public void run() {
                 // plot neighbouring cells
                 while (mAimsicdService == null) {
                     try {
-                        if (isCancelled()) {
+                        if (isCancelled() || !isAdded()) {
                             return null;
                         }
                         Thread.sleep(100);
@@ -480,7 +480,7 @@ public void run() {
                 }
                 List<Cell> nc = mAimsicdService.getCellTracker().updateNeighbouringCells();
                 for (Cell cell : nc) {
-                    if (isCancelled()) {
+                    if (isCancelled() || !isAdded()) {
                         return null;
                     }
                     try {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/AIMSICD.java
Patch:
@@ -326,7 +326,7 @@ private void downloadBtsDataIfApiKeyAvailable() {
 
                 cell.setLon(loc.getLongitudeInDegrees());
                 cell.setLat(loc.getLatitudeInDegrees());
-                Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST);
+                Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST, mAimsicdService);
             } else {
                 Helpers.msgShort(this, getString(R.string.waiting_for_location));
 
@@ -355,7 +355,7 @@ public void processFinish(float[] location) {
         if (Float.floatToRawIntBits(location[0]) == 0
                 && Float.floatToRawIntBits(location[1]) != 0) {
             Helpers.msgLong(this, getString(R.string.contacting_opencellid_for_data));
-            Helpers.getOpenCellData(this, mAimsicdService.getCell(), RequestTask.DBE_DOWNLOAD_REQUEST);
+            Helpers.getOpenCellData(this, mAimsicdService.getCell(), RequestTask.DBE_DOWNLOAD_REQUEST, mAimsicdService);
         } else {
             Helpers.msgLong(this, getString(R.string.unable_to_determine_last_location));
         }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/activities/MapViewerOsmDroid.java
Patch:
@@ -334,7 +334,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                         cell.setLat(lastKnown.getLatitudeInDegrees());
                         setRefreshActionButtonState(true);
                         TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                        Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                        Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                         return true;
                     }
                 }
@@ -347,7 +347,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     cell.setLon(loc.getLongitude());
                     setRefreshActionButtonState(true);
                     TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                    Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                    Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                 } else {
                     Helpers.msgLong(this,
                             getString(R.string.unable_to_determine_last_location));

File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/AIMSICDDbAdapter.java
Patch:
@@ -308,6 +308,8 @@ public Cursor getOCIDSubmitData() {
      * This works for now, but we probably should consider populating "DBi_measure"
      * as soon as the API gets a new LAC. Then the detection can be done by SQL,
      * and by just comparing last 2 LAC entries for same CID.
+     *
+     * @return false if LAC is not OK (Cell's LAC differs from Cell's LAC previously stored value in DB)
      */
     public boolean checkLAC(Cell cell) {
         String query = String.format("SELECT * FROM DBi_bts WHERE CID = %d", cell.getCID());  //CID

File: AIMSICD/src/main/java/com/secupwn/aimsicd/fragments/MapFragment.java
Patch:
@@ -337,7 +337,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                         cell.setLat(lastKnown.getLatitudeInDegrees());
                         setRefreshActionButtonState(true);
                         TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                        Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                        Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                         return true;
                     }
                 }
@@ -349,7 +349,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     cell.setLon(loc.getLongitude());
                     setRefreshActionButtonState(true);
                     TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                    Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                    Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                 } else {
                     Helpers.msgLong(getActivity(),
                             getString(R.string.unable_to_determine_last_location));

File: AIMSICD/src/main/java/com/secupwn/aimsicd/AIMSICD.java
Patch:
@@ -326,7 +326,7 @@ private void downloadBtsDataIfApiKeyAvailable() {
 
                 cell.setLon(loc.getLongitudeInDegrees());
                 cell.setLat(loc.getLatitudeInDegrees());
-                Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST);
+                Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST, mAimsicdService);
             } else {
                 Helpers.msgShort(this, getString(R.string.waiting_for_location));
 
@@ -355,7 +355,7 @@ public void processFinish(float[] location) {
         if (Float.floatToRawIntBits(location[0]) == 0
                 && Float.floatToRawIntBits(location[1]) != 0) {
             Helpers.msgLong(this, getString(R.string.contacting_opencellid_for_data));
-            Helpers.getOpenCellData(this, mAimsicdService.getCell(), RequestTask.DBE_DOWNLOAD_REQUEST);
+            Helpers.getOpenCellData(this, mAimsicdService.getCell(), RequestTask.DBE_DOWNLOAD_REQUEST, mAimsicdService);
         } else {
             Helpers.msgLong(this, getString(R.string.unable_to_determine_last_location));
         }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/activities/MapViewerOsmDroid.java
Patch:
@@ -334,7 +334,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                         cell.setLat(lastKnown.getLatitudeInDegrees());
                         setRefreshActionButtonState(true);
                         TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                        Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                        Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                         return true;
                     }
                 }
@@ -347,7 +347,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     cell.setLon(loc.getLongitude());
                     setRefreshActionButtonState(true);
                     TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                    Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                    Helpers.getOpenCellData(this, cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                 } else {
                     Helpers.msgLong(this,
                             getString(R.string.unable_to_determine_last_location));

File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/AIMSICDDbAdapter.java
Patch:
@@ -308,6 +308,8 @@ public Cursor getOCIDSubmitData() {
      * This works for now, but we probably should consider populating "DBi_measure"
      * as soon as the API gets a new LAC. Then the detection can be done by SQL,
      * and by just comparing last 2 LAC entries for same CID.
+     *
+     * @return false if LAC is not OK (Cell's LAC differs from Cell's LAC previously stored value in DB)
      */
     public boolean checkLAC(Cell cell) {
         String query = String.format("SELECT * FROM DBi_bts WHERE CID = %d", cell.getCID());  //CID

File: AIMSICD/src/main/java/com/secupwn/aimsicd/fragments/MapFragment.java
Patch:
@@ -337,7 +337,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                         cell.setLat(lastKnown.getLatitudeInDegrees());
                         setRefreshActionButtonState(true);
                         TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                        Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                        Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                         return true;
                     }
                 }
@@ -349,7 +349,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     cell.setLon(loc.getLongitude());
                     setRefreshActionButtonState(true);
                     TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, false);
-                    Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
+                    Helpers.getOpenCellData((InjectionAppCompatActivity) getActivity(), cell, RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP, mAimsicdService);
                 } else {
                     Helpers.msgLong(getActivity(),
                             getString(R.string.unable_to_determine_last_location));

File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/CardItemData.java
Patch:
@@ -6,7 +6,6 @@
 package com.secupwn.aimsicd.adapters;
 
 import com.secupwn.aimsicd.utils.Cell;
-import com.secupwn.aimsicd.utils.Device;
 
 /**
  *  Description:    TODO: A few comments please!
@@ -96,7 +95,7 @@ public CardItemData(Cell cell, String recordId) {
         }
 
         if (cell.getNetType() != Integer.MAX_VALUE && cell.getNetType() != -1) {
-            mNet = "Type: " + cell.getNetType() + " - " + Device.getNetworkTypeName(cell.getNetType());
+            mNet = "Type: " + cell.getNetType() + " - " + cell.getRAT();
         } else {
             mNet = "N/A";
         }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/Cell.java
Patch:
@@ -479,7 +479,7 @@ public static String getRatFromInt(int netType) {
             case TelephonyManager.NETWORK_TYPE_EDGE:
                 return "EDGE";
             case TelephonyManager.NETWORK_TYPE_EHRPD:
-                return "EHRPD";
+                return "eHRPD";
             case TelephonyManager.NETWORK_TYPE_EVDO_0:
                 return "EVDO rev. 0";
             case TelephonyManager.NETWORK_TYPE_EVDO_A:
@@ -493,7 +493,7 @@ public static String getRatFromInt(int netType) {
             case TelephonyManager.NETWORK_TYPE_HSPA:
                 return "HSPA";
             case TelephonyManager.NETWORK_TYPE_HSPAP:
-                return "HSPAP";
+                return "HSPA+";
             case TelephonyManager.NETWORK_TYPE_HSUPA:
                 return "HSUPA";
             case TelephonyManager.NETWORK_TYPE_IDEN:

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/Device.java
Patch:
@@ -24,7 +24,6 @@ public class Device {
 
     public Cell mCell;
     private int mPhoneID = -1;
-    private String mNetType;
     private String mCellInfo;
     private String mDataState;
     private String mDataStateShort;
@@ -56,7 +55,6 @@ public void refreshDeviceInfo(TelephonyManager tm, Context context) {
         mRoaming = tm.isNetworkRoaming();
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
-            mNetType = getNetworkTypeName();
             DeviceApi18.loadCellInfo(tm, this);
         }
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/Device.java
Patch:
@@ -316,9 +316,7 @@ public String getNetworkTypeName() {
             return "Unknown";
         }
 
-        // TODO: 2016-02-28 Why do we do an assignment? Getters shouldn't have side effects
-        mNetType = mCell.getRAT();
-        return mNetType;
+        return mCell.getRAT();
     }
 
     String getDataActivity(TelephonyManager tm) {

File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/CardItemData.java
Patch:
@@ -6,7 +6,6 @@
 package com.secupwn.aimsicd.adapters;
 
 import com.secupwn.aimsicd.utils.Cell;
-import com.secupwn.aimsicd.utils.Device;
 
 /**
  *  Description:    TODO: A few comments please!
@@ -96,7 +95,7 @@ public CardItemData(Cell cell, String recordId) {
         }
 
         if (cell.getNetType() != Integer.MAX_VALUE && cell.getNetType() != -1) {
-            mNet = "Type: " + cell.getNetType() + " - " + Device.getNetworkTypeName(cell.getNetType());
+            mNet = "Type: " + cell.getNetType() + " - " + cell.getRAT();
         } else {
             mNet = "N/A";
         }

File: AIMSICD/src/main/java/com/secupwn/aimsicd/utils/Cell.java
Patch:
@@ -479,7 +479,7 @@ public static String getRatFromInt(int netType) {
             case TelephonyManager.NETWORK_TYPE_EDGE:
                 return "EDGE";
             case TelephonyManager.NETWORK_TYPE_EHRPD:
-                return "EHRPD";
+                return "eHRPD";
             case TelephonyManager.NETWORK_TYPE_EVDO_0:
                 return "EVDO rev. 0";
             case TelephonyManager.NETWORK_TYPE_EVDO_A:
@@ -493,7 +493,7 @@ public static String getRatFromInt(int netType) {
             case TelephonyManager.NETWORK_TYPE_HSPA:
                 return "HSPA";
             case TelephonyManager.NETWORK_TYPE_HSPAP:
-                return "HSPAP";
+                return "HSPA+";
             case TelephonyManager.NETWORK_TYPE_HSUPA:
                 return "HSUPA";
             case TelephonyManager.NETWORK_TYPE_IDEN:

File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/DbViewerSpinnerAdapter.java
Patch:
@@ -13,7 +13,7 @@
 import android.widget.TextView;
 
 import com.secupwn.aimsicd.R;
-import com.secupwn.aimsicd.adapters.Holders.ViewTableNameSpinnerHolder;
+import com.secupwn.aimsicd.adapters.holders.ViewTableNameSpinnerHolder;
 import com.secupwn.aimsicd.enums.StatesDbViewer;
 
 import java.util.List;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/adapters/holders/ViewTableNameSpinnerHolder.java
Patch:
@@ -3,7 +3,7 @@
  * LICENSE:  http://git.io/vki47 | TERMS:  http://git.io/vki4o
  * -----------------------------------------------------------
  */
-package com.secupwn.aimsicd.adapters.Holders;
+package com.secupwn.aimsicd.adapters.holders;
 
 
 import android.widget.TextView;

File: AIMSICD/src/main/java/com/secupwn/aimsicd/constants/DrawerMenu.java
Patch:
@@ -12,7 +12,7 @@ public class DrawerMenu {
 
     /**
      * Constants of id for NavDrawerItem
-     * <p>Relates to {@link com.SecUpwN.AIMSICD.drawer.NavDrawerItem#getId()}<br />
+     * <p>Relates to {@link com.secupwn.aimsicd.drawer.NavDrawerItem#getId()}<br />
      */
     public static class ID {
 

File: AIMSICD/src/main/java/com/secupwn/aimsicd/constants/TinyDbKeys.java
Patch:
@@ -7,7 +7,7 @@
 
 /**
  * Constants for TinyDb
- * <p>Relates to {@link com.SecUpwN.AIMSICD.utils.TinyDB}<br />
+ * <p>Relates to {@link com.secupwn.aimsicd.utils.TinyDB}<br />
  */
 public class TinyDbKeys {
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/constants/DBTableColumnIds.java
Patch:
@@ -75,6 +75,7 @@ public class DBTableColumnIds {
     public static final String DBI_BTS_TIME_LAST = "time_last";
     public static final String DBI_BTS_LAT = "gps_lat";
     public static final String DBI_BTS_LON = "gps_lon";
+    public static final String DBI_BTS_JOINED_RAT = "RAT";
 
     //DBi_measure
     public static final String DBI_MEASURE_TABLE_NAME = "DBi_measure";

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/MapFragment.java
Patch:
@@ -401,8 +401,8 @@ protected GeoPoint doInBackground(Void... voids) {
                         final int mcc = c.getInt(c.getColumnIndex(DBTableColumnIds.DBI_BTS_MCC));        // MCC
                         final int mnc = c.getInt(c.getColumnIndex(DBTableColumnIds.DBI_BTS_MNC));        // MNC
                         final int psc = c.getInt(c.getColumnIndex(DBTableColumnIds.DBI_BTS_PSC));        // PSC
-                        // TODO: 2016-02-27 Is there a reason why #DBI_BTS_RAT doesn't exist?
-                        // final String rat = c.getString(c.getColumnIndex(DBTableColumnIds.DBI_BTS_RAT));   // RAT
+                        final String rat = Cell.getRatFromInt(
+                                c.getInt(c.getColumnIndex(DBTableColumnIds.DBI_BTS_JOINED_RAT)));        // RAT
                         final double dLat = c.getDouble(c.getColumnIndex(DBTableColumnIds.DBI_BTS_LAT)); // Lat
                         final double dLng = c.getDouble(c.getColumnIndex(DBTableColumnIds.DBI_BTS_LON)); // Lon
 
@@ -435,7 +435,7 @@ protected GeoPoint doInBackground(Void... voids) {
                                             String.valueOf(mcc),
                                             String.valueOf(mnc),
                                             String.valueOf(psc),
-                                            null,
+                                            rat,
                                             "", false)
                             );
                             // The pin of our current position

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -566,8 +566,9 @@ public boolean populateDBeImport() {
 //                                cid = csvCellID.get(rowCounter)[12],         //int   short CID [<65536]
                                 psc = csvCellID.get(rowCounter)[13];         //int
 
-                        // TODO: WHAT IS THIS DOING? Can we remove?
-                        // (There shouldn't be any bad PSCs in the import...)
+                        // Some OCID data may not contain PSC so we indicate this with an out-of-range
+                        // PSC value. Should be -1 but hey people already imported so we're stuck with
+                        // this.
                         int iPsc = 666;
                         if (psc != null && !psc.isEmpty()) {
                             iPsc = Integer.parseInt(psc);

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/CellInfoFragment.java
Patch:
@@ -18,7 +18,6 @@
 
 package com.SecUpwN.AIMSICD.fragments;
 
-import android.app.Activity;
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
@@ -30,7 +29,6 @@
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.text.TextUtils;
 import android.view.View;
-import android.widget.Button;
 import android.widget.ListView;
 import android.widget.TableRow;
 import android.widget.TextView;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/utils/StackOverflowXmlParser.java
Patch:
@@ -58,7 +58,7 @@ private List<Cell> readCells(XmlPullParser parser) throws XmlPullParserException
     // to their respective "read" methods for processing. Otherwise, skips the tag.
     private Cell readCell(XmlPullParser parser) throws XmlPullParserException, IOException {
         Cell cell = new Cell();
-        //parser.require(XmlPullParser.START_TAG, ns, "cell");
+        parser.require(XmlPullParser.START_TAG, ns, "cell");
         while (parser.next() != XmlPullParser.END_TAG) {
             if (parser.getEventType() != XmlPullParser.START_TAG) {
                 continue;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -379,9 +379,9 @@ private void downloadBtsDataIfApiKeyAvailable() {
 
             if (networkOperator != null) {
                 int mcc = Integer.parseInt(networkOperator.substring(0, 3));
-                cell.setMCC(Integer.parseInt(networkOperator.substring(0, 3)));
+                cell.setMCC(mcc);
                 int mnc = Integer.parseInt(networkOperator.substring(3));
-                cell.setMNC(Integer.parseInt(networkOperator.substring(3, 5)));
+                cell.setMNC(mnc);
                 log.debug("CELL:: mcc=" + mcc + " mnc=" + mnc);
             }
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -379,9 +379,9 @@ private void downloadBtsDataIfApiKeyAvailable() {
 
             if (networkOperator != null) {
                 int mcc = Integer.parseInt(networkOperator.substring(0, 3));
-                cell.setMCC(Integer.parseInt(networkOperator.substring(0, 3)));
+                cell.setMCC(mcc);
                 int mnc = Integer.parseInt(networkOperator.substring(3));
-                cell.setMNC(Integer.parseInt(networkOperator.substring(3, 5)));
+                cell.setMNC(mnc);
                 log.debug("CELL:: mcc=" + mcc + " mnc=" + mnc);
             }
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/utils/StackOverflowXmlParser.java
Patch:
@@ -58,7 +58,7 @@ private List<Cell> readCells(XmlPullParser parser) throws XmlPullParserException
     // to their respective "read" methods for processing. Otherwise, skips the tag.
     private Cell readCell(XmlPullParser parser) throws XmlPullParserException, IOException {
         Cell cell = new Cell();
-        parser.require(XmlPullParser.START_TAG, ns, "cell");
+        //parser.require(XmlPullParser.START_TAG, ns, "cell");
         while (parser.next() != XmlPullParser.END_TAG) {
             if (parser.getEventType() != XmlPullParser.START_TAG) {
                 continue;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/AboutActivity.java
Patch:
@@ -17,7 +17,6 @@
 
 import com.SecUpwN.AIMSICD.BuildConfig;
 import com.SecUpwN.AIMSICD.R;
-import com.SecUpwN.AIMSICD.utils.MiscUtils;
 
 import io.freefair.android.injection.annotation.InjectView;
 import io.freefair.android.injection.annotation.XmlLayout;
@@ -136,10 +135,9 @@ public void onClick(View view) {
 
                 new AlertDialog.Builder(AboutActivity.this)
                         .setTitle(R.string.about_credits)
-                        .setMessage(MiscUtils.setAssetsString(getApplicationContext()))
+                        .setMessage(R.string.about_credits_content)
                         .setPositiveButton(android.R.string.ok, null)
                         .show();
-
             }
         });
     }

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewerOsmDroid.java
Patch:
@@ -375,7 +375,7 @@ protected GeoPoint doInBackground(Void... voids) {
                 //New function only gets bts from DBe_import by sim network
                 loadOcidMarkersByNetwork();
 
-                LinkedList<CellTowerMarker> items = new LinkedList<>();
+                List<CellTowerMarker> items = new LinkedList<>();
 
                 Cursor c = null;
                 try {
@@ -542,7 +542,7 @@ protected void onPostExecute(GeoPoint defaultLoc) {
 
     private void loadOcidMarkersByNetwork() {
         // Check if OpenCellID data exists and if so load this now
-        LinkedList<CellTowerMarker> items = new LinkedList<>();
+        List<CellTowerMarker> items = new LinkedList<>();
         String networkOperator = tm.getNetworkOperator();
         int currentMmc = 0;
         int currentMnc = 0;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -1090,11 +1090,11 @@ public int getAverageSignalStrength(int cellID) {
     // ====================================================================
     //      Get all detection strings
     // ====================================================================
-    public ArrayList<AdvanceUserItems> getDetectionStrings() {
+    public List<AdvanceUserItems> getDetectionStrings() {
 
         Cursor cursor = mDb.rawQuery("SELECT * FROM DetectionStrings", null);
 
-        ArrayList<AdvanceUserItems> detectionStrings = new ArrayList<>();
+        List<AdvanceUserItems> detectionStrings = new ArrayList<>();
 
         if (cursor.getCount() > 0) {
             while (cursor.moveToNext()) {

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/adapters/DbViewerSpinnerAdapter.java
Patch:
@@ -16,7 +16,7 @@
 import com.SecUpwN.AIMSICD.adapters.Holders.ViewTableNameSpinnerHolder;
 import com.SecUpwN.AIMSICD.enums.StatesDbViewer;
 
-import java.util.ArrayList;
+import java.util.List;
 
 public class DbViewerSpinnerAdapter extends ArrayAdapter<StatesDbViewer> {
 
@@ -25,7 +25,7 @@ public DbViewerSpinnerAdapter(Context pContext, int pResource) {
         mDataList = StatesDbViewer.getStates();
     }
 
-    ArrayList<StatesDbViewer> mDataList;
+    List<StatesDbViewer> mDataList;
 
 
     @Override

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/enums/StatesDbViewer.java
Patch:
@@ -11,6 +11,7 @@
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.List;
 
 public enum StatesDbViewer {
 
@@ -36,7 +37,7 @@ public int getStatementValue() {
     }
 
 
-    public static ArrayList<StatesDbViewer> getStates() {
+    public static List<StatesDbViewer> getStates() {
         return new ArrayList<>(Arrays.asList(values()));
     }
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -381,7 +381,7 @@ public List<Cell> updateNeighbouringCells() {
                                 continue;
                             }
                     }
-                    ArrayList<NeighboringCellInfo> cellInfoList =
+                    List<NeighboringCellInfo> cellInfoList =
                             new ArrayList<>(neighboringCellBlockingQueue.size() + 1);
                     while (info != null) {
                         cellInfoList.add(info);

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvanceUserBaseAdapter.java
Patch:
@@ -17,15 +17,15 @@
 
 import com.SecUpwN.AIMSICD.R;
 
-import java.util.ArrayList;
+import java.util.List;
 
 
 public class AdvanceUserBaseAdapter extends BaseAdapter {
-	private static ArrayList<AdvanceUserItems> detectionItemDetails;
+	private static List<AdvanceUserItems> detectionItemDetails;
 
 	private LayoutInflater l_Inflater;
 
-	public AdvanceUserBaseAdapter(Context context, ArrayList<AdvanceUserItems> results) {
+	public AdvanceUserBaseAdapter(Context context, List<AdvanceUserItems> results) {
         detectionItemDetails = results;
 		l_Inflater = LayoutInflater.from(context);
 	}

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvanceUserBaseSmsAdapter.java
Patch:
@@ -17,15 +17,15 @@
 
 import com.SecUpwN.AIMSICD.R;
 
-import java.util.ArrayList;
+import java.util.List;
 
 
 public class AdvanceUserBaseSmsAdapter extends BaseAdapter {
-	private static ArrayList<CapturedSmsData> detectionItemDetails;
+	private static List<CapturedSmsData> detectionItemDetails;
 
 	private LayoutInflater l_Inflater;
 
-	public AdvanceUserBaseSmsAdapter(Context context, ArrayList<CapturedSmsData> results) {
+	public AdvanceUserBaseSmsAdapter(Context context, List<CapturedSmsData> results) {
         detectionItemDetails = results;
 		l_Inflater = LayoutInflater.from(context);
 	}

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvancedUserActivity.java
Patch:
@@ -23,6 +23,7 @@
 import com.SecUpwN.AIMSICD.constants.DBTableColumnIds;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import io.freefair.android.injection.annotation.Inject;
 import io.freefair.android.injection.annotation.InjectView;
@@ -48,7 +49,7 @@ public class AdvancedUserActivity extends InjectionAppCompatActivity {
 
     @InjectView(R.id.spinner)
     private Spinner spinner;
-    private ArrayList<AdvanceUserItems> msgItems;
+    private List<AdvanceUserItems> msgItems;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -131,7 +132,7 @@ public void onClick(View view) {
      * Reload ListView with new database values
      */
     public void loadDbString(){
-        ArrayList<AdvanceUserItems> newmsglist;
+        List<AdvanceUserItems> newmsglist;
         try {
         /* There should be at least 1 detection string in db so not to cause an error */
             newmsglist = dbAccess.getDetectionStrings();

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvancedUserSmsActivity.java
Patch:
@@ -20,6 +20,7 @@
 import com.SecUpwN.AIMSICD.constants.DBTableColumnIds;
 
 import java.util.ArrayList;
+import java.util.List;
 
 import io.freefair.android.injection.annotation.Inject;
 import io.freefair.android.injection.annotation.InjectView;
@@ -38,7 +39,7 @@ public class AdvancedUserSmsActivity extends InjectionAppCompatActivity {
     ListView listViewAdv;
 
     AIMSICDDbAdapter dbaccess;
-    ArrayList<CapturedSmsData> msgitems;
+    List<CapturedSmsData> msgitems;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -97,7 +98,7 @@ public boolean onItemLongClick(AdapterView<?> a, View v, int position, long id)
 
     }
     public void loadDbString(){
-        ArrayList<CapturedSmsData> newmsglist = new ArrayList<>();
+        List<CapturedSmsData> newmsglist = new ArrayList<>();
 
         try {
             Cursor smscur = dbaccess.returnSmsData();

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/smsdetection/SmsDetector.java
Patch:
@@ -85,7 +85,7 @@ public SmsDetector(Context context) {
         mContext = context;
         mDbAdapter = new AIMSICDDbAdapter(context);
 
-        ArrayList<AdvanceUserItems> silent_string = mDbAdapter.getDetectionStrings();
+        List<AdvanceUserItems> silent_string = mDbAdapter.getDetectionStrings();
 
         LOADED_DETECTION_STRINGS = new String[silent_string.size()];
         for (int x = 0; x < silent_string.size(); x++) {

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/AboutActivity.java
Patch:
@@ -17,7 +17,6 @@
 
 import com.SecUpwN.AIMSICD.BuildConfig;
 import com.SecUpwN.AIMSICD.R;
-import com.SecUpwN.AIMSICD.utils.MiscUtils;
 
 import io.freefair.android.injection.annotation.InjectView;
 import io.freefair.android.injection.annotation.XmlLayout;
@@ -136,10 +135,9 @@ public void onClick(View view) {
 
                 new AlertDialog.Builder(AboutActivity.this)
                         .setTitle(R.string.about_credits)
-                        .setMessage(MiscUtils.setAssetsString(getApplicationContext()))
+                        .setMessage(R.string.about_credits_content)
                         .setPositiveButton(android.R.string.ok, null)
                         .show();
-
             }
         });
     }

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/BaseActivity.java
Patch:
@@ -26,7 +26,7 @@
  *
  * @author Tor Henning Ueland
  */
-public class BaseActivity extends InjectionAppCompatActivity {
+public abstract class BaseActivity extends InjectionAppCompatActivity {
 
     @Inject
     private Logger log;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -1115,7 +1115,6 @@ public ArrayList<AdvanceUserItems> getDetectionStrings() {
     }
 
     public boolean deleteDetectedSms(long deleteme) {
-        String TAG = "AIMSICD";
         String mTAG = "AIMSICDDbAdapter";
 
         try {

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/DeviceFragment.java
Patch:
@@ -172,7 +172,8 @@ private void updateUI() {
             content = (HighlightTextView) getView().findViewById(R.id.sim_operator_name);
             content.updateText(mDevice.getSimOperatorName(), ani);
             content = (HighlightTextView)  getView().findViewById(R.id.sim_imsi);
-//            content.updateText(mDevice.getSimSubs(), ani);
+            content.updateText(mDevice.getSimSubs(), ani);
+            content = (HighlightTextView)  getView().findViewById(R.id.sim_serial);
             content.updateText(mDevice.getSimSerial(), ani);
 
             content = (HighlightTextView)  getView().findViewById(R.id.device_type);

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/DeviceFragment.java
Patch:
@@ -172,7 +172,7 @@ private void updateUI() {
             content = (HighlightTextView) getView().findViewById(R.id.sim_operator_name);
             content.updateText(mDevice.getSimOperatorName(), ani);
             content = (HighlightTextView)  getView().findViewById(R.id.sim_imsi);
-            content = (HighlightTextView)  getView().findViewById(R.id.sim_serial);
+//            content.updateText(mDevice.getSimSubs(), ani);
             content.updateText(mDevice.getSimSerial(), ani);
 
             content = (HighlightTextView)  getView().findViewById(R.id.device_type);

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/DeviceFragment.java
Patch:
@@ -172,7 +172,7 @@ private void updateUI() {
             content = (HighlightTextView) getView().findViewById(R.id.sim_operator_name);
             content.updateText(mDevice.getSimOperatorName(), ani);
             content = (HighlightTextView)  getView().findViewById(R.id.sim_imsi);
-//            content.updateText(mDevice.getSimSubs(), ani);
+            content = (HighlightTextView)  getView().findViewById(R.id.sim_serial);
             content.updateText(mDevice.getSimSerial(), ani);
 
             content = (HighlightTextView)  getView().findViewById(R.id.device_type);

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/PrefFragment.java
Patch:
@@ -16,6 +16,7 @@ public class PrefFragment extends PreferenceFragment {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         addPreferencesFromResource(R.xml.preferences);
-    }
 
+
+    }
 }
\ No newline at end of file

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewerOsmDroid.java
Patch:
@@ -84,7 +84,7 @@
  * https://code.google.com/p/osmbonuspack/issues/detail?id=102
  */
 @XmlLayout(R.layout.activity_map_viewer)
-@XmlMenu(R.menu.map_viewer_menu)
+@XmlMenu(R.menu.activity_map_viewer)
 public final class MapViewerOsmDroid extends BaseActivity implements OnSharedPreferenceChangeListener {
 
     @Inject

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/CellInfoFragment.java
Patch:
@@ -70,7 +70,7 @@
  *  TODO:   2) Might wanna make the refresh rate lower/higher depending on support
  *
  */
-@XmlLayout(R.layout.cell_fragment)
+@XmlLayout(R.layout.fragment_cell_info)
 public class CellInfoFragment extends InjectionFragment {
 
     public static final int STOCK_REQUEST = 1;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -45,7 +45,7 @@
  * <p/>
  * Notes:          See issue #234 for details on how to format the UI
  */
-@XmlLayout(R.layout.db_view)
+@XmlLayout(R.layout.fragment_db_viewer)
 public final class DbViewerFragment extends InjectionFragment {
 
     private AIMSICDDbAdapter mDb;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/DeviceFragment.java
Patch:
@@ -30,7 +30,7 @@
 import io.freefair.android.injection.app.InjectionFragment;
 import io.freefair.android.util.logging.Logger;
 
-@XmlLayout(R.layout.device)
+@XmlLayout(R.layout.fragment_device)
 public class DeviceFragment extends InjectionFragment {
 
     @Inject

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewerOsmDroid.java
Patch:
@@ -83,7 +83,7 @@
  * https://github.com/osmdroid/osmdroid/issues/81
  * https://code.google.com/p/osmbonuspack/issues/detail?id=102
  */
-@XmlLayout(R.layout.map)
+@XmlLayout(R.layout.activity_map_viewer)
 @XmlMenu(R.menu.map_viewer_menu)
 public final class MapViewerOsmDroid extends BaseActivity implements OnSharedPreferenceChangeListener {
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/drawer/DrawerMenuActivityConfiguration.java
Patch:
@@ -133,7 +133,7 @@ public DrawerMenuActivityConfiguration build() {
             mNavItems = menu;
 
             if (mMainLayout == 0) {
-                this.mainLayout(R.layout.main);
+                this.mainLayout(R.layout.activity_main);
             }
 
             if (mDrawerLayoutId == 0) {

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -47,9 +47,8 @@
 import io.freefair.android.util.logging.Logger;
 
 /**
- *  Description:    This starts the (background?) AIMSICD service to check for SMS and track
- *                  cells with or without GPS enabled.
- *                  TODO: better and more detailed explanation!
+ * This starts the (background?) AIMSICD service to check for SMS and track
+ * cells with or without GPS enabled.
  */
 public class AimsicdService extends InjectionService {
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/rilexecutor/SamsungMulticlientRilExecutor.java
Patch:
@@ -33,9 +33,6 @@
 import java.util.Random;
 import java.util.concurrent.atomic.AtomicBoolean;
 
-/**
- *      Description:
- */
 public class SamsungMulticlientRilExecutor implements OemRilExecutor {
 
     private final Logger log = AndroidLogger.forClass(SamsungMulticlientRilExecutor.class);

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/map/CellTowerGridMarkerClusterer.java
Patch:
@@ -12,8 +12,8 @@
 import java.util.List;
 
 /**
- * Description:     Overlay class for OSMDroid map to display multiple BTS pins
- *                  as one numbered point, clustering multiple pins.
+ * Overlay class for OSMDroid map to display multiple BTS pins
+ * as one numbered point, clustering multiple pins.
  */
 public class CellTowerGridMarkerClusterer extends RadiusMarkerClusterer {
     protected Context mContext;

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java
Patch:
@@ -19,8 +19,6 @@
  *                  DbViewerFragment.java: BuildTable()
  *                  DbeImportItemData.java
  *                  dbe_import_items.xml
- *
- *  Issues:
  */
 public class DbeImportCardInflater implements IAdapterViewInflater<DbeImportItemData> {
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -196,7 +196,7 @@ public void onClick(DialogInterface dialog, int which) {
     protected void onPostCreate(Bundle savedInstanceState) {
         super.onPostCreate(savedInstanceState);
         final String iconType = prefs.getString(getString(R.string.pref_ui_icons_key), "SENSE").toUpperCase();
-        mActionBar.setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+        mActionBar.setIcon(Icon.getIcon(Icon.Type.valueOf(iconType), ((AppAIMSICD)getApplication()).getStatus()));
         mDrawerToggle.syncState();
     }
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/BaseActivity.java
Patch:
@@ -12,10 +12,10 @@
 import android.content.SharedPreferences;
 import android.support.v4.content.LocalBroadcastManager;
 
+import com.SecUpwN.AIMSICD.AppAIMSICD;
 import com.SecUpwN.AIMSICD.R;
 import com.SecUpwN.AIMSICD.service.AimsicdService;
 import com.SecUpwN.AIMSICD.utils.Icon;
-import com.SecUpwN.AIMSICD.utils.Status;
 
 import io.freefair.android.injection.annotation.Inject;
 import io.freefair.android.injection.app.InjectionAppCompatActivity;
@@ -49,7 +49,7 @@ protected void onResume() {
     private BroadcastReceiver mMessageReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
-            log.debug("StatusWatcher received status change to " + Status.getStatus().name() + ", updating icon");
+            log.debug("StatusWatcher received status change to " + ((AppAIMSICD)getApplication()).getStatus().name() + ", updating icon");
             updateIcon(context);
         }
     };
@@ -61,7 +61,7 @@ private void updateIcon(Context context) {
             @Override
             public void run() {
                 if(getActionBar() != null) {
-                    getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+                    getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType), ((AppAIMSICD)getApplication()).getStatus()));
                 }
             }
         });

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -14,13 +14,13 @@
 
 import com.SecUpwN.AIMSICD.R;
 import com.SecUpwN.AIMSICD.constants.DBTableColumnIds;
+import com.SecUpwN.AIMSICD.enums.Status;
 import com.SecUpwN.AIMSICD.service.CellTracker;
 import com.SecUpwN.AIMSICD.smsdetection.AdvanceUserItems;
 import com.SecUpwN.AIMSICD.smsdetection.CapturedSmsData;
 import com.SecUpwN.AIMSICD.utils.CMDProcessor;
 import com.SecUpwN.AIMSICD.utils.Cell;
 import com.SecUpwN.AIMSICD.utils.MiscUtils;
-import com.SecUpwN.AIMSICD.utils.Status;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -2136,8 +2136,8 @@ public void toEventLog(int DF_id, String DF_desc) {
                 // Short 100 ms Vibration
                 // TODO not elegant solution, vibrator invocation should be moved somewhere else imho
                 boolean vibrationEnabled = mPreferences.getBoolean(mContext.getString(R.string.pref_notification_vibrate_enable), true);
-                int thresholdLevel = Integer.valueOf(mPreferences.getString(mContext.getString(R.string.pref_notification_vibrate_min_level), String.valueOf(Status.Type.MEDIUM.level)));
-                boolean higherLevelThanThreshold = Status.Type.MEDIUM.level <= thresholdLevel;
+                int thresholdLevel = Integer.valueOf(mPreferences.getString(mContext.getString(R.string.pref_notification_vibrate_min_level), String.valueOf(Status.MEDIUM.ordinal())));
+                boolean higherLevelThanThreshold = Status.MEDIUM.ordinal() <= thresholdLevel;
 
                 if (vibrationEnabled && higherLevelThanThreshold) {
                     Vibrator v = (Vibrator) mContext.getSystemService(Context.VIBRATOR_SERVICE);

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -196,7 +196,7 @@ public void onClick(DialogInterface dialog, int which) {
     protected void onPostCreate(Bundle savedInstanceState) {
         super.onPostCreate(savedInstanceState);
         final String iconType = prefs.getString(getString(R.string.pref_ui_icons_key), "SENSE").toUpperCase();
-        mActionBar.setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+        mActionBar.setIcon(Icon.getIcon(Icon.Type.valueOf(iconType), ((AppAIMSICD)getApplication()).getStatus()));
         mDrawerToggle.syncState();
     }
 

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/activities/BaseActivity.java
Patch:
@@ -61,7 +61,7 @@ private void updateIcon(Context context) {
             @Override
             public void run() {
                 if(getActionBar() != null) {
-                    getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+                    getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType), ((AppAIMSICD)getApplication()).getStatus()));
                 }
             }
         });

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/utils/Status.java
Patch:
@@ -23,12 +23,12 @@ public class Status {
     private static Type currentStatus;
 
     public enum Type {
-        IDLE(0); // GREY
+        IDLE(0), // GREY
         OK(1), // GREEN
         MEDIUM(2), // YELLOW
         HIGH(3), // ORANGE
         DANGER(4), // RED
-        SKULL(5), // BLACK
+        SKULL(5); // BLACK
 
         // Added for sake of deciding if current level is
         // higher or lower than threshold

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/AboutFragment.java
Patch:
@@ -31,10 +31,10 @@ public class AboutFragment extends InjectionFragment {
     private Button btncredits;
 
     @InjectView(R.id.aimsicd_version)
-    TextView versionNumber;
+    private TextView versionNumber;
 
     @InjectView(R.id.buildozer_buildnumber)
-    TextView BuildozerView;
+    private TextView BuildozerView;
 
     @Override
     public void onViewCreated(View v, Bundle savedInstanceState) {

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/fragments/AtCommandFragment.java
Patch:
@@ -104,10 +104,10 @@ public class AtCommandFragment extends InjectionFragment {
     private AtCommandTerminal mCommandTerminal;
 
     @InjectView(R.id.timeout_spinner)
-    Spinner timeoutSpinner;
+    private Spinner timeoutSpinner;
 
     @InjectView(R.id.execute)
-    Button atCommandExecute;
+    private Button atCommandExecute;
 
     @Override
     public void onViewCreated(View view, Bundle savedInstanceState) {

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -89,6 +89,7 @@ public AimsicdService getService() {
 
     @Override
     public void onCreate() {
+        super.onCreate();
         setTheme(R.style.AppTheme);
 
         signalStrengthTracker = new SignalStrengthTracker(getBaseContext());

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/constants/DrawerMenu.java
Patch:
@@ -88,6 +88,6 @@ public static class APPLICATION {
     /**
      * The constant indicates the number of types of menu items
      */
-    public final static int COUNT_OF_MENU_TYPE = 2;
+    public static final int COUNT_OF_MENU_TYPE = 2;
 
 }

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/constants/TinyDbKeys.java
Patch:
@@ -17,6 +17,6 @@ public class TinyDbKeys {
      * (applies to the case where the application has been minimized,
      * and at this point the download was completed in the map)
      */
-    public final static String FINISHED_LOAD_IN_MAP = "FINISHED_LOAD_IN_MAP";
+    public static final String FINISHED_LOAD_IN_MAP = "FINISHED_LOAD_IN_MAP";
 
 }

File: AIMSICD/src/main/java/com/SecUpwN/AIMSICD/rilexecutor/HexDump.java
Patch:
@@ -17,7 +17,7 @@
 
 public class HexDump {
 
-    private final static char[] HEX_DIGITS = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A',
+    private static final char[] HEX_DIGITS = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A',
             'B', 'C', 'D', 'E', 'F'};
 
     public static String dumpHexString(byte[] array) {

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Toaster.java
Patch:
@@ -5,11 +5,10 @@
  */
 package com.SecUpwN.AIMSICD.utils;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.os.CountDownTimer;
 import android.os.Handler;
-
-import android.view.Gravity;
 import android.widget.Toast;
 
 public class Toaster {
@@ -49,6 +48,7 @@ public static void msgLong(final Context context, final String msg) {
             }
 
             new Handler(context.getMainLooper()).post(new Runnable() {
+                @SuppressLint("ShowToast")
                 @Override
                 public void run() {
                     toast = Toast.makeText(context, msg, Toast.LENGTH_SHORT);

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/SmsDetector.java
Patch:
@@ -151,6 +151,7 @@ public void run() {
             mLogcatReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
         } catch (InterruptedException | IOException e) {
             Log.e(TAG, "Exception while initializing LogCat (time, radio, main) reader", e);
+            return;
         }
 
         String logcatLine;

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/SmsDetector.java
Patch:
@@ -151,6 +151,7 @@ public void run() {
             mLogcatReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
         } catch (InterruptedException | IOException e) {
             Log.e(TAG, "Exception while initializing LogCat (time, radio, main) reader", e);
+            return;
         }
 
         String logcatLine;

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -77,7 +77,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_debug_logs);
         // Show the Up button in the action bar.
-        getActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         logView = (TextView) findViewById(R.id.debug_log_view);
         btnClear = (Button) findViewById(R.id.btnClear);

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvancedUserActivity.java
Patch:
@@ -8,9 +8,9 @@
 
 package com.SecUpwN.AIMSICD.smsdetection;
 
-import android.app.Activity;
 import android.content.ContentValues;
 import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.View;
 import android.widget.AdapterView;
@@ -26,7 +26,7 @@
 
 import java.util.ArrayList;
 
-public class AdvancedUserActivity extends Activity {
+public class AdvancedUserActivity extends AppCompatActivity {
 
     private static final String TAG = "AdvancedUserActivity";
 

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvancedUserSmsActivity.java
Patch:
@@ -8,9 +8,9 @@
 
 package com.SecUpwN.AIMSICD.smsdetection;
 
-import android.app.Activity;
 import android.database.Cursor;
 import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.View;
 import android.widget.AdapterView;
@@ -23,7 +23,7 @@
 
 import java.util.ArrayList;
 
-public class AdvancedUserSmsActivity extends Activity {
+public class AdvancedUserSmsActivity extends AppCompatActivity {
     final  static String TAG ="AdvancedUserSmsActivity";
     ListView listViewAdv;
     AIMSICDDbAdapter dbaccess;

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -77,7 +77,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_debug_logs);
         // Show the Up button in the action bar.
-        getActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         logView = (TextView) findViewById(R.id.debug_log_view);
         btnClear = (Button) findViewById(R.id.btnClear);

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -685,7 +685,7 @@ public boolean populateDBeImport() {
 
                         // TODO: WHAT IS THIS DOING? Can we remove?
                         // (There shouldn't be any bad PSCs in the import...)
-                        int iPsc = 0;
+                        int iPsc = 666;
                         if (psc != null && !psc.isEmpty()) {
                             iPsc = Integer.parseInt(psc);
                         }

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -222,7 +222,8 @@ public static void getOpenCellData(Context context, Cell cell, char type) {
                 double earthRadius = 6371.01; // [Km]
                 int radius = 2; // Use a 2 Km radius with center at GPS location.
 
-                if (cell.getLat() != 0.0 && cell.getLon() != 0.0) {
+                if (Double.doubleToRawLongBits(cell.getLat()) != 0 &&
+                        Double.doubleToRawLongBits(cell.getLon()) != 0) {
                     //New GeoLocation object to find bounding Coordinates
                     GeoLocation currentLoc = GeoLocation.fromDegrees(cell.getLat(), cell.getLon());
 
@@ -358,7 +359,6 @@ public static void askAndDeleteDb(final Context pContext) {
                 .setNegativeButton(R.string.open_cell_id_button_cancel, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
-                        // Do nothing... or add something more informative!
                     }
                 })
                 .setPositiveButton(R.string.open_cell_id_button_ok, new DialogInterface.OnClickListener() {

File: app/src/main/java/com/SecUpwN/AIMSICD/service/LocationTracker.java
Patch:
@@ -39,9 +39,9 @@ public class LocationTracker {
     private Location lastLocation;
     private static final long GPS_MIN_UPDATE_TIME = 10000;
     private static final float GPS_MIN_UPDATE_DISTANCE = 10;
-    AIMSICDDbAdapter mDbHelper;
+    private AIMSICDDbAdapter mDbHelper;
 
-    LocationTracker(AimsicdService service, LocationListener extLocationListener) {
+    public LocationTracker(AimsicdService service, LocationListener extLocationListener) {
         this.context = service;
         this.extLocationListener = extLocationListener;
 

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -590,7 +590,7 @@ public void onBackPressed() {
                     mAimsicdService.stopSmsTracking();
                 }
             } catch (Exception ee) {
-                System.out.println("Error: Stopping SMS detection");
+                Log.e(TAG, "Error: Stopping SMS detection : " + ee.getMessage());
             }
             // Close database on Exit
             Log.i(TAG, "Closing db from onBackPressed()");

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -311,7 +311,7 @@ void selectItem(int position) {
             //          Therefore we need to either restart app or run AIMSICDDbAdapter, to rebuild DB.
             //          See: #581 and Helpers.java
             Helpers.askAndDeleteDb(this);
-            new AIMSICDDbAdapter(getApplicationContext());
+
 
         } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA) {
             if (CellTracker.OCID_API_KEY != null && !CellTracker.OCID_API_KEY.equals("NA")) {

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -311,7 +311,7 @@ void selectItem(int position) {
             //          Therefore we need to either restart app or run AIMSICDDbAdapter, to rebuild DB.
             //          See: #581 and Helpers.java
             Helpers.askAndDeleteDb(this);
-            new AIMSICDDbAdapter(getApplicationContext());
+
 
         } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA) {
             if (CellTracker.OCID_API_KEY != null && !CellTracker.OCID_API_KEY.equals("NA")) {

File: app/src/main/java/com/SecUpwN/AIMSICD/drawer/DrawerMenuItem.java
Patch:
@@ -98,12 +98,12 @@ public int getHelpStringId() {
 
         switch (mId) {
 
-            case MAIN.CURRENT_TREAT_LEVEL:
-                return R.string.help_main_current_threat_level;
-
             case MAIN.PHONE_SIM_DETAILS:
                 return R.string.help_main_phone_sim_details;
 
+            case MAIN.CURRENT_TREAT_LEVEL:
+                return R.string.help_main_current_threat_level;
+
             case MAIN.ACD:
                 return R.string.help_main_acd;
 

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -311,9 +311,6 @@ void selectItem(int position) {
         } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA) {
             if (CellTracker.OCID_API_KEY != null && !CellTracker.OCID_API_KEY.equals("NA")) {
 
-                // Trying to fix issue #525 by using DJaeger's comment in:
-                // https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/issues/543#issuecomment-121605064
-                // TODO: FIXME !!
                 Cell cell = new Cell();
                 TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
                 String networkOperator = tm.getNetworkOperator();

File: app/src/main/java/com/SecUpwN/AIMSICD/constants/DBTableColumnIds.java
Patch:
@@ -5,7 +5,7 @@
  *                  make everything much more transparent...
  *
  * Note:            Try keep the same order as in the aimsicd.sql tables
- *                  
+ *
  */
 public class DBTableColumnIds {
     //defaultlocation

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/EventLogCardInflater.java
Patch:
@@ -65,6 +65,7 @@ private class ViewHolder {
         private final TextView mgpsd_accu;
         private final TextView mDF_id;
         private final TextView mDF_desc;
+
         private final TextView mRecordId;
         private final TextView mExample;
 
@@ -80,6 +81,7 @@ public ViewHolder(View rootView) {
             mgpsd_accu =    (TextView) mRootView.findViewById(R.id.gpsd_accu);
             mDF_id =        (TextView) mRootView.findViewById(R.id.DF_id);
             mDF_desc =      (TextView) mRootView.findViewById(R.id.DF_desc);
+
             mRecordId =     (TextView) mRootView.findViewById(R.id.record_id);
             mExample =      (TextView) mRootView.findViewById(R.id.example);
 
@@ -96,6 +98,7 @@ public void updateDisplay(EventLogItemData item) {
             mgpsd_accu.setText( item.getgpsd_accu());
             mDF_id.setText(     item.getDF_id());
             mDF_desc.setText(   item.getDF_desc());
+
             mRecordId.setText(  item.getRecordId());
             if(item.isFakeData()) {
                 mExample.setText(mRootView.getContext().getString(R.string.example))  ;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -430,6 +430,7 @@ private BaseInflaterAdapter BuildTable(Cursor tableData) {
                                 "" + (tableData.getPosition() + 1) + " / " + count                                       // item:  "n/X"
                         );
 
+                        // TODO: @banajaxbanjo, please explain how to use this!!
                         data.setIsFakeData(isExample(data));
                         adapter.addItem(data, false);
                     }

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/EventLogCardInflater.java
Patch:
@@ -70,7 +70,7 @@ private class ViewHolder {
 
         public ViewHolder(View rootView) {
             mRootView = rootView;
-            //
+
             mtime =         (TextView) mRootView.findViewById(R.id.time);
             mLAC =          (TextView) mRootView.findViewById(R.id.LAC);
             mCID =          (TextView) mRootView.findViewById(R.id.CID);

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -255,7 +255,7 @@ private BaseInflaterAdapter BuildTable(Cursor tableData) {
                         // WARNING! The ORDER and number of these are crucial, and need to correspond
                         // to what's found in:  BtsMeasureCardInflater.java and BtsMeasureItemData.java
                         BtsMeasureItemData data = new BtsMeasureItemData(
-                                "bts_id: "  + String.valueOf(tableData.getInt(tableData.getColumnIndex(DBTableColumnIds.DBI_MEASURE_BTS_ID))),  // TODO: Wrong! Should be DBi_bts:CID
+                                "bts_id: "  + String.valueOf(tableData.getInt(tableData.getColumnIndex(DBTableColumnIds.DBI_MEASURE_BTS_ID))), // TODO: Wrong! Should be DBi_bts:CID
                                 "n/a", // + tableData.getString(tableData.getColumnIndex(DBTableColumnIds.DBI_MEASURE_NC_LIST)),        // nc_list
                                 tableData.getString(tableData.getColumnIndex(DBTableColumnIds.DBI_MEASURE_TIME)),                       // time
                                 tableData.getString(tableData.getColumnIndex(DBTableColumnIds.DBI_MEASURE_GPSD_LAT)),                   // gpsd_lat

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/BtsMeasureCardInflater.java
Patch:
@@ -111,7 +111,6 @@ private class ViewHolder {
 
         private TextView mRecordId;     //EVA
 
-
         public ViewHolder(View rootView) {
             mRootView = rootView;
 
@@ -139,7 +138,6 @@ public ViewHolder(View rootView) {
             isNeighbour  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_isNeighbour);
 
             mRecordId = (TextView) mRootView.findViewById(R.id.record_id);      // EVA
-
             rootView.setTag(this);
         }
 
@@ -169,7 +167,6 @@ public void updateDisplay(BtsMeasureItemData item) {
             isNeighbour.setText(item.getIsNeighbour());
 
             mRecordId.setText(item.getRecordId());      // EVA
-
         }
     }
 }

File: app/src/main/java/com/SecUpwN/AIMSICD/drawer/DrawerMenuItem.java
Patch:
@@ -98,12 +98,12 @@ public int getHelpStringId() {
 
         switch (mId) {
 
-            case MAIN.CURRENT_TREAT_LEVEL:
-                return R.string.help_main_current_threat_level;
-
             case MAIN.PHONE_SIM_DETAILS:
                 return R.string.help_main_phone_sim_details;
 
+            case MAIN.CURRENT_TREAT_LEVEL:
+                return R.string.help_main_current_threat_level;
+
             case MAIN.ACD:
                 return R.string.help_main_acd;
 

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/CardItemData.java
Patch:
@@ -33,7 +33,7 @@
  *  Notes:
  *
  *   We often talk about "Network Type", when we actually refer to:
- *   "RAN" = Radio Access Network (cellular communaitcation only)
+ *   "RAN" = Radio Access Network (cellular communication only)
  *   "RAT" = Radio Access Technology (any wireless communication technology, like WiMax etc.)
  *
  *   As for this application, we shall use the terms:
@@ -116,7 +116,7 @@ public CardItemData(Cell cell, String recordId) {
         if (cell.getRssi() != Integer.MAX_VALUE && cell.getRssi() != -1) {
             mSignal = "RSSI: " + cell.getRssi();
         } else if (cell.getDBM() != Integer.MAX_VALUE && cell.getDBM() != -1) {
-            mSignal = "Dbm: " + cell.getDBM();
+            mSignal = "dBm: " + cell.getDBM();
         } else {
             mSignal = "N/A";
         }

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/BtsMeasureCardInflater.java
Patch:
@@ -147,7 +147,7 @@ public void updateDisplay(BtsMeasureItemData item) {
             gpsd_accu.setText(item.getGpsd_accu());
 //            gpse_lat.setText(item.getGpse_lat());
 //            gpse_lon.setText(item.getGpse_lon());
-            bb_power.setText(item.getBb_power());
+//            bb_power.setText(item.getBb_power());
 //            bb_rf_temp.setText(item.getBb_rf_temp());
 //            tx_power.setText(item.getTx_power());
             rx_signal.setText(item.getRx_signal());

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -591,6 +591,7 @@ public boolean prepareOpenCellUploadData() {
      *   11 rnc                     INTEGER
      *   12 cid                     INTEGER     CID (Short)= "Long CID" mod 65536
      *   13 psc                     INTEGER
+     *   --------- vvv  See OCID API  vvv ---------
      *   14 tac                     -
      *   15 pci                     -
      *   16 sid                     -
@@ -1919,7 +1920,7 @@ public void insertBTS(
             int lac,
             int cid,
             int psc,
-            int t3231,
+            int t3212,
             int a5x,
             int st_id,
             String time_first,
@@ -1936,7 +1937,7 @@ public void insertBTS(
             btsValues.put("LAC",        lac);
             btsValues.put("CID",        cid);
             btsValues.put("PSC",        psc);
-            btsValues.put("T3212",    t3231);
+            btsValues.put("T3212",    t3212);
             btsValues.put("A5x",        a5x);
             btsValues.put("ST_id",    st_id);
             btsValues.put("time_first", time_first);

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -1011,7 +1011,7 @@ public void insertBTS(
                            int lac,
                            int cid,
                            int psc,
-                           int t3231,
+                           int t3212,
                            int a5x,
                            int st_id,
                            String time_first,

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/BtsMeasureCardInflater.java
Patch:
@@ -119,7 +119,7 @@ public ViewHolder(View rootView) {
             gpsd_accu  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_gpsd_accu);
 //            gpse_lat  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_gpse_lat);
 //            gpse_lon  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_gpse_lon);
-            bb_power  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_bb_power);
+//            bb_power  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_bb_power);
 //            bb_rf_temp  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_bb_rf_temp);
 //            tx_power  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_tx_power);
             rx_signal  = (TextView) mRootView.findViewById(R.id.tv_bts_measure_rx_signal);

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -277,7 +277,7 @@ void selectItem(int position) {
                 getSupportFragmentManager().beginTransaction()
                         .replace(R.id.content_frame, new AboutFragment()).commit();
                 break;
-            case DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BST_DATA:
+            case DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BTS_DATA:
                 // Request uploading here?
                 new RequestTask(mContext, com.SecUpwN.AIMSICD.utils.RequestTask.DBE_UPLOAD_REQUEST).execute(""); // no string needed for csv based upload
                 break;
@@ -308,7 +308,7 @@ void selectItem(int position) {
             // or what did you mean?
             // "If it ain't broke, don't fix."
 
-        } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BST_DATA) {
+        } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA) {
             if (CellTracker.OCID_API_KEY != null && !CellTracker.OCID_API_KEY.equals("NA")) {
 
                 // Trying to fix issue #525 by using DJaeger's comment in:

File: app/src/main/java/com/SecUpwN/AIMSICD/constants/DrawerMenu.java
Patch:
@@ -71,8 +71,8 @@ public static class SETTINGS {
          */
         public static class APPLICATION {
             //FIXME     Is this should be "Download Local OCID Data" ?
-            public static final int DOWNLOAD_LOCAL_BST_DATA = 400; //Download Local BST Data
-            public static final int UPLOAD_LOCAL_BST_DATA = 410; //Upload Local BST Data
+            public static final int DOWNLOAD_LOCAL_BTS_DATA = 400; //Download Local BST Data
+            public static final int UPLOAD_LOCAL_BTS_DATA = 410; //Upload Local BST Data
             //TODO need to implement
             public static final int ADD_GET_OCID_API_KEY = 420; // Add/Get OCID API key
             public static final int ABOUT = 430; //About AIMSICD

File: app/src/main/java/com/SecUpwN/AIMSICD/drawer/DrawerMenuActivityConfiguration.java
Patch:
@@ -149,8 +149,8 @@ public DrawerMenuActivityConfiguration build() {
 
             //Section Application
             menu.add(DrawerMenuSection.create(DrawerMenu.ID.SECTION_APPLICATION, mContext.getString(R.string.application)));
-            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BST_DATA, mContext.getString(R.string.get_opencellid), R.drawable.stat_sys_download_anim0, false));   // "Download Local BTS data"
-            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BST_DATA, mContext.getString(R.string.upload_bts), R.drawable.stat_sys_upload_anim0, false));      // "Upload Local BTS data"
+            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA, mContext.getString(R.string.get_opencellid), R.drawable.stat_sys_download_anim0, false));   // "Download Local BTS data"
+            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BTS_DATA, mContext.getString(R.string.upload_bts), R.drawable.stat_sys_upload_anim0, false));      // "Upload Local BTS data"
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.ABOUT, mContext.getString(R.string.about_aimsicd), R.drawable.ic_action_about, true));         // About
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.SEND_DEBUGGING_LOG, mContext.getString(R.string.send_logs), R.drawable.ic_action_computer, false));         // Debugging
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.QUIT, mContext.getString(R.string.quit), R.drawable.ic_action_remove, false));                // Quit

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -277,7 +277,7 @@ void selectItem(int position) {
                 getSupportFragmentManager().beginTransaction()
                         .replace(R.id.content_frame, new AboutFragment()).commit();
                 break;
-            case DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BST_DATA:
+            case DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BTS_DATA:
                 // Request uploading here?
                 new RequestTask(mContext, com.SecUpwN.AIMSICD.utils.RequestTask.DBE_UPLOAD_REQUEST).execute(""); // no string needed for csv based upload
                 break;
@@ -308,7 +308,7 @@ void selectItem(int position) {
             // or what did you mean?
             // "If it ain't broke, don't fix."
 
-        } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BST_DATA) {
+        } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA) {
             if (CellTracker.OCID_API_KEY != null && !CellTracker.OCID_API_KEY.equals("NA")) {
 
                 // Trying to fix issue #525 by using DJaeger's comment in:

File: app/src/main/java/com/SecUpwN/AIMSICD/constants/DrawerMenu.java
Patch:
@@ -71,8 +71,8 @@ public static class SETTINGS {
          */
         public static class APPLICATION {
             //FIXME     Is this should be "Download Local OCID Data" ?
-            public static final int DOWNLOAD_LOCAL_BST_DATA = 400; //Download Local BST Data
-            public static final int UPLOAD_LOCAL_BST_DATA = 410; //Upload Local BST Data
+            public static final int DOWNLOAD_LOCAL_BTS_DATA = 400; //Download Local BST Data
+            public static final int UPLOAD_LOCAL_BTS_DATA = 410; //Upload Local BST Data
             //TODO need to implement
             public static final int ADD_GET_OCID_API_KEY = 420; // Add/Get OCID API key
             public static final int ABOUT = 430; //About AIMSICD

File: app/src/main/java/com/SecUpwN/AIMSICD/drawer/DrawerMenuActivityConfiguration.java
Patch:
@@ -149,8 +149,8 @@ public DrawerMenuActivityConfiguration build() {
 
             //Section Application
             menu.add(DrawerMenuSection.create(DrawerMenu.ID.SECTION_APPLICATION, mContext.getString(R.string.application)));
-            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BST_DATA, mContext.getString(R.string.get_opencellid), R.drawable.stat_sys_download_anim0, false));   // "Download Local BTS data"
-            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BST_DATA, mContext.getString(R.string.upload_bts), R.drawable.stat_sys_upload_anim0, false));      // "Upload Local BTS data"
+            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BTS_DATA, mContext.getString(R.string.get_opencellid), R.drawable.stat_sys_download_anim0, false));   // "Download Local BTS data"
+            menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BTS_DATA, mContext.getString(R.string.upload_bts), R.drawable.stat_sys_upload_anim0, false));      // "Upload Local BTS data"
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.ABOUT, mContext.getString(R.string.about_aimsicd), R.drawable.ic_action_about, true));         // About
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.SEND_DEBUGGING_LOG, mContext.getString(R.string.send_logs), R.drawable.ic_action_computer, false));         // Debugging
             menu.add(DrawerMenuItem.create(DrawerMenu.ID.APPLICATION.QUIT, mContext.getString(R.string.quit), R.drawable.ic_action_remove, false));                // Quit

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java
Patch:
@@ -17,7 +17,7 @@
  *
  *  Dependencies:
  *                  dbe_import_items.xml
- *                  
+ *
  *
  *  Issues:
  *          [ ]     LAC and CID seem swapped...hard to debug

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/MiscUtils.java
Patch:
@@ -73,7 +73,7 @@ public static void startPopUpInfo(Context context,int mode){
     }
 
     public static String getCurrentTimeStamp(){
-
+        //yyyyMMddHHmmss <-- this format is needed for OCID upload
         Date now = new Date();
         return new SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault()).format(now);
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/RequestTask.java
Patch:
@@ -133,6 +133,7 @@ protected String doInBackground(String... commandString) {
                 try {
 
                     boolean prepared = mDbAdapter.prepareOpenCellUploadData();
+
                     Log.i(TAG, mTAG + ": OCID upload data prepared - " + String.valueOf(prepared));
                     if (prepared) {
                         File file = new File((mAppContext.getExternalFilesDir(null) + File.separator) + "OpenCellID/aimsicd-ocid-data.csv");

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/MiscUtils.java
Patch:
@@ -73,7 +73,7 @@ public static void startPopUpInfo(Context context,int mode){
     }
 
     public static String getCurrentTimeStamp(){
-
+        //yyyyMMddHHmmss <-- this format is needed for OCID upload
         Date now = new Date();
         return new SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault()).format(now);
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/RequestTask.java
Patch:
@@ -133,6 +133,7 @@ protected String doInBackground(String... commandString) {
                 try {
 
                     boolean prepared = mDbAdapter.prepareOpenCellUploadData();
+
                     Log.i(TAG, mTAG + ": OCID upload data prepared - " + String.valueOf(prepared));
                     if (prepared) {
                         File file = new File((mAppContext.getExternalFilesDir(null) + File.separator) + "OpenCellID/aimsicd-ocid-data.csv");

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/OpenCellIdActivity.java
Patch:
@@ -158,7 +158,7 @@ public  String requestNewOCIDKey() throws Exception {
             String htmlResponse = EntityUtils.toString(response.getEntity(), "UTF-8");
 
             //here for debugging response and codes
-            Log.d("OCID Response Message", "Response Html="+htmlResponse+" Response Code="+String.valueOf(responseCode));
+            Log.d(TAG,mTAG+ " Response Html="+htmlResponse+" Response Code="+String.valueOf(responseCode));
 
             if (responseCode == 200) {
                 Log.d(TAG, mTAG + ": OCID Server Repsonse: " + htmlResponse);

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvanceUserBaseSmsAdapter.java
Patch:
@@ -71,7 +71,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.smsd_lac.setText(SV(detectionItemDetails.get(position).getCurrent_lac()));
         holder.smsd_cid.setText(SV(detectionItemDetails.get(position).getCurrent_cid()));
         holder.smsd_rat.setText(detectionItemDetails.get(position).getCurrent_nettype());
-        holder.smsd_roam.setText(detectionItemDetails.get(position).getCurrent_roam_status());
+		String isRoaming = "false";
+		if(detectionItemDetails.get(position).getCurrent_roam_status() == 1){isRoaming = "true";}
+        holder.smsd_roam.setText(isRoaming);
         holder.smsd_lat.setText(String.valueOf(detectionItemDetails.get(position).getCurrent_gps_lat()));
         holder.smsd_lon.setText(String.valueOf(detectionItemDetails.get(position).getCurrent_gps_lon()));
 

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/RequestTask.java
Patch:
@@ -359,7 +359,8 @@ protected void onPostExecute(String result) {
             case RESTORE_DATABASE:
                 if (result != null && result.equals("Successful")) {
                     Helpers.msgShort(mAppContext, mAppContext.getString(R.string.restore_database_completed));
-                                        Activity lActivity = getActivity();
+                    Activity lActivity = getActivity();
+                    
                     if(lActivity != null) {//Activity may be detached or destroyed
                         final AlertDialog.Builder builder = new AlertDialog.Builder(lActivity);
                         builder.setTitle(R.string.restore_database_completed_title).setMessage(

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -372,6 +372,7 @@ void selectItem(int position) {
             startActivity(i);
         } else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.QUIT) {
             finish();
+            if (mAimsicdService != null) mAimsicdService.onDestroy();
         }
 
         mDrawerList.setItemChecked(position, true);

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -267,12 +267,15 @@ public static void getOpenCellData(Context context, Cell cell, char type) {
                             .append(CellTracker.OCID_API_KEY).append("&BBOX=")
                             .append(boundParameter);
 
+                    Log.i(TAG, mTAG + ":OCID MCC is set to: " + cell.getMCC());
                     if (cell.getMCC() != Integer.MAX_VALUE) {
                         sb.append("&mcc=").append(cell.getMCC());
                     }
+                    Log.i(TAG, mTAG + ":OCID MNC is set to: " + cell.getMNC());
                     if (cell.getMNC() != Integer.MAX_VALUE) {
                         sb.append("&mnc=").append(cell.getMNC());
                     }
+                    //Log.i(TAG, mTAG + ":OCID LAC is set to: " + cell.getLAC());
                     // We need DBe_import filtering, if we wanna keep these lines commented out...
                     //if (cell.getLAC() != Integer.MAX_VALUE) {
                     //    sb.append("&lac=").append(cell.getLAC());

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/RequestTask.java
Patch:
@@ -96,8 +96,8 @@ public class RequestTask extends BaseAsyncTask<String, Integer, String> {
 
     //Calling from the menu more extensive(more difficult for sever),
     // we have to give more time for the server response
-    public static final int REQUEST_TIMEOUT_MAPS = 80000;       // [ms] 40 s Calling from map
-    public static final int REQUEST_TIMEOUT_MENU = 80000;       // [ms] 40 s Calling from menu
+    public static final int REQUEST_TIMEOUT_MAPS = 80000;       // [ms] 80 s Calling from map
+    public static final int REQUEST_TIMEOUT_MENU = 80000;       // [ms] 80 s Calling from menu
 
     public static final char DBE_DOWNLOAD_REQUEST = 1;          // OCID download request from "APPLICATION" drawer title
     public static final char DBE_DOWNLOAD_REQUEST_FROM_MAP = 2; // OCID download request from "Antenna Map Viewer"

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -1417,7 +1417,7 @@ public void onOpen(SQLiteDatabase db) {
                 // Make sure it has a location index. Separate connection to avoid locking issues.
                 // TODO this can take a while the first time, provide UI feedback
                 SQLiteDatabase ladb = SQLiteDatabase.openDatabase(LACELLS_DB_NAME, null, 0);
-                String LACELLS_TABLE_CREATE = "CREATE TABLE " +
+                String LACELLS_TABLE_CREATE = "CREATE TABLE IF NOT EXISTS " +
                         LACELLS_TABLE  + " (" + COLUMN_ID +
                         " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                         "Lac INTEGER, CellID INTEGER, " +

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -1417,7 +1417,7 @@ public void onOpen(SQLiteDatabase db) {
                 // Make sure it has a location index. Separate connection to avoid locking issues.
                 // TODO this can take a while the first time, provide UI feedback
                 SQLiteDatabase ladb = SQLiteDatabase.openDatabase(LACELLS_DB_NAME, null, 0);
-                String LACELLS_TABLE_CREATE = "CREATE TABLE " +
+                String LACELLS_TABLE_CREATE = "CREATE TABLE IF NOT EXISTS " +
                         LACELLS_TABLE  + " (" + COLUMN_ID +
                         " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                         "Lac INTEGER, CellID INTEGER, " +

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -372,7 +372,7 @@ public static String requestNewOCIDKey() throws Exception {
             // a new API key within 24 hours of the last request. (See GH issue #267)
             // Make toast message:  "Only one new API key request per 24 hours. Please try again later."
 
-            Helpers.msgLong(context, context.getString(R.string.only_one_api_per_day));
+            Helpers.msgLong(context, context.getString(R.string.only_one_key_per_day));
             String responseFromServer = result.getResponseFromServer();
             Log.d("AIMSICD", "CellTracker: OCID Reached 24hr API key limit: " + responseFromServer);
             return responseFromServer;
@@ -1109,7 +1109,7 @@ void setNotification() {
             case ALARM: // ORANGE, RED or BLACK ?
                 tickerText = context.getResources().getString(R.string.app_name_short) + " - " + context.getString(R.string.alert_threat_detected); // Hmm, this is vague!
                 if (mFemtoDetected) {
-                    contentText = context.getString(R.string.aletr_femtocell_connection_detected);
+                    contentText = context.getString(R.string.alert_femtocell_connection_detected);
                 } else if (mTypeZeroSmsDetected) {
                     contentText = context.getString(R.string.alert_silent_sms_detected);
                 }

File: app/src/main/java/com/SecUpwN/AIMSICD/rilexecutor/SamsungMulticlientRilExecutor.java
Patch:
@@ -58,7 +58,7 @@ public class SamsungMulticlientRilExecutor implements OemRilExecutor {
     private static final boolean DBG = false;
 
     private static final String TAG = "AIMSICD";
-    private static final String mTAG = "MultiRil";
+    private static final String mTAG = "SamsungMulticlientRilExecutor";
 
     private volatile LocalSocketThread mThread;
 

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/DrawerMenuAdapter.java
Patch:
@@ -37,7 +37,7 @@ public class DrawerMenuAdapter extends ArrayAdapter<NavDrawerItem> {
     public DrawerMenuAdapter(Context context, int textViewResourceId, List<NavDrawerItem> objects ) {
         super(context, textViewResourceId, objects);
         inflater = LayoutInflater.from(context);
-        this.appContext = context.getApplicationContext();
+        appContext = context.getApplicationContext();
 
         mInfoButtonListener = new View.OnClickListener() {
             @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AboutFragment.java
Patch:
@@ -56,7 +56,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
             //GitHub WIKI Link
             tv = v.findViewById(R.id.aimsicd_wiki_link);
-            setLink(tv, R.string.wiki_link);
+            setLink(tv, R.string.aimsicd_wiki_link);
 
             //GitHub Website Link
             tv = v.findViewById(R.id.aimsicd_github_link);

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AboutFragment.java
Patch:
@@ -60,7 +60,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
             //GitHub Website Link
             tv = v.findViewById(R.id.aimsicd_github_link);
-            setLink(tv, R.string.github_link);
+            setLink(tv, R.string.aimsicd_github_link);
 
             //Disclaimer Link
             tv = v.findViewById(R.id.aimsicd_disclaimer_link);

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvanceUserBaseAdapter.java
Patch:
@@ -45,7 +45,7 @@ public long getItemId(int position) {
 	public View getView(int position, View convertView, ViewGroup parent) {
 		ViewHolder holder;
 		if (convertView == null) {
-			convertView = l_Inflater.inflate(R.layout.adv_user_strings_list, parent);
+			convertView = l_Inflater.inflate(R.layout.adv_user_strings_list, parent, false);
 			holder = new ViewHolder();
             holder.tv_detection_string  = (TextView)convertView.findViewById(R.id.tv_adv_list_det_str);
             holder.tv_detection_type  = (TextView)convertView.findViewById(R.id.tv_adv_list_det_type);

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvanceUserBaseSmsAdapter.java
Patch:
@@ -45,7 +45,7 @@ public long getItemId(int position) {
 	public View getView(int position, View convertView, ViewGroup parent) {
 		ViewHolder holder;
 		if (convertView == null) {
-			convertView = l_Inflater.inflate(R.layout.adv_user_sms_listview, parent);
+			convertView = l_Inflater.inflate(R.layout.adv_user_sms_listview, parent, false);
 			holder = new ViewHolder();
             holder.smsd_timestamp = (TextView)convertView.findViewById(R.id.tv_adv_smsdata_timestamp);
             holder.smsd_smstype = (TextView) convertView.findViewById(R.id.tv_adv_smsdata_smstype);

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -879,8 +879,9 @@ private void populateDefaultMCC(SQLiteDatabase db) {
      *          "updateOpenCellID" to "populateDBe_import"
      */
     public boolean updateOpenCellID() {
-        String fileName = Environment.getExternalStorageDirectory()
-                                        + "/AIMSICD/OpenCellID/opencellid.csv";
+        String fileName = (mContext.getExternalFilesDir(null) + File.separator) + "OpenCellID/opencellid.csv";
+
+        Log.i(TAG, mTAG + ":updateOpenCellID: reading file: " + fileName );
         File file = new File(fileName);
         try {
             if (file.exists()) {

File: app/src/main/java/com/SecUpwN/AIMSICD/AppAIMSICD.java
Patch:
@@ -34,6 +34,7 @@ public AppAIMSICD() {
     @Override
     public void onCreate() {
         super.onCreate();
+        LeakCanary.install(this);
         TinyDB.getInstance().init(getApplicationContext());
         TinyDB.getInstance().putBoolean(TinyDbKeys.FINISHED_LOAD_IN_MAP, true);
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/AsyncResponse.java
Patch:
@@ -3,6 +3,8 @@
  * LICENSE:  http://git.io/vki47 | TERMS:  http://git.io/vki4o
  * -----------------------------------------------------------
  */
+package com.SecUpwN.AIMSICD.utils;
+
 import java.util.List;
 
 public interface AsyncResponse {

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/CreditsRollActivity.java
Patch:
@@ -26,7 +26,6 @@
 import android.view.View;
 import android.view.animation.LinearInterpolator;
 import android.widget.SeekBar;
-import android.widget.Toast;
 
 import com.SecUpwN.AIMSICD.R;
 import com.SecUpwN.AIMSICD.fragments.CreditsRollView;

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapPrefActivity.java
Patch:
@@ -1,11 +1,11 @@
 package com.SecUpwN.AIMSICD.activities;
 
-import com.SecUpwN.AIMSICD.fragments.MapPrefFragment;
-
 import android.app.FragmentManager;
 import android.app.FragmentTransaction;
 import android.os.Bundle;
 
+import com.SecUpwN.AIMSICD.fragments.MapPrefFragment;
+
 public class MapPrefActivity extends BaseActivity {
 
     @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/PrefActivity.java
Patch:
@@ -1,11 +1,11 @@
 package com.SecUpwN.AIMSICD.activities;
 
-import com.SecUpwN.AIMSICD.fragments.PrefFragment;
-
 import android.app.FragmentManager;
 import android.app.FragmentTransaction;
 import android.os.Bundle;
 
+import com.SecUpwN.AIMSICD.fragments.PrefFragment;
+
 
 public class PrefActivity extends BaseActivity {
 

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/CellCardInflater.java
Patch:
@@ -1,12 +1,12 @@
 package com.SecUpwN.AIMSICD.adapters;
 
-import com.SecUpwN.AIMSICD.R;
-
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.SecUpwN.AIMSICD.R;
+
 
 /**
  * Brief:   TODO: Please explain its use.

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/DefaultLocationCardInflater.java
Patch:
@@ -1,12 +1,12 @@
 package com.SecUpwN.AIMSICD.adapters;
 
-import com.SecUpwN.AIMSICD.R;
-
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.SecUpwN.AIMSICD.R;
+
 public class DefaultLocationCardInflater implements IAdapterViewInflater<CardItemData> {
 
     @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/IAdapterViewInflater.java
Patch:
@@ -4,7 +4,5 @@
 import android.view.ViewGroup;
 
 public interface IAdapterViewInflater<T> {
-
-    public View inflate(BaseInflaterAdapter<T> adapter, int pos, View convertView,
-            ViewGroup parent);
+    View inflate(BaseInflaterAdapter<T> adapter, int pos, View convertView, ViewGroup parent);
 }
\ No newline at end of file

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/MeasuredCellStrengthCardData.java
Patch:
@@ -1,6 +1,8 @@
 package com.SecUpwN.AIMSICD.adapters;
 
 import java.text.SimpleDateFormat;
+import java.util.Locale;
+
 /**
  *
  * Data card class used in DB viewer (for Measured cell strength measurements)
@@ -12,7 +14,7 @@ public class MeasuredCellStrengthCardData {
     private final long timestamp;
     private final int signal;
     private final int cellID;
-    private SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+    private SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
 
     public MeasuredCellStrengthCardData(int cellID, int signal, long timestamp) {
         this.cellID = cellID;

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/OpenCellIdCardInflater.java
Patch:
@@ -1,12 +1,12 @@
 package com.SecUpwN.AIMSICD.adapters;
 
-import com.SecUpwN.AIMSICD.R;
-
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.SecUpwN.AIMSICD.R;
+
 public class OpenCellIdCardInflater implements IAdapterViewInflater<CardItemData> {
 
     @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/SilentSmsCardData.java
Patch:
@@ -1,6 +1,7 @@
 package com.SecUpwN.AIMSICD.adapters;
 
 import java.text.SimpleDateFormat;
+import java.util.Locale;
 
 public class SilentSmsCardData {
 
@@ -68,7 +69,7 @@ public String getMessage() {
     }
 
     public String getTimestamp() {
-        SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss");
+        SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss", Locale.getDefault());
         String dateString = formatter.format(mTimestamp);
         return "Timestamp: " + dateString;
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/SilentSmsCardInflater.java
Patch:
@@ -1,12 +1,12 @@
 package com.SecUpwN.AIMSICD.adapters;
 
-import com.SecUpwN.AIMSICD.R;
-
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.SecUpwN.AIMSICD.R;
+
 public class SilentSmsCardInflater implements IAdapterViewInflater<SilentSmsCardData> {
 
     @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/enums/StatesDbViewer.java
Patch:
@@ -8,7 +8,6 @@
 
 import android.content.Context;
 
-
 import com.SecUpwN.AIMSICD.R;
 
 import java.util.ArrayList;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/MapPrefFragment.java
Patch:
@@ -1,10 +1,10 @@
 package com.SecUpwN.AIMSICD.fragments;
 
-import com.SecUpwN.AIMSICD.R;
-
 import android.os.Bundle;
 import android.preference.PreferenceFragment;
 
+import com.SecUpwN.AIMSICD.R;
+
 public class MapPrefFragment extends PreferenceFragment {
 
     @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/PrefFragment.java
Patch:
@@ -1,10 +1,10 @@
 package com.SecUpwN.AIMSICD.fragments;
 
-import com.SecUpwN.AIMSICD.R;
-
 import android.os.Bundle;
 import android.preference.PreferenceFragment;
 
+import com.SecUpwN.AIMSICD.R;
+
 public class PrefFragment extends PreferenceFragment {
 
     @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/map/CellTowerMarker.java
Patch:
@@ -13,7 +13,6 @@
 import org.osmdroid.bonuspack.overlays.Marker;
 import org.osmdroid.util.GeoPoint;
 import org.osmdroid.views.MapView;
-import org.osmdroid.views.overlay.OverlayItem;
 
 /**
  * BTS pin item

File: app/src/main/java/com/SecUpwN/AIMSICD/receiver/BootCompletedReceiver.java
Patch:
@@ -1,14 +1,14 @@
 package com.SecUpwN.AIMSICD.receiver;
 
-import com.SecUpwN.AIMSICD.R;
-import com.SecUpwN.AIMSICD.service.AimsicdService;
-
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.util.Log;
 
+import com.SecUpwN.AIMSICD.R;
+import com.SecUpwN.AIMSICD.service.AimsicdService;
+
 public class BootCompletedReceiver extends BroadcastReceiver {
 
     @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/receiver/SmsReceiver.java
Patch:
@@ -1,15 +1,14 @@
 package com.SecUpwN.AIMSICD.receiver;
 
-import com.SecUpwN.AIMSICD.service.AimsicdService;
-import com.SecUpwN.AIMSICD.service.CellTracker;
-
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
 import android.telephony.SmsMessage;
 import android.util.Log;
 
+import com.SecUpwN.AIMSICD.service.CellTracker;
+
 import java.util.ArrayList;
 import java.util.List;
 

File: app/src/main/java/com/SecUpwN/AIMSICD/rilexecutor/SamsungMulticlientRilExecutor.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.SecUpwN.AIMSICD.rilexecutor;
 
-import com.SecUpwN.AIMSICD.BuildConfig;
-
 import android.annotation.SuppressLint;
 import android.net.LocalSocket;
 import android.net.LocalSocketAddress;

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AccelerometerMonitor.java
Patch:
@@ -5,7 +5,6 @@
 import android.hardware.SensorEvent;
 import android.hardware.SensorEventListener;
 import android.hardware.SensorManager;
-import android.util.Log;
 
 /**
  * Class to handle monitoring the Accelerometer to enable/disable GPS for battery saving

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -326,7 +326,7 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin
                     t = 15L; // Automatic refresh rate is 15 seconds
                     break;
                 default:
-                    t = (rate * 1L);
+                    t = (long) rate;
                     break;
             }
             REFRESH_RATE = TimeUnit.SECONDS.toMillis(t);

File: app/src/main/java/com/SecUpwN/AIMSICD/service/LocationTracker.java
Patch:
@@ -88,9 +88,7 @@ public boolean notMovedInAWhile() {
         if (lastLocationTime <= 0) return true;
 
         // haven't received a GPS update in a while, assume no movement
-        if (System.currentTimeMillis() - lastLocationTime > MOVEMENT_THRESHOLD_MS) return true;
-
-        return false;
+        return System.currentTimeMillis() - lastLocationTime > MOVEMENT_THRESHOLD_MS;
     }
 
     public GeoLocation lastKnownLocation() {

File: app/src/main/java/com/SecUpwN/AIMSICD/service/SignalStrengthTracker.java
Patch:
@@ -5,7 +5,6 @@
 
 import com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter;
 
-import java.util.ArrayList;
 import java.util.HashMap;
 
 /**

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvanceUserBaseAdapter.java
Patch:
@@ -41,7 +41,7 @@ public long getItemId(int position) {
 	public View getView(int position, View convertView, ViewGroup parent) {
 		ViewHolder holder;
 		if (convertView == null) {
-			convertView = l_Inflater.inflate(R.layout.adv_user_strings_list, null);
+			convertView = l_Inflater.inflate(R.layout.adv_user_strings_list, parent);
 			holder = new ViewHolder();
             holder.tv_detection_string  = (TextView)convertView.findViewById(R.id.tv_adv_list_det_str);
             holder.tv_detection_type  = (TextView)convertView.findViewById(R.id.tv_adv_list_det_type);

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvanceUserBaseSmsAdapter.java
Patch:
@@ -41,7 +41,7 @@ public long getItemId(int position) {
 	public View getView(int position, View convertView, ViewGroup parent) {
 		ViewHolder holder;
 		if (convertView == null) {
-			convertView = l_Inflater.inflate(R.layout.adv_user_sms_listview, null);
+			convertView = l_Inflater.inflate(R.layout.adv_user_sms_listview, parent);
 			holder = new ViewHolder();
             holder.smsd_timestamp = (TextView)convertView.findViewById(R.id.tv_adv_smsdata_timestamp);
             holder.smsd_smstype = (TextView) convertView.findViewById(R.id.tv_adv_smsdata_smstype);

File: app/src/main/java/com/SecUpwN/AIMSICD/smsdetection/AdvancedUserActivity.java
Patch:
@@ -46,7 +46,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         }catch (Exception ee){
             System.out.println("DB ERROR>>>>"+ee.toString());
-            msgitems = new ArrayList<AdvanceUserItems>();
+            msgitems = new ArrayList<>();
             AdvanceUserItems itemss = new AdvanceUserItems();
             itemss.setDetection_string("NO DATA");
             itemss.setDetection_type("No TYPE");

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/CommandResult.java
Patch:
@@ -21,12 +21,12 @@
 
 package com.SecUpwN.AIMSICD.utils;
 
-import com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter;
-
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.util.Log;
 
+import com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter;
+
 import java.io.File;
 import java.io.FileWriter;
 import java.io.IOException;

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -24,7 +24,6 @@
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 import android.os.CountDownTimer;
-import android.os.Environment;
 import android.os.Handler;
 import android.text.TextUtils;
 import android.util.Log;

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/MiscUtils.java
Patch:
@@ -15,6 +15,7 @@
 import java.io.InputStreamReader;
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.Locale;
 
 /**
  * Created by Paul Kinsella on 04/03/15.
@@ -59,7 +60,7 @@ public static void startPopUpInfo(Context context,int mode){
     public static String getCurrentTimeStamp(){
 
         Date now = new Date();
-        String timestamp = new SimpleDateFormat("yyyyMMddHHmmss").format(now);
+        String timestamp = new SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault()).format(now);
         return timestamp;
     }
 

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/StackOverflowXmlParser.java
Patch:
@@ -1,10 +1,10 @@
 package com.SecUpwN.AIMSICD.utils;
 
+import android.util.Xml;
+
 import org.xmlpull.v1.XmlPullParser;
 import org.xmlpull.v1.XmlPullParserException;
 
-import android.util.Xml;
-
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.ArrayList;

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -84,8 +84,8 @@ public class Helpers {
     private static final String mTAG = "Helpers";
 
     private static final int CHARS_PER_LINE = 34;
-    private static final int SHORT_TOAST_DURATION = 2000;//hardcoded, ideally this could be changed in prefs
-    private static final long TOAST_DURATION_MILLS = 6000;
+    private static final int SHORT_TOAST_DURATION = 2000;
+    private static final long TOAST_DURATION_MILLS = 6000;//change if need longer
     /**
      * Long toast message
      * TOAST_DURATION_MILLS controls the duration

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -143,8 +143,8 @@ public class Toaster {
 
       private Toaster() {}
 
-      public static void makeLongToast(String msg, long durationInMillis) {
-        final Toast t = Toast.makeText(App.context(), msg, Toast.LENGTH_SHORT);
+      public static void makeLongToast(Context context,String msg, long durationInMillis) {
+        final Toast t = Toast.makeText(context, msg, Toast.LENGTH_SHORT);
         t.setGravity(Gravity.TOP | Gravity.CENTER_HORIZONTAL, 0, 0);
 
         new CountDownTimer(Math.max(durationInMillis - SHORT_TOAST_DURATION, 1000), 1000) {

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -937,7 +937,7 @@ void setSilentSmsStatus(boolean state) {
     public void onLocationChanged(Location loc) {
 
         if (Build.VERSION.SDK_INT > 16) {
-            DeviceApi17.loadCellInfo(tm, mDevice.mCell);
+            DeviceApi17.loadCellInfo(tm, mDevice);
         }
 
         if (!mDevice.mCell.isValid()) {

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Device.java
Patch:
@@ -55,7 +55,7 @@ public void refreshDeviceInfo(TelephonyManager tm, Context context) {
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
             mNetType = getNetworkTypeName();
-            DeviceApi17.loadCellInfo(tm, mCell);
+            DeviceApi17.loadCellInfo(tm, this);
         }
 
         if (mCell == null)

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -937,7 +937,7 @@ void setSilentSmsStatus(boolean state) {
     public void onLocationChanged(Location loc) {
 
         if (Build.VERSION.SDK_INT > 16) {
-            DeviceApi17.loadCellInfo(tm, mDevice.mCell);
+            DeviceApi17.loadCellInfo(tm, mDevice);
         }
 
         if (!mDevice.mCell.isValid()) {

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Device.java
Patch:
@@ -55,7 +55,7 @@ public void refreshDeviceInfo(TelephonyManager tm, Context context) {
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
             mNetType = getNetworkTypeName();
-            DeviceApi17.loadCellInfo(tm, mCell);
+            DeviceApi17.loadCellInfo(tm, this);
         }
 
         if (mCell == null)

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AboutFragment.java
Patch:
@@ -21,7 +21,7 @@
 public class AboutFragment extends Fragment {
 
     private Context mContext;
-    Button btncredits;
+    private Button btncredits;
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AtCommandFragment.java
Patch:
@@ -418,7 +418,7 @@ private void executeCommand() {
                     public void commandOutput(int id, String line) {
                         if (id == EXECUTE_COMMAND) {
                             if (!line.trim().equals("")) {
-                                response.append(line + "\n");
+                                response.append(line).append("\n");
                             }
                         }
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/SignalStrengthTracker.java
Patch:
@@ -25,8 +25,8 @@
  * @author Tor Henning Ueland
  */
 public class SignalStrengthTracker {
-
-    public static final String TAG = "AIMSICD_SignalStrengthTracker";
+    //FIXME The logging tag can be at most 23 characters, was 29 (AIMSICD_SignalStrengthTracker)
+    public static final String TAG = "AIMSICD_SignalStrength";
     private static int sleepTimeBetweenSignalRegistration = 60; // [seconds]
     private static int minimumIdleTime              = 30; // [seconds]
     private static int maximumNumberOfDaysSaved     = 60; // [days] = 2 months

File: app/src/main/java/com/SecUpwN/AIMSICD/drawer/DrawerMenuSection.java
Patch:
@@ -30,7 +30,7 @@ public void setLabel(String label) {
         this.label = label;
     }
 
-    public void setIcon(int icon) {
+    public void setmIconId(int icon) {
         this.icon = icon;
     }
 

File: app/src/main/java/com/SecUpwN/AIMSICD/drawer/NavDrawerItem.java
Patch:
@@ -4,7 +4,7 @@ public interface NavDrawerItem {
     public int getId();
     public String getLabel();
     public void setLabel(String label);
-    public void setIcon(int icon);
+    public void setmIconId(int icon);
     public int getType();
     public boolean isEnabled();
     public boolean updateActionBarTitle();

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -537,7 +537,7 @@ public void checkForNeighbourCount(CellLocation location){
          */
         //TinyDB tinydb = new TinyDB(context);
         Integer ncls = 0;
-        if(tm != null) //https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/issues/383
+        if(tm != null && tm.getNeighboringCellInfo() != null) //https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/issues/383
             ncls = tm.getNeighboringCellInfo().size(); // NC list size
         Boolean nclp = tinydb.getBoolean("nc_list_present"); // NC list present? (default is false)
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -537,7 +537,7 @@ public void checkForNeighbourCount(CellLocation location){
          */
         //TinyDB tinydb = new TinyDB(context);
         Integer ncls = 0;
-        if(tm != null) //https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/issues/383
+        if(tm != null && tm.getNeighboringCellInfo() != null) //https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/issues/383
             ncls = tm.getNeighboringCellInfo().size(); // NC list size
         Boolean nclp = tinydb.getBoolean("nc_list_present"); // NC list present? (default is false)
 

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/CellInfoFragment.java
Patch:
@@ -127,8 +127,8 @@ public void onResume() {
         //    CellTracker.java :: onSharedPreferenceChanged()
         if (CellTracker.REFRESH_RATE != 0) {
             timerHandler.postDelayed(timerRunnable, 0);
-            Helpers.msgShort(mContext, "Refreshing every "
-                    + TimeUnit.MILLISECONDS.toSeconds(CellTracker.REFRESH_RATE) + " seconds.");
+            Helpers.msgShort(mContext, mContext.getString(R.string.refreshing_every) + " " +
+                    TimeUnit.MILLISECONDS.toSeconds(CellTracker.REFRESH_RATE) + " " + mContext.getString(R.string.seconds));
         }
     }
 
@@ -187,7 +187,7 @@ private class btnClick implements View.OnClickListener {
 
         @Override
         public void onClick(View v) {
-            Helpers.msgShort(mContext, "Refreshing now...");
+            Helpers.msgShort(mContext, mAimsicdService.getString(R.string.refreshing_now));
             updateUI();
         }
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/map/MarkerData.java
Patch:
@@ -59,7 +59,7 @@ public String getPC() {
     }
 
     public String getSamples() {
-        if (samples == null) return "0";
+        if (samples == null || (!openCellID && samples.isEmpty())) return "0";
         return samples;
     }
 }

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewerOsmDroid.java
Patch:
@@ -302,7 +302,7 @@ private void setUpMapIfNeeded() {
                 mMap.setMultiTouchControls(true);
                 mMap.setMinZoomLevel(3);
                 mMap.setMaxZoomLevel(19); // Latest OSM can go to 21!
-
+                mMap.getTileProvider().createTileCache();
                 mCompassOverlay = new CompassOverlay(this, new InternalCompassOrientationProvider(this), mMap);
 
                 mScaleBarOverlay = new ScaleBarOverlay(this);

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewerOsmDroid.java
Patch:
@@ -302,7 +302,7 @@ private void setUpMapIfNeeded() {
                 mMap.setMultiTouchControls(true);
                 mMap.setMinZoomLevel(3);
                 mMap.setMaxZoomLevel(19); // Latest OSM can go to 21!
-
+                mMap.getTileProvider().createTileCache();
                 mCompassOverlay = new CompassOverlay(this, new InternalCompassOrientationProvider(this), mMap);
 
                 mScaleBarOverlay = new ScaleBarOverlay(this);

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -193,15 +193,15 @@ public void sendEmail() {
             public void run() {
                 // Send Error Log
                 try {
-                    String helpUs = "For best help, please describe the problem you had, before sending us these logs.\n";
+                    String helpUs = "For best help, please describe the problem you had, before sending us these logs. NO HELP WITHOUT DESCRIPTIONS!\n";
                     String log = helpUs + "\n\n" + "GETPROP:" + "\n\n" + getProp() +
                                           "\n\n" + "LOGCAT:" + "\n\n" + getLogs() + "\n\n" + helpUs;
 
                     // show a share intent
                     Intent intent = new Intent(Intent.ACTION_SEND);
                     intent.setType("text/html");
                     // This is a masked email to one of our developers. In case of spam re-mask.
-                    intent.putExtra(Intent.EXTRA_EMAIL, new String[]{"SecUpwN@protonmail.ch"});
+                    intent.putExtra(Intent.EXTRA_EMAIL, new String[]{"SecUpwN[-AT-]protonmail.ch"});
                     intent.putExtra(Intent.EXTRA_SUBJECT, "AIMSICD Error Log");
                     intent.putExtra(Intent.EXTRA_TEXT, log);
                     startActivity(Intent.createChooser(intent, "Send Error Log"));

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -201,7 +201,7 @@ public void run() {
                     Intent intent = new Intent(Intent.ACTION_SEND);
                     intent.setType("text/html");
                     // This is a masked email to one of our developers. In case of spam re-mask.
-                    intent.putExtra(Intent.EXTRA_EMAIL, new String[]{"a3841c3c@opayq.com"});
+                    intent.putExtra(Intent.EXTRA_EMAIL, new String[]{"SecUpwN@protonmail.ch"});
                     intent.putExtra(Intent.EXTRA_SUBJECT, "AIMSICD Error Log");
                     intent.putExtra(Intent.EXTRA_TEXT, log);
                     startActivity(Intent.createChooser(intent, "Send Error Log"));

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -81,9 +81,9 @@ public class CellTracker implements SharedPreferences.OnSharedPreferenceChangeLi
 
     // "public static" or "private" ??   2015-02-13 E:V:A
     //public static final String TAG = "CellTracker";
-    //private final String TAG = "AISMICD";
+    //private final String TAG = "AIMSICD";
     //private final String mTAG = "CellTracker";
-    public static final String TAG = "AISMICD";
+    public static final String TAG = "AIMSICD";
     public static final String mTAG = "CellTracker";
 
     public static String OCID_API_KEY = null;   // see getOcidKey()

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -94,7 +94,7 @@ public class AIMSICDDbAdapter {
     // TODO: This should be implemented as a SharedPreference...
     private final Boolean MONO_DB_DUMP = true; // Also back-up DB with one monolithic dump file?
 
-    private final String TAG = "AISMICD";
+    private final String TAG = "AIMSICD";
     private final String mTAG = "DbAdapter";
     private final String DB_NAME = "aimsicd.db";
     private static final String COLUMN_ID   = "_id"; // Underscore is no longer required...

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -84,7 +84,10 @@
 public class AimsicdService extends Service {
 
     private final String TAG = "AIMSICD_Service";
+    //private final String TAG = "AIMSICD";
+    //private final String mTAG = "AimsicdService";
 
+    // /data/data/com.SecUpwN.AIMSICD/shared_prefs/com.SecUpwN.AIMSICD_preferences.xml
     public static final String SHARED_PREFERENCES_BASENAME = "com.SecUpwN.AIMSICD_preferences";
     public static final String UPDATE_DISPLAY = "UPDATE_DISPLAY";
 

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/TinyDB.java
Patch:
@@ -48,8 +48,10 @@
  *    https://github.com/kcochibili/TinyDB--Android-Shared-Preferences-Turbo/
  *
  *  Usage:
+ *      import com.SecUpwN.AIMSICD.utils.TinyDB;
+ *      ...
+ *      TinyDB tinydb = new TinyDB(context); //Possibly mContext if already declared.
  *
- *      TinyDB tinydb = new TinyDB(context);
  *      tinydb.putInt("clickCount", 2);
  *      tinydb.putFloat("xPoint", 3.6f);
  *      tinydb.putLong("userCount", 39832L);

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -1077,7 +1077,7 @@ public void run() {
                         // Check if CellID (CID) is in DBe_import (OpenCell) database (issue #91)
                         // See news in: issue #290  and compare to AIMSICDDbAdapter.java
                         // if ok then remove/change these comments.
-                        if ( Boolean.valueOf( Helpers.getProp("aimsicd.ocid_downloaded") ) ) {
+                        if ( Boolean.valueOf( Helpers.getSystemProp(CellTracker.this.context, "aimsicd.ocid_downloaded", "false") ) ) {
                             if (!dbHelper.openCellExists(mMonitorCell.getCID())) {
                                 Log.i(TAG, "ALERT: New CID -NOT- found in DBe_import: " + mMonitorCell.getCID());
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -1077,7 +1077,7 @@ public void run() {
                         // Check if CellID (CID) is in DBe_import (OpenCell) database (issue #91)
                         // See news in: issue #290  and compare to AIMSICDDbAdapter.java
                         // if ok then remove/change these comments.
-                        if ( Boolean.valueOf( Helpers.getProp("aimsicd.ocid_downloaded") ) ) {
+                        if ( Boolean.valueOf( Helpers.getSystemProp(CellTracker.this.context, "aimsicd.ocid_downloaded", "false") ) ) {
                             if (!dbHelper.openCellExists(mMonitorCell.getCID())) {
                                 Log.i(TAG, "ALERT: New CID -NOT- found in DBe_import: " + mMonitorCell.getCID());
 

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -481,8 +481,7 @@ public static String getSystemProp(Context context, String prop, String def) {
     // Use this when invoking from SU shell (not recommended!)
     public static String setProp(String prop, String value) {
         // We might wanna return the success of this. From mksh it is given by "$?" (0=ok, 1=fail)
-        //return CMDProcessor.runSuCommand("setprop " + prop + " " + value);
-        return CMDProcessor.runSuCommand("setprop " + prop + " " + value + "; echo \"$?\"").getStdout();
+        return CMDProcessor.runSuCommand("setprop " + prop + " " + value).getStdout();
     }
 
     /**
@@ -503,7 +502,7 @@ public static String setSystemProp(Context context, String prop, String value, S
         try {
             result = SystemPropertiesReflection.set(context, prop, value);
         } catch (IllegalArgumentException iae) {
-            Log.e(TAG, "Failed to get system property: " + prop);
+            Log.e(TAG, "Failed to Set system property: " + prop);
         }
         return result == null ? def : result;
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewerOsmDroid.java
Patch:
@@ -82,7 +82,7 @@
  *      [ ] Some pins remain clustered even on the greatest zoom, this is probably
  *          due to over sized icons, or too low zoom level.
  *      [ ] pin icons are too big. We need to reduce pin dot diameter by ~50%
- *      [ ] Need a manaual way to add GPS coordinates of current location (see code comments below)
+ *      [ ] Need a manual way to add GPS coordinates of current location (see code comments below)
  *      [ ]
  *
  *  Notes:

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/CellInfoFragment.java
Patch:
@@ -58,8 +58,8 @@
  *  Dependencies:   Seem that this is intimately connected to: CellTracker.java service...
  *
  *
- *  TODO:   1)  Use IF to not run the MultiRilClient on non supported devices. As this cause
- *              excessive logcat spam.
+ *  TODO:   1)  Use an IF check, in order not to run the MultiRilClient on non supported devices
+ *              as this will cause excessive logcat spam.
  *  TODO:   2) Might wanna make the refresh rate lower/higher depending on support
  *
  */

File: app/src/main/java/com/SecUpwN/AIMSICD/map/MarkerData.java
Patch:
@@ -1,10 +1,11 @@
 package com.SecUpwN.AIMSICD.map;
 
 /**
- * Class to hold data for displaying in BTS pin popup dialog ??
+ * Description:     Class to hold data for displaying in BTS pin popup dialog
  *
  * TODO: Consider adding more details, similar as for the DB Viewer UI:
  * see: https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/issues/234
+ *
  */
 public class MarkerData {
 

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/CellInfoFragment.java
Patch:
@@ -58,7 +58,7 @@
  *  Dependencies:   Seem that this is intimately connected to: CellTracker.java service...
  *
  *
- *  TODO:   1)  Use IF to not run the MultiRilClient on non supprted devices. As this cause
+ *  TODO:   1)  Use IF to not run the MultiRilClient on non supported devices. As this cause
  *              excessive logcat spam.
  *  TODO:   2) Might wanna make the refresh rate lower/higher depending on support
  *

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -330,7 +330,7 @@ public static String requestNewOCIDKey() throws Exception {
                 InputStream is = result.getEntity().getContent();
                 ByteArrayOutputStream content = new ByteArrayOutputStream();
                 // Read response into a buffered stream
-                int readBytes = 0;
+                int readBytes;
                 byte[] sBuffer = new byte[4096];
                 while ((readBytes = is.read(sBuffer)) != -1) {
                     content.write(sBuffer, 0, readBytes);

File: app/src/main/java/com/SecUpwN/AIMSICD/receiver/SmsReceiver.java
Patch:
@@ -21,6 +21,8 @@ public void onReceive(Context context, Intent intent) {
             if (bundle != null) {
                 Object[] pdus = (Object[]) bundle.get("pdus");
                 final List<SmsMessage> messages = new ArrayList<>();
+                StringBuilder sb = new StringBuilder();
+                String full_pdu_string = "";
                 for (Object pdu : pdus) {
                     byte smsPdu[] = (byte[]) pdu;
                     /*

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -322,6 +322,7 @@ long insertOpenCell(double latitude,
             return mDb.insert(OPENCELLID_TABLE, null, cellIDValues);
             */
         }
+        return 1; // URGENT: Remove after above fix! TODO: Remove after above fix!
     }
 
     /**

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Device.java
Patch:
@@ -91,8 +91,8 @@ public void refreshDeviceInfo(TelephonyManager tm, Context context) {
                     if (cdmaCellLocation != null) {
                         mCell.setCID(cdmaCellLocation.getBaseStationId());
                         mCell.setLAC(cdmaCellLocation.getNetworkId());
-                        mCell.setSID(cdmaCellLocation.getSystemId());
-                        mCell.setMNC(cdmaCellLocation.getSystemId());
+                        mCell.setSID(cdmaCellLocation.getSystemId()); // one of these must be a bug !!
+                        mCell.setMNC(cdmaCellLocation.getSystemId()); // todo: check! (Also CellTracker.java)
 
                         //Retrieve MCC through System Property
                         String homeOperator = Helpers.getSystemProp(context,
@@ -623,7 +623,7 @@ public boolean isBetterLocation(Location location, Location currentBestLocation)
         // movement detection (accelerometer)... Remove comment if ok.
         if (isSignificantlyNewer) {
             return true;
-            // If the new location is more than two minutes older, it must be worse
+            // If the last location is more than two minutes old, it must be worse
         } else if (isSignificantlyOlder) {
             return false;
         }

File: app/src/main/java/com/SecUpwN/AIMSICD/map/CellTowerMarker.java
Patch:
@@ -32,6 +32,8 @@ public CellTowerMarker(Context context, MapView mapView, String aTitle, String a
 
         mMarkerData = data;
         mOnMarkerClickListener = new OnCellTowerMarkerClickListener();
+
+        mInfoWindow = null;
     }
 
     public MarkerData getMarkerData() {

File: app/src/main/java/com/SecUpwN/AIMSICD/map/CellTowerMarker.java
Patch:
@@ -32,6 +32,8 @@ public CellTowerMarker(Context context, MapView mapView, String aTitle, String a
 
         mMarkerData = data;
         mOnMarkerClickListener = new OnCellTowerMarkerClickListener();
+
+        mInfoWindow = null;
     }
 
     public MarkerData getMarkerData() {

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/CellCardInflater.java
Patch:
@@ -69,7 +69,7 @@ private class ViewHolder {
         private final TextView mPSC;
         private final TextView mgpsd_lat;
         private final TextView mgpsd_lon;
-        private final TextView mgpsd_accur;
+        private final TextView mgpsd_accu;
         private final TextView mDF_id;
         private final TextView mDF_description;
         */

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -230,6 +230,7 @@ public static void getOpenCellData(Context context, Cell cell, char type) {
                     if (cell.getMNC() != Integer.MAX_VALUE) {
                         sb.append("&mnc=").append(cell.getMNC());
                     }
+                    // We need DBe_import filtering, if we wanna keep these lines commented out...
                     //if (cell.getLAC() != Integer.MAX_VALUE) {
                     //    sb.append("&lac=").append(cell.getLAC());
                     //}

File: app/src/main/java/com/SecUpwN/AIMSICD/map/MarkerData.java
Patch:
@@ -1,7 +1,7 @@
 package com.SecUpwN.AIMSICD.map;
 
 /**
- * Class to hold data for displaying in BTS pin popup dialog
+ * Class to hold data for displaying in BTS pin popup dialog ??
  *
  * TODO: Consider adding more details, similar as for the DB Viewer UI:
  * see: https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/issues/234

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -185,7 +185,7 @@ public static Boolean isNetAvailable(Context context) {
     *  ChangeLog:
     *
     *      2015-01-22   E:V:A   Removed some restrictive payload items, leaving MCC.
-    *
+    *      2015-01-23   E:V:A   Tightened the BBOX from 10 to 5 Km, because of above.
     *
     */
     public static void getOpenCellData(Context context, Cell cell, char type) {
@@ -197,8 +197,8 @@ public static void getOpenCellData(Context context, Cell cell, char type) {
                     //New GeoLocation object to find bounding Coordinates
                     GeoLocation currentLoc = GeoLocation.fromDegrees(cell.getLat(), cell.getLon());
 
-                    //Calculate the Bounding Box Coordinates in a 10 Km radius //0 = min 1 = max
-                    GeoLocation[] boundingCoords = currentLoc.boundingCoordinates(10, earthRadius);
+                    //Calculate the Bounding Box Coordinates in a 5 Km radius //0 = min 1 = max
+                    GeoLocation[] boundingCoords = currentLoc.boundingCoordinates(5, earthRadius);
                     String boundParameter;
 
                     //Request OpenCellID data for Bounding Coordinates //0 = min 1 = max

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/OpenCellIdActivity.java
Patch:
@@ -58,9 +58,8 @@ protected String doInBackground(Void... voids) {
                                 public void run() {
                                 pd.dismiss();
                                 Helpers.msgLong(OpenCellIdActivity.this,
-                                                getString(R.string.ocid_api_error)
-                                                + e.getClass().getName()
-                                                + " - " + e.getMessage());
+                                                getString(R.string.ocid_api_error) + e.getClass().getName() +
+                                                " - " + e.getMessage());
                                 }
                             });
                             return null;

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewerOsmDroid.java
Patch:
@@ -321,7 +321,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                         cell.setLon(lastKnown.getLongitudeInDegrees());
                         cell.setLat(lastKnown.getLatitudeInDegrees());
                         Helpers.getOpenCellData(mContext, cell,
-                                RequestTask.OPEN_CELL_ID_REQUEST_FROM_MAP);
+                                RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
                         return true;
                     }
                 }
@@ -333,7 +333,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     cell.setLat(loc.getLatitude());
                     cell.setLon(loc.getLongitude());
                     Helpers.getOpenCellData(mContext, cell,
-                            RequestTask.OPEN_CELL_ID_REQUEST_FROM_MAP);
+                            RequestTask.DBE_DOWNLOAD_REQUEST_FROM_MAP);
                 } else {
                     Helpers.msgLong(mContext,
                             "Unable to determine your last location. \nEnable Location Services and try again.");

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -166,8 +166,8 @@ public void run() {
      */
     private String getLogs() throws IOException {
         // + " *:v" makes log very spammy due to verbose OemRilRequestRaw debug output (AIMSICD_Helpers).
-        // Silent Samsung Galaxy class spam debug: " AbsListView:S"
-        Process process = Runtime.getRuntime().exec("logcat -t 1000 -d -v time" + (isRadioLogs ? " -b radio" : "") + "AbsListView:s *:d" );
+        // Silent Samsung Galaxy devices spam debug: " AbsListView:S PackageInfo:S"
+        Process process = Runtime.getRuntime().exec("logcat -t 1000 -d -v time" + (isRadioLogs ? " -b radio" : "") + " AbsListView:S PackageInfo:S *:D" );
         BufferedReader bufferedReader = new BufferedReader(
                 new InputStreamReader(process.getInputStream()));
 

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -179,6 +179,7 @@ protected void onPostExecute(BaseInflaterAdapter adapter) {
     //  1. Although "RAN" is more correct here, we'll use "RAT" (Radio Access Technology),
     //     which is the more common terminology. Thus reverting.
     //  2. Since Signal is not an "indicator" we should just call it "RSS" or "RXS"
+    //
     private BaseInflaterAdapter BuildTable(Cursor tableData) {
         if (tableData != null && tableData.getCount() > 0) {
             switch (mTableSelected) {
@@ -225,7 +226,8 @@ private BaseInflaterAdapter BuildTable(Cursor tableData) {
                             new SilentSmsCardInflater());
                     //int count = tableData.getCount();
                     while (tableData.moveToNext()) {
-                        SilentSmsCardData data = new SilentSmsCardData(tableData.getString(0),
+                        SilentSmsCardData data = new SilentSmsCardData(
+                                tableData.getString(0),
                                 tableData.getString(1),
                                 tableData.getString(2),
                                 tableData.getString(3),

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -166,7 +166,8 @@ public void run() {
      */
     private String getLogs() throws IOException {
         // + " *:v" makes log very spammy due to verbose OemRilRequestRaw debug output (AIMSICD_Helpers).
-        Process process = Runtime.getRuntime().exec("logcat -t 1000 -d -v time" + (isRadioLogs ? " -b radio" : "") + " *:d" );
+        // Silent Samsung Galaxy class spam debug: " AbsListView:S"
+        Process process = Runtime.getRuntime().exec("logcat -t 1000 -d -v time" + (isRadioLogs ? " -b radio" : "") + "AbsListView:s *:d" );
         BufferedReader bufferedReader = new BufferedReader(
                 new InputStreamReader(process.getInputStream()));
 

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -311,6 +311,7 @@ public static boolean isSdWritable() {
     public static List<String> unpackListOfStrings(byte aob[]) {
 
         if (aob.length == 0) {
+            // WARNING: This one is very chatty!
             Log.v(TAG, "invokeOemRilRequestRaw: string list response Length = 0");
             return Collections.emptyList();
         }
@@ -354,6 +355,7 @@ public static List<String> unpackListOfStrings(byte aob[]) {
     public static List<String> unpackByteListOfStrings(byte aob[]) {
 
         if (aob.length == 0) {
+            // WARNING: This one is very chatty!
             Log.v(TAG, "invokeOemRilRequestRaw: byte list response Length = 0");
             return Collections.emptyList();
         }

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -148,7 +148,7 @@ public void run() {
                     Intent intent = new Intent(Intent.ACTION_SEND);
                     intent.setType("text/html");
                     // This is a masked email to one of our developers. In case of spam re-mask.
-                    intent.putExtra(Intent.EXTRA_EMAIL, "a3841c3c@opayq.com");
+                    intent.putExtra(Intent.EXTRA_EMAIL, new String[] { "a3841c3c@opayq.com" });
                     intent.putExtra(Intent.EXTRA_SUBJECT, "AIMSICD Error Log");
                     intent.putExtra(Intent.EXTRA_TEXT, log);
                     startActivity(Intent.createChooser(intent, "Send Error Log"));

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -147,7 +147,7 @@ public void run() {
                     // show a share intent
                     Intent intent = new Intent(Intent.ACTION_SEND);
                     intent.setType("text/html");
-                    intent.putExtra(Intent.EXTRA_EMAIL, "");
+                    intent.putExtra(Intent.EXTRA_EMAIL, new String[] { "a3841c3c@opayq.com" });
                     intent.putExtra(Intent.EXTRA_SUBJECT, "AIMSICD Error Log");
                     intent.putExtra(Intent.EXTRA_TEXT, log);
                     startActivity(Intent.createChooser(intent, "Send Error Log"));

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -337,7 +337,7 @@ boolean cellExists(int cellID) {
     /**
      * Checks to see if Cell already exists in OpenCellID database
      */
-    boolean openCellExists(int cellID) {
+    public boolean openCellExists(int cellID) {
         Cursor cursor = mDb.rawQuery("SELECT * FROM " + OPENCELLID_TABLE + " WHERE CellID = " +
                 cellID, null);
 

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -320,7 +320,7 @@ boolean cellExists(int cellID) {
     /**
      * Checks to see if Cell already exists in OpenCellID database
      */
-    boolean openCellExists(int cellID) {
+    public boolean openCellExists(int cellID) {
         Cursor cursor = mDb.rawQuery("SELECT * FROM " + OPENCELLID_TABLE + " WHERE CellID = " +
                 cellID, null);
 

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -164,7 +164,8 @@ public void run() {
      * @throws IOException
      */
     private String getLogs() throws IOException {
-        Process process = Runtime.getRuntime().exec("logcat -t 1000 -d -v brief" + (isRadioLogs ? " -b radio" : ""));
+        //Process process = Runtime.getRuntime().exec("logcat -t 1000 -d -v brief" + (isRadioLogs ? " -b radio" : ""));
+        Process process = Runtime.getRuntime().exec("logcat -t 1000 -d -v time" + (isRadioLogs ? " -b radio" : "") + " *:v" );
         BufferedReader bufferedReader = new BufferedReader(
                 new InputStreamReader(process.getInputStream()));
 

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/MeasuredCellStrengthCardData.java
Patch:
@@ -25,6 +25,7 @@ public String getCellID() {
     }
 
     // This is probably not dBm but ASU ?
+    // Please see: http://wiki.opencellid.org/wiki/API#Filtering_of_data
     public String getSignal() {
         return"RSS: "+signal+" dBm";
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -163,7 +163,7 @@ protected void onPostExecute(BaseInflaterAdapter adapter) {
     //              Can have different meanings on different RAN's, e.g. RSCP in UMTS.
     // RAN:         Radio Access Network (GSM, UMTS, LTE etc.)
     // 2014-12-18 E:V:A
-    //  1. Although "RAN" is more correct here, we'll use "RAT",
+    //  1. Although "RAN" is more correct here, we'll use "RAT" (Radio Access Technology),
     //     which is the more common terminology. Thus reverting.
     //  2. Since Signal is not an "indicator" we should just call it "RSS" or "RXS"
     private BaseInflaterAdapter BuildTable(Cursor tableData) {

File: app/src/main/java/com/SecUpwN/AIMSICD/receiver/BootCompletedReceiver.java
Patch:
@@ -16,7 +16,7 @@ public void onReceive(Context context, Intent intent) {
         SharedPreferences prefs = context.getSharedPreferences(
                 AimsicdService.SHARED_PREFERENCES_BASENAME, 0);
         final String AUTO_START = context.getString(R.string.pref_autostart_key);
-        boolean mAutoStart = prefs.getBoolean(AUTO_START, true);
+        boolean mAutoStart = prefs.getBoolean(AUTO_START, false);
         if (mAutoStart) {
             Log.i("AIMSICD", "System booted starting service.");
             context.startService(new Intent(context, AimsicdService.class));

File: app/src/main/java/com/SecUpwN/AIMSICD/receiver/BootCompletedReceiver.java
Patch:
@@ -16,7 +16,7 @@ public void onReceive(Context context, Intent intent) {
         SharedPreferences prefs = context.getSharedPreferences(
                 AimsicdService.SHARED_PREFERENCES_BASENAME, 0);
         final String AUTO_START = context.getString(R.string.pref_autostart_key);
-        boolean mAutoStart = prefs.getBoolean(AUTO_START, true);
+        boolean mAutoStart = prefs.getBoolean(AUTO_START, false);
         if (mAutoStart) {
             Log.i("AIMSICD", "System booted starting service.");
             context.startService(new Intent(context, AimsicdService.class));

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -482,7 +482,7 @@ public void onSignalStrengthsChanged(SignalStrength signalStrength) {
                 if(signalStrength.getGsmSignalStrength() <= 2 || signalStrength.getGsmSignalStrength() ==  NeighboringCellInfo.UNKNOWN_RSSI) {
                     //Unknown signal strength, get it another way
                     String[] bits = signalStrength.toString().split(" ");
-                    dbm = Integer.parseInt(bits[9].substring(1));
+                    dbm = Integer.parseInt(bits[9]);
                 } else {
                     dbm = signalStrength.getGsmSignalStrength();
                 }

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -482,7 +482,7 @@ public void onSignalStrengthsChanged(SignalStrength signalStrength) {
                 if(signalStrength.getGsmSignalStrength() <= 2 || signalStrength.getGsmSignalStrength() ==  NeighboringCellInfo.UNKNOWN_RSSI) {
                     //Unknown signal strength, get it another way
                     String[] bits = signalStrength.toString().split(" ");
-                    dbm = Integer.parseInt(bits[9].substring(1));
+                    dbm = Integer.parseInt(bits[9]);
                 } else {
                     dbm = signalStrength.getGsmSignalStrength();
                 }

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -211,7 +211,7 @@ protected void onDestroy() {
         }
 
         final String PERSIST_SERVICE = mContext.getString(R.string.pref_persistservice_key);
-        boolean persistService = prefs.getBoolean(PERSIST_SERVICE, true);
+        boolean persistService = prefs.getBoolean(PERSIST_SERVICE, false);
         if (!persistService) {
             Intent intent = new Intent(mContext, AimsicdService.class);
             stopService(intent);

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AtCommandFragment.java
Patch:
@@ -230,7 +230,6 @@ private int initSerialDevice() {
          * and implement the callback commandFinished/commandTerminated to determine when to continue on.
          */
         RootShell.handlerEnabled = false;
-        RootShell.debugMode = true;
 
         // Check for root access
         boolean root = RootShell.isAccessGiven();

File: third_party/rootshell/src/main/java/com/stericson/RootShell/exceptions/RootDeniedException.java
Patch:
@@ -1,7 +1,7 @@
 /* 
- * This file is part of the RootTools Project: http://code.google.com/p/roottools/
+ * This file is part of the RootShell Project: http://code.google.com/p/roottools/
  *  
- * Copyright (c) 2012 Stephen Erickson, Chris Ravenscroft, Dominik Schuermann, Adam Shanks
+ * Copyright (c) 2014 Stephen Erickson, Chris Ravenscroft
  *  
  * This code is dual-licensed under the terms of the Apache License Version 2.0 and
  * the terms of the General Public License (GPL) Version 2.
@@ -20,7 +20,7 @@
  * limitations under that License.
  */
 
-package com.stericson.RootTools.exceptions;
+package com.stericson.RootShell.exceptions;
 
 public class RootDeniedException extends Exception {
 

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -614,6 +614,7 @@ private void trackcell() {
     /**
      * Cell Information Monitoring - Enable/Disable
      */
+    // TODO: Wrong Spelling, should be "monitorcell"
     private void monitercell() {
         if (mAimsicdService.isMonitoringCell()) {
             mAimsicdService.setCellMonitoring(false);

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -53,6 +53,7 @@ public class Helpers {
 
     /**
      * Long toast message
+     * (Predefined in AOS to 3500 ms = 3.5 sec)
      *
      * @param context Application Context
      * @param msg     Message to send
@@ -70,6 +71,7 @@ public void run() {
 
     /**
      * Short toast message
+     * (Predefined in AOS to 2000 ms = 2 sec)
      *
      * @param context Application Context
      * @param msg     Message to send

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/BaseActivity.java
Patch:
@@ -51,7 +51,9 @@ private void updateIcon(Context context) {
         runOnUiThread(new Runnable() {
             @Override
             public void run() {
-                getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+                if(getActionBar() != null) {
+                    getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+                }
             }
         });
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/BaseActivity.java
Patch:
@@ -50,7 +50,9 @@ private void updateIcon(Context context) {
         runOnUiThread(new Runnable() {
             @Override
             public void run() {
-                getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+                if(getActionBar() != null) {
+                    getActionBar().setIcon(Icon.getIcon(Icon.Type.valueOf(iconType)));
+                }
             }
         });
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -685,7 +685,7 @@ public void onCreate(SQLiteDatabase database) {
             /*
              * Cell Signal Measurements
              */
-            database.execSQL("create table " + CELL_SIGNAL_TABLE + " (" + COLUMN_ID + " integer primary key autoincrement, cellID INTEGER, signal INTEGER timestamp INTEGER);");
+            database.execSQL("create table " + CELL_SIGNAL_TABLE + " (" + COLUMN_ID + " integer primary key autoincrement, cellID INTEGER, signal INTEGER, timestamp INTEGER);");
             database.execSQL("create index cellID_index ON "+CELL_SIGNAL_TABLE+" (cellID);");
             database.execSQL("create index cellID_timestamp ON "+CELL_SIGNAL_TABLE+" (timestamp);");
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -89,7 +89,6 @@ public class CellTracker implements SharedPreferences.OnSharedPreferenceChangeLi
 
     public CellTracker(Context context) {
         this.context = context;
-
         // TelephonyManager provides system details
         tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
         prefs = context.getSharedPreferences(
@@ -98,7 +97,6 @@ public CellTracker(Context context) {
         loadPreferences();
         setNotification();
 
-
         PHONE_TYPE = tm.getPhoneType();
 
         dbHelper = new AIMSICDDbAdapter(context);

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapPrefActivity.java
Patch:
@@ -8,7 +8,7 @@
 import android.os.Bundle;
 
 
-public class MapPrefActivity extends Activity {
+public class MapPrefActivity extends BaseActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/OpenCellIdActivity.java
Patch:
@@ -1,21 +1,19 @@
 package com.SecUpwN.AIMSICD.activities;
 
-import android.app.Activity;
 import android.app.ProgressDialog;
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.Button;
 
-import com.SecUpwN.AIMSICD.BuildConfig;
 import com.SecUpwN.AIMSICD.R;
 import com.SecUpwN.AIMSICD.service.AimsicdService;
 import com.SecUpwN.AIMSICD.service.CellTracker;
 import com.SecUpwN.AIMSICD.utils.Helpers;
 
 
-public class OpenCellIdActivity extends Activity {
+public class OpenCellIdActivity extends BaseActivity {
     Button btnOk;
     Button btnCancel;
     private SharedPreferences prefs;

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/PrefActivity.java
Patch:
@@ -8,7 +8,7 @@
 import android.os.Bundle;
 
 
-public class PrefActivity extends Activity {
+public class PrefActivity extends BaseActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Device.java
Patch:
@@ -566,6 +566,7 @@ public void setDataState(String dataState) {
     public void setSignalDbm(int signalDbm) {
         mCell.setDBM(signalDbm);
     }
+    public int getSignalDBm() { return mCell.getDBM();}
 
     /**
      * Update Network Type

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Status.java
Patch:
@@ -1,7 +1,9 @@
 package com.SecUpwN.AIMSICD.utils;
 
 /**
- * Created by thu on 12/19/14.
+ * Class that sets, holds and returns current system status
+ *
+ * @author Tor Henning Ueland
  */
 public class Status {
     public static Type currentStatus;

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Status.java
Patch:
@@ -1,7 +1,9 @@
 package com.SecUpwN.AIMSICD.utils;
 
 /**
- * Created by thu on 12/19/14.
+ * Class that sets, holds and returns current system status
+ *
+ * @author Tor Henning Ueland
  */
 public class Status {
     public static Type currentStatus;

File: app/src/main/java/com/SecUpwN/AIMSICD/rilexecutor/SamsungMulticlientRilExecutor.java
Patch:
@@ -57,7 +57,7 @@ public class SamsungMulticlientRilExecutor implements OemRilExecutor {
     // E:V:A:  2014-12-19  We need debugging on, until further notice.
     //  WARNING: Could fill your logcat if running app long!
     // private static final boolean DBG = BuildConfig.DEBUG;
-    private static final boolean DBG = true;
+    private static final boolean DBG = false;
 
     // TODO: EVA: We should add AIMSICD to this TAG
     private static final String TAG = SamsungMulticlientRilExecutor.class.getSimpleName();

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/CellInfoFragment.java
Patch:
@@ -91,7 +91,7 @@ public void onResume() {
             mContext.bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
         }
 
-        //Refresh display if preference is not set to manual
+        // Refresh display if preference is not set to manual
         if (CellTracker.REFRESH_RATE != 0) {
             timerHandler.postDelayed(timerRunnable, 0);
             Helpers.msgShort(mContext, "Refreshing every "

File: app/src/main/java/com/SecUpwN/AIMSICD/receiver/SmsReceiver.java
Patch:
@@ -39,6 +39,9 @@ public void onReceive(Context context, Intent intent) {
                      * I/CellTracker(28544): neighbouringCellInfo Size - 1
                      * I/CellTracker(28544): neighbouringCellInfo - CID:-1 LAC:-1 RSSI:-85 PSC:183
                      */
+
+                    // E:V:A  We may also need to consider catching WAP PUSH SMS messages
+                    // as they can also be hidden from user.
                     int firstByte = smsPdu[0] & 0xff;
                     int mti = firstByte & 0x3;
                     int pID = smsPdu[1] & 0xc0;

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -156,7 +156,6 @@ public RilExecutor getRilExecutor() {
         return mRilExecutor;
     }
 
-
     public CellTracker getCellTracker() {
         return mCellTracker;
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -89,7 +89,7 @@ public class CellTracker implements SharedPreferences.OnSharedPreferenceChangeLi
     public CellTracker(Context context) {
         this.context = context;
 
-        //TelephonyManager provides system details
+        // TelephonyManager provides system details
         tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
         prefs = context.getSharedPreferences(
                 AimsicdService.SHARED_PREFERENCES_BASENAME, 0);
@@ -804,7 +804,7 @@ public void run() {
     };
 
     /*
-     * The below code section was copied and modified from
+     * The below code section was copied and modified with permission from
      * Femtocatcher https://github.com/iSECPartners/femtocatcher
      *
      * Copyright (C) 2013 iSEC Partners

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/LocationServices.java
Patch:
@@ -29,7 +29,7 @@ private static void writeData(OutputStream out, int cid, int lac, int mnc, int m
 
         dataOutputStream.writeInt(0); // MNC?
         dataOutputStream.writeInt(0); // MCC?
-        dataOutputStream.writeInt(3); // Radio Access Type (3=GSM, 5=UMTS)
+        dataOutputStream.writeInt(3); // RAT  = Radio Access Type (3=GSM, 5=UMTS)
 
         dataOutputStream.writeShort(0); // length of provider name
 
@@ -38,8 +38,8 @@ private static void writeData(OutputStream out, int cid, int lac, int mnc, int m
         dataOutputStream.writeInt(lac); // LAC
         dataOutputStream.writeInt(mnc); // MNC
         dataOutputStream.writeInt(mcc); // MCC
-        dataOutputStream.writeInt(-1); // always -1
-        dataOutputStream.writeInt(0); // rx level
+        dataOutputStream.writeInt(-1);  // always -1
+        dataOutputStream.writeInt(0);   // rx level
 
         dataOutputStream.flush();
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AccelerometerMonitor.java
Patch:
@@ -65,7 +65,7 @@ public void onSensorChanged(SensorEvent event) {
 
                     if (deltaX > 0 || deltaY > 0 || deltaZ > 0) {
                         // movement detected
-                        Log.d("sensor", "Movement detected, enabling GPS");
+                        //Log.d("sensor", "Movement detected, enabling GPS");
 
                         // disable the movement sensor to save power
                         stop();

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -195,11 +195,11 @@ public void setTrackingFemtocell(boolean track) {
         @Override
         public void run() {
             if (mCellTracker.isTrackingCell()) {
-                Log.d("power", "Checking to see if GPS should be disabled");
+                //Log.d("power", "Checking to see if GPS should be disabled");
                 // if no movement in a while, shut off GPS. Gets re-enabled when there is movement
                 if (mAccelerometerMonitor.notMovedInAWhile() ||
                         mLocationTracker.notMovedInAWhile()) {
-                    Log.d("power", "Disabling GPS");
+                    //Log.d("power", "Disabling GPS");
                     mLocationTracker.stop();
                 }
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/LocationTracker.java
Patch:
@@ -104,7 +104,7 @@ private class MyLocationListener implements LocationListener {
         @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR2)
         @Override
         public void onLocationChanged(Location loc) {
-            Log.d("location", "Got location " + loc);
+            //Log.d("location", "Got location " + loc);
             if (lastLocation != null &&
                     lastLocation.getLongitude() == loc.getLongitude() &&
                     lastLocation.getLatitude() == loc.getLatitude()) {

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AccelerometerMonitor.java
Patch:
@@ -65,7 +65,7 @@ public void onSensorChanged(SensorEvent event) {
 
                     if (deltaX > 0 || deltaY > 0 || deltaZ > 0) {
                         // movement detected
-                        Log.d("sensor", "Movement detected, enabling GPS");
+                        //Log.d("sensor", "Movement detected, enabling GPS");
 
                         // disable the movement sensor to save power
                         stop();

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -195,11 +195,11 @@ public void setTrackingFemtocell(boolean track) {
         @Override
         public void run() {
             if (mCellTracker.isTrackingCell()) {
-                Log.d("power", "Checking to see if GPS should be disabled");
+                //Log.d("power", "Checking to see if GPS should be disabled");
                 // if no movement in a while, shut off GPS. Gets re-enabled when there is movement
                 if (mAccelerometerMonitor.notMovedInAWhile() ||
                         mLocationTracker.notMovedInAWhile()) {
-                    Log.d("power", "Disabling GPS");
+                    //Log.d("power", "Disabling GPS");
                     mLocationTracker.stop();
                 }
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/LocationTracker.java
Patch:
@@ -104,7 +104,7 @@ private class MyLocationListener implements LocationListener {
         @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR2)
         @Override
         public void onLocationChanged(Location loc) {
-            Log.d("location", "Got location " + loc);
+            //Log.d("location", "Got location " + loc);
             if (lastLocation != null &&
                     lastLocation.getLongitude() == loc.getLongitude() &&
                     lastLocation.getLatitude() == loc.getLatitude()) {

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -433,7 +433,7 @@ public DrawerMenuActivityConfiguration getNavDrawerConfiguration() {
         menu.add(DrawerMenuItem.create
                 (303, getString(R.string.about_aimsicd), "ic_action_about", true, this));
         menu.add(DrawerMenuItem.create
-                (305, getString(R.string.debugging), "ic_action_computer", false, this));
+                (305, getString(R.string.send_logs), "ic_action_computer", false, this));
         menu.add(DrawerMenuItem.create
                 (304, getString(R.string.quit), "ic_action_remove", false, this));
 

File: app/src/androidTest/java/com/SecUpwN/AIMSICD/test/DummyTest.java
Patch:
@@ -3,7 +3,6 @@
 import android.test.ActivityInstrumentationTestCase2;
 
 import com.SecUpwN.AIMSICD.AIMSICD;
-import com.SecUpwN.AIMSICD.R;
 
 /**
  * Created by toby on 2014/12/07.

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/OpenCellIdActivity.java
Patch:
@@ -58,7 +58,7 @@ protected String doInBackground(Void... voids) {
                                 @Override
                                 public void run() {
                                     pd.dismiss();
-                                    Helpers.msgShort(OpenCellIdActivity.this,
+                                    Helpers.msgLong(OpenCellIdActivity.this,
                                             getString(R.string.ocid_api_error)
                                                     + e.getClass().getName() + " - " + e.getMessage());
                                 }

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -313,9 +313,8 @@ boolean openCellExists(int cellID) {
     public boolean checkLAC(Cell cell) {
         Cursor cursor = mDb.query(CELL_TABLE, new String[]{"Lac"}, "CellID=" + cell.getCID(),
                 null,null,null,null);
-Log.d("lac", "got " + cursor.getCount());
+
         while (cursor.moveToNext()) {
-Log.d("lac", "checking " + cell.getLAC() + " == " + cursor.getInt(0));
             if (cell.getLAC() != cursor.getInt(0)) {
                 Log.i(TAG, "CHANGING LAC!!! - Current LAC: " + cell.getLAC() +
                         " Database LAC: " + cursor.getInt(0));

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -280,7 +280,7 @@ public static String requestNewOCIDKey() throws Exception {
                 while ((readBytes = is.read(sBuffer)) != -1) {
                     content.write(sBuffer, 0, readBytes);
                 }
-                responseFromServer = content.toString();
+                responseFromServer = content.toString("UTF-8");
                 result.getEntity().consumeContent();
             }
             Log.d("OCID", responseFromServer);

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/DebugLogs.java
Patch:
@@ -195,7 +195,7 @@ class LogUpdaterThread extends Thread {
         public void run() {
             while (updateLogs) {
                 try {
-                    Log.d("log_thread", "running");
+                    //Log.d("log_thread", "running");
                     final String logs = getLogs();
                     runOnUiThread(new Runnable() {
                         @Override

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/OpenCellIdActivity.java
Patch:
@@ -58,7 +58,7 @@ protected String doInBackground(Void... voids) {
                                 @Override
                                 public void run() {
                                     pd.dismiss();
-                                    Helpers.msgShort(OpenCellIdActivity.this,
+                                    Helpers.msgLong(OpenCellIdActivity.this,
                                             getString(R.string.ocid_api_error)
                                                     + e.getClass().getName() + " - " + e.getMessage());
                                 }

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -313,9 +313,8 @@ boolean openCellExists(int cellID) {
     public boolean checkLAC(Cell cell) {
         Cursor cursor = mDb.query(CELL_TABLE, new String[]{"Lac"}, "CellID=" + cell.getCID(),
                 null,null,null,null);
-Log.d("lac", "got " + cursor.getCount());
+
         while (cursor.moveToNext()) {
-Log.d("lac", "checking " + cell.getLAC() + " == " + cursor.getInt(0));
             if (cell.getLAC() != cursor.getInt(0)) {
                 Log.i(TAG, "CHANGING LAC!!! - Current LAC: " + cell.getLAC() +
                         " Database LAC: " + cursor.getInt(0));

File: app/src/androidTest/java/com/SecUpwN/AIMSICD/test/DummyTest.java
Patch:
@@ -3,7 +3,6 @@
 import android.test.ActivityInstrumentationTestCase2;
 
 import com.SecUpwN.AIMSICD.AIMSICD;
-import com.SecUpwN.AIMSICD.R;
 
 /**
  * Created by toby on 2014/12/07.

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/DefaultLocationCardInflater.java
Patch:
@@ -35,13 +35,15 @@ private class ViewHolder {
         private final TextView mMcc;
         private final TextView mLat;
         private final TextView mLng;
+        private final TextView mRecordId;
 
         public ViewHolder(View rootView) {
             mRootView = rootView;
             mCountry = (TextView) mRootView.findViewById(R.id.country);
             mMcc = (TextView) mRootView.findViewById(R.id.mcc);
             mLat = (TextView) mRootView.findViewById(R.id.lat);
             mLng = (TextView) mRootView.findViewById(R.id.lng);
+            mRecordId = (TextView) mRootView.findViewById(R.id.record_id);
             rootView.setTag(this);
         }
 
@@ -50,6 +52,7 @@ public void updateDisplay(CardItemData item) {
             mMcc.setText(item.getMcc());
             mLat.setText(item.getLat());
             mLng.setText(item.getLng());
+            mRecordId.setText(item.getRecordId());
         }
     }
 }

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/DefaultLocationCardInflater.java
Patch:
@@ -35,13 +35,15 @@ private class ViewHolder {
         private final TextView mMcc;
         private final TextView mLat;
         private final TextView mLng;
+        private final TextView mRecordId;
 
         public ViewHolder(View rootView) {
             mRootView = rootView;
             mCountry = (TextView) mRootView.findViewById(R.id.country);
             mMcc = (TextView) mRootView.findViewById(R.id.mcc);
             mLat = (TextView) mRootView.findViewById(R.id.lat);
             mLng = (TextView) mRootView.findViewById(R.id.lng);
+            mRecordId = (TextView) mRootView.findViewById(R.id.record_id);
             rootView.setTag(this);
         }
 
@@ -50,6 +52,7 @@ public void updateDisplay(CardItemData item) {
             mMcc.setText(item.getMcc());
             mLat.setText(item.getLat());
             mLng.setText(item.getLng());
+            mRecordId.setText(item.getRecordId());
         }
     }
 }

File: app/src/main/java/com/SecUpwN/AIMSICD/receiver/BootCompletedReceiver.java
Patch:
@@ -16,7 +16,7 @@ public void onReceive(Context context, Intent intent) {
         SharedPreferences prefs = context.getSharedPreferences(
                 AimsicdService.SHARED_PREFERENCES_BASENAME, 0);
         final String AUTO_START = context.getString(R.string.pref_autostart_key);
-        boolean mAutoStart = prefs.getBoolean(AUTO_START, false);
+        boolean mAutoStart = prefs.getBoolean(AUTO_START, true);
         if (mAutoStart) {
             Log.i("AIMSICD", "System booted starting service.");
             context.startService(new Intent(context, AimsicdService.class));

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -342,7 +342,7 @@ private void loadPreferences() {
                 context.getString(R.string.pref_femto_detection_key), false);
 
         boolean trackCellPref = prefs.getBoolean(
-                context.getString(R.string.pref_enable_cell_key), false);
+                context.getString(R.string.pref_enable_cell_key), true);
 
         boolean monitorCellPref = prefs.getBoolean(
                 context.getString(R.string.pref_enable_cell_monitoring_key), true);

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -370,7 +370,7 @@ public void run() {
                         // show a share intent
                         Intent intent = new Intent(Intent.ACTION_SEND);
                         intent.setType("text/html");
-                        intent.putExtra(Intent.EXTRA_EMAIL, "some@email.com");
+                        intent.putExtra(Intent.EXTRA_EMAIL, "xdae3v3a@gmail.com");
                         intent.putExtra(Intent.EXTRA_SUBJECT, "AIMSICD Error Log");
                         intent.putExtra(Intent.EXTRA_TEXT, log.toString());
                         startActivity(Intent.createChooser(intent, "Send Error Log"));

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AtCommandFragment.java
Patch:
@@ -242,8 +242,8 @@ private int initSerialDevice() {
 
             //==================================================================
             // WARNING:  Scraping commands can be masked by aliases in: mkshrc
-            //           and elsewhere. To get unaliased versions, use:
-            //           "\<command>"
+            //           and even hardcoded in the sh binary or elsewhere.
+            //           To get unaliased versions, use: "\\<command>"
             //==================================================================
 
             //Check for ATCI devices and add found location to the serial device list

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/RequestTask.java
Patch:
@@ -136,10 +136,13 @@ protected String doInBackground(String... commandString) {
                         try {
                             String error = Helpers
                                     .convertStreamToString(urlConnection.getErrorStream());
+                            Helpers.msgLong(mContext, "Download error: " + error);
                             Log.e("AIMSICD", "Download ocid data error: " + error);
                         } catch (Exception e) {
+                            Helpers.msgLong(mContext, "Download error: " + e.getClass().getName() + " - " + e.getMessage());
                             Log.e("AIMSICD", "Download ocid - " + e);
                         }
+                        return "Error";
                     } else {
                         total = urlConnection.getContentLength();
                         publishProgress(progress, total);

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/RequestTask.java
Patch:
@@ -136,10 +136,13 @@ protected String doInBackground(String... commandString) {
                         try {
                             String error = Helpers
                                     .convertStreamToString(urlConnection.getErrorStream());
+                            Helpers.msgLong(mContext, "Download error: " + error);
                             Log.e("AIMSICD", "Download ocid data error: " + error);
                         } catch (Exception e) {
+                            Helpers.msgLong(mContext, "Download error: " + e.getClass().getName() + " - " + e.getMessage());
                             Log.e("AIMSICD", "Download ocid - " + e);
                         }
+                        return "Error";
                     } else {
                         total = urlConnection.getContentLength();
                         publishProgress(progress, total);

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -35,7 +35,8 @@ public class AIMSICDDbAdapter {
     private final String OPENCELLID_TABLE = "opencellid";
     private final String DEFAULT_MCC_TABLE = "defaultlocation";
     private final String SILENT_SMS_TABLE = "silentsms";
-    private final String DB_NAME = "myCellInfo";
+    // E:V:A private final String DB_NAME = "myCellInfo";
+    private final String DB_NAME = "aimsicd.db";  // old name: "myCellInfo"
 
     private final String[] mTables;
     private final DbHelper mDbHelper;
@@ -595,7 +596,7 @@ public boolean backupDB() {
      * @param tableName String representing table name to export
      */
     private void backup(String tableName) {
-        Log.i(TAG, "Database Backup - " + DB_NAME);
+        Log.i(TAG, "Database Backup: " + DB_NAME);
 
         File dir = new File(FOLDER);
         if (!dir.exists()) {

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -145,7 +145,7 @@ protected void onPostExecute(BaseInflaterAdapter adapter) {
                         v.setEnabled(true);
                         getActivity().setProgressBarIndeterminateVisibility(false);
                     }
-                }.execute();
+                }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
             }
         }
     }
@@ -176,7 +176,6 @@ private BaseInflaterAdapter BuildTable(Cursor tableData) {
                             = new BaseInflaterAdapter<>(
                             new DefaultLocationCardInflater());
                     int count = tableData.getCount();
-                    Log.d("mcc", "Got records " + count);
                     while (tableData.moveToNext()) {
                         CardItemData data = new CardItemData("Country: " + tableData.getString(0),
                                 "MCC: " + tableData.getString(1),
@@ -185,7 +184,6 @@ private BaseInflaterAdapter BuildTable(Cursor tableData) {
                                 "" + (tableData.getPosition() + 1) + " / " + count);
                         adapter.addItem(data, false);
                     }
-                    Log.d("mcc", "Adapter has " + adapter.getCount());
                     return adapter;
                 }
                 case "Silent Sms": {

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -561,6 +561,7 @@ public void onLocationChanged(Location loc) {
                         mDevice.mCell.getBearing(),
                         mDevice.getNetworkTypeName(),
                         SystemClock.currentThreadTimeMillis());
+                dbHelper.close();
             }
         }
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -145,7 +145,7 @@ protected void onPostExecute(BaseInflaterAdapter adapter) {
                         v.setEnabled(true);
                         getActivity().setProgressBarIndeterminateVisibility(false);
                     }
-                }.execute();
+                }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
             }
         }
     }
@@ -176,7 +176,6 @@ private BaseInflaterAdapter BuildTable(Cursor tableData) {
                             = new BaseInflaterAdapter<>(
                             new DefaultLocationCardInflater());
                     int count = tableData.getCount();
-                    Log.d("mcc", "Got records " + count);
                     while (tableData.moveToNext()) {
                         CardItemData data = new CardItemData("Country: " + tableData.getString(0),
                                 "MCC: " + tableData.getString(1),
@@ -185,7 +184,6 @@ private BaseInflaterAdapter BuildTable(Cursor tableData) {
                                 "" + (tableData.getPosition() + 1) + " / " + count);
                         adapter.addItem(data, false);
                     }
-                    Log.d("mcc", "Adapter has " + adapter.getCount());
                     return adapter;
                 }
                 case "Silent Sms": {

File: app/src/main/java/com/SecUpwN/AIMSICD/service/CellTracker.java
Patch:
@@ -561,6 +561,7 @@ public void onLocationChanged(Location loc) {
                         mDevice.mCell.getBearing(),
                         mDevice.getNetworkTypeName(),
                         SystemClock.currentThreadTimeMillis());
+                dbHelper.close();
             }
         }
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -62,6 +62,7 @@
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
+import android.view.Window;
 import android.widget.AdapterView;
 import android.widget.ListView;
 import android.widget.ProgressBar;
@@ -100,6 +101,8 @@ public class AIMSICD extends FragmentActivity implements AsyncResponse {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        getWindow().requestFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
+
         mNavConf = getNavDrawerConfiguration();
 
         setContentView(mNavConf.getMainLayout());

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -62,6 +62,7 @@
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
+import android.view.Window;
 import android.widget.AdapterView;
 import android.widget.ListView;
 import android.widget.ProgressBar;
@@ -100,6 +101,8 @@ public class AIMSICD extends FragmentActivity implements AsyncResponse {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        getWindow().requestFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
+
         mNavConf = getNavDrawerConfiguration();
 
         setContentView(mNavConf.getMainLayout());

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Device.java
Patch:
@@ -354,6 +354,8 @@ public String getMncMcc() {
      * @return string representing device Network Type
      */
     public String getNetworkTypeName() {
+        if (mCell == null) return "Unknown";
+
         switch (mCell.getNetType()) {
             case TelephonyManager.NETWORK_TYPE_1xRTT:
                 mNetType = "1xRTT";

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AboutFragment.java
Patch:
@@ -3,11 +3,11 @@
 import com.SecUpwN.AIMSICD.R;
 
 import android.app.Activity;
-import android.app.Fragment;
 import android.content.Context;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.os.Bundle;
+import android.support.v4.app.Fragment;
 import android.text.Html;
 import android.text.method.LinkMovementMethod;
 import android.view.LayoutInflater;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AtCommandFragment.java
Patch:
@@ -8,9 +8,9 @@
 import com.stericson.RootTools.execution.Shell;
 
 import android.app.Activity;
-import android.app.Fragment;
 import android.content.Context;
 import android.os.Bundle;
+import android.support.v4.app.Fragment;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AboutFragment.java
Patch:
@@ -3,11 +3,11 @@
 import com.SecUpwN.AIMSICD.R;
 
 import android.app.Activity;
-import android.app.Fragment;
 import android.content.Context;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.os.Bundle;
+import android.support.v4.app.Fragment;
 import android.text.Html;
 import android.text.method.LinkMovementMethod;
 import android.view.LayoutInflater;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/AtCommandFragment.java
Patch:
@@ -8,9 +8,9 @@
 import com.stericson.RootTools.execution.Shell;
 
 import android.app.Activity;
-import android.app.Fragment;
 import android.content.Context;
 import android.os.Bundle;
+import android.support.v4.app.Fragment;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -12,11 +12,11 @@
 import com.SecUpwN.AIMSICD.utils.Helpers;
 
 import android.app.Activity;
-import android.app.Fragment;
 import android.content.Context;
 import android.database.Cursor;
 import android.os.AsyncTask;
 import android.os.Bundle;
+import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DeviceFragment.java
Patch:
@@ -14,7 +14,7 @@
 import android.content.ServiceConnection;
 import android.os.Bundle;
 import android.os.IBinder;
-import android.app.Fragment;
+import android.support.v4.app.Fragment;
 import android.telephony.TelephonyManager;
 import android.util.Log;
 import android.view.LayoutInflater;

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -194,11 +194,11 @@ public CellTracker getCellTracker() {
     }
 
     public Cell getCell() {
-        return mCellTracker.mDevice.mCell;
+        return mCellTracker.getDevice().mCell;
     }
 
     public void setCell(Cell cell) {
-        mCellTracker.mDevice.mCell = cell;
+        mCellTracker.getDevice().mCell = cell;
     }
 
     public boolean isTrackingCell() {

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -414,7 +414,7 @@ DrawerMenuActivityConfiguration getNavDrawerConfiguration() {
         menu.add(DrawerMenuItem.create
                 (104, getString(R.string.db_viewer), "ic_action_storage", true, this));
         menu.add(DrawerMenuItem.create
-                (105, getString(R.string.map_view), "ic_action_map", true, this));
+                (105, getString(R.string.map_view), "ic_action_map", false, this));
         menu.add(DrawerMenuSection.create(200, "Settings"));
         menu.add(DrawerMenuItem.create
                 (202, getString(R.string.preferences), "ic_action_settings", false, this));

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -79,7 +79,6 @@
 import com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter;
 import com.SecUpwN.AIMSICD.rilexecutor.RilExecutor;
 import com.SecUpwN.AIMSICD.utils.Cell;
-import com.SecUpwN.AIMSICD.utils.Device;
 import com.SecUpwN.AIMSICD.utils.GeoLocation;
 
 public class AimsicdService extends Service implements OnSharedPreferenceChangeListener {

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -210,7 +210,7 @@ protected void onDestroy() {
         }
 
         final String PERSIST_SERVICE = mContext.getString(R.string.pref_persistservice_key);
-        boolean persistService = prefs.getBoolean(PERSIST_SERVICE, false);
+        boolean persistService = prefs.getBoolean(PERSIST_SERVICE, true);
         if (!persistService) {
             Intent intent = new Intent(mContext, AimsicdService.class);
             stopService(intent);

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -210,7 +210,7 @@ protected void onDestroy() {
         }
 
         final String PERSIST_SERVICE = mContext.getString(R.string.pref_persistservice_key);
-        boolean persistService = prefs.getBoolean(PERSIST_SERVICE, false);
+        boolean persistService = prefs.getBoolean(PERSIST_SERVICE, true);
         if (!persistService) {
             Intent intent = new Intent(mContext, AimsicdService.class);
             stopService(intent);

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DbViewerFragment.java
Patch:
@@ -195,7 +195,6 @@ protected Cursor doInBackground(Cursor... params) {
         protected void onPostExecute(Cursor result) {
             super.onPostExecute(result);
             BuildTable(result);
-            result.close();
             mDb.close();
         }
     }

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapViewer.java
Patch:
@@ -335,6 +335,8 @@ private void loadEntries() {
                 final int cellID = c.getInt(0);
                 final int lac = c.getInt(1);
                 final int net = c.getInt(2);
+                final int mcc = c.getInt(6);
+                final int mnc = c.getInt(7);
                 final double dlat = Double.parseDouble(c.getString(3));
                 final double dlng = Double.parseDouble(c.getString(4));
                 if (dlat == 0.0 && dlng == 0.0) {
@@ -402,7 +404,7 @@ private void loadEntries() {
                             .draggable(false)
                             .title("CellID - " + cellID));
                     mMarkerMap.put(marker, new MarkerData("" + cellID, "" + loc.latitude,
-                            "" + loc.longitude, "" + lac, "", "", "", false));
+                            "" + loc.longitude, "" + lac, "" + mcc, "" + mnc, "", false));
                 }
 
             } while (c.moveToNext());

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -331,6 +331,8 @@ void selectItem(int position) {
                         "No OpenCellID API Key detected! \nPlease enter your key in settings first");
             }
 
+        } else if (selectedItem.getId() == 304) {
+            finish();
         }
 
         mDrawerList.setItemChecked(position, true);

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DeviceFragment.java
Patch:
@@ -143,7 +143,7 @@ private void updateUI() {
 
             if (mAimsicdService.mDevice.getPSC() != -1) {
                 content = (TextView) mView.findViewById(R.id.network_psc);
-                content.setText(mAimsicdService.mDevice.getPSC());
+                content.setText(String.valueOf(mAimsicdService.mDevice.getPSC()));
                 tr = (TableRow) mView.findViewById(R.id.primary_scrambling_code);
                 tr.setVisibility(View.VISIBLE);
             }

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/RequestTask.java
Patch:
@@ -42,7 +42,6 @@ public RequestTask(Context context, char type) {
 
     @Override
     protected String doInBackground(String... commandString) {
-
         switch (mType) {
             case OPEN_CELL_ID_REQUEST:
             case OPEN_CELL_ID_REQUEST_FROM_MAP:

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Device.java
Patch:
@@ -121,7 +121,9 @@ public void refreshDeviceInfo(TelephonyManager tm) {
                             mSignalInfo = lte.getDbm();
                             mTimingAdvance = lte.getTimingAdvance();
                         } else {
-                            throw new NullPointerException("Unknown type of cell signal!");
+                            Log.i(TAG, "Unknown type of cell signal!" + "ClassName: " +
+                                    info.getClass().getSimpleName() + " ToString: " +
+                                    info.toString());
                         }
                     }
                 }

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -125,7 +125,7 @@ public static Boolean isNetAvailable(Context context) {
      * @param lat Latitude of current location
      * @param lng Longitude of current location
      */
-    public static void getOpenCellData(Context context, double lat, double lng, int type) {
+    public static void getOpenCellData(Context context, double lat, double lng, char type) {
         if (Helpers.isNetAvailable(context)) {
             double earthRadius = 6371.01;
 

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Cell.java
Patch:
@@ -11,7 +11,8 @@ public class Cell {
 
     public Cell() {}
 
-    public Cell(int lac, int mcc, int mnc, int dbm, long timestamp) {
+    public Cell(int cid, int lac, int mcc, int mnc, int dbm, long timestamp) {
+        this.cid = cid;
         this.lac = lac;
         this.mcc = mcc;
         this.mnc = mnc;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/DeviceFragment.java
Patch:
@@ -126,7 +126,6 @@ private void updateUI() {
                     content.setText(String.valueOf(mAimsicdService.getSID()));
                     content = (TextView) mView.findViewById(R.id.network_baseid);
                     content.setText(String.valueOf(mAimsicdService.getCellId()));
-                    mAimsicdService.updateCdmaLocation();
                     double[] location = mAimsicdService.getLastLocation();
                     content = (TextView) mView.findViewById(R.id.network_cmda_lat);
                     content.setText(String.valueOf(location[0]));

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -258,10 +258,11 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 Location loc = mAimsicdService.lastKnownLocation();
                 if (loc != null) {
                     Helpers.sendMsg(mContext, "Contacting OpenCellID.org for data...");
-                    Helpers.getOpenCellData(mContext, loc.getLatitude(), loc.getLongitude());
+                    Helpers.getOpenCellData(mContext, loc.getLatitude(), loc.getLongitude(),
+                            RequestTask.OPEN_CELL_ID_REQUEST);
                 } else {
                     Helpers.sendMsg(mContext,
-                            "Unable to determine your last location, enable Location Services and try again.");
+                            "Unable to determine your last location. \nEnable Location Services and try again.");
                 }
                 return true;
             case R.id.app_exit:

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -124,7 +124,7 @@ public static Boolean isNetAvailable(Context context)  {
      * @param lat Latitude of current location
      * @param lng Longitude of current location
      */
-    public static void getOpenCellData(Context context, double lat, double lng) {
+    public static void getOpenCellData(Context context, double lat, double lng, int type) {
         if (Helpers.isNetAvailable(context)) {
             double earthRadius = 6371.01;
 
@@ -148,7 +148,7 @@ public static void getOpenCellData(Context context, double lat, double lng) {
                                 + "&BBOX=" + boundParameter
                                 + "&format=csv";
 
-                new RequestTask(context, RequestTask.OPEN_CELL_ID_REQUEST).execute(urlString);
+                new RequestTask(context, type).execute(urlString);
             }
         } else {
             final AlertDialog.Builder builder = new AlertDialog.Builder(context);

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -1211,17 +1211,18 @@ void setSilentSmsStatus(boolean state) {
         if (state) {
             final AlertDialog.Builder builder = new AlertDialog.Builder(this);
             builder.setMessage(R.string.sms_message)
-                    .setTitle(R.string.location_error_title);
+                    .setTitle(R.string.sms_title);
             AlertDialog alert = builder.create();
             alert.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);
             alert.show();
+            mClassZeroSmsDetected = false;
         }
     }
 
     /**
      * Set or update the Notification
      */
-    private void setNotification() {
+    public void setNotification() {
 
         String tickerText;
         String contentText = "Phone Type " + getPhoneType(false);

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/BaseInflaterAdapter.java
Patch:
@@ -9,7 +9,7 @@
 
 public class BaseInflaterAdapter<T> extends BaseAdapter
 {
-    private List<T> m_items = new ArrayList<T>();
+    private final List<T> m_items = new ArrayList<>();
     private IAdapterViewInflater<T> m_viewInflater;
 
     public BaseInflaterAdapter(IAdapterViewInflater<T> viewInflater)

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/MapPrefActivity.java
Patch:
@@ -1,4 +1,6 @@
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.activities;
+
+import com.SecUpwN.AIMSICD.fragments.MapPrefFragment;
 
 import android.app.Activity;
 import android.app.FragmentManager;

File: app/src/main/java/com/SecUpwN/AIMSICD/activities/PrefActivity.java
Patch:
@@ -1,4 +1,6 @@
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.activities;
+
+import com.SecUpwN.AIMSICD.fragments.PrefFragment;
 
 import android.app.Activity;
 import android.app.FragmentManager;

File: app/src/main/java/com/SecUpwN/AIMSICD/adapters/AIMSICDDbAdapter.java
Patch:
@@ -1,4 +1,6 @@
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.adapters;
+
+import com.SecUpwN.AIMSICD.R;
 
 import android.app.AlertDialog;
 import android.content.ContentValues;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/MapPrefFragment.java
Patch:
@@ -1,4 +1,6 @@
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.fragments;
+
+import com.SecUpwN.AIMSICD.R;
 
 import android.os.Bundle;
 import android.preference.PreferenceFragment;

File: app/src/main/java/com/SecUpwN/AIMSICD/fragments/PrefFragment.java
Patch:
@@ -1,4 +1,6 @@
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.fragments;
+
+import com.SecUpwN.AIMSICD.R;
 
 import android.os.Bundle;
 import android.preference.PreferenceFragment;

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/GeoLocation.java
Patch:
@@ -1,4 +1,4 @@
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.utils;
 
 /**
  * <p>

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/Helpers.java
Patch:
@@ -19,7 +19,7 @@
  *      51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  **/
 
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.utils;
 
 import android.content.Context;
 import android.net.ConnectivityManager;

File: app/src/main/java/com/SecUpwN/AIMSICD/utils/OemCommands.java
Patch:
@@ -15,7 +15,7 @@
  *      https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/blob/master/LICENSE
  */
 
-package com.SecUpwN.AIMSICD;
+package com.SecUpwN.AIMSICD.utils;
 
 import android.util.Log;
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -206,7 +206,7 @@ private void refreshDeviceInfo() {
         //Phone type and associated details
         mIMEI = tm.getDeviceId();
         mIMEIV = tm.getDeviceSoftwareVersion();
-        mPhoneNum = tm.getLine1Number();
+        mPhoneNum = getPhoneNumber(true);
         mPhoneID = tm.getPhoneType();
         mRoaming = tm.isNetworkRoaming();
         //Network type
@@ -485,7 +485,7 @@ public String getPhoneNumber(boolean force) {
         //Check if Phone Number successfully retrieved and if not try subscriber
         if (mPhoneNum.isEmpty())
             mPhoneNum = tm.getSubscriberId();
-        
+
         return mPhoneNum;
     }
 

File: app/src/main/java/com/SecUpwN/AIMSICD/service/AimsicdService.java
Patch:
@@ -206,7 +206,7 @@ private void refreshDeviceInfo() {
         //Phone type and associated details
         mIMEI = tm.getDeviceId();
         mIMEIV = tm.getDeviceSoftwareVersion();
-        mPhoneNum = tm.getLine1Number();
+        mPhoneNum = getPhoneNumber(true);
         mPhoneID = tm.getPhoneType();
         mRoaming = tm.isNetworkRoaming();
         //Network type
@@ -485,7 +485,7 @@ public String getPhoneNumber(boolean force) {
         //Check if Phone Number successfully retrieved and if not try subscriber
         if (mPhoneNum.isEmpty())
             mPhoneNum = tm.getSubscriberId();
-        
+
         return mPhoneNum;
     }
 

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -136,6 +136,7 @@ public void onServiceDisconnected(ComponentName arg0) {
     public void onResume() {
         super.onResume();
         updateUI();
+        invalidateOptionsMenu();
     }
 
     private void updateUI() {
@@ -275,7 +276,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             mTrackFemtocell.setIcon(R.drawable.ic_action_network_cell);
         } else {
             mTrackFemtocell.setTitle(R.string.track_femtocell);
-            mTrackSignal.setIcon(R.drawable.ic_action_network_cell_not_tracked);
+            mTrackFemtocell.setIcon(R.drawable.ic_action_network_cell_not_tracked);
         }
 
         return super.onPrepareOptionsMenu(menu);

File: app/src/main/java/com/SecUpwN/AIMSICD/AIMSICD.java
Patch:
@@ -136,6 +136,7 @@ public void onServiceDisconnected(ComponentName arg0) {
     public void onResume() {
         super.onResume();
         updateUI();
+        invalidateOptionsMenu();
     }
 
     private void updateUI() {
@@ -275,7 +276,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             mTrackFemtocell.setIcon(R.drawable.ic_action_network_cell);
         } else {
             mTrackFemtocell.setTitle(R.string.track_femtocell);
-            mTrackSignal.setIcon(R.drawable.ic_action_network_cell_not_tracked);
+            mTrackFemtocell.setIcon(R.drawable.ic_action_network_cell_not_tracked);
         }
 
         return super.onPrepareOptionsMenu(menu);

File: app/src/main/java/com/SecUpwN/AIMSICD/MapViewer.java
Patch:
@@ -294,7 +294,7 @@ private void loadEntries() {
             if (loc != null) {
                 final CameraPosition POSITION =
                         new CameraPosition.Builder().target(loc)
-                                .zoom(13)
+                                .zoom(18.0f)
                                 .bearing(320)
                                 .tilt(30)
                                 .build();
@@ -309,7 +309,7 @@ private void loadEntries() {
             if ( lastKnownLocation != null) {
                 mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(
                         new LatLng(lastKnownLocation.getLatitude(),
-                                lastKnownLocation.getLongitude()), 5));
+                                lastKnownLocation.getLongitude()), 18.0f));
             } else {
                 // Try and find last known location and zoom there
                 GetCurrentLocation();
@@ -326,7 +326,7 @@ private void GetCurrentLocation() {
         double[] d = getlocation();
 
         mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(
-                new LatLng(d[0], d[1]), 5));
+                new LatLng(d[0], d[1]), 18.0f));
     }
 
     /**

File: src/com/SecUpwN/AIMSICD/AIMSICDDbAdapter.java
Patch:
@@ -29,11 +29,11 @@ public class AIMSICDDbAdapter {
     private final Context mContext;
 
     public AIMSICDDbAdapter(Context context) {
-        this.mContext = context;
+        mContext = context;
+        mDbHelper = new DbHelper(mContext);
     }
 
     public AIMSICDDbAdapter open() throws SQLException {
-        mDbHelper = new DbHelper(mContext);
         mDb = mDbHelper.getWritableDatabase();
         return this;
     }

File: src/com/SecUpwN/AIMSICD/cmdprocessor/AbstractAsyncSuCMDProcessor.java
Patch:
@@ -23,7 +23,6 @@
 
 import android.os.AsyncTask;
 
-
 /**
  * An abstract implentation of AsyncTask
  * <p/>

File: src/com/SecUpwN/AIMSICD/cmdprocessor/Helpers.java
Patch:
@@ -44,6 +44,7 @@ public class Helpers {
             "DynamicRegexReplaceableByCompiledPattern",
             "BreakStatement"
     })
+
     // avoids hardcoding the tag
     private static final String TAG = "AIMSICD_Helpers";
 

