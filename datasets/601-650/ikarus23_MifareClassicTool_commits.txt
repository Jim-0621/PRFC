File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DataConversionTool.java
Patch:
@@ -84,7 +84,7 @@ public void onConvert(View view) {
      * @param hex The hex string to be converted into different formats.
      */
     private void convertData(String hex) {
-        if (hex == null || hex.equals("")) {
+        if (hex == null || hex.isEmpty()) {
             Toast.makeText(this, R.string.info_convert_error,
                     Toast.LENGTH_SHORT).show();
             return;
@@ -126,7 +126,7 @@ private boolean isBin(String bin, Context context) {
      */
     public void onOpenGenericConverter(View view) {
         String hex = mHex.getText().toString();
-        if (!hex.equals("") && !Common.isHex(hex, this)) {
+        if (!hex.isEmpty() && !Common.isHex(hex, this)) {
             return;
         }
         String url = "https://hexconverter.scadacore.com/?HexString=" + hex;
@@ -154,7 +154,7 @@ public void onOpenMultiPurposeConverter(View view) {
      */
     public void onOpenCyberChef(View view) {
         String hex = mHex.getText().toString();
-        if (!hex.equals("") && !Common.isHex(hex, this)) {
+        if (!hex.isEmpty() && !Common.isHex(hex, this)) {
             return;
         }
         String base64 = Base64.encodeToString(hex.getBytes(), Base64.DEFAULT);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -454,7 +454,7 @@ private void saveFile(final String[] data, final String fileName,
             .setPositiveButton(R.string.action_save,
                     (dialog, whichButton) -> {
                         if (input.getText() != null
-                                && !input.getText().toString().equals("")
+                                && !input.getText().toString().isEmpty()
                                 && !input.getText().toString().contains("/")) {
                             File file = new File(path.getPath(),
                                     input.getText().toString());

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/FileChooser.java
Patch:
@@ -358,7 +358,7 @@ private void onNewFile() {
                 .setPositiveButton(R.string.action_ok,
                         (dialog, whichButton) -> {
                             if (input.getText() != null
-                                    && !input.getText().toString().equals("")
+                                    && !input.getText().toString().isEmpty()
                                     && !input.getText().toString().contains("/")) {
                                 File file = new File(mDir.getPath(),
                                         input.getText().toString());

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ImportExportTool.java
Patch:
@@ -599,7 +599,7 @@ private String[] convertDump(String[] source, FileType srcType,
                     return null;
                 }
                 for (int i = 0; i < source.length; i++) {
-                    if (source[i].equals("")) {
+                    if (source[i].isEmpty()) {
                         // Error. Empty line in .eml file.
                         Toast.makeText(this, R.string.info_incomplete_dump,
                                 Toast.LENGTH_LONG).show();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ValueBlockTool.java
Patch:
@@ -90,7 +90,7 @@ public void onDecode(View view) {
     public void onEncode(View view) {
         String vbText = mVBasInt.getText().toString();
         String addrText = mAddr.getText().toString();
-        if (vbText.equals("")){
+        if (vbText.isEmpty()){
             // Error. There is no integer to encode.
             Toast.makeText(this, R.string.info_no_int_to_encode,
                     Toast.LENGTH_LONG).show();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -346,8 +346,8 @@ public void onWriteBlock(View view) {
      * @return True if both values are okay. False otherwise.
      */
     private boolean checkSectorAndBlock(EditText sector, EditText block) {
-        if (sector.getText().toString().equals("")
-                || block.getText().toString().equals("")) {
+        if (sector.getText().toString().isEmpty()
+                || block.getText().toString().isEmpty()) {
             // Error, location not fully set.
             Toast.makeText(this, R.string.info_data_location_not_set,
                     Toast.LENGTH_LONG).show();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -831,7 +831,7 @@ public int setKeyFile(File[] keyFiles, Context context) {
             String[] lines = Common.readFileLineByLine(file, false, context);
             if (lines != null) {
                 for (String line : lines) {
-                    if (!line.equals("") && line.length() == 12
+                    if (!line.isEmpty() && line.length() == 12
                             && line.matches("[0-9A-Fa-f]+")) {
                         try {
                             keys.add(line);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/CloneUidTool.java
Patch:
@@ -382,7 +382,7 @@ private void appendToLog(String text) {
         if (!content.equals("")) {
             newline = "\n";
         }
-        content = content + newline + "\u2022 " + text;
+        content = content + newline + "â€¢ " + text;
         mStatusLogContent.setText(content);
     }
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -739,7 +739,7 @@ private void decodeValueBlocks() {
             }
         }
 
-        if (tmpVBs.size() > 0) {
+        if (!tmpVBs.isEmpty()) {
             String[] vb = tmpVBs.toArray(new String[0]);
             Intent intent = new Intent(this, ValueBlocksToInt.class);
             intent.putExtra(ValueBlocksToInt.EXTRA_VB, vb);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyMapCreator.java
Patch:
@@ -366,7 +366,7 @@ public void onCreateKeyMap(View view) {
                 fileNames.add(c.getText().toString());
             }
         }
-        if (fileNames.size() > 0) {
+        if (!fileNames.isEmpty()) {
             // Check if key files still exists.
             ArrayList<File> keyFiles = new ArrayList<>();
             for (String fileName : fileNames) {
@@ -384,7 +384,7 @@ public void onCreateKeyMap(View view) {
                             + "doesn't exists anymore.");
                 }
             }
-            if (keyFiles.size() > 0) {
+            if (!keyFiles.isEmpty()) {
                 // Save last selected key files as "/"-separated string
                 // (if corresponding setting is active).
                 if (saveLastUsedKeyFiles) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -799,7 +799,7 @@ private void checkDumpAndShowSectorChooserDialog(final String[] dump) {
                             mDumpWithPos.remove(sector);
                         }
                     }
-                    if (mDumpWithPos.size() == 0) {
+                    if (mDumpWithPos.isEmpty()) {
                         // Error. There is nothing to write.
                         Toast.makeText(context, R.string.info_nothing_to_write,
                                 Toast.LENGTH_LONG).show();
@@ -1147,7 +1147,7 @@ private void checkDumpAgainstTag() {
         }
 
         // Show skip/cancel dialog (if needed).
-        if (list.size() != 0) {
+        if (!list.isEmpty()) {
             // If the user skips all sectors/blocks that are not writable,
             // the writeTag() method will be called.
             LinearLayout ll = new LinearLayout(this);
@@ -1222,7 +1222,7 @@ private void writeDump(
             final HashMap<Integer, HashMap<Integer, Integer>> writeOnPos,
             final SparseArray<byte[][]> keyMap) {
         // Check for write data.
-        if (writeOnPos.size() == 0) {
+        if (writeOnPos.isEmpty()) {
             // Nothing to write. Exit.
             Toast.makeText(this, R.string.info_nothing_to_write,
                     Toast.LENGTH_LONG).show();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -425,7 +425,7 @@ private static String[] readLineByLine(BufferedReader reader,
             Log.e(LOG_TAG, "Error while reading from file.", ex);
             ret = null;
         }
-        if (linesArray.size() > 0) {
+        if (!linesArray.isEmpty()) {
             ret = linesArray.toArray(new String[0]);
         } else {
             ret = new String[]{""};

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCDiffUtils.java
Patch:
@@ -70,7 +70,7 @@ public static SparseArray<Integer[][]> diffIndices(
                         diffIndices.add(k);
                     }
                 }
-                if (diffIndices.size() == 0) {
+                if (diffIndices.isEmpty()) {
                     // Block was identical.
                     diffSector[j] = new Integer[0];
                 } else {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -803,7 +803,7 @@ public HashMap<Integer, HashMap<Integer, Integer>> isWritableOnPositions(
                     }
 
                 }
-                if (blockWithWriteInfo.size() > 0) {
+                if (!blockWithWriteInfo.isEmpty()) {
                     ret.put(sector, blockWithWriteInfo);
                 }
             }
@@ -845,7 +845,7 @@ public int setKeyFile(File[] keyFiles, Context context) {
                 }
             }
         }
-        if (keys.size() > 0) {
+        if (!keys.isEmpty()) {
             mHasAllZeroKey = keys.contains("000000000000");
             mKeysWithOrder = new ArrayList<>(keys);
             if (mHasAllZeroKey) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/BasicActivity.java
Patch:
@@ -66,6 +66,7 @@ public void onPause() {
      */
     @Override
     public void onNewIntent(Intent intent) {
+        super.onNewIntent(intent);
         int typeCheck = Common.treatAsNewTag(intent, this);
         if (typeCheck == -1 || typeCheck == -2) {
             // Device or tag does not support MIFARE Classic.

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/CloneUidTool.java
Patch:
@@ -18,6 +18,7 @@
 
 package de.syss.MifareClassicTool.Activities;
 
+import android.annotation.SuppressLint;
 import android.app.AlertDialog;
 import android.content.Intent;
 import android.nfc.tech.MifareClassic;
@@ -101,6 +102,7 @@ protected void onCreate(Bundle savedInstanceState) {
      * Handle new Intent as a new tag Intent and tread them according to
      * the {@link #mStatus}.
      */
+    @SuppressLint("MissingSuperCall")
     @Override
     public void onNewIntent(Intent intent) {
         int typeCheck = Common.treatAsNewTag(intent, this);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -212,6 +212,7 @@ public void onCreate(Bundle savedInstanceState) {
      */
     @Override
     protected void onSaveInstanceState (Bundle outState) {
+        super.onSaveInstanceState(outState);
         outState.putBoolean("dump_changed", mDumpChanged);
         outState.putBoolean("close_after_successful_save", mCloseAfterSuccessfulSave);
         outState.putString("keys_name", mKeysName);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -728,7 +728,8 @@ public void onPause() {
      */
     @Override
     public void onNewIntent(Intent intent) {
-        if(Common.getPendingComponentName() != null) {
+        super.onNewIntent(intent);
+        if (Common.getPendingComponentName() != null) {
             intent.setComponent(Common.getPendingComponentName());
             startActivity(intent);
         } else {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -75,7 +75,7 @@ protected void onCreate(Bundle savedInstanceState) {
      */
     @Override
     public void onNewIntent(Intent intent) {
-        Common.treatAsNewTag(intent, this);
+        super.onNewIntent(intent);
         if (NfcAdapter.ACTION_TECH_DISCOVERED.equals(intent.getAction())) {
             updateTagInfo(Common.getTag());
         }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -127,6 +127,7 @@ public void onReadMore(View view) {
     private void updateTagInfo(Tag tag) {
 
         if (tag != null) {
+            NfcA nfca = NfcA.get(tag);
             // Check for MIFARE Classic support.
             mMFCSupport = Common.checkMifareClassicSupport(tag, this);
 
@@ -157,7 +158,6 @@ private void updateTagInfo(Tag tag) {
                 uid += ", CL3";
             }
             uid += ")";
-            NfcA nfca = NfcA.get(tag);
             // Swap ATQA to match the common order like shown here:
             // http://nfc-tools.org/index.php?title=ISO14443A
             byte[] atqaBytes = nfca.getAtqa();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -235,7 +235,7 @@ public String[] readSector(int sectorIndex, byte[] key,
                     Log.d(LOG_TAG, "(Recoverable) Error while reading block "
                             + i + " from tag.");
                     blocks.add(NO_DATA);
-                    if (!mMFC.isConnected()) {
+                    if (!isConnected()) {
                         throw new TagLostException(
                                 "Tag removed during readSector(...)");
                     }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -673,7 +673,7 @@ public static void enableNfcForegroundDispatch(Activity targetActivity) {
                 mNfcAdapter.enableForegroundDispatch(
                         targetActivity, pendingIntent, null, new String[][]{
                                 new String[]{NfcA.class.getName()}});
-            } catch (IllegalStateException ex) {
+            } catch (IllegalStateException | SecurityException ex) {
                 Log.d(LOG_TAG, "Error: Could not enable the NFC foreground" +
                         "dispatch system. The activity was not in foreground.");
             }
@@ -864,7 +864,6 @@ public static boolean hasMifareClassicSupport() {
             }
         }
 
-
         mHasMifareClassicSupport = 1;
         return true;
     }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -906,7 +906,7 @@ private boolean authenticate(int sectorIndex, byte[] key,
                     // Key B.
                     ret = mMFC.authenticateSectorWithKeyB(sectorIndex, key);
                 }
-            } catch (IOException | ArrayIndexOutOfBoundsException e) {
+            } catch (IOException | ArrayIndexOutOfBoundsException | SecurityException e) {
                 Log.d(LOG_TAG, "Error authenticating with tag.");
                 return false;
             }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/AccessConditionDecoder.java
Patch:
@@ -111,7 +111,7 @@ private void addSectorAC(byte[][] acMatrix, String sectorHeader,
         // Add sector header.
         TextView header = new TextView(this);
         header.setText(Common.colorString(sectorHeader,
-                ContextCompat.getColor(this, R.color.accent)),
+                Common.getThemeAccentColor(this)),
                 BufferType.SPANNABLE);
         TableRow tr = new TableRow(this);
         tr.setLayoutParams(new LayoutParams(

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DiffTool.java
Patch:
@@ -188,7 +188,7 @@ private void runDiff() {
                 TextViewCompat.setTextAppearance(header,
                         android.R.style.TextAppearance_Medium);
                 header.setPadding(0, Common.dpToPx(20), 0, 0);
-                header.setTextColor(Color.WHITE);
+                header.setTextColor(Common.getThemeAccentColor(this));
                 header.setText(getString(R.string.text_sector) + ": " + sector);
                 mDiffContent.addView(header);
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyMapCreator.java
Patch:
@@ -37,13 +37,13 @@
 import android.view.ViewGroup.LayoutParams;
 import android.view.WindowManager;
 import android.widget.Button;
-import android.widget.EditText;
 import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.appcompat.widget.AppCompatCheckBox;
+import androidx.appcompat.widget.AppCompatEditText;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -565,15 +565,15 @@ public void onChangeSectorRange(View view) {
 
         InputFilter[] f = new InputFilter[1];
         f[0] = new InputFilter.LengthFilter(2);
-        final EditText from = new EditText(this);
+        final AppCompatEditText from = new AppCompatEditText(this);
         from.setEllipsize(TruncateAt.END);
         from.setMaxLines(1);
         from.setSingleLine();
         from.setInputType(InputType.TYPE_CLASS_NUMBER);
         from.setMinimumWidth(60);
         from.setFilters(f);
         from.setGravity(Gravity.CENTER_HORIZONTAL);
-        final EditText to = new EditText(this);
+        final AppCompatEditText to = new AppCompatEditText(this);
         to.setEllipsize(TruncateAt.END);
         to.setMaxLines(1);
         to.setSingleLine();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ValueBlocksToInt.java
Patch:
@@ -99,7 +99,7 @@ public void onCreate(Bundle savedInstanceState) {
     private void addPosInfoRow(String value) {
         TextView header = new TextView(this);
         header.setText(Common.colorString(value,
-                ContextCompat.getColor(this, R.color.accent)),
+                Common.getThemeAccentColor(this)),
                 BufferType.SPANNABLE);
         TableRow tr = new TableRow(this);
         tr.setLayoutParams(new LayoutParams(

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -1905,9 +1905,9 @@ public static SpannableString colorString(String data, int color) {
     }
 
     /**
-     * TODO
-     * @param context
-     * @return
+     * Get the current themes accent color.
+     * @param context Context with a theme.
+     * @return The accent color of the theme.
      */
     public static int getThemeAccentColor (final Context context) {
         final TypedValue value = new TypedValue ();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/HexToAscii.java
Patch:
@@ -57,8 +57,7 @@ protected void onCreate(Bundle savedInstanceState) {
                         String sectorNumber = line.split(": ")[1];
                         ascii = TextUtils.concat(ascii, Common.colorString(
                                 getString(R.string.text_sector)
-                                + ": " + sectorNumber,
-                                ContextCompat.getColor(this, R.color.accent)), s);
+                                + ": " + sectorNumber, Common.getThemeAccentColor(this)), s);
                     } else {
                         // Data.
                         String converted = Common.hex2Ascii(line);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -750,7 +750,6 @@ public static int treatAsNewTag(Intent intent, Context context) {
             } else {
                 tag = intent.getParcelableExtra(NfcAdapter.EXTRA_TAG);
             }
-            tag = MCReader.patchTag(tag);
             if (tag == null) {
                 return -3;
             }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -1327,6 +1327,7 @@ public void onFactoryFormat(View view) {
         intent.putExtra(KeyMapCreator.EXTRA_KEYS_DIR,
                 Common.getFile(Common.KEYS_DIR).getAbsolutePath());
         intent.putExtra(KeyMapCreator.EXTRA_SECTOR_CHOOSER, false);
+        intent.putExtra(KeyMapCreator.EXTRA_SECTOR_CHOOSER_FROM, -1);
         intent.putExtra(KeyMapCreator.EXTRA_BUTTON_TEXT,
                 getString(R.string.action_create_key_map_and_factory_format));
         startActivityForResult(intent, CKM_FACTORY_FORMAT);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -652,7 +652,7 @@ public static void enableNfcForegroundDispatch(Activity targetActivity) {
                     targetActivity.getClass()).addFlags(
                             Intent.FLAG_ACTIVITY_SINGLE_TOP);
             PendingIntent pendingIntent = PendingIntent.getActivity(
-                    targetActivity, 0, intent, PendingIntent.FLAG_IMMUTABLE);
+                    targetActivity, 0, intent, PendingIntent.FLAG_MUTABLE);
             try {
                 mNfcAdapter.enableForegroundDispatch(
                         targetActivity, pendingIntent, null, new String[][]{

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyEditor.java
Patch:
@@ -420,8 +420,7 @@ private int checkDumpAndUpdateLines() {
         if (editorText == null) {
             return 1;
         }
-        String[] lines = mKeys.getText().toString()
-                .split(System.getProperty("line.separator"));
+        String[] lines = editorText.split(System.getProperty("line.separator"));
         int ret = Common.isValidKeyFile(lines);
         if (ret != 0) {
             return ret;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -27,7 +27,6 @@
 import android.nfc.tech.MifareClassic;
 import android.nfc.tech.NfcA;
 import android.os.Bundle;
-import android.text.Html;
 import android.text.TextUtils;
 import android.text.method.LinkMovementMethod;
 import android.view.Gravity;
@@ -37,6 +36,7 @@
 import android.widget.Toast;
 
 import androidx.core.content.ContextCompat;
+import androidx.core.text.HtmlCompat;
 import androidx.core.widget.TextViewCompat;
 
 import de.syss.MifareClassicTool.Common;
@@ -102,8 +102,8 @@ public void onReadMore(View view) {
             // Error.
             return;
         }
-        CharSequence styledText = Html.fromHtml(
-                getString(messageID));
+        CharSequence styledText = HtmlCompat.fromHtml(
+                getString(messageID), HtmlCompat.FROM_HTML_MODE_LEGACY);
         AlertDialog ad = new AlertDialog.Builder(this)
         .setTitle(titleID)
         .setMessage(styledText)

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyMapCreator.java
Patch:
@@ -27,6 +27,7 @@
 import android.content.SharedPreferences.Editor;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.text.InputFilter;
 import android.text.InputType;
 import android.text.TextUtils.TruncateAt;
@@ -132,7 +133,7 @@ public class KeyMapCreator extends BasicActivity {
     private Button mCancel;
     private LinearLayout mKeyFilesGroup;
     private TextView mSectorRange;
-    private final Handler mHandler = new Handler();
+    private final Handler mHandler = new Handler(Looper.getMainLooper());
     private int mProgressStatus;
     private ProgressBar mProgressBar;
     private boolean mIsCreatingKeyMap;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ReadTag.java
Patch:
@@ -22,6 +22,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.util.SparseArray;
 import android.widget.Toast;
 
@@ -42,7 +43,7 @@ public class ReadTag extends Activity {
 
     private final static int KEY_MAP_CREATOR = 1;
 
-    private final Handler mHandler = new Handler();
+    private final Handler mHandler = new Handler(Looper.getMainLooper());
     private SparseArray<String[]> mRawDump;
 
     /**

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -26,6 +26,7 @@
 import android.nfc.tech.MifareClassic;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.util.SparseArray;
 import android.view.Gravity;
 import android.view.View;
@@ -1250,7 +1251,7 @@ private void writeDump(
 
         // Start writing in new thread.
         final Activity a = this;
-        final Handler handler = new Handler();
+        final Handler handler = new Handler(Looper.getMainLooper());
         new Thread(() -> {
             // Write dump to tag.
             for (int sector : writeOnPos.keySet()) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -42,6 +42,8 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.core.widget.TextViewCompat;
+
 import java.io.File;
 import java.io.Serializable;
 import java.util.ArrayList;
@@ -1147,7 +1149,7 @@ private void checkDumpAgainstTag() {
             TextView textView = new TextView(this);
             textView.setText(R.string.dialog_write_issues);
             textView.setPadding(0,0,0, Common.dpToPx(5));
-            textView.setTextAppearance(this,
+            TextViewCompat.setTextAppearance(textView,
                     android.R.style.TextAppearance_Medium);
             ListView listView = new ListView(this);
             ll.addView(textView);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/HexToAscii.java
Patch:
@@ -22,6 +22,8 @@
 import android.text.TextUtils;
 import android.widget.TextView;
 
+import androidx.core.content.ContextCompat;
+
 import de.syss.MifareClassicTool.Common;
 import de.syss.MifareClassicTool.R;
 
@@ -59,7 +61,7 @@ protected void onCreate(Bundle savedInstanceState) {
                         ascii = TextUtils.concat(ascii, Common.colorString(
                                 getString(R.string.text_sector)
                                 + ": " + sectorNumber,
-                                getResources().getColor(R.color.blue)), s);
+                                ContextCompat.getColor(this, R.color.blue)), s);
                     } else {
                         // Data.
                         String converted = Common.hex2Ascii(line);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -463,7 +463,7 @@ private void saveFile(final String[] data, final String fileName,
                                 mKeysName = file.getName();
                             }
                         } else {
-                            // Empty name is not allowed.
+                            // Invalid file name.
                             Toast.makeText(context, R.string.info_invalid_file_name,
                                     Toast.LENGTH_LONG).show();
                         }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/FileChooser.java
Patch:
@@ -369,7 +369,7 @@ private void onNewFile() {
                                 setResult(Activity.RESULT_OK, intent);
                                 finish();
                             } else {
-                                // Empty name is not allowed.
+                                // Invalid file name.
                                 Toast.makeText(cont, R.string.info_invalid_file_name,
                                         Toast.LENGTH_LONG).show();
                             }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/CloneUidTool.java
Patch:
@@ -59,7 +59,7 @@ public class CloneUidTool extends BasicActivity {
     // access control systems only check for the UID.
     private String mBlock0Rest = "080400475955D141103607";
     // Default key to write to a factory formatted block 0 of "magic tag gen2".
-    private String mBlock0Key = "FFFFFFFFFFFF";
+    private String mBlock0Key = MCReader.DEFAULT_KEY;
     private boolean mIgnoreIncorrectBlock0 = false;
     private enum Status { INIT, BLOCK0_CALCULATED, CLONED }
     private Status mStatus = Status.INIT;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -1600,8 +1600,9 @@ public static boolean isValidBlock0(String block0, int uidLen, int tagSize) {
         block0 = block0.toUpperCase();
         String byte0 = block0.substring(0, 2);
         String bcc = block0.substring(8, 10);
-        String sak = block0.substring(uidLen*2 + 2, uidLen*2 + 4);
-        String atqa = block0.substring(uidLen*2 + 4, uidLen*2 + 8);
+        int sakStart = (uidLen == 4) ? uidLen * 2 + 2 : uidLen * 2;
+        String sak = block0.substring(sakStart, sakStart + 2);
+        String atqa = block0.substring(sakStart + 2, sakStart + 6);
         boolean valid = true;
         // BCC.
         if (valid && uidLen == 4) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ImportExportTool.java
Patch:
@@ -351,7 +351,7 @@ private void readConvertAndSaveImportData(Uri[] files) {
 
                 // Save converted file.
                 File destination = Common.getFileFromStorage(
-                        destPath + "/" + destFileName, true);
+                        destPath + "/" + destFileName);
                 if (Common.saveFile(destination, convertedContent, false)) {
                     Toast.makeText(this, R.string.info_file_imported,
                             Toast.LENGTH_LONG).show();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ImportExportTool.java
Patch:
@@ -351,7 +351,7 @@ private void onExportFile(String path) {
         // Convert key or dump file.
         String[] convertedContent;
         if (mIsDumpFile) {
-            convertedContent = convertKeys(
+            convertedContent = convertDump(
                     content, FileType.MCT, mFileType);
 
         } else {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/CloneUidTool.java
Patch:
@@ -52,10 +52,10 @@ public class CloneUidTool extends BasicActivity {
     private TextView mStatusLogContent;
 
     private String mBlock0Complete = "";
-    // Taken from original MIFARE Classic EV1 tag.
+    // Taken from original MIFARE Classic tag with 4 byte UID.
     // In most cases it will not matter because bad
     // access control systems only check for the UID.
-    private String mBlock0Rest = "1D80184200040111001810";
+    private String mBlock0Rest = "880400475955D141103607";
     // Default key to write to a factory formatted block 0 of "magic tag gen2".
     private String mBlock0Key = "FFFFFFFFFFFF";
     private enum Status { INIT, BLOCK0_CALCULATED, CLONED }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -972,6 +972,9 @@ private boolean authenticate(int sectorIndex, byte[] key,
      * @return True if key B is readable. False otherwise.
      */
     private boolean isKeyBReadable(byte[] ac) {
+        if (ac == null) {
+            return false;
+        }
         byte c1 = (byte) ((ac[1] & 0x80) >>> 7);
         byte c2 = (byte) ((ac[2] & 0x08) >>> 3);
         byte c3 = (byte) ((ac[2] & 0x80) >>> 7);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -948,7 +948,7 @@ private boolean authenticate(int sectorIndex, byte[] key,
                     // Key B.
                     ret = mMFC.authenticateSectorWithKeyB(sectorIndex, key);
                 }
-            } catch (IOException e) {
+            } catch (IOException | ArrayIndexOutOfBoundsException e) {
                 Log.d(LOG_TAG, "Error authenticating with tag.");
                 return false;
             }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -1354,7 +1354,7 @@ public static boolean isHex(String hex, Context context) {
      */
     public static boolean isValueBlock(String hexString) {
         byte[] b = Common.hex2ByteArray(hexString);
-        if (b.length == 16) {
+        if (b != null && b.length == 16) {
             // Google some NXP info PDFs about MIFARE Classic to see how
             // Value Blocks are formatted.
             // For better reading (~ = invert operator):

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DiffTool.java
Patch:
@@ -18,6 +18,7 @@
 
 package de.syss.MifareClassicTool.Activities;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Intent;
 import android.graphics.Color;
@@ -125,6 +126,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
      * Run diff if there are two dumps and show the result in the GUI.
      * @see MCDiffUtils#diffIndices(SparseArray, SparseArray)
      */
+    @SuppressLint("SetTextI18n")
     private void runDiff() {
         // Check if both dumps are there.
         if (mDump1 != null && mDump2 != null) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyEditor.java
Patch:
@@ -95,7 +95,7 @@ protected void onCreate(Bundle savedInstanceState) {
             mFileName = keyFile.getName();
             setTitle(getTitle() + " (" + mFileName + ")");
             if (keyFile.exists()) {
-                String keyDump[] = Common.readFileLineByLine(keyFile,
+                String[] keyDump = Common.readFileLineByLine(keyFile,
                         true, this);
                 if (keyDump == null) {
                     // Error. Exit.
@@ -317,7 +317,7 @@ private void removeDuplicates() {
                     newLines.add(line);
                 }
             }
-            mLines = newLines.toArray(new String[newLines.size()]);
+            mLines = newLines.toArray(new String[0]);
             setKeyArrayAsText(mLines);
         }
     }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -104,6 +104,7 @@ private enum StartUpNode {
      * notice and a donate message will be displayed.
      * @see #copyStdKeysFilesIfNecessary()
      */
+    @SuppressLint("SetTextI18n")
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ReadTag.java
Patch:
@@ -144,7 +144,7 @@ private void createTagDump(SparseArray<String[]> rawDump) {
                         tmpDump.add("*No keys found or dead sector");
                     }
                 }
-                String[] dump = tmpDump.toArray(new String[tmpDump.size()]);
+                String[] dump = tmpDump.toArray(new String[0]);
 
                 // Show Dump Editor Activity.
                 Intent intent = new Intent(this, DumpEditor.class);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -18,6 +18,7 @@
 
 package de.syss.MifareClassicTool.Activities;
 
+import android.annotation.SuppressLint;
 import android.app.AlertDialog;
 import android.content.Intent;
 import android.nfc.NfcAdapter;
@@ -115,6 +116,7 @@ public void onReadMore(View view) {
      * If there is no MIFARE Classic support, a warning will be shown.
      * @param tag A Tag from an NFC Intent.
      */
+    @SuppressLint("SetTextI18n")
     private void updateTagInfo(Tag tag) {
 
         if (tag != null) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ValueBlockTool.java
Patch:
@@ -18,6 +18,7 @@
 
 package de.syss.MifareClassicTool.Activities;
 
+import android.annotation.SuppressLint;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.EditText;
@@ -58,6 +59,7 @@ protected void onCreate(Bundle savedInstanceState) {
      * @param view The View object that triggered the method
      * (in this case the decode button).
      */
+    @SuppressLint("SetTextI18n")
     public void onDecode(View view) {
         String data = mVB.getText().toString();
         if (!Common.isHexAnd16Byte(data, this)) {
@@ -84,6 +86,7 @@ public void onDecode(View view) {
      * @param view The View object that triggered the method
      * (in this case the encode button).
      */
+    @SuppressLint("SetTextI18n")
     public void onEncode(View view) {
         String vbText = mVBasInt.getText().toString();
         String addrText = mAddr.getText().toString();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCDiffUtils.java
Patch:
@@ -75,7 +75,7 @@ public static SparseArray<Integer[][]> diffIndices(
                     diffSector[j] = new Integer[0];
                 } else {
                     diffSector[j] = diffIndices.toArray(
-                            new Integer[diffIndices.size()]);
+                            new Integer[0]);
                 }
             }
             ret.put(sectorNr, diffSector);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DataConversionTool.java
Patch:
@@ -85,7 +85,7 @@ public void onConvert(View view) {
      * @param hex The hex string to be converted into different formats.
      */
     private void convertData(String hex) {
-        if (hex != null && hex.equals("")) {
+        if (hex == null || hex.equals("")) {
             Toast.makeText(this, R.string.info_convert_error,
                     Toast.LENGTH_SHORT).show();
             return;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -730,7 +730,6 @@ public void onRequestPermissionsResult(int requestCode,
 
                 }
                 break;
-
         }
     }
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DiffTool.java
Patch:
@@ -283,7 +283,6 @@ private Intent prepareFileChooserForDump() {
                 getString(R.string.text_open_dump_title));
         intent.putExtra(FileChooser.EXTRA_BUTTON_TEXT,
                 getString(R.string.action_open_dump_file));
-        intent.putExtra(FileChooser.EXTRA_IS_DUMP_FILE, true);
         return intent;
     }
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -816,7 +816,6 @@ public void onOpenTagDumpEditor(View view) {
                 getString(R.string.text_open_dump_title));
         intent.putExtra(FileChooser.EXTRA_BUTTON_TEXT,
                 getString(R.string.action_open_dump_file));
-        intent.putExtra(FileChooser.EXTRA_IS_DUMP_FILE, true);
         startActivityForResult(intent, FILE_CHOOSER_DUMP_FILE);
     }
 
@@ -842,7 +841,6 @@ public void onOpenKeyEditor(View view) {
                 getString(R.string.text_open_key_file_title));
         intent.putExtra(FileChooser.EXTRA_BUTTON_TEXT,
                 getString(R.string.action_open_key_file));
-        intent.putExtra(FileChooser.EXTRA_IS_KEY_FILE, true);
         startActivityForResult(intent, FILE_CHOOSER_KEY_FILE);
     }
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -637,7 +637,6 @@ public void onWriteDump(View view) {
                     getString(R.string.text_choose_dump_to_write));
             intent.putExtra(FileChooser.EXTRA_BUTTON_TEXT,
                     getString(R.string.action_write_full_dump));
-            intent.putExtra(FileChooser.EXTRA_IS_DUMP_FILE, true);
             startActivityForResult(intent, FC_WRITE_DUMP);
         }
     }

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -1005,9 +1005,9 @@ public static int getOperationInfoForBlock(byte c1, byte c2, byte c3,
      */
     public static boolean isKeyBReadable(byte c1, byte c2, byte c3) {
         return c1 == 0
-                && (c2 == 0 && c3 == 0)
+                && ((c2 == 0 && c3 == 0)
                 || (c2 == 1 && c3 == 0)
-                || (c2 == 0 && c3 == 1);
+                || (c2 == 0 && c3 == 1));
     }
 
     /**

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -1005,9 +1005,9 @@ public static int getOperationInfoForBlock(byte c1, byte c2, byte c3,
      */
     public static boolean isKeyBReadable(byte c1, byte c2, byte c3) {
         return c1 == 0
-                && (c2 == 0 && c3 == 0)
+                && ((c2 == 0 && c3 == 0)
                 || (c2 == 1 && c3 == 0)
-                || (c2 == 0 && c3 == 1);
+                || (c2 == 0 && c3 == 1));
     }
 
     /**

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/AccessConditionTool.java
Patch:
@@ -108,7 +108,7 @@ protected void onCreate(Bundle savedInstanceState) {
         for (int i = 0; i < 8; i++) {
             items[i] = getString(getResourceForSectorTrailersByRowNr(i));
         }
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(
+        ArrayAdapter<String> adapter = new ArrayAdapter<>(
                 this, R.layout.list_item_small_text, items);
         ListView lv = new ListView(this);
         lv.setAdapter(adapter);
@@ -465,7 +465,7 @@ private void buildDataBlockDialog(boolean resetBlockACs) {
             Toast.makeText(this, r, Toast.LENGTH_LONG).show();
         }
 
-        ListAdapter adapter = new ArrayAdapter<String>(
+        ListAdapter adapter = new ArrayAdapter<>(
                 this, R.layout.list_item_small_text, items);
         ListView lv = new ListView(this);
         lv.setAdapter(adapter);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DiffTool.java
Patch:
@@ -297,7 +297,7 @@ private Intent prepareFileChooserForDump() {
      * represents a block.
      */
     private static SparseArray<String[]> convertDumpFormat(String[] dump) {
-        SparseArray<String[]> ret = new SparseArray<String[]>();
+        SparseArray<String[]> ret = new SparseArray<>();
         int i = 0;
         int sector = 0;
         for (String line : dump) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyEditor.java
Patch:
@@ -325,7 +325,7 @@ public void onClick(DialogInterface dialog,
      */
     private void removeDuplicates() {
         if (isValidKeyFileErrorToast()) {
-            ArrayList<String> newLines = new ArrayList<String>();
+            ArrayList<String> newLines = new ArrayList<>();
             for (String line : mLines) {
                 if (line.equals("") || line.startsWith("#")) {
                     // Add comments for sure.

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyMapCreator.java
Patch:
@@ -262,7 +262,7 @@ public void onStart() {
             String selectedFilesChain = sharedPref.getString(
                     "last_used_key_files", null);
             if (selectedFilesChain != null) {
-                selectedFiles = new ArrayList<String>(
+                selectedFiles = new ArrayList<>(
                         Arrays.asList(selectedFilesChain.split("/")));
             }
         }
@@ -346,7 +346,7 @@ public void onCreateKeyMap(View view) {
                 Preference.SaveLastUsedKeyFiles.toString(), true);
         StringBuilder lastSelectedKeyFiles = new StringBuilder();
         // Check for checked check boxes.
-        ArrayList<String> fileNames = new ArrayList<String>();
+        ArrayList<String> fileNames = new ArrayList<>();
         for (int i = 0; i < mKeyFilesGroup.getChildCount(); i++) {
             CheckBox c = (CheckBox) mKeyFilesGroup.getChildAt(i);
             if (c.isChecked()) {
@@ -355,7 +355,7 @@ public void onCreateKeyMap(View view) {
         }
         if (fileNames.size() > 0) {
             // Check if key files still exists.
-            ArrayList<File> keyFiles = new ArrayList<File>();
+            ArrayList<File> keyFiles = new ArrayList<>();
             for (String fileName : fileNames) {
                 File keyFile = new File(mKeyDirPath, fileName);
                 if (keyFile.exists()) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ReadTag.java
Patch:
@@ -137,7 +137,7 @@ public void run() {
      * @see DumpEditor
      */
     private void createTagDump(SparseArray<String[]> rawDump) {
-        ArrayList<String> tmpDump = new ArrayList<String>();
+        ArrayList<String> tmpDump = new ArrayList<>();
         if (rawDump != null) {
             if (rawDump.size() != 0) {
                 for (int i = Common.getKeyMapRangeFrom();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -55,9 +55,9 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
+import java.math.BigInteger;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.math.BigInteger;
 
 import de.syss.MifareClassicTool.Activities.IActivityThatReactsToSave;
 
@@ -297,7 +297,7 @@ public static String[] readFileLineByLine(File file, boolean readComments,
                 br = new BufferedReader(new FileReader(file));
 
                 String line;
-                ArrayList<String> linesArray = new ArrayList<String>();
+                ArrayList<String> linesArray = new ArrayList<>();
                 while ((line = br.readLine()) != null)   {
                     // Ignore empty lines.
                     // Ignore comments if readComments == false.
@@ -1183,7 +1183,7 @@ public static boolean isValueBlock(String hexString) {
      * </ul>
      */
     public static int isValidDump(String[] lines, boolean ignoreAsterisk) {
-        ArrayList<Integer> knownSectors = new ArrayList<Integer>();
+        ArrayList<Integer> knownSectors = new ArrayList<>();
         int blocksSinceLastSectorHeader = 4;
         boolean is16BlockSector = false;
         if (lines == null || lines.length == 0) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCDiffUtils.java
Patch:
@@ -45,7 +45,7 @@ public class MCDiffUtils {
     public static SparseArray<Integer[][]> diffIndices(
             SparseArray<String[]> dump1, SparseArray<String[]> dump2) {
         SparseArray<Integer[][]> ret =
-                new SparseArray<Integer[][]>();
+                new SparseArray<>();
         // Walk through all sectors of dump1.
         for (int i = 0; i < dump1.size(); i++) {
             String[] sector1 = dump1.valueAt(i);
@@ -62,7 +62,7 @@ public static SparseArray<Integer[][]> diffIndices(
             Integer[][] diffSector = new Integer[sector1.length][];
             // Walk through all blocks.
             for (int j = 0; j < sector1.length; j++) {
-                ArrayList<Integer> diffIndices = new ArrayList<Integer>();
+                ArrayList<Integer> diffIndices = new ArrayList<>();
                 // Walk through all symbols.
                 for (int k = 0; k < sector1[j].length(); k++) {
                     if (sector1[j].charAt(k) != sector2[j].charAt(k)) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -131,7 +131,7 @@ private void updateTagInfo(Tag tag) {
             TextView headerGenericInfo = new TextView(this);
             headerGenericInfo.setText(Common.colorString(
                     getString(R.string.text_generic_info),
-                    getResources().getColor(R.color.blue)));;
+                    getResources().getColor(R.color.blue)));
             headerGenericInfo.setTextAppearance(this,
                     android.R.style.TextAppearance_Large);
             headerGenericInfo.setGravity(Gravity.CENTER_HORIZONTAL);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -461,9 +461,9 @@ public static boolean saveFile(File file, String[] lines, boolean append) {
                     bw.newLine();
                 }
                 bw.write(lines[i]);
-            } catch (IOException e) {
+            } catch (IOException | NullPointerException ex) {
                 Log.e(LOG_TAG, "Error while writing to '"
-                        + file.getName() + "' file.", e);
+                        + file.getName() + "' file.", ex);
                 noError = false;
 
             } finally {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -508,7 +508,7 @@ public int buildNextKeyMapPart() {
                     Preference.AutoReconnect.toString(), false);
             // Get retry authentication option.
             boolean retryAuth = Common.getPreferences().getBoolean(
-                    Preference.RetryAuthentication.toString(), true);
+                    Preference.RetryAuthentication.toString(), false);
 
             byte[][] keys = new byte[2][];
             boolean[] foundKeys = new boolean[] {false, false};
@@ -892,7 +892,7 @@ private boolean authenticate(int sectorIndex, byte[] key,
         // issues and need a retry in order to work...
         // Info: https://github.com/ikarus23/MifareClassicTool/issues/134
         boolean retryAuth = Common.getPreferences().getBoolean(
-                Preference.RetryAuthentication.toString(), true);
+                Preference.RetryAuthentication.toString(), false);
         boolean ret;
         try {
             if (!useAsKeyB) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/BasicActivity.java
Patch:
@@ -41,7 +41,7 @@ public abstract class BasicActivity extends Activity {
     @Override
     public void onResume() {
         super.onResume();
-        Common.setPendingActivity(this);
+        Common.setPendingComponentName(this.getComponentName());
         Common.enableNfcForegroundDispatch(this);
     }
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -251,7 +251,7 @@ private void runSartUpNode(StartUpNode startUpNode) {
                 }
                 break;
             case HandleNewIntent:
-                Common.setPendingActivity(null);
+                Common.setPendingComponentName(null);
                 Intent intent = getIntent();
                 boolean isIntentWithTag = intent.getAction().equals(
                         NfcAdapter.ACTION_TECH_DISCOVERED);
@@ -702,8 +702,8 @@ public void onPause() {
      */
     @Override
     public void onNewIntent(Intent intent) {
-        if(Common.getPendingActivity() != null) {
-            intent.setComponent(Common.getPendingActivity().getComponentName());
+        if(Common.getPendingComponentName() != null) {
+            intent.setComponent(Common.getPendingComponentName());
             startActivity(intent);
         } else {
             int typeCheck = Common.treatAsNewTag(intent, this);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/Preferences.java
Patch:
@@ -105,7 +105,7 @@ public void onCreate(Bundle savedInstanceState) {
         mUseInternalStorage.setChecked(pref.getBoolean(
                 Preference.UseInternalStorage.toString(), false));
         mRetryAuthentication.setChecked(pref.getBoolean(
-                Preference.RetryAuthentication.toString(), true));
+                Preference.RetryAuthentication.toString(), false));
     }
 
     /**

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -601,7 +601,7 @@ public static boolean hasMifareClassicSupport() {
         // able of reading/writing MIFARE Classic tags. I don't know why...
         // https://github.com/ikarus23/MifareClassicTool/issues/152
         boolean isLenovoP2 = Build.MANUFACTURER.equals("LENOVO")
-                && Build.MODEL.equals("P2a42");
+                && Build.MODEL.equals("Lenovo P2a42");
         File device = new File("/dev/bcm2079x-i2c");
         if (!isLenovoP2 && device.exists()) {
             mHasMifareClassicSupport = -1;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/AccessConditionDecoder.java
Patch:
@@ -26,6 +26,7 @@
 import android.widget.TableRow;
 import android.widget.TextView;
 import android.widget.TextView.BufferType;
+
 import de.syss.MifareClassicTool.Common;
 import de.syss.MifareClassicTool.Common.Operations;
 import de.syss.MifareClassicTool.R;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/AccessConditionTool.java
Patch:
@@ -28,6 +28,7 @@
 import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.Toast;
+
 import de.syss.MifareClassicTool.Common;
 import de.syss.MifareClassicTool.R;
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/BasicActivity.java
Patch:
@@ -20,6 +20,7 @@
 
 import android.app.Activity;
 import android.content.Intent;
+
 import de.syss.MifareClassicTool.Common;
 
 /**

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/BccTool.java
Patch:
@@ -18,14 +18,14 @@
 
 package de.syss.MifareClassicTool.Activities;
 
-import de.syss.MifareClassicTool.Common;
-import de.syss.MifareClassicTool.R;
-
 import android.os.Bundle;
 import android.view.View;
 import android.widget.EditText;
 import android.widget.Toast;
 
+import de.syss.MifareClassicTool.Common;
+import de.syss.MifareClassicTool.R;
+
 
 /**
  * Calculate the BCC value of a given UID.

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/HelpAndInfo.java
Patch:
@@ -20,6 +20,7 @@
 
 import android.os.Bundle;
 import android.webkit.WebView;
+
 import de.syss.MifareClassicTool.R;
 
 /**

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/HexToAscii.java
Patch:
@@ -18,12 +18,13 @@
 
 package de.syss.MifareClassicTool.Activities;
 
-import java.io.UnsupportedEncodingException;
-
 import android.os.Bundle;
 import android.text.TextUtils;
 import android.util.Log;
 import android.widget.TextView;
+
+import java.io.UnsupportedEncodingException;
+
 import de.syss.MifareClassicTool.Common;
 import de.syss.MifareClassicTool.R;
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyEditor.java
Patch:
@@ -25,7 +25,6 @@
 import android.graphics.Typeface;
 import android.net.Uri;
 import android.os.Bundle;
-import android.os.Environment;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextWatcher;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -35,6 +35,7 @@
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
+
 import de.syss.MifareClassicTool.Common;
 import de.syss.MifareClassicTool.R;
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/ValueBlocksToInt.java
Patch:
@@ -18,15 +18,16 @@
 
 package de.syss.MifareClassicTool.Activities;
 
-import java.nio.ByteBuffer;
-
 import android.os.Bundle;
 import android.util.Log;
 import android.widget.TableLayout;
 import android.widget.TableLayout.LayoutParams;
 import android.widget.TableRow;
 import android.widget.TextView;
 import android.widget.TextView.BufferType;
+
+import java.nio.ByteBuffer;
+
 import de.syss.MifareClassicTool.Common;
 import de.syss.MifareClassicTool.R;
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -25,7 +25,6 @@
 import android.content.Intent;
 import android.nfc.tech.MifareClassic;
 import android.os.Bundle;
-import android.os.Environment;
 import android.os.Handler;
 import android.util.SparseArray;
 import android.view.Gravity;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/MCDiffUtils.java
Patch:
@@ -18,10 +18,10 @@
 
 package de.syss.MifareClassicTool;
 
-import java.util.ArrayList;
-
 import android.util.SparseArray;
 
+import java.util.ArrayList;
+
 /**
  * Provides functions to compare two dumps.
  * @author Gerhard Klostermeier

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/KeyEditor.java
Patch:
@@ -243,7 +243,8 @@ private void shareKeyFile() {
         if (mFileName.equals("")) {
             // The key file has no name. Use date and time as name.
             GregorianCalendar calendar = new GregorianCalendar();
-            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd_HH:mm:ss");
+            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss",
+                    Locale.getDefault());
             fmt.setCalendar(calendar);
             fileName = fmt.format(calendar.getTime());
         } else {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -873,7 +873,7 @@ private void shareDump() {
         if (mDumpName == null) {
             // The dump has no name. Use date and time as name.
             GregorianCalendar calendar = new GregorianCalendar();
-            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd_HH:mm:ss");
+            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd_HHmmss", Locale.getDefault());
             fmt.setCalendar(calendar);
             fileName = fmt.format(calendar.getTime());
         } else {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -383,7 +383,8 @@ private void saveDump() {
         // Set a filename (UID + Date + Time) if there is none.
         if (mDumpName == null) {
             GregorianCalendar calendar = new GregorianCalendar();
-            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd_HH:mm:ss");
+            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd_HHmmss", Locale.getDefault());
+            
             fmt.setCalendar(calendar);
             String dateFormatted = fmt.format(calendar.getTime());
             mDumpName = "UID_" + mUID + "_" + dateFormatted;

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Common.java
Patch:
@@ -474,6 +474,7 @@ public static void disableNfcForegroundDispatch(Activity targetActivity) {
         }
     }
 
+    // TODO: Update doc.
     /**
      * For Activities which want to treat new Intents as Intents with a new
      * Tag attached. If the given Intent has a Tag extra, the
@@ -499,6 +500,7 @@ public static int treatAsNewTag(Intent intent, Context context) {
         // Check if Intent has a NFC Tag.
         if (NfcAdapter.ACTION_TECH_DISCOVERED.equals(intent.getAction())) {
             Tag tag = intent.getParcelableExtra(NfcAdapter.EXTRA_TAG);
+            tag = MCReader.patchTag(tag);
             setTag(tag);
 
             // Show Toast message with UID.

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -389,7 +389,7 @@ private void saveDump() {
             mDumpName = "UID_" + mUID + "_" + dateFormatted;
         }
 
-        saveFile(mLines, mDumpName, false, R.string.dialog_save_dump_title,
+        saveFile(mLines, mDumpName, true, R.string.dialog_save_dump_title,
                 R.string.dialog_save_dump);
     }
 

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/AccessConditionDecoder.java
Patch:
@@ -141,7 +141,7 @@ private void addBlockAC(byte[][] acMatrix, boolean hasMoreThan4Blocks) {
             byte c3 = acMatrix[2][i];
             // Create row and header.
             TableRow tr = new TableRow(this);
-            String blockHeader = "";
+            String blockHeader;
             if (hasMoreThan4Blocks) {
                 blockHeader = getString(R.string.text_block)
                         + ": " + (i*4+i) + "-" + (i*4+4+i);

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/AccessConditionTool.java
Patch:
@@ -426,7 +426,7 @@ private int acBitsToACRowNr(byte[] acBits, boolean isSectorTrailer) {
      * @see #mIsKeyBReadable
      */
     private void buildDataBlockDialog(boolean resetBlockACs) {
-        String[] items = null;
+        String[] items;
         if (mIsKeyBReadable && !mWasKeyBReadable) {
             // Rebuild dialog (because key B is now readable).
             items = new String[4];
@@ -455,7 +455,7 @@ private void buildDataBlockDialog(boolean resetBlockACs) {
                 mACMatrix[1][i] = 0;
                 mACMatrix[2][i] = 0;
             }
-            int r = 0;
+            int r;
             if (mIsKeyBReadable) {
                 r = R.string.info_ac_reset_keyb_readable;
             } else {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DiffTool.java
Patch:
@@ -73,7 +73,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mDumpFileButton2 = (Button) findViewById(R.id.buttonDiffToolDump2);
 
         // Check if one or both dumps are already chosen via Intent
-        // (from DumpEitor).
+        // (from DumpEditor).
         if (getIntent().hasExtra(EXTRA_DUMP)) {
             mDump1 = convertDumpFormat(
                     getIntent().getStringArrayExtra(EXTRA_DUMP));
@@ -177,7 +177,7 @@ private void runDiff() {
                             R.id.textViewDiffBlockDump2);
                     TextView diffIndex = (TextView) rl.findViewById(
                             R.id.textViewDiffBlockDiff);
-                    StringBuilder diffString = null;
+                    StringBuilder diffString;
                     diffIndex.setTextColor(Color.RED);
                     // Populate the blocks of the diff entry.
                     dump1.setText(mDump1.get(sector)[block]);
@@ -237,7 +237,7 @@ public void onChooseDump2(View view) {
      * @param data The Intent returned by the {@link FileChooser}
      * @return The chosen dump in a key value pair format. The key is the sector
      * number. The value is an String array. Each field of the array
-     * represents a block. If the dump was not vaild null will be returned.
+     * represents a block. If the dump was not valid null will be returned.
      * @see Common#isValidDump(String[], boolean)
      * @see Common#isValidDumpErrorToast(int, android.content.Context)
      * @see Common#readFileLineByLine(File, boolean, android.content.Context)

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -871,7 +871,7 @@ private void shareDump() {
      * @return A full colored string.
      */
     private SpannableString colorDataBlock(String data, boolean hasUID) {
-        SpannableString ret = null;
+        SpannableString ret;
         if (hasUID) {
             // First block (UID, manuf. data).
             ret = new SpannableString(TextUtils.concat(

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/FileChooser.java
Patch:
@@ -251,7 +251,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
      * Finish the Activity with an Intent containing
      * {@link #EXTRA_CHOSEN_FILE} and {@link #EXTRA_CHOSEN_FILENAME} as result.
      * You can catch that result by overriding onActivityResult() in the
-     * Activity that called the file chooser via startActitivtyForResult().
+     * Activity that called the file chooser via startActivityForResult().
      * @param view The View object that triggered the function
      * (in this case the choose file button).
      * @see #EXTRA_CHOSEN_FILE

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/HexToAscii.java
Patch:
@@ -64,7 +64,7 @@ protected void onCreate(Bundle savedInstanceState) {
                                 getResources().getColor(R.color.blue)), s);
                     } else {
                         // Data.
-                        // Replace non printable ACSII with ".".
+                        // Replace non printable ASCII with ".".
                         byte[] hex = Common.hexStringToByteArray(line);
                         for(int i = 0; i < hex.length; i++) {
                             if (hex[i] < (byte)0x20 || hex[i] == (byte)0x7F) {

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/IActivityThatReactsToSave.java
Patch:
@@ -35,7 +35,7 @@ public interface IActivityThatReactsToSave {
 
     /**
      * This method will be called, if there was an error during the
-     * save process or it the user hits "cancel" in the "file allready exists"
+     * save process or it the user hits "cancel" in the "file already exists"
      * dialog.
      */
     public abstract void onSaveFailure();

File: Mifare Classic Tool/app/src/main/java/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -585,15 +585,15 @@ public void onOpenKeyEditor(View view) {
     /**
      * Show the {@link Preferences}.
      */
-    public void onShowPreferences() {
+    private void onShowPreferences() {
         Intent intent = new Intent(this, Preferences.class);
         startActivity(intent);
     }
 
     /**
      * Show the about dialog.
      */
-    public void onShowAboutDialog() {
+    private void onShowAboutDialog() {
         CharSequence styledText = Html.fromHtml(
                 getString(R.string.dialog_about_mct,
                 Common.getVersionCode()));
@@ -643,7 +643,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
      */
     @Override
     public boolean onContextItemSelected(MenuItem item) {
-        Intent intent = null;
+        Intent intent;
         switch (item.getItemId()) {
         case R.id.menuMainTagInfo:
             intent = new Intent(this, TagInfoTool.class);

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -504,6 +504,7 @@ private void initEditor(String[] lines) {
         }
 
         // Parse dump and show it.
+        boolean tmpDumpChanged = mDumpChanged;
         mLayout.removeAllViews();
         boolean isFirstBlock = false;
         EditText et = null;
@@ -588,6 +589,8 @@ public void onTextChanged(CharSequence s,
                 }
             }
         }
+        // Initialization of the editor is not a change.
+        mDumpChanged = tmpDumpChanged;
     }
 
     /**

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -101,6 +101,8 @@ public void onCreate(Bundle savedInstanceState) {
         Button tools = (Button) findViewById(R.id.buttonMainTools);
         registerForContextMenu(tools);
 
+        Common.setUseAsEditorOnly(false);
+
         // Check if there is an NFC hardware component.
         Common.setNfcAdapter(NfcAdapter.getDefaultAdapter(this));
         if (Common.getNfcAdapter() == null) {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Common.java
Patch:
@@ -160,7 +160,7 @@ public enum Operations {
      * If NFC is disabled and the user chose to use MCT in editor only mode,
      * the choice is remembered here.
      */
-    private static boolean mUseAsEditorOnly;
+    private static boolean mUseAsEditorOnly = false;
 
     /**
      * 1 if the device does support Mifare Classic. -1 if it doesn't support

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -249,7 +249,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     /**
      * Update the coloring. This method updates the colors if all
      * data are valid {@link #checkDumpAndUpdateLines()}.
-     * To do so, it reinitializes the whole editor... not quite beautiful.
+     * To do so, it re-initializes the whole editor... not quite beautiful.
      * @param view The View object that triggered the method
      * (in this case the update color text (color caption text)).
      * @see #checkDumpAndUpdateLines()

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/HelpAndInfo.java
Patch:
@@ -37,7 +37,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_help);
 
-        // Init. help from local webseite.
+        // Init. help from local website.
         WebView wv = (WebView) findViewById(R.id.webViewHelpText);
         wv.loadUrl("file:///android_asset/help/help.html");
     }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -132,7 +132,7 @@ public void onCancel(DialogInterface dialog) {
                     Common.HOME_DIR) + "/" + Common.KEYS_DIR);
             if (path.exists() == false && !path.mkdirs()) {
                 // Could not create directory.
-                Log.e(LOG_TAG, "Error while crating '" + Common.HOME_DIR
+                Log.e(LOG_TAG, "Error while creating '" + Common.HOME_DIR
                         + "/" + Common.KEYS_DIR + "' directory.");
                 return;
             }
@@ -142,7 +142,7 @@ public void onCancel(DialogInterface dialog) {
                     Common.HOME_DIR) + "/" + Common.DUMPS_DIR);
             if (path.exists() == false && !path.mkdirs()) {
                 // Could not create directory.
-                Log.e(LOG_TAG, "Error while crating '" + Common.HOME_DIR
+                Log.e(LOG_TAG, "Error while creating '" + Common.HOME_DIR
                         + "/" + Common.DUMPS_DIR + "' directory.");
                 return;
             }
@@ -152,7 +152,7 @@ public void onCancel(DialogInterface dialog) {
                     Common.HOME_DIR) + "/" + Common.TMP_DIR);
             if (path.exists() == false && !path.mkdirs()) {
                 // Could not create directory.
-                Log.e(LOG_TAG, "Error while crating '" + Common.HOME_DIR
+                Log.e(LOG_TAG, "Error while creating '" + Common.HOME_DIR
                         + Common.TMP_DIR + "' directory.");
                 return;
             }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -254,6 +254,8 @@ private void updateTagInfos(Tag tag) {
         } else {
             // There is no Tag.
             TextView text = new TextView(this);
+            int pad = Common.dpToPx(5);
+            text.setPadding(pad, pad, 0, 0);
             text.setTextAppearance(this, android.R.style.TextAppearance_Large);
             text.setText(getString(R.string.text_no_tag));
             mLayout.removeAllViews();

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -451,11 +451,11 @@ private int checkDumpAndUpdateLines() {
      * a valid dump, an error Toast will be shown and the Activity exits.
      * @param lines Block data and header (e.g. "sector: 0"). Minimum is one
      * Sector (5 Lines, 1 Header + 4 Hex block data).
-     * @see Common#isValidDump(String[])
+     * @see Common#isValidDump(String[], boolean)
      * @see Common#isValidDumpErrorToast(int, Context)
      */
     private void initEditor(String[] lines) {
-        int err = Common.isValidDump(lines);
+        int err = Common.isValidDump(lines, true);
         if (err != 0) {
             Common.isValidDumpErrorToast(err, this);
             Toast.makeText(this, R.string.info_editor_init_error,

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -485,7 +485,7 @@ private void readDumpAndShowSectorChooserDialog(String pathToDump) {
         // Read dump.
         File file = new File(pathToDump);
         String[] dump = Common.readFileLineByLine(file, false, this);
-        int err = Common.isValidDump(dump);
+        int err = Common.isValidDump(dump, false);
         if (err != 0) {
             // Error.
             Common.isValidDumpErrorToast(err, this);

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/KeyMapCreator.java
Patch:
@@ -361,7 +361,7 @@ public void onCreateKeyMap(View view) {
                     e.putString("last_used_key_files",
                             lastSelectedKeyFiles.substring(
                                     0, lastSelectedKeyFiles.length() - 1));
-                    e.commit();
+                    e.apply();
                 }
 
                 // Create reader.

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/Preferences.java
Patch:
@@ -112,7 +112,7 @@ public void onSave(View view) {
                 mPrefAutoReconnect.isChecked());
         edit.putBoolean(Preference.SaveLastUsedKeyFiles.toString(),
                 mPrefSaveLastUsedKeyFiles.isChecked());
-        edit.commit();
+        edit.apply();
 
         // Exit the preferences view.
         finish();

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/MainMenu.java
Patch:
@@ -50,6 +50,7 @@
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
+import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.CheckBox;
 import android.widget.TextView;
@@ -246,9 +247,9 @@ public void onClick(DialogInterface dialog, int which) {
                 sharedEditor.putBoolean("show_donate_dialog", true);
                 sharedEditor.commit();
             }
-            // TODO: fix the warning.
             View dialogLayout = getLayoutInflater().inflate(
-                    R.layout.dialog_donate, null);
+                    R.layout.dialog_donate,
+                    (ViewGroup)findViewById(android.R.id.content), false);
             final CheckBox showDonateDialogCheckBox = (CheckBox) dialogLayout
                     .findViewById(R.id.checkBoxDonateDialog);
             new AlertDialog.Builder(this)

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/WriteTag.java
Patch:
@@ -40,6 +40,7 @@
 import android.util.SparseArray;
 import android.view.Gravity;
 import android.view.View;
+import android.view.ViewGroup;
 import android.view.View.OnClickListener;
 import android.widget.Button;
 import android.widget.CheckBox;
@@ -524,7 +525,8 @@ private void readDumpAndShowSectorChooserDialog(String pathToDump) {
         // Create and show sector chooser dialog
         // (let the user select the sectors which will be written).
         View dialogLayout = getLayoutInflater().inflate(
-                R.layout.dialog_write_sectors, null);
+                R.layout.dialog_write_sectors,
+                (ViewGroup)findViewById(android.R.id.content), false);
         LinearLayout llCheckBoxes = (LinearLayout) dialogLayout.findViewById(
                 R.id.linearLayoutWriteSectorsCheckBoxes);
         Button selectAll = (Button) dialogLayout.findViewById(

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -69,7 +69,7 @@ protected void onCreate(Bundle savedInstanceState) {
      */
     @Override
     public void onNewIntent(Intent intent) {
-        super.onNewIntent(intent);
+        Common.treatAsNewTag(intent, this);
         if (NfcAdapter.ACTION_TECH_DISCOVERED.equals(intent.getAction())) {
             updateTagInfos(Common.getTag());
         }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/TagInfoTool.java
Patch:
@@ -69,7 +69,7 @@ protected void onCreate(Bundle savedInstanceState) {
      */
     @Override
     public void onNewIntent(Intent intent) {
-        super.onNewIntent(intent);
+        Common.treatAsNewTag(intent, this);
         if (NfcAdapter.ACTION_TECH_DISCOVERED.equals(intent.getAction())) {
             updateTagInfos(Common.getTag());
         }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditor.java
Patch:
@@ -618,7 +618,7 @@ private void openValueBlockTool() {
      * Decode the date of manufacture (using the last 2 bytes of the
      * manufacturer block) and display the result as dialog.
      * Both of this bytes must be in BCD format (only digits, no letters).
-     * The first byte (week of manufacture) must be between 1 and 52.
+     * The first byte (week of manufacture) must be between 1 and 53.
      * The second byte (year of manufacture) must be between 0 and
      * the current year.
      */
@@ -633,7 +633,7 @@ private void decodeDateOfManuf() {
                 year = Integer.parseInt(mLines[1].substring(30, 32));
                 week = Integer.parseInt(mLines[1].substring(28, 30));
                 int now = Integer.parseInt(sdf.format(new Date()));
-                if (year >= 0 && year <= now && week > 0 && week < 53) {
+                if (year >= 0 && year <= now && week >= 1 && week <= 53) {
                     // Calculate the date of manufacture.
                     Calendar calendar = Calendar.getInstance();
                     calendar.clear();

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/KeyMapCreator.java
Patch:
@@ -65,7 +65,7 @@
  * </ul>
  * @author Gerhard Klostermeier
  */
-public class CreateKeyMap extends BasicActivity {
+public class KeyMapCreator extends BasicActivity {
 
     // Input parameters.
     /**
@@ -118,7 +118,7 @@ public class CreateKeyMap extends BasicActivity {
     public static final int MAX_BLOCK_COUNT_PER_SECTOR = 16;
 
     private static final String LOG_TAG =
-            CreateKeyMap.class.getSimpleName();
+            KeyMapCreator.class.getSimpleName();
 
     private static final int DEFAULT_SECTOR_RANGE_FROM = 0;
     private static final int DEFAULT_SECTOR_RANGE_TO = 15;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -475,7 +475,7 @@ public String[] mergeSectorData(String[] firstResult,
      * For each of these positions you will get the write information
      * (see return values).
      * @param keyMap A key map a generated by
-     * {@link Activities.CreateKeyMap}.
+     * {@link Activities.KeyMapCreator}.
      * @return A map within a map (all with type = Integer).
      * The key of the outer map is the sector number and the value is another
      * map with key = block number and value = write information.

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/MainActivity.java
Patch:
@@ -31,7 +31,6 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.content.DialogInterface.OnShowListener;
 import android.content.SharedPreferences.Editor;
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.content.res.AssetManager;
@@ -243,7 +242,7 @@ public void onCancel(DialogInterface dialog) {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.main_menu, menu);
+        getMenuInflater().inflate(R.menu.general_options, menu);
         return true;
     }
 
@@ -470,7 +469,8 @@ public void onClick(DialogInterface dialog, int which) {
     }
 
     /**
-     * Handle the user input from main menu (e.g. show the about dialog).
+     * Handle the user input from the general options menu
+     * (e.g. show the about dialog).
      * @see #onShowAboutDialog()
      * @see #onShowPreferences()
      */

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Common.java
Patch:
@@ -405,7 +405,8 @@ public static MCReader checkForTagAndCreateReader(Context context) {
             if (!tagLost && !reader.isConnected()) {
                 reader.close();
                 tagLost = true;
-            } else {
+            }
+            if (!tagLost) {
                 return reader;
             }
         } else {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -745,11 +745,12 @@ public boolean isConnected() {
     /**
      * Connect the reader to the tag.
      */
-    public void connect() {
+    public void connect() throws IOException {
         try {
             mMFC.connect();
         } catch (IOException e) {
             Log.d(LOG_TAG, "Error while connecting to tag.");
+            throw e;
         }
     }
 

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/AccessConditionTool.java
Patch:
@@ -395,7 +395,7 @@ private int acBitsToACRowNr(byte[] acBits, boolean isSectorTrailer) {
                 return 1;
             } else if (acBits[0] == 0 && acBits[1] == 0 && acBits[2] == 1) {
                 return 2;
-            } else if (acBits[0] == 1 && acBits[1] == 1 && acBits[2] == 0) {
+            } else if (acBits[0] == 1 && acBits[1] == 1 && acBits[2] == 1) {
                 return 3;
             }
         } else {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/WriteTagActivity.java
Patch:
@@ -431,13 +431,13 @@ public void onWriteDump(View view) {
             String ac = mStaticAC.getText().toString();
             if (ac.matches("[0-9A-Fa-f]+") == false) {
                 // Error, not hex.
-                Toast.makeText(this, R.string.info_static_ac_not_hex,
+                Toast.makeText(this, R.string.info_ac_not_hex,
                         Toast.LENGTH_LONG).show();
                 return;
             }
             if (ac.length() != 6) {
                 // Error, not 3 byte (6 chars).
-                Toast.makeText(this, R.string.info_static_ac_not_3_byte,
+                Toast.makeText(this, R.string.info_ac_not_3_byte,
                         Toast.LENGTH_LONG).show();
                 return;
             }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Common.java
Patch:
@@ -677,7 +677,7 @@ public static byte[] acMatrixToACBytes(byte acMatrix[][]) {
         acBytes[1] |= (byte)((acMatrix[0][2]<<6)&0x40);
         acBytes[1] |= (byte)((acMatrix[0][3]<<7)&0x80);
         // Byte 8, Bit 0-3.
-        acBytes[2] = (byte)(acMatrix[1][1]&0x01);
+        acBytes[2] = (byte)(acMatrix[1][0]&0x01);
         acBytes[2] |= (byte)((acMatrix[1][1]<<1)&0x02);
         acBytes[2] |= (byte)((acMatrix[1][2]<<2)&0x04);
         acBytes[2] |= (byte)((acMatrix[1][3]<<3)&0x08);

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/ValueBlocksToIntActivity.java
Patch:
@@ -145,7 +145,7 @@ private void addValueBlock(String hexValueBlock) {
         value = new TextView(this);
         byte[] asBytes = Common.hexStringToByteArray(
                 hexValueBlock.substring(0, 8));
-        Common.reverseByteArrasInPlace(asBytes);
+        Common.reverseByteArrayInPlace(asBytes);
         ByteBuffer bb = ByteBuffer.wrap(asBytes);
         int i = bb.getInt();
         String asInt = "" + i;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Common.java
Patch:
@@ -688,7 +688,7 @@ public static boolean isValueBlock(String hexString) {
      * Commons.Lang (ArrayUtils) form Apache....
      * @param array The array to reverse (in-place).
      */
-    public static void reverseByteArrasInPlace(byte[] array) {
+    public static void reverseByteArrayInPlace(byte[] array) {
         for(int i = 0; i < array.length / 2; i++) {
             byte temp = array[i];
             array[i] = array[array.length - i - 1];

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/BasicActivity.java
Patch:
@@ -61,7 +61,8 @@ public void onPause() {
      */
     @Override
     public void onNewIntent(Intent intent) {
-        if (Common.treatAsNewTag(intent, this) == 0) {
+        int typeCheck = Common.treatAsNewTag(intent, this);
+        if (typeCheck == -1 || typeCheck == -2) {
             // Device or tag does not support Mifare Classic.
             // Run the only thing that is possible: The tag info tool.
             Intent i = new Intent(this, TagInfoToolActivity.class);

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/WriteTagActivity.java
Patch:
@@ -587,7 +587,7 @@ private void checkTag() {
                 ArrayList<HashMap<String, String>>();
         final HashMap<Integer, HashMap<Integer, Integer>> writeOnPosSafe =
                 new HashMap<Integer, HashMap<Integer,Integer>>(
-                        writeOnPos.size());
+                        mDumpWithPos.size());
         // Keys that are missing completely (mDumpWithPos vs. keyMap).
         for (int sector : mDumpWithPos.keySet()) {
             if (keyMap.indexOfKey(sector) < 0) {
@@ -599,7 +599,7 @@ private void checkTag() {
         }
         // Keys with write privileges that are missing or some
         // blocks (block-parts) are read-only (writeOnPos vs. keyMap).
-        Set<Integer> sectors = writeOnPos.keySet();
+        Set<Integer> sectors = mDumpWithPos.keySet();
         for (int sector : sectors) {
             if (writeOnPos.get(sector) == null) {
                 // Error. Sector is dead (IO Error) or ACs are invalid.
@@ -609,7 +609,7 @@ private void checkTag() {
             }
             writeOnPosSafe.put(sector, new HashMap<Integer, Integer>());
             byte[][] keys = keyMap.get(sector);
-            Set<Integer> blocks = writeOnPos.get(sector).keySet();
+            Set<Integer> blocks = mDumpWithPos.get(sector).keySet();
             for (int block : blocks) {
                 boolean isSafeForWriting = true;
                 if (!mWriteManufBlock.isChecked()

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditorActivity.java
Patch:
@@ -159,7 +159,7 @@ public void onCreate(Bundle savedInstanceState) {
                     FileChooserActivity.EXTRA_CHOSEN_FILE));
             mFileName = file.getName();
             setTitle(getTitle() + " (" + mFileName + ")");
-            initEditor(Common.readFileLineByLine(file, false));
+            initEditor(Common.readFileLineByLine(file, false, this));
             setIntent(null);
         } else if (savedInstanceState != null) {
             // Recreated after kill by Android (due to low memory).

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/ReadTagActivity.java
Patch:
@@ -100,6 +100,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
     private void readTag() {
         final Context con = this;
         new Thread(new Runnable() {
+            @Override
             public void run() {
                 MCReader reader = Common.checkForTagAndCreateReader(con);
 //              MCReader reader = (MCReader) data.getSerializableExtra(
@@ -115,6 +116,7 @@ public void run() {
                 reader.close();
 
                 mHandler.post(new Runnable() {
+                    @Override
                     public void run() {
                         createTagDump(mRawDump);
                     }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Common.java
Patch:
@@ -509,7 +509,8 @@ public static boolean isKeyBReadable(byte c1, byte c2, byte c3) {
      * @param ac The Access Conditions.
      * @return Matrix of access conditions bits (C1-C3) where the first
      * dimension is the "C" parameter (C1-C3, Index 0-2) and the second
-     * dimension is the block number (Index 0-3).
+     * dimension is the block number (Index 0-3). If the ACs are incorrect
+     * null will be returned.
      */
     public static byte[][] acToACMatrix(byte ac[]) {
         // ACs correct?

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditorActivity.java
Patch:
@@ -166,7 +166,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.editor_functions, menu);
+        getMenuInflater().inflate(R.menu.dump_editor_functions, menu);
         return true;
     }
 
@@ -568,7 +568,7 @@ private void shareDump() {
         sendIntent.putExtra(Intent.EXTRA_STREAM, Uri.parse(
                 "file://" + file.getAbsolutePath()));
         sendIntent.putExtra(Intent.EXTRA_SUBJECT,
-                getString(R.string.text_share_subject)
+                getString(R.string.text_share_subject_dump)
                 + " (" + fileName + ")");
         startActivity(Intent.createChooser(sendIntent,
                 getText(R.string.dialog_share_title)));

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditorActivity.java
Patch:
@@ -20,6 +20,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Locale;
 
 import android.app.AlertDialog;
 import android.content.Context;
@@ -321,7 +322,7 @@ private int isValidDump() {
                         // Not 32 chars per line.
                         return 3;
                     }
-                    lines[j] = lines[j].toUpperCase();
+                    lines[j] = lines[j].toUpperCase(Locale.getDefault());
                     checkedLines.add(lines[j]);
                 }
             } else if (child instanceof TextView) {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/KeyEditorActivity.java
Patch:
@@ -20,6 +20,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Locale;
 
 import android.app.AlertDialog;
 import android.content.Context;
@@ -204,7 +205,7 @@ private int isValidKeyFile() {
 
             if (!lines[i].startsWith("#") && !lines[i].equals("")) {
                 // At least one key found.
-                lines[i] = lines[i].toUpperCase();
+                lines[i] = lines[i].toUpperCase(Locale.getDefault());
                 keyFound = true;
             }
         }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/ValueBlockToolActivity.java
Patch:
@@ -19,6 +19,7 @@
 package de.syss.MifareClassicTool.Activities;
 
 import java.nio.ByteBuffer;
+import java.util.Locale;
 
 import android.annotation.SuppressLint;
 import android.content.Context;
@@ -108,7 +109,8 @@ public void onEncode(View view) {
                 Integer.reverseBytes(~vbAsInt)).array());
         String addr = addrText;
         String addrInverted = Integer.toHexString(
-                ~Integer.parseInt(addr, 16)).toUpperCase().substring(6, 8);
+                ~Integer.parseInt(addr, 16)).toUpperCase(
+                        Locale.getDefault()).substring(6, 8);
         mVB.setText(vb + vbInverted + vb
                 + addr + addrInverted + addr + addrInverted);
 

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditorActivity.java
Patch:
@@ -518,8 +518,8 @@ public void onDecodeValueBlocks() {
                         vb += header + ", Block: " + blockCounter + s;
                         // Value Block.
                         vb += mLines[i] + s;
-                        blockCounter ++;
                     }
+                    blockCounter++;
                 }
             }
             Intent intent = new Intent(this, ValueBlocksToIntActivity.class);

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Common.java
Patch:
@@ -66,7 +66,7 @@ public class Common {
     /**
      * The directory name of the folder where temporary files are
      * stored. The directory will be cleaned during the creation of
-     * the main activity ({@link Activitys.MainActivity}).
+     * the main activity ({@link Activities.MainActivity}).
      * (sub directory of {@link #HOME_DIR}.)
      */
     public static final String TMP_DIR = "/tmp";

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/AccessConditionDecoderActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import android.os.Bundle;
 import android.text.SpannableString;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/BasicActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import android.app.Activity;
 import android.content.Intent;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/CreateKeyMapActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.io.File;
 import java.util.ArrayList;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/DumpEditorActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.io.File;
 import java.util.ArrayList;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/FileChooserActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.io.File;
 import java.io.IOException;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/HelpActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import android.os.Bundle;
 import android.webkit.WebView;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/HexToAsciiActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.io.UnsupportedEncodingException;
 

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/KeyEditorActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.io.File;
 import java.util.ArrayList;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/MainActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.io.File;
 

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/ReadTagActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import android.app.Activity;
 import android.content.Context;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/TagInfoToolActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.util.Arrays;
 

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/ValueBlockToolActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.nio.ByteBuffer;
 

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/ValueBlocksToIntActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.nio.ByteBuffer;
 

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activities/WriteTagActivity.java
Patch:
@@ -16,7 +16,7 @@
  */
 
 
-package de.syss.MifareClassicTool.Activitys;
+package de.syss.MifareClassicTool.Activities;
 
 import java.io.File;
 import java.util.ArrayList;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Common.java
Patch:
@@ -109,8 +109,8 @@ public enum Operations {
     private static byte[] mUID = null;
     /**
      * Just a global storage to save key maps generated by
-     * {@link Activitys.CreateKeyMapActivity}
-     * @see Activitys.CreateKeyMapActivity
+     * {@link Activities.CreateKeyMapActivity}
+     * @see Activities.CreateKeyMapActivity
      * @see MCReader#getKeyMap()
      */
     private static SparseArray<byte[][]> mKeyMap = null;
@@ -675,7 +675,7 @@ public static void setNfcAdapter(NfcAdapter nfcAdapter) {
     }
 
     /**
-     * Get the key map generated by {@link Activitys.CreateKeyMapActivity}.
+     * Get the key map generated by {@link Activities.CreateKeyMapActivity}.
      * @return A key map (see {@link MCReader#getKeyMap()}).
      */
     public static SparseArray<byte[][]> getKeyMap() {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -433,7 +433,7 @@ public String[] mergeSectorData(String[] firstResult,
      * For each of these positions you will get the write information
      * (see return values).
      * @param keyMap A key map a generated by
-     * {@link Activitys.CreateKeyMapActivity}.
+     * {@link Activities.CreateKeyMapActivity}.
      * @return A map within a map (all with type = Integer).
      * The key of the outer map is the sector number and the value is another
      * map with key = block number and value = write information.

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/DumpEditorActivity.java
Patch:
@@ -94,7 +94,6 @@ public class DumpEditorActivity extends BasicActivity {
      * Check whether to initialize the editor on a dump file or on
      * a new dump directly from {@link ReadTagActivity}.
      * (Also it will color the caption of the dump editor.)
-     * @see #initEditorByFile(File)
      * @see #initEditor(String[])
      */
     @Override

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -432,7 +432,8 @@ public String[] mergeSectorData(String[] firstResult,
      * @param pos A map of positions (key = sector, value = Array of blocks).
      * For each of these positions you will get the write information
      * (see return values).
-     * @param keyMap A key map a generated by {@link CreateKeyMapActivity}.
+     * @param keyMap A key map a generated by
+     * {@link Activitys.CreateKeyMapActivity}.
      * @return A map within a map (all with type = Integer).
      * The key of the outer map is the sector number and the value is another
      * map with key = block number and value = write information.

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/AccessConditionDecoderActivity.java
Patch:
@@ -64,7 +64,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         if (getIntent().hasExtra(EXTRA_AC)) {
             mLayout = (TableLayout) findViewById(
-                    R.id.TableLayoutAccessConditions);
+                    R.id.TableLayoutAccessConditionDecoder);
             String extra = getIntent().getStringExtra(EXTRA_AC);
             String[] accessConditions = extra.split(
                     System.getProperty("line.separator"));

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/TagInfoToolActivity.java
Patch:
@@ -54,9 +54,9 @@ public class TagInfoToolActivity extends BasicActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_tag_info);
+        setContentView(R.layout.activity_tag_info_tool);
 
-        mLayout = (LinearLayout) findViewById(R.id.LinearLayoutTagInfo);
+        mLayout = (LinearLayout) findViewById(R.id.LinearLayoutTagInfoTool);
         updateTagInfos(Common.getTag());
     }
 
@@ -177,7 +177,7 @@ private void updateTagInfos(Tag tag) {
             }
 
             LinearLayout layout = (LinearLayout) findViewById(
-                    R.id.LinearLayoutTagInfoSupport);
+                    R.id.LinearLayoutTagInfoToolSupport);
             // Check for Mifare Classic support.
             if (isMifareClassic) {
                 // Display Mifare Classic info.

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/WriteTagActivity.java
Patch:
@@ -251,7 +251,7 @@ private void writeBlock() {
         }
         // Error while writing? Maybe tag has default factory settings ->
         // try to write with key a (if there is one).
-        if ((result == 5 || result == -1) && keys[0] != null) {
+        if (result == -1 && keys[0] != null) {
             result = reader.writeBlock(sector, block,
                     Common.hexStringToByteArray(mDataText.getText().toString()),
                     keys[0], false);
@@ -264,7 +264,7 @@ private void writeBlock() {
             Toast.makeText(this, R.string.info_block_not_in_sector,
                     Toast.LENGTH_LONG).show();
             return;
-        case 5:
+        case -1:
             Toast.makeText(this, R.string.info_error_writing_block,
                     Toast.LENGTH_LONG).show();
             return;

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/MCReader.java
Patch:
@@ -254,7 +254,7 @@ public String[] readSector(int sectorIndex, byte[] key, boolean useAsKeyB)
      * <li>2 - Block index is out of range.</li>
      * <li>3 - Data are not 16 Byte.</li>
      * <li>4 - Authentication went wrong.</li>
-     * <li>5 - Error while writing to tag.</li>
+     * <li>-1 - Error while writing to tag.</li>
      * </ul>
      * @see #authenticate(int, byte[], boolean)
      */
@@ -278,7 +278,7 @@ public int writeBlock(int sectorIndex, int blockIndex, byte[] data,
             mMFC.writeBlock(block, data);
         } catch (IOException e) {
             Log.e(LOG_TAG, "Error while writing block to tag.", e);
-            return 5;
+            return -1;
         }
         return 0;
     }

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/TagInfoActivity.java
Patch:
@@ -120,7 +120,8 @@ private void updateTagInfos(Tag tag) {
             String uid = Common.byte2HexString(tag.getId());
             NfcA nfca = NfcA.get(tag);
             String atqa = Common.byte2HexString(nfca.getAtqa());
-            String sak = "" + nfca.getSak();
+            String sak = Common.byte2HexString(
+                    new byte[] {(byte)nfca.getSak()});
             int hc = getResources().getColor(R.color.light_green);
             genericInfo.setText(TextUtils.concat(
                     Common.colorString(getString(R.string.text_uid) + ":", hc),

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/BasicActivity.java
Patch:
@@ -62,7 +62,7 @@ public void onPause() {
     @Override
     public void onNewIntent(Intent intent) {
         if (Common.treatAsNewTag(intent, this) == 0) {
-            // Device does not support Mifare Classic.
+            // Device or tag does not support Mifare Classic.
             // Run the only thing that is possible: The tag info tool.
             Intent i = new Intent(this, TagInfoActivity.class);
             startActivity(i);

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/DumpEditorActivity.java
Patch:
@@ -253,6 +253,7 @@ public void onSaveDump() {
             new AlertDialog.Builder(this)
                 .setTitle(R.string.dialog_save_dump_title)
                 .setMessage(R.string.dialog_save_dump)
+                .setIcon(android.R.drawable.ic_menu_save)
                 .setView(input)
                 .setPositiveButton(R.string.button_ok,
                         new DialogInterface.OnClickListener() {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/KeyEditorActivity.java
Patch:
@@ -103,6 +103,7 @@ public void onSave(View view) {
             new AlertDialog.Builder(this)
                 .setTitle(R.string.dialog_save_keys_title)
                 .setMessage(R.string.dialog_save_keys)
+                .setIcon(android.R.drawable.ic_menu_save)
                 .setView(input)
                 .setPositiveButton(R.string.button_ok,
                         new DialogInterface.OnClickListener() {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/TagInfoActivity.java
Patch:
@@ -77,6 +77,7 @@ public void onReadMore(View view) {
         new AlertDialog.Builder(this)
         .setTitle(R.string.dialog_no_mfc_title)
         .setMessage(R.string.dialog_no_mfc)
+        .setIcon(android.R.drawable.ic_dialog_alert)
         .setPositiveButton(R.string.button_ok,
                 new DialogInterface.OnClickListener() {
             public void onClick(DialogInterface dialog, int which) {

File: Mifare Classic Tool/src/de/syss/MifareClassicTool/Activitys/MainActivity.java
Patch:
@@ -36,7 +36,7 @@
 import android.os.Environment;
 import android.provider.Settings;
 import android.text.TextUtils;
-import android.text.util.Linkify;
+import android.text.method.LinkMovementMethod;
 import android.util.Log;
 import android.view.View;
 import android.widget.Button;
@@ -82,6 +82,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         // Show App version and footer.
         TextView tv = (TextView) findViewById(R.id.textViewMainFooter);
+        tv.setMovementMethod(LinkMovementMethod.getInstance());
         try {
             String appVersion = getPackageManager().getPackageInfo(
                     getPackageName(), 0).versionName;
@@ -90,7 +91,6 @@ public void onCreate(Bundle savedInstanceState) {
         } catch (NameNotFoundException e) {
             Log.d(LOG_TAG, "Version not found.");
         }
-        Linkify.addLinks(tv, Linkify.ALL);
 
         // Check if there is an NFC hardware component.
         Common.setNfcAdapter(NfcAdapter.getDefaultAdapter(this));

