File: lucida/questionanswering/OpenEphyra/src/lucida/handler/KnowledgeBase.java
Patch:
@@ -130,7 +130,7 @@ public synchronized void addKnowledge(QuerySpec knowledge) throws Exception {
 				break;
 			case "unlearn":
 				for (int i = 0; i < q.data.size(); ++i) {
-					deleteDoc(env, q.data.get(i));
+					deleteDoc(env, q.tags.get(i));
 				}
 				break;
 			default:

File: lucida/questionanswering/OpenEphyra/src/lucida/handler/KnowledgeBase.java
Patch:
@@ -130,7 +130,7 @@ public synchronized void addKnowledge(QuerySpec knowledge) throws Exception {
 				break;
 			case "unlearn":
 				for (int i = 0; i < q.data.size(); ++i) {
-					deleteDoc(env, q.data.get(i));
+					deleteDoc(env, q.tags.get(i));
 				}
 				break;
 			default:

File: lucida/calendar/CalendarClient/CalendarClient.java
Patch:
@@ -27,7 +27,7 @@ public static void main(String [] args) {
 
 		// Query.
 		String LUCID = "Clinc";
-		String query_input_data = "What is on my Google calendar for this week?";
+		String query_input_data = "What is on my Google calendar for last week?";
 		QueryInput query_input = new QueryInput();
 		query_input.type = "query";
 		query_input.data = new ArrayList<String>();

File: lucida/calendar/CalendarClient/CalendarClient.java
Patch:
@@ -27,7 +27,7 @@ public static void main(String [] args) {
 
 		// Query.
 		String LUCID = "Clinc";
-		String query_input_data = "What is on my Google calendar for this week?";
+		String query_input_data = "What is on my Google calendar for last week?";
 		QueryInput query_input = new QueryInput();
 		query_input.type = "query";
 		query_input.data = new ArrayList<String>();

File: lucida/calendar/src/main/java/calendar/CAServiceHandler.java
Patch:
@@ -9,7 +9,8 @@
 
 import thrift.*;
 
-/** Implementation of the calendar interface. A client request to any
+/** 
+ * Implementation of the calendar interface. A client request to any
  * method defined in the thrift file is handled by the
  * corresponding method here.
  */
@@ -66,7 +67,7 @@ public String infer(String LUCID, QuerySpec query) {
 
 	    	String[] time_interval = TEXT_PROCESSOR.parse(query_data);
 
-	    	print(time_interval[0] + " " + time_interval[1]);
+	    	print("Result " + time_interval[0] + " " + time_interval[1]);
 
 	    	return time_interval[0] + " " + time_interval[1];
 

File: lucida/calendar/src/main/java/calendar/CAServiceHandler.java
Patch:
@@ -9,7 +9,8 @@
 
 import thrift.*;
 
-/** Implementation of the calendar interface. A client request to any
+/** 
+ * Implementation of the calendar interface. A client request to any
  * method defined in the thrift file is handled by the
  * corresponding method here.
  */
@@ -66,7 +67,7 @@ public String infer(String LUCID, QuerySpec query) {
 
 	    	String[] time_interval = TEXT_PROCESSOR.parse(query_data);
 
-	    	print(time_interval[0] + " " + time_interval[1]);
+	    	print("Result " + time_interval[0] + " " + time_interval[1]);
 
 	    	return time_interval[0] + " " + time_interval[1];
 

File: lucida/questionanswering/OpenEphyra/src/lucida/test/QAClient.java
Patch:
@@ -29,20 +29,20 @@ public static void main(String [] args) {
 		}
 		
 		// User.
-		String LUCID = "Falk";
+		String LUCID = "Clinc";
 		QuerySpec spec = new QuerySpec();
 		
 		// Knowledge.
 		final QueryInput knowledge_text = new QueryInput("text", new ArrayList<String>() {{
-		    add("YodaQA is being developed by Fauk.");
+		    add("Clinc is created by Jason and Lingjia.");
 		}});
 		QuerySpec knowledge = new QuerySpec(new ArrayList<QueryInput>() {{
 		    add(knowledge_text);
 		}});
 		
 		// Query.
 		final QueryInput query_input = new QueryInput("query", new ArrayList<String>() {{
-		    add("What is Falk developing?");
+		    add("Who created Clinc?");
 		}});
 		QuerySpec query = new QuerySpec(new ArrayList<QueryInput>() {{
 		    add(query_input);

File: lucida/questionanswering/OpenEphyra/src/lucida/test/QAClient.java
Patch:
@@ -29,20 +29,20 @@ public static void main(String [] args) {
 		}
 		
 		// User.
-		String LUCID = "Falk";
+		String LUCID = "Clinc";
 		QuerySpec spec = new QuerySpec();
 		
 		// Knowledge.
 		final QueryInput knowledge_text = new QueryInput("text", new ArrayList<String>() {{
-		    add("YodaQA is being developed by Fauk.");
+		    add("Clinc is created by Jason and Lingjia.");
 		}});
 		QuerySpec knowledge = new QuerySpec(new ArrayList<QueryInput>() {{
 		    add(knowledge_text);
 		}});
 		
 		// Query.
 		final QueryInput query_input = new QueryInput("query", new ArrayList<String>() {{
-		    add("What is Falk developing?");
+		    add("Who created Clinc?");
 		}});
 		QuerySpec query = new QuerySpec(new ArrayList<QueryInput>() {{
 		    add(query_input);

File: openephyra/src/info/ephyra/trec/OpenEphyraCorpus.java
Patch:
@@ -65,7 +65,7 @@ public static void main(String[] args) {
 		Logger.enableLogging(true);
 		
 		// initialize Ephyra and start command line interface
-		(new OpenEphyraCorpus()).commandLine();
+		(new OpenEphyraCorpus()).commandLine("");
 	}
 	
 	/**

