File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -2862,7 +2862,7 @@ public void run() {
                 final View view = getChildAt(motionPosition); // a fix by @pboos
 
                 if (view != null) {
-                    performItemClick(view, motionPosition + mFirstPosition, adapter.getItemId(motionPosition + mFirstPosition));
+                    performItemClick(view, motionPosition + mFirstPosition, adapter.getItemId(motionPosition));
                 }
             }
         }

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -528,6 +528,7 @@ protected void layoutChildren() {
 
             if (mAdapter == null) {
                 clearState();
+                invokeOnItemScrollListener();
                 return;
             }
 
@@ -551,6 +552,7 @@ protected void layoutChildren() {
             // and calling it a day
             if (mItemCount == 0) {
                 clearState();
+                invokeOnItemScrollListener();
                 return;
             }
             else if (mItemCount != mAdapter.getCount()) {
@@ -613,6 +615,7 @@ else if (mFirstPosition < mItemCount) {
             mDataChanged = false;
             mNeedSync = false;
             mLayoutMode = LAYOUT_NORMAL;
+            invokeOnItemScrollListener();
         } finally {
             mBlockLayoutRequests = false;
         }

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -2744,7 +2744,7 @@ public void run() {
                 final View view = getChildAt(motionPosition); // a fix by @pboos
 
                 if (view != null) {
-                    performItemClick(view, motionPosition + mFirstPosition, adapter.getItemId(motionPosition));
+                    performItemClick(view, motionPosition + mFirstPosition, adapter.getItemId(motionPosition + mFirstPosition));
                 }
             }
         }

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -2741,7 +2741,7 @@ public void run() {
                 final View view = getChildAt(motionPosition); // a fix by @pboos
 
                 if (view != null) {
-                    performItemClick(view, motionPosition + mFirstPosition, adapter.getItemId(motionPosition));
+                    performItemClick(view, motionPosition + mFirstPosition, adapter.getItemId(motionPosition + mFirstPosition));
                 }
             }
         }

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -267,9 +267,9 @@ public void setAdapter(final ListAdapter adapter) {
         mDataChanged = true;
         mItemCount = mAdapter != null ? mAdapter.getCount() : 0;
 
-        if (adapter != null) {
-            adapter.registerDataSetObserver(mObserver);
-            mRecycleBin.setViewTypeCount(adapter.getViewTypeCount());
+        if (mAdapter != null) {
+            mAdapter.registerDataSetObserver(mObserver);
+            mRecycleBin.setViewTypeCount(mAdapter.getViewTypeCount());
         }
 
         requestLayout();

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -265,7 +265,7 @@ public void setAdapter(final ListAdapter adapter) {
         }
 
         mDataChanged = true;
-        mItemCount = adapter != null ? adapter.getCount() : 0;
+        mItemCount = mAdapter != null ? mAdapter.getCount() : 0;
 
         if (adapter != null) {
             adapter.registerDataSetObserver(mObserver);

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -265,7 +265,7 @@ public void setAdapter(final ListAdapter adapter) {
         }
 
         mDataChanged = true;
-        mItemCount = adapter != null ? adapter.getCount() : 0;
+        mItemCount = mAdapter != null ? mAdapter.getCount() : 0;
 
         if (adapter != null) {
             adapter.registerDataSetObserver(mObserver);

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -231,9 +231,9 @@ public void setColumnCountLandscape(int columnCountLandscape) {
     }
     
     public void setColumnCount(int columnCount) {
-        mColumnCount = columnCount;
     	mColumnCountPortrait = columnCount;
     	mColumnCountLandscape = columnCount;
+        // mColumnCount set onSizeChanged();
     	onSizeChanged(getWidth(), getHeight());
     	requestLayoutChildren();
     }

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -234,6 +234,7 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {
 
     protected void onSizeChanged(int w, int h) {
     	if (getChildCount() > 0) {
+            stopFlingRunnable();
             mDataChanged = true;
             rememberSyncState();
         }

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -1244,6 +1244,7 @@ public void onRestoreInstanceState(Parcelable state) {
         GridListSavedState ss = (GridListSavedState) state;
         mColumnCount = ss.columnCount;
         mColumnTops = ss.columnTops;
+        mColumnBottoms = new int[mColumnCount];
         mPositionData = ss.positionData;
         mNeedSync = true;
         super.onRestoreInstanceState(ss);

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -1244,6 +1244,7 @@ public void onRestoreInstanceState(Parcelable state) {
         GridListSavedState ss = (GridListSavedState) state;
         mColumnCount = ss.columnCount;
         mColumnTops = ss.columnTops;
+        mColumnBottoms = new int[mColumnCount];
         mPositionData = ss.positionData;
         mNeedSync = true;
         super.onRestoreInstanceState(ss);

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -81,6 +81,7 @@ public abstract class ExtendableListView extends AbsListView {
     private int mLayoutMode;
 
     private int mTouchMode;
+    private int mScrollState = OnScrollListener.SCROLL_STATE_IDLE;
 
     // Rectangle used for hit testing children
     // private Rect mTouchFrame;
@@ -1996,8 +1997,8 @@ public void setOnScrollListener(OnScrollListener scrollListener) {
     }
 
     void reportScrollStateChange(int newState) {
-        if (newState != mTouchMode) {
-            mTouchMode = newState;
+        if (newState != mScrollState) {
+            mScrollState = newState;
             if (mOnScrollListener != null) {
                 mOnScrollListener.onScrollStateChanged(this, newState);
             }

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -624,7 +624,6 @@ protected void handleDataChanged() {
 
             mLayoutMode = LAYOUT_SYNC;
             mSyncPosition = Math.min(Math.max(0, mSyncPosition), count - 1);
-            if (mSyncPosition == 0) mLayoutMode = LAYOUT_FORCE_TOP;
             return;
         }
 

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -40,15 +40,15 @@ public class StaggeredGridView extends ExtendableListView {
     private static final String TAG = "StaggeredGridView";
     private static final boolean DBG = false;
 
-    private static final int DEFAUlT_COLUMNS_PORTRAIT = 2;
+    private static final int DEFAULT_COLUMNS_PORTRAIT = 2;
     private static final int DEFAULT_COLUMNS_LANDSCAPE = 3;
 
     private int mColumnCount;
     private int mItemMargin;
     private int mColumnWidth;
     private boolean mNeedSync;
 
-    private int mColumnCountPortrait = DEFAUlT_COLUMNS_PORTRAIT;
+    private int mColumnCountPortrait = DEFAULT_COLUMNS_PORTRAIT;
     private int mColumnCountLandscape = DEFAULT_COLUMNS_LANDSCAPE;
 
     /**
@@ -154,7 +154,7 @@ public StaggeredGridView(final Context context, final AttributeSet attrs, final
 
             mColumnCountPortrait = typedArray.getInteger(
                     R.styleable.StaggeredGridView_column_count_portrait,
-                    DEFAUlT_COLUMNS_PORTRAIT);
+                    DEFAULT_COLUMNS_PORTRAIT);
             mColumnCountLandscape = typedArray.getInteger(
                     R.styleable.StaggeredGridView_column_count_landscape,
                     DEFAULT_COLUMNS_LANDSCAPE);

File: sample/src/main/java/com/etsy/android/sample/SampleAdapter.java
Patch:
@@ -1,6 +1,9 @@
 package com.etsy.android.sample;
 
 
+import java.util.ArrayList;
+import java.util.Random;
+
 import android.content.Context;
 import android.util.Log;
 import android.util.SparseArray;
@@ -13,9 +16,6 @@
 
 import com.etsy.android.grid.util.DynamicHeightTextView;
 
-import java.util.ArrayList;
-import java.util.Random;
-
 /***
  * ADAPTER
  */

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -40,15 +40,15 @@ public class StaggeredGridView extends ExtendableListView {
     private static final String TAG = "StaggeredGridView";
     private static final boolean DBG = false;
 
-    private static final int DEFAUlT_COLUMNS_PORTRAIT = 2;
+    private static final int DEFAULT_COLUMNS_PORTRAIT = 2;
     private static final int DEFAULT_COLUMNS_LANDSCAPE = 3;
 
     private int mColumnCount;
     private int mItemMargin;
     private int mColumnWidth;
     private boolean mNeedSync;
 
-    private int mColumnCountPortrait = DEFAUlT_COLUMNS_PORTRAIT;
+    private int mColumnCountPortrait = DEFAULT_COLUMNS_PORTRAIT;
     private int mColumnCountLandscape = DEFAULT_COLUMNS_LANDSCAPE;
 
     /**
@@ -154,7 +154,7 @@ public StaggeredGridView(final Context context, final AttributeSet attrs, final
 
             mColumnCountPortrait = typedArray.getInteger(
                     R.styleable.StaggeredGridView_column_count_portrait,
-                    DEFAUlT_COLUMNS_PORTRAIT);
+                    DEFAULT_COLUMNS_PORTRAIT);
             mColumnCountLandscape = typedArray.getInteger(
                     R.styleable.StaggeredGridView_column_count_landscape,
                     DEFAULT_COLUMNS_LANDSCAPE);

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -945,7 +945,7 @@ private boolean onTouchUpTap(final MotionEvent event) {
             mPerformClick = new PerformClick();
         }
         final int motionPosition = mMotionPosition;
-        if (!mDataChanged && motionPosition > 0 && mAdapter.isEnabled(motionPosition)) {
+        if (!mDataChanged && motionPosition >= 0 && mAdapter.isEnabled(motionPosition)) {
             final PerformClick performClick = mPerformClick;
             performClick.mClickMotionPosition = motionPosition;
             performClick.rememberWindowAttachCount();

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -945,7 +945,7 @@ private boolean onTouchUpTap(final MotionEvent event) {
             mPerformClick = new PerformClick();
         }
         final int motionPosition = mMotionPosition;
-        if (!mDataChanged && motionPosition > 0 && mAdapter.isEnabled(motionPosition)) {
+        if (!mDataChanged && motionPosition >= 0 && mAdapter.isEnabled(motionPosition)) {
             final PerformClick performClick = mPerformClick;
             performClick.mClickMotionPosition = motionPosition;
             performClick.rememberWindowAttachCount();

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -16,8 +16,6 @@
 
 package com.etsy.android.grid;
 
-import java.util.Arrays;
-
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.os.Parcel;
@@ -28,6 +26,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 
+import java.util.Arrays;
+
 /**
  * A staggered grid view which supports multiple columns with rows of varying sizes.
  * <p/>
@@ -264,7 +264,7 @@ protected void onMeasureChild(final View child, final LayoutParams layoutParams)
                 childHeightSpec = MeasureSpec.makeMeasureSpec(layoutParams.height, MeasureSpec.EXACTLY);
             }
             else {
-                childHeightSpec = MeasureSpec.makeMeasureSpec(LayoutParams.WRAP_CONTENT, MeasureSpec.EXACTLY);
+                childHeightSpec = MeasureSpec.makeMeasureSpec(LayoutParams.WRAP_CONTENT, MeasureSpec.UNSPECIFIED);
             }
             child.measure(childWidthSpec, childHeightSpec);
         }

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -16,8 +16,6 @@
 
 package com.etsy.android.grid;
 
-import java.util.Arrays;
-
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.os.Parcel;
@@ -28,6 +26,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 
+import java.util.Arrays;
+
 /**
  * A staggered grid view which supports multiple columns with rows of varying sizes.
  * <p/>
@@ -264,7 +264,7 @@ protected void onMeasureChild(final View child, final LayoutParams layoutParams)
                 childHeightSpec = MeasureSpec.makeMeasureSpec(layoutParams.height, MeasureSpec.EXACTLY);
             }
             else {
-                childHeightSpec = MeasureSpec.makeMeasureSpec(LayoutParams.WRAP_CONTENT, MeasureSpec.EXACTLY);
+                childHeightSpec = MeasureSpec.makeMeasureSpec(LayoutParams.WRAP_CONTENT, MeasureSpec.UNSPECIFIED);
             }
             child.measure(childWidthSpec, childHeightSpec);
         }

File: library/src/main/java/com/etsy/android/grid/ExtendableListView.java
Patch:
@@ -1883,6 +1883,7 @@ private class FlingRunnable implements Runnable {
         void start(int initialVelocity) {
             int initialY = initialVelocity < 0 ? Integer.MAX_VALUE : 0;
             mLastFlingY = initialY;
+            mScroller.forceFinished(true);
             mScroller.fling(0, initialY, 0, initialVelocity, 0, Integer.MAX_VALUE, 0, Integer.MAX_VALUE);
             mTouchMode = TOUCH_MODE_FLINGING;
             postOnAnimate(this);

File: library/src/main/java/com/etsy/android/grid/util/DynamicHeightImageView.java
Patch:
@@ -2,12 +2,13 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 /**
  * An {@link android.widget.ImageView} layout that maintains a consistent width to height aspect ratio.
  */
-public class DynamicHeightImageView extends TextView {
+public class DynamicHeightImageView extends ImageView {
 
     private double mHeightRatio;
 

File: library/src/main/java/com/etsy/android/grid/StaggeredGridView.java
Patch:
@@ -777,7 +777,8 @@ protected void onChildrenDetached(final int start, final int count) {
             final View child = getChildAt(i);
             if (child != null) {
                 final LayoutParams childParams = (LayoutParams) child.getLayoutParams();
-                if (childParams.viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER) {
+                if (childParams.viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER &&
+                        childParams instanceof GridLayoutParams) {
                     GridLayoutParams layoutParams = (GridLayoutParams) childParams;
                     int column = layoutParams.column;
                     int position = layoutParams.position;

