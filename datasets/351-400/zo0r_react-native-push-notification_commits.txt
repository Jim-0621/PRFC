File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -107,7 +107,7 @@ private PendingIntent toScheduleNotificationIntent(Bundle bundle) {
             notificationIntent.putExtra(RNPushNotificationPublisher.NOTIFICATION_ID, notificationID);
             notificationIntent.putExtras(bundle);
 
-            return PendingIntent.getBroadcast(context, notificationID, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+            return PendingIntent.getBroadcast(context, notificationID, notificationIntent, Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE : PendingIntent.FLAG_UPDATE_CURRENT);
         } catch (Exception e) {
             Log.e(LOG_TAG, "Unable to parse Notification ID", e);
         }
@@ -451,7 +451,7 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
             int notificationID = Integer.parseInt(notificationIdString);
 
             PendingIntent pendingIntent = PendingIntent.getActivity(context, notificationID, intent,
-                    PendingIntent.FLAG_UPDATE_CURRENT);
+                    Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE : PendingIntent.FLAG_UPDATE_CURRENT);
 
             NotificationManager notificationManager = notificationManager();
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -107,7 +107,7 @@ private PendingIntent toScheduleNotificationIntent(Bundle bundle) {
             notificationIntent.putExtra(RNPushNotificationPublisher.NOTIFICATION_ID, notificationID);
             notificationIntent.putExtras(bundle);
 
-            return PendingIntent.getBroadcast(context, notificationID, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+            return PendingIntent.getBroadcast(context, notificationID, notificationIntent, Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE : PendingIntent.FLAG_UPDATE_CURRENT);
         } catch (Exception e) {
             Log.e(LOG_TAG, "Unable to parse Notification ID", e);
         }
@@ -451,7 +451,7 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
             int notificationID = Integer.parseInt(notificationIdString);
 
             PendingIntent pendingIntent = PendingIntent.getActivity(context, notificationID, intent,
-                    PendingIntent.FLAG_UPDATE_CURRENT);
+                    Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE : PendingIntent.FLAG_UPDATE_CURRENT);
 
             NotificationManager notificationManager = notificationManager();
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -649,13 +649,13 @@ private int getRepeatField(String repeatType) {
                 return Calendar.MONTH;
             case "week":
                 return Calendar.WEEK_OF_YEAR;
-            case "day":
-            default:
-                return Calendar.DATE;
             case "hour":
                 return Calendar.HOUR;
             case "minute":
                 return Calendar.MINUTE;
+            case "day":
+            default:
+                return Calendar.DATE;
         }
     }
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -866,8 +866,8 @@ private boolean checkOrCreateChannel(NotificationManager manager, String channel
           channel == null && channel_name != null && channel_description != null ||
           channel != null &&
           (
-            channel_name != null && !channel.getName().equals(channel_name) ||
-            channel_description != null && !channel.getDescription().equals(channel_description)
+            channel_name != null && !channel_name.equals(channel.getName()) ||
+            channel_description != null && !channel_description.equals(channel.getDescription())
           )
         ) {
             // If channel doesn't exist create a new one.

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -446,7 +446,7 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
                 if (vibration == 0)
                     vibration = DEFAULT_VIBRATION;
 
-                vibratePattern = new long[]{0, vibration};
+                vibratePattern = new long[]{vibration};
 
                 notification.setVibrate(vibratePattern); 
             }
@@ -908,7 +908,7 @@ public boolean createChannel(ReadableMap channelInfo) {
         String soundName = channelInfo.hasKey("soundName") ? channelInfo.getString("soundName") : "default";
         int importance = channelInfo.hasKey("importance") ? channelInfo.getInt("importance") : 4;
         boolean vibrate = channelInfo.hasKey("vibrate") && channelInfo.getBoolean("vibrate");
-        long[] vibratePattern = vibrate ? new long[] { DEFAULT_VIBRATION } : null;
+        long[] vibratePattern = vibrate ? new long[] { 0, DEFAULT_VIBRATION } : null;
 
         NotificationManager manager = notificationManager();
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -908,7 +908,7 @@ public boolean createChannel(ReadableMap channelInfo) {
         String soundName = channelInfo.hasKey("soundName") ? channelInfo.getString("soundName") : "default";
         int importance = channelInfo.hasKey("importance") ? channelInfo.getInt("importance") : 4;
         boolean vibrate = channelInfo.hasKey("vibrate") && channelInfo.getBoolean("vibrate");
-        long[] vibratePattern = vibrate ? new long[] { DEFAULT_VIBRATION } : null;
+        long[] vibratePattern = vibrate ? new long[] { 0, DEFAULT_VIBRATION } : null;
 
         NotificationManager manager = notificationManager();
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java
Patch:
@@ -157,9 +157,9 @@ private RNPushNotificationAttributes(JSONObject jsonObject) {
             tag = jsonObject.has(TAG) ? jsonObject.getString(TAG) : null;
             repeatType = jsonObject.has(REPEAT_TYPE) ? jsonObject.getString(REPEAT_TYPE) : null;
             repeatTime = jsonObject.has(REPEAT_TIME) ? jsonObject.getDouble(REPEAT_TIME) : 0.0;
-            when = jsonObject.has(WHEN) ? jsonObject.getDouble(WHEN) : null;
+            when = jsonObject.has(WHEN) ? jsonObject.getDouble(WHEN) : -1;
             usesChronometer = jsonObject.has(USES_CHRONOMETER) ? jsonObject.getBoolean(USES_CHRONOMETER) : false;
-            timeoutAfter = jsonObject.has(TIMEOUT_AFTER) ? jsonObject.getDouble(TIMEOUT_AFTER) : null;
+            timeoutAfter = jsonObject.has(TIMEOUT_AFTER) ? jsonObject.getDouble(TIMEOUT_AFTER) : -1;
             onlyAlertOnce = jsonObject.has(ONLY_ALERT_ONCE) ? jsonObject.getBoolean(ONLY_ALERT_ONCE) : false;
             ongoing = jsonObject.has(ONGOING) ? jsonObject.getBoolean(ONGOING) : false;
             allowWhileIdle = jsonObject.has(ALLOW_WHILE_IDLE) ? jsonObject.getBoolean(ALLOW_WHILE_IDLE) : false;

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -457,14 +457,14 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
  
               Long timeoutAfter = (long) bundle.getDouble("timeoutAfter");
   
-              if (timeoutAfter != null) {
+              if (timeoutAfter != null && timeoutAfter >= 0) {
                 notification.setTimeoutAfter(timeoutAfter);
               }
             }
 
             Long when = (long) bundle.getDouble("when");
   
-            if (when != null) {
+            if (when != null && when >= 0) {
               notification.setWhen(when);
             }
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java
Patch:
@@ -165,9 +165,9 @@ private RNPushNotificationAttributes(JSONObject jsonObject) {
             tag = jsonObject.has(TAG) ? jsonObject.getString(TAG) : null;
             repeatType = jsonObject.has(REPEAT_TYPE) ? jsonObject.getString(REPEAT_TYPE) : null;
             repeatTime = jsonObject.has(REPEAT_TIME) ? jsonObject.getDouble(REPEAT_TIME) : 0.0;
-            when = jsonObject.has(WHEN) ? jsonObject.getDouble(WHEN) : null;
+            when = jsonObject.has(WHEN) ? jsonObject.getDouble(WHEN) : -1;
             usesChronometer = jsonObject.has(USES_CHRONOMETER) ? jsonObject.getBoolean(USES_CHRONOMETER) : false;
-            timeoutAfter = jsonObject.has(TIMEOUT_AFTER) ? jsonObject.getDouble(TIMEOUT_AFTER) : null;
+            timeoutAfter = jsonObject.has(TIMEOUT_AFTER) ? jsonObject.getDouble(TIMEOUT_AFTER) : -1;
             onlyAlertOnce = jsonObject.has(ONLY_ALERT_ONCE) ? jsonObject.getBoolean(ONLY_ALERT_ONCE) : false;
             ongoing = jsonObject.has(ONGOING) ? jsonObject.getBoolean(ONGOING) : false;
             allowWhileIdle = jsonObject.has(ALLOW_WHILE_IDLE) ? jsonObject.getBoolean(ALLOW_WHILE_IDLE) : false;

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -501,14 +501,14 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
  
               Long timeoutAfter = (long) bundle.getDouble("timeoutAfter");
   
-              if (timeoutAfter != null) {
+              if (timeoutAfter != null && timeoutAfter >= 0) {
                 notification.setTimeoutAfter(timeoutAfter);
               }
             }
 
             Long when = (long) bundle.getDouble("when");
   
-            if (when != null) {
+            if (when != null && when >= 0) {
               notification.setWhen(when);
             }
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPublisher.java
Patch:
@@ -39,8 +39,6 @@ private void handleLocalNotification(Context context, Bundle bundle) {
 
         Application applicationContext = (Application) context.getApplicationContext();
         RNPushNotificationHelper pushNotificationHelper = new RNPushNotificationHelper(applicationContext);
-
-        boolean isForeground = pushNotificationHelper.isApplicationInForeground();
         
         Log.v(LOG_TAG, "sendNotification: " + bundle);
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java
Patch:
@@ -72,7 +72,6 @@ public class RNPushNotificationAttributes {
     private final String group;
     private final boolean groupSummary;
     private final String messageId;
-    private final boolean userInteraction;
     private final boolean playSound;
     private final boolean vibrate;
     private final double vibration;
@@ -333,7 +332,6 @@ public String toString() {
                 ", group='" + group + '\'' +
                 ", groupSummary='" + groupSummary + '\'' +
                 ", messageId='" + messageId + '\'' +
-                ", userInteraction=" + userInteraction +
                 ", playSound=" + playSound +
                 ", vibrate=" + vibrate +
                 ", vibration=" + vibration +

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPublisher.java
Patch:
@@ -40,7 +40,7 @@ private void handleLocalNotification(Context context, Bundle bundle) {
         Application applicationContext = (Application) context.getApplicationContext();
         RNPushNotificationHelper pushNotificationHelper = new RNPushNotificationHelper(applicationContext);
 
-        boolean isForeground = pushNotificationHelper.isApplicationInForeground(applicationContext);
+        boolean isForeground = pushNotificationHelper.isApplicationInForeground();
         
         Log.v(LOG_TAG, "sendNotification: " + bundle);
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java
Patch:
@@ -89,8 +89,6 @@ private Bundle getBundleFromIntent(Intent intent) {
     public void onNewIntent(Intent intent) {
         Bundle bundle = this.getBundleFromIntent(intent);
         if (bundle != null) {
-            bundle.putBoolean("foreground", false);
-            intent.putExtra("notification", bundle);
             mJsDelivery.notifyNotification(bundle);
         }
     }

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -422,6 +422,7 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
 
             Intent intent = new Intent(context, intentClass);
             intent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
+            bundle.putBoolean("foreground", this.isApplicationInForeground());
             bundle.putBoolean("userInteraction", true);
             intent.putExtra("notification", bundle);
 
@@ -583,7 +584,7 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
                 editor.apply();
             }
 
-            if (!(this.isApplicationInForeground(context) && bundle.getBoolean("ignoreInForeground"))) {
+            if (!(this.isApplicationInForeground() && bundle.getBoolean("ignoreInForeground"))) {
                 Notification info = notification.build();
                 info.defaults |= Notification.DEFAULT_LIGHTS;
 
@@ -938,7 +939,7 @@ private void checkOrCreateChannel(NotificationManager manager, String channel_id
         }
     }
     
-    public boolean isApplicationInForeground(Context context) {
+    public boolean isApplicationInForeground() {
         ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
         List<RunningAppProcessInfo> processInfos = activityManager.getRunningAppProcesses();
         if (processInfos != null) {

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPublisher.java
Patch:
@@ -40,7 +40,7 @@ private void handleLocalNotification(Context context, Bundle bundle) {
         Application applicationContext = (Application) context.getApplicationContext();
         RNPushNotificationHelper pushNotificationHelper = new RNPushNotificationHelper(applicationContext);
 
-        boolean isForeground = pushNotificationHelper.isApplicationInForeground(applicationContext);
+        boolean isForeground = pushNotificationHelper.isApplicationInForeground();
         
         Log.v(LOG_TAG, "sendNotification: " + bundle);
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -952,7 +952,7 @@ public boolean createChannel(ReadableMap channelInfo) {
         String channelDesc = channelInfo.hasKey("channelDesc") ? channelInfo.getString("channelDesc") : null;
         String soundName = channelInfo.hasKey("soundName") ? channelInfo.getString("soundName") : "default";
         int importance = channelInfo.hasKey("importance") ? channelInfo.getInt("importance") : 4;
-        boolean vibrate = channelInfo.hasKey("importance") && channelInfo.getBoolean("vibrate");
+        boolean vibrate = channelInfo.hasKey("vibrate") && channelInfo.getBoolean("vibrate");
         long[] vibratePattern = vibrate ? new long[] { DEFAULT_VIBRATION } : null;
 
         NotificationManager manager = notificationManager();

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationBootEventReceiver.java
Patch:
@@ -20,7 +20,7 @@ public class RNPushNotificationBootEventReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
         Log.i(LOG_TAG, "RNPushNotificationBootEventReceiver loading scheduled notifications");
 
-        if (intent.getAction().equals("android.intent.action.BOOT_COMPLETED")) {
+        if ("android.intent.action.BOOT_COMPLETED".equals(intent.getAction())) {
             SharedPreferences sharedPreferences = context.getSharedPreferences(RNPushNotificationHelper.PREFERENCES_KEY, Context.MODE_PRIVATE);
             Set<String> ids = sharedPreferences.getAll().keySet();
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java
Patch:
@@ -7,7 +7,6 @@
 import android.os.Looper;
 import android.util.Log;
 
-import com.dieam.reactnativepushnotification.modules.RNReceivedMessageHandler;
 import com.facebook.react.ReactApplication;
 import com.facebook.react.ReactInstanceManager;
 import com.facebook.react.bridge.Arguments;
@@ -30,7 +29,7 @@ public void onNewToken(String token) {
         handler.post(new Runnable() {
             public void run() {
                 // Construct and load our normal React JS code bundle
-                ReactInstanceManager mReactInstanceManager = ((ReactApplication) getApplication()).getReactNativeHost().getReactInstanceManager();
+                final ReactInstanceManager mReactInstanceManager = ((ReactApplication) getApplication()).getReactNativeHost().getReactInstanceManager();
                 ReactContext context = mReactInstanceManager.getCurrentReactContext();
                 // If it's constructed, send a notification
                 if (context != null) {
@@ -40,6 +39,7 @@ public void run() {
                     mReactInstanceManager.addReactInstanceEventListener(new ReactInstanceManager.ReactInstanceEventListener() {
                         public void onReactContextInitialized(ReactContext context) {
                             handleNewToken((ReactApplicationContext) context, deviceToken);
+                            mReactInstanceManager.removeReactInstanceEventListener(this);
                         }
                     });
                     if (!mReactInstanceManager.hasStartedCreatingInitialContext()) {

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -545,6 +545,7 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB
 
 
                     Intent actionIntent = new Intent(context, RNPushNotificationActions.class);
+                    actionIntent.setAction(packageName + ".ACTION_" + i);
 
                     actionIntent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationJsDelivery.java
Patch:
@@ -4,7 +4,7 @@
 import android.os.Bundle;
 
 import com.facebook.react.bridge.Arguments;
-import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContext;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.modules.core.DeviceEventManagerModule;
 
@@ -18,9 +18,9 @@
  */
 
 public class RNPushNotificationJsDelivery {
-    private ReactApplicationContext mReactContext;
+    private ReactContext mReactContext;
 
-    public RNPushNotificationJsDelivery(ReactApplicationContext reactContext) {
+    public RNPushNotificationJsDelivery(ReactContext reactContext) {
         mReactContext = reactContext;
     }
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationConfig.java
Patch:
@@ -34,7 +34,7 @@ private String getStringValue(String key, String defaultValue) {
         try {
             final String value = metadata.getString(key);
 
-            if (value != null && name.length() > 0) {
+            if (value != null && value.length() > 0) {
                 return value;
             }
         } catch (Exception e) {

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -719,7 +719,7 @@ private void checkOrCreateChannel(NotificationManager manager, String channel_id
             if (soundUri != null) {
                 AudioAttributes audioAttributes = new AudioAttributes.Builder()
                         .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)
-                        .setUsage(AudioAttributes.USAGE_ALARM)
+                        .setUsage(AudioAttributes.USAGE_NOTIFICATION)
                         .build();
 
                 channel.setSound(soundUri, audioAttributes);

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -670,9 +670,9 @@ public void checkOrCreateDefaultChannel() {
 
       int importance = NotificationManager.IMPORTANCE_HIGH;
 
-      String channel_id = NOTIFICATION_CHANNEL_ID + "-" + importance;
+      String channel_id = NOTIFICATION_CHANNEL_ID + "-" + importance + "-" + DEFAULT_VIBRATION;
 
-      checkOrCreateChannel(manager, channel_id, null, importance, new long[] {0});
+      checkOrCreateChannel(manager, channel_id, null, importance, new long[] {0, DEFAULT_VIBRATION});
     }
 
     private void checkOrCreateChannel(NotificationManager manager, String channel_id, Uri soundUri, int importance, long[] vibratePattern) {

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -331,8 +331,6 @@ public void sendToNotificationCentre(Bundle bundle) {
 
                         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) { // API 26 and higher
                             channel_id = channel_id + "-" + soundName;
-
-                            notification.setChannelId(channel_id);
                         }
                     }
                 }
@@ -383,6 +381,7 @@ public void sendToNotificationCentre(Bundle bundle) {
 
             checkOrCreateChannel(notificationManager, channel_id, soundUri, priority, vibratePattern);
 
+            notification.setChannelId(channel_id);
             notification.setContentIntent(pendingIntent);
 
             JSONArray actionsArray = null;

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java
Patch:
@@ -56,6 +56,8 @@ public RNPushNotification(ReactApplicationContext reactContext) {
         mJsDelivery = new RNPushNotificationJsDelivery(reactContext);
 
         registerNotificationsRegistration();
+
+        mRNPushNotificationHelper.checkOrCreateDefaultChannel();
     }
 
     @Override

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -17,6 +17,7 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Color;
+import android.media.AudioAttributes;
 import android.media.RingtoneManager;
 import android.net.Uri;
 import android.os.Build;
@@ -216,7 +217,7 @@ public void sendToNotificationCentre(Bundle bundle) {
                 }
             }
 
-            Strint channel_id = NOTIFICATION_CHANNEL_ID;
+            String channel_id = NOTIFICATION_CHANNEL_ID;
 
             NotificationCompat.Builder notification = new NotificationCompat.Builder(context, channel_id)
                     .setContentTitle(title)

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -380,7 +380,8 @@ public void sendToGroupNotifications(Bundle bundle)
             .setSmallIcon(smallIconResId)
             .setStyle(new NotificationCompat.InboxStyle()
               .setBigContentTitle(hashMapDialogsToMessages.getCountOfMessage() + " new messages")
-              .setSummaryText(hashMapDialogsToMessages.getCountOfMessage() + " new messages from " + hashMapDialogsToMessages.getCountOfDialogs() + " chats"))
+              .setSummaryText(hashMapDialogsToMessages.getCountOfMessage() + " new messages from " +
+                  (hashMapDialogsToMessages.getCountOfDialogs() == 1 ?  "1 chat" : hashMapDialogsToMessages.getCountOfDialogs() + " chats")))
             .setGroup(NOTIFICATION_GROUP_ID)
             .setGroupSummary(true)
             .setContentIntent(pendingIntentContent)

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -191,8 +191,7 @@ public void sendToGroupNotifications(Bundle bundle)
         }
 
         String sender = bundle.getString("sender");
-        Double sender_id_double = bundle.getDouble("sender_id");
-        String sender_id = sender_id_double.toString();
+        String sender_id = bundle.getString("sender_id");
 
         if (sender_id == null) {
           // this happens when a 'data' notification is received - we do not synthesize a local notification in this case

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java
Patch:
@@ -29,7 +29,7 @@ public void onMessageReceived(String from, final Bundle bundle) {
         JSONObject data = getPushData(bundle.getString("data"));
         if (data != null) {
             if (!bundle.containsKey("message")) {
-                bundle.putString("message", data.optString("alert", "Notification received"));
+                bundle.putString("message", data.optString("alert", null));
             }
             if (!bundle.containsKey("title")) {
                 bundle.putString("title", data.optString("title", null));

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java
Patch:
@@ -29,7 +29,7 @@ public void onMessageReceived(String from, final Bundle bundle) {
         JSONObject data = getPushData(bundle.getString("data"));
         if (data != null) {
             if (!bundle.containsKey("message")) {
-                bundle.putString("message", data.optString("alert", "Notification received"));
+                bundle.putString("message", data.optString("alert", null));
             }
             if (!bundle.containsKey("title")) {
                 bundle.putString("title", data.optString("title", null));

File: android/src/main/java/com/dieam/reactnativepushnotification/ReactNativePushNotificationPackage.java
Patch:
@@ -17,7 +17,6 @@ public List<NativeModule> createNativeModules(
         return Collections.<NativeModule>singletonList(new RNPushNotification(reactContext));
     }
 
-    @Override
     public List<Class<? extends JavaScriptModule>> createJSModules() {
         return Collections.emptyList();
     }

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java
Patch:
@@ -6,7 +6,6 @@
 
 import com.facebook.react.bridge.ReadableMap;
 import com.facebook.react.bridge.ReadableMapKeySetIterator;
-import com.facebook.react.bridge.ReadableType;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -126,7 +125,7 @@ public static RNPushNotificationAttributes fromJson(String notificationAttribute
 
     /**
      * User to find notifications:
-     *
+     * <p>
      * https://github.com/facebook/react-native/blob/master/Libraries/PushNotificationIOS/RCTPushNotificationManager.m#L294
      *
      * @param userInfo map of fields to match

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -419,7 +419,7 @@ public void cancelScheduledNotification(ReadableMap userInfo) {
                 String notificationAttributesJson = scheduledNotificationsPersistence.getString(id, null);
                 if (notificationAttributesJson != null) {
                     RNPushNotificationAttributes notificationAttributes = fromJson(notificationAttributesJson);
-                    if(notificationAttributes.matches(userInfo)) {
+                    if (notificationAttributes.matches(userInfo)) {
                         cancelScheduledNotification(id);
                     }
                 }

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationJsDelivery.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.os.Build;
 import android.os.Bundle;
-import android.util.Log;
 
 import com.facebook.react.bridge.Arguments;
 import com.facebook.react.bridge.ReactApplicationContext;
@@ -14,8 +13,6 @@
 
 import java.util.Set;
 
-import static com.dieam.reactnativepushnotification.modules.RNPushNotification.LOG_TAG;
-
 /**
  * Created by lambert on 2016/10/09.
  */

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java
Patch:
@@ -44,6 +44,7 @@ public RNPushNotification(ReactApplicationContext reactContext) {
         mRandomNumberGenerator = new Random(System.currentTimeMillis());
         registerNotificationsRegistration();
         registerNotificationsReceiveNotification();
+        registerNotificationsRemoteFetch();
     }
 
     @Override

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -17,7 +17,7 @@
 import android.util.Log;
 
 public class RNPushNotificationHelper {
-    private static final long DEFAULT_VIBRATION = 1000L;
+    private static final long DEFAULT_VIBRATION = 300L;
     private static final String TAG = RNPushNotificationHelper.class.getSimpleName();
 
     private Context mContext;
@@ -187,8 +187,8 @@ public void sendNotification(Bundle bundle) {
                 Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
                 notification.setSound(defaultSoundUri);
             }
-
-            if (bundle.containsKey("ongoing")) {
+            
+            if (bundle.containsKey("ongoing") || bundle.getBoolean("ongoing")) {
                 notification.setOngoing(bundle.getBoolean("ongoing"));
             }
 

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java
Patch:
@@ -61,7 +61,6 @@ private void sendEvent(String eventName, Object params) {
         }
     }
 
-    @Override
     public void onNewIntent(Intent intent) {
         if (intent.hasExtra("notification")) {
             Bundle bundle = intent.getBundleExtra("notification");

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -261,7 +261,7 @@ public void sendNotification(Bundle bundle) {
 
             JSONArray actionsArray = null;
             try {
-                actionsArray = new JSONArray(bundle.getString("actions"));
+                actionsArray = bundle.getString("actions") != null ? new JSONArray(bundle.getString("actions")) : null;
             } catch (JSONException e) {
                 Log.e("RNPushNotification", "Exception while converting actions to JSON object.", e);
             }

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -17,7 +17,7 @@
 import android.util.Log;
 
 public class RNPushNotificationHelper {
-    private static final long DEFAULT_VIBRATION = 1000L;
+    private static final long DEFAULT_VIBRATION = 300L;
     private static final String TAG = RNPushNotificationHelper.class.getSimpleName();
 
     private Context mContext;

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
Patch:
@@ -17,7 +17,7 @@
 import android.util.Log;
 
 public class RNPushNotificationHelper {
-    private static final long DEFAULT_VIBRATION = 1000L;
+    private static final long DEFAULT_VIBRATION = 300L;
     private static final String TAG = RNPushNotificationHelper.class.getSimpleName();
 
     private Context mContext;

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java
Patch:
@@ -57,7 +57,7 @@ private boolean isApplicationRunning() {
         for (ActivityManager.RunningAppProcessInfo processInfo : processInfos) {
             if (processInfo.processName.equals(getApplication().getPackageName())) {
                 if (processInfo.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {
-                    for (String d: processInfo.pkgList) {
+                    for (String d : processInfo.pkgList) {
                         return true;
                     }
                 }

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationRegistrationService.java
Patch:
@@ -10,7 +10,9 @@ public class RNPushNotificationRegistrationService extends IntentService {
 
     private static final String TAG = "RNPushNotification";
 
-    public RNPushNotificationRegistrationService() {super(TAG);}
+    public RNPushNotificationRegistrationService() {
+        super(TAG);
+    }
 
     @Override
     protected void onHandleIntent(Intent intent) {

File: android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java
Patch:
@@ -9,7 +9,6 @@
 
 import com.google.android.gms.gcm.GcmListenerService;
 
-import org.json.JSONException;
 import org.json.JSONObject;
 
 public class RNPushNotificationListenerService extends GcmListenerService {
@@ -32,7 +31,7 @@ public void onMessageReceived(String from, Bundle bundle) {
     private JSONObject getPushData(String dataString) {
         try {
             return new JSONObject(dataString);
-        } catch (JSONException e) {
+        } catch (Exception e) {
             return null;
         }
     }

File: RNPushNotificationAndroid/src/main/java/com/dieam/reactnativepushnotification/ReactNativePushNotificationPackage.java
Patch:
@@ -44,6 +44,7 @@ public List<ViewManager> createViewManagers(ReactApplicationContext reactContext
     }
 
     public void newIntent(Intent intent) {
+        if(mRNPushNotification == null){ return; }
         mRNPushNotification.newIntent(intent);
     }
 }

File: RNPushNotificationAndroid/src/main/java/com/dieam/reactnativepushnotification/ReactNativePushNotificationPackage.java
Patch:
@@ -44,6 +44,7 @@ public List<ViewManager> createViewManagers(ReactApplicationContext reactContext
     }
 
     public void newIntent(Intent intent) {
+        if(mRNPushNotification == null){ return; }
         mRNPushNotification.newIntent(intent);
     }
 }

