File: autolayout/src/main/java/com/zhy/autolayout/attr/MarginTopAttr.java
Patch:
@@ -34,6 +34,7 @@ protected void execute(View view, int val)
         }
         ViewGroup.MarginLayoutParams lp = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
         lp.topMargin = val;
+
     }
 
 

File: autolayout/src/main/java/com/zhy/autolayout/utils/AutoUtils.java
Patch:
@@ -35,7 +35,8 @@ public static void auto(View view)
     public static void auto(View view, int attrs, int base)
     {
         AutoLayoutInfo autoLayoutInfo = AutoLayoutInfo.getAttrFromView(view, attrs, base);
-        autoLayoutInfo.fillAttrs(view);
+        if (autoLayoutInfo != null)
+            autoLayoutInfo.fillAttrs(view);
     }
 
     public static void autoTextSize(View view)

File: sample/src/main/java/com/zhy/sample/CategoryActivity.java
Patch:
@@ -55,5 +55,4 @@ public int getCount()
         mTabLayout.setupWithViewPager(mViewPager);
     }
 
-
 }

File: autolayout/src/main/java/com/zhy/autolayout/utils/AutoLayoutHelper.java
Patch:
@@ -156,7 +156,7 @@ public static AutoLayoutInfo getAutoLayoutInfo(Context context,
 //            String val = array.getString(index);
 //            if (!isPxVal(val)) continue;
 
-            if (DimenUtils.isPxVal(array.peekValue(index))) continue;
+            if (!DimenUtils.isPxVal(array.peekValue(index))) continue;
 
             int pxVal = 0;
             try

File: autolayout/src/main/java/com/zhy/autolayout/attr/AutoAttr.java
Patch:
@@ -72,7 +72,8 @@ public void apply(View view)
             }
         }
 
-        val = Math.max(val, 1);//for very thin divider
+        if (val > 0)
+            val = Math.max(val, 1);//for very thin divider
         execute(view, val);
     }
 

File: autolayout/src/main/java/com/zhy/autolayout/attr/AutoAttr.java
Patch:
@@ -61,12 +61,12 @@ public void apply(View view)
 
     protected int getPercentWidthSize()
     {
-        return AutoUtils.getPercentWidthSize(pxVal);
+        return AutoUtils.getPercentWidthSizeBigger(pxVal);
     }
 
     protected int getPercentHeightSize()
     {
-        return AutoUtils.getPercentHeightSize(pxVal);
+        return AutoUtils.getPercentHeightSizeBigger(pxVal);
     }
 
 

File: autolayout/src/main/java/com/zhy/autolayout/utils/AutoLayoutHelper.java
Patch:
@@ -100,6 +100,8 @@ private void initAutoLayoutConfig(ViewGroup host)
 
     public void adjustChildren()
     {
+        AutoLayoutConifg.getInstance().checkParams();
+
         for (int i = 0, n = mHost.getChildCount(); i < n; i++)
         {
             View view = mHost.getChildAt(i);
@@ -122,8 +124,6 @@ public static AutoLayoutInfo getAutoLayoutInfo(Context context,
                                                    AttributeSet attrs)
     {
 
-        AutoLayoutConifg.getInstance().checkParams();
-
         AutoLayoutInfo info = new AutoLayoutInfo();
 
         TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.AutoLayout_Layout);

File: autolayout/src/main/java/com/zhy/autolayout/attr/AutoAttr.java
Patch:
@@ -14,7 +14,6 @@ public abstract class AutoAttr
     protected int baseWidth;
     protected int baseHeight;
 
-
     public AutoAttr(int pxVal, int baseWidth, int baseHeight)
     {
         this.pxVal = pxVal;
@@ -24,6 +23,7 @@ public AutoAttr(int pxVal, int baseWidth, int baseHeight)
 
     public void apply(View view)
     {
+
         int val;
         if (useDefault())
         {
@@ -56,7 +56,7 @@ protected boolean baseWidth()
 
     protected boolean useDefault()
     {
-        return contains(baseHeight, attrVal()) || contains(baseWidth, attrVal());
+        return !contains(baseHeight, attrVal()) || !contains(baseWidth, attrVal());
     }
 
     protected boolean contains(int baseVal, int flag)

File: autolayout/src/main/java/com/zhy/autolayout/utils/L.java
Patch:
@@ -7,7 +7,7 @@
  */
 public class L
 {
-    public static boolean debug = true;
+    public static boolean debug = false;
     private static final String TAG = "AUTO_LAYOUT";
 
     public static void e(String msg)

File: autolayout/src/main/java/com/zhy/autolayout/AutoLayoutHelper.java
Patch:
@@ -128,12 +128,12 @@ private void supportPadding(View view, AutoLayoutInfo info)
 
         if (info.paddingTop != 0)
         {
-            top = (int) (info.paddingLeft * 1.0f / mDesignHeight * mAvailaleHegiht);
+            top = (int) (info.paddingTop * 1.0f / mDesignHeight * mAvailaleHegiht);
         }
 
         if (info.paddingRight != 0)
         {
-            right = (int) (info.paddingRight * 1.0f / mDesignHeight * mAvailaleHegiht);
+            right = (int) (info.paddingRight * 1.0f / mDesignWidth * mAvailableWidth);
         }
 
         if (info.paddingBottom != 0)
@@ -265,7 +265,6 @@ private static boolean isTextSizeBaseWidth(Context context, AttributeSet attrs)
     {
         TypedArray array = context.obtainStyledAttributes(attrs, R.styleable.AutoLayout_Layout);
         boolean res = array.getBoolean(R.styleable.AutoLayout_Layout_layout_auto_textSizeBaseWidth, false);
-        L.e("isTextSizeBaseWidth = " + res);
         array.recycle();
         return res;
     }

