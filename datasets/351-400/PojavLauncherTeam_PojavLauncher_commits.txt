File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceJavaFragment.java
Patch:
@@ -38,7 +38,7 @@ public void onCreatePreferences(Bundle b, String str) {
         if(is32BitsDevice() || deviceRam < 2048) maxRAM = Math.min(1024, deviceRam);
         else maxRAM = deviceRam - (deviceRam < 3064 ? 800 : 1024); //To have a minimum for the device to breathe
 
-        memorySeekbar.setMax(maxRAM);
+        memorySeekbar.setMaxKeepIncrement(maxRAM);
         memorySeekbar.setValue(ramAllocation);
         memorySeekbar.setSuffix(" MB");
 

File: app_pojavlauncher/src/main/java/com/kdt/SideDialogView.java
Patch:
@@ -132,6 +132,9 @@ private void deflateLayout() {
             return;
         }
 
+        mSideDialogAnimator.removeAllUpdateListeners();
+        mSideDialogAnimator.removeAllListeners();
+
         mParent.removeView(mDialogLayout);
         mIsInstantiated = false;
 
@@ -212,7 +215,6 @@ public final void disappear(boolean destroy) {
             mSideDialogAnimator.addListener(new AnimatorListenerAdapter() {
                 @Override
                 public void onAnimationEnd(Animator animation) {
-                    mSideDialogAnimator.removeListener(this);
                     deflateLayout();
                 }
             });

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/FabriclikeInstallFragment.java
Patch:
@@ -239,6 +239,7 @@ private void updateLoaderVersions() {
     }
 
     private void updateLoaderSpinner() {
+        if(mLoaderVersionArray == null) return;
         mLoaderVersionSpinner.setAdapter(createAdapter(mLoaderVersionArray, mOnlyStableCheckbox.isChecked()));
     }
 
@@ -285,6 +286,7 @@ private void updateGameVersions() {
     }
 
     private void updateGameSpinner() {
+        if(mGameVersionArray == null) return;
         mGameVersionSpinner.setAdapter(createAdapter(mGameVersionArray, mOnlyStableCheckbox.isChecked()));
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/TestStorageActivity.java
Patch:
@@ -14,6 +14,7 @@
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 
+import net.kdt.pojavlaunch.prefs.LauncherPreferences;
 import net.kdt.pojavlaunch.tasks.AsyncAssetManager;
 
 public class TestStorageActivity extends Activity {
@@ -60,8 +61,8 @@ private void exit() {
             startActivity(new Intent(this, MissingStorageActivity.class));
             return;
         }
-        //Initialize constants after we confirm that we have storage.
-        Tools.initStorageConstants(getApplicationContext());
+        //Initialize constants (implicitly) and preferences after we confirm that we have storage.
+        LauncherPreferences.loadPreferences(this);
         AsyncAssetManager.unpackComponents(this);
         AsyncAssetManager.unpackSingleFiles(this);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -334,6 +334,9 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         if (requestCode == 1 && resultCode == Activity.RESULT_OK) {
             // Reload PREF_DEFAULTCTRL_PATH
+            // If the storage root got unmounted/unreadable we won't be able to load the file anyway,
+            // and MissingStorageActivity will be started.
+            if(!Tools.checkStorageRoot(this)) return;
             LauncherPreferences.loadPreferences(getApplicationContext());
             try {
                 mControlLayout.loadLayout(LauncherPreferences.PREF_DEFAULTCTRL_PATH);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/TestStorageActivity.java
Patch:
@@ -60,7 +60,8 @@ private void exit() {
             startActivity(new Intent(this, MissingStorageActivity.class));
             return;
         }
-        //Only run them once we get a definitive green light to use storage
+        //Initialize constants after we confirm that we have storage.
+        Tools.initStorageConstants(getApplicationContext());
         AsyncAssetManager.unpackComponents(this);
         AsyncAssetManager.unpackSingleFiles(this);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -70,8 +70,8 @@ public class LauncherPreferences {
 
 
     public static void loadPreferences(Context ctx) {
-        //Required for the data folder.
-        Tools.initContextConstants(ctx);
+        //Required for CTRLDEF_FILE and MultiRT
+        Tools.initStorageConstants(ctx);
         boolean isDevicePowerful = isDevicePowerful(ctx);
 
         PREF_RENDERER = DEFAULT_PREF.getString("renderer", "opengles2");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -220,9 +220,9 @@ public static void setJavaEnvironment(Activity activity, String jreHome) throws
 
         if(LOCAL_RENDERER != null) {
             envMap.put("POJAV_RENDERER", LOCAL_RENDERER);
-            if(LOCAL_RENDERER.equals("opengles3_desktopgl_angle_vulkan")) {
+            if(LOCAL_RENDERER.equals("opengles3_ltw")) {
                 envMap.put("LIBGL_ES", "3");
-                envMap.put("POJAVEXEC_EGL","libEGL_angle.so"); // Use ANGLE EGL
+                envMap.put("POJAVEXEC_EGL","libltw.so"); // Use ANGLE EGL
             }
         }
         if(LauncherPreferences.PREF_BIG_CORE_AFFINITY) envMap.put("POJAV_BIG_CORE_AFFINITY", "1");
@@ -464,7 +464,7 @@ public static String loadGraphicsLibrary(){
             case "opengles3":
                 renderLibrary = "libgl4es_114.so"; break;
             case "vulkan_zink": renderLibrary = "libOSMesa.so"; break;
-            case "opengles3_desktopgl_angle_vulkan" : renderLibrary = "libtinywrapper.so"; break;
+            case "opengles3_ltw" : renderLibrary = "libltw.so"; break;
             default:
                 Log.w("RENDER_LIBRARY", "No renderer selected, defaulting to opengles2");
                 renderLibrary = "libgl4es_114.so";

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -368,7 +368,8 @@ public static List<String> getJavaArgs(Context ctx, String runtimeHome, String u
 
                 "-Dnet.minecraft.clientmodname=" + Tools.APP_NAME,
                 "-Dfml.earlyprogresswindow=false", //Forge 1.14+ workaround
-                "-Dloader.disable_forked_guis=true"
+                "-Dloader.disable_forked_guis=true",
+                "-Djdk.lang.Process.launchMechanism=FORK" // Default is POSIX_SPAWN which requires starting jspawnhelper, which doesn't work on Android
         ));
         if(LauncherPreferences.PREF_ARC_CAPES) {
             overridableArguments.add("-javaagent:"+new File(Tools.DIR_DATA,"arc_dns_injector/arc_dns_injector.jar").getAbsolutePath()+"=23.95.137.176");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -215,7 +215,7 @@ public static void setJavaEnvironment(Activity activity, String jreHome) throws
         envMap.put("LD_LIBRARY_PATH", LD_LIBRARY_PATH);
         envMap.put("PATH", jreHome + "/bin:" + Os.getenv("PATH"));
         if(FFmpegPlugin.isAvailable) {
-            envMap.put("PATH", FFmpegPlugin.libraryPath+":"+envMap.get("PATH"));
+            envMap.put("POJAV_FFMPEG_PATH", FFmpegPlugin.executablePath);
         }
 
         if(LOCAL_RENDERER != null) {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/opengl/GLCapabilities.java
Patch:
@@ -4792,6 +4792,8 @@ public final class GLCapabilities {
     GLCapabilities(FunctionProvider provider, Set<String> ext, boolean fc, IntFunction<PointerBuffer> bufferFactory) {
         forwardCompatible = fc;
 
+        PojavRendererInit.onCreateCapabilities(provider);
+
         PointerBuffer caps = bufferFactory.apply(ADDRESS_BUFFER_SIZE);
 
         OpenGL11 = check_GL11(provider, caps, ext, fc);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/LeftClickGesture.java
Patch:
@@ -28,7 +28,7 @@ public final void inputEvent() {
     }
 
     @Override
-    protected int getDelayValue() {
+    protected int getCheckDuration() {
         return LauncherPreferences.PREF_LONGPRESS_TRIGGER;
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/RightClickGesture.java
Patch:
@@ -30,7 +30,7 @@ public void setMotion(float deltaX, float deltaY) {
     }
 
     @Override
-    protected int getDelayValue() {
+    protected int getCheckDuration() {
         return 150;
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -243,8 +243,8 @@ private void loadControls() {
     @Override
     public void onAttachedToWindow() {
         // Post to get the correct display dimensions after layout.
+        LauncherPreferences.computeNotchSize(this);
         mControlLayout.post(()->{
-            LauncherPreferences.computeNotchSize(this);
             Tools.getDisplayMetrics(this);
             loadControls();
         });

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncMinecraftDownloader.java
Patch:
@@ -3,13 +3,14 @@
 import net.kdt.pojavlaunch.JMinecraftVersionList;
 import net.kdt.pojavlaunch.extra.ExtraConstants;
 import net.kdt.pojavlaunch.extra.ExtraCore;
+import net.kdt.pojavlaunch.value.launcherprofiles.MinecraftProfile;
 
 public class AsyncMinecraftDownloader {
     public static String normalizeVersionId(String versionString) {
         JMinecraftVersionList versionList = (JMinecraftVersionList) ExtraCore.getValue(ExtraConstants.RELEASE_TABLE);
         if(versionList == null || versionList.versions == null) return versionString;
-        if("latest-release".equals(versionString)) versionString = versionList.latest.get("release");
-        if("latest-snapshot".equals(versionString)) versionString = versionList.latest.get("snapshot");
+        if(MinecraftProfile.LATEST_RELEASE.equals(versionString)) versionString = versionList.latest.get("release");
+        if(MinecraftProfile.LATEST_SNAPSHOT.equals(versionString)) versionString = versionList.latest.get("snapshot");
         return versionString;
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -155,7 +155,7 @@ private static int findBestRAMAllocation(Context ctx){
 
     /// Find a correct resolution for the device
     ///
-    /// Some devices are shipped with ridiculously high resolution, which can cause performance issues
+    /// Some devices are shipped with a ridiculously high resolution, which can cause performance issues
     /// This function will try to find a resolution that is good enough for the device
     private static int findBestResolution(Context context, boolean isDevicePowerful) {
         DisplayMetrics metrics = context.getResources().getDisplayMetrics();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CriticalNativeTest.java
Patch:
@@ -1,7 +1,10 @@
 package net.kdt.pojavlaunch;
 
+import androidx.annotation.Keep;
+
 import dalvik.annotation.optimization.CriticalNative;
 
+@Keep
 public class CriticalNativeTest {
     @CriticalNative
     public static native void testCriticalNative(int arg0, int arg1);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Logger.java
Patch:
@@ -15,6 +15,7 @@ public class Logger {
     public static native void begin(String logFilePath);
 
     /** Small listener for anything listening to the log */
+    @Keep
     public interface eventLogListener {
         void onEventLogged(String text);
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -7,6 +7,7 @@
 import androidx.annotation.Keep;
 
 import net.kdt.pojavlaunch.Tools;
+import net.kdt.pojavlaunch.customcontrols.buttons.ControlInterface;
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;
 import net.kdt.pojavlaunch.utils.JSONUtils;
 import net.objecthunter.exp4j.ExpressionBuilder;
@@ -240,7 +241,7 @@ private static void buildConversionMap() {
         keyValueMap.put("height", "DUMMY_HEIGHT");
         keyValueMap.put("screen_width", "DUMMY_DATA");
         keyValueMap.put("screen_height", "DUMMY_DATA");
-        keyValueMap.put("margin", Integer.toString((int) Tools.dpToPx(2)));
+        keyValueMap.put("margin", Integer.toString((int) ControlInterface.getMarginDistance()));
         keyValueMap.put("preferred_scale", "DUMMY_DATA");
 
         conversionMap = new WeakReference<>(keyValueMap);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -57,13 +57,13 @@ public CustomControls(Context ctx) {
 		this.mControlDataList.add(new ControlData(ctx, R.string.control_jump, new int[]{LwjglGlfwKeycode.GLFW_KEY_SPACE}, "${right} - ${margin} * 2 - ${width}", "${bottom} - ${margin} * 2 - ${height}", true));
 
 		//The default controls are conform to the V3
-		version = 7;
+		version = 8;
 	}
 
 	
 	public void save(String path) throws IOException {
-		//Current version is the V3.1 so the version as to be marked as 7 !
-		version = 7;
+		//Current version is the V3.2 so the version as to be marked as 8 !
+		version = 8;
 
 		Tools.write(path, Tools.GLOBAL_GSON.toJson(this));
 	}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -57,13 +57,13 @@ public CustomControls(Context ctx) {
 		this.mControlDataList.add(new ControlData(ctx, R.string.control_jump, new int[]{LwjglGlfwKeycode.GLFW_KEY_SPACE}, "${right} - ${margin} * 2 - ${width}", "${bottom} - ${margin} * 2 - ${height}", true));
 
 		//The default controls are conform to the V3
-		version = 7;
+		version = 8;
 	}
 
 	
 	public void save(String path) throws IOException {
-		//Current version is the V3.1 so the version as to be marked as 7 !
-		version = 7;
+		//Current version is the V3.2 so the version as to be marked as 8 !
+		version = 8;
 
 		Tools.write(path, Tools.GLOBAL_GSON.toJson(this));
 	}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceControlFragment.java
Patch:
@@ -20,7 +20,7 @@ public void onCreatePreferences(Bundle b, String str) {
         // Get values
         int longPressTrigger = LauncherPreferences.PREF_LONGPRESS_TRIGGER;
         int prefButtonSize = (int) LauncherPreferences.PREF_BUTTONSIZE;
-        int mouseScale = (int) LauncherPreferences.PREF_MOUSESCALE * 100;
+        int mouseScale = (int) (LauncherPreferences.PREF_MOUSESCALE * 100);
         int gyroSampleRate = LauncherPreferences.PREF_GYRO_SAMPLE_RATE;
         float mouseSpeed = LauncherPreferences.PREF_MOUSESPEED;
         float gyroSpeed = LauncherPreferences.PREF_GYRO_SENSITIVITY;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceControlFragment.java
Patch:
@@ -9,6 +9,7 @@
 import androidx.preference.PreferenceCategory;
 
 import net.kdt.pojavlaunch.R;
+import net.kdt.pojavlaunch.Tools;
 import net.kdt.pojavlaunch.prefs.CustomSeekBarPreference;
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;
 
@@ -62,7 +63,7 @@ public void onCreatePreferences(Bundle b, String str) {
 
         Context context = getContext();
         if(context != null) {
-            mGyroAvailable = ((SensorManager)context.getSystemService(Context.SENSOR_SERVICE)).getDefaultSensor(Sensor.TYPE_GYROSCOPE) != null;
+            mGyroAvailable = Tools.deviceSupportsGyro(context);
         }
         PreferenceCategory gyroCategory =  requirePreference("gyroCategory",
                 PreferenceCategory.class);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/GyroControl.java
Patch:
@@ -6,7 +6,6 @@
 import android.hardware.SensorEvent;
 import android.hardware.SensorEventListener;
 import android.hardware.SensorManager;
-import android.util.Log;
 import android.view.OrientationEventListener;
 import android.view.Surface;
 import android.view.WindowManager;
@@ -81,7 +80,6 @@ public void disable() {
         mCorrectionListener.disable();
         mStoredX = mStoredY = 0;
         resetDamper();
-        Log.i("GyroControl", "STOP");
         CallbackBridge.removeGrabListener(this);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -277,7 +277,9 @@ protected void onPause() {
         if (CallbackBridge.isGrabbing()){
             sendKeyPress(LwjglGlfwKeycode.GLFW_KEY_ESCAPE);
         }
-        mQuickSettingSideDialog.cancel();
+        if(mQuickSettingSideDialog != null) {
+            mQuickSettingSideDialog.cancel();
+        }
         CallbackBridge.nativeSetWindowAttrib(LwjglGlfwKeycode.GLFW_HOVERED, 0);
         super.onPause();
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/EditControlSideDialog.java
Patch:
@@ -40,7 +40,7 @@
 
 import java.util.List;
 
-public class EditControlSideDialog extends SideDialogView<ConstraintLayout> {
+public class EditControlSideDialog extends SideDialogView {
 
     private final Spinner[] mKeycodeSpinners = new Spinner[4];
     public boolean internalChanges = false; // True when we programmatically change stuff.
@@ -326,8 +326,8 @@ private void loadAdapter() {
     }
 
     private void setDefaultVisibilitySetting() {
-        for (int i = 0; i < mDialogContent.getChildCount(); ++i) {
-            mDialogContent.getChildAt(i).setVisibility(VISIBLE);
+        for (int i = 0; i < ((ViewGroup)mDialogContent).getChildCount(); ++i) {
+            ((ViewGroup)mDialogContent).getChildAt(i).setVisibility(VISIBLE);
         }
         for(Spinner s : mKeycodeSpinners) {
             s.setVisibility(View.INVISIBLE);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/QuickSettingSideDialog.java
Patch:
@@ -29,7 +29,7 @@
  * Side dialog for quick settings that you can change in game
  * The implementation has to take action on some preference changes
  */
-public abstract class QuickSettingSideDialog extends com.kdt.SideDialogView<ConstraintLayout> {
+public abstract class QuickSettingSideDialog extends com.kdt.SideDialogView {
 
     private SharedPreferences.Editor mEditor;
     @SuppressLint("UseSwitchCompatOrMaterialCode")

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -422,7 +422,7 @@ public void removeEditWindow() {
 		imm.hideSoftInputFromWindow(getWindowToken(), 0);
 		if(mControlDialog != null) {
 			mControlDialog.disappearColor();
-			mControlDialog.disappear(false);
+			mControlDialog.disappear(true);
 		}
 
 		if(mActionRow != null) mActionRow.setFollowedButton(null);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/EditControlSideDialog.java
Patch:
@@ -103,7 +103,9 @@ protected void onAppear(boolean hasBuilt) {
 
     @Override
     protected void onDisappear(boolean willDestroy) {
-
+        if (willDestroy) {
+            mParent.removeView(mColorSelector.getRootView());
+        }
     }
 
     /* While the selector could be retrofitted to side dialog, it's not worth the effort */

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/EditControlSideDialog.java
Patch:
@@ -135,7 +135,7 @@ public void appearColor(boolean fromRight, int color) {
 
         // Adjust the color selector to have the same size as the control settings
         ViewGroup.LayoutParams params = mColorSelector.getRootView().getLayoutParams();
-        params.height = mDialogContent.getHeight();
+        params.height = ((ViewGroup)mDialogContent.getParent()).getHeight();
         mColorSelector.getRootView().setLayoutParams(params);
 
         mDisplayingColor = true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -89,8 +89,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         mMousePointerImageView.post(() -> {
             ViewGroup.LayoutParams params = mMousePointerImageView.getLayoutParams();
-            params.width = (int) (36 / 100f * LauncherPreferences.PREF_MOUSESCALE);
-            params.height = (int) (54 / 100f * LauncherPreferences.PREF_MOUSESCALE);
+            params.width = (int) (36 * LauncherPreferences.PREF_MOUSESCALE);
+            params.height = (int) (54 * LauncherPreferences.PREF_MOUSESCALE);
         });
 
         mTouchPad.setOnTouchListener(new View.OnTouchListener() {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/HotbarView.java
Patch:
@@ -26,7 +26,6 @@ public class HotbarView extends View implements MCOptionUtils.MCOptionListener,
             LwjglGlfwKeycode.GLFW_KEY_4, LwjglGlfwKeycode.GLFW_KEY_5,   LwjglGlfwKeycode.GLFW_KEY_6,
             LwjglGlfwKeycode.GLFW_KEY_7, LwjglGlfwKeycode.GLFW_KEY_8, LwjglGlfwKeycode.GLFW_KEY_9};
     private final DropGesture mDropGesture = new DropGesture(new Handler(Looper.getMainLooper()));
-    private final float mScaleFactor = LauncherPreferences.PREF_SCALE_FACTOR/100f;
     private int mWidth;
     private int mLastIndex;
     private int mGuiScale;
@@ -122,7 +121,7 @@ private boolean isLastEventInGesture(int actionMasked) {
     }
 
     private int mcScale(int input) {
-        return (int)((mGuiScale * input)/ mScaleFactor);
+        return (int)((mGuiScale * input) / LauncherPreferences.PREF_SCALE_FACTOR);
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/InGameEventProcessor.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.os.Handler;
 import android.os.Looper;
+import android.util.Log;
 import android.view.MotionEvent;
 
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;
@@ -32,8 +33,8 @@ public boolean processTouchEvent(MotionEvent motionEvent) {
             case MotionEvent.ACTION_MOVE:
                 mTracker.trackEvent(motionEvent);
                 float[] motionVector = mTracker.getMotionVector();
-                CallbackBridge.mouseX += motionVector[0] * mSensitivity;
-                CallbackBridge.mouseY += motionVector[1] * mSensitivity;
+                CallbackBridge.mouseX += (float) (motionVector[0] * mSensitivity);
+                CallbackBridge.mouseY += (float) (motionVector[1] * mSensitivity);
                 CallbackBridge.sendCursorPos(CallbackBridge.mouseX, CallbackBridge.mouseY);
                 if(LauncherPreferences.PREF_DISABLE_GESTURES) break;
                 checkGestures();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/Touchpad.java
Patch:
@@ -93,8 +93,8 @@ private void init(){
         assert mMousePointerDrawable != null;
         mMousePointerDrawable.setBounds(
                 0, 0,
-                (int) (36 / 100f * LauncherPreferences.PREF_MOUSESCALE),
-                (int) (54 / 100f * LauncherPreferences.PREF_MOUSESCALE)
+                (int) (36 * LauncherPreferences.PREF_MOUSESCALE),
+                (int) (54 * LauncherPreferences.PREF_MOUSESCALE)
         );
         setFocusable(false);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceControlFragment.java
Patch:
@@ -19,7 +19,7 @@ public void onCreatePreferences(Bundle b, String str) {
         // Get values
         int longPressTrigger = LauncherPreferences.PREF_LONGPRESS_TRIGGER;
         int prefButtonSize = (int) LauncherPreferences.PREF_BUTTONSIZE;
-        int mouseScale = (int) LauncherPreferences.PREF_MOUSESCALE;
+        int mouseScale = (int) LauncherPreferences.PREF_MOUSESCALE * 100;
         int gyroSampleRate = LauncherPreferences.PREF_GYRO_SAMPLE_RATE;
         float mouseSpeed = LauncherPreferences.PREF_MOUSESPEED;
         float gyroSpeed = LauncherPreferences.PREF_GYRO_SENSITIVITY;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -355,8 +355,8 @@ public static List<String> getJavaArgs(Context ctx, String runtimeHome, String u
                 //"-Dorg.lwjgl.util.DebugFunctions=true",
                 //"-Dorg.lwjgl.util.DebugLoader=true",
                 // GLFW Stub width height
-                "-Dglfwstub.windowWidth=" + Tools.getDisplayFriendlyRes(currentDisplayMetrics.widthPixels, LauncherPreferences.PREF_SCALE_FACTOR/100F),
-                "-Dglfwstub.windowHeight=" + Tools.getDisplayFriendlyRes(currentDisplayMetrics.heightPixels, LauncherPreferences.PREF_SCALE_FACTOR/100F),
+                "-Dglfwstub.windowWidth=" + Tools.getDisplayFriendlyRes(currentDisplayMetrics.widthPixels, LauncherPreferences.PREF_SCALE_FACTOR),
+                "-Dglfwstub.windowHeight=" + Tools.getDisplayFriendlyRes(currentDisplayMetrics.heightPixels, LauncherPreferences.PREF_SCALE_FACTOR),
                 "-Dglfwstub.initEgl=false",
                 "-Dext.net.resolvPath=" +resolvFile,
                 "-Dlog4j2.formatMsgNoLookups=true", //Log4j RCE mitigation

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -67,7 +67,7 @@ public class MinecraftGLSurface extends View implements GrabListener {
             .remapDpad(true));
 
     /* Resolution scaler option, allow downsizing a window */
-    private final float mScaleFactor = LauncherPreferences.PREF_SCALE_FACTOR/100f;
+    private float mScaleFactor = LauncherPreferences.PREF_SCALE_FACTOR/100f;
     /* Sensitivity, adjusted according to screen size */
     private final double mSensitivityFactor = (1.4 * (1080f/ Tools.getDisplayMetrics((Activity) getContext()).heightPixels));
 
@@ -337,6 +337,7 @@ public void refreshSize(boolean immediate) {
             post(this::refreshSize);
             return;
         }
+        mScaleFactor = LauncherPreferences.PREF_SCALE_FACTOR/100f;
         // Use the width and height of the View instead of display dimensions to avoid
         // getting squiched/stretched due to inconsistencies between the layout and
         // screen dimensions.

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/HotbarView.java
Patch:
@@ -94,7 +94,8 @@ public boolean onTouchEvent(MotionEvent event) {
         else mDropGesture.submit();
         // Determine the hotbar slot
         float x = event.getX();
-        if(x < 0 || x > mWidth) {
+        // Ignore positions equal to mWidth because they would translate into an out-of-bounds hotbar index
+        if(x < 0 || x >= mWidth) {
             // If out of bounds, cancel the hotbar gesture to avoid dropping items on last hotbar slots
             mDropGesture.cancel();
             return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/ExitActivity.java
Patch:
@@ -19,7 +19,8 @@ public class ExitActivity extends AppCompatActivity {
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        int code = -1; boolean isSignal = false;
+        int code = -1;
+        boolean isSignal = false;
         Bundle extras = getIntent().getExtras();
         if(extras != null) {
             code = extras.getInt("code",-1);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/gamepad/GamepadButton.java
Patch:
@@ -10,7 +10,8 @@ public class GamepadButton extends GamepadEmulatedButton {
 
     @Override
     protected void onDownStateChanged(boolean isDown) {
-        if(isToggleable && isDown){
+        if(isToggleable) {
+            if(!isDown) return;
             mIsToggled = !mIsToggled;
             Gamepad.sendInput(keycodes, mIsToggled);
             return;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/services/GameService.java
Patch:
@@ -48,7 +48,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
         Notification notification = notificationBuilder.build();
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-            startForeground(NotificationUtils.NOTIFICATION_ID_GAME_SERVICE, notification, ServiceInfo.FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK);
+            startForeground(NotificationUtils.NOTIFICATION_ID_GAME_SERVICE, notification, ServiceInfo.FOREGROUND_SERVICE_TYPE_MANIFEST);
         } else {
             startForeground(NotificationUtils.NOTIFICATION_ID_GAME_SERVICE, notification);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/services/ProgressService.java
Patch:
@@ -68,7 +68,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         mNotificationBuilder.setContentText(getString(R.string.progresslayout_tasks_in_progress, ProgressKeeper.getTaskCount()));
         Notification notification = mNotificationBuilder.build();
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-            startForeground(NotificationUtils.NOTIFICATION_ID_PROGRESS_SERVICE, notification, ServiceInfo.FOREGROUND_SERVICE_TYPE_DATA_SYNC);
+            startForeground(NotificationUtils.NOTIFICATION_ID_PROGRESS_SERVICE, notification, ServiceInfo.FOREGROUND_SERVICE_TYPE_MANIFEST);
         } else {
             startForeground(NotificationUtils.NOTIFICATION_ID_PROGRESS_SERVICE, notification);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/gamepad/GamepadDataProvider.java
Patch:
@@ -7,5 +7,4 @@ public interface GamepadDataProvider {
     GamepadMap getGameMap();
     boolean isGrabbing();
     void attachGrabListener(GrabListener grabListener);
-    void reloadGamepadMaps();
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -293,6 +293,8 @@ public static void launchJavaVM(final AppCompatActivity activity, final Runtime
         purgeArg(userArgs, "-XX:+UseLargePagesInMetaspace");
         purgeArg(userArgs, "-XX:+UseLargePages");
         purgeArg(userArgs, "-Dorg.lwjgl.opengl.libname");
+        // Don't let the user specify a custom Freetype library (as the user is unlikely to specify a version compiled for Android)
+        purgeArg(userArgs, "-Dorg.lwjgl.freetype.libname");
 
         //Add automatically generated args
         userArgs.add("-Xms" + LauncherPreferences.PREF_RAM_ALLOCATION + "M");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/progresskeeper/ProgressKeeper.java
Patch:
@@ -90,8 +90,8 @@ public static void waitUntilDone(final Runnable runnable) {
             public void onUpdateTaskCount(int taskCount) {
                 if(taskCount == 0) {
                     runnable.run();
+                    removeTaskCountListener(this);
                 }
-                removeTaskCountListener(this);
             }
         };
         addTaskCountListener(listener);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/NewJREUtil.java
Patch:
@@ -97,7 +97,7 @@ public static boolean installNewJreIfNeeded(Activity activity, JMinecraftVersion
 
     private static void showRuntimeFail(Activity activity, JMinecraftVersionList.Version verInfo) {
         Tools.dialogOnUiThread(activity, activity.getString(R.string.global_error),
-                activity.getString(R.string.multirt_nocompartiblert, verInfo.javaVersion.majorVersion));
+                activity.getString(R.string.multirt_nocompatiblert, verInfo.javaVersion.majorVersion));
     }
 
     private enum InternalRuntime {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/TapDetector.java
Patch:
@@ -20,7 +20,7 @@ public class TapDetector {
     public final static int DETECTION_METHOD_UP = 0x2;
     public final static int DETECTION_METHOD_BOTH = 0x3; //Unused for now
 
-    private final static int TAP_MIN_DELTA_MS = 10;
+    private final static int TAP_MIN_DELTA_MS = -1;
     private final static int TAP_MAX_DELTA_MS = 300;
     private final static int TAP_SLOP_SQUARE_PX = (int) Tools.dpToPx(2500);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/LayoutConverter.java
Patch:
@@ -30,7 +30,7 @@ public static CustomControls loadAndConvertIfNecessary(String jsonPath) throws I
                 return layout;
             }else if (layoutJobj.getInt("version") >= 3 && layoutJobj.getInt("version") <= 5) {
                 return LayoutConverter.convertV3_4Layout(layoutJobj);
-            } else if (layoutJobj.getInt("version") == 6) {
+            } else if (layoutJobj.getInt("version") == 6 || layoutJobj.getInt("version") == 7) {
                 return Tools.GLOBAL_GSON.fromJson(jsonLayoutData, CustomControls.class);
             } else {
                 return null;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -566,7 +566,7 @@ public static int getDetectedVersion() {
     static {
         System.loadLibrary("pojavexec");
         System.loadLibrary("pojavexec_awt");
-        dlopen("libxhook.so");
+        dlopen("libbytehook.so");
         System.loadLibrary("istdio");
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/api/ModrinthApi.java
Patch:
@@ -50,7 +50,7 @@ public SearchResult searchMod(SearchFilters searchFilters, SearchResult previous
             facetString.append(String.format(",[\"versions:%s\"]", searchFilters.mcVersion));
         facetString.append("]");
         params.put("facets", facetString.toString());
-        params.put("query", searchFilters.name.replace(' ', '+'));
+        params.put("query", searchFilters.name);
         params.put("limit", 50);
         params.put("index", "relevance");
         if(modrinthSearchResult != null)

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -57,13 +57,13 @@ public CustomControls(Context ctx) {
 		this.mControlDataList.add(new ControlData(ctx, R.string.control_jump, new int[]{LwjglGlfwKeycode.GLFW_KEY_SPACE}, "${right} - ${margin} * 2 - ${width}", "${bottom} - ${margin} * 2 - ${height}", true));
 
 		//The default controls are conform to the V3
-		version = 6;
+		version = 7;
 	}
 
 	
 	public void save(String path) throws IOException {
-		//Current version is the V3.0 so the version as to be marked as 6 !
-		version = 6;
+		//Current version is the V3.1 so the version as to be marked as 7 !
+		version = 7;
 
 		Tools.write(path, Tools.GLOBAL_GSON.toJson(this));
 	}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/LayoutConverter.java
Patch:
@@ -105,7 +105,6 @@ public static CustomControls convertV1Layout(JSONObject oldLayoutJson) throws JS
                     LwjglGlfwKeycode.GLFW_KEY_UNKNOWN,
                     LwjglGlfwKeycode.GLFW_KEY_UNKNOWN,
                     LwjglGlfwKeycode.GLFW_KEY_UNKNOWN};
-            n_button.isDynamicBtn = button.getBoolean("isDynamicBtn");
             n_button.dynamicX = button.getString("dynamicX");
             n_button.dynamicY = button.getString("dynamicY");
             if (!Tools.isValidString(n_button.dynamicX) && button.has("x")) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlSubButton.java
Patch:
@@ -26,7 +26,6 @@ private void filterProperties(){
             mProperties.setHeight(parentDrawer.getProperties().getHeight());
             mProperties.setWidth(parentDrawer.getProperties().getWidth());
         }
-        mProperties.isDynamicBtn = false;
 
         setProperties(mProperties, false);
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -51,6 +51,7 @@
 import net.kdt.pojavlaunch.customcontrols.EditorExitable;
 import net.kdt.pojavlaunch.customcontrols.keyboard.LwjglCharSender;
 import net.kdt.pojavlaunch.customcontrols.keyboard.TouchCharInput;
+import net.kdt.pojavlaunch.customcontrols.mouse.GyroControl;
 import net.kdt.pojavlaunch.customcontrols.mouse.Touchpad;
 import net.kdt.pojavlaunch.lifecycle.ContextExecutor;
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/SingleTapConfirm.java
Patch:
@@ -3,6 +3,8 @@
 import android.view.*;
 import android.view.GestureDetector.*;
 
+import androidx.annotation.NonNull;
+
 public class SingleTapConfirm extends SimpleOnGestureListener {
 	@Override
 	public boolean onSingleTapUp(MotionEvent event) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/GyroControl.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch;
+package net.kdt.pojavlaunch.customcontrols.mouse;
 
 import android.app.Activity;
 import android.content.Context;
@@ -10,6 +10,7 @@
 import android.view.Surface;
 import android.view.WindowManager;
 
+import net.kdt.pojavlaunch.GrabListener;
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;
 
 import org.lwjgl.glfw.CallbackBridge;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/HotbarView.java
Patch:
@@ -12,7 +12,6 @@
 import androidx.annotation.Nullable;
 
 import net.kdt.pojavlaunch.LwjglGlfwKeycode;
-import net.kdt.pojavlaunch.TapDetector;
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;
 import net.kdt.pojavlaunch.utils.MCOptionUtils;
 import net.kdt.pojavlaunch.utils.MathUtils;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/LeftClickGesture.java
Patch:
@@ -29,7 +29,7 @@ public final void inputEvent() {
 
     @Override
     public boolean checkAndTrigger() {
-        boolean fingerStill = LeftClickGesture.isFingerStill(mGestureStartX, mGestureStartY);
+        boolean fingerStill = LeftClickGesture.isFingerStill(mGestureStartX, mGestureStartY, FINGER_STILL_THRESHOLD);
         // If the finger is still, fire the gesture.
         if(fingerStill) {
             sendMouseButton(LwjglGlfwKeycode.GLFW_MOUSE_BUTTON_LEFT, true);
@@ -53,12 +53,12 @@ public void onGestureCancelled(boolean isSwitching) {
      * @param startY the starting Y of the gesture
      * @return whether the finger's position counts as "still" or not
      */
-    public static boolean isFingerStill(float startX, float startY) {
+    public static boolean isFingerStill(float startX, float startY, float threshold) {
         return MathUtils.dist(
                 CallbackBridge.mouseX,
                 CallbackBridge.mouseY,
                 startX,
                 startY
-        ) <= FINGER_STILL_THRESHOLD;
+        ) <= threshold;
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/RightClickGesture.java
Patch:
@@ -38,7 +38,7 @@ public boolean checkAndTrigger() {
     public void onGestureCancelled(boolean isSwitching) {
         mGestureEnabled = true;
         if(!mGestureValid || isSwitching) return;
-        boolean fingerStill = LeftClickGesture.isFingerStill(mGestureStartX, mGestureStartY);
+        boolean fingerStill = LeftClickGesture.isFingerStill(mGestureStartX, mGestureStartY, LeftClickGesture.FINGER_STILL_THRESHOLD);
         if(!fingerStill) return;
         CallbackBridge.sendMouseButton(LwjglGlfwKeycode.GLFW_MOUSE_BUTTON_RIGHT, true);
         CallbackBridge.sendMouseButton(LwjglGlfwKeycode.GLFW_MOUSE_BUTTON_RIGHT, false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/TapDetector.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch;
+package net.kdt.pojavlaunch.customcontrols.mouse;
 
 import android.view.MotionEvent;
 
@@ -7,6 +7,8 @@
 import static android.view.MotionEvent.ACTION_POINTER_UP;
 import static android.view.MotionEvent.ACTION_UP;
 
+import net.kdt.pojavlaunch.Tools;
+
 /**
  * Class aiming at better detecting X-tap events regardless of the POINTERS
  * Only uses the least amount of events possible,

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/FileSelectorFragment.java
Patch:
@@ -25,6 +25,7 @@
 public class FileSelectorFragment extends Fragment {
     public static final String TAG = "FileSelectorFragment";
     public static final String BUNDLE_SELECT_FOLDER = "select_folder";
+    public static final String BUNDLE_SELECT_FILE = "select_file";
     public static final String BUNDLE_SHOW_FILE = "show_file";
     public static final String BUNDLE_SHOW_FOLDER = "show_folder";
     public static final String BUNDLE_ROOT_PATH = "root_path";

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ProfileEditorFragment.java
Patch:
@@ -122,6 +122,8 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
             Bundle bundle = new Bundle(3);
             bundle.putBoolean(FileSelectorFragment.BUNDLE_SELECT_FOLDER, false);
             bundle.putString(FileSelectorFragment.BUNDLE_ROOT_PATH, Tools.CTRLMAP_PATH);
+            mValueToConsume = FileSelectorFragment.BUNDLE_SELECT_FILE;
+
             Tools.swapFragment(requireActivity(),
                     FileSelectorFragment.class, FileSelectorFragment.TAG, bundle);
         });

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/SearchModFragment.java
Patch:
@@ -89,7 +89,8 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
             mSearchProgressBar.setVisibility(View.VISIBLE);
             mSearchFilters.name = mSearchEditText.getText().toString();
             mModItemAdapter.performSearchQuery(mSearchFilters);
-            return true;
+            mSearchEditText.clearFocus();
+            return false;
         });
 
         mOverlay.post(()->{

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceFragment.java
Patch:
@@ -3,7 +3,6 @@
 
 import android.app.Activity;
 import android.content.SharedPreferences;
-import android.graphics.Color;
 import android.os.Bundle;
 import android.view.View;
 
@@ -24,7 +23,7 @@ public class LauncherPreferenceFragment extends PreferenceFragmentCompat impleme
 
     @Override
     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
-        view.setBackgroundColor(Color.parseColor("#232323"));
+        view.setBackgroundColor(getResources().getColor(R.color.background_app));
         super.onViewCreated(view, savedInstanceState);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceJavaFragment.java
Patch:
@@ -35,7 +35,7 @@ public void onCreatePreferences(Bundle b, String str) {
         int maxRAM;
         int deviceRam = getTotalDeviceMemory(seek7.getContext());
 
-        if(is32BitsDevice() || deviceRam < 2048) maxRAM = Math.min(1000, deviceRam);
+        if(is32BitsDevice() || deviceRam < 2048) maxRAM = Math.min(1024, deviceRam);
         else maxRAM = deviceRam - (deviceRam < 3064 ? 800 : 1024); //To have a minimum for the device to breathe
 
         seek7.setMin(256);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -600,7 +600,7 @@ private static void showError(final Context ctx, final int titleId, final String
                     .setNegativeButton(showMore ? R.string.error_show_less : R.string.error_show_more, (p1, p2) -> showError(ctx, titleId, rolledMessage, e, exitIfOk, !showMore))
                     .setNeutralButton(android.R.string.copy, (p1, p2) -> {
                         ClipboardManager mgr = (ClipboardManager) ctx.getSystemService(Context.CLIPBOARD_SERVICE);
-                        mgr.setPrimaryClip(ClipData.newPlainText("error", Log.getStackTraceString(e)));
+                        mgr.setPrimaryClip(ClipData.newPlainText("error", printToString(e)));
                         if(exitIfOk) {
                             if (ctx instanceof MainActivity) {
                                 MainActivity.fullyExit();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/AbstractTouchpad.java
Patch:
@@ -13,7 +13,9 @@ public interface AbstractTouchpad {
      * on the screen and send the new cursor position to the game.
      * @param vector the array that contains the vector
      */
-    void applyMotionVector(float[] vector);
+    default void applyMotionVector(float[] vector) {
+        applyMotionVector(vector[0], vector[1]);
+    }
 
     /**
      * Apply a motion vector to the mouse in form of the separate X/Y coordinates. This will move the mouse

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/EfficientAndroidLWJGLKeycode.java
Patch:
@@ -118,6 +118,7 @@ public class EfficientAndroidLWJGLKeycode {
 
         add(KeyEvent.KEYCODE_CAPS_LOCK, LwjglGlfwKeycode.GLFW_KEY_CAPS_LOCK);
         add(KeyEvent.KEYCODE_BREAK, LwjglGlfwKeycode.GLFW_KEY_PAUSE);
+        add(KeyEvent.KEYCODE_MOVE_HOME, LwjglGlfwKeycode.GLFW_KEY_HOME);
         add(KeyEvent.KEYCODE_MOVE_END, LwjglGlfwKeycode.GLFW_KEY_END);
         add(KeyEvent.KEYCODE_INSERT, LwjglGlfwKeycode.GLFW_KEY_INSERT);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/Touchpad.java
Patch:
@@ -68,9 +68,7 @@ public void placeMouseAt(float x, float y) {
     }
 
     private void sendMousePosition() {
-        CallbackBridge.mouseX = (mMouseX * mScaleFactor);
-        CallbackBridge.mouseY = (mMouseY * mScaleFactor);
-        CallbackBridge.sendCursorPos(CallbackBridge.mouseX, CallbackBridge.mouseY);
+        CallbackBridge.sendCursorPos((mMouseX * mScaleFactor), (mMouseY * mScaleFactor));
     }
 
     private void updateMousePosition() {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Touchpad.java
Patch:
@@ -93,8 +93,8 @@ public boolean onTouchEvent(MotionEvent event) {
             case MotionEvent.ACTION_MOVE: // 2
                 //Scrolling feature
                 if (!LauncherPreferences.PREF_DISABLE_GESTURES && !CallbackBridge.isGrabbing() && event.getPointerCount() >= 2) {
-                    int hScroll =  ((int) (event.getX() - mScrollLastInitialX)) / FINGER_SCROLL_THRESHOLD;
-                    int vScroll = ((int) (event.getY() - mScrollLastInitialY)) / FINGER_SCROLL_THRESHOLD;
+                    int hScroll =  (int) ((event.getX() - mScrollLastInitialX) / FINGER_SCROLL_THRESHOLD);
+                    int vScroll = (int) ((event.getY() - mScrollLastInitialY) / FINGER_SCROLL_THRESHOLD);
 
                     if(vScroll != 0 || hScroll != 0){
                         CallbackBridge.sendScroll(hScroll, vScroll);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/InGUIEventProcessor.java
Patch:
@@ -12,7 +12,7 @@ public class InGUIEventProcessor implements TouchEventProcessor {
     private final PointerTracker mTracker = new PointerTracker();
     private boolean mIsMouseDown = false;
     private final float mScaleFactor;
-    public static final int FINGER_SCROLL_THRESHOLD = (int) Tools.dpToPx(6);
+    public static final float FINGER_SCROLL_THRESHOLD = Tools.dpToPx(6);
     public InGUIEventProcessor(float scaleFactor) {
         mScaleFactor = scaleFactor;
     }
@@ -34,8 +34,8 @@ public boolean processTouchEvent(MotionEvent motionEvent) {
                     if(!mIsMouseDown) enableMouse();
                 } else {
                     float[] motionVector = mTracker.getMotionVector();
-                    int hScroll =  ((int) motionVector[0]) / FINGER_SCROLL_THRESHOLD;
-                    int vScroll = ((int) motionVector[1]) / FINGER_SCROLL_THRESHOLD;
+                    int hScroll =  (int)(motionVector[0] / FINGER_SCROLL_THRESHOLD);
+                    int vScroll = (int)(motionVector[1] / FINGER_SCROLL_THRESHOLD);
                     if(hScroll != 0 | vScroll != 0) CallbackBridge.sendScroll(hScroll, vScroll);
                 }
                 break;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/InGameEventProcessor.java
Patch:
@@ -29,12 +29,12 @@ public boolean processTouchEvent(MotionEvent motionEvent) {
                 break;
             case MotionEvent.ACTION_MOVE:
                 mTracker.trackEvent(motionEvent);
-                if(LauncherPreferences.PREF_DISABLE_GESTURES) break;
-                checkGestures();
                 float[] motionVector = mTracker.getMotionVector();
                 CallbackBridge.mouseX += motionVector[0] * mSensitivity;
                 CallbackBridge.mouseY += motionVector[1] * mSensitivity;
                 CallbackBridge.sendCursorPos(CallbackBridge.mouseX, CallbackBridge.mouseY);
+                if(LauncherPreferences.PREF_DISABLE_GESTURES) break;
+                checkGestures();
                 break;
             case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_CANCEL:

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/InGameEventProcessor.java
Patch:
@@ -28,13 +28,13 @@ public boolean processTouchEvent(MotionEvent motionEvent) {
         boolean hasDoubleTapped = mDoubleTapDetector.onTouchEvent(motionEvent);
         switch (motionEvent.getActionMasked()) {
             case MotionEvent.ACTION_DOWN:
-                if(mGuiBarTracker.begin(motionEvent)) break;
+                if(mGuiBarTracker.begin(motionEvent, hasDoubleTapped)) break;
                 mTracker.startTracking(motionEvent);
                 if(LauncherPreferences.PREF_DISABLE_GESTURES) break;
                 checkGestures();
                 break;
             case MotionEvent.ACTION_POINTER_DOWN:
-                mGuiBarTracker.begin(motionEvent);
+                mGuiBarTracker.begin(motionEvent, hasDoubleTapped);
                 break;
             case MotionEvent.ACTION_MOVE:
                 int trackedIndex = mTracker.trackEvent(motionEvent);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/ValidatorGesture.java
Patch:
@@ -4,7 +4,7 @@
 
 /**
  * This class implements an abstract "validator gesture", meant as a base for implementation of
- * more complex gestures with pinger position tracking and such.
+ * more complex gestures with finger position tracking and such.
  */
 public abstract class ValidatorGesture implements Runnable{
     private final Handler mHandler;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/InGUIEventProcessor.java
Patch:
@@ -40,6 +40,7 @@ public boolean processTouchEvent(MotionEvent motionEvent) {
                 }
                 break;
             case MotionEvent.ACTION_UP:
+                mTracker.cancelTracking();
                 disableMouse();
         }
         return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/mouse/InGameEventProcessor.java
Patch:
@@ -63,6 +63,7 @@ public boolean processTouchEvent(MotionEvent motionEvent) {
                 break;
             case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_CANCEL:
+                mTracker.cancelTracking();
                 cancelGestures(false);
         }
         return true;

File: app_pojavlauncher/src/main/java/com/kdt/mcgui/mcVersionSpinner.java
Patch:
@@ -85,7 +85,7 @@ public void openProfileEditor(FragmentActivity fragmentActivity) {
         if(currentSelection instanceof ProfileAdapterExtra) {
             performExtraAction((ProfileAdapterExtra) currentSelection);
         }else{
-            Tools.swapFragment(fragmentActivity, ProfileEditorFragment.class, ProfileEditorFragment.TAG, true, null);
+            Tools.swapFragment(fragmentActivity, ProfileEditorFragment.class, ProfileEditorFragment.TAG, null);
         }
     }
 
@@ -137,7 +137,7 @@ private void performExtraAction(ProfileAdapterExtra extra) {
         //Replace with switch-case if you want to add more extra actions
         if (extra.id == VERSION_SPINNER_PROFILE_CREATE) {
             Tools.swapFragment((FragmentActivity) getContext(), ProfileTypeSelectFragment.class,
-                    ProfileTypeSelectFragment.TAG, true, null);
+                    ProfileTypeSelectFragment.TAG, null);
         }
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/LocalLoginFragment.java
Patch:
@@ -33,7 +33,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
             ExtraCore.setValue(ExtraConstants.MOJANG_LOGIN_TODO, new String[]{
                     mUsernameEditText.getText().toString(), "" });
 
-            Tools.swapFragment(requireActivity(), MainMenuFragment.class, MainMenuFragment.TAG, false, null);
+            Tools.swapFragment(requireActivity(), MainMenuFragment.class, MainMenuFragment.TAG, null);
         });
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/MainMenuFragment.java
Patch:
@@ -21,7 +21,6 @@
 import net.kdt.pojavlaunch.extra.ExtraConstants;
 import net.kdt.pojavlaunch.extra.ExtraCore;
 import net.kdt.pojavlaunch.progresskeeper.ProgressKeeper;
-import net.kdt.pojavlaunch.value.launcherprofiles.LauncherProfiles;
 
 public class MainMenuFragment extends Fragment {
     public static final String TAG = "MainMenuFragment";
@@ -57,7 +56,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         mShareLogsButton.setOnClickListener((v) -> shareLog(requireContext()));
 
         mNewsButton.setOnLongClickListener((v)->{
-            Tools.swapFragment(requireActivity(), SearchModFragment.class, SearchModFragment.TAG, true, null);
+            Tools.swapFragment(requireActivity(), SearchModFragment.class, SearchModFragment.TAG, null);
             return true;
         });
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/MicrosoftLoginFragment.java
Patch:
@@ -92,7 +92,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 // Should be captured by the activity to kill the fragment and get
                 ExtraCore.setValue(ExtraConstants.MICROSOFT_LOGIN_TODO, Uri.parse(url));
                 Toast.makeText(view.getContext(), "Login started !", Toast.LENGTH_SHORT).show();
-                Tools.removeCurrentFragment(requireActivity());
+                Tools.backToMainMenu(requireActivity());
 
                 return true;
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ProfileEditorFragment.java
Patch:
@@ -93,7 +93,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         mSaveButton.setOnClickListener(v -> {
             ProfileIconCache.dropIcon(mProfileKey);
             save();
-            Tools.removeCurrentFragment(requireActivity());
+            Tools.backToMainMenu(requireActivity());
         });
 
         mDeleteButton.setOnClickListener(v -> {
@@ -115,15 +115,15 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
             mValueToConsume = FileSelectorFragment.BUNDLE_SELECT_FOLDER;
 
             Tools.swapFragment(requireActivity(),
-                    FileSelectorFragment.class, FileSelectorFragment.TAG, true, bundle);
+                    FileSelectorFragment.class, FileSelectorFragment.TAG, bundle);
         });
 
         mControlSelectButton.setOnClickListener(v -> {
             Bundle bundle = new Bundle(3);
             bundle.putBoolean(FileSelectorFragment.BUNDLE_SELECT_FOLDER, false);
             bundle.putString(FileSelectorFragment.BUNDLE_ROOT_PATH, Tools.CTRLMAP_PATH);
             Tools.swapFragment(requireActivity(),
-                    FileSelectorFragment.class, FileSelectorFragment.TAG, true, bundle);
+                    FileSelectorFragment.class, FileSelectorFragment.TAG, bundle);
         });
 
         // Setup the expendable list behavior

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/SelectAuthFragment.java
Patch:
@@ -23,7 +23,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         Button mMicrosoftButton = view.findViewById(R.id.button_microsoft_authentication);
         Button mLocalButton = view.findViewById(R.id.button_local_authentication);
 
-        mMicrosoftButton.setOnClickListener(v -> Tools.swapFragment(requireActivity(), MicrosoftLoginFragment.class, MicrosoftLoginFragment.TAG, false, null));
-        mLocalButton.setOnClickListener(v -> Tools.swapFragment(requireActivity(), LocalLoginFragment.class, LocalLoginFragment.TAG, false, null));
+        mMicrosoftButton.setOnClickListener(v -> Tools.swapFragment(requireActivity(), MicrosoftLoginFragment.class, MicrosoftLoginFragment.TAG, null));
+        mLocalButton.setOnClickListener(v -> Tools.swapFragment(requireActivity(), LocalLoginFragment.class, LocalLoginFragment.TAG, null));
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -57,7 +57,6 @@ public void onCreate() {
 		
 		try {
 			super.onCreate();
-			Tools.APP_NAME = getResources().getString(R.string.app_short_name);
 			
 			Tools.DIR_DATA = getDir("files", MODE_PRIVATE).getParent();
 			Tools.DIR_CACHE = getCacheDir();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -94,7 +94,7 @@
 public final class Tools {
     public  static final float BYTE_TO_MB = 1024 * 1024;
     public static final Handler MAIN_HANDLER = new Handler(Looper.getMainLooper());
-    public static String APP_NAME = "null";
+    public static String APP_NAME = "PojavLauncher";
 
     public static final Gson GLOBAL_GSON = new GsonBuilder().setPrettyPrinting().create();
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/imgcropper/BitmapCropBehaviour.java
Patch:
@@ -62,16 +62,15 @@ public void onSelectionRectUpdated() {
         computeLocalPrescaleMatrix();
     }
 
-    public void reset() {
+    public void applyImage() {
         mHostView.reset();
         computeLocalPrescaleMatrix();
         resetTransforms();
         refresh();
     }
 
-    public void loadBitmap(Bitmap bitmap) {
+    public void setBitmap(Bitmap bitmap) {
         mOriginalBitmap = bitmap;
-        reset();
     }
 
     protected void refresh() {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/imgcropper/BitmapCropBehaviour.java
Patch:
@@ -85,7 +85,7 @@ public Bitmap crop(int targetMaxSide) {
         Matrix imageInverse = new Matrix();
         MatrixUtils.inverse(mImageMatrix, imageInverse);
         // By inverting the matrix we will effectively "divide" our rectangle by it, thus getting
-        // its two points on the bitmap's surface. Math be cool indeed.
+        // its two points on the surface of the bitmap. Math be cool indeed.
         Rect targetRect = new Rect();
         MatrixUtils.transformRect(mHostView.mSelectionRect, targetRect, imageInverse);
         // Pick the best dimensions for the crop result, shrinking the target if necessary.

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/imgcropper/RegionDecoderCropBehaviour.java
Patch:
@@ -39,15 +39,15 @@ public class RegionDecoderCropBehaviour extends BitmapCropBehaviour {
     };
 
     /**
-     * Decoade a region from this Bitmap based on a subsection in the View coordinate space.
+     * Decode a region from this Bitmap based on a subsection in the View coordinate space.
      * @param targetDrawRect an output Rect. This Rect is the position at which the region must
      *                       be rendered within subsectionRect.
      * @param subsectionRect the subsection in View coordinate space. Note that this Rect is modified
      *                       by this function and shouldn't be re-used.
      * @return null if the resulting region is bigger than the original image
      *         null if the resulting region is completely out of the original image bounds
      *         null if the resulting region is smaller than 16x16 pixels
-     *         null if a region decoding error has occured
+     *         null if a region decoding error has occurred
      *         the resulting Bitmap region otherwise.
      */
     private Bitmap decodeRegionBitmap(RectF targetDrawRect, RectF subsectionRect) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/imgcropper/RegionDecoderCropBehaviour.java
Patch:
@@ -74,7 +74,7 @@ private Bitmap decodeRegionBitmap(RectF targetDrawRect, RectF subsectionRect) {
                 (int) subsectionRect.right,
                 (int) subsectionRect.bottom
         );
-        transformRect(subsectionRect, matrix);
+        MatrixUtils.transformRect(subsectionRect, matrix);
         targetDrawRect.set(subsectionRect);
         return mBitmapDecoder.decodeRegion(bitmapRegionRect, null);
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/imgcropper/CropperView.java
Patch:
@@ -139,8 +139,8 @@ private int findPointerIndex(MotionEvent event, int id)  {
     }
 
     @Override
-    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
-        super.onSizeChanged(w, h, oldw, oldh);
+    protected void onSizeChanged(int w, int h, int oldW, int oldH) {
+        super.onSizeChanged(w, h, oldW, oldH);
         int lesserDimension = (int)(Math.min(w, h) - mSelectionPadding);
         // Calculate the corners of the new selection frame. It should always appear at the center of the view.
         int centerShiftX = (w - lesserDimension) / 2;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/imgcropper/RegionDecoderCropBehaviour.java
Patch:
@@ -38,15 +38,15 @@ public class RegionDecoderCropBehaviour extends BitmapCropBehaviour {
     };
 
     /**
-     * Decoade a region from this Bitmap based on a subsection in the View coordinate space.
+     * Decode a region from this Bitmap based on a subsection in the View coordinate space.
      * @param targetDrawRect an output Rect. This Rect is the position at which the region must
      *                       be rendered within subsectionRect.
      * @param subsectionRect the subsection in View coordinate space. Note that this Rect is modified
      *                       by this function and shouldn't be re-used.
      * @return null if the resulting region is bigger than the original image
      *         null if the resulting region is completely out of the original image bounds
      *         null if the resulting region is smaller than 16x16 pixels
-     *         null if a region decoding error has occured
+     *         null if a region decoding error has occurred
      *         the resulting Bitmap region otherwise.
      */
     private Bitmap decodeRegionBitmap(RectF targetDrawRect, RectF subsectionRect) {
@@ -189,7 +189,7 @@ private Matrix createDecoderImageMatrix() {
 
     /**
      * Transform the coordinates of the Rect using the supplied Matrix.
-     * @param rect the input/ouput Rect for this operation
+     * @param rect the input/output Rect for this operation
      * @param regionImageInverse the Matrix for transforming the Rect.
      */
     private void transformRect(RectF rect, Matrix regionImageInverse) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/imgcropper/BitmapCropBehaviour.java
Patch:
@@ -99,8 +99,8 @@ public Bitmap crop(int targetMaxSide) {
         // Pick the best dimensions for the crop result, shrinking the target if necessary.
         int targetWidth, targetHeight;
         int targetMinDimension = Math.min(originalBitmapRect.width(), originalBitmapRect.height());
-        if(targetMinDimension > targetMaxSide) {
-            float ratio = (float) targetMinDimension / targetMaxSide;
+        if(targetMaxSide < targetMinDimension) {
+            float ratio = (float) targetMaxSide / targetMinDimension;
             targetWidth = (int) (originalBitmapRect.width() * ratio);
             targetHeight = (int) (originalBitmapRect.height() * ratio);
         }else {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/LauncherActivity.java
Patch:
@@ -41,7 +41,7 @@
 import net.kdt.pojavlaunch.tasks.AsyncMinecraftDownloader;
 import net.kdt.pojavlaunch.tasks.AsyncVersionList;
 import net.kdt.pojavlaunch.lifecycle.ContextAwareDoneListener;
-import net.kdt.pojavlaunch.tasks.NewMinecraftDownloader;
+import net.kdt.pojavlaunch.tasks.MinecraftDownloader;
 import net.kdt.pojavlaunch.utils.NotificationUtils;
 import net.kdt.pojavlaunch.value.launcherprofiles.LauncherProfiles;
 import net.kdt.pojavlaunch.value.launcherprofiles.MinecraftProfile;
@@ -133,7 +133,7 @@ public void onFragmentResumed(@NonNull FragmentManager fm, @NonNull Fragment f)
         }
         String normalizedVersionId = AsyncMinecraftDownloader.normalizeVersionId(prof.lastVersionId);
         JMinecraftVersionList.Version mcVersion = AsyncMinecraftDownloader.getListedVersion(normalizedVersionId);
-        new NewMinecraftDownloader().start(
+        new MinecraftDownloader().start(
                 this,
                 mcVersion,
                 normalizedVersionId,

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/OptiFineDownloadTask.java
Patch:
@@ -7,7 +7,7 @@
 import net.kdt.pojavlaunch.Tools;
 import net.kdt.pojavlaunch.progresskeeper.ProgressKeeper;
 import net.kdt.pojavlaunch.tasks.AsyncMinecraftDownloader;
-import net.kdt.pojavlaunch.tasks.NewMinecraftDownloader;
+import net.kdt.pojavlaunch.tasks.MinecraftDownloader;
 import net.kdt.pojavlaunch.utils.DownloadUtils;
 
 import java.io.File;
@@ -89,7 +89,7 @@ public boolean downloadMinecraft(String minecraftVersion) {
         if(minecraftJsonVersion == null) return false;
         try {
             synchronized (mMinecraftDownloadLock) {
-                new NewMinecraftDownloader().start(null, minecraftJsonVersion, minecraftVersion, this);
+                new MinecraftDownloader().start(null, minecraftJsonVersion, minecraftVersion, this);
                 mMinecraftDownloadLock.wait();
             }
         }catch (InterruptedException e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/DownloadUtils.java
Patch:
@@ -200,7 +200,7 @@ public static <T> T ensureSha1(File outputFile, @Nullable String sha1, Callable<
 
         int attempts = 0;
         T result = null;
-        while (attempts < 5 && (!outputFile.exists() || Tools.compareSHA1(outputFile, sha1))){
+        while (attempts < 5 && (!outputFile.exists() || !Tools.compareSHA1(outputFile, sha1))){
             attempts++;
             try {
                 result = downloadFunction.call();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/LauncherActivity.java
Patch:
@@ -41,7 +41,7 @@
 import net.kdt.pojavlaunch.tasks.AsyncMinecraftDownloader;
 import net.kdt.pojavlaunch.tasks.AsyncVersionList;
 import net.kdt.pojavlaunch.lifecycle.ContextAwareDoneListener;
-import net.kdt.pojavlaunch.tasks.NewMinecraftDownloader;
+import net.kdt.pojavlaunch.tasks.MinecraftDownloader;
 import net.kdt.pojavlaunch.utils.NotificationUtils;
 import net.kdt.pojavlaunch.value.launcherprofiles.LauncherProfiles;
 import net.kdt.pojavlaunch.value.launcherprofiles.MinecraftProfile;
@@ -133,7 +133,7 @@ public void onFragmentResumed(@NonNull FragmentManager fm, @NonNull Fragment f)
         }
         String normalizedVersionId = AsyncMinecraftDownloader.normalizeVersionId(prof.lastVersionId);
         JMinecraftVersionList.Version mcVersion = AsyncMinecraftDownloader.getListedVersion(normalizedVersionId);
-        new NewMinecraftDownloader().start(
+        new MinecraftDownloader().start(
                 this,
                 mcVersion,
                 normalizedVersionId,

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/OptiFineDownloadTask.java
Patch:
@@ -7,7 +7,7 @@
 import net.kdt.pojavlaunch.Tools;
 import net.kdt.pojavlaunch.progresskeeper.ProgressKeeper;
 import net.kdt.pojavlaunch.tasks.AsyncMinecraftDownloader;
-import net.kdt.pojavlaunch.tasks.NewMinecraftDownloader;
+import net.kdt.pojavlaunch.tasks.MinecraftDownloader;
 import net.kdt.pojavlaunch.utils.DownloadUtils;
 
 import java.io.File;
@@ -89,7 +89,7 @@ public boolean downloadMinecraft(String minecraftVersion) {
         if(minecraftJsonVersion == null) return false;
         try {
             synchronized (mMinecraftDownloadLock) {
-                new NewMinecraftDownloader().start(null, minecraftJsonVersion, minecraftVersion, this);
+                new MinecraftDownloader().start(null, minecraftJsonVersion, minecraftVersion, this);
                 mMinecraftDownloadLock.wait();
             }
         }catch (InterruptedException e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/DownloadUtils.java
Patch:
@@ -200,7 +200,7 @@ public static <T> T ensureSha1(File outputFile, @Nullable String sha1, Callable<
 
         int attempts = 0;
         T result = null;
-        while (attempts < 5 && (!outputFile.exists() || Tools.compareSHA1(outputFile, sha1))){
+        while (attempts < 5 && (!outputFile.exists() || !Tools.compareSHA1(outputFile, sha1))){
             attempts++;
             try {
                 result = downloadFunction.call();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/MicrosoftBackgroundLogin.java
Patch:
@@ -104,7 +104,7 @@ public void performLogin(@Nullable final ProgressListener progressListener,
                 }
 
             }catch (Exception e){
-                Log.e("MicroAuth", e.toString());
+                Log.e("MicroAuth", "Exception thrown during authentication", e);
                 if(errorListener != null)
                     Tools.runOnUiThread(() -> errorListener.onLoginError(e));
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/OldVersionsUtils.java
Patch:
@@ -9,7 +9,6 @@
 
 import java.text.ParseException;
 import java.util.Date;
-import java.util.GregorianCalendar;
 
 /** Class here to help with various stuff to help run lower versions smoothly */
 public class OldVersionsUtils {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncMinecraftDownloader.java
Patch:
@@ -93,7 +93,7 @@ private void downloadGame(Activity activity, JMinecraftVersionList.Version verIn
             // THIS one function need the activity in the case of an error
             if(activity != null && !JRE17Util.installNewJreIfNeeded(activity, verInfo)){
                 ProgressLayout.clearProgress(ProgressLayout.DOWNLOAD_MINECRAFT);
-                throw new DownloaderException();
+                throw new DownloaderException(new Exception(activity.getString(R.string.exception_failed_to_unpack_jre17)));
             }
 
             try {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/LauncherActivity.java
Patch:
@@ -23,7 +23,7 @@
 import com.kdt.mcgui.ProgressLayout;
 import com.kdt.mcgui.mcAccountSpinner;
 
-import net.kdt.pojavlaunch.contextexecutor.ContextExecutor;
+import net.kdt.pojavlaunch.lifecycle.ContextExecutor;
 import net.kdt.pojavlaunch.contracts.OpenDocumentWithExtension;
 import net.kdt.pojavlaunch.extra.ExtraConstants;
 import net.kdt.pojavlaunch.extra.ExtraCore;
@@ -40,7 +40,7 @@
 import net.kdt.pojavlaunch.services.ProgressServiceKeeper;
 import net.kdt.pojavlaunch.tasks.AsyncMinecraftDownloader;
 import net.kdt.pojavlaunch.tasks.AsyncVersionList;
-import net.kdt.pojavlaunch.tasks.ContextAwareDoneListener;
+import net.kdt.pojavlaunch.lifecycle.ContextAwareDoneListener;
 import net.kdt.pojavlaunch.utils.NotificationUtils;
 import net.kdt.pojavlaunch.value.launcherprofiles.LauncherProfiles;
 import net.kdt.pojavlaunch.value.launcherprofiles.MinecraftProfile;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
-import net.kdt.pojavlaunch.contextexecutor.ContextExecutor;
+import net.kdt.pojavlaunch.lifecycle.ContextExecutor;
 import net.kdt.pojavlaunch.tasks.AsyncAssetManager;
 import net.kdt.pojavlaunch.utils.*;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/ShowErrorActivity.java
Patch:
@@ -9,7 +9,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
-import net.kdt.pojavlaunch.contextexecutor.ContextExecutorTask;
+import net.kdt.pojavlaunch.lifecycle.ContextExecutorTask;
 import net.kdt.pojavlaunch.utils.NotificationUtils;
 
 import java.io.Serializable;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/lifecycle/ContextExecutor.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.contextexecutor;
+package net.kdt.pojavlaunch.lifecycle;
 
 import android.app.Activity;
 import android.app.Application;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/lifecycle/ContextExecutorTask.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.contextexecutor;
+package net.kdt.pojavlaunch.lifecycle;
 
 import android.app.Activity;
 import android.content.Context;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/mirrors/MirrorTamperedException.java
Patch:
@@ -7,7 +7,7 @@
 
 import net.kdt.pojavlaunch.R;
 import net.kdt.pojavlaunch.ShowErrorActivity;
-import net.kdt.pojavlaunch.contextexecutor.ContextExecutorTask;
+import net.kdt.pojavlaunch.lifecycle.ContextExecutorTask;
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;
 
 public class MirrorTamperedException extends Exception implements ContextExecutorTask {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -313,9 +313,10 @@ public boolean onTouchEvent(MotionEvent e) {
                     if(hasDoubleTapped && hudKeyHandled == mLastHotbarKey && !PREF_DISABLE_SWAP_HAND){
                         //Prevent double tapping Event on two different slots
                         sendKeyPress(LwjglGlfwKeycode.GLFW_KEY_F);
+                    } else {
+                        mHandler.sendEmptyMessageDelayed(MSG_DROP_ITEM_BUTTON_CHECK, 350);
                     }
 
-                    mHandler.sendEmptyMessageDelayed(MSG_DROP_ITEM_BUTTON_CHECK, 350);
                     CallbackBridge.sendCursorPos(CallbackBridge.mouseX, CallbackBridge.mouseY);
                     mLastHotbarKey = hudKeyHandled;
                     break;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -55,7 +55,6 @@ public class MinecraftGLSurface extends View implements GrabListener {
             .remapX(true)
             .remapY(true)
 
-            .remapDpad(true)
             .remapLeftJoystick(true)
             .remapRightJoystick(true)
             .remapStart(true)

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlInterface.java
Patch:
@@ -116,7 +116,7 @@ default void setBackground() {
                 ? (GradientDrawable) getControlView().getBackground()
                 : new GradientDrawable();
         gd.setColor(getProperties().bgColor);
-        gd.setStroke((int) Tools.dpToPx(getProperties().strokeWidth), getProperties().strokeColor);
+        gd.setStroke((int) Tools.dpToPx(getProperties().strokeWidth * (getControlLayoutParent().getLayoutScale()/100f)), getProperties().strokeColor);
         gd.setCornerRadius(computeCornerRadius(getProperties().cornerRadius));
 
         getControlView().setBackground(gd);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlJoystick.java
Patch:
@@ -109,7 +109,7 @@ public void cloneButton() {
 
     @Override
     public void setBackground() {
-        setBorderWidth((int) Tools.dpToPx(getProperties().strokeWidth));
+        setBorderWidth((int) Tools.dpToPx(getProperties().strokeWidth * (getControlLayoutParent().getLayoutScale()/100f)));
         setBorderColor(getProperties().strokeColor);
         setBackgroundColor(getProperties().bgColor);
     }

File: app_pojavlauncher/src/main/java/com/kdt/mcgui/mcAccountSpinner.java
Patch:
@@ -307,7 +307,7 @@ private void pickAccount(int position){
             if(view != null){
                 Bitmap bitmap = mSelectecAccount.getSkinFace();
                 if(bitmap != null) {
-                    mHeadDrawable = new BitmapDrawable(bitmap);
+                    mHeadDrawable = new BitmapDrawable(getResources(), bitmap);
                     mHeadDrawable.setBounds(0, 0, bitmap.getWidth(), bitmap.getHeight());
 
                     view.setCompoundDrawables(mHeadDrawable, null, null, null);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -28,6 +28,9 @@ public CustomControls(List<ControlData> mControlDataList, List<ControlDrawerData
 	}
 	
 	// Generate default control
+	// Here for historical reasons
+	// Just admire it idk
+	@SuppressWarnings("unused")
 	public CustomControls(Context ctx) {
 		this();
 		this.mControlDataList.add(new ControlData(ControlData.getSpecialButtons()[0])); // Keyboard

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ModVersionListFragment.java
Patch:
@@ -16,6 +16,7 @@
 
 import net.kdt.pojavlaunch.R;
 import net.kdt.pojavlaunch.Tools;
+import net.kdt.pojavlaunch.mirrors.DownloadMirror;
 import net.kdt.pojavlaunch.modloaders.ModloaderDownloadListener;
 import net.kdt.pojavlaunch.modloaders.ModloaderListenerProxy;
 import net.kdt.pojavlaunch.progresskeeper.ProgressKeeper;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/OptiFineDownloadTask.java
Patch:
@@ -88,7 +88,7 @@ public boolean downloadMinecraft(String minecraftVersion) {
         if(minecraftJsonVersion == null) return false;
         try {
             synchronized (mMinecraftDownloadLock) {
-                new AsyncMinecraftDownloader(null, minecraftJsonVersion, minecraftVersion, this);
+                new AsyncMinecraftDownloader().start(null, minecraftJsonVersion, minecraftVersion, this);
                 mMinecraftDownloadLock.wait();
             }
         }catch (InterruptedException e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/CustomSeekBarPreference.java
Patch:
@@ -9,6 +9,7 @@
 import android.widget.SeekBar;
 import android.widget.TextView;
 
+import androidx.annotation.NonNull;
 import androidx.preference.PreferenceViewHolder;
 import androidx.preference.SeekBarPreference;
 
@@ -54,7 +55,7 @@ public void setMin(int min) {
 
 
     @Override
-    public void onBindViewHolder(PreferenceViewHolder view) {
+    public void onBindViewHolder(@NonNull PreferenceViewHolder view) {
         super.onBindViewHolder(view);
         TextView titleTextView = (TextView) view.findViewById(android.R.id.title);
         titleTextView.setTextColor(Color.WHITE);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceMiscellaneousFragment.java
Patch:
@@ -11,7 +11,7 @@ public class LauncherPreferenceMiscellaneousFragment extends LauncherPreferenceF
     @Override
     public void onCreatePreferences(Bundle b, String str) {
         addPreferencesFromResource(R.xml.pref_misc);
-        Preference driverPreference = findPreference("zinkPreferSystemDriver");
+        Preference driverPreference = requirePreference("zinkPreferSystemDriver");
         if(!Tools.checkVulkanSupport(driverPreference.getContext().getPackageManager())) {
             driverPreference.setVisible(false);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/services/GameService.java
Patch:
@@ -14,7 +14,7 @@
 
 import net.kdt.pojavlaunch.R;
 import net.kdt.pojavlaunch.Tools;
-import net.kdt.pojavlaunch.value.NotificationConstants;
+import net.kdt.pojavlaunch.utils.NotificationUtils;
 
 import java.lang.ref.WeakReference;
 
@@ -39,15 +39,15 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         }
         Intent killIntent = new Intent(getApplicationContext(), GameService.class);
         killIntent.putExtra("kill", true);
-        PendingIntent pendingKillIntent = PendingIntent.getService(this, NotificationConstants.PENDINGINTENT_CODE_KILL_GAME_SERVICE
+        PendingIntent pendingKillIntent = PendingIntent.getService(this, NotificationUtils.PENDINGINTENT_CODE_KILL_GAME_SERVICE
                 , killIntent, Build.VERSION.SDK_INT >=23 ? PendingIntent.FLAG_IMMUTABLE : 0);
         NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this, "channel_id")
                 .setContentTitle(getString(R.string.lazy_service_default_title))
                 .setContentText(getString(R.string.notification_game_runs))
                 .addAction(android.R.drawable.ic_menu_close_clear_cancel,  getString(R.string.notification_terminate), pendingKillIntent)
                 .setSmallIcon(R.drawable.notif_icon)
                 .setNotificationSilent();
-       startForeground(NotificationConstants.NOTIFICATION_ID_GAME_SERVICE, notificationBuilder.build());
+       startForeground(NotificationUtils.NOTIFICATION_ID_GAME_SERVICE, notificationBuilder.build());
         return START_NOT_STICKY; // non-sticky so android wont try restarting the game after the user uses the "Quit" button
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/services/ProgressService.java
Patch:
@@ -19,7 +19,7 @@
 import net.kdt.pojavlaunch.Tools;
 import net.kdt.pojavlaunch.progresskeeper.ProgressKeeper;
 import net.kdt.pojavlaunch.progresskeeper.TaskCountListener;
-import net.kdt.pojavlaunch.value.NotificationConstants;
+import net.kdt.pojavlaunch.utils.NotificationUtils;
 
 /**
  * Lazy service which allows the process not to get killed.
@@ -43,7 +43,7 @@ public void onCreate() {
         notificationManagerCompat = NotificationManagerCompat.from(getApplicationContext());
         Intent killIntent = new Intent(getApplicationContext(), ProgressService.class);
         killIntent.putExtra("kill", true);
-        PendingIntent pendingKillIntent = PendingIntent.getService(this, NotificationConstants.PENDINGINTENT_CODE_KILL_PROGRESS_SERVICE
+        PendingIntent pendingKillIntent = PendingIntent.getService(this, NotificationUtils.PENDINGINTENT_CODE_KILL_PROGRESS_SERVICE
                 , killIntent, Build.VERSION.SDK_INT >=23 ? PendingIntent.FLAG_IMMUTABLE : 0);
         mNotificationBuilder = new NotificationCompat.Builder(this, "channel_id")
                 .setContentTitle(getString(R.string.lazy_service_default_title))
@@ -64,7 +64,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         }
         Log.d("ProgressService", "Started!");
         mNotificationBuilder.setContentText(getString(R.string.progresslayout_tasks_in_progress, ProgressKeeper.getTaskCount()));
-        startForeground(NotificationConstants.NOTIFICATION_ID_PROGRESS_SERVICE, mNotificationBuilder.build());
+        startForeground(NotificationUtils.NOTIFICATION_ID_PROGRESS_SERVICE, mNotificationBuilder.build());
         if(ProgressKeeper.getTaskCount() < 1) stopSelf();
         else ProgressKeeper.addTaskCountListener(this, false);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlJoystickData.java
Patch:
@@ -9,7 +9,8 @@ public ControlJoystickData(){
         super();
     }
 
-    public ControlJoystickData(ControlData properties) {
+    public ControlJoystickData(ControlJoystickData properties) {
         super(properties);
+        forwardLock = properties.forwardLock;
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlJoystick.java
Patch:
@@ -102,8 +102,8 @@ public void removeButton() {
 
     @Override
     public void cloneButton() {
-        ControlData data = new ControlJoystickData(getProperties());
-        getControlLayoutParent().addJoystickButton((ControlJoystickData) data);
+        ControlJoystickData data = new ControlJoystickData(mControlData);
+        getControlLayoutParent().addJoystickButton(data);
     }
 
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -559,6 +559,7 @@ public static void showError(final Context ctx, final int titleId, final Throwab
     private static void showError(final Context ctx, final int titleId, final String rolledMessage, final Throwable e, final boolean exitIfOk, final boolean showMore) {
         if(e instanceof ContextExecutorTask) {
             ContextExecutor.execute((ContextExecutorTask) e);
+            return;
         }
         e.printStackTrace();
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/OptiFineDownloadTask.java
Patch:
@@ -88,7 +88,7 @@ public boolean downloadMinecraft(String minecraftVersion) {
         if(minecraftJsonVersion == null) return false;
         try {
             synchronized (mMinecraftDownloadLock) {
-                new AsyncMinecraftDownloader(null, minecraftJsonVersion, minecraftVersion, this);
+                new AsyncMinecraftDownloader().start(null, minecraftJsonVersion, minecraftVersion, this);
                 mMinecraftDownloadLock.wait();
             }
         }catch (InterruptedException e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -102,7 +102,7 @@ public static void loadPreferences(Context ctx) {
         PREF_FORCE_VSYNC = DEFAULT_PREF.getBoolean("force_vsync", false);
         PREF_BUTTON_ALL_CAPS = DEFAULT_PREF.getBoolean("buttonAllCaps", true);
         PREF_DUMP_SHADERS = DEFAULT_PREF.getBoolean("dump_shaders", false);
-        PREF_DEADZONE_SCALE = DEFAULT_PREF.getInt("gamepad_deadzone_scale", 100)/100f;
+        PREF_DEADZONE_SCALE = ((float) DEFAULT_PREF.getInt("gamepad_deadzone_scale", 100))/100f;
         PREF_BIG_CORE_AFFINITY = DEFAULT_PREF.getBoolean("bigCoreAffinity", false);
         PREF_ZINK_PREFER_SYSTEM_DRIVER = DEFAULT_PREF.getBoolean("zinkPreferSystemDriver", false);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceControlFragment.java
Patch:
@@ -51,7 +51,7 @@ public void onCreatePreferences(Bundle b, String str) {
 
         CustomSeekBarPreference deadzoneSeek = findPreference("gamepad_deadzone_scale");
         deadzoneSeek.setRange(50, 200);
-        deadzoneSeek.setValue((int) joystickDeadzone * 100);
+        deadzoneSeek.setValue((int) (joystickDeadzone * 100f));
         deadzoneSeek.setSuffix(" %");
 
 
@@ -66,6 +66,7 @@ public void onCreatePreferences(Bundle b, String str) {
         gyroSensitivitySeek.setRange(25, 300);
         gyroSensitivitySeek.setValue((int) (gyroSpeed*100f));
         gyroSensitivitySeek.setSuffix(" %");
+
         CustomSeekBarPreference gyroSampleRateSeek = findPreference("gyroSampleRate");
         gyroSampleRateSeek.setRange(5, 50);
         gyroSampleRateSeek.setValue(gyroSampleRate);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ModVersionListFragment.java
Patch:
@@ -144,7 +144,6 @@ public void onDownloadError(Exception e) {
             getTaskProxy().detachListener();
             setTaskProxy(null);
             mExpandableListView.setEnabled(true);
-            if(DownloadMirror.checkForTamperedException(context, e)) return;
             Tools.showError(context, e);
         });
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncMinecraftDownloader.java
Patch:
@@ -399,10 +399,10 @@ public void downloadVersionJson(String versionName, File verJsonDir, JMinecraftV
     }
 
     private boolean verifyManifest(File verJsonDir, JMinecraftVersionList.Version verInfo) {
-        return verJsonDir.exists()
+        return /*verJsonDir.exists()
                 && (!LauncherPreferences.PREF_CHECK_LIBRARY_SHA
                 || verInfo.sha1 == null
-                || Tools.compareSHA1(verJsonDir, verInfo.sha1));
+                || Tools.compareSHA1(verJsonDir, verInfo.sha1));*/false;
     }
 
     public static String normalizeVersionId(String versionString) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/ContextAwareDoneListener.java
Patch:
@@ -37,8 +37,7 @@ public void onDownloadDone() {
 
     @Override
     public void onDownloadFailed(Throwable throwable) {
-        if(throwable != null)
-            Tools.showErrorRemote(mErrorString, throwable);
+        Tools.showErrorRemote(mErrorString, throwable);
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/CustomSeekBarPreference.java
Patch:
@@ -9,6 +9,7 @@
 import android.widget.SeekBar;
 import android.widget.TextView;
 
+import androidx.annotation.NonNull;
 import androidx.preference.PreferenceViewHolder;
 import androidx.preference.SeekBarPreference;
 
@@ -54,7 +55,7 @@ public void setMin(int min) {
 
 
     @Override
-    public void onBindViewHolder(PreferenceViewHolder view) {
+    public void onBindViewHolder(@NonNull PreferenceViewHolder view) {
         super.onBindViewHolder(view);
         TextView titleTextView = (TextView) view.findViewById(android.R.id.title);
         titleTextView.setTextColor(Color.WHITE);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -69,9 +69,8 @@ public static void loadPreferences(Context ctx) {
         Tools.initContextConstants(ctx);
 
         PREF_RENDERER = DEFAULT_PREF.getString("renderer", "opengles2");
-
-		PREF_BUTTONSIZE = DEFAULT_PREF.getInt("buttonscale", 100);
-		PREF_MOUSESCALE = DEFAULT_PREF.getInt("mousescale", 100);
+        PREF_BUTTONSIZE = DEFAULT_PREF.getInt("buttonscale", 100);
+        PREF_MOUSESCALE = DEFAULT_PREF.getInt("mousescale", 100);
 		PREF_MOUSESPEED = ((float)DEFAULT_PREF.getInt("mousespeed",100))/100f;
 		PREF_HIDE_SIDEBAR = DEFAULT_PREF.getBoolean("hideSidebar", false);
 		PREF_IGNORE_NOTCH = DEFAULT_PREF.getBoolean("ignoreNotch", false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceMiscellaneousFragment.java
Patch:
@@ -11,7 +11,7 @@ public class LauncherPreferenceMiscellaneousFragment extends LauncherPreferenceF
     @Override
     public void onCreatePreferences(Bundle b, String str) {
         addPreferencesFromResource(R.xml.pref_misc);
-        Preference driverPreference = findPreference("zinkPreferSystemDriver");
+        Preference driverPreference = requirePreference("zinkPreferSystemDriver");
         if(!Tools.checkVulkanSupport(driverPreference.getContext().getPackageManager())) {
             driverPreference.setVisible(false);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -360,7 +360,8 @@ public static List<String> getJavaArgs(Context ctx, String runtimeHome, String u
                 "-Dlog4j2.formatMsgNoLookups=true", //Log4j RCE mitigation
 
                 "-Dnet.minecraft.clientmodname=" + Tools.APP_NAME,
-                "-Dfml.earlyprogresswindow=false" //Forge 1.14+ workaround
+                "-Dfml.earlyprogresswindow=false", //Forge 1.14+ workaround
+                "-Dloader.disable_forked_guis=true"
         ));
         if(LauncherPreferences.PREF_ARC_CAPES) {
             overridableArguments.add("-javaagent:"+new File(Tools.DIR_DATA,"arc_dns_injector/arc_dns_injector.jar").getAbsolutePath()+"=23.95.137.176");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -177,6 +177,9 @@ public static void setJavaEnvironment(Activity activity, String jreHome) throws
         envMap.put("TMPDIR", Tools.DIR_CACHE.getAbsolutePath());
         envMap.put("LIBGL_MIPMAP", "3");
 
+        // Prevent OptiFine (and other error-reporting stuff in Minecraft) from balooning the log
+        envMap.put("LIBGL_NOERROR", "1");
+
         // On certain GLES drivers, overloading default functions shader hack fails, so disable it
         envMap.put("LIBGL_NOINTOVLHACK", "1");
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/MainMenuFragment.java
Patch:
@@ -50,7 +50,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
             runInstallerWithConfirmation(true);
             return true;
         });
-        mEditProfileButton.setOnClickListener(v -> Tools.swapFragment(requireActivity(), ProfileEditorFragment.class, ProfileEditorFragment.TAG, true, null));
+        mEditProfileButton.setOnClickListener(v -> mVersionSpinner.openProfileEditor(requireActivity()));
 
         mPlayButton.setOnClickListener(v -> ExtraCore.setValue(ExtraConstants.LAUNCH_GAME, true));
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/FabriclikeInstallFragment.java
Patch:
@@ -82,14 +82,14 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
     }
 
     @Override
-    public void onDestroyView() {
-        super.onDestroyView();
+    public void onStop() {
         cancelFutureChecked(mGameVersionFuture);
         cancelFutureChecked(mLoaderVersionFuture);
         ModloaderListenerProxy proxy = getListenerProxy();
         if(proxy != null) {
             proxy.detachListener();
         }
+        super.onStop();
     }
 
     private void onClickStart(View v) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ModVersionListFragment.java
Patch:
@@ -58,10 +58,10 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
     }
 
     @Override
-    public void onDestroyView() {
+    public void onStop() {
         ModloaderListenerProxy taskProxy = getTaskProxy();
         if(taskProxy != null) taskProxy.detachListener();
-        super.onDestroyView();
+        super.onStop();
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/api/ModLoader.java
Patch:
@@ -78,7 +78,6 @@ public Intent getInstallationIntent(Context context, File modInstallerJar) {
                 ForgeUtils.addAutoInstallArgs(baseIntent, modInstallerJar, getVersionId());
                 return baseIntent;
             case MOD_LOADER_QUILT:
-                throw new RuntimeException("Quilt is not supported");
             case MOD_LOADER_FABRIC:
             default:
                 return null;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/api/CurseforgeApi.java
Patch:
@@ -54,6 +54,7 @@ public SearchResult searchMod(SearchFilters searchFilters, SearchResult previous
         params.put("classId", searchFilters.isModpack ? CURSEFORGE_MODPACK_CLASS_ID : CURSEFORGE_MOD_CLASS_ID);
         params.put("searchFilter", searchFilters.name);
         params.put("sortField", CURSEFORGE_SORT_RELEVANCY);
+        params.put("sortOrder", "desc");
         if(searchFilters.mcVersion != null && !searchFilters.mcVersion.isEmpty())
             params.put("gameVersion", searchFilters.mcVersion);
         if(previousPageResult != null)

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/LauncherActivity.java
Patch:
@@ -24,6 +24,7 @@
 import com.kdt.mcgui.ProgressLayout;
 import com.kdt.mcgui.mcAccountSpinner;
 
+import net.kdt.pojavlaunch.contextexecutor.ContextExecutor;
 import net.kdt.pojavlaunch.fragments.MainMenuFragment;
 import net.kdt.pojavlaunch.fragments.MicrosoftLoginFragment;
 import net.kdt.pojavlaunch.extra.ExtraConstants;
@@ -183,12 +184,14 @@ protected void onCreate(Bundle savedInstanceState) {
     @Override
     protected void onResume() {
         super.onResume();
+        ContextExecutor.setActivity(this);
         mInstallTracker.attach();
     }
 
     @Override
     protected void onPause() {
         super.onPause();
+        ContextExecutor.clearActivity();
         mInstallTracker.detach();
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/api/ModpackApi.java
Patch:
@@ -57,7 +57,7 @@ default void handleInstallation(Context context, ModDetail modDetail, int select
                 if (loaderInfo == null) return;
                 loaderInfo.getDownloadTask(new NotificationDownloadListener(context, loaderInfo)).run();
             }catch (IOException e) {
-                // TODO: pass on the IOException to a relevant handler
+                Tools.showErrorRemote(context, R.string.modpack_install_download_failed, e);
             }
         });
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/api/ModLoader.java
Patch:
@@ -73,7 +73,7 @@ public Intent getInstallationIntent(Context context, File modInstallerJar) {
         Intent baseIntent = new Intent(context, JavaGUILauncherActivity.class);
         switch (modLoaderType) {
             case MOD_LOADER_FORGE:
-                ForgeUtils.addAutoInstallArgs(baseIntent, modInstallerJar, false);
+                ForgeUtils.addAutoInstallArgs(baseIntent, modInstallerJar, getVersionId());
                 return baseIntent;
             case MOD_LOADER_FABRIC:
                 FabricUtils.addAutoInstallArgs(baseIntent, modInstallerJar, minecraftVersion, modLoaderVersion, false, false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/api/ModLoader.java
Patch:
@@ -51,7 +51,7 @@ public String getVersionId() {
     public Runnable getDownloadTask(ModloaderDownloadListener listener) {
         switch (modLoaderType) {
             case MOD_LOADER_FORGE:
-                return new ForgeDownloadTask(listener, minecraftVersion+"-"+modLoaderVersion);
+                return new ForgeDownloadTask(listener, minecraftVersion, modLoaderVersion);
             case MOD_LOADER_FABRIC:
                 return new FabricDownloadTask(listener);
             case MOD_LOADER_QUILT:

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -79,6 +79,7 @@
 
 @SuppressWarnings("IOStreamConstructor")
 public final class Tools {
+    public  static final float BYTE_TO_MB = 1024 * 1024;
     public static final Handler MAIN_HANDLER = new Handler(Looper.getMainLooper());
     public static String APP_NAME = "null";
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/api/ModpackApi.java
Patch:
@@ -5,9 +5,6 @@
 import net.kdt.pojavlaunch.modloaders.modpacks.models.ModDetail;
 import net.kdt.pojavlaunch.modloaders.modpacks.models.ModItem;
 import net.kdt.pojavlaunch.modloaders.modpacks.models.SearchFilters;
-import net.kdt.pojavlaunch.progresskeeper.ProgressKeeper;
-
-import org.jetbrains.annotations.Nullable;
 
 /**
  *

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/modloaders/modpacks/models/ModDetail.java
Patch:
@@ -1,6 +1,8 @@
 package net.kdt.pojavlaunch.modloaders.modpacks.models;
 
 
+import androidx.annotation.NonNull;
+
 import java.util.Arrays;
 
 public class ModDetail extends ModItem {
@@ -15,6 +17,7 @@ public ModDetail(ModItem item, String[] versionNames, String[] mcVersionNames, S
         this.versionUrls = versionUrls;
     }
 
+    @NonNull
     @Override
     public String toString() {
         return "ModDetail{" +

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncMinecraftDownloader.java
Patch:
@@ -1,6 +1,7 @@
 package net.kdt.pojavlaunch.tasks;
 
 import static net.kdt.pojavlaunch.PojavApplication.sExecutorService;
+import static net.kdt.pojavlaunch.Tools.BYTE_TO_MB;
 import static net.kdt.pojavlaunch.utils.DownloadUtils.downloadFileMonitored;
 
 import android.app.Activity;
@@ -40,7 +41,7 @@
 import java.util.concurrent.atomic.AtomicInteger;
 
 public class AsyncMinecraftDownloader {
-    private static final float BYTE_TO_MB = 1024 * 1024;
+
     public static final String MINECRAFT_RES = "https://resources.download.minecraft.net/";
 
     /* Allows each downloading thread to have its own RECYCLED buffer */

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -322,7 +322,7 @@ private void runCraft(String versionId, JMinecraftVersionList.Version version) t
         }
         MinecraftAccount minecraftAccount = PojavProfile.getCurrentProfileContent(this, null);
         Logger.appendToLog("--------- beginning with launcher debug");
-        printLauncherInfo(versionId);
+        printLauncherInfo(versionId, Tools.isValidString(minecraftProfile.javaArgs) ? minecraftProfile.javaArgs : LauncherPreferences.PREF_CUSTOM_JAVA_ARGS);
         if (Tools.LOCAL_RENDERER.equals("vulkan_zink")) {
             checkVulkanZinkIsSupported();
         }
@@ -333,13 +333,13 @@ private void runCraft(String versionId, JMinecraftVersionList.Version version) t
         Tools.launchMinecraft(this, minecraftAccount, minecraftProfile, versionId, requiredJavaVersion);
     }
 
-    private void printLauncherInfo(String gameVersion) {
+    private void printLauncherInfo(String gameVersion, String javaArguments) {
         Logger.appendToLog("Info: Launcher version: " + BuildConfig.VERSION_NAME);
         Logger.appendToLog("Info: Architecture: " + Architecture.archAsString(Tools.DEVICE_ARCHITECTURE));
         Logger.appendToLog("Info: Device model: " + Build.MANUFACTURER + " " +Build.MODEL);
         Logger.appendToLog("Info: API version: " + Build.VERSION.SDK_INT);
         Logger.appendToLog("Info: Selected Minecraft version: " + gameVersion);
-        Logger.appendToLog("Info: Custom Java arguments: \"" + LauncherPreferences.PREF_CUSTOM_JAVA_ARGS + "\"");
+        Logger.appendToLog("Info: Custom Java arguments: \"" + javaArguments + "\"");
     }
 
     private void checkVulkanZinkIsSupported() {

File: app_pojavlauncher/src/main/java/com/kdt/mcgui/TextProgressBar.java
Patch:
@@ -46,7 +46,7 @@ private void init(){
     protected synchronized void onDraw(Canvas canvas) {
         super.onDraw(canvas);
         mTextPaint.setTextSize((float) ((getHeight()- getPaddingBottom() - getPaddingTop()) * 0.55));
-        int xPos = (int) Math.max(Math.min(getProgress() * getWidth() / getMax(), getWidth() - mTextPaint.measureText(mText)) - mTextPadding, mTextPadding);
+        int xPos = (int) Math.max(Math.min((getProgress() * getWidth() / getMax()) + mTextPadding, getWidth() - mTextPaint.measureText(mText) - mTextPadding) , mTextPadding);
         int yPos = (int) ((getHeight() / 2) - ((mTextPaint.descent() + mTextPaint.ascent()) / 2)) ;
 
         canvas.drawText(mText, xPos, yPos, mTextPaint);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -845,7 +845,7 @@ public static int getFreeDeviceMemory(Context ctx){
 
     public static int getDisplayFriendlyRes(int displaySideRes, float scaling){
         displaySideRes *= scaling;
-        if(displaySideRes % 2 != 0) displaySideRes ++;
+        if(displaySideRes % 2 != 0) displaySideRes --;
         return displaySideRes;
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -430,12 +430,12 @@ public void adjustMouseSpeedLive() {
         sb.setMax(275);
         tmpMouseSpeed = (int) ((LauncherPreferences.PREF_MOUSESPEED*100));
         sb.setProgress(tmpMouseSpeed-25);
-        tv.setText(getString(R.string.percent_format, tmpGyroSensitivity));
+        tv.setText(getString(R.string.percent_format, tmpMouseSpeed));
         sb.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int i, boolean b) {
                 tmpMouseSpeed = i+25;
-                tv.setText(getString(R.string.percent_format, tmpGyroSensitivity));
+                tv.setText(getString(R.string.percent_format, tmpMouseSpeed));
             }
             @Override
             public void onStartTrackingTouch(SeekBar seekBar) {}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -744,7 +744,7 @@ public static JMinecraftVersionList.Version getVersionInfo(String versionName, b
             }
 
             // LabyMod 4 sets version instead of majorVersion
-            if (customVer.javaVersion.majorVersion == 0) {
+            if (customVer.javaVersion != null && customVer.javaVersion.majorVersion == 0) {
                 customVer.javaVersion.majorVersion = customVer.javaVersion.version;
             }
             return customVer;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlInterface.java
Patch:
@@ -66,7 +66,7 @@ default void setVisible(boolean isVisible) {
     @Override
     default void onGrabState(boolean isGrabbing) {
         if (getControlLayoutParent() != null && getControlLayoutParent().getModifiable()) return; // Disable when edited
-        setVisible((getProperties().displayInGame && isGrabbing) || (getProperties().displayInMenu && !isGrabbing));
+        setVisible(((getProperties().displayInGame && isGrabbing) || (getProperties().displayInMenu && !isGrabbing)) && getControlLayoutParent().areControlVisible());
     }
 
     default ControlLayout getControlLayoutParent() {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JMinecraftVersionList.java
Patch:
@@ -39,6 +39,7 @@ public static class Version extends FileProperties {
     public static class JavaVersionInfo {
         public String component;
         public int majorVersion;
+        public int version; // parameter used by LabyMod 4
     }
     @Keep
     public static class LoggingConfig {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -329,6 +329,7 @@ public static List<String> getJavaArgs(Context ctx, String runtimeHome, String u
         ArrayList<String> overridableArguments = new ArrayList<>(Arrays.asList(
                 "-Djava.home=" + runtimeHome,
                 "-Djava.io.tmpdir=" + Tools.DIR_CACHE.getAbsolutePath(),
+                "-Djna.boot.library.path=" + NATIVE_LIB_DIR,
                 "-Duser.home=" + Tools.DIR_GAME_HOME,
                 "-Duser.language=" + System.getProperty("user.language"),
                 "-Dos.name=Linux",
@@ -337,7 +338,9 @@ public static List<String> getJavaArgs(Context ctx, String runtimeHome, String u
                 "-Dpojav.path.private.account=" + Tools.DIR_ACCOUNT_NEW,
                 "-Duser.timezone=" + TimeZone.getDefault().getID(),
 
+                "-Dorg.lwjgl.vulkan.libname=libvulkan.so",
                 //LWJGL 3 DEBUG FLAGS
+                 "-Dorg.lwjgl.util.NoChecks=true",
                 //"-Dorg.lwjgl.util.Debug=true",
                 //"-Dorg.lwjgl.util.DebugFunctions=true",
                 //"-Dorg.lwjgl.util.DebugLoader=true",

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -4,6 +4,8 @@
 import static net.kdt.pojavlaunch.MainActivity.mControlLayout;
 import static net.kdt.pojavlaunch.Tools.currentDisplayMetrics;
 
+import static org.lwjgl.glfw.CallbackBridge.isGrabbing;
+
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.os.Build;
@@ -239,7 +241,7 @@ public void setControlVisible(boolean isVisible) {
 
 		mControlVisible = isVisible;
 		for(ControlInterface button : getButtonChildren()){
-			button.setVisible(isVisible);
+			button.setVisible(((button.getProperties().displayInGame && isGrabbing()) || (button.getProperties().displayInMenu && !isGrabbing())) && isVisible);
 		}
 	}
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlSubButton.java
Patch:
@@ -33,7 +33,8 @@ private void filterProperties(){
 
     @Override
     public void setVisible(boolean isVisible) {
-        setVisibility(isVisible ? VISIBLE : (!mProperties.isHideable && parentDrawer.getVisibility() == GONE) ? VISIBLE : View.GONE);
+        // STUB, visibility handled by the ControlDrawer
+        //setVisibility(isVisible ? VISIBLE : (!mProperties.isHideable && parentDrawer.getVisibility() == GONE) ? VISIBLE : View.GONE);
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlSubButton.java
Patch:
@@ -92,6 +92,6 @@ public void snapAndAlign(float x, float y) {
 
     @Override
     public void loadEditValues(EditControlPopup editControlPopup) {
-        editControlPopup.loadSubButtonValues(getProperties());
+        editControlPopup.loadSubButtonValues(getProperties(), parentDrawer.drawerData.orientation);
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ProfileEditorFragment.java
Patch:
@@ -75,7 +75,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         List<String> renderList = new ArrayList<>(5);
         Collections.addAll(renderList, getResources().getStringArray(R.array.renderer));
         renderList.add("Default");
-        mDefaultRenderer.setAdapter(new ArrayAdapter<>(getContext(), android.R.layout.simple_list_item_1, renderList));
+        mDefaultRenderer.setAdapter(new ArrayAdapter<>(getContext(), R.layout.item_simple_list_1, renderList));
 
         // Set up behaviors
         mSaveButton.setOnClickListener(v -> {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/multirt/RTSpinnerAdapter.java
Patch:
@@ -56,7 +56,7 @@ public boolean hasStableIds() {
     public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {
         View view = convertView != null?
                 convertView:
-                LayoutInflater.from(mContext).inflate(android.R.layout.simple_list_item_1, parent,false);
+                LayoutInflater.from(mContext).inflate(R.layout.item_simple_list_1, parent,false);
 
         Runtime runtime = mRuntimes.get(position);
         if(position == mRuntimes.size() - 1 ){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -12,6 +12,7 @@
 
 import net.kdt.pojavlaunch.customcontrols.ControlData;
 import net.kdt.pojavlaunch.customcontrols.ControlDrawerData;
+import net.kdt.pojavlaunch.customcontrols.ControlJoystickData;
 import net.kdt.pojavlaunch.customcontrols.ControlLayout;
 import net.kdt.pojavlaunch.customcontrols.EditorExitable;
 import net.kdt.pojavlaunch.prefs.LauncherPreferences;
@@ -43,7 +44,7 @@ protected void onCreate(Bundle savedInstanceState) {
 			switch(position) {
 				case 0: mControlLayout.addControlButton(new ControlData("New")); break;
 				case 1: mControlLayout.addDrawer(new ControlDrawerData()); break;
-				case 2: mControlLayout.addJoystickButton(new ControlData()); break;
+				case 2: mControlLayout.addJoystickButton(new ControlJoystickData()); break;
 				case 3: mControlLayout.openLoadDialog(); break;
 				case 4: mControlLayout.openSaveDialog(this); break;
 				case 5: mControlLayout.openSetDefaultDialog(); break;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -110,7 +110,7 @@ public void loadLayout(CustomControls controlLayout) {
 		}
 
 		// Joystick(s)
-		for(ControlData joystick : mLayout.mJoystickDataList){
+		for(ControlJoystickData joystick : mLayout.mJoystickDataList){
 			addJoystickView(joystick);
 		}
 
@@ -196,12 +196,12 @@ private void addSubView(ControlDrawer drawer, ControlData controlButton){
 	}
 
 	// JOYSTICK BUTTON
-	public void addJoystickButton(ControlData data){
+	public void addJoystickButton(ControlJoystickData data){
 		mLayout.mJoystickDataList.add(data);
 		addJoystickView(data);
 	}
 
-	private void addJoystickView(ControlData data){
+	private void addJoystickView(ControlJoystickData data){
 		addView(new ControlJoystick(this, data));
 	}
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -13,14 +13,14 @@ public class CustomControls {
     public float scaledAt;
 	public List<ControlData> mControlDataList;
 	public List<ControlDrawerData> mDrawerDataList;
-	public List<ControlData> mJoystickDataList;
+	public List<ControlJoystickData> mJoystickDataList;
 	public CustomControls() {
 		this(new ArrayList<>(), new ArrayList<>(), new ArrayList<>());
 	}
 
 
 
-	public CustomControls(List<ControlData> mControlDataList, List<ControlDrawerData> mDrawerDataList, List<ControlData> mJoystickDataList) {
+	public CustomControls(List<ControlData> mControlDataList, List<ControlDrawerData> mDrawerDataList, List<ControlJoystickData> mJoystickDataList) {
 		this.mControlDataList = mControlDataList;
 		this.mDrawerDataList = mDrawerDataList;
 		this.mJoystickDataList = mJoystickDataList;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -185,11 +185,12 @@ private void addSubView(ControlDrawer drawer, ControlData controlButton){
 			view.setFocusable(false);
 			view.setFocusableInTouchMode(false);
 		}else{
-			view.setVisible(drawer.areButtonsVisible);
+			view.setVisible(true);
 		}
 
-		drawer.addButton(view);
 		addView(view);
+		drawer.addButton(view);
+
 
 		setModified(true);
 	}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlDrawer.java
Patch:
@@ -126,6 +126,9 @@ public ControlData preProcessProperties(ControlData properties, ControlLayout la
     public void setVisible(boolean isVisible) {
         //TODO replicate changes to his children ?
         setVisibility(isVisible ? VISIBLE : GONE);
+        if(!isVisible){
+            areButtonsVisible = false;
+        }
     }
 
     @SuppressLint("ClickableViewAccessibility")

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -446,9 +446,10 @@ public boolean dispatchCapturedPointerEvent(MotionEvent e) {
         CallbackBridge.mouseX += (e.getX()* mScaleFactor);
         CallbackBridge.mouseY += (e.getY()* mScaleFactor);
 
+        CallbackBridge.sendCursorPos(CallbackBridge.mouseX, CallbackBridge.mouseY);
+
         switch (e.getActionMasked()) {
             case MotionEvent.ACTION_MOVE:
-                CallbackBridge.sendCursorPos(CallbackBridge.mouseX, CallbackBridge.mouseY);
                 return true;
             case MotionEvent.ACTION_BUTTON_PRESS:
                 return sendMouseButtonUnconverted(e.getActionButton(), true);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/LayoutConverter.java
Patch:
@@ -28,7 +28,7 @@ public static CustomControls loadAndConvertIfNecessary(String jsonPath) throws I
                 CustomControls layout = LayoutConverter.convertV2Layout(layoutJobj);
                 layout.save(jsonPath);
                 return layout;
-            }else if (layoutJobj.getInt("version") == 3 || layoutJobj.getInt("version") == 4) {
+            }else if (layoutJobj.getInt("version") >= 3 && layoutJobj.getInt("version") <= 5) {
                 return Tools.GLOBAL_GSON.fromJson(jsonLayoutData, CustomControls.class);
             }else{
                 return null;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -188,7 +188,6 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount min
         String launchClassPath = generateLaunchClassPath(versionInfo, versionId);
 
         List<String> javaArgList = new ArrayList<>();
-        javaArgList.add("-Dorg.lwjgl.util.NoChecks=true");
 
         getCacioJavaArgs(javaArgList, runtime.javaVersion == 8);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -341,6 +341,7 @@ public static List<String> getJavaArgs(Context ctx, String runtimeHome, String u
                 //"-Dorg.lwjgl.util.Debug=true",
                 //"-Dorg.lwjgl.util.DebugFunctions=true",
                 //"-Dorg.lwjgl.util.DebugLoader=true",
+                "-Dorg.lwjgl.util.NoChecks=true",
                 // GLFW Stub width height
                 "-Dglfwstub.windowWidth=" + Tools.getDisplayFriendlyRes(currentDisplayMetrics.widthPixels, LauncherPreferences.PREF_SCALE_FACTOR/100F),
                 "-Dglfwstub.windowHeight=" + Tools.getDisplayFriendlyRes(currentDisplayMetrics.heightPixels, LauncherPreferences.PREF_SCALE_FACTOR/100F),

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -279,6 +279,7 @@ protected void onDestroy() {
     public void onConfigurationChanged(@NonNull Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
 
+        if(mGyroControl != null) mGyroControl.updateOrientation();
         Tools.updateWindowSize(this);
         minecraftGLView.refreshSize();
         runOnUiThread(() -> mControlLayout.refreshControlButtonPositions());

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -49,6 +49,7 @@ public class LauncherPreferences {
     public static boolean PREF_ENABLE_GYRO = false;
     public static float PREF_GYRO_SENSITIVITY = 1f;
     public static int PREF_GYRO_SAMPLE_RATE = 16;
+    public static boolean PREF_GYRO_SMOOTHING = true;
 
     public static boolean PREF_GYRO_INVERT_X = false;
 
@@ -61,6 +62,7 @@ public class LauncherPreferences {
     public static boolean PREF_BIG_CORE_AFFINITY = false;
 
 
+
     public static void loadPreferences(Context ctx) {
         //Required for the data folder.
         Tools.initContextConstants(ctx);
@@ -93,6 +95,7 @@ public static void loadPreferences(Context ctx) {
         PREF_ENABLE_GYRO = DEFAULT_PREF.getBoolean("enableGyro", false);
         PREF_GYRO_SENSITIVITY = ((float)DEFAULT_PREF.getInt("gyroSensitivity", 100))/100f;
         PREF_GYRO_SAMPLE_RATE = DEFAULT_PREF.getInt("gyroSampleRate", 16);
+        PREF_GYRO_SMOOTHING = DEFAULT_PREF.getBoolean("gyroSmoothing", true);
         PREF_GYRO_INVERT_X = DEFAULT_PREF.getBoolean("gyroInvertX", false);
         PREF_GYRO_INVERT_Y = DEFAULT_PREF.getBoolean("gyroInvertY", false);
         PREF_FORCE_VSYNC = DEFAULT_PREF.getBoolean("force_vsync", false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceControlFragment.java
Patch:
@@ -25,6 +25,7 @@ public void onCreatePreferences(Bundle b, String str) {
         float gyroSpeed = LauncherPreferences.PREF_GYRO_SENSITIVITY;
         float joystickDeadzone = LauncherPreferences.PREF_DEADZONE_SCALE;
 
+
         //Triggers a write for some reason which resets the value
         addPreferencesFromResource(R.xml.pref_control);
 
@@ -53,6 +54,7 @@ public void onCreatePreferences(Bundle b, String str) {
         deadzoneSeek.setValue((int) joystickDeadzone * 100);
         deadzoneSeek.setSuffix(" %");
 
+
         Context context = getContext();
         if(context != null) {
             mGyroAvailable = ((SensorManager)context.getSystemService(Context.SENSOR_SERVICE)).getDefaultSensor(Sensor.TYPE_GYROSCOPE) != null;
@@ -83,6 +85,7 @@ private void computeVisibility(){
         findPreference("gyroSampleRate").setVisible(LauncherPreferences.PREF_ENABLE_GYRO);
         findPreference("gyroInvertX").setVisible(LauncherPreferences.PREF_ENABLE_GYRO);
         findPreference("gyroInvertY").setVisible(LauncherPreferences.PREF_ENABLE_GYRO);
+        findPreference("gyroSmoothing").setVisible(LauncherPreferences.PREF_ENABLE_GYRO);
     }
 
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ModVersionListFragment.java
Patch:
@@ -118,7 +118,7 @@ public void onDownloadFinished(File downloadedFile) {
             setTaskProxy(null);
             mExpandableListView.setEnabled(true);
             // Read the comment in FabricInstallFragment.onDownloadFinished() to see how this works
-            getParentFragmentManager().popBackStack();
+            getParentFragmentManager().popBackStackImmediate();
             onDownloadFinished(context, downloadedFile);
         });
     }

File: forge_installer/src/main/java/git/artdeell/installer_agent/ComponentFilter.java
Patch:
@@ -1,4 +1,4 @@
-package git.artdeell.forgeinstaller;
+package git.artdeell.installer_agent;
 
 import java.awt.*;
 

File: forge_installer/src/main/java/git/artdeell/installer_agent/ComponentTimeoutTask.java
Patch:
@@ -1,4 +1,4 @@
-package git.artdeell.forgeinstaller;
+package git.artdeell.installer_agent;
 
 import java.util.TimerTask;
 

File: forge_installer/src/main/java/git/artdeell/installer_agent/DialogFilter.java
Patch:
@@ -1,4 +1,4 @@
-package git.artdeell.forgeinstaller;
+package git.artdeell.installer_agent;
 
 import javax.swing.*;
 import java.awt.*;

File: forge_installer/src/main/java/git/artdeell/installer_agent/MainWindowFilter.java
Patch:
@@ -1,4 +1,4 @@
-package git.artdeell.forgeinstaller;
+package git.artdeell.installer_agent;
 
 import javax.swing.*;
 import java.awt.*;

File: forge_installer/src/main/java/git/artdeell/installer_agent/ProfileFixer.java
Patch:
@@ -1,4 +1,4 @@
-package git.artdeell.forgeinstaller;
+package git.artdeell.installer_agent;
 
 import org.json.JSONException;
 import org.json.JSONObject;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/LauncherActivity.java
Patch:
@@ -165,7 +165,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ExtraCore.addExtraListener(ExtraConstants.LAUNCH_GAME, mLaunchGameListener);
 
-        new AsyncVersionList().getVersionList(versions -> ExtraCore.setValue(ExtraConstants.RELEASE_TABLE, versions));
+        new AsyncVersionList().getVersionList(versions -> ExtraCore.setValue(ExtraConstants.RELEASE_TABLE, versions), false);
 
         mProgressLayout.observe(ProgressLayout.DOWNLOAD_MINECRAFT);
         mProgressLayout.observe(ProgressLayout.UNPACK_RUNTIME);

File: forge_installer/src/main/java/git/artdeell/forgeinstaller/DialogFilter.java
Patch:
@@ -6,6 +6,7 @@
 public class DialogFilter implements ComponentFilter{
     @Override
     public boolean checkComponent(Component component) {
-        return component instanceof JOptionPane;
+        return component instanceof JOptionPane
+                || component instanceof JProgressBar;
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncMinecraftDownloader.java
Patch:
@@ -141,7 +141,7 @@ verInfo.logging.client.file.url, outLib, getByteBuffer(),
                     continue;
                 }
 
-                String libArtifact = libItem.downloads.artifact.path;
+                String libArtifact = Tools.artifactToPath(libItem);
                 outLib = new File(Tools.DIR_HOME_LIBRARY + "/" + libArtifact);
                 outLib.getParentFile().mkdirs();
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncMinecraftDownloader.java
Patch:
@@ -141,7 +141,7 @@ verInfo.logging.client.file.url, outLib, getByteBuffer(),
                     continue;
                 }
 
-                String libArtifact = Tools.artifactToPath(libItem.name);
+                String libArtifact = libItem.downloads.artifact.path;
                 outLib = new File(Tools.DIR_HOME_LIBRARY + "/" + libArtifact);
                 outLib.getParentFile().mkdirs();
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -304,7 +304,7 @@ public static String[] getMinecraftJVMArgs(String versionName, File gameDir) {
 
         Map<String, String> varArgMap = new ArrayMap<>();
         varArgMap.put("classpath_separator", ":");
-        varArgMap.put("library_directory", new File(gameDir, "libraries").getAbsolutePath());
+        varArgMap.put("library_directory", DIR_HOME_LIBRARY);
         varArgMap.put("version_name", versionInfo.id);
         varArgMap.put("natives_directory", Tools.NATIVE_LIB_DIR);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -57,6 +57,7 @@ public class LauncherPreferences {
 
     public static boolean PREF_BUTTON_ALL_CAPS = true;
     public static boolean PREF_DUMP_SHADERS = false;
+    public static float PREF_DEADZONE_SCALE = 1f;
 
 
     public static void loadPreferences(Context ctx) {
@@ -96,6 +97,7 @@ public static void loadPreferences(Context ctx) {
         PREF_FORCE_VSYNC = DEFAULT_PREF.getBoolean("force_vsync", false);
         PREF_BUTTON_ALL_CAPS = DEFAULT_PREF.getBoolean("buttonAllCaps", true);
         PREF_DUMP_SHADERS = DEFAULT_PREF.getBoolean("dump_shaders", false);
+        PREF_DEADZONE_SCALE = DEFAULT_PREF.getInt("gamepad_deadzone_scale", 100)/100f;
 
         String argLwjglLibname = "-Dorg.lwjgl.opengl.libname=";
         for (String arg : JREUtils.parseJavaArguments(PREF_CUSTOM_JAVA_ARGS)) {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -617,7 +617,8 @@ private Functions() {}
         SwapBuffers = apiGetFunctionAddress(GLFW, "pojavSwapBuffers"),
         SwapInterval = apiGetFunctionAddress(GLFW, "pojavSwapInterval"),
         PumpEvents = apiGetFunctionAddress(GLFW, "pojavPumpEvents"),
-        RewindEvents = apiGetFunctionAddress(GLFW, "pojavRewindEvents");
+        RewindEvents = apiGetFunctionAddress(GLFW, "pojavRewindEvents"),
+        SetupEvents = apiGetFunctionAddress(GLFW, "pojavComputeEventTarget");
     }
 
     public static SharedLibrary getLibrary() {
@@ -1058,7 +1059,7 @@ public static void glfwPollEvents() {
             mGLFWIsInputReady = true;
             CallbackBridge.nativeSetInputReady(true);
         }
-
+        callV(Functions.SetupEvents);
         for (Long ptr : mGLFWWindowMap.keySet()) callJV(ptr, Functions.PumpEvents);
         callV(Functions.RewindEvents);
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -303,7 +303,9 @@ public void onTouch(View v, MotionEvent ev) {
 		ControlInterface lastControlButton = mapTable.get(v);
 
 		//Check if the action is cancelling, reset the lastControl button associated to the view
-		if(ev.getActionMasked() == MotionEvent.ACTION_UP || ev.getActionMasked() == MotionEvent.ACTION_CANCEL){
+		if(ev.getActionMasked() == MotionEvent.ACTION_UP
+				|| ev.getActionMasked() == MotionEvent.ACTION_CANCEL
+				|| ev.getActionMasked() == MotionEvent.ACTION_POINTER_UP){
 			if(lastControlButton != null) lastControlButton.sendKeyPresses(false);
 			mapTable.put(v, null);
 			return;

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -6,6 +6,7 @@
 
 import android.util.*;
 
+import java.lang.annotation.Native;
 import java.lang.reflect.*;
 import java.nio.*;
 
@@ -1352,7 +1353,8 @@ public static void glfwGetCursorPos(@NativeType("GLFWwindow *") long window, @Nu
         nglfwGetCursorPosA(window, xpos, ypos);
     }
 
-    public static boolean glfwExtensionSupported(String ext) {
+    @NativeType("int")
+    public static boolean glfwExtensionSupported(@NativeType("char const *") CharSequence ext) {
         //return Arrays.stream(glGetString(GL_EXTENSIONS).split(" ")).anyMatch(ext::equals);
         // Fast path, but will return true if one has the same prefix
         return glGetString(GL_EXTENSIONS).contains(ext);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -52,7 +52,7 @@ public final class Tools {
 
     public static final Gson GLOBAL_GSON = new GsonBuilder().setPrettyPrinting().create();
 
-    public static final String URL_HOME = "https://pojavlauncherteam.github.io/PojavLauncher";
+    public static final String URL_HOME = "https://pojavlauncherteam.github.io";
 
     public static String NATIVE_LIB_DIR;
     public static String DIR_DATA; //Initialized later to get context

File: app_pojavlauncher/src/main/java/com/kdt/mcgui/TextProgressBar.java
Patch:
@@ -37,6 +37,7 @@ private void init(){
         mTextPaint = new Paint();
         mTextPaint.setColor(Color.WHITE);
         mTextPaint.setFlags(Paint.FAKE_BOLD_TEXT_FLAG);
+        mTextPaint.setAntiAlias(true);
     }
 
     @Override

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -498,6 +498,8 @@ public class GLFW
     private static ArrayMap<Long, GLFWWindowProperties> mGLFWWindowMap;
     public static boolean mGLFWIsInputReady;
     public static final ByteBuffer keyDownBuffer = ByteBuffer.allocateDirect(317);
+    public static final ByteBuffer mouseDownBuffer = ByteBuffer.allocateDirect(8);
+
     private static final String PROP_WINDOW_WIDTH = "glfwstub.windowWidth";
     private static final String PROP_WINDOW_HEIGHT= "glfwstub.windowHeight";
     public static long mainContext = 0;
@@ -1116,7 +1118,7 @@ public static int glfwGetKey(@NativeType("GLFWwindow *") long window, int key) {
     }
 
     public static int glfwGetMouseButton(@NativeType("GLFWwindow *") long window, int button) {
-        return 0;
+        return mouseDownBuffer.get(button);
     }
     public static void glfwGetCursorPos(@NativeType("GLFWwindow *") long window, @Nullable @NativeType("double *") DoubleBuffer xpos, @Nullable @NativeType("double *") DoubleBuffer ypos) {
         if (CHECKS) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -88,7 +88,7 @@ public void onCreate(Bundle savedInstanceState) {
         initLayout(R.layout.activity_basemain);
         CallbackBridge.addGrabListener(touchpad);
         CallbackBridge.addGrabListener(minecraftGLView);
-        if(LauncherPreferences.PREF_ENALBE_GYRO) mGyroControl = new GyroControl(this);
+        if(LauncherPreferences.PREF_ENABLE_GYRO) mGyroControl = new GyroControl(this);
 
         // Enabling this on TextureView results in a broken white result
         if(PREF_USE_ALTERNATE_SURFACE) getWindow().setBackgroundDrawable(null);
@@ -514,7 +514,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {}
 
     int tmpGyroSensitivity;
     public void adjustGyroSensitivityLive() {
-        if(!LauncherPreferences.PREF_ENALBE_GYRO) {
+        if(!LauncherPreferences.PREF_ENABLE_GYRO) {
             Toast.makeText(this, R.string.toast_turn_on_gyro, Toast.LENGTH_LONG).show();
             return;
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -49,7 +49,7 @@ public class LauncherPreferences {
     public static boolean PREF_USE_ALTERNATE_SURFACE = true;
     public static boolean PREF_JAVA_SANDBOX = true;
     public static int PREF_SCALE_FACTOR = 100;
-    public static boolean PREF_ENALBE_GYRO = false;
+    public static boolean PREF_ENABLE_GYRO = false;
     public static float PREF_GYRO_SENSITIVITY = 1f;
     public static int PREF_GYRO_SAMPLE_RATE = 16;
 
@@ -89,7 +89,7 @@ public static void loadPreferences(Context ctx) {
         PREF_USE_ALTERNATE_SURFACE = DEFAULT_PREF.getBoolean("alternate_surface", false);
         PREF_JAVA_SANDBOX = DEFAULT_PREF.getBoolean("java_sandbox", true);
         PREF_SCALE_FACTOR = DEFAULT_PREF.getInt("resolutionRatio", 100);
-        PREF_ENALBE_GYRO = DEFAULT_PREF.getBoolean("enableGyro", false);
+        PREF_ENABLE_GYRO = DEFAULT_PREF.getBoolean("enableGyro", false);
         PREF_GYRO_SENSITIVITY = ((float)DEFAULT_PREF.getInt("gyroSensitivity", 100))/100f;
         PREF_GYRO_SAMPLE_RATE = DEFAULT_PREF.getInt("gyroSampleRate", 16);
         PREF_GYRO_INVERT_X = DEFAULT_PREF.getBoolean("gyroInvertX", false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -154,6 +154,7 @@ protected void initLayout(int resId) {
 
             mVersionId = version;
             isInputStackCall = Tools.getVersionInfo(mVersionId).arguments != null;
+            CallbackBridge.nativeSetUseInputStackQueue(isInputStackCall);
 
             Tools.getDisplayMetrics(this);
             windowWidth = Tools.getDisplayFriendlyRes(currentDisplayMetrics.widthPixels, scaleFactor);

File: app_pojavlauncher/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -40,7 +40,6 @@ public static void putMouseEventWithCoords(int button, boolean isDown, float x,
 
     public static void sendCursorPos(float x, float y) {
         if (!threadAttached) {
-            nativeSetUseInputStackQueue(MainActivity.isInputStackCall);
             threadAttached = CallbackBridge.nativeAttachThreadToOther(true, MainActivity.isInputStackCall);
         }
 

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -46,7 +46,6 @@ public static void sendData(int type, String data) {
     public static native void nativeSendData(boolean isAndroid, int type, String data);
     public static native boolean nativeSetInputReady(boolean ready);
     public static native String nativeClipboard(int action, byte[] copy);
-    public static native void nativeAttachThreadToOther(boolean isAndroid, boolean isUseStackQueueBool);
     public static native void nativeSetGrabbing(boolean grab);
 }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -93,8 +93,6 @@ public boolean onTouch(View v, MotionEvent event) {
                     }
                 }
 
-                // debugText.setText(CallbackBridge.DEBUG_STRING.toString());
-                CallbackBridge.DEBUG_STRING.setLength(0);
                 prevY = y;
                 prevX = x;
                 return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Touchpad.java
Patch:
@@ -124,9 +124,6 @@ public boolean onTouchEvent(MotionEvent event) {
                 break;
         }
 
-        //debugText.setText(CallbackBridge.DEBUG_STRING.toString());
-        CallbackBridge.DEBUG_STRING.setLength(0);
-
         return true;
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/LayoutConverter.java
Patch:
@@ -21,7 +21,7 @@ public class LayoutConverter {
     public static boolean convertLookType = false; //false = flat; true = classic
     public static CustomControls loadAndConvertIfNecessary(String jsonPath) throws IOException, JsonSyntaxException {
 
-        String jsonLayoutData = IOUtils.toString(new InputStreamReader(new FileInputStream(jsonPath), StandardCharsets.UTF_8));
+        String jsonLayoutData = Tools.read(jsonPath);
         try {
             JSONObject layoutJobj = new JSONObject(jsonLayoutData);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseActivity.java
Patch:
@@ -46,6 +46,7 @@ protected void onResume() {
     @Override
     protected void onPostResume() {
         super.onPostResume();
+        Tools.setFullscreen(this, setFullscreen());
         Tools.ignoreNotch(PREF_IGNORE_NOTCH,this);
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -245,9 +245,6 @@ public void onResume() {
         super.onResume();
         mIsResuming = true;
         if(mGyroControl != null) mGyroControl.enable();
-        final int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
-        final View decorView = getWindow().getDecorView();
-        decorView.setSystemUiVisibility(uiOptions);
         CallbackBridge.nativeSetWindowAttrib(LwjglGlfwKeycode.GLFW_HOVERED, 1);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/colorselector/ColorSelector.java
Patch:
@@ -160,6 +160,7 @@ public void setColorSelectionListener(ColorSelectionListener listener){
     public void setAlphaEnabled(boolean alphaEnabled){
         mAlphaEnabled = alphaEnabled;
         mAlphaView.setVisibility(alphaEnabled ? View.VISIBLE : View.GONE);
+        mAlphaView.setAlpha(255);
     }
 
     private void notifyColorSelector(int color){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/EditControlPopup.java
Patch:
@@ -8,6 +8,7 @@
 import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
 import android.content.Context;
+import android.graphics.Color;
 import android.text.Editable;
 import android.text.TextWatcher;
 import android.util.Log;
@@ -168,8 +169,7 @@ public void appearColor(boolean fromRight, int color){
         }
 
         mDisplayingColor = true;
-        if(color != -1)
-            mColorSelector.show(color);
+        mColorSelector.show(color == -1 ? Color.WHITE : color);
     }
 
     /** Slide out the layout */

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/EditControlPopup.java
Patch:
@@ -101,6 +101,7 @@ public EditControlPopup(Context context, ViewGroup parent){
 
         mColorSelector = new ColorSelector(context, parent, null);
         mColorSelector.getRootView().setElevation(11);
+        mColorSelector.getRootView().setTranslationZ(11);
         mColorSelector.getRootView().setX(-context.getResources().getDimensionPixelOffset(R.dimen._280sdp));
 
         mEditPopupAnimator = ObjectAnimator.ofFloat(mScrollView, "x", 0).setDuration(1000);
@@ -110,6 +111,7 @@ public EditControlPopup(Context context, ViewGroup parent){
         mColorEditorAnimator.setInterpolator(decelerate);
 
         mScrollView.setElevation(10);
+        mScrollView.setTranslationZ(10);
         mScrollView.setX(-context.getResources().getDimensionPixelOffset(R.dimen._280sdp));
 
         bindLayout();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/EditControlPopup.java
Patch:
@@ -101,7 +101,7 @@ public EditControlPopup(Context context, ViewGroup parent){
 
         mColorSelector = new ColorSelector(context, parent, null);
         mColorSelector.getRootView().setElevation(11);
-        mColorSelector.getRootView().setX(-context.getResources().getDimensionPixelOffset(R.dimen._230sdp));
+        mColorSelector.getRootView().setX(-context.getResources().getDimensionPixelOffset(R.dimen._280sdp));
 
         mEditPopupAnimator = ObjectAnimator.ofFloat(mScrollView, "x", 0).setDuration(1000);
         mColorEditorAnimator = ObjectAnimator.ofFloat(mColorSelector.getRootView(), "x", 0).setDuration(1000);
@@ -110,7 +110,7 @@ public EditControlPopup(Context context, ViewGroup parent){
         mColorEditorAnimator.setInterpolator(decelerate);
 
         mScrollView.setElevation(10);
-        mScrollView.setX(-context.getResources().getDimensionPixelOffset(R.dimen._230sdp));
+        mScrollView.setX(-context.getResources().getDimensionPixelOffset(R.dimen._280sdp));
 
         bindLayout();
         loadAdapter();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -54,7 +54,7 @@ public class LauncherPreferences {
     public static boolean PREF_JAVA_SANDBOX = true;
     public static int PREF_SCALE_FACTOR = 100;
     public static boolean PREF_ENALBE_GYRO = false;
-    public static float PREF_GYRO_SENSITIVITY = 100;
+    public static float PREF_GYRO_SENSITIVITY = 1f;
     public static int PREF_GYRO_SAMPLE_RATE = 16;
 
     public static boolean PREF_GYRO_INVERT_X = false;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -28,8 +28,8 @@ public class PojavApplication extends Application {
 	@Override
 	public void onCreate() {
 		Thread.setDefaultUncaughtExceptionHandler((thread, th) -> {
-			boolean storagePermAllowed = Build.VERSION.SDK_INT < 23 || Build.VERSION.SDK_INT >= 29 ||
-					ActivityCompat.checkSelfPermission(PojavApplication.this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;
+			boolean storagePermAllowed = (Build.VERSION.SDK_INT < 23 || Build.VERSION.SDK_INT >= 29 ||
+					ActivityCompat.checkSelfPermission(PojavApplication.this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) && Tools.checkStorageRoot(PojavApplication.this);
 			File crashFile = new File(storagePermAllowed ? Tools.DIR_GAME_HOME : Tools.DIR_DATA, "latestcrash.txt");
 			try {
 				// Write to file, since some devices may not able to show error

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/multirt/MultiRTUtils.java
Patch:
@@ -161,7 +161,7 @@ public static Runtime forceReread(String name) {
     public static Runtime read(String name) {
         if(sCache.containsKey(name)) return sCache.get(name);
         Runtime returnRuntime;
-        File release = new File(RUNTIME_FOLDER,"/"+name+"/release");
+        File release = new File(RUNTIME_FOLDER,name+"/release");
         if(!release.exists()) {
             return new Runtime(name);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -262,7 +262,7 @@ public int launchJavaRuntime(File modFile, String javaArgs) {
 
             // Enable Caciocavallo
             JREUtils.jreReleaseList = JREUtils.readJREReleaseProperties(LauncherPreferences.PREF_DEFAULT_RUNTIME);
-            Tools.getCacioJavaArgs(javaArgList,JREUtils.jreReleaseList.get("JAVA_VERSION").equals("1.8.0"));
+            Tools.getCacioJavaArgs(javaArgList,JREUtils.jreReleaseList.get("JAVA_VERSION").startsWith("1.8.0"));
             
             if (javaArgs != null) {
                 javaArgList.addAll(Arrays.asList(javaArgs.split(" ")));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -184,8 +184,9 @@ protected void initLayout(int resId) {
             minecraftGLView.setSurfaceReadyListener(() -> {
                 try {
                     // Setup virtual mouse right before launching
-                    if (PREF_VIRTUAL_MOUSE_START)
-                        touchpad.switchState();
+                    if (PREF_VIRTUAL_MOUSE_START) {
+                        touchpad.post(() -> touchpad.switchState());
+                    }
 
                     runCraft();
                 }catch (Throwable e){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/PresentedException.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 
-public class PresentedException extends Exception {
+public class PresentedException extends RuntimeException {
     final int localizationStringId;
     final Object[] extraArgs;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -147,7 +147,7 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount min
 
         List<String> javaArgList = new ArrayList<String>();
 
-        getCacioJavaArgs(javaArgList, JREUtils.jreReleaseList.get("JAVA_VERSION").equals("1.8.0"));
+        getCacioJavaArgs(javaArgList, JREUtils.jreReleaseList.get("JAVA_VERSION").startsWith("1.8.0"));
 
 /*
         int mcReleaseDate = Integer.parseInt(versionInfo.releaseTime.substring(0, 10).replace("-", ""));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/keyboard/TouchCharInput.java
Patch:
@@ -135,7 +135,7 @@ public void disable(){
         setVisibility(GONE);
         clearFocus();
         setEnabled(false);
-        setFocusable(false);
+        //setFocusable(false);
     }
 
     /** Send the enter key. */

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -282,7 +282,7 @@ public int launchJavaRuntime(File modFile, String javaArgs) {
 
             Logger.getInstance().appendToLog("Info: Java arguments: " + Arrays.toString(javaArgList.toArray(new String[0])));
 
-            return JREUtils.launchJavaVM(this, javaArgList);
+            return JREUtils.launchJavaVM(this, null,javaArgList);
         } catch (Throwable th) {
             Tools.showError(this, th, true);
             return -1;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -176,7 +176,7 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount min
         javaArgList.add(versionInfo.mainClass);
         javaArgList.addAll(Arrays.asList(launchArgs));
         // ctx.appendlnToLog("full args: "+javaArgList.toString());
-        JREUtils.launchJavaVM(activity, javaArgList);
+        JREUtils.launchJavaVM(activity, gamedirPath, javaArgList);
     }
 
     public static String getGameDirPath(@NonNull MinecraftProfile minecraftProfile){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/keyboard/TouchCharInput.java
Patch:
@@ -132,6 +132,7 @@ public void enable(){
     /** Lose ability to exist, take focus and have some text being input */
     public void disable(){
         clear();
+        setVisibility(GONE);
         clearFocus();
         setEnabled(false);
         setFocusable(false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/keyboard/TouchCharInput.java
Patch:
@@ -127,14 +127,14 @@ public void enable(){
         setFocusable(true);
         setVisibility(VISIBLE);
         requestFocus();
-
     }
 
     /** Lose ability to exist, take focus and have some text being input */
     public void disable(){
         clear();
         clearFocus();
         setEnabled(false);
+        setFocusable(false);
     }
 
     /** Send the enter key. */

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/opengl/AWTGLCanvas.java
Patch:
@@ -79,7 +79,8 @@ public void initContext(final float r, final float g, final float b) {
 	}
 
 	public AWTGLCanvas() throws LWJGLException {
-		Display.create();
+		System.out.println("AWTGLCanvas constructor called on thread:"+Thread.currentThread().getName());
+		//Display.create();
 	}
 
 	public AWTGLCanvas(PixelFormat pixel_format) throws LWJGLException {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -1,5 +1,7 @@
 package net.kdt.pojavlaunch;
 
+import static android.content.Intent.FLAG_ACTIVITY_NEW_TASK;
+
 import android.app.*;
 import android.content.*;
 import android.content.pm.*;
@@ -76,6 +78,7 @@ public void onCreate() {
 		} catch (Throwable throwable) {
 			Intent ferrorIntent = new Intent(this, FatalErrorActivity.class);
 			ferrorIntent.putExtra("throwable", throwable);
+			ferrorIntent.setFlags(FLAG_ACTIVITY_NEW_TASK);
 			startActivity(ferrorIntent);
 		}
 	}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -220,7 +220,7 @@ public void onFileSelected(File file, String path) {
 	private static void setDefaultControlJson(String path,ControlLayout ctrlLayout) {
 		// Load before save to make sure control is not error
 		try {
-			ctrlLayout.loadLayout(Tools.GLOBAL_GSON.fromJson(Tools.read(path), CustomControls.class));
+			ctrlLayout.loadLayout(path);
 			LauncherPreferences.DEFAULT_PREF.edit().putString("defaultCtrl", path).apply();
 			LauncherPreferences.PREF_DEFAULTCTRL_PATH = path;
 		} catch (IOException| JsonSyntaxException exception) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -422,7 +422,7 @@ public boolean dispatchGenericMotionEvent(MotionEvent event) {
                 CallbackBridge.DEBUG_STRING.setLength(0);
                 return true;
             case MotionEvent.ACTION_SCROLL:
-                CallbackBridge.sendScroll((double) event.getAxisValue(MotionEvent.AXIS_VSCROLL), (double) event.getAxisValue(MotionEvent.AXIS_HSCROLL));
+                CallbackBridge.sendScroll((double) event.getAxisValue(MotionEvent.AXIS_HSCROLL), (double) event.getAxisValue(MotionEvent.AXIS_VSCROLL));
                 return true;
             case MotionEvent.ACTION_BUTTON_PRESS:
                 return sendMouseButtonUnconverted(event.getActionButton(),true);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceJavaFragment.java
Patch:
@@ -26,7 +26,7 @@ public void onCreatePreferences(Bundle b, String str) {
         CustomSeekBarPreference seek7 = findPreference("allocation");
         seek7.setMin(256);
 
-        if(is32BitsDevice() || deviceRam < 2048) maxRAM = Math.min(1100, deviceRam);
+        if(is32BitsDevice() || deviceRam < 2048) maxRAM = Math.min(1000, deviceRam);
         else maxRAM = deviceRam - (deviceRam < 3064 ? 800 : 1024); //To have a minimum for the device to breathe
 
         seek7.setMax(maxRAM);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/keyboard/TouchCharInput.java
Patch:
@@ -136,7 +136,6 @@ public void enable(){
     /** Lose ability to exist, take focus and have some text being input */
     public void disable(){
         clear();
-        setVisibility(GONE);
         clearFocus();
         setEnabled(false);
     }

File: app_pojavlauncher/src/main/java/com/kdt/mcgui/ProgressLayout.java
Patch:
@@ -36,6 +36,8 @@ public class ProgressLayout extends ConstraintLayout implements View.OnClickList
     public static final String DOWNLOAD_VERSION_LIST = "download_verlist";
     public static final String AUTHENTICATE_MICROSOFT = "authenticate_microsoft";
     public static final String INSTALL_MODPACK = "install_modpack";
+    public static final String EXTRACT_COMPONENTS = "extract_components";
+    public static final String EXTRACT_SINGLE_FILES = "extract_single_files";
 
     public ProgressLayout(@NonNull Context context) {
         super(context);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -21,7 +21,7 @@
 
 public class PojavApplication extends Application {
 	public static String CRASH_REPORT_TAG = "PojavCrashReport";
-	public static ExecutorService sExecutorService = new ThreadPoolExecutor(0, 4, 500, TimeUnit.MILLISECONDS,  new LinkedBlockingQueue<>());
+	public static ExecutorService sExecutorService = new ThreadPoolExecutor(4, 4, 500, TimeUnit.MILLISECONDS,  new LinkedBlockingQueue<>());
 	
 	@Override
 	public void onCreate() {
@@ -73,8 +73,6 @@ public void onCreate() {
 												.concat("/x86");
 			}
 			AsyncAssetManager.unpackRuntime(getAssets(), false);
-			AsyncAssetManager.unpackComponents(this);
-			AsyncAssetManager.unpackSingleFiles(this);
 		} catch (Throwable throwable) {
 			Intent ferrorIntent = new Intent(this, FatalErrorActivity.class);
 			ferrorIntent.putExtra("throwable", throwable);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlInterface.java
Patch:
@@ -276,7 +276,7 @@ default void injectBehaviors(){
     }
 
     default void injectProperties(){
-        getControlView().setTranslationZ(10);
+        getControlView().post(() -> getControlView().setTranslationZ(10));
     }
 
     /** Inject a touch listener on the view to make editing controls straight forward */

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -346,6 +346,7 @@ public static List<String> getJavaArgs(Context ctx) {
                 "-Dos.version=Android-" + Build.VERSION.RELEASE,
                 "-Dpojav.path.minecraft=" + Tools.DIR_GAME_NEW,
                 "-Dpojav.path.private.account=" + Tools.DIR_ACCOUNT_NEW,
+                "-Duser.timezone=" + TimeZone.getDefault().getID(),
 
                 //LWJGL 3 DEBUG FLAGS
                 //"-Dorg.lwjgl.util.Debug=true",

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JMinecraftVersionList.java
Patch:
@@ -34,7 +34,6 @@ public static class Version extends FileProperties {
         public String mainClass;
         public String minecraftArguments;
         public int minimumLauncherVersion;
-        public DependentLibrary optifineLib;
         public String releaseTime;
         public String time;
         public String type;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -452,6 +452,8 @@ public static ArrayList<String> parseJavaArguments(String args){
                     }
                     end = Math.min(end, tempEnd);
                 }
+                //Fallback
+                if(end == -1) end = args.length();
 
                 //Extract it
                 String parsedSubString = args.substring(start, end);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -44,7 +44,6 @@
  * Class dealing with showing minecraft surface and taking inputs to dispatch them to minecraft
  */
 public class MinecraftGLSurface extends View implements GrabListener{
-    Handler uiThreadHandler = new Handler();
     /* Gamepad object for gamepad inputs, instantiated on need */
     private Gamepad mGamepad = null;
     /* Pointer Debug textview, used to show info about the pointer state */
@@ -647,7 +646,7 @@ private void realStart(Surface surface){
 
     @Override
     public void onGrabState(boolean isGrabbing) {
-        uiThreadHandler.post(()->updateGrabState(isGrabbing));
+        post(()->updateGrabState(isGrabbing));
     }
 
     private void updateGrabState(boolean isGrabbing) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Touchpad.java
Patch:
@@ -33,7 +33,6 @@ public class Touchpad extends FrameLayout implements GrabListener{
     private final ImageView mMousePointerImageView = new ImageView(getContext());
     /* Detect a classic android Tap */
     private final GestureDetector mSingleTapDetector = new GestureDetector(getContext(), new SingleTapConfirm());
-    private final Handler uiThreadHandler = new Handler();
     /* Resolution scaler option, allow downsizing a window */
     private final float mScaleFactor = DEFAULT_PREF.getInt("resolutionRatio",100)/100f;
     /* Current pointer ID to move the mouse */
@@ -181,7 +180,7 @@ private void init(){
 
     @Override
     public void onGrabState(boolean isGrabbing) {
-        uiThreadHandler.post(()->updateGrabState(isGrabbing));
+        post(()->updateGrabState(isGrabbing));
     }
     private void updateGrabState(boolean isGrabbing) {
         if(!isGrabbing) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/services/ProgressService.java
Patch:
@@ -7,6 +7,7 @@
 import android.os.Build;
 import android.os.Handler;
 import android.os.IBinder;
+import android.os.Looper;
 import android.os.Process;
 import android.util.Log;
 
@@ -28,7 +29,7 @@
  */
 public class ProgressService extends Service implements TaskCountListener {
 
-    private final Handler mainThreadHandler = new Handler();
+    private final Handler mainThreadHandler = new Handler(Looper.getMainLooper());
     private NotificationManagerCompat notificationManagerCompat;
 
     /** Simple wrapper to start the service */

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -323,7 +323,7 @@ public static String[] getMinecraftClientArgs(MinecraftAccount profile, JMinecra
         varArgMap.put("auth_session", profile.accessToken); // For legacy versions of MC
         varArgMap.put("auth_access_token", profile.accessToken);
         varArgMap.put("auth_player_name", username);
-        varArgMap.put("auth_uuid", profile.profileId);
+        varArgMap.put("auth_uuid", profile.profileId.replace("-", ""));
         varArgMap.put("auth_xuid", profile.xuid);
         varArgMap.put("assets_root", Tools.ASSETS_PATH);
         varArgMap.put("assets_index_name", versionInfo.assets);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -334,7 +334,7 @@ private void runCraft() throws Throwable {
         JREUtils.redirectAndPrintJRELog();
 
         LauncherProfiles.update();
-        Tools.launchMinecraft(this, mProfile, minecraftProfile);
+        Tools.launchMinecraft(this, mProfile, minecraftProfile, mVersionInfo);
     }
 
     private void checkJavaArgsIsLaunchable(String jreVersion) throws Throwable {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -96,7 +96,7 @@ public static MinecraftAccount load(String name) throws JsonSyntaxException {
 
     public Bitmap getSkinFace(){
         if(skinFaceBase64 == null){
-            return Bitmap.createBitmap(1,1, Bitmap.Config.ARGB_8888);
+            return null;
         }
         byte[] faceIconBytes = Base64.decode(skinFaceBase64, Base64.DEFAULT);
         return BitmapFactory.decodeByteArray(faceIconBytes, 0, faceIconBytes.length);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceJavaFragment.java
Patch:
@@ -26,7 +26,7 @@ public void onCreatePreferences(Bundle b, String str) {
         CustomSeekBarPreference seek7 = findPreference("allocation");
         seek7.setMin(256);
 
-        if(is32BitsDevice()) maxRAM = Math.min(1100, deviceRam);
+        if(is32BitsDevice() || deviceRam < 2048) maxRAM = Math.min(1100, deviceRam);
         else maxRAM = deviceRam - (deviceRam < 3064 ? 800 : 1024); //To have a minimum for the device to breathe
 
         seek7.setMax(maxRAM);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/ControlHandleView.java
Patch:
@@ -52,7 +52,7 @@ private void init(){
         ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(size, size);
         setLayoutParams(params);
         setBackground(mDrawable);
-        setElevation(3);
+        setTranslationZ(10.5F);
     }
 
     public void setControlButton(ControlInterface controlInterface){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -56,7 +56,7 @@ protected void onCreate(Bundle savedInstanceState) {
 				case 5: // Saving the currently shown control
 					mControlLayout.save(Tools.DIR_DATA + "/files/" + sSelectedName + ".json");
 
-					Uri contentUri = getUriForFile(getBaseContext(), "share_file", new File(Tools.DIR_DATA, "/files/" + sSelectedName + ".json"));
+					Uri contentUri = getUriForFile(getBaseContext(), getString(R.string.shareProviderAuthority), new File(Tools.DIR_DATA, "/files/" + sSelectedName + ".json"));
 
 					Intent shareIntent = new Intent();
 					shareIntent.setAction(Intent.ACTION_SEND);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -524,6 +524,9 @@ public static void setFullscreen(Activity activity, boolean fullscreen) {
 
     public static void updateWindowSize(Activity activity) {
         currentDisplayMetrics = getDisplayMetrics(activity);
+
+        CallbackBridge.physicalWidth = currentDisplayMetrics.widthPixels;
+        CallbackBridge.physicalHeight = currentDisplayMetrics.heightPixels;
     }
 
     public static float dpToPx(float dp) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/FileSelectorFragment.java
Patch:
@@ -90,7 +90,7 @@ public void onFileSelected(File file, String path) {
     }
 
     private String removeLockPath(String path){
-        return path.replace(mRootPath, ".");
+        return path.replace(mRootPath, "/.");
     }
 
     private void parseBundle(){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -437,6 +437,7 @@ public static void dialogForceClose(Context ctx) {
 
     @Override
     public boolean dispatchKeyEvent(KeyEvent event) {
+        if(isInEditor) return super.dispatchKeyEvent(event);
         if (event.getKeyCode() == KeyEvent.KEYCODE_BACK && !touchCharInput.isEnabled()) {
             if(event.getAction() != KeyEvent.ACTION_UP) return true; // We eat it anyway
             sendKeyPress(LwjglGlfwKeycode.GLFW_KEY_ESCAPE);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -193,7 +193,7 @@ public static void buildNotificationChannel(Context context){
         if(Build.VERSION.SDK_INT < Build.VERSION_CODES.O) return;
         NotificationChannel channel = new NotificationChannel(
                 context.getString(R.string.notif_channel_id),
-                context.getString(R.string.notif_channel_name), NotificationManager.IMPORTANCE_HIGH);
+                context.getString(R.string.notif_channel_name), NotificationManager.IMPORTANCE_DEFAULT);
         NotificationManagerCompat manager = NotificationManagerCompat.from(context);
         manager.createNotificationChannel(channel);
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/services/GameService.java
Patch:
@@ -49,7 +49,8 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 .setContentTitle(getString(R.string.lazy_service_default_title))
                 .setContentText(getString(R.string.notification_game_runs))
                 .addAction(android.R.drawable.ic_menu_close_clear_cancel,  getString(R.string.notification_terminate), pendingKillIntent)
-                .setSmallIcon(R.mipmap.ic_launcher_round);
+                .setSmallIcon(R.mipmap.ic_launcher_round)
+                .setNotificationSilent();
        startForeground(2, notificationBuilder.build());
         return START_NOT_STICKY; // non-sticky so android wont try restarting the game after the user uses the "Quit" button
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/services/ProgressService.java
Patch:
@@ -49,7 +49,8 @@ public void onCreate() {
         mNotificationBuilder = new NotificationCompat.Builder(this, "channel_id")
                 .setContentTitle(getString(R.string.lazy_service_default_title))
                 .addAction(android.R.drawable.ic_menu_close_clear_cancel,  getString(R.string.notification_terminate), pendingKillIntent)
-                .setSmallIcon(R.mipmap.ic_launcher_round);
+                .setSmallIcon(R.mipmap.ic_launcher_round)
+                .setNotificationSilent();
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -235,7 +235,7 @@ private static String doSaveCtrl(String name, final ControlLayout layout) throws
 	private static void loadControl(String path,ControlLayout layout) {
 		try {
 			layout.loadLayout(path);
-			sSelectedName = new File(path).getName();
+			sSelectedName = path.replace(Tools.CTRLMAP_PATH, ".");
 			// Remove `.json`
 			sSelectedName = sSelectedName.substring(0, sSelectedName.length() - 5);
 		} catch (Exception e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -275,9 +275,9 @@ public int launchJavaRuntime(File modFile, String javaArgs) {
             
             // Run java on sandbox, non-overrideable.
             Collections.reverse(javaArgList);
-            javaArgList.add("-Xbootclasspath/a:" + Tools.DIR_DATA + "/pro-grade.jar");
+            javaArgList.add("-Xbootclasspath/a:" + Tools.DIR_DATA + "/security/pro-grade.jar");
             javaArgList.add("-Djava.security.manager=net.sourceforge.prograde.sm.ProGradeJSM");
-            javaArgList.add("-Djava.security.policy=" + Tools.DIR_DATA + "/java_sandbox.policy");
+            javaArgList.add("-Djava.security.policy=" + Tools.DIR_DATA + "/security/java_sandbox.policy");
             Collections.reverse(javaArgList);
 
             return JREUtils.launchJavaVM(this, javaArgList);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -93,9 +93,9 @@ public void onCreate(Bundle savedInstanceState) {
                 case 0: mControlLayout.addControlButton(new ControlData("New")); break;
                 case 1: mControlLayout.addDrawer(new ControlDrawerData()); break;
                 //case 2: mControlLayout.addJoystickButton(new ControlData()); break;
-                case 3 : CustomControlsActivity.load(mControlLayout); break;
-                case 4: CustomControlsActivity.save(true,mControlLayout); break;
-                case 5: CustomControlsActivity.dialogSelectDefaultCtrl(mControlLayout); break;
+                case 2 : CustomControlsActivity.load(mControlLayout); break;
+                case 3: CustomControlsActivity.save(true,mControlLayout); break;
+                case 4: CustomControlsActivity.dialogSelectDefaultCtrl(mControlLayout); break;
             }
         };
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/profiles/ProfileIconCache.java
Patch:
@@ -24,8 +24,7 @@ public class ProfileIconCache {
 
     public static void initDefault(Context context) {
         if(sDefaultIcon != null) return;
-
-        sDefaultIcon = ResourcesCompat.getDrawable(context.getResources(), R.drawable.ic_gamepad_pointer, null);
+        sDefaultIcon = ResourcesCompat.getDrawable(context.getResources(), R.mipmap.ic_launcher_foreground, null);
         sDefaultIcon.setBounds(0, 0, 10, 10);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/progresskeeper/ProgressKeeper.java
Patch:
@@ -1,7 +1,5 @@
 package net.kdt.pojavlaunch.progresskeeper;
 
-import android.util.Log;
-
 import java.util.ArrayList;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentLinkedQueue;
@@ -29,7 +27,6 @@ public static void submitProgress(String progressRecord, int progress, int resid
             progressState.varArg = va;
         }
 
-        Log.d("ProgressLayout", "shouldCallStarted="+shouldCallStarted+" shouldCallEnded="+shouldCallEnded);
         ConcurrentLinkedQueue<ProgressListener> progressListeners = sProgressListeners.get(progressRecord);
         if(progressListeners != null)
             for(ProgressListener listener : progressListeners) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncAssetManager.java
Patch:
@@ -99,7 +99,7 @@ public static void unpackComponents(Context ctx){
                 unpackComponent(ctx, "lwjgl3", false);
                 unpackComponent(ctx, "security", true);
             } catch (IOException e) {
-                Log.e("AsyncAssetManager", "Failed o unpack components !");
+                Log.e("AsyncAssetManager", "Failed o unpack components !",e );
             }
         });
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncMinecraftDownloader.java
Patch:
@@ -353,13 +353,15 @@ public JAssets downloadIndex(JMinecraftVersionList.Version version, File output)
 
     public static String normalizeVersionId(String versionString) {
         JMinecraftVersionList versionList = (JMinecraftVersionList) ExtraCore.getValue(ExtraConstants.RELEASE_TABLE);
+        if(versionList == null || versionList.versions == null) return versionString;
         if("latest-release".equals(versionString)) versionString = versionList.latest.get("release");
         if("latest-snapshot".equals(versionString)) versionString = versionList.latest.get("snapshot");
         return versionString;
     }
 
     public static JMinecraftVersionList.Version getListedVersion(String normalizedVersionString) {
         JMinecraftVersionList versionList = (JMinecraftVersionList) ExtraCore.getValue(ExtraConstants.RELEASE_TABLE);
+        if(versionList == null || versionList.versions == null) return null; // can't have listed versions if there's no list
         for(JMinecraftVersionList.Version version : versionList.versions) {
             if(version.id.equals(normalizedVersionString)) return version;
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/AsyncVersionList.java
Patch:
@@ -29,7 +29,6 @@
 public class AsyncVersionList {
 
     public void getVersionList(@Nullable VersionDoneListener listener){
-        ProgressKeeper.submitProgress(ProgressLayout.DOWNLOAD_VERSION_LIST, 0, R.string.downloading_versions);
         sExecutorService.execute(() -> {
             File versionFile = new File(Tools.DIR_DATA + "/version_list.json");
             JMinecraftVersionList versionList = null;
@@ -53,7 +52,6 @@ public void getVersionList(@Nullable VersionDoneListener listener){
 
             if(listener != null)
                 listener.onVersionDone(versionList);
-            ProgressLayout.clearProgress(ProgressLayout.DOWNLOAD_VERSION_LIST);
         });
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/ActionRow.java
Patch:
@@ -53,6 +53,7 @@ public boolean onPreDraw() {
 
     /** Add action buttons and configure them */
     private void init(){
+        setTranslationZ(11);
         setVisibility(GONE);
         setOrientation(HORIZONTAL);
         setLayoutParams(new LayoutParams(

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlButton.java
Patch:
@@ -38,8 +38,7 @@ public ControlButton(ControlLayout layout, ControlData properties) {
         //When a button is created, the width/height has yet to be processed to fit the scaling.
         setProperties(preProcessProperties(properties, layout));
 
-        injectTouchEventBehavior();
-        injectLayoutParamBehavior();
+        injectBehaviors();
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/LauncherActivity.java
Patch:
@@ -132,7 +132,7 @@ public void onFragmentResumed(@NonNull FragmentManager fm, @NonNull Fragment f)
             return false;
         }
         String normalizedVersionId = AsyncMinecraftDownloader.normalizeVersionId(prof.lastVersionId);
-        JMinecraftVersionList.Version mcVersion = Tools.getVersionInfo(normalizedVersionId);
+        JMinecraftVersionList.Version mcVersion = AsyncMinecraftDownloader.getListedVersion(normalizedVersionId);
         new AsyncMinecraftDownloader(this, mcVersion, normalizedVersionId, () -> runOnUiThread(() -> {
             try {
                 Intent mainIntent = new Intent(getBaseContext(), MainActivity.class);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -682,11 +682,11 @@ public static JMinecraftVersionList.Version getVersionInfo(String versionName, b
                 return customVer;
             } else {
                 JMinecraftVersionList.Version inheritsVer = null;
-                for (JMinecraftVersionList.Version valueVer : ((JMinecraftVersionList) ExtraCore.getValue(ExtraConstants.RELEASE_TABLE)).versions) {
+                /*for (JMinecraftVersionList.Version valueVer : ((JMinecraftVersionList) ExtraCore.getValue(ExtraConstants.RELEASE_TABLE)).versions) {
                     if (valueVer.id.equals(customVer.inheritsFrom) && (!new File(DIR_HOME_VERSION + "/" + customVer.inheritsFrom + "/" + customVer.inheritsFrom + ".json").exists()) && (valueVer.url != null)) {
                         Tools.downloadFile(valueVer.url,DIR_HOME_VERSION + "/" + customVer.inheritsFrom + "/" + customVer.inheritsFrom + ".json");
                     }
-                }
+                }*/
                 //If it won't download, just search for it
                 try{
                     inheritsVer = Tools.GLOBAL_GSON.fromJson(read(DIR_HOME_VERSION + "/" + customVer.inheritsFrom + "/" + customVer.inheritsFrom + ".json"), JMinecraftVersionList.Version.class);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -242,7 +242,7 @@ public void refreshControlButtonPositions(){
     @Override
     public void onViewRemoved(View child) {
         super.onViewRemoved(child);
-        if(child instanceof ControlInterface){
+        if(child instanceof ControlInterface && mControlPopup != null){
             mControlPopup.disappearColor();
             mControlPopup.disappear();
         }

File: app_pojavlauncher/src/main/java/com/kdt/mcgui/mcAccountSpinner.java
Patch:
@@ -83,7 +83,7 @@ public mcAccountSpinner(@NonNull Context context, @Nullable AttributeSet attrs)
     };
 
     private final DoneListener mDoneListener = account -> {
-        Toast.makeText(getContext(), "Login done", Toast.LENGTH_SHORT).show();
+        Toast.makeText(getContext(), R.string.main_login_done, Toast.LENGTH_SHORT).show();
         mSelectecAccount = account;
         invalidate();
         mAccountList.add(account.username);
@@ -220,7 +220,7 @@ private void reloadAccounts(boolean fromFiles, int overridePosition){
         if(fromFiles){
             mAccountList.clear();
 
-            mAccountList.add("Add account");
+            mAccountList.add(getContext().getString(R.string.main_add_account));
             File accountFolder = new File(Tools.DIR_ACCOUNT_NEW);
             if(accountFolder.exists()){
                 for (String fileName : accountFolder.list()) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -120,7 +120,7 @@ public static void dialogSelectDefaultCtrl(final ControlLayout layout) {
 
 		final AlertDialog dialog = builder.create();
 		FileListView flv = new FileListView(dialog, "json");
-		flv.lockPathAt(Tools.CTRLMAP_PATH);
+		flv.lockPathAt(new File(Tools.CTRLMAP_PATH));
 		flv.setFileSelectedListener(new FileSelectedListener(){
 
 			@Override
@@ -200,8 +200,8 @@ public static void load(final ControlLayout layout) {
 
 		final AlertDialog dialog = builder.create();
 		FileListView flv = new FileListView(dialog, "json");
-		if(Build.VERSION.SDK_INT < 29)flv.listFileAt(Tools.CTRLMAP_PATH);
-		else flv.lockPathAt(Tools.CTRLMAP_PATH);
+		if(Build.VERSION.SDK_INT < 29)flv.listFileAt(new File(Tools.CTRLMAP_PATH));
+		else flv.lockPathAt(new File(Tools.CTRLMAP_PATH));
 		flv.setFileSelectedListener(new FileSelectedListener(){
 
 			@Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/fragments/ProfileEditorFragment.java
Patch:
@@ -102,6 +102,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
             Bundle bundle = new Bundle(2);
             bundle.putBoolean(FileSelectorFragment.BUNDLE_SELECT_FOLDER, true);
             bundle.putString(FileSelectorFragment.BUNDLE_ROOT_PATH, Tools.DIR_GAME_HOME);
+            bundle.putBoolean(FileSelectorFragment.BUNDLE_SHOW_FILE, false);
             mValueToConsume = FileSelectorFragment.BUNDLE_SELECT_FOLDER;
 
             Tools.swapFragment(requireActivity(),

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -32,6 +32,7 @@
 import net.kdt.pojavlaunch.multirt.MultiRTUtils;
 
 import net.kdt.pojavlaunch.prefs.*;
+import net.kdt.pojavlaunch.services.GameService;
 import net.kdt.pojavlaunch.utils.*;
 import net.kdt.pojavlaunch.value.*;
 import net.kdt.pojavlaunch.value.launcherprofiles.LauncherProfiles;
@@ -77,7 +78,7 @@ public void onCreate(Bundle savedInstanceState) {
         if(LauncherProfiles.mainProfileJson == null) LauncherProfiles.update();
         minecraftProfile = LauncherProfiles.mainProfileJson.profiles.get(LauncherPreferences.DEFAULT_PREF.getString(LauncherPreferences.PREF_KEY_CURRENT_PROFILE,""));
         MCOptionUtils.load(Tools.getGameDirPath(minecraftProfile));
-
+        GameService.startService(this);
         initLayout(R.layout.activity_basemain);
         getWindow().setBackgroundDrawable(null);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/LauncherActivity.java
Patch:
@@ -134,11 +134,10 @@ public void onFragmentResumed(@NonNull FragmentManager fm, @NonNull Fragment f)
             try {
                 Intent mainIntent = new Intent(getBaseContext(), MainActivity.class);
                 mainIntent.putExtra(INTENT_MINECRAFT_VERSION, mcVersion.id);
-                mainIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT);
-                mainIntent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
+                mainIntent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(mainIntent);
                 finish();
-                Log.i("ActCheck","mainActivity finishing=" + isFinishing() + ", destroyed=" + isDestroyed());
+                android.os.Process.killProcess(android.os.Process.myPid()); //You should kill yourself, NOW!
             } catch (Throwable e) {
                 Tools.showError(getBaseContext(), e);
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/AddSubButton.java
Patch:
@@ -21,7 +21,7 @@ public class AddSubButton extends Button implements ActionButtonInterface {
     public AddSubButton(Context context, @Nullable AttributeSet attrs) {super(context, attrs); init();}
 
     public void init() {
-        setText("Add Button");
+        setText(R.string.customctrl_addsubbutton);
         setOnClickListener(this);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/CloneButton.java
Patch:
@@ -22,7 +22,8 @@ public class CloneButton extends Button implements ActionButtonInterface {
 
     public void init() {
         setOnClickListener(this);
-        setText("CLONE");
+        setAllCaps(true);
+        setText(R.string.global_clone);
     }
 
     private ControlInterface mCurrentlySelectedButton = null;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/DeleteButton.java
Patch:
@@ -21,7 +21,8 @@ public class DeleteButton extends Button implements ActionButtonInterface {
 
     public void init() {
         setOnClickListener(this);
-        setText("DELETE");
+        setAllCaps(true);
+        setText(R.string.global_delete);
 
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -696,7 +696,7 @@ private void playProfile(boolean notOnLogin) {
                     profileName = mProfile.save();
                 }
                 
-                PojavProfile.launch(PojavLoginActivity.this, profileName == null ? mProfile : profileName);
+                PojavProfile.launch(PojavLoginActivity.this, profileName);
             } catch (IOException e) {
                 Tools.showError(this, e);
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -53,7 +53,7 @@ public class MinecraftGLSurface extends View {
     private final TapDetector mSingleTapDetector = new TapDetector(1, TapDetector.DETECTION_METHOD_BOTH);
     private final TapDetector mDoubleTapDetector = new TapDetector(2, TapDetector.DETECTION_METHOD_DOWN);
     /* MC GUI scale, listened by MCOptionUtils */
-    private int mGuiScale = getMcScale();
+    private int mGuiScale;
     private final MCOptionUtils.MCOptionListener mGuiScaleListener = () -> mGuiScale = getMcScale();
     /* Surface ready listener, used by the activity to launch minecraft */
     SurfaceReadyListener mSurfaceReadyListener = null;
@@ -621,7 +621,6 @@ private void realStart(Surface surface){
         refreshSize();
 
         //Load Minecraft options:
-        MCOptionUtils.load();
         MCOptionUtils.set("fullscreen", "off");
         MCOptionUtils.set("overrideWidth", String.valueOf(windowWidth));
         MCOptionUtils.set("overrideHeight", String.valueOf(windowHeight));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -281,7 +281,7 @@ public static void setupBasicList(Context ctx) {
     }
     private void pickAccount() {
         try {
-            mProfile = PojavProfile.getCurrentProfileContent(this);
+            mProfile = PojavProfile.getCurrentProfileContent(this, null);
             accountFaceImageView.setImageBitmap(mProfile.getSkinFace());
 
             //TODO FULL BACKGROUND LOGIN

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/MinecraftDownloaderTask.java
Patch:
@@ -89,7 +89,7 @@ public void updateProgress(int curr, int max) {
                     }
                 }
 
-                verInfo = Tools.getVersionInfo(mActivity,p1[0]);
+                verInfo = Tools.getVersionInfo(p1[0]);
 
                 //Now we have the reliable information to check if our runtime settings are good enough
                 if(verInfo.javaVersion != null && !verInfo.javaVersion.component.equalsIgnoreCase("jre-legacy")) { //1.17+
@@ -522,6 +522,6 @@ private JMinecraftVersionList.Version findVersion(String version) {
         }
 
         // Custom version, inherits from base.
-        return Tools.getVersionInfo(mActivity,version);
+        return Tools.getVersionInfo(version);
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/AWTCanvasView.java
Patch:
@@ -5,7 +5,6 @@
 import android.text.*;
 import android.util.*;
 import android.view.*;
-import android.widget.RelativeLayout;
 
 import java.util.*;
 import net.kdt.pojavlaunch.utils.*;
@@ -82,7 +81,7 @@ public void run() {
                 canvas.drawRGB(0, 0, 0);
 
                 if (!mAttached) {
-                    mAttached = CallbackBridge.nativeAttachThreadToOther(true, BaseMainActivity.isInputStackCall);
+                    mAttached = CallbackBridge.nativeAttachThreadToOther(true, MainActivity.isInputStackCall);
                 } else {
                     int[] rgbArray = JREUtils.renderAWTScreenFrame(/* canvas, mWidth, mHeight */);
                     mDrawing = rgbArray != null;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -1,6 +1,6 @@
 package net.kdt.pojavlaunch;
 
-import static net.kdt.pojavlaunch.BaseMainActivity.touchCharInput;
+import static net.kdt.pojavlaunch.MainActivity.touchCharInput;
 import static net.kdt.pojavlaunch.utils.MCOptionUtils.getMcScale;
 import static org.lwjgl.glfw.CallbackBridge.sendKeyPress;
 import static org.lwjgl.glfw.CallbackBridge.sendMouseButton;
@@ -25,7 +25,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.RequiresApi;
@@ -404,7 +403,7 @@ public boolean dispatchGenericMotionEvent(MotionEvent event) {
         }
         if(mouseCursorIndex == -1) return false; // we cant consoom that, theres no mice!
         if(CallbackBridge.isGrabbing()) {
-            if(BaseMainActivity.isAndroid8OrHigher() && !hasPointerCapture()){
+            if(MainActivity.isAndroid8OrHigher() && !hasPointerCapture()){
                 requestFocus();
                 requestPointerCapture();
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -44,7 +44,7 @@ public void onCreate() {
 			FatalErrorActivity.showError(PojavApplication.this, crashFile.getAbsolutePath(), storagePermAllowed, th);
 			// android.os.Process.killProcess(android.os.Process.myPid());
 
-			BaseMainActivity.fullyExit();
+			MainActivity.fullyExit();
 		});
 		
 		try {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlButton.java
Patch:
@@ -519,15 +519,15 @@ public void sendKeyPresses(boolean isDown){
     private void sendSpecialKey(int keycode, boolean isDown){
         switch (keycode) {
             case ControlData.SPECIALBTN_KEYBOARD:
-               if(isDown)BaseMainActivity.switchKeyboardState();
+               if(isDown) MainActivity.switchKeyboardState();
                 break;
 
             case ControlData.SPECIALBTN_TOGGLECTRL:
                 if(isDown)MainActivity.mControlLayout.toggleControlVisible();
                 break;
 
             case ControlData.SPECIALBTN_VIRTUALMOUSE:
-                if(isDown)BaseMainActivity.toggleMouse(getContext());
+                if(isDown) MainActivity.toggleMouse(getContext());
                 break;
 
             case ControlData.SPECIALBTN_MOUSEPRI:

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -318,7 +318,7 @@ public static int launchJavaVM(final Activity activity,final List<String> JVMArg
                 AlertDialog.Builder dialog = new AlertDialog.Builder(activity);
                 dialog.setMessage(activity.getString(R.string.mcn_exit_title, exitCode));
 
-                dialog.setPositiveButton(android.R.string.ok, (p1, p2) -> BaseMainActivity.fullyExit());
+                dialog.setPositiveButton(android.R.string.ok, (p1, p2) -> MainActivity.fullyExit());
                 dialog.show();
             });
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -272,7 +272,7 @@ private static void buildConversionMap() {
         keyValueMap.put("screen_width", "DUMMY_DATA" );
         keyValueMap.put("screen_height", "DUMMY_DATA");
         keyValueMap.put("margin", Integer.toString((int) Tools.dpToPx(2)));
-        keyValueMap.put("preferred_scale", Float.toString(LauncherPreferences.PREF_BUTTONSIZE));
+        keyValueMap.put("preferred_scale", "DUMMY_DATA");
 
         conversionMap = new WeakReference<>(keyValueMap);
     }
@@ -295,6 +295,7 @@ private Map<String, String> fillConversionMap(){
         valueMap.put("height", Float.toString(getHeight()));
         valueMap.put("screen_width",Integer.toString(CallbackBridge.physicalWidth));
         valueMap.put("screen_height",Integer.toString(CallbackBridge.physicalHeight));
+        valueMap.put("preferred_scale", Float.toString(LauncherPreferences.PREF_BUTTONSIZE));
 
         return valueMap;
     }

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/Controllers.java
Patch:
@@ -19,8 +19,7 @@ public static void poll() {
     ctrlr.poll();
     }
     public static boolean next() {
-    ctrlr.poll();
-    return true;
+        return false;
     }
     public static boolean isCreated() {
     return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/MinecraftDownloaderTask.java
Patch:
@@ -92,7 +92,7 @@ public void updateProgress(int curr, int max) {
                 verInfo = Tools.getVersionInfo(mActivity,p1[0]);
 
                 //Now we have the reliable information to check if our runtime settings are good enough
-                if(verInfo.javaVersion != null) { //1.17+
+                if(verInfo.javaVersion != null && !verInfo.javaVersion.component.equalsIgnoreCase("jre-legacy")) { //1.17+
                     LauncherProfiles.update();
                     MinecraftProfile minecraftProfile = LauncherProfiles.mainProfileJson.profiles.get(LauncherPreferences.DEFAULT_PREF.getString(LauncherPreferences.PREF_KEY_CURRENT_PROFILE,""));
                     if(minecraftProfile == null) throw new SilentException();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/DisplayableLocale.java
Patch:
@@ -8,7 +8,7 @@ public class DisplayableLocale {
     private static Locale processStringLocale(String locale) {
         if (locale.contains("-")) {
             String[] split = locale.split("-");
-            return new Locale(split[0], split[1]);
+            return new Locale(split[0], split[1].toUpperCase());
         } else {
             return new Locale(locale);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -233,7 +233,7 @@ private void runCraft() throws Throwable {
         if(Tools.LOCAL_RENDERER == null) {
             Tools.LOCAL_RENDERER = LauncherPreferences.PREF_RENDERER;
         }
-        Logger.getInstance().appendToLog("--------- beggining with launcher debug");
+        Logger.getInstance().appendToLog("--------- beginning with launcher debug");
         Logger.getInstance().appendToLog("Info: Launcher version: " + BuildConfig.VERSION_NAME);
         if (Tools.LOCAL_RENDERER.equals("vulkan_zink")) {
             checkVulkanZinkIsSupported();

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -71,7 +71,7 @@ public static void sendData(int type, String data) {
     }
     public static native void nativeSendData(boolean isAndroid, int type, String data);
     public static native boolean nativeSetInputReady(boolean ready);
-    public static native String nativeClipboard(int action, String copy);
+    public static native String nativeClipboard(int action, byte[] copy);
     public static native void nativeAttachThreadToOther(boolean isAndroid, boolean isUseStackQueueBool);
     private static native void nativeSetGrabbing(boolean grab, int xset, int yset);
     public static native void setClass();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -417,8 +417,10 @@ public static DisplayMetrics getDisplayMetrics(Activity activity) {
         }else{
             if (SDK_INT >= Build.VERSION_CODES.R) {
                 activity.getDisplay().getRealMetrics(displayMetrics);
-            } else {
+            } else if(SDK_INT >= P) {
                  activity.getWindowManager().getDefaultDisplay().getRealMetrics(displayMetrics);
+            }else{ // Some old devices can have a notch despite it not being officially supported
+                activity.getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
             }
             if(!PREF_IGNORE_NOTCH){
                 //Remove notch width when it isn't ignored.

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -398,7 +398,7 @@ public boolean dispatchGenericMotionEvent(MotionEvent event) {
         }
         if(mouseCursorIndex == -1) return false; // we cant consoom that, theres no mice!
         if(CallbackBridge.isGrabbing()) {
-            if(BaseMainActivity.isAndroid8OrHigher()){
+            if(BaseMainActivity.isAndroid8OrHigher() && !hasPointerCapture()){
                 requestFocus();
                 requestPointerCapture();
             }

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/opengl/Sync.java
Patch:
@@ -83,7 +83,7 @@ public static void sync(int fps) {
 		long deltaFrame = 1000/fps;
 		if(deltaMs < deltaFrame){  // skip the Thread sleep if the opportunity is available
 			try {
-				Thread.sleep((deltaFrame - deltaMs) + lastDelay);
+				Thread.sleep(Math.min((deltaFrame - deltaMs) + lastDelay, deltaFrame));
 			} catch (InterruptedException e) {
 				e.printStackTrace();
 			}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -81,14 +81,14 @@ protected void initLayout(int resId) {
             mControlLayout = findViewById(R.id.main_control_layout);
             
             mProfile = PojavProfile.getCurrentProfileContent(this);
+            LauncherProfiles.update();
             minecraftProfile = LauncherProfiles.mainProfileJson.profiles.get(LauncherPreferences.DEFAULT_PREF.getString(LauncherPreferences.PREF_KEY_CURRENT_PROFILE,""));
             if(minecraftProfile == null) {
                 Toast.makeText(this,"Attempted to launch nonexistent profile",Toast.LENGTH_SHORT).show();
                 finish();
                 return;
             }
             String runtime = LauncherPreferences.PREF_DEFAULT_RUNTIME;
-                LauncherProfiles.update();
 
                 mVersionInfo = Tools.getVersionInfo(null, BaseLauncherActivity.getVersionId(
                         minecraftProfile.lastVersionId));

File: app_pojavlauncher/src/main/java/com/kdt/pickafile/FileListView.java
Patch:
@@ -113,7 +113,7 @@ public void listFileAt(final String path)
                         fileAdapter.add(new File(path, ".."));
                     }
 
-                    if(listFile.length != 0){
+                    if(listFile != null && listFile.length != 0){
                         Arrays.sort(listFile, new SortFileName());
                         if(fileSuffixes.length > 0){ //Meaning we want only specific files
                             for(File file : listFile){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -195,13 +195,14 @@ public void onNothingSelected(AdapterView<?> p1) {
             ProfileAdapter profileAdapter = new ProfileAdapter(this, true);
             ProfileEditor profileEditor = new ProfileEditor(this,(name, isNew, deleting)->{
                 LauncherProfiles.update();
+                profileAdapter.notifyDataSetChanged();
                 if(isNew) {
                     mVersionSelector.setSelection(profileAdapter.resolveProfileIndex(name));
                 }
                 if(deleting) {
                     mVersionSelector.setSelection(0);
                 }
-                profileAdapter.notifyDataSetChanged();
+
             });
             mVersionSelector.setOnLongClickListener((v)->profileEditor.show(LauncherPreferences.DEFAULT_PREF.getString(LauncherPreferences.PREF_KEY_CURRENT_PROFILE,"")));
             mVersionSelector.setAdapter(profileAdapter);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/launcherprofiles/MinecraftLauncherProfiles.java
Patch:
@@ -4,7 +4,7 @@
 
 public class MinecraftLauncherProfiles
 {
-	public Map<String, MinecraftProfile> profiles;
+	public Map<String, MinecraftProfile> profiles = new HashMap<>();
 	public boolean profilesWereMigrated;
 	public String clientToken;
 	public Map<String, MinecraftAuthenticationDatabase> authenticationDatabase;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/MinecraftDownloaderTask.java
Patch:
@@ -174,8 +174,7 @@ public void updateProgress(int curr, int max) {
                         publishProgress("1", "Ignored " + libItem.name);
                         //Thread.sleep(100);
                     } else {
-                        String[] libInfo = libItem.name.split(":");
-                        String libArtifact = Tools.artifactToPath(libInfo[0], libInfo[1], libInfo[2]);
+                        String libArtifact = Tools.artifactToPath(libItem.name);
                         outLib = new File(Tools.DIR_HOME_LIBRARY + "/" + libArtifact);
                         outLib.getParentFile().mkdirs();
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseLauncherActivity.java
Patch:
@@ -224,7 +224,7 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
                 Thread t = new Thread(() -> {
                     try {
                         String name = getFileName(this, uri);
-                        MultiRTUtils.installRuntimeNamed(getContentResolver().openInputStream(uri), name,
+                        MultiRTUtils.installRuntimeNamed(getApplicationContext().getApplicationInfo().nativeLibraryDir, getContentResolver().openInputStream(uri), name,
                                 (resid, stuff) -> BaseLauncherActivity.this.runOnUiThread(
                                         () -> barrier.setMessage(BaseLauncherActivity.this.getString(resid, stuff))));
                         MultiRTUtils.postPrepare(BaseLauncherActivity.this, name);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -389,7 +389,7 @@ protected void onActivityResult(int requestCode, int resultCode, @Nullable Inten
                     final Uri uri = data.getData();
                     Thread t = new Thread(() -> {
                         try {
-                            MultiRTUtils.installRuntimeNamed(getContentResolver().openInputStream(uri), getFileName(this, uri),
+                            MultiRTUtils.installRuntimeNamed(getApplicationContext().getApplicationInfo().nativeLibraryDir, getContentResolver().openInputStream(uri), getFileName(this, uri),
                                     (resid, stuff) -> PojavLoginActivity.this.runOnUiThread(
                                             () -> {
                                                 if (startupTextView != null)

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/multirt/MultiRTUtils.java
Patch:
@@ -75,7 +75,7 @@ public static String getNearestJreName(int majorVersion) {
         return result;
     }
 
-    public static void installRuntimeNamed(InputStream runtimeInputStream, String name, RuntimeProgressReporter progressReporter) throws IOException {
+    public static void installRuntimeNamed(String nativeLibDir, InputStream runtimeInputStream, String name, RuntimeProgressReporter progressReporter) throws IOException {
         File dest = new File(RUNTIME_FOLDER,"/"+name);
         File tmp = new File(dest,"temporary");
         if(dest.exists()) FileUtils.deleteDirectory(dest);
@@ -87,6 +87,7 @@ public static void installRuntimeNamed(InputStream runtimeInputStream, String na
         runtimeInputStream.close();
         uncompressTarXZ(tmp,dest,progressReporter);
         tmp.delete();
+        unpack200(nativeLibDir,RUNTIME_FOLDER + "/" + name);
         read(name);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/MicrosoftAuthTask.java
Patch:
@@ -72,6 +72,7 @@ public Object doInBackground(String... args) {
             Msa msa = new Msa(this, Boolean.parseBoolean(args[0]), args[1]);
 
             MinecraftAccount acc = MinecraftAccount.load(msa.mcName);
+            if(acc == null) acc = new MinecraftAccount();
             if (msa.doesOwnGame) {
                 acc.clientToken = "0"; /* FIXME */
                 acc.accessToken = msa.mcToken;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/InvalidateTokenTask.java
Patch:
@@ -28,6 +28,9 @@ public Throwable doInBackground(String... args) {
 
             
             this.profilePath = MinecraftAccount.load(args[0]);
+            if(profilePath == null) {
+                return null;
+            }
             if (profilePath.accessToken.equals("0")) {
                 return null;
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/RefreshTokenTask.java
Patch:
@@ -39,6 +39,9 @@ public void onPreExecute() {
     public Throwable doInBackground(String... args) {
         try {
             this.profilePath = MinecraftAccount.load(args[0]);
+            if(profilePath == null) {
+                return new NullPointerException();
+            }
             int responseCode = 400;
             try {
                 responseCode = this.authenticator.validate(profilePath.accessToken).statusCode;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -54,7 +54,7 @@ public static MinecraftAccount parse(String content) throws JsonSyntaxException
     }
 
     public static MinecraftAccount load(String name) throws JsonSyntaxException {
-        if(!accountExists(name)) return new MinecraftAccount();
+        if(!accountExists(name)) return null;
         try {
             MinecraftAccount acc = parse(Tools.read(Tools.DIR_ACCOUNT_NEW + "/" + name + ".json"));
             if (acc.accessToken == null) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/MinecraftDownloaderTask.java
Patch:
@@ -103,13 +103,13 @@ public void updateProgress(int curr, int max) {
                          String appropriateRuntime = MultiRTUtils.getNearestJreName(verInfo.javaVersion.majorVersion);
                          if(appropriateRuntime != null) {
                              if(JRE17Util.isInternalNewJRE(appropriateRuntime)) {
-                                 JRE17Util.checkInternalNewJre(mActivity, ((resId, stuff) -> publishProgress(mActivity.getString(resId,stuff))));
+                                 JRE17Util.checkInternalNewJre(mActivity, ((resId, stuff) -> publishProgress("0",mActivity.getString(resId,stuff))));
                              }
                              minecraftProfile.javaDir = Tools.LAUNCHERPROFILES_RTPREFIX+appropriateRuntime;
                              LauncherProfiles.update();
                          }else{
                              if(verInfo.javaVersion.majorVersion <= 17) { // there's a chance we have an internal one for this case
-                                 if(!JRE17Util.checkInternalNewJre(mActivity, ((resId, stuff) -> publishProgress(mActivity.getString(resId,stuff)))))
+                                 if(!JRE17Util.checkInternalNewJre(mActivity, ((resId, stuff) -> publishProgress("0",mActivity.getString(resId,stuff)))))
                                      showRuntimeFail();
                              }else showRuntimeFail();
                          }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/colorselector/AlphaView.java
Patch:
@@ -10,7 +10,6 @@
 import android.graphics.Shader;
 import android.graphics.drawable.Drawable;
 import android.util.AttributeSet;
-import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/colorselector/SVRectangleView.java
Patch:
@@ -62,9 +62,9 @@ public void setLuminosityIntensity(float luminosity, float intensity) {
         invalidate();
     }
 
-    public void setColor(int color) {
+    public void setColor(int color, boolean invalidate) {
         mColorPaint.setColor(color);
-        invalidate();
+        if(invalidate) invalidate();
     }
 
     public void setRectSelectionListener(RectangleSelectionListener listener) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/V117CompatUtil.java
Patch:
@@ -113,7 +113,7 @@ public static void runCheck(String version, Activity activity) throws Exception{
         String renderer;
         String gamePath;
         LauncherProfiles.update();
-        MinecraftProfile prof = LauncherProfiles.mainProfileJson.profiles.get(((BaseLauncherActivity)ctx).mProfile.selectedProfile);
+        MinecraftProfile prof = LauncherProfiles.mainProfileJson.profiles.get(((BaseLauncherActivity)activity).mProfile.selectedProfile);
         if(prof == null) throw new MinecraftDownloaderTask.SilentException();
         renderer = prof.pojavRendererName != null ? prof.pojavRendererName : LauncherPreferences.PREF_RENDERER;
         gamePath = prof.gameDir != null && prof.gameDir.startsWith(Tools.LAUNCHERPROFILES_RTPREFIX) ? prof.gameDir.replace(Tools.LAUNCHERPROFILES_RTPREFIX,Tools.DIR_GAME_HOME + "/") : Tools.DIR_GAME_NEW;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/screens/LauncherPreferenceVideoFragment.java
Patch:
@@ -19,7 +19,7 @@ public void onCreatePreferences(Bundle b, String str) {
         addPreferencesFromResource(R.xml.pref_video);
 
         //Disable notch checking behavior on android 8.1 and below.
-        findPreference("ignoreNotch").setVisible(Build.VERSION.SDK_INT >= Build.VERSION_CODES.P && PREF_NOTCH_SIZE != 0);
+        findPreference("ignoreNotch").setVisible(Build.VERSION.SDK_INT >= Build.VERSION_CODES.P && PREF_NOTCH_SIZE > 0);
 
         CustomSeekBarPreference seek5 = findPreference("resolutionRatio");
         seek5.setMin(25);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -429,6 +429,7 @@ public static String loadGraphicsLibrary(){
         String renderLibrary;
         switch (LOCAL_RENDERER){
             case "opengles2": renderLibrary = "libgl4es_114.so"; break;
+            case "opengles3_virgl":
             case "vulkan_zink": renderLibrary = "libOSMesa_8.so"; break;
             default:
                 Log.w("RENDER_LIBRARY", "No renderer selected, defaulting to opengles2");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLSurface.java
Patch:
@@ -163,6 +163,7 @@ public void surfaceDestroyed(@NonNull SurfaceHolder holder) {
             ((ViewGroup)getParent()).addView(surfaceView);
         }else{
             TextureView textureView = new TextureView(getContext());
+            textureView.setOpaque(true);
             mSurface = textureView;
 
             textureView.setSurfaceTextureListener(new TextureView.SurfaceTextureListener() {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -99,7 +99,7 @@ public boolean onTouch(View v, MotionEvent event) {
             float x = event.getX();
             float y = event.getY();
             if (mGestureDetector.onTouchEvent(event)) {
-                sendScaledMousePosition(x, y);
+                sendScaledMousePosition(x + mTextureView.getX(), y);
                 AWTInputBridge.sendMousePress(AWTInputEvent.BUTTON1_DOWN_MASK);
                 return true;
             }
@@ -110,7 +110,7 @@ public boolean onTouch(View v, MotionEvent event) {
                 case MotionEvent.ACTION_POINTER_UP: // 6
                     break;
                 case MotionEvent.ACTION_MOVE: // 2
-                    sendScaledMousePosition(x, y);
+                    sendScaledMousePosition(x + mTextureView.getX(), y);
                     break;
             }
             return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -44,7 +44,7 @@ public class BaseMainActivity extends BaseActivity {
 
     private boolean mIsResuming = false;
 
-    private MinecraftGLView minecraftGLView;
+    private MinecraftGLSurfaceView minecraftGLView;
     private static Touchpad touchpad;
     private LoggerView loggerView;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Touchpad.java
Patch:
@@ -1,6 +1,6 @@
 package net.kdt.pojavlaunch;
 
-import static net.kdt.pojavlaunch.MinecraftGLView.FINGER_SCROLL_THRESHOLD;
+import static net.kdt.pojavlaunch.MinecraftGLSurfaceView.FINGER_SCROLL_THRESHOLD;
 import static net.kdt.pojavlaunch.Tools.currentDisplayMetrics;
 import static net.kdt.pojavlaunch.prefs.LauncherPreferences.DEFAULT_PREF;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlButton.java
Patch:
@@ -292,7 +292,7 @@ public boolean onTouchEvent(MotionEvent event) {
                 case MotionEvent.ACTION_MOVE:
                     //Send the event to be taken as a mouse action
                     if(mProperties.passThruEnabled && CallbackBridge.isGrabbing()){
-                        MinecraftGLView v = ((ControlLayout) this.getParent()).findViewById(R.id.main_game_render_view);
+                        MinecraftGLSurfaceView v = ((ControlLayout) this.getParent()).findViewById(R.id.main_game_render_view);
                         if (v != null) v.dispatchTouchEvent(event);
                     }
 
@@ -332,7 +332,7 @@ public boolean onTouchEvent(MotionEvent event) {
                 case MotionEvent.ACTION_CANCEL: // 3
                 case MotionEvent.ACTION_POINTER_UP: // 6
                     if(mProperties.passThruEnabled){
-                        MinecraftGLView v = ((ControlLayout) this.getParent()).findViewById(R.id.main_game_render_view);
+                        MinecraftGLSurfaceView v = ((ControlLayout) this.getParent()).findViewById(R.id.main_game_render_view);
                         if (v != null) v.dispatchTouchEvent(event);
                     }
                     if(mIsPointerOutOfBounds) ((ControlLayout) getParent()).onTouch(this, event);

File: app_pojavlauncher/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -36,9 +36,10 @@ public static void putMouseEventWithCoords(int button, boolean isDown, float x,
 
     public static void sendCursorPos(float x, float y) {
         if (!threadAttached) {
+            nativeSetUseInputStackQueue(BaseMainActivity.isInputStackCall);
             threadAttached = CallbackBridge.nativeAttachThreadToOther(true, BaseMainActivity.isInputStackCall);
         }
-        
+
         DEBUG_STRING.append("CursorPos=").append(x).append(", ").append(y).append("\n");
         mouseX = x;
         mouseY = y;
@@ -198,6 +199,7 @@ public static void setModifiers(int keyCode, boolean isDown){
         }
     }
 
+    public static native void nativeSetUseInputStackQueue(boolean useInputStackQueue);
     public static native boolean nativeAttachThreadToOther(boolean isAndroid, boolean isUsePushPoll);
 
     private static native boolean nativeSendChar(char codepoint);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -663,6 +663,9 @@ public static File lastFileModified(String dir) {
         File fl = new File(dir);
 
         File[] files = fl.listFiles(File::isFile);
+        if (files == null) {
+            return null;
+        }
 
         long lastMod = Long.MIN_VALUE;
         File choice = null;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -20,7 +20,7 @@ public class PojavApplication extends Application {
 	@Override
 	public void onCreate() {
 		Thread.setDefaultUncaughtExceptionHandler((thread, th) -> {
-			boolean storagePermAllowed = Build.VERSION.SDK_INT < 23 ||
+			boolean storagePermAllowed = Build.VERSION.SDK_INT < 23 || Build.VERSION.SDK_INT >= 29 ||
 					ActivityCompat.checkSelfPermission(PojavApplication.this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED;
 			File crashFile = new File(storagePermAllowed ? Tools.DIR_GAME_HOME : Tools.DIR_DATA, "latestcrash.txt");
 			try {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -192,7 +192,7 @@ public void onNothingSelected(AdapterView<?> p1) {
         setupBasicList(this);
 
         //mAvailableVersions;
-            ProfileAdapter profileAdapter = new ProfileAdapter(this);
+            ProfileAdapter profileAdapter = new ProfileAdapter(this, true);
             ProfileEditor profileEditor = new ProfileEditor(this,(name, isNew, deleting)->{
                 LauncherProfiles.update();
                 if(isNew) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/multirt/MultiRTConfigDialog.java
Patch:
@@ -19,7 +19,7 @@ public class MultiRTConfigDialog {
 
     public void prepare(BaseLauncherActivity activity) {
         mDialogView = new RecyclerView(activity);
-        mDialogView.setLayoutManager(new LinearLayoutManager(activity, LinearLayoutManager.HORIZONTAL, false));
+        mDialogView.setLayoutManager(new LinearLayoutManager(activity, LinearLayoutManager.VERTICAL, false));
         mDialogView.setAdapter(new RTRecyclerViewAdapter(this));
 
         AlertDialog.Builder builder = new AlertDialog.Builder(activity);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JAssets.java
Patch:
@@ -1,9 +1,11 @@
 package net.kdt.pojavlaunch;
 
+import com.google.gson.annotations.SerializedName;
+
 import java.util.Map;
 
 public class JAssets {
-    public boolean mapToResources;
+    @SerializedName("map_to_resources") public boolean mapToResources;
     public Map<String, JAssetInfo> objects;
 }
 

File: app_pojavlauncher/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -211,7 +211,8 @@ public static void setModifiers(int keyCode, boolean isDown){
     private static native void nativeSendMouseButton(int button, int action, int mods);
     private static native void nativeSendScroll(double xoffset, double yoffset);
     private static native void nativeSendScreenSize(int width, int height);
-    
+    public static native void nativeSetWindowAttrib(int attrib, int value);
+
     public static native boolean nativeIsGrabbing();
     static {
         System.loadLibrary("pojavexec");

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -995,9 +995,11 @@ public static long glfwCreateWindow(int width, int height, CharSequence title, l
 
         win.width = mGLFWWindowWidth;
         win.height = mGLFWWindowHeight;
-
         win.title = title;
 
+        win.windowAttribs.put(GLFW_HOVERED, 1);
+        win.windowAttribs.put(GLFW_VISIBLE, 1);
+
         mGLFWWindowMap.put(ptr, win);
         mainContext = ptr;
         return ptr;

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -497,7 +497,7 @@ public class GLFW
     private static ArrayMap<Long, GLFWWindowProperties> mGLFWWindowMap;
 
     public static boolean mGLFWIsGrabbing, mGLFWIsInputReady, mGLFWIsUseStackQueue = false;
-    public static final byte[] keyDownBuffer = new byte[316];
+    public static final byte[] keyDownBuffer = new byte[317];
     private static final String PROP_WINDOW_WIDTH = "glfwstub.windowWidth";
     private static final String PROP_WINDOW_HEIGHT= "glfwstub.windowHeight";
     public static long mainContext = 0;
@@ -1099,7 +1099,7 @@ public static void glfwPollEvents() {
                         break;
                     case CallbackBridge.EVENT_TYPE_KEY:
                         if (mGLFWKeyCallback != null) {
-                        	keyDownBuffer[dataArr[1]-32]=(byte)(int)dataArr[3];
+                            keyDownBuffer[Math.max(0, dataArr[1]-31)]=(byte)(int)dataArr[3];
                             mGLFWKeyCallback.invoke(ptr, dataArr[1], dataArr[2], dataArr[3], dataArr[4]);
                         }
                         break;
@@ -1191,7 +1191,7 @@ public static int glfwGetKeyScancode(int key) {
     }
 
     public static int glfwGetKey(@NativeType("GLFWwindow *") long window, int key) {
-        return keyDownBuffer[key-32];
+        return keyDownBuffer[Math.max(0, dataArr[1]-31)];
     }
 
     public static int glfwGetMouseButton(@NativeType("GLFWwindow *") long window, int button) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -340,6 +340,7 @@ private void initMain() throws Throwable {
             // TODO: Remove after implement.
             Tools.copyAssetFile(this, "launcher_profiles.json", Tools.DIR_GAME_NEW, false);
             Tools.copyAssetFile(this,"resolv.conf",Tools.DIR_DATA, true);
+            Tools.copyAssetFile(this,"arc_dns_injector.jar",Tools.DIR_DATA, true);
             AssetManager am = this.getAssets();
             
             unpackComponent(am, "caciocavallo");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -150,6 +150,9 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount pro
         // Only Java 8 supports headful AWT for now
         if (JREUtils.jreReleaseList.get("JAVA_VERSION").equals("1.8.0")) {
             getCacioJavaArgs(javaArgList, false);
+        } else if (LauncherPreferences.PREF_ARC_CAPES) {
+            // Opens the java.net package to Arc DNS injector on Java 9+
+            javaArgList.add("--add-opens=java.base/java.net=ALL-UNNAMED");
         }
 
 /*

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -39,6 +39,7 @@ public class LauncherPreferences
     public static boolean PREF_VBO_DISABLE_HACK = false;
     public static boolean PREF_VIRTUAL_MOUSE_START = false;
     public static boolean PREF_OPENGL_VERSION_HACK = false;
+    public static boolean PREF_ARC_CAPES = false;
 
 
     public static void loadPreferences(Context ctx) {
@@ -73,6 +74,7 @@ public static void loadPreferences(Context ctx) {
         PREF_ENABLE_PROFILES = DEFAULT_PREF.getBoolean("enable_profiles", false);
         PREF_VIRTUAL_MOUSE_START = DEFAULT_PREF.getBoolean("mouse_start", false);
         PREF_OPENGL_VERSION_HACK = DEFAULT_PREF.getBoolean("gles_version_hack", false);
+        PREF_ARC_CAPES = DEFAULT_PREF.getBoolean("arc_capes",false);
 
 /*
         if (PREF_CUSTOM_JAVA_ARGS.isEmpty()) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -136,6 +136,9 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount pro
         // Only Java 8 supports headful AWT for now
         if (JREUtils.jreReleaseList.get("JAVA_VERSION").equals("1.8.0")) {
             getCacioJavaArgs(javaArgList, false);
+        } else if (LauncherPreferences.PREF_ARC_CAPES) {
+            // Opens the java.net package to Arc DNS injector on Java 9+
+            javaArgList.add("--add-opens=java.base/java.net=ALL-UNNAMED");
         }
 
 /*

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -210,6 +210,9 @@ public static void setJavaEnvironment(Activity activity) throws Throwable {
         envMap.put("TMPDIR", activity.getCacheDir().getAbsolutePath());
         envMap.put("LIBGL_MIPMAP", "3");
 
+        // On certain GLES drivers, overloading default functions shader hack fails, so disable it
+        envMap.put("LIBGL_NOINTOVLHACK", "1");
+
         // The shrink hack can be enabled from the experimental settings
         envMap.put("LIBGL_SHRINK", PREF_GLES_SHRINK_HACK);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -151,6 +151,9 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount pro
         }
 */
 
+        if (versionInfo.logging != null) {
+            javaArgList.add("-Dlog4j.configurationFile=" + Tools.DIR_GAME_NEW + "/" + versionInfo.logging.client.file.id);
+        }
         javaArgList.add("-cp");
         javaArgList.add(getLWJGL3ClassPath() + ":" + launchClassPath);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -151,7 +151,9 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount pro
         }
 */
 
-        javaArgList.add("-Dlog4j.configurationFile=" + Tools.DIR_GAME_NEW + "/" + versionInfo.logging.client.file.id);
+        if (versionInfo.logging != null) {
+            javaArgList.add("-Dlog4j.configurationFile=" + Tools.DIR_GAME_NEW + "/" + versionInfo.logging.client.file.id);
+        }
         javaArgList.add("-cp");
         javaArgList.add(getLWJGL3ClassPath() + ":" + launchClassPath);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -151,7 +151,7 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount pro
         }
 */
 
-        javaArgList.add("-Dlog4j.configurationFile=" + Tools.DIR_GAME_NEW + "/" + mVersion.logging.client.file.id);
+        javaArgList.add("-Dlog4j.configurationFile=" + Tools.DIR_GAME_NEW + "/" + versionInfo.logging.client.file.id);
         javaArgList.add("-cp");
         javaArgList.add(getLWJGL3ClassPath() + ":" + launchClassPath);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -151,6 +151,7 @@ public static void launchMinecraft(final Activity activity, MinecraftAccount pro
         }
 */
 
+        javaArgList.add("-Dlog4j.configurationFile=" + Tools.DIR_GAME_NEW + "/" + mVersion.logging.client.file.id);
         javaArgList.add("-cp");
         javaArgList.add(getLWJGL3ClassPath() + ":" + launchClassPath);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -361,6 +361,8 @@ public static List<String> getJavaArgs(Context ctx) {
 
                 "-Dext.net.resolvPath=" +new File(Tools.DIR_DATA,"resolv.conf").getAbsolutePath(),
 
+                "-Dlog4j2.formatMsgNoLookups=true", //Log4j RCE mitigation
+
                 "-Dnet.minecraft.clientmodname=" + Tools.APP_NAME,
                 "-Dfml.earlyprogresswindow=false" //Forge 1.14+ workaround
         };
@@ -538,7 +540,6 @@ private static int getDetectedVersion() {
     public static native void setupExitTrap(Context context);
     // Obtain AWT screen pixels to render on Android SurfaceView
     public static native int[] renderAWTScreenFrame(/* Object canvas, int width, int height */);
-
     static {
         System.loadLibrary("pojavexec");
         System.loadLibrary("pojavexec_awt");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -62,7 +62,6 @@ public class BaseMainActivity extends BaseActivity {
 
     protected void initLayout(int resId) {
         setContentView(resId);
-        ProfileAdapter.clearIconCache();
         try {
             Logger.getInstance().reset();
             // FIXME: is it safe fot multi thread?

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -91,6 +91,8 @@ public PojavLauncherActivity() {
     protected void onDestroy() {
         ExtraCore.removeExtraListenerFromValue("back_preference", backPreferenceListener);
         super.onDestroy();
+        ProfileAdapter.clearIconCache();
+        Log.i("LauncherActivity","Destroyed!");
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/MinecraftDownloaderTask.java
Patch:
@@ -349,6 +349,8 @@ protected void onPostExecute(Throwable p1)
                 mainIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT);
                 mainIntent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
                 mActivity.startActivity(mainIntent);
+                mActivity.finish();
+                Log.i("ActCheck","mainActivity finishing="+mActivity.isFinishing()+", destroyed="+mActivity.isDestroyed());
             }
             catch (Throwable e) {
                 Tools.showError(mActivity, e);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -361,6 +361,8 @@ public static List<String> getJavaArgs(Context ctx) {
 
                 "-Dext.net.resolvPath=" +new File(Tools.DIR_DATA,"resolv.conf").getAbsolutePath(),
 
+                "-Dlog4j2.formatMsgNoLookup=true", //Log4j RCE mitigation
+
                 "-Dnet.minecraft.clientmodname=" + Tools.APP_NAME,
                 "-Dfml.earlyprogresswindow=false" //Forge 1.14+ workaround
         };

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -68,6 +68,7 @@ public static void loadPreferences(Context ctx) {
         PREF_SUSTAINED_PERFORMANCE = DEFAULT_PREF.getBoolean("sustainedPerformance", false);
         PREF_GLES_SHRINK_HACK = DEFAULT_PREF.getString("gl4es_shrink_hack", "0");
         PREF_VBO_DISABLE_HACK = DEFAULT_PREF.getBoolean("vbo_disable_hack", false);
+        PREF_ENABLE_PROFILES = DEFAULT_PREF.getBoolean("enable_profiles", false);
 
 /*
         if (PREF_CUSTOM_JAVA_ARGS.isEmpty()) {

File: app_pojavlauncher/src/main/java/com/kdt/LoggerView.java
Patch:
@@ -68,7 +68,7 @@ private void init(){
         logListener = text -> {
             if(log.getVisibility() != VISIBLE) return;
             post(() -> {
-                log.append(text);
+                log.append(text + '\n');
                 scrollView.fullScroll(View.FOCUS_DOWN);
             });
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -36,6 +36,7 @@ public class LauncherPreferences
     public static boolean PREF_SUSTAINED_PERFORMANCE = false;
     public static boolean PREF_ENABLE_PROFILES = true;
     public static String PREF_GLES_SHRINK_HACK = "0";
+    public static boolean PREF_VBO_DISABLE_HACK = false;
 
 
     public static void loadPreferences(Context ctx) {
@@ -66,6 +67,7 @@ public static void loadPreferences(Context ctx) {
         PREF_CONTROL_LEFT_OFFSET = DEFAULT_PREF.getInt("controlLeftOffset", 0);
         PREF_SUSTAINED_PERFORMANCE = DEFAULT_PREF.getBoolean("sustainedPerformance", false);
         PREF_GLES_SHRINK_HACK = DEFAULT_PREF.getString("gl4es_shrink_hack", "0");
+        PREF_VBO_DISABLE_HACK = DEFAULT_PREF.getBoolean("vbo_disable_hack", false);
 
 /*
         if (PREF_CUSTOM_JAVA_ARGS.isEmpty()) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLView.java
Patch:
@@ -340,11 +340,13 @@ public boolean onTouchEvent(MotionEvent e) {
                 break;
 
             case MotionEvent.ACTION_POINTER_DOWN: // 5
+                //TODO Hey we could have some sort of middle click detection ?
+                
                 scrollLastInitialX = e.getX();
                 scrollLastInitialY = e.getY();
                 //Checking if we are pressing the hotbar to select the item
                 hudKeyHandled = handleGuiBar((int)e.getX(e.getPointerCount()-1), (int) e.getY(e.getPointerCount()-1));
-                if(hudKeyHandled == -1){
+                if(hudKeyHandled != -1){
                     sendKeyPress(hudKeyHandled);
                     if(hasDoubleTapped && hudKeyHandled == lastHotbarKey){
                         //Prevent double tapping Event on two different slots

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -217,8 +217,8 @@ public static void setJavaEnvironment(Activity activity) throws Throwable {
    
         envMap.put("MESA_GLSL_CACHE_DIR", activity.getCacheDir().getAbsolutePath());
         if (LOCAL_RENDERER != null) {
-            envMap.put("MESA_GL_VERSION_OVERRIDE", LOCAL_RENDERER.equals("opengles3_virgl")?"4.5":"4.6");
-            envMap.put("MESA_GLSL_VERSION_OVERRIDE", LOCAL_RENDERER.equals("opengles3_virgl")?"450":"460");
+            envMap.put("MESA_GL_VERSION_OVERRIDE", LOCAL_RENDERER.equals("opengles3_virgl")?"4.3":"4.6");
+            envMap.put("MESA_GLSL_VERSION_OVERRIDE", LOCAL_RENDERER.equals("opengles3_virgl")?"430":"460");
         }
         envMap.put("force_glsl_extensions_warn", "true");
         envMap.put("allow_higher_compat_version", "true");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLView.java
Patch:
@@ -577,7 +577,7 @@ public int handleGuiBar(int x, int y) {
         int barX = (CallbackBridge.physicalWidth / 2) - (barWidth / 2);
         if(x < barX || x >= barX + barWidth) return -1;
 
-        return hotbarKeys[((x - barX) / barWidth / 9) % 9];
+        return hotbarKeys[(int) net.kdt.pojavlaunch.utils.MathUtils.map(x, barX, barX + barWidth, 0, 9)];
     }
 
     /** Return the size, given the UI scale size */

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -18,6 +18,7 @@ public class MinecraftAccount
     public String profileId = "00000000-0000-0000-0000-000000000000"; // profile UUID, for obtaining skin
     public String username = "Steve";
     public String selectedVersion = "1.7.10";
+    public String selectedProfile = "";
     public boolean isMicrosoft = false;
     public String msaRefreshToken = "0";
     public String skinFaceBase64;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Logger.java
Patch:
@@ -22,7 +22,7 @@ private Logger(){
     }
 
     private Logger(String fileName){
-        logFile = new File(Tools.ASSETS_PATH, fileName);
+        logFile = new File(Tools.DIR_GAME_HOME, fileName);
         // Make a new instance of the log file
         logFile.delete();
         try {
@@ -61,6 +61,7 @@ public void reset(){
         try{
             logFile.delete();
             logFile.createNewFile();
+            logStream = new PrintStream(logFile.getAbsolutePath());
         }catch (IOException e){ e.printStackTrace();}
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -61,7 +61,7 @@ public static void loadPreferences(Context ctx) {
         PREF_CONTROL_TOP_OFFSET = DEFAULT_PREF.getInt("controlTopOffset", 0);
         PREF_CONTROL_RIGHT_OFFSET = DEFAULT_PREF.getInt("controlRightOffset", 0);
         PREF_CONTROL_BOTTOM_OFFSET = DEFAULT_PREF.getInt("controlBottomOffset", 0);
-        PREF_CONTROL_LEFT_OFFSET = DEFAULT_PREF.getInt("controlTopOffset", 0);
+        PREF_CONTROL_LEFT_OFFSET = DEFAULT_PREF.getInt("controlLeftOffset", 0);
         PREF_SUSTAINED_PERFORMANCE = DEFAULT_PREF.getBoolean("sustainedPerformance", false);
 
 /*

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -15,6 +15,7 @@
 import org.lwjgl.glfw.*;
 
 import static net.kdt.pojavlaunch.LWJGLGLFWKeycode.GLFW_KEY_UNKNOWN;
+import static org.lwjgl.glfw.CallbackBridge.sendKeyPress;
 
 public class ControlData {
 
@@ -174,7 +175,7 @@ public ControlData(ControlData controlData){
     
     public void execute(boolean isDown) {
         for(int keycode : keycodes){
-            BaseMainActivity.sendKeyPress(keycode, 0, isDown);
+            sendKeyPress(keycode, 0, isDown);
         }
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -3,6 +3,8 @@
 
 import static android.content.Context.INPUT_METHOD_SERVICE;
 
+import static org.lwjgl.glfw.CallbackBridge.sendKeyPress;
+
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.res.Configuration;
@@ -125,7 +127,7 @@ public void clear(){
      * Send the enter key.
      */
     private void sendEnter(){
-        BaseMainActivity.sendKeyPress(LWJGLGLFWKeycode.GLFW_KEY_ENTER);
+        sendKeyPress(LWJGLGLFWKeycode.GLFW_KEY_ENTER);
         clear();
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlButton.java
Patch:
@@ -20,13 +20,14 @@
 
 import org.lwjgl.glfw.*;
 
-import static net.kdt.pojavlaunch.BaseMainActivity.sendMouseButton;
 import static net.kdt.pojavlaunch.LWJGLGLFWKeycode.GLFW_KEY_UNKNOWN;
 import static net.kdt.pojavlaunch.prefs.LauncherPreferences.PREF_BUTTONSIZE;
 import static net.kdt.pojavlaunch.prefs.LauncherPreferences.PREF_CONTROL_BOTTOM_OFFSET;
 import static net.kdt.pojavlaunch.prefs.LauncherPreferences.PREF_CONTROL_LEFT_OFFSET;
 import static net.kdt.pojavlaunch.prefs.LauncherPreferences.PREF_CONTROL_RIGHT_OFFSET;
 import static net.kdt.pojavlaunch.prefs.LauncherPreferences.PREF_CONTROL_TOP_OFFSET;
+import static org.lwjgl.glfw.CallbackBridge.sendKeyPress;
+import static org.lwjgl.glfw.CallbackBridge.sendMouseButton;
 
 @SuppressLint("ViewConstructor")
 public class ControlButton extends androidx.appcompat.widget.AppCompatButton implements OnLongClickListener
@@ -512,7 +513,7 @@ public void sendKeyPresses(boolean isDown){
         setActivated(isDown);
         for(int keycode : mProperties.keycodes){
             if(keycode >= GLFW_KEY_UNKNOWN){
-                MainActivity.sendKeyPress(keycode, CallbackBridge.getCurrentMods(), isDown);
+                sendKeyPress(keycode, CallbackBridge.getCurrentMods(), isDown);
                 CallbackBridge.setModifiers(keycode, isDown);
             }else{
                 sendSpecialKey(keycode, isDown);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLView.java
Patch:
@@ -80,8 +80,7 @@ public void handleMessage(Message msg) {
                 float x = CallbackBridge.mouseX;
                 float y = CallbackBridge.mouseY;
                 if (CallbackBridge.isGrabbing() &&
-                        Math.abs(initialX - x) < FINGER_STILL_THRESHOLD &&
-                        Math.abs(initialY - y) < FINGER_STILL_THRESHOLD) {
+                        MathUtils.dist(x, y, mouse_x, mouse_y) < FINGER_STILL_THRESHOLD) {
                     triggeredLeftMouseButton = true;
                     sendMouseButton(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_LEFT, true);
                 }

File: app_pojavlauncher/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -20,8 +20,8 @@ public class CallbackBridge {
     
     // volatile private static boolean isGrabbing = false;
     public static class PusherRunnable implements Runnable {
-        int button; int x; int y;
-        public PusherRunnable(int button, int x, int y) {
+        int button; float x; float y;
+        public PusherRunnable(int button, float x, float y) {
            this.button = button;
            this.x = x;
            this.y = y;
@@ -33,7 +33,7 @@ public void run() {
             putMouseEventWithCoords(button, false, x, y);
         }
     }
-    public static void putMouseEventWithCoords(int button, int x, int y /* , int dz, long nanos */) {
+    public static void putMouseEventWithCoords(int button, float x, float y /* , int dz, long nanos */) {
         new Thread(new PusherRunnable(button,x,y)).run();
     }
     

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -53,7 +53,7 @@ public static void sendGrabbing(boolean grab, int xset, int yset) {
     }
     
 	// Called from Android side
-	public static void receiveCallback(int type, float i1, float i2, int i3, int i4) {
+	public static void receiveCallback(int type, int i1, int i2, int i3, int i4) {
        /*
         if (INPUT_DEBUG_ENABLED) {
             System.out.println("LWJGL GLFW Callback received type=" + Integer.toString(type) + ", data=" + i1 + ", " + i2 + ", " + i3 + ", " + i4);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -338,13 +338,13 @@ public void onAttachedToWindow() {
     public void onBackPressed() {
         int count = getSupportFragmentManager().getBackStackEntryCount();
 
-        if (count == 0 && viewPager.getCurrentItem() == 3) {
+        if(count > 0 && viewPager.getCurrentItem() == 3){
+            getSupportFragmentManager().popBackStack();
+        }else{
             super.onBackPressed();
             //additional code
             ExtraCore.removeExtraListener("back_preference", backPreferenceListener);
             finish();
-        } else {
-            getSupportFragmentManager().popBackStack();
         }
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/TapDetector.java
Patch:
@@ -81,8 +81,8 @@ public boolean onTouchEvent(MotionEvent e){
         if(currentTapNumber > 0){
             if  ((deltaTime < TAP_MIN_DELTA_MS || deltaTime > TAP_MAX_DELTA_MS) ||
                 ((deltaX*deltaX + deltaY*deltaY) > TAP_SLOP_SQUARE_PX)) {
+                // We invalidate previous taps, not this one though
                 currentTapNumber = 0;
-                return false;
             }
         }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/MicrosoftAuthTask.java
Patch:
@@ -71,7 +71,7 @@ public Object doInBackground(String... args) {
              */
             Msa msa = new Msa(this, Boolean.parseBoolean(args[0]), args[1]);
 
-            MinecraftAccount acc = new MinecraftAccount();
+            MinecraftAccount acc = MinecraftAccount.load(msa.mcName);
             if (msa.doesOwnGame) {
                 acc.clientToken = "0"; /* FIXME */
                 acc.accessToken = msa.mcToken;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -166,7 +166,7 @@ protected void initLayout(int resId) {
 
             
 
-            singleTapDetector = new TapDetector(1, TapDetector.DETECTION_METHOD_UP);
+            singleTapDetector = new TapDetector(1, TapDetector.DETECTION_METHOD_BOTH);
             doubleTapDetector = new TapDetector(2, TapDetector.DETECTION_METHOD_DOWN);
 
 

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/opengl/ContextGL.java
Patch:
@@ -131,7 +131,7 @@ static ContextGL getCurrentContext() {
                 if(shared_context != null) {
                     share = shared_context.handle;
                 }
-                this.handle = GLFW.nativeEglCreateContext(share);
+                this.handle = GLFW.nglfwCreateContext(share);
                 // implementation.create(peer_info, attribList, shared_context != null ? shared_context.handle : null);
             /* } catch (LWJGLException e) {
                 // GLContext.unloadOpenGLLibrary();

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -614,7 +614,7 @@ private Functions() {}
             MakeContextCurrent = apiGetFunctionAddress(GLFW, "pojavMakeCurrent"),
             Terminate = apiGetFunctionAddress(GLFW, "pojavTerminate"),
             SwapBuffers = apiGetFunctionAddress(GLFW, "pojavSwapBuffers"),
-            SwapInterval = apiGetFunctionAddress(GLFW, "pojavSwapInternal");
+            SwapInterval = apiGetFunctionAddress(GLFW, "pojavSwapInterval");
     }
 
 	public static SharedLibrary getLibrary() {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -446,6 +446,8 @@ public boolean onTouch(View p1, MotionEvent e) {
                                 scrollInitialY = (int)mouse_y;
                             } else if (!CallbackBridge.isGrabbing() && e.getPointerCount() == 1) { //Touch hover
                                 CallbackBridge.sendCursorPos(e.getX(), e.getY());
+                                prevX =  e.getX();
+                                prevY =  e.getY();
                             } else if (!isTouchInHotbar) {
                                 //Camera movement
                                 if(CallbackBridge.isGrabbing()){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -444,6 +444,8 @@ public boolean onTouch(View p1, MotionEvent e) {
                                 CallbackBridge.sendScroll(Tools.pxToDp(mouse_x - scrollInitialX)/30 , Tools.pxToDp(mouse_y - scrollInitialY)/30);
                                 scrollInitialX = (int)mouse_x;
                                 scrollInitialY = (int)mouse_y;
+                            } else if (!CallbackBridge.isGrabbing() && e.getPointerCount() == 1) { //Touch hover
+                                CallbackBridge.sendCursorPos(e.getX(), e.getY());
                             } else if (!isTouchInHotbar) {
                                 //Camera movement
                                 if(CallbackBridge.isGrabbing()){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -680,7 +680,7 @@ public boolean dispatchKeyEvent(KeyEvent event) {
         if(event.getDevice() != null
                 && ( (event.getSource() & InputDevice.SOURCE_MOUSE_RELATIVE) == InputDevice.SOURCE_MOUSE_RELATIVE
                 ||   (event.getSource() & InputDevice.SOURCE_MOUSE) == InputDevice.SOURCE_MOUSE)  ){
-            Toast.makeText(this, "THE EVENT COMES FROM A MOUSE", Toast.LENGTH_SHORT).show();
+            //Toast.makeText(this, "THE EVENT COMES FROM A MOUSE", Toast.LENGTH_SHORT).show();
 
 
             if(eventKeycode == KeyEvent.KEYCODE_BACK){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -52,7 +52,6 @@ protected void onTextChanged(CharSequence text, int start, int lengthBefore, int
             CallbackBridge.sendKeycode(LWJGLGLFWKeycode.GLFW_KEY_BACKSPACE, '\u0008', 0, 0, true);
         }
         for(int i=start, count = 0; count < lengthAfter; ++i){
-            //I didn't know F25 existed before that. I just need a full fat keycode for mc 1.13+
             CallbackBridge.sendChar(text.charAt(i), 0);
             ++count;
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -649,8 +649,8 @@ public boolean dispatchKeyEvent(KeyEvent event) {
         //Filtering useless events by order of probability
         if((event.getFlags() & KeyEvent.FLAG_FALLBACK) == KeyEvent.FLAG_FALLBACK) return true;
         if(event.getKeyCode() == KeyEvent.KEYCODE_UNKNOWN) return true;
-        if(event.getAction() == KeyEvent.KEYCODE_VOLUME_DOWN) return false;
-        if(event.getAction() == KeyEvent.KEYCODE_VOLUME_UP) return false;
+        if(event.getKeyCode() == KeyEvent.KEYCODE_VOLUME_DOWN) return false;
+        if(event.getKeyCode() == KeyEvent.KEYCODE_VOLUME_UP) return false;
         if(event.getRepeatCount() != 0) return true;
         if(event.getAction() == KeyEvent.ACTION_MULTIPLE) return true;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -317,6 +317,7 @@ public void onAttachedToWindow() {
                 PREF_NOTCH_SIZE = getWindow().getDecorView().getRootWindowInsets().getDisplayCutout().getBoundingRects().get(0).width();
             }catch (Exception e){
                 Log.i("NOTCH DETECTION", "No notch detected, or the device if in split screen mode");
+                PREF_NOTCH_SIZE = -1;
             }
             Tools.updateWindowSize(this);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -199,8 +199,8 @@ public float insertDynamicPos(String dynamicPos) {
     }
 
     private static float calculate(String math) {
-        setExpression(math);
         if(builder.get() == null) bypassExpressionBuilder();
+        setExpression(math);
         return (float) builder.get().build().evaluate();
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -225,8 +225,8 @@ public static void setJavaEnvironment(LoggableActivity ctx) throws Throwable {
         envMap.put("REGAL_GL_VERSION", "4.5");
         if(LOCAL_RENDERER != null) {
             envMap.put("POJAV_RENDERER", LOCAL_RENDERER);
+            if(LOCAL_RENDERER.equals("opengles3_desktopgl_angle_vulkan")) envMap.put("POJAVEXEC_EGL","libEGL_angle.so"); // use ANGLE egl
         }
-        if(LOCAL_RENDERER.equals("opengles3_desktopgl_angle_vulkan")) envMap.put("POJAVEXEC_EGL","libEGL_angle.so"); // use ANGLE egl
         envMap.put("AWTSTUB_WIDTH", Integer.toString(CallbackBridge.windowWidth > 0 ? CallbackBridge.windowWidth : CallbackBridge.physicalWidth));
         envMap.put("AWTSTUB_HEIGHT", Integer.toString(CallbackBridge.windowHeight > 0 ? CallbackBridge.windowHeight : CallbackBridge.physicalHeight));
         

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -125,7 +125,8 @@ && getResources().getConfiguration().hardKeyboardHidden == Configuration.HARDKEY
     public void clear(){
         isDoingInternalChanges = true;
         //Braille space, doesn't trigger keyboard auto-complete
-        setText("\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800");
+        //replacing directly the text without though setText avoids notifying changes
+        getText().replace(0, getText().length(),"\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800");
         setSelection(5);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -100,15 +100,16 @@ public void setSelection(int index) {
      * @return if the keyboard is set to be shown.
      */
     public boolean switchKeyboardState(){
+        InputMethodManager imm = (InputMethodManager) getContext().getSystemService(INPUT_METHOD_SERVICE);
         //If an hard keyboard is present, never trigger the soft one
         if(hasFocus()
                 || (getResources().getConfiguration().keyboard == Configuration.KEYBOARD_QWERTY
                 && getResources().getConfiguration().hardKeyboardHidden == Configuration.HARDKEYBOARDHIDDEN_YES)){
+            imm.hideSoftInputFromWindow(getWindowToken(), 0);
             clear();
             disable();
             return false;
         }else{
-            InputMethodManager imm = (InputMethodManager) getContext().getSystemService(INPUT_METHOD_SERVICE);
             enable();
             imm.showSoftInput(this, InputMethodManager.SHOW_IMPLICIT);
             return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -635,6 +635,7 @@ public boolean dispatchKeyEvent(KeyEvent event) {
          */
 
         //Filtering useless events
+        if(event.getFlags() == KeyEvent.FLAG_FROM_SYSTEM) return false; //Volume keys and stuff
         if(event.getRepeatCount() != 0
                 || event.getAction() == KeyEvent.ACTION_MULTIPLE
                 || event.getKeyCode() == KeyEvent.KEYCODE_UNKNOWN

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -338,7 +338,7 @@ private void initMain() throws Throwable {
             Tools.copyAssetFile(this, "options.txt", Tools.DIR_GAME_NEW, false);
             // TODO: Remove after implement.
             Tools.copyAssetFile(this, "launcher_profiles.json", Tools.DIR_GAME_NEW, false);
-
+            Tools.copyAssetFile(this,"resolv.conf",Tools.DIR_DATA, true);
             AssetManager am = this.getAssets();
             
             unpackComponent(am, "caciocavallo");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -346,6 +346,8 @@ public static List<String> getJavaArgs(Context ctx) {
                 "-Dglfwstub.windowHeight=" + CallbackBridge.windowHeight,
                 "-Dglfwstub.initEgl=false",
 
+                "-Dext.net.resolvPath=" +new File(Tools.DIR_DATA,"resolv.conf").getAbsolutePath(),
+
                 "-Dnet.minecraft.clientmodname=" + Tools.APP_NAME,
                 "-Dfml.earlyprogresswindow=false" //Forge 1.14+ workaround
         };

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLView.java
Patch:
@@ -15,5 +15,6 @@ public MinecraftGLView(Context context, AttributeSet attributeSet) {
         //Fixes freeform and dex mode having transparent glass,
         //since it forces android to used the background color of the view/layout behind it.
         setOpaque(false);
+        setFocusable(true);
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -66,7 +66,7 @@ public ControlData findControlData(int keycode) {
     }
 	
 	public void save(String path) throws IOException {
-		//Current version is the V2 so the version as to be marked as 2 !
+		//Current version is the V2.3 so the version as to be marked as 3 !
 		version = 3;
 
 		Tools.write(path, Tools.GLOBAL_GSON.toJson(this));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/LayoutConverter.java
Patch:
@@ -121,7 +121,6 @@ public static CustomControls convertV1Layout(JSONObject oldLayoutJson) throws JS
             if(button.getBoolean("holdAlt")) { keycodes[next_idx] = LWJGLGLFWKeycode.GLFW_KEY_LEFT_ALT; next_idx++; }
             keycodes[next_idx] = button.getInt("keycode");
             n_button.keycodes = keycodes;
-            n_button.update();
             empty.mControlDataList.add(n_button);
         }
         empty.scaledAt = (float)oldLayoutJson.getDouble("scaledAt");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -117,9 +117,11 @@ public boolean switchKeyboardState(){
      * Clear the EditText from any leftover inputs
      * It does not affect the in-game input
      */
+    @SuppressLint("SetTextI18n")
     public void clear(){
         isDoingInternalChanges = true;
-        setText("          ");
+        //Braille space, doesn't trigger keyboard auto-complete
+        setText("\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800");
         setSelection(5);
     }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -248,7 +248,7 @@ public static void setJavaEnvironment(LoggableActivity ctx) throws Throwable {
                 //fallback to 2 since it's the minimum for the entire app
                 envMap.put("LIBGL_ES","2");
             } else if (LOCAL_RENDERER.startsWith("opengles")) {
-                envMap.put("LIBGL_ES", LOCAL_RENDERER.replace("opengles", "").replace("_5", ""));
+                envMap.put("LIBGL_ES", Character.toString(LOCAL_RENDERER.charAt(8));
             } else {
                 // TODO if can: other backends such as Vulkan.
                 // Sure, they should provide GLES 3 support.

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -45,6 +45,7 @@ public static void checkJavaArchitecture(LoggableActivity act, String jreArch) {
     }
     
     public static String findInLdLibPath(String libName) {
+        if(Os.getenv("LD_LIBRARY_PATH")==null) return libName;
         for (String libPath : Os.getenv("LD_LIBRARY_PATH").split(":")) {
             File f = new File(libPath, libName);
             if (f.exists() && f.isFile()) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -82,7 +82,7 @@ public static void initContextConstants(Context ctx){
         if(Build.VERSION.SDK_INT >= 29) {
             DIR_GAME_HOME = ctx.getFilesDir().getAbsolutePath();
         }else{
-            DIR_GAME_HOME = Environment.getExternalStorageDirectory().getAbsolutePath();
+            DIR_GAME_HOME = new File(Environment.getExternalStorageDirectory(),"games/PojavLauncher").getAbsolutePath();
         }
         DIR_GAME_NEW = DIR_GAME_HOME + "/.minecraft";
         DIR_HOME_VERSION = DIR_GAME_NEW + "/versions";

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Architecture.java
Patch:
@@ -78,7 +78,7 @@ public static boolean isArmDevice(){
 	public static int archAsInt(String arch){
 		arch = arch.toLowerCase().trim().replace(" ", "");
 		if(arch.contains("arm64") || arch.equals("aarch64")) return ARCH_ARM64;
-		if(arch.contains("arm")) return ARCH_ARM;
+		if(arch.contains("arm") || arch.equals("aarch32")) return ARCH_ARM;
 		if(arch.contains("x86_64") || arch.contains("amd64")) return ARCH_X86_64;
 		if(arch.contains("x86") || (arch.startsWith("i") && arch.endsWith("86"))) return ARCH_X86;
 		//Shouldn't happen

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -107,7 +107,7 @@ public boolean switchKeyboardState(){
         }else{
             InputMethodManager imm = (InputMethodManager) getContext().getSystemService(INPUT_METHOD_SERVICE);
             enable();
-            postDelayed(() -> imm.showSoftInput(this, InputMethodManager.SHOW_IMPLICIT), 200);
+            imm.showSoftInput(this, InputMethodManager.SHOW_IMPLICIT);
             return true;
         }
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -63,7 +63,7 @@ public void onClick(View view) {
                     for(int keycode : button.getProperties().keycodes){
                         switch (keycode) {
                             case ControlData.SPECIALBTN_KEYBOARD:
-                                switchKeyboardState();
+                                touchCharInput.switchKeyboardState();
                                 break;
 
                             case ControlData.SPECIALBTN_TOGGLECTRL:
@@ -194,7 +194,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         if (requestCode == 1 && resultCode == Activity.RESULT_OK) {
             // Reload PREF_DEFAULTCTRL_PATH
-            LauncherPreferences.loadPreferences();
+            LauncherPreferences.loadPreferences(getApplicationContext());
             try {
                 mControlLayout.loadLayout(LauncherPreferences.PREF_DEFAULTCTRL_PATH);
             } catch (IOException e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLView.java
Patch:
@@ -12,7 +12,8 @@ public MinecraftGLView(Context context) {
 
     public MinecraftGLView(Context context, AttributeSet attributeSet) {
         super(context, attributeSet);
+        //Fixes freeform and dex mode having transparent glass,
+        //since it forces android to used the background color of the view/layout behind it.
+        setOpaque(false);
     }
-
-    
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/LocaleUtils.java
Patch:
@@ -16,7 +16,7 @@ public class LocaleUtils {
     public static Context setLocale(Context context) {
         if (LauncherPreferences.DEFAULT_PREF == null) {
             LauncherPreferences.DEFAULT_PREF = PreferenceManager.getDefaultSharedPreferences(context);
-			LauncherPreferences.loadPreferences();
+			LauncherPreferences.loadPreferences(context);
         }
         
         Locale locale;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -260,7 +260,7 @@ public boolean onTouch(View v, MotionEvent ev) {
 
 		//Check if the action is cancelling, reset the lastControl button associated to the view
 		if(ev.getActionMasked() == MotionEvent.ACTION_UP || ev.getActionMasked() == MotionEvent.ACTION_CANCEL){
-			if(lastControlButton != null) lastControlButton.sendKeyPresses(false);
+			if(lastControlButton != null) lastControlButton.sendKeyPresses(ev,false);
 			mapTable.put(v, null);
 			return true;
 		}
@@ -276,7 +276,7 @@ public boolean onTouch(View v, MotionEvent ev) {
 		}
 
 		//Release last keys
-		if (lastControlButton != null) lastControlButton.sendKeyPresses(false);
+		if (lastControlButton != null) lastControlButton.sendKeyPresses(ev,false);
 		mapTable.put(v, null);
 
 		//Look for another SWIPEABLE button
@@ -288,7 +288,7 @@ public boolean onTouch(View v, MotionEvent ev) {
 
 				//Press the new key
 				if(!button.equals(lastControlButton)){
-					button.sendKeyPresses(true);
+					button.sendKeyPresses(ev,true);
 
 					mapTable.put(v, button);
 				}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -41,7 +41,7 @@ public static void loadPreferences(Context ctx) {
 		PREF_VERTYPE_SNAPSHOT = DEFAULT_PREF.getBoolean("vertype_snapshot", false);
 		PREF_VERTYPE_OLDALPHA = DEFAULT_PREF.getBoolean("vertype_oldalpha", false);
 		PREF_VERTYPE_OLDBETA = DEFAULT_PREF.getBoolean("vertype_oldbeta", false);
-		PREF_LONGPRESS_TRIGGER = DEFAULT_PREF.getInt("timeLongPressTrigger", 500);
+		PREF_LONGPRESS_TRIGGER = DEFAULT_PREF.getInt("timeLongPressTrigger", 300);
 		PREF_DEFAULTCTRL_PATH = DEFAULT_PREF.getString("defaultCtrl", Tools.CTRLDEF_FILE);
         PREF_LANGUAGE = DEFAULT_PREF.getString("language", "default");
         PREF_CHECK_LIBRARY_SHA = DEFAULT_PREF.getBoolean("checkLibraries",true);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -194,7 +194,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         if (requestCode == 1 && resultCode == Activity.RESULT_OK) {
             // Reload PREF_DEFAULTCTRL_PATH
-            LauncherPreferences.loadPreferences();
+            LauncherPreferences.loadPreferences(getApplicationContext());
             try {
                 mControlLayout.loadLayout(LauncherPreferences.PREF_DEFAULTCTRL_PATH);
             } catch (IOException e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -346,7 +346,7 @@ private void initMain() throws Throwable {
                     mLockSelectJRE.wait();
                 }
             }
-            LauncherPreferences.loadPreferences();
+            LauncherPreferences.loadPreferences(getApplicationContext());
         }
         catch(Throwable e){
             Tools.showError(this, e);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/LocaleUtils.java
Patch:
@@ -16,7 +16,7 @@ public class LocaleUtils {
     public static Context setLocale(Context context) {
         if (LauncherPreferences.DEFAULT_PREF == null) {
             LauncherPreferences.DEFAULT_PREF = PreferenceManager.getDefaultSharedPreferences(context);
-			LauncherPreferences.loadPreferences();
+			LauncherPreferences.loadPreferences(context);
         }
         
         Locale locale;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLView.java
Patch:
@@ -12,6 +12,9 @@ public MinecraftGLView(Context context) {
 
     public MinecraftGLView(Context context, AttributeSet attributeSet) {
         super(context, attributeSet);
+        //Fixes freeform and dex mode having transparent glass,
+        //since it forces android to used the background color of the view/layout behind it.
+        setOpaque(false);
     }
 
     

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Architecture.java
Patch:
@@ -79,10 +79,10 @@ public static boolean isArmDevice(){
 	 */
 	public static int archAsInt(String arch){
 		arch = arch.toLowerCase().trim().replace(" ", "");
-		if(arch.contains("arm64") || arch.equals("aarch64") || arch.equals("adm64")) return ARCH_ARM64;
+		if(arch.contains("arm64") || arch.equals("aarch64")) return ARCH_ARM64;
 		if(arch.contains("arm")) return ARCH_ARM;
-		if(arch.equals("x86_64")) return ARCH_X86_64;
-		if(arch.equals("x86") || (arch.startsWith("i") && arch.endsWith("86"))) return ARCH_X86;
+		if(arch.equals("x86_64") || arch.equals("amd64")) return ARCH_X86_64;
+		if(arch.contains("x86") || (arch.startsWith("i") && arch.endsWith("86"))) return ARCH_X86;
 		//Shouldn't happen
 		return UNSUPPORTED_ARCH;
 	}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -1,5 +1,7 @@
 package net.kdt.pojavlaunch;
 
+import static net.kdt.pojavlaunch.Architecture.ARCH_X86;
+
 import android.app.*;
 import android.content.*;
 import android.content.pm.PackageManager;
@@ -763,7 +765,7 @@ private void checkLWJGL3Installed() {
     }
 
     private void checkVulkanZinkIsSupported() {
-        if (Tools.CURRENT_ARCHITECTURE.equals("x86")
+        if (Tools.CURRENT_ARCHITECTURE == ARCH_X86
          || Build.VERSION.SDK_INT < 25
          || !getPackageManager().hasSystemFeature(PackageManager.FEATURE_VULKAN_HARDWARE_LEVEL)
          || !getPackageManager().hasSystemFeature(PackageManager.FEATURE_VULKAN_HARDWARE_VERSION)) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -110,7 +110,7 @@ public void initLocalUi() {
             LinearLayout startScr = new LinearLayout(PojavLoginActivity.this);
             LayoutInflater.from(PojavLoginActivity.this).inflate(R.layout.start_screen,startScr);
             PojavLoginActivity.this.setContentView(startScr);
-            
+
             progress = (ProgressBar) findViewById(R.id.startscreenProgress);
             if(isStarting) progress.setVisibility(View.VISIBLE);
             startupTextView = (TextView) findViewById(R.id.startscreen_text);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -372,7 +372,7 @@ public static ArrayList<String> parseJavaArguments(String args){
 
                 //Check if two args aren't bundled together by mistake
                 if(parsedSubString.indexOf('=') == parsedSubString.lastIndexOf('='))
-                    parsedArguments.add(args.substring(start,end));
+                    parsedArguments.add(parsedSubString);
                 else Log.w("JAVA ARGS PARSER", "Removed improper arguments: " + parsedSubString);
             }
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -398,7 +398,7 @@ public boolean onTouch(View p1, MotionEvent e) {
                             }
 
                             if (CallbackBridge.isGrabbing()) {
-                                if (!triggeredLeftMouseButton && Math.abs(initialX - mouse_x) < fingerStillThreshold && Math.abs(initialY - mouse_y) < fingerStillThreshold) {
+                                if (!isTouchInHotbar && !triggeredLeftMouseButton && Math.abs(initialX - mouse_x) < fingerStillThreshold && Math.abs(initialY - mouse_y) < fingerStillThreshold) {
                                     if (!LauncherPreferences.PREF_DISABLE_GESTURES) {
                                         sendMouseButton(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_RIGHT, true);
                                         sendMouseButton(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_RIGHT, false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -271,12 +271,14 @@ public static int launchJavaVM(final LoggableActivity ctx, final List<String> ar
                     graphicsLib = "libgl4es_114.so";
                     break;
                 case "opengles2_5":
-                case "opengles3":
                     graphicsLib = "libgl4es_115.so";
                     break;
                 case "vulkan_zink":
                     graphicsLib = "libOSMesa_8.so";
                     break;
+                case "opengles3_vgpu":
+                    graphicsLib = "libvgpu.so";
+                    break;
                 default:
                     throw new RuntimeException("Undefined renderer: " + Tools.LOCAL_RENDERER);
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -50,7 +50,9 @@ protected void onTextChanged(CharSequence text, int start, int lengthBefore, int
             }
         }else{
             for(int i=lengthBefore, index=lengthBefore+start; i < lengthAfter; ++i){
-                CallbackBridge.sendChar(text.charAt(index));
+                //I didn't know F25 existed before that. I just need a full fat keycode for mc 1.13+
+                CallbackBridge.sendKeycode(LWJGLGLFWKeycode.GLFW_KEY_F25, text.charAt(index), 0, 0, true);
+                index ++;
             }
         }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/TouchCharInput.java
Patch:
@@ -132,6 +132,8 @@ public void disable(){
     private void setup(){
         setOnEditorActionListener((textView, i, keyEvent) -> {
             sendEnter();
+            clear();
+            disable();
             return false;
         });
         clear();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -627,7 +627,7 @@ public boolean dispatchKeyEvent(KeyEvent event) {
         if(event.getRepeatCount() != 0 || event.getAction() == KeyEvent.ACTION_MULTIPLE || event.getKeyCode() == KeyEvent.KEYCODE_UNKNOWN || (event.getFlags() & KeyEvent.FLAG_FALLBACK) == KeyEvent.FLAG_FALLBACK) return true;
 
         //Sometimes, key events may come from the mouse
-        if((event.getDevice().getSources() & InputDevice.SOURCE_MOUSE_RELATIVE) == InputDevice.SOURCE_MOUSE_RELATIVE){
+        if(event.getDevice() != null && (event.getDevice().getSources() & InputDevice.SOURCE_MOUSE_RELATIVE) == InputDevice.SOURCE_MOUSE_RELATIVE){
             if(event.getKeyCode() == KeyEvent.KEYCODE_BACK){
                 sendMouseButton(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_RIGHT, event.getAction() == KeyEvent.ACTION_DOWN);
                 return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -348,7 +348,7 @@ public boolean onTouch(View p1, MotionEvent e) {
 
                     switch (e.getActionMasked()) {
                         case MotionEvent.ACTION_DOWN: // 0
-                            shouldBeDown = true;
+                            //shouldBeDown = true;
                             CallbackBridge.sendPrepareGrabInitialPos();
 
                             currentPointerID = e.getPointerId(0);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -16,7 +16,6 @@ public class LauncherPreferences
 	public static boolean PREF_FREEFORM = false;
 	public static boolean PREF_HIDE_SIDEBAR = false;
 	public static boolean PREF_IGNORE_NOTCH = false;
-	public static boolean PREF_BACK_TO_RIGHT_MOUSE = false;
 	public static int PREF_NOTCH_SIZE = 0;
 	public static float PREF_BUTTONSIZE = 100f;
 	public static float PREF_MOUSESCALE = 100f;
@@ -40,7 +39,6 @@ public static void loadPreferences() {
 		PREF_FREEFORM = DEFAULT_PREF.getBoolean("freeform", false);
 		PREF_HIDE_SIDEBAR = DEFAULT_PREF.getBoolean("hideSidebar", false);
 		PREF_IGNORE_NOTCH = DEFAULT_PREF.getBoolean("ignoreNotch", false);
-		PREF_BACK_TO_RIGHT_MOUSE = DEFAULT_PREF.getBoolean("backToRightMouse", false);
 		PREF_VERTYPE_RELEASE = DEFAULT_PREF.getBoolean("vertype_release", true);
 		PREF_VERTYPE_SNAPSHOT = DEFAULT_PREF.getBoolean("vertype_snapshot", false);
 		PREF_VERTYPE_OLDALPHA = DEFAULT_PREF.getBoolean("vertype_oldalpha", false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -191,8 +191,11 @@ public void removeControlSubButton(ControlSubButton subButton){
 		subButton.parentDrawer.drawerData.buttonProperties.remove(subButton.getProperties());
 		subButton.parentDrawer.buttons.remove(subButton);
 
+		subButton.parentDrawer.syncButtons();
+
 		subButton.setVisibility(GONE);
 		removeView(subButton);
+
 	}
 
 	public void saveLayout(String path) throws Exception {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlDrawer.java
Patch:
@@ -96,7 +96,7 @@ private void resizeButtons(){
         }
     }
 
-    private void syncButtons(){
+    public void syncButtons(){
         alignButtons();
         resizeButtons();
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlDrawer.java
Patch:
@@ -21,7 +21,7 @@ public class ControlDrawer extends ControlButton {
     public ArrayList<ControlSubButton> buttons;
     public ControlDrawerData drawerData;
     public ControlLayout mLayout;
-    public boolean areButtonsVisible = false;
+    public boolean areButtonsVisible;
 
 
     public ControlDrawer(ControlLayout layout, ControlDrawerData drawerData) {
@@ -30,6 +30,7 @@ public ControlDrawer(ControlLayout layout, ControlDrawerData drawerData) {
         buttons = new ArrayList<>(drawerData.buttonProperties.size());
         mLayout = layout;
         this.drawerData = drawerData;
+        areButtonsVisible = layout.getModifiable();
     }
 
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/EfficientAndroidLWJGLKeycode.java
Patch:
@@ -13,12 +13,13 @@ public class EfficientAndroidLWJGLKeycode {
     //This old version of this class was using an ArrayMap, a generic Key -> Value data structure.
     //The key being the android keycode from a KeyEvent
     //The value its LWJGL equivalent.
-    private static final int KEYCODE_COUNT = 102;
+    private static final int KEYCODE_COUNT = 103;
     private static final int[] androidKeycodes = new int[KEYCODE_COUNT];
     private static final short[] LWJGLKeycodes = new short[KEYCODE_COUNT];
     private static String[] androidKeyNameArray; /* = new String[androidKeycodes.length]; */
 
     static {
+
         /*  BINARY SEARCH IS PERFORMED ON THE androidKeycodes ARRAY !
             WHEN ADDING A MAPPING, ADD IT SO THE androidKeycodes ARRAY STAYS SORTED ! */
         // Mapping Android Keycodes to LWJGL Keycodes
@@ -77,6 +78,7 @@ public class EfficientAndroidLWJGLKeycode {
 
 
         add(KeyEvent.KEYCODE_COMMA, LWJGLGLFWKeycode.GLFW_KEY_COMMA);
+        add(KeyEvent.KEYCODE_PERIOD, LWJGLGLFWKeycode.GLFW_KEY_PERIOD);
 
         // Alt keys
         add(KeyEvent.KEYCODE_ALT_LEFT, LWJGLGLFWKeycode.GLFW_KEY_LEFT_ALT);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -153,6 +153,7 @@ public void onClick(DialogInterface p1, int p2) {
 						if(ctx instanceof MainActivity) {
 							((MainActivity) ctx).leaveCustomControls();
 						}else{
+							((CustomControlsActivity) ctx).isModified = false;
 							((Activity)ctx).onBackPressed();
 						}
 		//			    setResult(Activity.RESULT_OK, new Intent());

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -629,7 +629,7 @@ public boolean dispatchKeyEvent(KeyEvent event) {
 
         int index = EfficientAndroidLWJGLKeycode.getIndexByKey(event.getKeyCode());
         if(index >= 0) {
-            Toast.makeText(this,"THIS IS A KEYBOARD EVENT !", Toast.LENGTH_SHORT).show();
+            //Toast.makeText(this,"THIS IS A KEYBOARD EVENT !", Toast.LENGTH_SHORT).show();
             EfficientAndroidLWJGLKeycode.execKey(event, index);
             return true;
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -418,8 +418,8 @@ public boolean onTouch(View p1, MotionEvent e) {
                                     if(pointerIndex == -1){
                                         currentPointerID = e.getPointerId(0);
                                     }else{
-                                        mouse_x += (e.getX(currentPointerID) - prevX) * sensitivityFactor;
-                                        mouse_y += (e.getY(currentPointerID) - prevY) * sensitivityFactor;
+                                        mouse_x += (e.getX(pointerIndex) - prevX) * sensitivityFactor;
+                                        mouse_y += (e.getY(pointerIndex) - prevY) * sensitivityFactor;
                                     }
                                     prevX = e.getX();
                                     prevY = e.getY();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlSubButton.java
Patch:
@@ -36,7 +36,7 @@ private void filterProperties(){
 
     @Override
     public void setVisible(boolean isVisible) {
-        setVisibility(isVisible ? (parentDrawer.areButtonsVisible ? VISIBLE : GONE) : View.GONE);
+        setVisibility(isVisible ? (parentDrawer.areButtonsVisible ? VISIBLE : GONE) : (!mProperties.isHideable && parentDrawer.getVisibility() == GONE) ? VISIBLE : View.GONE);
     }
 
     @Override

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlButton.java
Patch:
@@ -218,10 +218,10 @@ protected void onDraw(Canvas canvas) {
 
     @Override
     public boolean onLongClick(View v) {
-
-        if(mHandleView == null) mHandleView = new SelectionEndHandleView(this);
-
         if (mCanTriggerLongClick && mModifiable) {
+            //Instantiate on need only
+            if(mHandleView == null) mHandleView = new SelectionEndHandleView(this);
+
             if (mHandleView.isShowing()) {
                 mHandleView.hide();
             } else {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -32,7 +32,8 @@ public ControlLayout(Context ctx, AttributeSet attrs) {
 
 	public void hideAllHandleViews() {
 		for(ControlButton button : getButtonChildren()){
-			button.getHandleView().hide();
+			HandleView hv = button.getHandleView();
+			if(hv != null) hv.hide();
 		}
 	}
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/buttons/ControlDrawer.java
Patch:
@@ -33,7 +33,7 @@ public ControlDrawer(ControlLayout layout, ControlDrawerData drawerData) {
 
 
         //Filter unwanted values before instantiating the button
-        for(int i=0; i < buttons.size(); ++i){
+        for(int i=0; i < drawerData.buttonProperties.size(); ++i){
             drawerData.buttonProperties.set(i, filterProperties(drawerData.buttonProperties.get(i)));
 
             addButton(drawerData.buttonProperties.get(i));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -335,7 +335,7 @@ public boolean onTouch(View p1, MotionEvent e) {
                     }
 
                     int hudKeyHandled = handleGuiBar((int)e.getX(), (int)e.getY());
-                    if (!CallbackBridge.isGrabbing() && gestureDetector.onTouchEvent(e)){
+                    if (!CallbackBridge.isGrabbing() && gestureDetector.onTouchEvent(e) && hudKeyHandled == -1){
                         CallbackBridge.putMouseEventWithCoords(rightOverride ? (byte) 1 : (byte) 0, mouse_x, mouse_y);
                         if (!rightOverride) CallbackBridge.mouseLeft = true;
                         return true;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/gamepad/GamepadJoystick.java
Patch:
@@ -27,8 +27,9 @@ public GamepadJoystick(int horizontalAxis, int verticalAxis, InputDevice device)
         this.verticalAxis = verticalAxis;
         this.horizontalAxis = horizontalAxis;
 
-        deadzone = Math.max(device.getMotionRange(verticalAxis).getFlat(),
-                            device.getMotionRange(horizontalAxis).getFlat()) * 2f;
+        //Some controllers aren't recognized as such by android, so we fallback to a default value of 0.2
+        deadzone = device != null ? Math.max(device.getMotionRange(verticalAxis).getFlat(),
+                            device.getMotionRange(horizontalAxis).getFlat()) * 2f : 0.2f;
 
         if(deadzone < 0.15) deadzone = 0.15f;
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/gamepad/Gamepad.java
Patch:
@@ -80,7 +80,7 @@ public void run() {
 
                         delta--;
                         try {
-                            sleep((long) ((1 - delta)/ticks));
+                            sleep(Math.max((long) ((1 - delta)/ticks), 0));
                         } catch (InterruptedException e) {
                             e.printStackTrace();
                         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/gamepad/Gamepad.java
Patch:
@@ -128,6 +128,7 @@ private void updateGrabbingState() {
                 //TODO place the cursor at the center
                 currentMap = menuMap;
                 gameMap.resetPressedState();
+                sendDirectionalKeycode(currentJoystickDirection, false, gameMap); // removing what we were doing
 
                 gameActivity.mouse_x = CallbackBridge.windowWidth/2;
                 gameActivity.mouse_y = CallbackBridge.windowHeight/2;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/gamepad/GamepadButton.java
Patch:
@@ -35,6 +35,7 @@ public void update(boolean isKeyDown){
     public void resetButtonState(){
         isDown = false;
         toggled = false;
+        Gamepad.sendInput(keycodes, false);
     }
     public boolean isDown(){
         return isToggleable ? toggled : isDown;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/gamepad/GamepadButton.java
Patch:
@@ -34,6 +34,7 @@ public void update(boolean isKeyDown){
 
     public void resetButtonState(){
         isDown = false;
+        toggled = false;
     }
     public boolean isDown(){
         return isToggleable ? toggled : isDown;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -231,6 +231,7 @@ public void toggleControlVisible() {
 
 			if(view instanceof ControlSubButton){
 				view.setVisibility(mControlVisible ? (((ControlSubButton)view).parentDrawer.areButtonsVisible ? VISIBLE : GONE) : View.GONE);
+				continue;
 			}
 
 			if(view instanceof ControlDrawer){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlDrawerData.java
Patch:
@@ -1,5 +1,7 @@
 package net.kdt.pojavlaunch.customcontrols;
 
+import net.kdt.pojavlaunch.Tools;
+
 import java.util.ArrayList;
 
 import static net.kdt.pojavlaunch.customcontrols.ControlDrawerData.Orientation.DOWN;
@@ -57,7 +59,7 @@ public ControlDrawerData(){
     }
 
     public ControlDrawerData(ArrayList<ControlData> buttonProperties){
-        this(buttonProperties, new ControlData());
+        this(buttonProperties, new ControlData("Drawer", new int[] {}, Tools.currentDisplayMetrics.widthPixels/2, Tools.currentDisplayMetrics.heightPixels/2));
     }
 
     public ControlDrawerData(ArrayList<ControlData> buttonProperties, ControlData properties){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlSubButton.java
Patch:
@@ -13,7 +13,8 @@ public ControlSubButton(ControlLayout layout, ControlData properties, ControlDra
         this.parentDrawer = parentDrawer;
 
         //Delayed to let the button inflate first
-        new Handler(Looper.getMainLooper()).postDelayed(() -> setVisibility(parentDrawer.areButtonsVisible ? VISIBLE : GONE), 0);
+        if(!layout.getModifiable())
+            new Handler(Looper.getMainLooper()).postDelayed(() -> setVisibility(parentDrawer.areButtonsVisible ? VISIBLE : GONE), 0);
 
         filterProperties();
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -263,7 +263,7 @@ public boolean onTouchEvent(MotionEvent event) {
 
     private void sendKeyPresses(MotionEvent event, boolean isDown){
         for(int keycode : mProperties.keycodes){
-            if(keycode > 0){
+            if(keycode >= 0){
                 MainActivity.sendKeyPress(keycode, CallbackBridge.getCurrentMods(), isDown);
             }else {
                 super.onTouchEvent(event);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -209,6 +209,9 @@ public static void setJavaEnvironment(LoggableActivity ctx) throws Throwable {
         
         // Fix white color on banner and sheep, since GL4ES 1.1.5
         envMap.put("LIBGL_NORMALIZE", "1");
+        
+        // HACK: fixes the vbo crashes on older versions by force disabling it
+        envMap.put("LIBGL_USEVBO", "0");
    
         envMap.put("MESA_GLSL_CACHE_DIR", ctx.getCacheDir().getAbsolutePath());
         envMap.put("MESA_GL_VERSION_OVERRIDE", "4.6");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -66,14 +66,14 @@ public void uncaughtException(Thread thread, Throwable th) {
 			switch (Tools.CURRENT_ARCHITECTURE) {
                 case "arm": Tools.CURRENT_ARCHITECTURE = "arm/aarch32"; break;
                 case "arm64": Tools.CURRENT_ARCHITECTURE = "arm64/aarch64"; break;
-                case "x86": Tools.CURRENT_ARCHITECTURE = "x86/i*86"; break;
+                case "x86": Tools.CURRENT_ARCHITECTURE = "x86/i386"; break;
                 case "x86_64": Tools.CURRENT_ARCHITECTURE = "x86_64/amd64"; break;
             }
             
             // Special case for Asus x86 devixes
             if (Build.SUPPORTED_ABIS[0].equals("x86")) {
                 getApplicationInfo().nativeLibraryDir = nativeLibDir.getParent() + "/x86";
-                Tools.CURRENT_ARCHITECTURE = "x86/i*86";
+                Tools.CURRENT_ARCHITECTURE = "x86/i386";
             }
 
 			FontChanger.initFonts(this);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -139,6 +139,7 @@ protected void initLayout(int resId) {
             mVersionInfo = Tools.getVersionInfo(null,mProfile.selectedVersion);
             
             setTitle("Minecraft " + mProfile.selectedVersion);
+            PerVersionConfig.update();
             PerVersionConfig.VersionConfig cfg = PerVersionConfig.configMap.get(mProfile.selectedVersion);
             String runtime = LauncherPreferences.PREF_DEFAULT_RUNTIME;
             if(cfg != null) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -410,7 +410,7 @@ private boolean installRuntimeAutomatically(AssetManager am, boolean otherRuntim
         }
         if(current_rt_version == null && otherRuntimesAvailable) return true; //Assume user maintains his own runtime
         if(rt_version == null) return false;
-        if(!current_rt_version.equals(rt_version)) { //If we already have an integrated one installed, check if it's up-to-date
+        if(!rt_version.equals(current_rt_version)) { //If we already have an integrated one installed, check if it's up-to-date
             try {
                 MultiRTUtils.installRuntimeNamedBinpack(am.open("components/jre/universal.tar.xz"), am.open("components/jre/bin-" + Tools.CURRENT_ARCHITECTURE.split("/")[0] + ".tar.xz"), "Internal", rt_version,
                         (resid, vararg) -> {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -143,7 +143,7 @@ public static void getCacioJavaArgs(List<String> javaArgList, boolean isHeadless
         javaArgList.add("-Djava.awt.graphicsenv=net.java.openjdk.cacio.ctc.CTCGraphicsEnvironment");
 
         StringBuilder cacioClasspath = new StringBuilder();
-        cacioClasspath.append("-Xbootclasspath/a");
+        cacioClasspath.append("-Xbootclasspath/p");
         File cacioDir = new File(DIR_GAME_HOME + "/caciocavallo");
         if (cacioDir.exists() && cacioDir.isDirectory()) {
             for (File file : cacioDir.listFiles()) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -54,8 +54,8 @@ public void uncaughtException(Thread thread, Throwable th) {
 			super.onCreate();
 			Tools.APP_NAME = getResources().getString(R.string.app_short_name);
 			
-			Tools.DIR_DATA = getDir("files", MODE_PRIVATE).getParent().replace("/data/user/0", "/data/data");
-            Tools.DIR_HOME_JRE = Tools.DIR_DATA + "/jre_runtime";
+			Tools.DIR_DATA = getDir("files", MODE_PRIVATE).getParent();
+            Tools.DIR_HOME_JRE = Tools.DIR_DATA + "/jre_runtime".replace("/data/user/0", "/data/data");
             Tools.DIR_ACCOUNT_OLD = Tools.DIR_DATA + "/Users";
             Tools.DIR_ACCOUNT_NEW = Tools.DIR_DATA + "/accounts";
             // Tools.FILE_ACCOUNT_JSON = getFilesDir().getAbsolutePath() + "/account_profiles.json";

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -54,7 +54,7 @@ public void uncaughtException(Thread thread, Throwable th) {
 			super.onCreate();
 			Tools.APP_NAME = getResources().getString(R.string.app_short_name);
 			
-			Tools.DIR_DATA = getDir("files", MODE_PRIVATE).getParent();
+			Tools.DIR_DATA = getDir("files", MODE_PRIVATE).getParent().replace("/data/user/0", "/data/data");
             Tools.DIR_HOME_JRE = Tools.DIR_DATA + "/jre_runtime";
             Tools.DIR_ACCOUNT_OLD = Tools.DIR_DATA + "/Users";
             Tools.DIR_ACCOUNT_NEW = Tools.DIR_DATA + "/accounts";

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -690,8 +690,8 @@ public void onSurfaceTextureAvailable(SurfaceTexture texture, int width, int hei
 
                         //Load Minecraft options:
                         MCOptionUtils.load();
-                        MCOptionUtils.set("overrideWidth", ""+CallbackBridge.windowWidth);
-                        MCOptionUtils.set("overrideHeight", ""+CallbackBridge.windowHeight);
+                        MCOptionUtils.set("overrideWidth", String.valueOf(CallbackBridge.windowWidth));
+                        MCOptionUtils.set("overrideHeight", String.valueOf(CallbackBridge.windowHeight));
                         MCOptionUtils.save();
                         getMcScale();
                         // Should we do that?

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -84,9 +84,9 @@ public static void loadPreferences() {
 
         switch (PREF_RENDERER) {
             case "opengles2":
-            case "opengles2_5":
                 PREF_CUSTOM_OPENGL_LIBNAME = "libgl4es_114.so";
                 break;
+            case "opengles2_5":
             case "opengles3":
                 PREF_CUSTOM_OPENGL_LIBNAME = "libgl4es_115.so";
                 break;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/FatalErrorActivity.java
Patch:
@@ -7,7 +7,7 @@
 import android.util.*;
 import androidx.appcompat.app.AlertDialog;
 
-public class FatalErrorActivity extends BaseActivity
+public class FatalErrorActivity extends AppCompatActivity
 {
 	public static void showError(Context ctx, String savePath, boolean storageAllow, /* boolean isFatalErr, */ Throwable th) {
 		Intent ferrorIntent = new Intent(ctx, FatalErrorActivity.class);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -34,7 +34,8 @@ public void uncaughtException(Thread thread, Throwable th) {
 					crashStream.append(" - Time: " + DateFormat.getDateTimeInstance().format(new Date()) + "\n");
 					crashStream.append(" - Device: " + Build.PRODUCT + " " + Build.MODEL + "\n");
 					crashStream.append(" - Android version: " + Build.VERSION.RELEASE + "\n");
-					crashStream.append(" - Crash stack trace:\n");
+                    crashStream.append(" - Crash stack trace:\n");
+                    crashStream.append(" - Launcher version: " + BuildConfig.VERSION_NAME + "\n");
 					crashStream.append(Log.getStackTraceString(th));
 					crashStream.close();
 				} catch (Throwable th2) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -173,7 +173,7 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
         // javaArgList.add("-Dorg.lwjgl.libname=liblwjgl3.so");
         // javaArgList.add("-Dorg.lwjgl.system.jemalloc.libname=libjemalloc.so");
        
-        overrideableArgList.add("-Dorg.lwjgl.opengl.libname=libgl4es_114.so");
+        overrideableArgList.add("-Dorg.lwjgl.opengl.libname=" + LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME);
         // overrideableArgList.add("-Dorg.lwjgl.opengl.libname=libgl4es_115.so");
         
         // javaArgList.add("-Dorg.lwjgl.opengl.libname=libRegal.so");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -44,8 +44,8 @@ public void onCreatePreferences(Bundle b, String str) {
 
 	    CustomSeekBarPreference seek6 = (CustomSeekBarPreference) findPreference("mousespeed");
         seek6.setMin(25);
-        seek6.setValue((int)(LauncherPreferences.PREF_MOUSESPEED*100f));
         seek6.setMax(300);
+	  seek6.setValue((int)(LauncherPreferences.PREF_MOUSESPEED*100f));
         seek6.setSuffix(" %");
 
         int freeMem = (int) (Runtime.getRuntime().freeMemory() / 1048576l);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -177,9 +177,9 @@ public void run() {
         Log.i("jrelog-logcat","Logcat thread started");
     }
     
-    public static void relocateLibPath(final LoggableActivity ctx) throws Exception {
+    public static void relocateLibPath(final Context ctx) throws Exception {
         if (JRE_ARCHITECTURE == null) {
-            JRE_ARCHITECTURE = ctx.jreReleaseList.get("OS_ARCH");
+            JRE_ARCHITECTURE = readJREReleaseProperties().get("OS_ARCH");
             if (JRE_ARCHITECTURE.startsWith("i") && JRE_ARCHITECTURE.endsWith("86") && Tools.CURRENT_ARCHITECTURE.contains("x86") && !Tools.CURRENT_ARCHITECTURE.contains("64")) {
                 JRE_ARCHITECTURE = "i386/i486/i586";
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -901,8 +901,8 @@ public void onEvent(int event, String file) {
         // appendlnToLog("Info: Custom Java arguments: \"" + LauncherPreferences.PREF_CUSTOM_JAVA_ARGS + "\"");
 
         appendlnToLog("Info: Selected Minecraft version: " + mVersionInfo.id +
-            (mVersionInfo.inheritsFrom == null || mVersionInfo.inheritsFrom.equals(mVersionInfo.id)) ?
-            "" : " (" + mVersionInfo.inheritsFrom + ")");
+            ((mVersionInfo.inheritsFrom == null || mVersionInfo.inheritsFrom.equals(mVersionInfo.id)) ?
+            "" : " (" + mVersionInfo.inheritsFrom + ")"));
 
         JREUtils.redirectAndPrintJRELog(this, mProfile.accessToken);
         Tools.launchMinecraft(this, mProfile, mProfile.selectedVersion);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -746,7 +746,7 @@ private MinecraftAccount loginOffline() {
         } else if (new File(Tools.DIR_ACCOUNT_NEW + "/" + text + ".json").exists()) {
             edit2.setError(getString(R.string.login_error_exist_username));
         } else if (!edit3.getText().toString().isEmpty()) {
-            edit2.setError(getString(R.string.login_error_offline_password));
+            edit3.setError(getString(R.string.login_error_offline_password));
         } else {
             MinecraftAccount builder = new MinecraftAccount();
             builder.isMicrosoft = false;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -701,9 +701,9 @@ public void onSuccess(MinecraftAccount out) {
                 }
             });
 
+            final int accountIndex_final = accountIndex;
             removeButton.setOnClickListener(new View.OnClickListener() {
                 final String selectedAccName = accountName.getText().toString();
-                final int accountIndex_final = accountIndex;
                 @Override
                 public void onClick(View v) {
                     AlertDialog.Builder builder2 = new AlertDialog.Builder(PojavLoginActivity.this);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -668,7 +668,6 @@ public void loginSavedAcc(View view) {
 
             accountName.setOnClickListener(new View.OnClickListener() {
                 final String selectedAccName = accountName.getText().toString();
-                final int accountIndex_final = accountIndex;
                 @Override
                 public void onClick(View v) {
                     try {
@@ -704,6 +703,7 @@ public void onSuccess(MinecraftAccount out) {
 
             removeButton.setOnClickListener(new View.OnClickListener() {
                 final String selectedAccName = accountName.getText().toString();
+                final int accountIndex_final = accountIndex;
                 @Override
                 public void onClick(View v) {
                     AlertDialog.Builder builder2 = new AlertDialog.Builder(PojavLoginActivity.this);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/MCOptionUtils.java
Patch:
@@ -43,7 +43,7 @@ public static void set(String key, String value) {
     public static String get(String key){
         if (mLineList == null){
             load();
-        }
+        } if (mLineList.size() == 0) return null; // why it empty?
         for (int i = 0; i < mLineList.size(); i++) {
             String line = mLineList.get(i);
             if (line.startsWith(key + ":")) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -48,7 +48,7 @@ public void onCreatePreferences(Bundle b, String str) {
         seek6.setMax(300);
         seek6.setSuffix(" %");
 
-        long freeMem = Runtime.getRuntime().freeMemory() / 1048576;
+        int freeMem = (int) (Runtime.getRuntime().freeMemory() / 1048576l);
 
         CustomSeekBarPreference seek7 = (CustomSeekBarPreference) findPreference("allocation");
         seek7.setMin(256);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -333,7 +333,7 @@ public boolean onTouch(View v, MotionEvent event) {
                                     break;
                                     
                                 case MotionEvent.ACTION_MOVE: // 2
-                                    if (!CallbackBridge.isGrabbing() && e.getPointerCount() == 2 && !LauncherPreferences.PREF_DISABLE_GESTURES) {
+                                    if (!CallbackBridge.isGrabbing() && event.getPointerCount() == 2 && !LauncherPreferences.PREF_DISABLE_GESTURES) {
                                         CallbackBridge.sendScroll(CallbackBridge.mouseX - scrollInitialX, CallbackBridge.mouseY - scrollInitialY);
                                         scrollInitialX = CallbackBridge.mouseX;
                                         scrollInitialY = CallbackBridge.mouseY;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -264,9 +264,7 @@ public static void setJavaEnvironment(LoggableActivity ctx) throws Throwable {
             Os.setenv(env.getKey(), env.getValue(), true);
         }
         
-        if (shell == null) {
-            setLdLibraryPath(LD_LIBRARY_PATH);
-        }
+        setLdLibraryPath(LD_LIBRARY_PATH);
         
         // return ldLibraryPath;
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/Msa.java
Patch:
@@ -286,7 +286,8 @@ private static void throwResponseError(HttpURLConnection conn) throws IOExceptio
         if (errStr.contains("NOT_FOUND") &&
             errStr.contains("The server has not found anything matching the request URI"))
         {
-            otherErrStr = "Can't login a demo account!";
+            // TODO localize this
+            otherErrStr = "Can't login a demo account! Haven't you bought Minecraft: Java Edition on your account? Don't expect that Microsoft/Xbox account will give you free **paid/premium** MC Java account!";
         }
         
         throw new RuntimeException(otherErrStr + "\n\nMSA Error: " + conn.getResponseCode() + ": " + conn.getResponseMessage() + ", error stream:\n" + errStr);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -17,8 +17,8 @@ public void onCreatePreferences(Bundle b, String str) {
 		
         // Disable freeform mode in Android 6.0 and below.
         findPreference("freeform").setVisible(Build.VERSION.SDK_INT >= 24);
-        //Disable notch checking behavior on android 8.0 and below.
-        findPreference("ignoreNotch").setVisible(Build.VERSION.SDK_INT >= 29);
+        //Disable notch checking behavior on android 8.1 and below.
+        findPreference("ignoreNotch").setVisible(Build.VERSION.SDK_INT >= 28);
 		
         CustomSeekBarPreference seek2 = (CustomSeekBarPreference) findPreference("timeLongPressTrigger");
         seek2.setMin(100);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -17,8 +17,8 @@ public void onCreatePreferences(Bundle b, String str) {
 		
         // Disable freeform mode in Android 6.0 and below.
         findPreference("freeform").setVisible(Build.VERSION.SDK_INT >= 24);
-        //Disable notch checking behavior on android 8.0 and below.
-        findPreference("ignoreNotch").setVisible(Build.VERSION.SDK_INT >= 29);
+        //Disable notch checking behavior on android 8.1 and below.
+        findPreference("ignoreNotch").setVisible(Build.VERSION.SDK_INT >= 28);
 		
         CustomSeekBarPreference seek2 = (CustomSeekBarPreference) findPreference("timeLongPressTrigger");
         seek2.setMin(100);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavProfile.java
Patch:
@@ -41,7 +41,7 @@ public static MinecraftAccount getTempProfileContent(Context ctx) {
                 acc.clientToken = "0";
             }
             if (acc.profileId == null) {
-                acc.profileId = "0";
+                acc.profileId = "00000000-0000-0000-0000-000000000000";
             }
             if (acc.username == null) {
                 acc.username = "0";

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -12,7 +12,7 @@ public class MinecraftAccount
 {
     public String accessToken = "0"; // access token
     public String clientToken = "0"; // clientID: refresh and invalidate
-    public String profileId = "0"; // profile UUID, for obtaining skin
+    public String profileId = "00000000-0000-0000-0000-000000000000"; // profile UUID, for obtaining skin
     public String username = "Steve";
     public String selectedVersion = "1.7.10";
     public boolean isMicrosoft = false;
@@ -60,7 +60,7 @@ public static MinecraftAccount load(String name) throws JsonSyntaxException {
                 acc.clientToken = "0";
             }
             if (acc.profileId == null) {
-                acc.profileId = "0";
+                acc.profileId = "00000000-0000-0000-0000-000000000000";
             }
             if (acc.username == null) {
                 acc.username = "0";

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -6,7 +6,7 @@
 public class LauncherPreferences
 {
 	public static SharedPreferences DEFAULT_PREF;
-    public static String PREF_RENDERER = "2";
+    public static String PREF_RENDERER = "opengles2";
 	public static boolean PREF_VERTYPE_RELEASE = true;
 	public static boolean PREF_VERTYPE_SNAPSHOT = false;
 	public static boolean PREF_VERTYPE_OLDALPHA = false;
@@ -29,7 +29,7 @@ public class LauncherPreferences
 	public static boolean PREF_DISABLE_GESTURES = false;
 	public static float PREF_MOUSESPEED = 1f;
 	public static void loadPreferences() {
-        PREF_RENDERER = DEFAULT_PREF.getString("renderer", "2");
+        PREF_RENDERER = DEFAULT_PREF.getString("renderer", "opengles2");
 		PREF_BUTTONSIZE = DEFAULT_PREF.getInt("buttonscale", 100);
 		PREF_MOUSESCALE = DEFAULT_PREF.getInt("mousescale", 100);
 		PREF_MOUSESPEED = ((float)DEFAULT_PREF.getInt("mousespeed",100))/100f;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -6,7 +6,7 @@
 public class LauncherPreferences
 {
 	public static SharedPreferences DEFAULT_PREF;
-    public static int PREF_RENDERER = 2;
+    public static String PREF_RENDERER = "2";
 	public static boolean PREF_VERTYPE_RELEASE = true;
 	public static boolean PREF_VERTYPE_SNAPSHOT = false;
 	public static boolean PREF_VERTYPE_OLDALPHA = false;
@@ -29,7 +29,7 @@ public class LauncherPreferences
 	public static boolean PREF_DISABLE_GESTURES = false;
 	public static float PREF_MOUSESPEED = 1f;
 	public static void loadPreferences() {
-        PREF_RENDERER = DEFAULT_PREF.getInt("renderer", 2);
+        PREF_RENDERER = DEFAULT_PREF.getString("renderer", "2");
 		PREF_BUTTONSIZE = DEFAULT_PREF.getInt("buttonscale", 100);
 		PREF_MOUSESCALE = DEFAULT_PREF.getInt("mousescale", 100);
 		PREF_MOUSESPEED = ((float)DEFAULT_PREF.getInt("mousespeed",100))/100f;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -253,7 +253,7 @@ public static void setJavaEnvironment(LoggableActivity ctx, @Nullable ShellProce
                 //fallback to 2 since it's the minimum for the entire app
                 envMap.put("LIBGL_ES","2");
             } else {
-                envMap.put("LIBGL_ES", Integer.toString(LauncherPreferences.PREF_RENDERER));
+                envMap.put("LIBGL_ES", LauncherPreferences.PREF_RENDERER);
             }
         }
         for (Map.Entry<String, String> env : envMap.entrySet()) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -72,7 +72,7 @@ public static MinecraftAccount load(String name) throws JsonSyntaxException {
                 acc.msaRefreshToken = "0";
             }
             if (acc.skinFaceBase64 == null) {
-                acc.updateSkinFace("MHF_Steve");
+                // acc.updateSkinFace("MHF_Steve");
             }
             return acc;
         } catch(IOException e) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -1,5 +1,6 @@
 package net.kdt.pojavlaunch;
 
+import android.app.Activity;
 import android.content.*;
 import android.os.*;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -34,7 +34,7 @@ public class CustomControlsActivity extends BaseActivity
 	protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         
-        if (getIntent().getExtras().getBoolean("fromMainActivity", false)) {
+        if (getIntent().getExtras() != null && getIntent().getExtras().getBoolean("fromMainActivity", false)) {
             // TODO translucent!
             // setTheme(androidx.appcompat.R.style.Theme_AppCompat_Translucent);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -38,7 +38,7 @@ public class ControlData implements Cloneable
      * bigger device or vice versa.
      */
     public String dynamicX, dynamicY;
-    public boolean isDynamicBtn, isToggle, passThruEnabled;
+    public boolean isDynamicBtn, isToggle, passThruEnabled, isRound;
     
     public static ControlData[] getSpecialButtons(){
         if (SPECIAL_BUTTONS == null) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/ActionPopupWindow.java
Patch:
@@ -117,6 +117,8 @@ public void onShow(DialogInterface dialogInterface) {
                         checkToggle.setChecked(properties.isToggle);
                         final CheckBox checkPassthru = dialog.findViewById(R.id.controlsetting_checkbox_passthru);
                         checkPassthru.setChecked(properties.passThruEnabled);
+                        final CheckBox checkRound = dialog.findViewById(R.id.controlsetting_checkbox_round);
+                        checkRound.setChecked(properties.isRound);
                         final EditText editWidth = dialog.findViewById(R.id.controlsetting_edit_width);
                         final EditText editHeight = dialog.findViewById(R.id.controlsetting_edit_height);
                         editWidth.setText(Float.toString(properties.width));
@@ -207,6 +209,7 @@ public void onClick(View view2) {
 										properties.hidden = false;
                                         properties.isToggle = checkToggle.isChecked();
                                         properties.passThruEnabled = checkPassthru.isChecked();
+                                        properties.isRound = checkRound.isChecked();
                                         properties.isDynamicBtn = checkDynamicPos.isChecked();
                                         properties.width = Float.parseFloat(editWidth.getText().toString());
                                         properties.height = Float.parseFloat(editHeight.getText().toString());

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -89,11 +89,11 @@ public boolean onTouch(View view, MotionEvent e) {
                             break;
                             
                         case ControlData.SPECIALBTN_SCROLLDOWN:
-                            CallbackBridge.sendScroll(0, 0.1d);
+                            if(!isDown)CallbackBridge.sendScroll(0, 1d);
                             break;
                             
                         case ControlData.SPECIALBTN_SCROLLUP:
-                            CallbackBridge.sendScroll(0, -0.1d);
+                            if(!isDown)CallbackBridge.sendScroll(0, -1d);
                             break;
                     }
                 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -303,7 +303,7 @@ public int launchJavaRuntime(File modFile, String javaArgs) {
                 javaArgList.addAll(Arrays.asList(javaArgs.split(" ")));
             } else {
                 javaArgList.add("-jar");
-                javaArgList.add("\"" + modFile.getAbsolutePath() + "\"");
+                javaArgList.add(modFile.getAbsolutePath());
             }
 
             appendlnToLog("Info: Java arguments: " + Arrays.toString(javaArgList.toArray(new String[0])));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -303,7 +303,7 @@ public int launchJavaRuntime(File modFile, String javaArgs) {
                 javaArgList.addAll(Arrays.asList(javaArgs.split(" ")));
             } else {
                 javaArgList.add("-jar");
-                javaArgList.add(modFile.getAbsolutePath());
+                javaArgList.add("\"" + modFile.getAbsolutePath() + "\"");
             }
 
             appendlnToLog("Info: Java arguments: " + Arrays.toString(javaArgList.toArray(new String[0])));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -312,9 +312,9 @@ public void run() {
         ctx.appendlnToLog("Executing JVM: \"" + sbJavaArgs.toString() + "\"");
 */
 
-        JREUtils.setJavaEnvironment(ctx, null);
-        JREUtils.initJavaRuntime();
-        JREUtils.chdir(Tools.DIR_GAME_NEW);
+        setJavaEnvironment(ctx, null);
+        initJavaRuntime();
+        chdir(Tools.DIR_GAME_NEW);
 
         final int exitCode = VMLauncher.launchJVM(javaArgList.toArray(new String[0]));
         ctx.appendlnToLog("Java Exit code: " + exitCode);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -28,6 +28,7 @@ public class ControlButton extends androidx.appcompat.widget.AppCompatButton imp
 
     public ControlButton(ControlLayout layout, ControlData properties) {
         super(layout.getContext());
+        setPadding(4, 4, 4, 4);
         setWillNotDraw(false);
 
         mScaleAt = layout.mLayout.scaledAt;

File: app_pojavlauncher/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -56,8 +56,8 @@ public static void sendCursorPos(int x, int y) {
     }
     
     public static void sendPrepareGrabInitialPos() {
-        DEBUG_STRING.append("Prepare set grab initial posititon");
-        sendMouseKeycode(-1, CallbackBridge.getCurrentMods(), false);
+        DEBUG_STRING.append("Prepare set grab initial posititon: ignored");
+        //sendMouseKeycode(-1, CallbackBridge.getCurrentMods(), false);
     }
 
     public static void sendKeycode(int keycode, char keychar, int scancode, int modifiers, boolean isDown) {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -1139,7 +1139,7 @@ public static void glfwPollEvents() {
             mGLFWCursorLastY = mGLFWCursorY;
             for (Long ptr : mGLFWWindowMap.keySet()) {
                 if (!mGLFWIsGrabbing && mGLFWWindowSizeCallback != null) {
-                    mGLFWWindowSizeCallback.invoke(window, mGLFWWindowWidth, mGLFWWindowHeight);
+                    mGLFWWindowSizeCallback.invoke(ptr, mGLFWWindowWidth, mGLFWWindowHeight);
                 }
                 mGLFWCursorPosCallback.invoke(ptr, mGLFWCursorX, mGLFWCursorY);
             }

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -1138,6 +1138,9 @@ public static void glfwPollEvents() {
             mGLFWCursorLastX = mGLFWCursorX;
             mGLFWCursorLastY = mGLFWCursorY;
             for (Long ptr : mGLFWWindowMap.keySet()) {
+                if (!mGLFWIsGrabbing && mGLFWWindowSizeCallback != null) {
+                    mGLFWWindowSizeCallback.invoke(window, mGLFWWindowWidth, mGLFWWindowHeight);
+                }
                 mGLFWCursorPosCallback.invoke(ptr, mGLFWCursorX, mGLFWCursorY);
             }
             // System.out.println("CursorPos updated to x=" + mGLFWCursorX + ",y=" + mGLFWCursorY);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -70,7 +70,7 @@ private void addControlView(ControlData controlButton) {
 		final ControlButton view = new ControlButton(this, controlButton);
 		view.setModifiable(mModifiable);
         if (!mModifiable) {
-            view.setAlpha(1f - view.getProperties().transparency / 100);
+            view.setAlpha(1f - view.getProperties().transparency / 100f);
 			view.setFocusable(false);
 			view.setFocusableInTouchMode(false);
         }
@@ -116,7 +116,7 @@ public void setModifiable(boolean z) {
 				ControlButton cv = ((ControlButton) v);
 				cv.setModifiable(z);
                 if (!z) {
-				    cv.setAlpha(1f - cv.getProperties().transparency / 100);
+				    cv.setAlpha(1f - cv.getProperties().transparency / 100f);
                 }
 			}
 		}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -651,7 +651,7 @@ public boolean onCapturedPointer (View view, MotionEvent e) {
                     });
             }
             minecraftGLView.setOnTouchListener(glTouchListener);
-            minecraftGLView.setOpaque(true);
+            minecraftGLView.setOpaque(false);
             minecraftGLView.setSurfaceTextureListener(new TextureView.SurfaceTextureListener(){
                 
                     private boolean isCalled = false;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -96,7 +96,8 @@ public static void getCacioJavaArgs(List<String> javaArgList, boolean isHeadless
         javaArgList.add("-Djava.awt.headless="+isHeadless);
         // Caciocavallo config AWT-enabled version
         javaArgList.add("-Dcacio.managed.screensize=" + CallbackBridge.physicalWidth + "x" + CallbackBridge.physicalHeight);
-        javaArgList.add("-Dcacio.font.fontmanager=net.java.openjdk.cacio.ctc.CTCFontManager");
+        // javaArgList.add("-Dcacio.font.fontmanager=net.java.openjdk.cacio.ctc.CTCFontManager");
+        javaArgList.add("-Dcacio.font.fontmanager=sun.awt.X11FontManager");
         javaArgList.add("-Dcacio.font.fontscaler=sun.font.FreetypeFontScaler");
         javaArgList.add("-Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel");
         javaArgList.add("-Dawt.toolkit=net.java.openjdk.cacio.ctc.CTCToolkit");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -651,7 +651,7 @@ public boolean onCapturedPointer (View view, MotionEvent e) {
                     });
             }
             minecraftGLView.setOnTouchListener(glTouchListener);
-            minecraftGLView.setOpaque(false);
+            minecraftGLView.setOpaque(true);
             minecraftGLView.setSurfaceTextureListener(new TextureView.SurfaceTextureListener(){
                 
                     private boolean isCalled = false;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -105,7 +105,7 @@ public boolean onTouch(View view, MotionEvent e) {
             }
         };
 
-        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.P){
+        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q){
             fileObserver = new FileObserver(new File(Tools.DIR_GAME_NEW + "/options.txt"), FileObserver.MODIFY) {
                 @Override
                 public void onEvent(int i, @Nullable String s) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -1173,7 +1173,9 @@ public static boolean sendMouseButtonUnconverted(int button, boolean status) {
 
     public void getMcScale() {
         //Get the scale stored in game files, used auto scale if found or if the stored scaled is bigger than the authorized size.
-        this.guiScale = Integer.parseInt(MCOptionUtils.get("guiScale"));
+        String str = MCOptionUtils.get("guiScale");
+        this.guiScale = (str == null ? 0 :Integer.parseInt(str));
+        
 
         int scale = Math.max(Math.min(CallbackBridge.windowWidth / 320, CallbackBridge.windowHeight / 240), 1);
         if(scale < this.guiScale || guiScale == 0){

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -97,8 +97,7 @@ public static void getCacioJavaArgs(List<String> javaArgList, boolean isHeadless
         // Caciocavallo config AWT-enabled version
         javaArgList.add("-Dcacio.managed.screensize=" + CallbackBridge.physicalWidth + "x" + CallbackBridge.physicalHeight);
         javaArgList.add("-Dcacio.font.fontmanager=net.java.openjdk.cacio.ctc.CTCFontManager");
-        if(isHeadless) javaArgList.add("-Dcacio.font.fontscaler=sun.font.FreetypeFontScaler"); //safe to use it when running in headless mode
-        //else javaArgList.add("-Dcacio.font.fontscaler=sun.font.NullFontScaler"); // it will literally disable the text rendering, so...
+        javaArgList.add("-Dcacio.font.fontscaler=sun.font.FreetypeFontScaler");
         javaArgList.add("-Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel");
         javaArgList.add("-Dawt.toolkit=net.java.openjdk.cacio.ctc.CTCToolkit");
         javaArgList.add("-Djava.awt.graphicsenv=net.java.openjdk.cacio.ctc.CTCGraphicsEnvironment");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -328,7 +328,7 @@ public static DisplayMetrics getDisplayMetrics(Activity ctx) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
                 ctx.getDisplay().getRealMetrics(displayMetrics);
             } else {
-                displayMetrics = ctx.getWindowManager().getDefaultDisplay();
+                 ctx.getWindowManager().getDefaultDisplay().getRealMetrics(displayMetrics);
             }
             if(!PREF_IGNORE_NOTCH){
                 //Remove notch width when it isn't ignored.

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -328,7 +328,7 @@ public static DisplayMetrics getDisplayMetrics(Activity ctx) {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
                 ctx.getDisplay().getRealMetrics(displayMetrics);
             } else {
-                displayMetrics = ctx.getWindowManager().getDefaultDisplay();
+                 ctx.getWindowManager().getDefaultDisplay().getRealMetrics(displayMetrics);
             }
             if(!PREF_IGNORE_NOTCH){
                 //Remove notch width when it isn't ignored.

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -14,9 +14,9 @@ public void onCreatePreferences(Bundle b, String str) {
         addPreferencesFromResource(R.xml.pref_main);
 		
         // Disable freeform mode in Android 6.0 and below.
-        findPreference("freeform").setEnabled(Build.VERSION.SDK_INT >= 24);
+        findPreference("freeform").setVisible(Build.VERSION.SDK_INT >= 24);
         //Disable notch checking behavior on android 8.0 and below.
-        findPreference("ignoreNotch").setEnabled(Build.VERSION.SDK_INT >= 29);
+        findPreference("ignoreNotch").setVisible(Build.VERSION.SDK_INT >= 29);
 		
         CustomSeekBarPreference seek2 = (CustomSeekBarPreference) findPreference("timeLongPressTrigger");
         seek2.setMin(100);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -604,6 +604,9 @@ private String getMoving(float pos, boolean xOrY) {
                     public boolean onCapturedPointer (View view, MotionEvent e) {
                             x += ((int) e.getX()) * scaleFactor;
                             y += ((int) e.getY()) * scaleFactor;
+                            if(!CallbackBridge.isGrabbing()){
+                                view.releasePointerCapture();
+                            }
 
                             if (debugText.getVisibility() == View.VISIBLE && !debugErrored) {
                                 StringBuilder builder = new StringBuilder();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -290,6 +290,7 @@ private void restoreOldLook(boolean oldLookState){
             //UI v1 Style
             //Hide the sidebar
             params.guidePercent = 0; // 0%, range: 0 <-> 1
+            guideLine.setLayoutParams(params);
 
             //Remove the selected Tab
             selected.setVisibility(View.GONE);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/AndroidLWJGLKeycode.java
Patch:
@@ -43,7 +43,7 @@ public class AndroidLWJGLKeycode {
         androidToLwjglMap.put(KeyEvent.KEYCODE_K, LWJGLGLFWKeycode.GLFW_KEY_K);
         androidToLwjglMap.put(KeyEvent.KEYCODE_L, LWJGLGLFWKeycode.GLFW_KEY_L);
         androidToLwjglMap.put(KeyEvent.KEYCODE_M, LWJGLGLFWKeycode.GLFW_KEY_M);
-        androidToLwjglMap.put(KeyEvent.KEYCODE_N, LWJGLGLFWKeycode.GLFW_KEY_M);
+        androidToLwjglMap.put(KeyEvent.KEYCODE_N, LWJGLGLFWKeycode.GLFW_KEY_N);
         androidToLwjglMap.put(KeyEvent.KEYCODE_O, LWJGLGLFWKeycode.GLFW_KEY_O);
         androidToLwjglMap.put(KeyEvent.KEYCODE_P, LWJGLGLFWKeycode.GLFW_KEY_P);
         androidToLwjglMap.put(KeyEvent.KEYCODE_Q, LWJGLGLFWKeycode.GLFW_KEY_Q);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -290,6 +290,7 @@ private void restoreOldLook(boolean oldLookState){
             //UI v1 Style
             //Hide the sidebar
             params.guidePercent = 0; // 0%, range: 0 <-> 1
+            guideLine.setLayoutParams(params);
 
             //Remove the selected Tab
             selected.setVisibility(View.GONE);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/MinecraftDownloaderTask.java
Patch:
@@ -123,7 +123,8 @@ public void updateProgress(int curr, int max) {
                 zeroProgress();
                 publishProgress("1", mActivity.getString(R.string.mcl_launch_downloading, p1[0] + ".jar"));
                 File minecraftMainFile = new File(minecraftMainJar);
-                if (!minecraftMainFile.exists() || minecraftMainFile.length() == 0l) {
+                if ((!minecraftMainFile.exists() || minecraftMainFile.length() == 0l) &&
+                  verInfo.downloads != null) {
                     try {
                         Tools.downloadFileMonitored(
                             verInfo.downloads.values().toArray(new MinecraftClientInfo[0])[0].url,

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/utils/JSONUtils.java
Patch:
@@ -13,7 +13,7 @@ public static String[] insertJSONValueList(String[] args, Map<String, String> ke
     public static String insertSingleJSONValue(String value, Map<String, String> keyValueMap) {
         String valueInserted = value;
         for (Map.Entry<String, String> keyValue : keyValueMap.entrySet()) {
-            valueInserted = valueInserted.replace("${" + keyValue.getKey() + "}", keyValue.getValue());
+            valueInserted = valueInserted.replace("${" + keyValue.getKey() + "}", keyValue.getValue() == null ? "" : keyValue.getValue());
         }
         return valueInserted;
     }

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/opengl/Display.java
Patch:
@@ -311,8 +311,8 @@ public void invoke(long window, int key, int scancode, int action, int mods) {
         Window.charCallback = new GLFWCharCallback() {
             @Override
             public void invoke(long window, int codepoint) {
-                GLFWInputImplementation.singleton.putKeyboardEvent(KeyCodes.toLwjglKey(32),(byte)1,(int)codepoint,Sys.getNanoTime(),false);
-                GLFWInputImplementation.singleton.putKeyboardEvent(KeyCodes.toLwjglKey(32),(byte)0,(int)codepoint,Sys.getNanoTime(),false);
+                //GLFWInputImplementation.singleton.putKeyboardEvent(0,(byte)1,(int)codepoint,Sys.getNanoTime(),false);
+                GLFWInputImplementation.singleton.putKeyboardEvent(0,(byte)0,(int)codepoint,Sys.getNanoTime(),false);
             }
         };
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/InvalidateTokenTask.java
Patch:
@@ -24,11 +24,12 @@ public InvalidateTokenTask(Context ctx) {
     public Throwable doInBackground(String... args) {
         path = args[0];
         try {
+
+            
+            this.profilePath = MinecraftAccount.load(args[0]);
             if (profilePath.accessToken.equals("0")) {
                 return null;
             }
-            
-            this.profilePath = MinecraftAccount.load(args[0]);
             this.authenticator.invalidate(profilePath.accessToken,
                 UUID.fromString(profilePath.isMicrosoft ? profilePath.profileId : profilePath.clientToken /* should be? */));
             return null;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -826,7 +826,7 @@ protected void onPause()
     }
 
     public static void fullyExit() {
-        System.exit(0);
+        android.os.Process.killProcess(android.os.Process.myPid());
     }
 
     public void forceUserHome(String s) throws Exception {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -184,7 +184,6 @@ private void setHolding(boolean isDown) {
     private float downX, downY;
     @Override
     public boolean onTouchEvent(MotionEvent event) {
-        super.onTouchEvent(event);
         if (!mModifiable) {
             mCanTriggerLongClick = false;
             if (mProperties.keycode >= 0) {
@@ -241,7 +240,7 @@ public boolean onTouchEvent(MotionEvent event) {
             }
         }
 
-        return false;
+        return super.onTouchEvent(event);
     }
 
     public void setModifiable(boolean z) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -184,6 +184,7 @@ private void setHolding(boolean isDown) {
     private float downX, downY;
     @Override
     public boolean onTouchEvent(MotionEvent event) {
+        super.onTouchEvent(event);
         if (!mModifiable) {
             mCanTriggerLongClick = false;
             if (mProperties.keycode >= 0) {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/opengl/GL.java
Patch:
@@ -346,7 +346,7 @@ public static GLCapabilities createCapabilities() {
     @SuppressWarnings("AssignmentToMethodParameter")
     public static GLCapabilities createCapabilities(boolean forwardCompatible) {
         // This fixed framebuffer issue on 1.13+ 64-bit by another making current
-        GLFW.nativeEglMakeCurrent(1);
+        GLFW.nativeEglMakeCurrent(GLFW.mainContext);
         
         if (isUsingRegal /* && Long.parseLong(System.getProperty("glfwstub.internal.glthreadid", "-1")) != Thread.currentThread().getId() */) {
             nativeRegalMakeCurrent();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -698,13 +698,14 @@ public void onSurfaceTextureSizeChanged(SurfaceTexture texture, int width, int h
 
                     @Override
                     public void onSurfaceTextureUpdated(SurfaceTexture texture) {
-                        
+                        texture.setDefaultBufferSize(CallbackBridge.windowWidth,CallbackBridge.windowHeight);
                     }
                 });
         } catch (Throwable e) {
             Tools.showError(this, e, true);
         }
     }
+
     /*
     @Override
     public boolean dispatchKeyEvent(KeyEvent event) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -1163,7 +1163,7 @@ public static boolean sendMouseButtonUnconverted(int button, boolean status) {
 
     public void calculateMcScale() {
         int scale = 1;
-        while (CallbackBridge.windowWidth / (scale + 1) >= 320 && CallbackBridge.windowHeight / (scale + 1) >= 240) {
+        while (CallbackBridge.physicalWidth / (scale + 1) >= 320 && CallbackBridge.physicalHeight / (scale + 1) >= 240) {
             scale++;
         }
         this.guiScale = scale;
@@ -1174,8 +1174,8 @@ public int handleGuiBar(int x, int y) {
         
         int barheight = mcscale(20);
         int barwidth = mcscale(180);
-        int barx = (CallbackBridge.windowWidth / 2) - (barwidth / 2);
-        int bary = CallbackBridge.windowHeight - barheight;
+        int barx = (CallbackBridge.physicalWidth / 2) - (barwidth / 2);
+        int bary = CallbackBridge.physicalHeight - barheight;
         if (x < barx || x >= barx + barwidth || y < bary || y >= bary + barheight) {
             return -1;
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -783,7 +783,7 @@ public void onClick(View v) {
                         @Override
                         public void onClick(DialogInterface p1, int p2) {
                             new InvalidateTokenTask(PojavLoginActivity.this).execute(selectedAccName);
-                            accountListLayout.removeViewsInLayout(0,1);
+                            accountListLayout.removeViewsInLayout(0, 1);
                             //Resize the window
                             accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int) Math.min((yScreen*0.8), (73 + accountListLayout.getChildCount()*55)*(PojavLoginActivity.this.getResources().getDisplayMetrics().densityDpi/160f) ));
                         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -200,10 +200,11 @@ public int launchJavaRuntime(File modFile, String javaArgs) {
             appendlnToLog("Info: Java arguments: " + Arrays.toString(javaArgList.toArray(new String[0])));
             
             // Run java on sandbox, non-overrideable.
+            Collections.reverse(javaArgList);
             javaArgList.add("-Xbootclasspath/a:" + Tools.DIR_DATA + "/pro-grade.jar");
             javaArgList.add("-Djava.security.manager=net.sourceforge.prograde.sm.ProGradeJSM");
-            javaArgList.add("-Djava.security.policy==" + Tools.DIR_DATA + "/java_sandbox.policy");
-            
+            javaArgList.add("-Djava.security.policy=" + Tools.DIR_DATA + "/java_sandbox.policy");
+            Collections.reverse(javaArgList);
             return JREUtils.launchJavaVM(this, javaArgList);
         } catch (Throwable th) {
             Tools.showError(this, th, true);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -365,14 +365,15 @@ public boolean onTouch(View p1, MotionEvent e)
                     // System.out.println("Pre touch, isTouchInHotbar=" + Boolean.toString(isTouchInHotbar) + ", action=" + MotionEvent.actionToString(e.getActionMasked()));
                    /* int x = ((int) e.getX()) / scaleFactor;
                     int y = ((int) e.getY()) / scaleFactor;*/
-                    if(e.getHistorySize() > 0) {
+                    if(e.getHistorySize() > 0 && CallbackBridge.isGrabbing()) {
                         x += (int)(e.getX() - e.getHistoricalX(0));
                         y += (int)(e.getY() - e.getHistoricalY(0));
                     }
                     if(!CallbackBridge.isGrabbing()) {
                         x = (int) e.getX();
                         y = (int) e.getY();
                     }
+
                     int hudKeyHandled = handleGuiBar((int)e.getX(), (int)e.getY());
                     if (!CallbackBridge.isGrabbing() && gestureDetector.onTouchEvent(e)) {
                         if (hudKeyHandled != -1) {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/GLFWInputImplementation.java
Patch:
@@ -156,7 +156,7 @@ public void putMouseEventWithCoords(byte button, byte state, int coord1, int coo
         event_buffer.put(button).put(state);
         //always put deltas when grabbed
         if (grab) {
-            event_buffer.putInt(acoord1-mouseLastX).putInt(acoord2-mouseLastY);
+            event_buffer.putInt(acoord1-mouseX).putInt(acoord2-mouseY);
         }else{
             event_buffer.putInt(acoord1).putInt(acoord2);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -42,7 +42,8 @@ public static void loadPreferences() {
             String DEFAULT_JAVA_ARGS =
                 "-Xms" + (androidHeap > 800 ? 800 : androidHeap) + "m " +
                 // (32bit) More than 800mb may make JVM not allocateable and crash
-                "-Xmx" + (doubleAndroidHeap > 800 ? 800 : doubleAndroidHeap) + "m " +
+                "-Xmx" + (doubleAndroidHeap > 800 ? 800 : doubleAndroidHeap) + "m"; /* "m " +
+
                 "-XX:+UseG1GC " +
                 "-XX:+ParallelRefProcEnabled " +
                 "-XX:MaxGCPauseMillis=200 " +
@@ -60,6 +61,7 @@ public static void loadPreferences() {
 		"-XX:SurvivorRatio=32 " +
 		"-XX:+PerfDisableSharedMem " +
                 "-XX:MaxTenuringThreshold=1";
+*/
             
             PREF_CUSTOM_JAVA_ARGS = DEFAULT_JAVA_ARGS;
             DEFAULT_PREF.edit().putString("javaArgs", DEFAULT_JAVA_ARGS).commit();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -59,7 +59,8 @@ public static void loadPreferences() {
 		"-XX:G1RSetUpdatingPauseTimePercent=5 " +
 		"-XX:SurvivorRatio=32 " +
 		"-XX:+PerfDisableSharedMem " +
-                "-XX:MaxTenuringThreshold=1";
+                "-XX:MaxTenuringThreshold=1" +
+		"-Dhttp.proxyHost=betacraft.pl";
             
             PREF_CUSTOM_JAVA_ARGS = DEFAULT_JAVA_ARGS;
             DEFAULT_PREF.edit().putString("javaArgs", DEFAULT_JAVA_ARGS).commit();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -69,7 +69,7 @@ public static void launchMinecraft(final LoggableActivity ctx, MinecraftAccount
         int mcReleaseDate = Integer.parseInt(versionInfo.releaseTime.substring(0, 10).replace("-", ""));
         // 13w17a: 20130425
         // 13w18a: 20130502
-        if (mcReleaseDate < 20130502) {
+        if (mcReleaseDate < 20130502 && versionInfo.minimumLauncherVersion <= 4){
             javaArgList.add("-Djava.awt.headless=false");
 
             // Caciocavallo config 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -47,6 +47,7 @@ public ControlButton(ControlLayout layout, ControlData properties) {
         
         mRectPaint = new Paint();
         mRectPaint.setColor(value.data);
+        mRectPaint.setAlpha(128);
     }
 
     public HandleView getHandleView() {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/glfw/GLFW.java
Patch:
@@ -497,7 +497,7 @@ public class GLFW
     private static ArrayMap<Long, GLFWWindowProperties> mGLFWWindowMap;
 
 	public static boolean mGLFWIsGrabbing, mGLFWIsInputReady, mGLFWIsUseStackQueue = false;
-
+    public static final byte[] keyDownBuffer = new byte[316];
 	private static final String PROP_WINDOW_WIDTH = "glfwstub.windowWidth";
 	private static final String PROP_WINDOW_HEIGHT= "glfwstub.windowHeight";
 
@@ -1090,6 +1090,7 @@ public static void glfwPollEvents() {
                         break;
                     case CallbackBridge.EVENT_TYPE_KEY:
                         if (mGLFWKeyCallback != null) {
+                        	keyDownBuffer[dataArr[1]-32]=(byte)(int)dataArr[3];
                             mGLFWKeyCallback.invoke(ptr, dataArr[1], dataArr[2], dataArr[3], dataArr[4]);
                         }
                         break;
@@ -1174,7 +1175,7 @@ public static int glfwGetKeyScancode(int key) {
     }
 
     public static int glfwGetKey(@NativeType("GLFWwindow *") long window, int key) {
-        return 0;
+        return keyDownBuffer[key-32];
     }
 
     public static int glfwGetMouseButton(@NativeType("GLFWwindow *") long window, int button) {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/GLFWInputImplementation.java
Patch:
@@ -49,7 +49,7 @@ public void destroyMouse() {
     public void pollMouse(IntBuffer coord_buffer, ByteBuffer buttons) {
         coord_buffer.put(0, grab? mouseX - mouseLastX: mouseX);
         coord_buffer.put(1, grab? mouseY - mouseLastY: mouseY);
-        System.out.println("Poll Call: Buffer length="+buttons.capacity()+"; Pos="+buttons.position());
+        //System.out.println("Poll Call: Buffer length="+buttons.capacity()+"; Pos="+buttons.position());
         buttons.rewind();
         buttons.put(mouse_buffer);
         mouseLastX = mouseX;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/HandleView.java
Patch:
@@ -372,8 +372,8 @@ public boolean onTouchEvent(MotionEvent ev) {
                     int newWidth = (int) (mDownWidth + (rawX - mDownX));
                     int newHeight = (int) (mDownHeight + (rawY - mDownY));
                     
-                    mDownX = rawX;
-                    mDownY = rawY;
+                    // mDownX = rawX;
+                    // mDownY = rawY;
                     
                     params.width = Math.max(50, newWidth);
                     params.height = Math.max(50, newHeight);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/HandleView.java
Patch:
@@ -394,7 +394,7 @@ public boolean onTouchEvent(MotionEvent ev) {
                 mIsDragging = false;
                 break;
         }
-        return false; // super.onTouchEvent(ev);
+        return true;
     }
 
     public boolean isDragging() {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/HandleView.java
Patch:
@@ -238,7 +238,7 @@ private boolean isVisible() {
     public abstract void updatePosition(float x, float y);
 
     protected void positionAtCursorOffset(int offset, boolean parentScrolled) {
-        mPositionX = (int) (mView.getWidth() / 1.1);
+        mPositionX = mView.getWidth();
         mPositionY = mView.getHeight();
         
         mPositionHasChanged = true;

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/GLFWInputImplementation.java
Patch:
@@ -175,6 +175,7 @@ public void setMouseButtonInGrabMode(byte button, byte state) {
         last_event_nanos = nanos;
     }
     public void putKeyboardEvent(int keycode, byte state, int ch, long nanos, boolean repeat) {
+        key_down_buffer[keycode] = state;
         keyboardEvent.clear();
         keyboardEvent.putInt(keycode).put(state).putInt(ch).putLong(nanos).put(repeat ? (byte)1 : (byte)0);
         keyboardEvent.flip();

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/Mouse.java
Patch:
@@ -403,6 +403,7 @@ public static int getButtonIndex(String buttonName) {
     public static boolean next() {
             if (!created) throw new IllegalStateException("Mouse must be created before you can read events");
             if (readBuffer.hasRemaining()) {
+
                 eventButton = readBuffer.get();
                 eventState = readBuffer.get() != 0;
                 if (isGrabbed()) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -71,6 +71,8 @@ private void addControlView(ControlData controlButton) {
 		view.setModifiable(mModifiable);
         if (!mModifiable) {
             view.setAlpha(1f - view.getProperties().transparency / 100);
+			view.setFocusable(false);
+			view.setFocusableInTouchMode(false);
         }
 		addView(view);
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -902,6 +902,7 @@ private boolean isStorageAllowed() {
         int result1 = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);
         int result2 = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE);
 
+
         //If permission is granted returning true
         return result1 == PackageManager.PERMISSION_GRANTED &&
             result2 == PackageManager.PERMISSION_GRANTED;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/tasks/RefreshVersionListTask.java
Patch:
@@ -109,7 +109,7 @@ private ArrayList<String> filter(JMinecraftVersionList.Version[] list1, File[] l
             }
         }
 
-        for (File value2: list2) {
+        if(list2 != null) for (File value2: list2) {
             if (!output.contains(value2.getName())) {
                 output.add(value2.getName());
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/AccountSkin.java
Patch:
@@ -24,7 +24,7 @@ private static Bitmap getSkinFromProperty(SkinProperty p) throws IOException {
         for (Map.Entry<String, Texture> texture : p.textures.entrySet()) {
             if (texture.getKey().equals("SKIN")) {
                 String skinFile = File.createTempFile("skin", ".png", new File(Tools.DIR_DATA, "cache")).getAbsolutePath();
-                Tools.downloadFile(texture.getValue().url, skinFile);
+                Tools.downloadFile(texture.getValue().url.replace("http://","https://"), skinFile);
                 return BitmapFactory.decodeFile(skinFile);
             }
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/AccountSkin.java
Patch:
@@ -23,7 +23,7 @@ public static Bitmap getSkin(String uuid) throws IOException {
     private static Bitmap getSkinFromProperty(SkinProperty p) throws IOException {
         for (Map.Entry<String, Texture> texture : p.textures.entrySet()) {
             if (texture.getKey().equals("SKIN")) {
-                String skinFile = File.createTempFile("skin", "png", new File(Tools.DIR_DATA, "cache")).getAbsolutePath();
+                String skinFile = File.createTempFile("skin", ".png", new File(Tools.DIR_DATA, "cache")).getAbsolutePath();
                 Tools.downloadFile(texture.getValue().url, skinFile);
                 return BitmapFactory.decodeFile(skinFile);
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/MicrosoftAuthTask.java
Patch:
@@ -78,6 +78,7 @@ public Object doInBackground(String... args) {
                 acc.profileId = msa.mcUuid;
                 acc.isMicrosoft = true;
                 acc.msaRefreshToken = msa.msRefreshToken;
+                acc.updateSkinFace();
             }
             acc.save();
            

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/RefreshTokenTask.java
Patch:
@@ -38,7 +38,7 @@ public Throwable doInBackground(String... args) {
             this.profilePath = MinecraftAccount.load(args[0]);
             int responseCode = 400;
             responseCode = this.authenticator.validate(profilePath.accessToken).statusCode;
-            if (responseCode >= 200 && responseCode < 300) {
+            if (responseCode == 403) {
                 RefreshResponse response = this.authenticator.refresh(profilePath.accessToken, UUID.fromString(profilePath.clientToken));
                 // if (response == null) {
                     // throw new NullPointerException("Response is null?");
@@ -54,8 +54,9 @@ public Throwable doInBackground(String... args) {
                 profilePath.accessToken = response.accessToken;
                 profilePath.username = response.selectedProfile.name;
                 profilePath.profileId = response.selectedProfile.id;
-                profilePath.save();
             }
+            profilePath.updateSkinFace();
+            profilePath.save();
             return null;
         } catch (Throwable e) {
             return e;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -738,7 +738,7 @@ public void onClick(DialogInterface p1, int p2) {
                             new InvalidateTokenTask(PojavLoginActivity.this).execute(selectedAccName);
                             accountListLayout.removeViewsInLayout(0,1);
                             //Resize the window
-                            accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int)Math.min((yScreen*0.8), 200 + accountListLayout.getChildCount()*150));
+                            accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int) Math.min((yScreen*0.8), (73 + accountListLayout.getChildCount()*55)*(PojavLoginActivity.this.getResources().getDisplayMetrics().densityDpi/160f) ));
                         }
                     });
                     builder2.setNegativeButton(android.R.string.cancel, null);
@@ -748,7 +748,8 @@ public void onClick(DialogInterface p1, int p2) {
 
         }
 
-        accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int)Math.min((yScreen*0.8), 200 + accountListLayout.getChildCount()*150));
+        //The value 73 and 56 are dp numbers, converted into px in order to resize the layout.
+        accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int)Math.min((yScreen*0.8), (73 + accountListLayout.getChildCount()*56)*(PojavLoginActivity.this.getResources().getDisplayMetrics().densityDpi/160f) ));
         accountDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
         accountDialog.show();
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -737,7 +737,7 @@ public void onClick(DialogInterface p1, int p2) {
                             new InvalidateTokenTask(PojavLoginActivity.this).execute(selectedAccName);
                             accountListLayout.removeViewsInLayout(0,1);
                             //Resize the window
-                            accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int)Math.min((yScreen*0.8), 200 + accountListLayout.getChildCount()*150));
+                            accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int) Math.min((yScreen*0.8), (73 + accountListLayout.getChildCount()*55)*(PojavLoginActivity.this.getResources().getDisplayMetrics().densityDpi/160f) ));
                         }
                     });
                     builder2.setNegativeButton(android.R.string.cancel, null);
@@ -747,7 +747,8 @@ public void onClick(DialogInterface p1, int p2) {
 
         }
 
-        accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int)Math.min((yScreen*0.8), 200 + accountListLayout.getChildCount()*150));
+        //The value 73 and 55 are dp numbers, converted into px in order to resize the layout.
+        accountDialog.getWindow().setLayout((int)(xScreen*0.4),(int)Math.min((yScreen*0.8), (73 + accountListLayout.getChildCount()*56)*(PojavLoginActivity.this.getResources().getDisplayMetrics().densityDpi/160f) ));
         accountDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
         accountDialog.show();
     }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -12,6 +12,7 @@ public class LauncherPreferences
 	public static boolean PREF_VERTYPE_OLDALPHA = false;
 	public static boolean PREF_VERTYPE_OLDBETA = false;
 	public static boolean PREF_FREEFORM = false;
+	public static boolean PREF_HIDE_SIDEBAR = false;
 	public static float PREF_BUTTONSIZE = 100f;
 	public static float PREF_MOUSESCALE = 100f;
 	public static int PREF_LONGPRESS_TRIGGER = 500;
@@ -24,6 +25,7 @@ public static void loadPreferences() {
 		PREF_BUTTONSIZE = DEFAULT_PREF.getInt("buttonscale", 100);
 		PREF_MOUSESCALE = DEFAULT_PREF.getInt("mousescale", 100);
 		PREF_FREEFORM = DEFAULT_PREF.getBoolean("freeform", false);
+		PREF_HIDE_SIDEBAR = DEFAULT_PREF.getBoolean("hideSidebar", false);
 		PREF_VERTYPE_RELEASE = DEFAULT_PREF.getBoolean("vertype_release", true);
 		PREF_VERTYPE_SNAPSHOT = DEFAULT_PREF.getBoolean("vertype_snapshot", false);
 		PREF_VERTYPE_OLDALPHA = DEFAULT_PREF.getBoolean("vertype_oldalpha", false);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -88,6 +88,9 @@ public void onPageScrollStateChanged(int state) {
         tvUsernameView = (TextView) findViewById(R.id.launchermain_text_welcome);
         mTextVersion = (TextView) findViewById(R.id.launcherMainVersionView);
 
+        //The following line is used to make this TextView horizontally scroll if the version name is larger than the view
+        mTextVersion.setSelected(true);
+
         Tabs[0] = findViewById(R.id.btnTab1);
         Tabs[1] = findViewById(R.id.btnTab2);
         Tabs[2] = findViewById(R.id.btnTab3);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -88,6 +88,9 @@ public void onPageScrollStateChanged(int state) {
         tvUsernameView = (TextView) findViewById(R.id.launchermain_text_welcome);
         mTextVersion = (TextView) findViewById(R.id.launcherMainVersionView);
 
+        //The following line is used to make this TextView horizontally scroll if the version name is larger than the view
+        mTextVersion.setSelected(true);
+
         Tabs[0] = findViewById(R.id.btnTab1);
         Tabs[1] = findViewById(R.id.btnTab2);
         Tabs[2] = findViewById(R.id.btnTab3);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseLauncherActivity.java
Patch:
@@ -220,7 +220,7 @@ public void run()
             File lastCrashFile = Tools.lastFileModified(Tools.DIR_HOME_CRASH);
             if(CrashFragment.isNewCrash(lastCrashFile) || !mCrashView.getLastCrash().isEmpty()){
                 mCrashView.resetCrashLog = false;
-                selectTabPage(2);
+                initTabs(2);
 
             } /*else throw new Exception();*/
         } catch(Throwable e) {
@@ -236,5 +236,5 @@ public boolean onTouchEvent(MotionEvent event) {
         return super.onTouchEvent(event);
     }
 
-    protected abstract void selectTabPage(int pageIndex);
+    protected abstract void initTabs(int pageIndex);
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/InvalidateTokenTask.java
Patch:
@@ -38,7 +38,7 @@ public void onPostExecute(Throwable result) {
         if (result != null) {
             Tools.showError(ctx, result);
         }
-        new File(path).delete();
+        boolean test = new File(Tools.DIR_ACCOUNT_NEW + "/" + path + ".json").delete();
     }
 }
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -201,6 +201,7 @@ public boolean onTouch(View view, MotionEvent event) {
                     MainActivity.sendKeyPress(mProperties.keycode, CallbackBridge.getCurrentMods(), isDown);
                 } else if (mGestureDetector.onTouchEvent(event)) {
                     mChecked = !mChecked;
+                    invalidate();
                     setHolding(mChecked);
                     MainActivity.sendKeyPress(mProperties.keycode, CallbackBridge.getCurrentMods(), mChecked);
                 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -767,9 +767,9 @@ public boolean dispatchKeyEvent(KeyEvent event) {
             }
             CallbackBridge.nativePutControllerButtons(ByteBuffer.wrap(kevArray));
             return true;
-        }else if(event.getSource() == InputDevice.SOURCE_KEYBOARD) {
+        }else if((event.getFlags() & KeyEvent.FLAG_SOFT_KEYBOARD) == KeyEvent.FLAG_SOFT_KEYBOARD || event.getSource() == InputDevice.SOURCE_KEYBOARD) {
              AndroidLWJGLKeycode.execKey(event,event.getKeyCode(),event.getAction() == KeyEvent.ACTION_DOWN);
-            return true;
+            return false;
         }else return false;
     }
 

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/GLFWController.java
Patch:
@@ -21,7 +21,7 @@ public int getIndex() {
 
     @Override
     public int getButtonCount() {
-        return 0;
+        return 8;
     }
 
     @Override
@@ -81,7 +81,7 @@ public void setDeadZone(int index, float zone) {
 
     @Override
     public int getAxisCount() {
-        return 0;
+        return 8;
     }
 
     @Override

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/Controllers.java
Patch:
@@ -9,7 +9,7 @@ public static void create() {
     ctrlr = new GLFWController();
     ctrlr.jid = 0;
 }
-public static Controller getController() {
+public static Controller getController(int ctrl) {
     return ctrlr;
 }
 public static int getControllerCount() {

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/Mouse.java
Patch:
@@ -159,10 +159,9 @@ public class Mouse {
 	private static  boolean clipMouseCoordinatesToWindow = !getPrivilegedBoolean("org.lwjgl.input.Mouse.allowNegativeMouseCoords");
 	static int evt_prevX=0;
 	static int evt_prevY=0;
-	static boolean isBufferReadable;
+	static boolean isBufferReadable=true; // sed default readability
     public static void pushMouseEvent(int x, int y, byte button, boolean status, int dwheel) {
     	//LWJGL2 evt structure
-		if(!readBuffer.isReadOnly()) {
 			isBufferReadable = false;
 			readBuffer.put(button);
 			readBuffer.put((byte) (status ? 1 : 0));
@@ -181,7 +180,6 @@ public static void pushMouseEvent(int x, int y, byte button, boolean status, int
 			readBuffer.putInt(dwheel);
 			readBuffer.putLong(Sys.getNanoTime());
 			isBufferReadable = true;
-		}
 		evt_prevY = y;
 		evt_prevX = x;
     	//inserting events as soon as mouse generates them

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/Mouse.java
Patch:
@@ -289,7 +289,7 @@ private static void create(InputImplementation impl) throws LWJGLException {
 	 * @throws LWJGLException if the mouse could not be created for any reason
 	 */
 	public static void create() throws LWJGLException {
-			if (!Display.isCreated()) throw new IllegalStateException("Display must be created.");
+		//stub
 	}
 
 	/**

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/EventQueue.java
Patch:
@@ -7,8 +7,8 @@
 class EventQueue {
 
 	private int maxEvents = 32;
-	private int currentEventPos = 0;
-	private int nextEventPos = 1;
+	private int currentEventPos = -1;
+	private int nextEventPos = 0;
 
 	EventQueue(int maxEvents) {
 		this.maxEvents = maxEvents;

File: jre_lwjgl3glfw/src/main/java/org/lwjgl/input/Mouse.java
Patch:
@@ -98,6 +98,7 @@ public static void setMouseInsideWindow(boolean mouseInsideWindow) {
 	}
 
 	public static void poll() {
+		next();
 		lastX = x;
 		lastY = y;
 

File: app_pojavlauncher/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -55,7 +55,8 @@ public static void sendKeycode(int keycode, char keychar, int scancode, int modi
 */
 
         //nativeSendKeycode(keycode, keychar, scancode, isDown ? 1 : 0, modifiers);
-        if(keycode != 0 || !isDown)  nativeSendKey(keycode,scancode,isDown ? 1 : 0, modifiers);
+        if(keycode != 0)  nativeSendKey(keycode,scancode,isDown ? 1 : 0, modifiers);
+        else nativeSendKey(32,scancode,isDown ? 1 : 0, modifiers);
         if(isDown && keychar != '\u0000') {
             nativeSendCharMods(keychar,modifiers);
             nativeSendChar(keychar);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MinecraftGLView.java
Patch:
@@ -60,9 +60,7 @@ public Editable getEditable() {
     }
 
     public boolean commitText(CharSequence text, int newCursorPosition) {
-        Log.d("EnhancedTextInput","Text committed: "+text);
-        parent.sendKeyPress(text.charAt(0
-        ));
+        parent.sendKeyPress(text.charAt(0));
         return true;
     }
 

File: app_pojavlauncher/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -55,7 +55,7 @@ public static void sendKeycode(int keycode, char keychar, int scancode, int modi
 */
 
         //nativeSendKeycode(keycode, keychar, scancode, isDown ? 1 : 0, modifiers);
-        nativeSendKey(keycode,scancode,isDown ? 1 : 0, modifiers);
+        if(keycode != 0 || !isDown)  nativeSendKey(keycode,scancode,isDown ? 1 : 0, modifiers);
         if(isDown && keychar != '\u0000') {
             nativeSendCharMods(keychar,modifiers);
             nativeSendChar(keychar);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -624,7 +624,7 @@ protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
         
         Uri data = intent.getData();
-        Log.i("MicroAuth", data.toString());
+        //Log.i("MicroAuth", data.toString());
         if (data != null && data.getScheme().equals("ms-xal-00000000402b5328") && data.getHost().equals("auth")) {
             String error = data.getQueryParameter("error");
             String error_description = data.getQueryParameter("error_description");

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -809,12 +809,10 @@ public void onLoginDone(String[] result) {
                             builder.profileId = result[3];
                             builder.username = result[4];
                             builder.selectedVersion = "1.12.2";
-                            
                             mProfile = builder;
                         }
                         v.setEnabled(true);
                         prb.setVisibility(View.GONE);
-                        
                         playProfile(false);
                     }
                 }).execute(edit2.getText().toString(), edit3.getText().toString());

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -808,7 +808,8 @@ public void onLoginDone(String[] result) {
                             builder.clientToken = result[2];
                             builder.profileId = result[3];
                             builder.username = result[4];
-
+                            builder.selectedVersion = "1.12.2";
+                            
                             mProfile = builder;
                         }
                         v.setEnabled(true);

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/RefreshTokenTask.java
Patch:
@@ -66,7 +66,7 @@ public Throwable doInBackground(String... args) {
     public void onPostExecute(Throwable result) {
         build.dismiss();
         if (result == null) {
-            listener.onSuccess(null);
+            listener.onSuccess(profilePath);
         } else {
             listener.onFailed(result);
         }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -27,7 +27,7 @@ public static MinecraftAccount parse(String content) throws JsonSyntaxException
     }
     
     public static MinecraftAccount load(String name) throws IOException, JsonSyntaxException {
-        MinecraftAccount acc = parse(Tools.read(Tools.DIR_ACCOUNT_NEW + "/" + name + ".json"));
+        MinecraftAccount acc = parse(Tools.read(name));
         if (acc.accessToken == null) {
             acc.accessToken = "0";
         } if (acc.clientToken == null) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -27,7 +27,7 @@ public static MinecraftAccount parse(String content) throws JsonSyntaxException
     }
     
     public static MinecraftAccount load(String name) throws IOException, JsonSyntaxException {
-        MinecraftAccount acc = parse(Tools.read(Tools.DIR_ACCOUNT_NEW + "/" + name + ".json"));
+        MinecraftAccount acc = parse(Tools.read(name));
         if (acc.accessToken == null) {
             acc.accessToken = "0";
         } if (acc.clientToken == null) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -15,7 +15,7 @@ public class MinecraftAccount
     
     public String save(String outPath) throws IOException {
         Tools.write(outPath, Tools.GLOBAL_GSON.toJson(this));
-        return outPath;
+        return username;
     }
     
     public String save() throws IOException {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -736,7 +736,7 @@ public void onSuccess(MinecraftAccount out) {
                                                 @Override
                                                 public void onClick(DialogInterface p1, int p2) {
                                                     new InvalidateTokenTask(PojavLoginActivity.this)
-                                                        .execute(Tools.DIR_ACCOUNT_NEW + "/" + selectedAccName + ".json");
+                                                        .execute(selectedAccName);
                                                     listAdapter.remove(selectedAccName);
                                                     listAdapter.notifyDataSetChanged();
                                                 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavProfile.java
Patch:
@@ -79,6 +79,6 @@ public static void launch(Activity ctx, Object o) {
     }
 
     public static void updateTokens(final Activity ctx, final String name, RefreshListener listen) throws Exception {
-        new RefreshTokenTask(ctx, listen).execute(Tools.DIR_ACCOUNT_NEW + "/" + name + ".json");
+        new RefreshTokenTask(ctx, listen).execute(name);
     }
 }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/customcontrols/handleview/HandleView.java
Patch:
@@ -372,6 +372,9 @@ public boolean onTouchEvent(MotionEvent ev) {
                     int newWidth = (int) (mDownWidth + (rawX - mDownX));
                     int newHeight = (int) (mDownHeight + (rawY - mDownY));
                     
+                    mDownX = rawX;
+                    mDownY = rawY;
+                    
                     params.width = Math.max(50, newWidth);
                     params.height = Math.max(50, newHeight);
                     

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -567,7 +567,7 @@ private String getMoving(float pos, boolean xOrY) {
                     @Override
                     public boolean onCapturedPointer (View view, MotionEvent e) {
                             x += ((int) e.getX()) / scaleFactor;
-                            y -= ((int) e.getY()) / scaleFactor;
+                            y += ((int) e.getY()) / scaleFactor;
 
                             if (debugText.getVisibility() == View.VISIBLE && !debugErrored) {
                                 StringBuilder builder = new StringBuilder();

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavProfile.java
Patch:
@@ -23,7 +23,7 @@ private static SharedPreferences getPrefs(Context ctx) {
 	public static MinecraftAccount getCurrentProfileContent(Context ctx) throws IOException, JsonSyntaxException {
 		MinecraftAccount build = MinecraftAccount.load(getCurrentProfileName(ctx));
         if (build == null) {
-            getTempProfileContent(ctx);
+            return getTempProfileContent(ctx);
         }
         return build;
 	}

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavProfile.java
Patch:
@@ -36,7 +36,7 @@ public static String getCurrentProfileName(Context ctx) {
         String name = getPrefs(ctx).getString(PROFILE_PREF_FILE, "");
         // A dirty fix
         if (!name.isEmpty() && name.startsWith(Tools.DIR_ACCOUNT_NEW) && name.endsWith(".json")) {
-            name = name.substring(0, name.length() - 5).replace(Tools.DIR_ACCOUNT_NEW, "");
+            name = name.substring(0, name.length() - 5).replace(Tools.DIR_ACCOUNT_NEW, "").replace(".json", "");
             setCurrentProfile(ctx, name);
         }
         return name;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -717,10 +717,10 @@ public void onSuccess(MinecraftAccount out) {
                                                 new MicrosoftAuthTask(PojavLoginActivity.this, authListener)
                                                     .execute("true", acc.msaRefreshToken);
                                             } else if (acc.accessToken.length() >= 5) {
-                                                MCProfile.updateTokens(PojavLoginActivity.this, selectedAccName, authListener);
+                                                PojavProfile.updateTokens(PojavLoginActivity.this, selectedAccName, authListener);
                                             } else {
                                                 di.dismiss();
-                                                MCProfile.launch(PojavLoginActivity.this, selectedAccName);
+                                                PojavProfile.launch(PojavLoginActivity.this, selectedAccName);
                                             }
                                         } catch (Exception e) {
                                             Tools.showError(PojavLoginActivity.this, e);
@@ -826,7 +826,7 @@ private void playProfile(boolean notOnLogin) {
                     profileName = mProfile.save();
                 }
                 
-                MCProfile.launch(PojavLoginActivity.this, profileName == null ? mProfile : profileName);
+                PojavProfile.launch(PojavLoginActivity.this, profileName == null ? mProfile : profileName);
             } catch (IOException e) {
                 Tools.showError(this, e);
             }

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -39,7 +39,6 @@ public class MCLauncherActivity extends BaseLauncherActivity
     private TabLayout tabLayout;
 
     private TextView tvUsernameView;
-    private String profilePath = null;
     private ViewPagerAdapter viewPageAdapter;
 
     private Button switchUsrBtn, logoutBtn; // MineButtons
@@ -74,7 +73,6 @@ protected void onCreate(Bundle savedInstanceState) {
         mTextVersion = (TextView) findViewById(R.id.launcherMainVersionView);
 
         try {
-            profilePath = PojavProfile.getCurrentProfilePath(this);
             mProfile = PojavProfile.getCurrentProfileContent(this);
 
             tvUsernameView.setText(getString(R.string.main_welcome, mProfile.username));

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/AuthenticateRequest.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/AuthenticateResponse.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/ErrorResponse.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 public class ErrorResponse {
     public String cause;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/NetworkResponse.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 import java.util.*;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/Profile.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 public class Profile {
     public String id;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/RefreshRequest.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/RefreshResponse.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/YggdrasilAuthenticator.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil;
 
 import android.util.*;
 import java.io.*;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MCProfile.java
Patch:
@@ -4,8 +4,8 @@
 import android.content.*;
 import android.util.*;
 import android.view.*;
-import com.kdt.mojangauth.*;
 import java.io.*;
+import net.kdt.pojavlaunch.authenticator.mojang.*;
 
 public class MCProfile
 {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -18,11 +18,11 @@
 import android.view.*;
 import android.widget.*;
 import android.widget.CompoundButton.*;
-import com.kdt.mojangauth.*;
 import com.kdt.pickafile.*;
 import java.io.*;
 import java.util.*;
 import net.kdt.pojavlaunch.authenticator.microsoft.*;
+import net.kdt.pojavlaunch.authenticator.mojang.*;
 import net.kdt.pojavlaunch.customcontrols.*;
 import net.kdt.pojavlaunch.prefs.*;
 import net.kdt.pojavlaunch.utils.*;
@@ -688,7 +688,6 @@ public void onClick(DialogInterface p1, int p2)
         
         builder.setPositiveButton(android.R.string.cancel, null);
         builder.setTitle(this.getString(R.string.login_select_account));
-        builder.setMessage(R.string.hint_select_account);
         builder.setSingleChoiceItems(listAdapter, 0, new DialogInterface.OnClickListener(){
                 @Override
                 public void onClick(final DialogInterface di, final int selectedIndex) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/MicrosoftAuthTask.java
Patch:
@@ -4,13 +4,13 @@
 import android.content.*;
 import android.os.*;
 import android.util.*;
-import com.kdt.mojangauth.*;
-import com.kdt.mojangauth.yggdrasil.*;
 
 import java.net.*;
 import java.text.*;
 import java.util.*;
 import net.kdt.pojavlaunch.*;
+import net.kdt.pojavlaunch.authenticator.mojang.*;
+import net.kdt.pojavlaunch.authenticator.microsoft.*;
 import org.json.*;
 
 import java.text.ParseException;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/InvalidateTokenTask.java
Patch:
@@ -1,8 +1,8 @@
-package com.kdt.mojangauth;
+package net.kdt.pojavlaunch.authenticator.mojang;
 
 import android.content.*;
 import android.os.*;
-import com.kdt.mojangauth.yggdrasil.*;
+import net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 import java.io.*;
 import java.util.*;
 import net.kdt.pojavlaunch.*;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/LoginListener.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth;
+package net.kdt.pojavlaunch.authenticator.mojang;
 
 public interface LoginListener
 {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/LoginTask.java
Patch:
@@ -1,7 +1,7 @@
-package com.kdt.mojangauth;
+package net.kdt.pojavlaunch.authenticator.mojang;
 
 import android.os.*;
-import com.kdt.mojangauth.yggdrasil.*;
+import net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 import java.io.*;
 import java.util.*;
 import net.kdt.pojavlaunch.*;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/RefreshListener.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth;
+package net.kdt.pojavlaunch.authenticator.mojang;
 
 import net.kdt.pojavlaunch.*;
 import net.kdt.pojavlaunch.value.*;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/RefreshTokenTask.java
Patch:
@@ -1,11 +1,11 @@
-package com.kdt.mojangauth;
+package net.kdt.pojavlaunch.authenticator.mojang;
 
 import android.content.*;
 import android.os.*;
 import com.google.gson.*;
 import java.util.*;
 import net.kdt.pojavlaunch.*;
-import com.kdt.mojangauth.yggdrasil.*;
+import net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 import android.app.*;
 import net.kdt.pojavlaunch.value.*;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/AuthenticateRequest.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/AuthenticateResponse.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/ErrorResponse.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 public class ErrorResponse {
     public String cause;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/NetworkResponse.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 import java.util.*;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/Profile.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 public class Profile {
     public String id;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/RefreshRequest.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/RefreshResponse.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 import java.util.UUID;
 

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/authenticator/mojang/yggdrasil/YggdrasilAuthenticator.java
Patch:
@@ -1,4 +1,4 @@
-package com.kdt.mojangauth.yggdrasil;
+package net.kdt.pojavlaunch.authenticator.mojang.yggdrasil.*;
 
 import android.util.*;
 import java.io.*;

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/MCProfile.java
Patch:
@@ -24,8 +24,8 @@ public static void launch(Activity ctx, Object o) {
         ctx.startActivity(intent);
     }
     
-    public static void updateTokens(final Activity ctx, final String pofFilePath, RefreshListener listen) throws Exception {
-        new RefreshTokenTask(ctx, listen).execute(pofFilePath);
+    public static void updateTokens(final Activity ctx, final String name, RefreshListener listen) throws Exception {
+        new RefreshTokenTask(ctx, listen).execute(Tools.DIR_ACCOUNT_NEW + "/" + name + ".json");
     }
     
     public static String build(MCProfile.Builder builder) {

File: app_pojavlauncher/src/main/java/net/kdt/pojavlaunch/value/MinecraftAccount.java
Patch:
@@ -26,8 +26,8 @@ public static MinecraftAccount parse(String content) throws JsonSyntaxException
         return Tools.GLOBAL_GSON.fromJson(content, MinecraftAccount.class);
     }
     
-    public static MinecraftAccount load(String path) throws IOException, JsonSyntaxException {
-        MinecraftAccount acc = parse(Tools.read(path));
+    public static MinecraftAccount load(String name) throws IOException, JsonSyntaxException {
+        MinecraftAccount acc = parse(Tools.read(Tools.DIR_ACCOUNT_NEW + "/" + name + ".json"));
         if (acc.accessToken == null) {
             acc.accessToken = "0";
         } if (acc.profileId == null) {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -79,7 +79,7 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
         List<String> overrideableArgList = new ArrayList<String>();
 
         overrideableArgList.add("-Djava.security.manager");
-        overrideableArgList.add("-Djava.security.policy=java_sandbox.policy");
+        overrideableArgList.add("-Djava.security.policy==java_sandbox.policy");
         
         overrideableArgList.add("-Djava.home=" + Tools.DIR_HOME_JRE);
         overrideableArgList.add("-Djava.io.tmpdir=" + ctx.getCacheDir().getAbsolutePath());

File: app/src/main/java/net/kdt/pojavlaunch/PojavMigrator.java
Patch:
@@ -46,14 +46,14 @@ public static boolean migrateBugFix20201217() throws IOException, InterruptedExc
         File bugGameDir = new File(Tools.DIR_GAME_NEW + "/.minecraft");
         File oldGameDir = new File(Tools.DIR_GAME_OLD);
         boolean moved = bugGameDir.exists() && bugGameDir.isDirectory();
-        
+        /*
         if (oldGameDir.exists() && oldGameDir.isDirectory() && moved) {
             command("rm -rf " + oldGameDir.getAbsolutePath());
         }
-        
+        */
         if (moved) {
             command("mv " + bugGameDir.getAbsolutePath() + " " + Tools.DIR_GAME_OLD);
-            command("rm -rf " + Tools.DIR_GAME_HOME);
+            command("rm -rf " + Tools.DIR_GAME_HOME + "/*");
             command("mv " + Tools.DIR_GAME_OLD + " " + Tools.DIR_GAME_HOME + "/");
         }
 

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -301,6 +301,7 @@ private void initMain() throws Throwable {
         mkdirs(Tools.DIR_ACCOUNT_NEW);
         PojavMigrator.migrateAccountData(this);
         
+        mkdirs(Tools.DIR_GAME_HOME);
         if (!PojavMigrator.migrateGameDir()) {
             mkdirs(Tools.DIR_GAME_NEW);
             mkdirs(Tools.DIR_GAME_NEW + "/config");

File: app/src/main/java/net/kdt/pojavlaunch/PojavMigrator.java
Patch:
@@ -61,8 +61,7 @@ public static boolean migrateBugFix20201217() throws IOException, InterruptedExc
     }
     
     private static void command(String cmd) throws IOException, InterruptedException {
-        Process p = Runtime.getRuntime().exec(
-            new String[]{cmd});
+        Process p = Runtime.getRuntime().exec(cmd);
         int exitCode = p.waitFor();
         if (exitCode != 0) {
             throw new IOException("Exit code " + exitCode +

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -38,7 +38,7 @@ public final class Tools
     public static String DIR_ACCOUNT_NEW;
     public static String DIR_ACCOUNT_OLD;
     public static final String DIR_GAME_HOME = Environment.getExternalStorageDirectory().getAbsolutePath() + "/games/PojavLauncher";
-    public static final String DIR_GAME_NEW = DIR_GAME_NEW + "/.minecraft";
+    public static final String DIR_GAME_NEW = DIR_GAME_HOME + "/.minecraft";
     public static final String DIR_GAME_OLD = Environment.getExternalStorageDirectory().getAbsolutePath() + "/games/.minecraft";
     
     // New since 3.0.0

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -141,9 +141,9 @@ public static String[] getMinecraftArgs(MinecraftAccount profile, JMinecraftVers
         gameDir.mkdirs();
 
         Map<String, String> varArgMap = new ArrayMap<String, String>();
-        varArgMap.put("auth_access_token", profile.accessToken);
+        varArgMap.put("auth_access_token", profile.accessToken == null ? "0" : profile.accessToken);
         varArgMap.put("auth_player_name", username);
-        varArgMap.put("auth_uuid", profile.profileId);
+        varArgMap.put("auth_uuid", profile.profileId == null ? "0" : profile.profileId);
         varArgMap.put("assets_root", Tools.ASSETS_PATH);
         varArgMap.put("assets_index_name", versionInfo.assets);
         varArgMap.put("game_assets", Tools.ASSETS_PATH);

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -36,7 +36,6 @@ public class BaseMainActivity extends LoggableActivity {
     private int fingerStillThreshold = 8;
     private int initialX;
     private int initialY;
-    private boolean resuming;
     private static final int MSG_LEFT_MOUSE_BUTTON_CHECK = 1028;
     private static final int MSG_DROP_ITEM_BUTTON_CHECK = 1029;
     private static boolean triggeredLeftMouseButton = false;
@@ -99,6 +98,7 @@ public void handleMessage(Message msg) {
      private LinearLayout contentCanvas;
      private AWTSurfaceView contentCanvasView;
      */
+    private boolean resuming;
     private boolean lastEnabled = false;
     private boolean lastGrab = false;
     private boolean isExited = false;

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -298,7 +298,9 @@ private boolean isJavaRuntimeInstalled(AssetManager am) {
     }
    
     private void initMain() throws Throwable {
+        mkdirs(Tools.DIR_ACCOUNT_NEW);
         PojavMigrator.migrateAccountData(this);
+        
         if (!PojavMigrator.migrateGameDir()) {
             mkdirs(Tools.DIR_GAME_NEW);
             mkdirs(Tools.DIR_GAME_NEW + "/config");

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -31,12 +31,12 @@ public class BaseMainActivity extends LoggableActivity {
         LWJGLGLFWKeycode.GLFW_KEY_4, LWJGLGLFWKeycode.GLFW_KEY_5,   LWJGLGLFWKeycode.GLFW_KEY_6,
         LWJGLGLFWKeycode.GLFW_KEY_7, LWJGLGLFWKeycode.GLFW_KEY_8, LWJGLGLFWKeycode.GLFW_KEY_9};
 
-    private boolean rightOverride;
+    private rightOverride;
     private int scaleFactor = 1;
     private int fingerStillThreshold = 8;
     private int initialX;
     private int initialY;
-    private boolean mIsResuming;
+    private mIsResuming;
     private static final int MSG_LEFT_MOUSE_BUTTON_CHECK = 1028;
     private static final int MSG_DROP_ITEM_BUTTON_CHECK = 1029;
     private static boolean triggeredLeftMouseButton = false;

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -31,12 +31,12 @@ public class BaseMainActivity extends LoggableActivity {
         LWJGLGLFWKeycode.GLFW_KEY_4, LWJGLGLFWKeycode.GLFW_KEY_5,   LWJGLGLFWKeycode.GLFW_KEY_6,
         LWJGLGLFWKeycode.GLFW_KEY_7, LWJGLGLFWKeycode.GLFW_KEY_8, LWJGLGLFWKeycode.GLFW_KEY_9};
 
-    private boolean rightOverride = false;
+    private boolean rightOverride;
     private int scaleFactor = 1;
     private int fingerStillThreshold = 8;
     private int initialX;
     private int initialY;
-    private boolean mIsResuming = false;
+    private boolean mIsResuming;
     private static final int MSG_LEFT_MOUSE_BUTTON_CHECK = 1028;
     private static final int MSG_DROP_ITEM_BUTTON_CHECK = 1029;
     private static boolean triggeredLeftMouseButton = false;

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -141,9 +141,9 @@ public static String[] getMinecraftArgs(MinecraftAccount profile, JMinecraftVers
         gameDir.mkdirs();
 
         Map<String, String> varArgMap = new ArrayMap<String, String>();
-        varArgMap.put("auth_access_token", profile.accessToken);
+        varArgMap.put("auth_access_token", profile.accessToken == null ? "0" : profile.accessToken);
         varArgMap.put("auth_player_name", username);
-        varArgMap.put("auth_uuid", profile.profileId);
+        varArgMap.put("auth_uuid", profile.profileId == null ? "0" : profile.profileId);
         varArgMap.put("assets_root", Tools.ASSETS_PATH);
         varArgMap.put("assets_index_name", versionInfo.assets);
         varArgMap.put("game_assets", Tools.ASSETS_PATH);

File: app/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/Msa.java
Patch:
@@ -58,7 +58,7 @@ public void acquireAccessToken(boolean isRefresh, String authcode) throws IOExce
          );*/
         data.put("client_id", "00000000402b5328");
         data.put(isRefresh ? "refresh_token" : "code", authcode);
-        data.put("grant_type", "authorization_code");
+        data.put("grant_type", isRefresh ? "refresh_token" : "authorization_code");
         data.put("redirect_url", "https://login.live.com/oauth20_desktop.srf");
         data.put("scope", "service::user.auth.xboxlive.com::MBI_SSL");
 

File: app/src/main/java/com/kdt/mojangauth/LoginTask.java
Patch:
@@ -38,7 +38,7 @@ protected String[] doInBackground(String[] args) {
                 if (response.selectedProfile == null) {
                     str.add("Can't login a demo account!\n");
                 } else {
-                    if (new File(Tools.DIR_DATA_PROFILES + "/" + response.selectedProfile.name).exists()) {
+                    if (new File(Tools.DIR_ACCOUNT_NEW + "/" + response.selectedProfile.name + ".json").exists()) {
                         str.add("This account already exist!\n");
                     } else {
                         str.add(response.accessToken);            // Access token

File: app/src/main/java/com/kdt/mojangauth/RefreshListener.java
Patch:
@@ -1,9 +1,10 @@
 package com.kdt.mojangauth;
 
 import net.kdt.pojavlaunch.*;
+import net.kdt.pojavlaunch.value.*;
 
 public interface RefreshListener
 {
 	public void onFailed(Throwable e);
-	public void onSuccess(MCProfile.Builder profile);
+	public void onSuccess(MinecraftAccount profile);
 }

File: app/src/main/java/net/kdt/pojavlaunch/BaseLauncherActivity.java
Patch:
@@ -14,6 +14,7 @@
 import net.kdt.pojavlaunch.tasks.*;
 
 import androidx.appcompat.app.AlertDialog;
+import net.kdt.pojavlaunch.value.*;
 
 public abstract class BaseLauncherActivity extends BaseActivity {
 	public Button mPlayButton;
@@ -25,7 +26,7 @@ public abstract class BaseLauncherActivity extends BaseActivity {
     
     public JMinecraftVersionList mVersionList;
 	public MinecraftDownloaderTask mTask;
-	public MCProfile.Builder mProfile;
+	public MinecraftAccount mProfile;
 	public String[] mAvailableVersions;
     
 	public boolean mIsAssetsProcessing = false;
@@ -147,7 +148,7 @@ public void launchGame(View v) {
         } else if (canBack) {
             v.setEnabled(false);
             mTask = new MinecraftDownloaderTask(this);
-            mTask.execute(mProfile.getVersion());
+            mTask.execute(mProfile.selectedVersion);
             mCrashView.resetCrashLog = true;
         }
     }

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -77,7 +77,7 @@ protected void onCreate(Bundle savedInstanceState) {
             profilePath = PojavProfile.getCurrentProfilePath(this);
             mProfile = PojavProfile.getCurrentProfileContent(this);
 
-            tvUsernameView.setText(getString(R.string.main_welcome, mProfile.getUsername()));
+            tvUsernameView.setText(getString(R.string.main_welcome, mProfile.username));
         } catch(Exception e) {
             //Tools.throwError(this, e);
             e.printStackTrace();

File: app/src/main/java/net/kdt/pojavlaunch/MCProfile.java
Patch:
@@ -33,12 +33,12 @@ public static String build(MCProfile.Builder builder) {
         
         try {
             byte[] bFull = toString(builder).getBytes("UTF-8");
-            Tools.write(Tools.DIR_DATA_PROFILES + "/" + builder.getUsername(), bFull);
+            Tools.write(Tools.DIR_ACCOUNT_OLD + "/" + builder.getUsername(), bFull);
         } catch (IOException e) {
             e.printStackTrace();
         }
         
-        return Tools.DIR_DATA_PROFILES + "/" + builder.getUsername();
+        return Tools.DIR_ACCOUNT_OLD + "/" + builder.getUsername();
     }
     
     public static MCProfile.Builder load(String pofFilePath) {

File: app/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -54,7 +54,9 @@ public void uncaughtException(Thread thread, Throwable th) {
 			
 			Tools.DIR_DATA = getDir("files", MODE_PRIVATE).getParent();
             Tools.DIR_HOME_JRE = Tools.DIR_DATA + "/jre_runtime";
-            Tools.DIR_DATA_PROFILES = Tools.DIR_DATA + "/Users";
+            Tools.DIR_ACCOUNT_OLD = Tools.DIR_DATA + "/Users";
+            Tools.DIR_ACCOUNT_NEW = Tools.DIR_DATA + "/accounts";
+            // Tools.FILE_ACCOUNT_JSON = getFilesDir().getAbsolutePath() + "/account_profiles.json";
             
             Tools.CURRENT_ARCHITECTURE = new File(getApplicationInfo().nativeLibraryDir).getName();
 			switch (Tools.CURRENT_ARCHITECTURE) {

File: app/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/Msa.java
Patch:
@@ -33,6 +33,7 @@ public class Msa {
 
     private MicrosoftAuthTask task;
 
+    public String msRefreshToken;
     public String mcName;
     public String mcToken;
     public String mcUuid;
@@ -77,6 +78,7 @@ public void acquireAccessToken(String authcode) throws IOException, JSONExceptio
         }
         if(conn.getResponseCode() >= 200 && conn.getResponseCode() < 300) {
             JSONObject jo = new JSONObject(Tools.read(conn.getInputStream()));
+            msRefreshToken = jo.getString("refresh_token");
             Log.i("MicroAuth","Acess Token = "+jo.getString("access_token"));
             acquireXBLToken(jo.getString("access_token"));
         }else{

File: app/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -65,7 +65,7 @@ public static void initJavaRuntime() {
         if (LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME.equals("libgl04es.so")) {
             LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME = nativeLibDir + "/libgl04es.so";
         }
-        if (!dlopen(LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME)) {
+        if (!dlopen(LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME) && !dlopen(findInLdLibPath(LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME))) {
             System.err.println("Failed to load custom OpenGL library " + LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME + ". Fallbacking to GL4ES.");
             dlopen(nativeLibDir + "/libgl04es.so");
         }

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -131,7 +131,7 @@ public void onItemSelected(AdapterView<?> p1, View p2, int position, long p4) {
                 if (tempProfile != null && position == 0) {
                     PojavProfile.setCurrentProfile(PojavLauncherActivity.this, tempProfile);
                 } else {
-                    PojavProfile.setCurrentProfile(PojavLauncherActivity.this, accountList.get(position + (tempProfile != null ? 1 : 0)));
+                    PojavProfile.setCurrentProfile(PojavLauncherActivity.this, Tools.mpProfiles + "/" + accountList.get(position + (tempProfile != null ? 1 : 0)));
                 }
                 pickAccount();
             }

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -822,7 +822,7 @@ public void onLoginDone(String[] result) {
                         v.setEnabled(true);
                         prb.setVisibility(View.GONE);
                         
-                        playProfile(true);
+                        playProfile(false);
                     }
                 }).execute(edit2.getText().toString(), edit3.getText().toString());
         }

File: app/src/main/java/net/kdt/pojavlaunch/PojavProfile.java
Patch:
@@ -40,6 +40,7 @@ public static boolean setCurrentProfile(Context ctx, Object obj) {
 			} else if (obj instanceof String) {
 				pref.putString(PROFILE_PREF_FILE, (String) obj);
 				pref.putString(PROFILE_PREF_CONTENT, MCProfile.toString((String) obj));
+                pref.putString(PROFILE_PREF_TEMP_CONTENT, "");
 			} else if (obj == null) {
 				pref.putString(PROFILE_PREF_FILE, "");
 				pref.putString(PROFILE_PREF_CONTENT, "");

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -106,9 +106,9 @@ protected void onCreate(Bundle savedInstanceState) {
 
         final List<String> accountList = new ArrayList<String>();
         final MCProfile.Builder tempProfile = PojavProfile.getTempProfileContent(this);
-        if (tempProfile != null) {
-            accountList.add(tempProfile.getUsername());
-        }
+        //if (tempProfile != null) {
+        //    accountList.add(tempProfile.getUsername());
+        //}
         accountList.addAll(Arrays.asList(new File(Tools.mpProfiles).list()));
         
         ArrayAdapter<String> adapterAcc = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, accountList);

File: app/src/main/java/android/support/design/widget/VerticalTabLayout.java
Patch:
@@ -1743,8 +1743,8 @@ final void update() {
                 if (mIconView == null) {
                     ImageView iconView = (ImageView) LayoutInflater.from(getContext())
                             .inflate(R.layout.design_layout_tab_icon, this, false);
-                    iconView.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
-                        ViewGroup.LayoutParams.MATCH_PARENT));
+                    iconView.setLayoutParams(new LinearLayout.LayoutParams(dpToPx(25),
+                        dpToPx(25)));
                     addView(iconView, 0);
                     mIconView = iconView;
                 }
@@ -1753,7 +1753,7 @@ final void update() {
                             .inflate(R.layout.design_layout_tab_text, this, false);
                     LinearLayout.LayoutParams textParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
                         ViewGroup.LayoutParams.MATCH_PARENT);
-                    textParams.gravity = Gravity.TOP | Gravity.CENTER_VERTICAL;
+                    textParams.gravity = Gravity.CENTER_VERTICAL;
                     textView.setLayoutParams(textParams);
                     addView(textView);
                     mTextView = textView;

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -430,15 +430,15 @@ private void initMain()
             }
             if(new File(Tools.homeJreDir+"/versions").isDirectory()) {
                FileUtils.deleteDirectory(new File(Tools.homeJreDir+"/versions"));
-               Tools.copyAssetFile(this, "components/jre/version", Tools.homeJreDir + "/",s, true);
+               Tools.copyAssetFile(this, "components/jre/version", Tools.homeJreDir + "/","version", true);
             }
             if (!isJavaRuntimeInstalled(am)) {
                 if(!installRuntimeAutomatically(am)) {
                     File jreTarFile = selectJreTarFile();
                     uncompressTarXZ(jreTarFile, new File(Tools.homeJreDir));
                 }
                 setPref(PREF_IS_INSTALLED_JAVARUNTIME, true);
-                Tools.copyAssetFile(this, "components/jre/version", Tools.homeJreDir + "/",s, true);
+                Tools.copyAssetFile(this, "components/jre/version", Tools.homeJreDir + "/","version", true);
             }
             
             JREUtils.relocateLibPath(this);

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -218,7 +218,7 @@ public void run(){
             String line;
             while ((line = reader.readLine()) != null) {
                 File currFile = new File("/" + line);
-                System.out.println(currFile.getAbsolutePath());
+                // System.out.println(currFile.getAbsolutePath());
                 if (currFile.getAbsolutePath().contains("/values-") || currFile.getName().startsWith("values-")) {
                     // TODO use regex(?)
                     langAdapter.add(new DisplayableLocale(currFile.getName().replace("values-", "").replace("-r", "-")));
@@ -371,7 +371,7 @@ private void initMain()
         String forgeSplashContent = "enabled=true";
         try {
             if (forgeSplashFile.exists()) {
-                forgeSplashContent = Tools.read(forgeSplashFile.toString());
+                forgeSplashContent = Tools.read(forgeSplashFile.getAbsolutePath());
             }
             if (forgeSplashContent.contains("enabled=true")) {
                 Tools.write(forgeSplashFile.getAbsolutePath(),
@@ -386,7 +386,7 @@ private void initMain()
         try {
             new CustomControls(this).save(Tools.CTRLDEF_FILE);
 
-            Tools.copyAssetFile(this, "components/ForgeInstallerHeadless/forge-installer-headless.jar", Tools.MAIN_PATH + "/config", "forge-installer-headless.jar", true);
+            Tools.copyAssetFile(this, "components/ForgeInstallerHeadless/forge-installer-headless-1.0.1.jar", Tools.MAIN_PATH + "/config", "forge-installer-headless.jar", true);
             
             Tools.copyAssetFile(this, "options.txt", Tools.MAIN_PATH, false);
             

File: app/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -166,7 +166,7 @@ private int doCustomInstall(File modFile, String javaArgs) throws IOException {
         } else if (InstallerDetector.isForge1p12p2(installer)) {
             appendlnToLog("Detected Forge Installer 1.12.2!");
             return new Legacy1p12p2ForgeInstaller(installer).install(this);
-        } else if (InstallerDetector.isForge1p12p2(installer)) {
+        } else if (InstallerDetector.isForgeNew(installer)) {
             appendlnToLog("Detected Forge Installer 1.13 or above!");
             return new NewForgeInstaller(installer).install(this);
         } else if (InstallerDetector.isFabric(installer)) {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -109,7 +109,7 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
         overrideableArgList.add("-Dnet.minecraft.clientmodname=" + Tools.APP_NAME);
         
         // Disable FML Early Loading Screen to get Forge 1.14+ works
-        overrideableArgList.add("-Dfml.earlyprogresswindow", "false");
+        overrideableArgList.add("-Dfml.earlyprogresswindow=false");
         
         // Override args
         for (String argOverride : LauncherPreferences.PREF_CUSTOM_JAVA_ARGS.split(" ")) {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -509,8 +509,8 @@ public static JMinecraftVersionList.Version getVersionInfo(String versionName) {
                 try {
                     for (DependentLibrary lib : customVer.libraries) {
                         String libName = lib.name.substring(0, lib.name.lastIndexOf(":"));
-                        for (int i = 0; i < libList.size(); i++) {
-                            DependentLibrary libAdded = libList.get(i);
+                        for (int i = 0; i < inheritsVer.libraries.length; i++) {
+                            DependentLibrary libAdded = inheritsVer.libraries[i];
                             String libAddedName = libAdded.name.substring(0, libAdded.name.lastIndexOf(":"));
                             
                             System.out.println("Equals? " + lib.name + " and " + libAdded.name);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -512,6 +512,8 @@ public static JMinecraftVersionList.Version getVersionInfo(String versionName) {
                         for (int i = 0; i < libList.size(); i++) {
                             DependentLibrary libAdded = libList.get(i);
                             String libAddedName = libAdded.name.substring(0, libAdded.name.lastIndexOf(":"));
+                            
+                            System.out.println("Equals? " + lib.name + " and " + libAdded.name);
                             if (libAddedName.equals(libName)) {
                                 Log.d(APP_NAME, "Library " + libName + ": Replaced version " + 
                                     libName.substring(libName.lastIndexOf(":") + 1) + " with " +

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -59,7 +59,6 @@ public static void launchMinecraft(final LoggableActivity ctx, MCProfile.Builder
         // ctx.appendlnToLog("Minecraft Args: " + Arrays.toString(launchArgs));
 
         String launchClassPath = generateLaunchClassPath(profile.getVersion());
-        System.out.println("Java Classpath: " + launchClassPath);
 
         List<String> javaArgList = new ArrayList<String>();
         

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -513,8 +513,10 @@ public static JMinecraftVersionList.Version getVersionInfo(String versionName) {
                             String libAddedName = libAdded.name.substring(0, libAdded.name.lastIndexOf(":"));
                             if (libAddedName.equals(libName)) {
                                 libList.set(i, lib);
+                                break;
                             } else {
                                 libList.add(lib);
+                                break;
                             }
                         }
                     }

File: app/src/main/java/com/kdt/mcgui/app/MineActivity.java
Patch:
@@ -19,7 +19,6 @@ public class MineActivity extends BaseActivity implements View.OnClickListener
     
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
         this.onCreate(savedInstanceState, true);
     }
     

File: app/src/main/java/net/kdt/pojavlaunch/authenticator/microsoft/MicrosoftAuthenticator.java
Patch:
@@ -253,6 +253,8 @@ private MinecraftAccount checkMcProfile(String mcAccessToken) throws IOException
 
         HttpRequest request = HttpRequest.newBuilder(uri)
             .header("Authorization", "Bearer " + mcAccessToken)
+            .header("Content-Type", "application/json")
+            .header("Accept", "application/json")
             .GET().build();
 
         HttpResponse resp = HttpClient.newBuilder().build().sendRequest(request, HttpResponse.BodyHandlers.ofString());

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -507,7 +507,9 @@ public static JMinecraftVersionList.Version getVersionInfo(String versionName) {
                 List<DependentLibrary> libList = new ArrayList<DependentLibrary>(Arrays.asList(inheritsVer.libraries));
                 try {
                     for (DependentLibrary lib : customVer.libraries) {
-                        libList.add(lib);
+                        if (lib.clientreq || !lib.serverreq) {
+                            libList.add(lib);
+                        }
                     }
                 } finally {
                     inheritsVer.libraries = libList.toArray(new DependentLibrary[0]);

File: app/src/main/java/net/kdt/pojavlaunch/value/DependentLibrary.java
Patch:
@@ -4,6 +4,9 @@ public class DependentLibrary {
     public String name;
 	public LibraryDownloads downloads;
     public String url;
+    
+    // Forge specific params
+    public boolean clientreq, serverreq;
 	
 	public static class LibraryDownloads
 	{

File: app/src/main/java/com/kdt/mojangauth/RefreshTokenTask.java
Patch:
@@ -25,7 +25,7 @@ public RefreshTokenTask(Context ctx, RefreshListener listener) {
     @Override
     public void onPreExecute() {
         build = new ProgressDialog(ctx);
-        build.setMessage("Refreshing");
+        build.setMessage(ctx.getString(R.string.global_waiting));
         build.setProgressStyle(ProgressDialog.STYLE_SPINNER);
         build.setCancelable(false);
         build.show();
@@ -37,7 +37,7 @@ public Throwable doInBackground(String... args) {
             this.profilePath = MCProfile.load(args[0]);
             int responseCode = 400;
             responseCode = this.authenticator.validate(profilePath.getAccessToken()).statusCode;
-            if (400 <= responseCode) {
+            if (responseCode >= 200 && responseCode < 300) {
                 RefreshResponse response = this.authenticator.refresh(profilePath.getAccessToken(), UUID.fromString(profilePath.getClientID()));
                 // if (response == null) {
                     // throw new NullPointerException("Response is null?");

File: app/src/main/java/com/kdt/mojangauth/yggdrasil/NetworkResponse.java
Patch:
@@ -12,7 +12,7 @@ public NetworkResponse(int statusCode, Object response) {
     }
     
     public void throwExceptionIfNeed(String msg) {
-        if (statusCode >= 400) {
+        if (statusCode < 200 || statusCode >= 300) {
             throw new RuntimeException(msg);
         }
     }

File: app/src/main/java/net/kdt/pojavlaunch/CustomTabs.java
Patch:
@@ -2,8 +2,8 @@
 
 import android.content.*;
 import android.net.*;
-import android.widget.*;
-import androidx.browser.customtabs.*;
+import android.support.customtabs.*;
+// import androidx.browser.customtabs.*;
 
 public class CustomTabs {
 

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -80,14 +80,14 @@ protected void onCreate(Bundle savedInstanceState) {
         viewPager.setAdapter(viewPageAdapter);
         tabLayout.setupWithViewPager(viewPager);
 
-        tvUsernameView = (TextView) findViewById(R.id.launcherMainUsernameView);
+        tvUsernameView = (TextView) findViewById(R.id.launchermain_text_welcome);
         mTextVersion = (TextView) findViewById(R.id.launcherMainVersionView);
 
         try {
             profilePath = PojavProfile.getCurrentProfilePath(this);
             mProfile = PojavProfile.getCurrentProfileContent(this);
 
-            tvUsernameView.setText(mProfile.getUsername());
+            tvUsernameView.setText(getString(R.string.main_welcome, mProfile.getUsername()));
         } catch(Exception e) {
             //Tools.throwError(this, e);
             e.printStackTrace();

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -85,14 +85,14 @@ protected void onCreate(Bundle savedInstanceState) {
         tabLayout.setupWithViewPager(viewPager);
         tabLayout.setLastTabAsBottom();
 
-        tvUsernameView = (TextView) findViewById(R.id.launcherMainUsernameView);
+        tvUsernameView = (TextView) findViewById(R.id.launchermain_text_welcome);
         mTextVersion = (TextView) findViewById(R.id.launcherMainVersionView);
 
         try {
             profilePath = PojavProfile.getCurrentProfilePath(this);
             mProfile = PojavProfile.getCurrentProfileContent(this);
 
-            tvUsernameView.setText(mProfile.getUsername());
+            tvUsernameView.setText(getString(R.string.main_welcome, mProfile.getUsername()));
         } catch(Exception e) {
             //Tools.throwError(this, e);
             e.printStackTrace();

File: app/src/main/java/net/kdt/pojavlaunch/AndroidLWJGLKeycode.java
Patch:
@@ -207,7 +207,7 @@ public static void execKey(KeyEvent keyEvent, int i, boolean isDown) {
             th.printStackTrace();
         }
 
-        if (isBackspaceAfterChar && (keyEvent.getDisplayLabel() + keyEvent.getUnicodeChar()) != KeyEvent.KEYCODE_UNKNOWN && !CallbackBridge.isGrabbing() && i != KeyEvent.KEYCODE_DEL) {
+        if (isBackspaceAfterChar && (keyEvent.getDisplayLabel() != KeyEvent.KEYCODE_UNKNOWN || keyEvent.isPrintingKey()) && !CallbackBridge.isGrabbing() && i != KeyEvent.KEYCODE_DEL) {
             BaseMainActivity.sendKeyPress(LWJGLGLFWKeycode.GLFW_KEY_BACKSPACE, 0, isDown);
         }
     }

File: app/src/main/java/net/kdt/pojavlaunch/MCProfile.java
Patch:
@@ -34,7 +34,7 @@ public static String build(MCProfile.Builder builder) {
         try {
             byte[] bFull = toString(builder).getBytes("UTF-8");
             Tools.write(Tools.mpProfiles + "/" + builder.getUsername(), bFull);
-        } catch (Exception e) {
+        } catch (IOException e) {
             e.printStackTrace();
         }
         

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -115,8 +115,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     Tools.write(logFile.getAbsolutePath(), logContent.replace(errMsg + "VM", errMsg + "JVM"));
                 }
             } catch (Throwable th) {
-                System.err.println("Could not detect java crash");
-                th.printStackTrace();
+                Log.w(Tools.APP_NAME, "Could not detect java crash", th);
             }
         }
 

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -345,7 +345,7 @@ private void initMain()
                     forgeSplashContent.replace("enabled=true", "enabled=false"));
             }
         } catch (IOException e) {
-            Log.w(Tools.APP_NAME, "Could not disable Forge splash screen!");
+            Log.w(Tools.APP_NAME, "Could not disable Forge splash screen!", e);
         }
         
         mkdirs(Tools.CTRLMAP_PATH);

File: app/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -139,9 +139,7 @@ public void run() {
                         return;
                     }
                 } catch (Throwable e) {
-                    Log.e("jrelog-logcat", "Exception on logging thread");
-                    e.printStackTrace();
-
+                    Log.e("jrelog-logcat", "Exception on logging thread", e);
                     act.appendlnToLog("Exception on logging thread:\n" + Log.getStackTraceString(e));
                 }
             }

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -170,6 +170,8 @@ public boolean onNavigationItemSelected(MenuItem menuItem) {
             // Mouse pointer part
             //this.mouseToggleButton = findButton(R.id.control_togglemouse);
             this.touchPad = (LinearLayout) findViewById(R.id.main_touchpad);
+            touchPad.setFocusable(false);
+            
             this.mousePointer = (ImageView) findViewById(R.id.main_mouse_pointer);
             this.mousePointer.post(new Runnable(){
 
@@ -321,7 +323,7 @@ public boolean onTouch(View v, MotionEvent event) {
             minecraftGLView.setFocusable(false);
             minecraftGLView.setFocusableInTouchMode(false);
             // minecraftGLView.setEGLContextClientVersion(2);
-
+            
             glTouchListener = new OnTouchListener(){
                 private boolean isTouchInHotbar = false;
                 private int hotbarX, hotbarY;

File: app/src/main/java/net/kdt/pojavlaunch/BaseLauncherActivity.java
Patch:
@@ -179,7 +179,7 @@ protected void onResumeFragments() {
 
         try{
             final ProgressDialog barrier = new ProgressDialog(this);
-            barrier.setMessage(R.string.global_waiting);
+            barrier.setMessage(getString(R.string.global_waiting));
             barrier.setProgressStyle(barrier.STYLE_SPINNER);
             barrier.setCancelable(false);
             barrier.show();

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -203,9 +203,6 @@ protected void selectTabPage(int pageIndex){
     }
 
     public void statusIsLaunching(boolean isLaunching) {
-        // As preference fragment put to tab, changes without notice, so need re-load pref
-        if (isLaunching) LauncherPreferences.loadPreferences();
-        
         LinearLayout.LayoutParams reparam = new LinearLayout.LayoutParams((int) updateWidthHeight(), LinearLayout.LayoutParams.WRAP_CONTENT);
         ViewGroup.MarginLayoutParams lmainTabParam = (ViewGroup.MarginLayoutParams) fullTab.getLayoutParams();
         int launchVisibility = isLaunching ? View.VISIBLE : View.GONE;

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -308,7 +308,7 @@ public void onResume() {
     private boolean isJavaRuntimeInstalled(AssetManager am) {
         boolean prefValue = firstLaunchPrefs.getBoolean(PREF_IS_INSTALLED_JAVARUNTIME, false);
         try {
-            return prefValue && Tools.read(new FileInputStream(Tools.homeJreDir+"/version")).equals(Tools.read(am.open("components/jre/version")));
+            return prefValue && (am.open("components/jre/bin-" + Tools.currentArch.split("/")[0] + ".tar.xz") == null || Tools.read(new FileInputStream(Tools.homeJreDir+"/version")).equals(Tools.read(am.open("components/jre/version"))));
         } catch(IOException e) {
             Log.e("JVMCtl","failed to read file",e);
             return prefValue;

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceActivity.java
Patch:
@@ -15,7 +15,8 @@ protected void onCreate(Bundle savedInstanceState) {
 	@Override
 	public void onBackPressed() {
 		super.onBackPressed();
-		LauncherPreferences.loadPreferences();
 	}
+    
+    
 }
 

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -130,8 +130,8 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
         // javaArgList.add("-Dorg.lwjgl.libname=liblwjgl3.so");
         // javaArgList.add("-Dorg.lwjgl.system.jemalloc.libname=libjemalloc.so");
        
-        // overrideableArgList.add("-Dorg.lwjgl.opengl.libname=libgl04es.so");
-        overrideableArgList.add("-Dorg.lwjgl.opengl.libname=libgl4es_115.so");
+        overrideableArgList.add("-Dorg.lwjgl.opengl.libname=libgl04es.so");
+        // overrideableArgList.add("-Dorg.lwjgl.opengl.libname=libgl4es_115.so");
         
         // javaArgList.add("-Dorg.lwjgl.opengl.libname=libRegal.so");
 

File: app/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -194,8 +194,8 @@ public static void setJavaEnvironment(LoggableActivity ctx, @Nullable ShellProce
         envMap.put("TMPDIR", ctx.getCacheDir().getAbsolutePath());
         envMap.put("LIBGL_MIPMAP", "3");
         
-        // Fix white color on banner and sheep
-       // envMap.put("LIBGL_NORMALIZE", "1");
+        // Fix white color on banner and sheep, since GL4ES 1.1.5
+        envMap.put("LIBGL_NORMALIZE", "1");
    
         envMap.put("MESA_GLSL_CACHE_DIR", ctx.getCacheDir().getAbsolutePath());
         envMap.put("LD_LIBRARY_PATH", LD_LIBRARY_PATH);

File: app/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -195,7 +195,7 @@ public static void setJavaEnvironment(LoggableActivity ctx, @Nullable ShellProce
         envMap.put("LIBGL_MIPMAP", "3");
         
         // Fix white color on banner and sheep
-        envMap.put("LIBGL_NORMALIZE", "1");
+       // envMap.put("LIBGL_NORMALIZE", "1");
    
         envMap.put("MESA_GLSL_CACHE_DIR", ctx.getCacheDir().getAbsolutePath());
         envMap.put("LD_LIBRARY_PATH", LD_LIBRARY_PATH);

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -201,7 +201,7 @@ private void loadControl(String path) {
 
 			selectedName = new File(path).getName();
 			// Remove `.json`
-			selectedName = selectedName.substring(0, selectedName.length() - ControlData.getSpecialButtons().length);
+			selectedName = selectedName.substring(0, selectedName.length() - 5);
 		} catch (Exception e) {
 			Tools.showError(CustomControlsActivity.this, e);
 		}

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -176,8 +176,8 @@ public boolean onNavigationItemSelected(MenuItem menuItem) {
                 @Override
                 public void run() {
                     ViewGroup.LayoutParams params = mousePointer.getLayoutParams();
-                    params.width = (int) (mousePointer.getWidth() / 100f * LauncherPreferences.PREF_MOUSESCALE);
-                    params.height = (int) (mousePointer.getHeight() / 100f * LauncherPreferences.PREF_MOUSESCALE);
+                    params.width = (int) (36 / 100f * LauncherPreferences.PREF_MOUSESCALE);
+                    params.height = (int) (54 / 100f * LauncherPreferences.PREF_MOUSESCALE);
                 }
             });
 

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -69,6 +69,9 @@ public void addControlButton(ControlData controlButton) {
 	private void addControlView(ControlData controlButton) {
 		final ControlButton view = new ControlButton(this, controlButton);
 		view.setModifiable(mModifiable);
+        if (!mModifiable) {
+            view.setAlpha(view.getProperties().hidden ? 0f : 1.0f);
+        }
 		addView(view);
 
 		setModified(true);

File: app/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -53,6 +53,8 @@ public static void initJavaRuntime() {
         dlopen(findInLdLibPath("libnio.so"));
         dlopen(findInLdLibPath("libawt.so"));
         dlopen(findInLdLibPath("libawt_headless.so"));
+        dlopen(findInLdLibPath("libfreetype.so"));
+        dlopen(findInLdLibPath("libfontmanager.so"));
 
         dlopen(nativeLibDir + "/libopenal.so");
         

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -128,6 +128,7 @@ protected Integer doInBackground(Boolean[] params) {
                     if (revokeCount >= 3) {
                         Toast.makeText(PojavLoginActivity.this, R.string.toast_permission_denied, Toast.LENGTH_LONG).show();
                         finish();
+                        return 0;
                     }
                     
                     requestStoragePermission();

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlLayout.java
Patch:
@@ -39,6 +39,7 @@ public void loadLayout(String jsonPath) throws IOException, JsonSyntaxException
 
 	public void loadLayout(CustomControls controlLayout) {
         if (mModifiable) {
+            hideAllHandleViews();
             removeAllViews();
         }
 

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -307,7 +307,7 @@ public void onResume() {
     private boolean isJavaRuntimeInstalled(AssetManager am) {
         try {
             
-            return firstLaunchPrefs.getBoolean(PREF_IS_INSTALLED_JAVARUNTIME, false) && Tools.read(new FileInputStream(Tools.homeJreDir+"/version")).equals(Tools.read(am.open("components/jre/version"));
+            return firstLaunchPrefs.getBoolean(PREF_IS_INSTALLED_JAVARUNTIME, false) && Tools.read(new FileInputStream(Tools.homeJreDir+"/version")).equals(Tools.read(am.open("components/jre/version")));
         }catch(IOException e) {
             Log.e("JVMCtl","failed to read file",e);
             return firstLaunchPrefs.getBoolean(PREF_IS_INSTALLED_JAVARUNTIME, false);
@@ -385,7 +385,7 @@ private void initMain()
                     uncompressTarXZ(jreTarFile, new File(Tools.homeJreDir));
                 }
                 setPref(PREF_IS_INSTALLED_JAVARUNTIME, true);
-                Tools.copyAssetFile(this, "components/jre/version" + s, Tools.homeJreDir + "/version", true);
+                Tools.copyAssetFile(this, "components/jre/version", Tools.homeJreDir + "/version", true);
             }
             
             JREUtils.relocateLibPath(this);

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -372,7 +372,7 @@ private void initMain()
                 if (!Arrays.equals(release1,release2)) {
                     String[] lwjglFileList = am.list("components/lwjgl3");
                     for (String s : lwjglFileList) {
-                        Tools.copyAssetFile(this, "components/lwjgl3/" + s, Tools., true);
+                        Tools.copyAssetFile(this, "components/lwjgl3/" + s, Tools.MAIN_PATH+"/lwjgl3/",s, true);
                     }
                 } else {
                     Log.i("LWJGL3Prep","Pack is up-to-date with the launcher, continuing...");

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -411,7 +411,7 @@ private boolean installRuntimeAutomatically(AssetManager am) {
         InputStream is;
         FileOutputStream os;
         try {
-            is = am.open("components/runtime/universal.tar.xz");
+            is = am.open("components/jre/universal.tar.xz");
             os = new FileOutputStream(rtUniversal);
             IOUtils.copy(is,os);
             is.close();
@@ -422,7 +422,7 @@ private boolean installRuntimeAutomatically(AssetManager am) {
             return false;
         }
         try {
-            is = am.open("components/runtime/bin-" + Tools.currentArch.split("/")[0] + ".tar.xz");
+            is = am.open("components/jre/bin-" + Tools.currentArch.split("/")[0] + ".tar.xz");
             os = new FileOutputStream(rtPlatformDependent);
             IOUtils.copy(is, os);
             is.close();

File: app/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -142,9 +142,9 @@ public void openLogOutput(View v) {
 
     public void closeLogOutput(View view) {
         if (mSkipDetectMod) {
-            forceClose(null);
-        } else {
             contentLog.setVisibility(View.GONE);
+        } else {
+            forceClose(null);
         }
     }
     

File: app/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -54,7 +54,7 @@ public void onCheckedChanged(CompoundButton button, boolean isChecked) {
                 });
             
             final File modFile = (File) getIntent().getExtras().getSerializable("modFile");
-            final String javaArgs = getIntent().getExtras().getString("javaArgs", "");
+            final String javaArgs = getIntent().getExtras().getString("javaArgs");
 
             mTextureView = findViewById(R.id.installmod_surfaceview);
            
@@ -204,6 +204,8 @@ public void launchJavaRuntime(File modFile, String javaArgs) {
 
             // System.out.println(Arrays.toString(javaArgList.toArray(new String[0])));
 
+            appendlnToLog("Info: Java arguments: " + Arrays.toString(javaArgList.toArray(new String[0])));
+            
             Tools.launchJavaVM(this, javaArgList);
         } catch (Throwable th) {
             Tools.showError(this, th, true);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -75,7 +75,7 @@ public static void launchMinecraft(final LoggableActivity ctx, MCProfile.Builder
     
     public static void launchJavaVM(final LoggableActivity ctx, final List<String> args) throws Throwable {
         JREUtils.relocateLibPath(ctx);
-        ctx.appendlnToLog("LD_LIBRARY_PATH = " + JREUtils.LD_LIBRARY_PATH);
+        // ctx.appendlnToLog("LD_LIBRARY_PATH = " + JREUtils.LD_LIBRARY_PATH);
         
         List<String> javaArgList = new ArrayList<String>();
         javaArgList.add(Tools.homeJreDir + "/bin/java");

File: app/src/main/java/net/kdt/pojavlaunch/BaseLauncherActivity.java
Patch:
@@ -71,9 +71,7 @@ public void onClick(DialogInterface p1, int p2)
                             installMod(true);
                             break;
                         case 2: // Custom controls
-                            if (Tools.enableDevFeatures) {
-                                startActivity(new Intent(BaseLauncherActivity.this, CustomControlsActivity.class));
-                            }
+                            startActivity(new Intent(BaseLauncherActivity.this, CustomControlsActivity.class));
                             break;
                         case 3: // Settings
                             startActivity(new Intent(BaseLauncherActivity.this, LauncherPreferenceActivity.class));

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -1032,7 +1032,7 @@ public void hideKeyboard() {
     }
 
     public void showKeyboard() {
-        ((InputMethodManager) getSystemService(INPUT_METHOD_SERVICE)).showSoftInput(mKeyHandlerView, InputMethodManager.HIDE_IMPLICIT_ONLY);
+        ((InputMethodManager) getSystemService(INPUT_METHOD_SERVICE)).toggleSoftInput(InputMethodManager.SHOW_FORCED, InputMethodManager.HIDE_IMPLICIT_ONLY);
     }
 
     protected void setRightOverride(boolean val) {

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -197,12 +197,11 @@ public void onCheckedChanged(CompoundButton button, boolean isChecked)
            
             // toggleGui(null);
             this.drawerLayout.closeDrawers();
-/*
+
             mKeyHandlerView = findViewById(R.id.main_key_handler);
             mKeyHandlerView.setSingleLine(false);
             mKeyHandlerView.clearFocus();
-            mKeyHandlerView.setVisibility(View.GONE);
-*/
+            
             AndroidLWJGLKeycode.isBackspaceAfterChar = true; // mVersionInfo.minimumLauncherVersion >= 18;
 
             placeMouseAt(CallbackBridge.windowWidth / 2, CallbackBridge.windowHeight / 2);

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -86,7 +86,10 @@ public void setProperties(ControlData properties, boolean changePos) {
             // A non-special button or inside custom controls screen so skip listener
         } else if (properties.specialButtonListener instanceof View.OnClickListener) {
             setOnClickListener((View.OnClickListener) properties.specialButtonListener);
+            setOnLongClickListener(null);
+            setOnTouchListener(null);
         } else if (properties.specialButtonListener instanceof View.OnTouchListener) {
+            setOnLongClickListener(null);
             setOnTouchListener((View.OnTouchListener) properties.specialButtonListener);
         } else {
             throw new IllegalArgumentException("Field " + ControlData.class.getName() + ".specialButtonListener must be View.OnClickListener or View.OnTouchListener, but is " + properties.specialButtonListener.getClass().getName());

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -197,12 +197,12 @@ public void onCheckedChanged(CompoundButton button, boolean isChecked)
            
             // toggleGui(null);
             this.drawerLayout.closeDrawers();
-
+/*
             mKeyHandlerView = findViewById(R.id.main_key_handler);
             mKeyHandlerView.setSingleLine(false);
             mKeyHandlerView.clearFocus();
             mKeyHandlerView.setVisibility(View.GONE);
-            
+*/
             AndroidLWJGLKeycode.isBackspaceAfterChar = true; // mVersionInfo.minimumLauncherVersion >= 18;
 
             placeMouseAt(CallbackBridge.windowWidth / 2, CallbackBridge.windowHeight / 2);

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -199,9 +199,7 @@ public void onCheckedChanged(CompoundButton button, boolean isChecked)
             this.drawerLayout.closeDrawers();
 
             mKeyHandlerView = findViewById(R.id.main_key_handler);
-            mKeyHandlerView.setFocusable(true);
-            mKeyHandlerView.setFocusableInTouchMode(true);
-            mKeyHandlerView.requestFocus();
+            mKeyHandlerView.setSingleLine(false);
             
             AndroidLWJGLKeycode.isBackspaceAfterChar = true; // mVersionInfo.minimumLauncherVersion >= 18;
 

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -358,7 +358,9 @@ public static void copyAssetFile(Context ctx, String fileName, String output, St
     {
         try {
             File file = new File(output);
-            if(!file.exists()) file.mkdirs();
+            if(!file.exists()) {
+                file.mkdirs();
+            }
             File file2 = new File(output, outputName);
             if(!file2.exists() || overwrite){
                 write(file2.getAbsolutePath(), loadFromAssetToByte(ctx, fileName));

File: app/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -23,7 +23,7 @@ public class JavaGUILauncherActivity extends LoggableActivity {
     private File logFile;
     private PrintStream logStream;
     
-    private Object mDialogLock;
+    private Object mDialogLock = new Object();
 
     private boolean isLogAllow, mSkipDetectMod;
 

File: app/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -107,7 +107,7 @@ public void run() {
                     AlertDialog.Builder d = new AlertDialog.Builder(JavaGUILauncherActivity.this);
                     d.setCancelable(false);
                     d.setTitle(title);
-                    d.setView(message);
+                    d.setView(editText);
                     d.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener(){
 
                             @Override

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -196,7 +196,7 @@ public void onCheckedChanged(CompoundButton button, boolean isChecked)
             // toggleGui(null);
             this.drawerLayout.closeDrawers();
 
-            AndroidLWJGLKeycode.isBackspaceAfterChar = mVersionInfo.minimumLauncherVersion >= 18;
+            AndroidLWJGLKeycode.isBackspaceAfterChar = true; // mVersionInfo.minimumLauncherVersion >= 18;
 
             placeMouseAt(CallbackBridge.windowWidth / 2, CallbackBridge.windowHeight / 2);
             new Thread(new Runnable(){

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -48,7 +48,7 @@ public static void sendPrepareGrabInitialPos() {
     public static void sendKeycode(int keycode, char keychar, int modifiers, boolean isDown) {
         DEBUG_STRING.append("KeyCode=" + keycode + ", Char=" + keychar);
         // TODO CHECK: This may cause input issue, not receive input!
-        if (!nativeSendCharMods((int) keychar, modifiers) || !nativeSendChar((int) keychar)) {
+        if (!nativeSendCharMods((int) keychar, modifiers) || !nativeSendChar(keychar)) {
             nativeSendKey(keycode, 0 /* scancode */, isDown ? 1 : 0, modifiers);
         }
         
@@ -124,7 +124,7 @@ public static void sendData(int type, Object... dataArr) {
 */
 
     public static native boolean nativeAttachThreadToOther(boolean isAndroid, boolean isUsePushPoll);
-    private static native boolean nativeSendChar(int codepoint);
+    private static native boolean nativeSendChar(char codepoint /* int codepoint */);
     // GLFW: GLFWCharModsCallback deprecated, but is Minecraft still use?
     private static native boolean nativeSendCharMods(int codepoint, int mods);
     // private static native void nativeSendCursorEnter(int entered);

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -19,12 +19,12 @@ public void onCreatePreferences(Bundle b, String str) {
 		SeekBarPreference seek2 = (SeekBarPreference) findPreference("timeLongPressTrigger");
 		seek2.setMin(100);
 		seek2.setMax(1000);
-		seek2.setDefaultValue(500);
+		seek2.setValue(LauncherPreferences.PREF_LONGPRESS_TRIGGER);
         
         SeekBarPreference seek3 = (SeekBarPreference) findPreference("buttonscale");
         seek3.setMin(20);
         seek3.setMax(500);
-		seek3.setDefaultValue(100);
+		seek3.setValue((int) LauncherPreferences.PREF_BUTTONSIZE);
 	}
 
     @Override

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -19,12 +19,12 @@ public void onCreatePreferences(Bundle b, String str) {
 		SeekBarPreference seek2 = (SeekBarPreference) findPreference("timeLongPressTrigger");
 		seek2.setMin(100);
 		seek2.setMax(1000);
-		seek2.setValue(500);
+		seek2.setDefaultValue(500);
         
         SeekBarPreference seek3 = (SeekBarPreference) findPreference("buttonscale");
         seek3.setMin(20);
         seek3.setMax(500);
-		seek3.setValue(100);
+		seek3.setDefaultValue(100);
 	}
 
     @Override

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -15,7 +15,7 @@ public CustomControls() {
 	
 	public CustomControls(List<ControlData> mControlDataList) {
 		this.mControlDataList = mControlDataList;
-        this.scaledAt = 1f;
+        this.scaledAt = 100f;
 	}
 	
 	// Generate default control

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -20,7 +20,7 @@ public class LauncherPreferences
     public static String PREF_LANGUAGE = "default";
 	
 	public static void loadPreferences() {
-		PREF_BUTTONSIZE = DEFAULT_PREF.getFloat("buttonscale", 100f);
+		PREF_BUTTONSIZE = DEFAULT_PREF.getInt("buttonscale", 100);
 		PREF_FREEFORM = DEFAULT_PREF.getBoolean("freeform", false);
 		PREF_VERTYPE_RELEASE = DEFAULT_PREF.getBoolean("vertype_release", true);
 		PREF_VERTYPE_SNAPSHOT = DEFAULT_PREF.getBoolean("vertype_snapshot", false);

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -20,7 +20,7 @@ public class LauncherPreferences
     public static String PREF_LANGUAGE = "default";
 	
 	public static void loadPreferences() {
-		PREF_BUTTONSIZE = DEFAULT_PREF.getFloat("buttonscale", 100);
+		PREF_BUTTONSIZE = DEFAULT_PREF.getFloat("buttonscale", 100f);
 		PREF_FREEFORM = DEFAULT_PREF.getBoolean("freeform", false);
 		PREF_VERTYPE_RELEASE = DEFAULT_PREF.getBoolean("vertype_release", true);
 		PREF_VERTYPE_SNAPSHOT = DEFAULT_PREF.getBoolean("vertype_snapshot", false);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -344,7 +344,7 @@ public static void updateWindowSize(Activity ctx) {
     public static float dpToPx(float dp) {
         // 921600 = 1280 * 720, default scale
         // TODO better way to scaling
-        float scaledDp = dp / DisplayMetrics.DENSITY_XHIGH * currentDisplayMetrics.densityDpi;
+        float scaledDp = dp; // / DisplayMetrics.DENSITY_XHIGH * currentDisplayMetrics.densityDpi;
         return (scaledDp * currentDisplayMetrics.density);
     }
 

File: app/src/main/java/net/kdt/pojavlaunch/installers/BaseInstaller.java
Patch:
@@ -13,7 +13,7 @@ public void setInput(File file) throws IOException {
         mJarFile = new ZipFile(file);
     }
     
-    public void install(LoggableActivity ctx) throws IOException {}
+    public void install(JavaGUILauncherActivity ctx) throws IOException {}
     
     public void from(BaseInstaller base) {
         mFile = base.mFile;

File: app/src/main/java/net/kdt/pojavlaunch/installers/LegacyForgeInstaller.java
Patch:
@@ -15,7 +15,7 @@ public LegacyForgeInstaller(BaseInstaller i) {
     }
     
     @Override
-    public void install(LoggableActivity ctx) throws IOException {
+    public void install(JavaGUILauncherActivity ctx) throws IOException {
         String target;
         
         ctx.appendlnToLog("Reading install_profile.json");
@@ -40,6 +40,8 @@ public void install(LoggableActivity ctx) throws IOException {
         FileOutputStream out = new FileOutputStream(target);
         IOUtils.copy(mJarFile.getInputStream(mJarFile.getEntry(profile.install.filePath)), out);
         out.close();
+        
+        mJarFile.close();
     }
     
     public static ForgeInstallProfile readInstallProfile(BaseInstaller base) throws IOException, JsonSyntaxException {

File: app/src/main/java/net/kdt/pojavlaunch/installers/NewForgeInstaller.java
Patch:
@@ -16,7 +16,7 @@ public NewForgeInstaller(BaseInstaller i) {
     }
 
     @Override
-    public void install(LoggableActivity ctx) throws IOException {
+    public void install(JavaGUILauncherActivity ctx) throws IOException {
         String target;
 
         ctx.appendlnToLog("Reading install_profile.json");
@@ -42,6 +42,8 @@ public void install(LoggableActivity ctx) throws IOException {
         String downloadPath = "https://files.minecraftforge.net/maven/" + profile.path.replace(":", "/").replace("net.minecraftforge","net/minecraftforge") + "/forge-" + libInfos[2] + "-universal.jar";
         ctx.appendlnToLog("Downloading " + target);
         Tools.downloadFile(downloadPath, target);
+        
+        mJarFile.close();
     }
 
     public static ForgeInstallProfile readInstallProfile(BaseInstaller base) throws IOException, JsonSyntaxException {

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -20,7 +20,7 @@ public class LauncherPreferences
     public static String PREF_LANGUAGE = "default";
 	
 	public static void loadPreferences() {
-		PREF_BUTTONSIZE = DEFAULT_PREF.getFloat("controlSize", 1f);
+		PREF_BUTTONSIZE = DEFAULT_PREF.getFloat("buttonscale", 100);
 		PREF_FREEFORM = DEFAULT_PREF.getBoolean("freeform", false);
 		PREF_VERTYPE_RELEASE = DEFAULT_PREF.getBoolean("vertype_release", true);
 		PREF_VERTYPE_SNAPSHOT = DEFAULT_PREF.getBoolean("vertype_snapshot", false);

File: app/src/main/java/net/kdt/pojavlaunch/installers/NewForgeInstaller.java
Patch:
@@ -39,7 +39,7 @@ public void install(LoggableActivity ctx) throws IOException {
         File libraryFile = new File(Tools.libraries, Tools.artifactToPath(libInfos[0], libInfos[1], libInfos[2]));
         libraryFile.getParentFile().mkdirs();
         target = libraryFile.getAbsolutePath();
-        String downloadPath = "https://files.minecraftforge.net/maven/" + profile.path.replace(":", "/").replace("net.minecraftforge","net/minecraftforge" + "/forge-" + libInfos[2] + "-universal.jar";
+        String downloadPath = "https://files.minecraftforge.net/maven/" + profile.path.replace(":", "/").replace("net.minecraftforge","net/minecraftforge") + "/forge-" + libInfos[2] + "-universal.jar";
         ctx.appendlnToLog("Downloading " + target);
         Tools.downloadFile(downloadPath, target);
     }

File: app/src/main/java/net/kdt/pojavlaunch/installers/NewForgeInstaller.java
Patch:
@@ -27,7 +27,7 @@ public void install(LoggableActivity ctx) throws IOException {
         versionFile.mkdir();
         target = versionFile.getAbsolutePath() + "/" + profile.version + ".json";
         ctx.appendlnToLog("Writing " + target + " from " + profile.json);
-        ZipEntry versionJson = mJarFile.getEntry(profile.json==null ? "version.json" : profile.json.substring(profile.json.indexOf("/")+1,profile.json.length());
+        ZipEntry versionJson = mJarFile.getEntry(profile.json==null ? "version.json" : profile.json.substring(profile.json.indexOf("/")+1,profile.json.length()));
         Tools.write(
             target,
             Tools.convertStream(mJarFile.getInputStream(versionJson))

File: app/src/main/java/net/kdt/pojavlaunch/installers/NewForgeInstaller.java
Patch:
@@ -29,7 +29,7 @@ public void install(LoggableActivity ctx) throws IOException {
         ctx.appendlnToLog("Writing " + target);
         Tools.write(
             target,
-            Tools.convertStream(mJarFile.getInputStream(mJarFile.getEntry(profile.json)))
+            Tools.convertStream(mJarFile.getInputStream(mJarFile.getEntry(profile.json==null ? "/version.json" : profile.json)))
         );
 
         // Forge 1.12.2+ installer does not include universal, so download

File: app/src/main/java/net/kdt/pojavlaunch/CustomCtrlMainActivity.java
Patch:
@@ -100,14 +100,13 @@ public boolean onTouch(View view, MotionEvent e) {
             = mTouchListener;
         
         mControlLayout = findViewById(R.id.main_control_layout);
+        mControlLayout.setModifiable(false);
         try {
             mControlLayout.loadLayout(LauncherPreferences.PREF_DEFAULTCTRL_PATH);
         } catch (Throwable th) {
             Tools.showError(this, th);
         }
         
-        mControlLayout.setModifiable(false);
-        
         // toggleGui(null);
         mControlLayout.toggleControlVisible();
     }

File: app/src/main/java/net/kdt/pojavlaunch/BaseLauncherActivity.java
Patch:
@@ -114,6 +114,7 @@ private void installMod(boolean customJavaArgs) {
                     @Override
                     public void onClick(DialogInterface di, int i) {
                         Intent intent = new Intent(BaseLauncherActivity.this, JavaGUILauncherActivity.class);
+                        intent.putExtra("skipDetectMod", true);
                         intent.putExtra("javaArgs", edit.getText().toString());
                         startActivity(intent);
                     }

File: app/src/main/java/net/kdt/pojavlaunch/installers/ForgeInstaller.java
Patch:
@@ -34,7 +34,7 @@ public void install(LoggableActivity ctx) throws IOException {
         // Extract Forge universal
         String[] libInfos = profile.install.path.split(":");
         File libraryFile = new File(Tools.libraries, Tools.artifactToPath(libInfos[0], libInfos[1], libInfos[2]));
-        libraryFile.mkdirs();
+        libraryFile.getParentFile().mkdirs();
         target = libraryFile.getAbsolutePath().replace("-universal", "");
         ctx.appendlnToLog("Writing " + target);
         FileOutputStream out = new FileOutputStream(target);

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -103,15 +103,15 @@ public void onShow(DialogInterface dialogInterface) {
 						String[] oldSpecialArr = ControlData.buildSpecialButtonArray();
 						final String[] specialArr = new String[oldSpecialArr.length];
 						for (int i = 0; i < specialArr.length; i++) {
-							specialArr[i] = "SPECIAL_" + oldSpecialArr[i];
+							specialArr[i] = "SPECIAL_" + oldSpecialArr[specialArr.length - i - 1];
 						}
 
 						adapter.addAll(specialArr);
 						adapter.addAll(AndroidLWJGLKeycode.generateKeyName());
 						adapter.setDropDownViewResource(android.R.layout.simple_list_item_single_choice);
 						spinnerKeycode.setAdapter(adapter);
 						if (properties.keycode < 0) {
-							spinnerKeycode.setSelection(0 - properties.keycode);
+							spinnerKeycode.setSelection(properties.keycode + specialArr.length);
 						} else {
 							spinnerKeycode.setSelection(AndroidLWJGLKeycode.getIndexByLWJGLKey(properties.keycode) + specialArr.length);
 						}

File: app/src/main/java/net/kdt/pojavlaunch/JavaGUILauncherActivity.java
Patch:
@@ -108,6 +108,8 @@ public void closeLogOutput(View view) {
     }
     
     private void doCustomInstall(File modFile, String javaArgs) throws IOException {
+        isLogAllow = true;
+        
         // Attempt to detects some mod installers 
         BaseInstaller installer = new BaseInstaller();
         installer.setInput(modFile);
@@ -116,6 +118,7 @@ private void doCustomInstall(File modFile, String javaArgs) throws IOException {
             appendlnToLog("Detected Forge installer!");
             new ForgeInstaller(installer).install(this);
         } else {
+            isLogAllow = false;
             mIsCustomInstall = false;
             launchJavaRuntime(modFile, javaArgs);
         }

File: app/src/main/java/net/kdt/pojavlaunch/installers/ForgeInstaller.java
Patch:
@@ -35,7 +35,7 @@ public void install(LoggableActivity ctx) throws IOException {
         String[] libInfos = profile.install.path.split(":");
         File libraryFile = new File(Tools.libraries, Tools.artifactToPath(libInfos[0], libInfos[1], libInfos[2]));
         libraryFile.mkdirs();
-        target = libraryFile.getAbsolutePath() + "/" + profile.install.filePath.replace("-universal", "");
+        target = libraryFile.getAbsolutePath().replace("-universal", "");
         ctx.appendlnToLog("Writing " + target);
         FileOutputStream out = new FileOutputStream(target);
         IOUtils.copy(mJarFile.getInputStream(mJarFile.getEntry(profile.install.filePath)), out);

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -217,8 +217,7 @@ public void run(){
                 System.out.println(currFile.getAbsolutePath());
                 if (currFile.getAbsolutePath().contains("/values-") || currFile.getName().startsWith("values-")) {
                     // TODO use regex(?)
-                    Locale thisLocale = new Locale(currFile.getName().replace("values-", "").replace("-r", "-"));
-                    langAdapter.add(new DisplayableLocale(thisLocale));
+                    langAdapter.add(new DisplayableLocale(currFile.getName().replace("values-", "").replace("-r", "-")));
                 }
             }
         } catch (IOException e) {
@@ -248,7 +247,7 @@ public void onItemSelected(AdapterView<?> adapter, View view, int position, long
                 
                 Locale locale;
                 if (position == 0) {
-                    locale = Locale.getDefault();
+                    locale = LocaleUtils.DEFAULT_LOCALE;
                 } else if (position == 1) {
                     locale = Locale.ENGLISH;
                 } else {

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -111,7 +111,7 @@ public void onShow(DialogInterface dialogInterface) {
 						adapter.setDropDownViewResource(android.R.layout.simple_list_item_single_choice);
 						spinnerKeycode.setAdapter(adapter);
 						if (properties.keycode < 0) {
-							spinnerKeycode.setSelection(properties.keycode + specialArr.length);
+							spinnerKeycode.setSelection(0 - properties.keycode);
 						} else {
 							spinnerKeycode.setSelection(AndroidLWJGLKeycode.getIndexByLWJGLKey(properties.keycode) + specialArr.length);
 						}

File: app/src/main/java/android/support/design/widget/VerticalTabLayout.java
Patch:
@@ -1422,7 +1422,7 @@ public Tab setIcon(@DrawableRes int resId) {
             if (mParent == null) {
                 throw new IllegalArgumentException("Tab not attached to a TabLayout");
             }
-            return setIcon(AppCompatResources.getDrawable(mParent.getContext(), resId));
+            return setIcon(resId == 0 ? null : AppCompatResources.getDrawable(mParent.getContext(), resId));
         }
 
         /**

File: app/src/main/java/net/kdt/pojavlaunch/CustomCtrlMainActivity.java
Patch:
@@ -77,6 +77,7 @@ public boolean onTouch(View view, MotionEvent e) {
 
         if (view instanceof ControlButton) {
             ControlButton button = (ControlButton) view;
+            appendToLog("Debug: touch special btn " + button.getProperties().keycode);
             switch (button.getProperties().keycode) {
                 case ControlData.SPECIALBTN_MOUSEPRI:
                     sendMouseButton(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_LEFT, isDown);

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -208,7 +208,7 @@ private void loadControl(String path) {
 
 			selectedName = new File(path).getName();
 			// Remove `.json`
-			selectedName = selectedName.substring(0, selectedName.length() - 5);
+			selectedName = selectedName.substring(0, selectedName.length() - ControlData.getSpecialButtons().length);
 		} catch (Exception e) {
 			Tools.showError(CustomControlsActivity.this, e);
 		}

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -43,9 +43,10 @@ public static ControlData[] getSpecialButtons(){
 				new ControlData("Keyboard", SPECIALBTN_KEYBOARD, "${margin} * 3 + ${width} * 2", "${margin}", false),
 				new ControlData("GUI", SPECIALBTN_TOGGLECTRL, "${margin}", "${bottom} - ${margin}"),
 				new ControlData("PRI", SPECIALBTN_MOUSEPRI, "${margin}", "${screen_height} - ${margin} * 3 - ${height} * 3"),
-                new ControlData("MID", SPECIALBTN_MOUSEMID, "${margin}", "${margin}"),
 				new ControlData("SEC", SPECIALBTN_MOUSESEC, "${margin} * 3 + ${width} * 2", "${screen_height} - ${margin} * 3 - ${height} * 3"),
-				new ControlData("Mouse", SPECIALBTN_VIRTUALMOUSE, "${right}", "${margin}", false)
+				new ControlData("Mouse", SPECIALBTN_VIRTUALMOUSE, "${right}", "${margin}", false),
+                
+                new ControlData("MID", SPECIALBTN_MOUSEMID, "${margin}", "${margin}")
 			};
             SPECIAL_BUTTONS = specialButtons;
 		}

File: app/src/main/java/com/kdt/handleview/HandleView.java
Patch:
@@ -311,14 +311,14 @@ protected int getCursorOffset() {
 		return 0;  
 	}
 	
-	// MOD: Addition
+	// Addition
 	@Override
 	public boolean onLongClick(View view) {
 		showActionPopupWindow(0);
 		return true;
 	}
 
-	// MOD: Addition
+	// Addition
 	private float mDownX, mDownY;
 	
 	@Override

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -140,12 +140,13 @@ public boolean onTouch(View view, MotionEvent event) {
         }
 
         switch (event.getActionMasked()) {
+            case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_DOWN:
                 mCanTriggerLongClick = true;
                 downX = event.getX();
                 downY = event.getY();
                 break;
-            case MotionEvent.ACTION_UP:
+                
             case MotionEvent.ACTION_MOVE:
                 mCanTriggerLongClick = false;
                 moveX += event.getX() - downX;

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -40,7 +40,7 @@ public static ControlData[] getSpecialButtons(){
 		if (SPECIAL_BUTTONS == null) {
 			ControlData[] specialButtons = new ControlData[]{
 				new ControlData("Keyboard", SPECIALBTN_KEYBOARD, "${margin} * 3 + ${width} * 2", "${margin}", false),
-				new ControlData("GUI", SPECIALBTN_TOGGLECTRL, "${margin}", "${bottom}"),
+				new ControlData("GUI", SPECIALBTN_TOGGLECTRL, "${margin}", "${bottom} - ${margin}"),
 				new ControlData("PRI", SPECIALBTN_MOUSEPRI, "${margin}", "${screen_height} - ${margin} * 3 - ${height} * 3"),
 				new ControlData("SEC", SPECIALBTN_MOUSESEC, "${margin} * 3 + ${width} * 2", "${screen_height} - ${margin} * 3 - ${height} * 3"),
 				new ControlData("Mouse", SPECIALBTN_VIRTUALMOUSE, "${right}", "${margin}", false)

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -133,7 +133,7 @@ public void onNothingSelected(AdapterView<?> adapter){
 						final CheckBox checkHidden = dialog.findViewById(R.id.controlsetting_checkbox_hidden);
 						checkHidden.setChecked(properties.hidden);
                         
-                        final CheckBox checkDynamicPos = dialog.findViewById(R.id.controlsetting_checkbox_hidden);
+                        final CheckBox checkDynamicPos = dialog.findViewById(R.id.controlsetting_checkbox_dynamicpos);
                         checkDynamicPos.setChecked(properties.isDynamicBtn);
 
                         final LinearLayout layoutDynamicBtn = dialog.findViewById(R.id.controlsetting_dynamicbtnlayout);

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -170,7 +170,7 @@ public void update() {
         }
         
         x = insertDynamicPos(dynamicX);
-        y = insertDynamicPos(dynamicX);
+        y = insertDynamicPos(dynamicY);
     }
 
     private static float calculate(String math) {

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -199,6 +199,8 @@ public void onClick(View view2) {
 										properties.name = editName.getText().toString();
 										properties.hidden = checkHidden.isChecked();
                                         properties.isDynamicBtn = checkDynamicPos.isChecked();
+                                        properties.dynamicX = editDynamicX.getText().toString();    
+                                        properties.dynamicY = editDynamicY.getText().toString();
                                         
                                         if (properties.dynamicX.isEmpty()) {
                                             properties.dynamicX = Float.toString(properties.x);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -349,7 +349,7 @@ public static float dpToPx(Context ctx, float dp) {
         // 921600 = 1280 * 720, default scale
         // TODO better way to scaling
         // float scaledDp = dp / 921600 * CallbackBridge.windowWidth * CallbackBridge.windowHeight;
-        return (dp /* scaledDp */ * ctx.getResources().getDisplayMetrics().densityDpi);
+        return (dp /* scaledDp */ * ctx.getResources().getDisplayMetrics().density);
     }
 
     public static void copyAssetFile(Context ctx, String fileName, String output, boolean overwrite) throws Exception

File: app/src/main/java/net/kdt/pojavlaunch/CustomCtrlMainActivity.java
Patch:
@@ -14,7 +14,8 @@ public class CustomCtrlMainActivity extends BaseMainActivity implements OnClickL
     
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState, R.layout.main_with_customctrl);
+        super.onCreate(savedInstanceState);
+        initLayout(R.layout.main_with_customctrl);
 
         ControlData[] specialButtons = ControlData.getSpecialButtons();
         for (ControlData specialButton : specialButtons) {

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -20,10 +20,11 @@ public class MainActivity extends BaseMainActivity implements OnClickListener, O
 	toggleControlButton;
 
     private Button[] controlButtons;
-    
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState, R.layout.main);
+        super.onCreate(savedInstanceState);
+        initLayout(R.layout.main);
         
         this.upButton = findButton(R.id.control_up);
         this.downButton = findButton(R.id.control_down);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -348,8 +348,8 @@ public static float pxToDp(Context ctx, float px) {
     public static float dpToPx(Context ctx, float dp) {
         // 921600 = 1280 * 720, default scale
         // TODO better way to scaling
-        float scaledDp = dp / 921600 * CallbackBridge.windowWidth * CallbackBridge.windowHeight;
-        return (scaledDp * ctx.getResources().getDisplayMetrics().density);
+        // float scaledDp = dp / 921600 * CallbackBridge.windowWidth * CallbackBridge.windowHeight;
+        return (dp /* scaledDp */ * ctx.getResources().getDisplayMetrics().densityDpi);
     }
 
     public static void copyAssetFile(Context ctx, String fileName, String output, boolean overwrite) throws Exception

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -42,7 +42,7 @@ public ActionPopupWindow(HandleView handleView) {
 	}
 
 	private int getInternalId(String type, String name) {
-        int id = Resources.getSystem().getIdentifier(name, type, "com.android.internal.R");
+        int id = Resources.getSystem().getIdentifier(name, type, "com.android.internal");
         if (id == 0) {
             mHandleView.getContext().getResources().getIdentifier(name, type, "android");
         }

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -56,7 +56,7 @@ public class MCLauncherActivity extends BaseLauncherActivity
 	protected void onCreate(Bundle savedInstanceState)
 	{
 		super.onCreate(savedInstanceState);
-
+        
 		viewInit();
 
 		Tools.setFullscreen(this);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -347,8 +347,8 @@ public static float pxToDp(Context ctx, float px) {
 
     public static float dpToPx(Context ctx, float dp) {
         // 921600 = 1280 * 720, default scale
-        float scaledDp = dp * currentDisplayMetrics.scaledDensity;
-        // / 921600 * CallbackBridge.windowWidth * CallbackBridge.windowHeight;
+        // TODO better way to scaling
+        float scaledDp = dp / 921600 * CallbackBridge.windowWidth * CallbackBridge.windowHeight;
         return (scaledDp * ctx.getResources().getDisplayMetrics().density);
     }
 

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlData.java
Patch:
@@ -38,13 +38,14 @@ public class ControlData implements Cloneable
     
 	public static ControlData[] getSpecialButtons(){
 		if (SPECIAL_BUTTONS == null) {
-			SPECIAL_BUTTONS = new ControlData[]{
+			ControlData[] specialButtons = new ControlData[]{
 				new ControlData("Keyboard", SPECIALBTN_KEYBOARD, "${margin} * 3 + ${width} * 2", "${margin}", false),
 				new ControlData("GUI", SPECIALBTN_TOGGLECTRL, "${margin}", "${bottom}"),
 				new ControlData("PRI", SPECIALBTN_MOUSEPRI, "${margin}", "${screen_height} - ${margin} * 3 - ${height} * 3"),
 				new ControlData("SEC", SPECIALBTN_MOUSESEC, "${margin} * 3 + ${width} * 2", "${screen_height} - ${margin} * 3 - ${height} * 3"),
 				new ControlData("Mouse", SPECIALBTN_VIRTUALMOUSE, "${right}", "${margin}", false)
 			};
+            SPECIAL_BUTTONS = specialButtons;
 		}
 
 		return SPECIAL_BUTTONS;
@@ -138,7 +139,7 @@ public ControlData clone() {
 	}
     
     public void update() {
-        if (keycode < 0) {
+        if (keycode < 0 && SPECIAL_BUTTONS != null) {
             for (ControlData data : getSpecialButtons()) {
                 if (keycode == data.keycode) {
                     specialButtonListener = data.specialButtonListener;

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -336,7 +336,7 @@ public void onSystemUiVisibilityChange(int visibility) {
 
     public static DisplayMetrics currentDisplayMetrics;
     public static void updateWindowSize(Activity ctx) {
-        DisplayMetrics currentDisplayMetrics = getDisplayMetrics(ctx);
+        currentDisplayMetrics = getDisplayMetrics(ctx);
         CallbackBridge.windowWidth = currentDisplayMetrics.widthPixels;
         CallbackBridge.windowHeight = currentDisplayMetrics.heightPixels;
     }

File: app/src/main/java/com/kdt/mcgui/app/MineActivity.java
Patch:
@@ -10,7 +10,7 @@
 import android.content.*;
 import com.kdt.mcgui.*;
 
-public class MineActivity extends AppCompatActivity implements View.OnClickListener
+public class MineActivity extends BaseActivity implements View.OnClickListener
 {
 	private int topId = 150001;
 	private boolean showBeforeView = true;

File: app/src/main/java/net/kdt/pojavlaunch/BaseLauncherActivity.java
Patch:
@@ -5,7 +5,7 @@
 import net.kdt.pojavlaunch.fragments.*;
 import net.kdt.pojavlaunch.tasks.*;
 
-public abstract class BaseLauncherActivity extends AppCompatActivity {
+public abstract class BaseLauncherActivity extends BaseActivity {
 	public Button mPlayButton;
 	public ConsoleFragment mConsoleView;
     public CrashFragment mCrashView;

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -15,7 +15,7 @@
 import net.kdt.pojavlaunch.prefs.*;
 import net.kdt.pojavlaunch.customcontrols.*;
 
-public class CustomControlsActivity extends AppCompatActivity
+public class CustomControlsActivity extends BaseActivity
 {
 	private DrawerLayout drawerLayout;
     private NavigationView navDrawer;

File: app/src/main/java/net/kdt/pojavlaunch/FatalErrorActivity.java
Patch:
@@ -7,7 +7,7 @@
 import android.util.*;
 import android.support.v7.app.AlertDialog;
 
-public class FatalErrorActivity extends AppCompatActivity
+public class FatalErrorActivity extends BaseActivity
 {
 	public static void showError(Context ctx, String savePath, boolean storageAllow, /* boolean isFatalErr, */ Throwable th) {
 		Intent ferrorIntent = new Intent(ctx, FatalErrorActivity.class);

File: app/src/main/java/net/kdt/pojavlaunch/LoggableActivity.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.support.v7.app.*;
 
-public abstract class LoggableActivity extends AppCompatActivity {
+public abstract class LoggableActivity extends BaseActivity {
     public void appendToLog(String text) {
         appendToLog(text, true);
     }

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -28,7 +28,7 @@
 import net.kdt.pojavlaunch.prefs.*;
 import org.lwjgl.glfw.*;
 
-public class PojavLoginActivity extends AppCompatActivity
+public class PojavLoginActivity extends BaseActivity
 // MineActivity
 {
     private Object mLockStoragePerm = new Object(),
@@ -295,7 +295,7 @@ private void setLocale(Locale locale) {
         LauncherPreferences.PREF_LANGUAGE = locale.getLanguage();
         LauncherPreferences.DEFAULT_PREF.edit().putString("language", LauncherPreferences.PREF_LANGUAGE).commit();
         Locale.setDefault(locale);
-        Configuration config = new Configuration();
+        Configuration config = getResources().getConfiguration();
         config.setLocale(locale);
         // TODO replace deprecated
         getResources().updateConfiguration(config, getResources().getDisplayMetrics());

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -46,6 +46,8 @@ public void setProperties(ControlData properties) {
 	
 	public void setProperties(ControlData properties, boolean changePos) {
 		mProperties = properties;
+        properties.update();
+        
 		// com.android.internal.R.string.delete
 		// android.R.string.
 		setText(properties.name);

File: app/src/main/java/net/kdt/pojavlaunch/utils/JREUtils.java
Patch:
@@ -116,8 +116,8 @@ public void run() {
                         // Avoid leaking access token to log by replace it.
                         // Also, Minecraft will just print it once.
                         if (checkAccessTokenLeak) {
-                            checkAccessTokenLeak = false;
                             if (accessToken != null && accessToken.length() > 5 && currStr.contains(accessToken)) {
+                                checkAccessTokenLeak = false;
                                 currStr = currStr.replace(accessToken, "ACCESS_TOKEN_HIDDEN");
                             }
                         }

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -934,7 +934,7 @@ private Map<String, String> readJREReleaseProperties() throws IOException {
     private void checkJavaArchitecture(String jreArch) throws Exception {
         String[] argName = Tools.currentArch.split("/");
         appendlnToLog("Architecture: " + Tools.currentArch);
-        if (!(jreArch.contains(argName[0]) || jreArch.contains(argName[1])) && !(jreArch.startsWith("i") && jreArch.endsWith("86") && argName[1].equals("x86"))) {
+        if (!(jreArch.contains(argName[0]) || jreArch.contains(argName[1])) && !(jreArch.startsWith("i") && jreArch.endsWith("86") && argName[1].contains("x86"))) {
             appendlnToLog("Architecture " + Tools.currentArch + " is incompatible with Java Runtime " + jreArch);
             throw new RuntimeException(getString(R.string.mcn_check_fail_incompatiblearch, Tools.currentArch, jreArch));
         }

File: app/src/main/java/net/kdt/pojavlaunch/BaseMainActivity.java
Patch:
@@ -934,7 +934,7 @@ private Map<String, String> readJREReleaseProperties() throws IOException {
     private void checkJavaArchitecture(String jreArch) throws Exception {
         String[] argName = Tools.currentArch.split("/");
         appendlnToLog("Architecture: " + Tools.currentArch);
-        if (!(jreArch.contains(argName[0]) || jreArch.contains(argName[1]))) {
+        if (!(jreArch.contains(argName[0]) || jreArch.contains(argName[1])) && !(jreArch.startsWith("i") && jreArch.endsWith("86") && argName[1].equals("x86"))) {
             appendlnToLog("Architecture " + Tools.currentArch + " is incompatible with Java Runtime " + jreArch);
             throw new RuntimeException(getString(R.string.mcn_check_fail_incompatiblearch, Tools.currentArch, jreArch));
         }

File: app/src/main/java/net/kdt/pojavlaunch/AndroidLWJGLKeycode.java
Patch:
@@ -208,10 +208,10 @@ public static void execKey(BaseMainActivity mainActivity, KeyEvent keyEvent, int
     }
 
     public static void execKeyIndex(BaseMainActivity mainActivity, int index) {
-        mainActivity.sendKeyPress(getKeyIndex(index));
+        mainActivity.sendKeyPress(getKeyByIndex(index));
     }
     
-    public static int getKeyIndex(int index) {
+    public static int getKeyByIndex(int index) {
         return androidToLwjglMap.valueAt(index);
     }
 

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -147,7 +147,7 @@ public void onShow(DialogInterface dialogInterface) {
 						if (properties.keycode < 0) {
 							spinnerKeycode.setSelection(properties.keycode + 5);
 						} else {
-							spinnerKeycode.setSelection(AndroidLWJGLKeycode.getIndexByLWJGLKey(properties.keycode + 2));
+							spinnerKeycode.setSelection(AndroidLWJGLKeycode.getIndexByLWJGLKey(properties.keycode + 5));
 						}
 						spinnerKeycode.setOnItemSelectedListener(new Spinner.OnItemSelectedListener(){
 
@@ -173,7 +173,7 @@ public void onClick(View view2) {
 									if (editName.getText().toString().isEmpty()) {
 										editName.setError(view.getResources().getString(R.string.global_error_field_empty));
 									} else {
-										properties.keycode = AndroidLWJGLKeycode.getKeyIndex(spinnerKeycode.getSelectedItemPosition()) - 2;
+										properties.keycode = AndroidLWJGLKeycode.getKeyIndex(spinnerKeycode.getSelectedItemPosition()) - 5;
 										properties.name = editName.getText().toString();
 										properties.hidden = checkHidden.isChecked();
 

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/DynamicControlData.java
Patch:
@@ -16,7 +16,7 @@ public class DynamicControlData extends ControlData {
      * bigger device or vice versa.
      */
     
-    private String dynamicX, dynamicY;
+    public String dynamicX, dynamicY;
     
     public DynamicControlData() {
         this("", LWJGLGLFWKeycode.GLFW_KEY_UNKNOWN);

File: app/src/main/java/net/kdt/pojavlaunch/tasks/MinecraftDownloaderTask.java
Patch:
@@ -229,7 +229,7 @@ protected void onPostExecute(Throwable p1)
                  jvmArgs.add("-Xms128M");
                  jvmArgs.add("-Xmx1G");
                  */
-                Intent mainIntent = new Intent(mActivity, BaseMainActivity.class);
+                Intent mainIntent = new Intent(mActivity, MainActivity.class);
                 // mainIntent.addFlags(Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT);
                 mainIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT);
                 mainIntent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK);

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -218,6 +218,7 @@ public void run(){
             Enumeration<?> thisEntries = thisApk.entries();
             while (thisEntries.hasMoreElements()) {
                 File currFile = new File("/" + ((ZipEntry) thisEntries.nextElement()).getName());
+                System.out.println(currFile.getAbsolutePath());
                 if (currFile.getAbsolutePath().startsWith("/res/values-") && currFile.getName().startsWith("values-")) {
                     // TODO use regex
                     Locale thisLocale = new Locale(currFile.getName().replace("values-", "").replace("-r", "-"));

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -184,7 +184,7 @@ public void onClick(View view) {
 
 	private void actionLoad() {
 		AlertDialog.Builder builder = new AlertDialog.Builder(this);
-		builder.setTitle(R.string.customctrl_title_selectctrl);
+		builder.setTitle(R.string.global_load);
 		builder.setPositiveButton(android.R.string.cancel, null);
 
 		final AlertDialog dialog = builder.create();

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -28,7 +28,7 @@
 import net.kdt.pojavlaunch.*;
 
 import android.view.View.OnClickListener;
-import net.kdt.pojavlaunch.value.customcontrols.*;
+import net.kdt.pojavlaunch.customcontrols.*;
 import android.support.v7.app.*;
 
 public class ActionPopupWindow extends PinnedPopupWindow implements OnClickListener {

File: app/src/main/java/com/kdt/handleview/HandleView.java
Patch:
@@ -28,7 +28,7 @@
 import android.content.*;
 import java.lang.reflect.*;
 import net.kdt.pojavlaunch.*;
-import net.kdt.pojavlaunch.value.customcontrols.*;
+import net.kdt.pojavlaunch.customcontrols.*;
 
 public abstract class HandleView extends View implements ViewPositionListener, View.OnLongClickListener
  {

File: app/src/main/java/com/kdt/handleview/SelectionEndHandleView.java
Patch:
@@ -23,7 +23,7 @@
 import android.text.*;
 import android.view.*;
 import android.os.*;
-import net.kdt.pojavlaunch.value.customcontrols.*;
+import net.kdt.pojavlaunch.customcontrols.*;
 
 public class SelectionEndHandleView extends HandleView
 {

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -13,7 +13,7 @@
 import java.io.*;
 import net.kdt.pojavlaunch.*;
 import net.kdt.pojavlaunch.prefs.*;
-import net.kdt.pojavlaunch.value.customcontrols.*;
+import net.kdt.pojavlaunch.customcontrols.*;
 
 public class CustomControlsActivity extends AppCompatActivity
 {

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -18,7 +18,7 @@
 import java.util.*;
 import net.kdt.pojavlaunch.*;
 import net.kdt.pojavlaunch.prefs.*;
-import net.kdt.pojavlaunch.value.customcontrols.*;
+import net.kdt.pojavlaunch.customcontrols.*;
 import org.lwjgl.glfw.*;
 
 import android.app.AlertDialog;

File: app/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.pm.PackageManager.*;
 import android.content.pm.*;
 import net.kdt.pojavlaunch.prefs.*;
-import net.kdt.pojavlaunch.value.customcontrols.*;
+import net.kdt.pojavlaunch.customcontrols.*;
 import android.support.v7.preference.*;
 import java.io.*;
 import android.content.*;

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -17,7 +17,7 @@
 import java.io.*;
 import java.util.*;
 import net.kdt.pojavlaunch.update.*;
-import net.kdt.pojavlaunch.value.customcontrols.*;
+import net.kdt.pojavlaunch.customcontrols.*;
 import org.apache.commons.compress.archivers.tar.*;
 import org.apache.commons.compress.compressors.xz.*;
 import org.apache.commons.io.*;

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -172,8 +172,8 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
     public static String[] getMinecraftArgs(MCProfile.Builder profile, JMinecraftVersionList.Version versionInfo) {
         String username = profile.getUsername();
         String versionName = profile.getVersion();
-        if(versionInfo.inheritsFrom != null) {
-            versionName=versionInfo.inheritsFrom;
+        if (versionInfo.inheritsFrom != null) {
+            versionName = versionInfo.inheritsFrom;
         }
         String mcAssetsDir = Tools.ASSETS_PATH;
         String userType = "mojang";

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlButton.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.value.customcontrols;
+package net.kdt.pojavlaunch.customcontrols;
 
 import java.util.*;
 import net.kdt.pojavlaunch.*;

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlView.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.value.customcontrols;
+package net.kdt.pojavlaunch.customcontrols;
 
 import android.content.*;
 import android.view.*;

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/ControlsLayout.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.value.customcontrols;
+package net.kdt.pojavlaunch.customcontrols;
 import android.widget.*;
 import android.content.*;
 import android.util.*;

File: app/src/main/java/net/kdt/pojavlaunch/customcontrols/CustomControls.java
Patch:
@@ -1,4 +1,4 @@
-package net.kdt.pojavlaunch.value.customcontrols;
+package net.kdt.pojavlaunch.customcontrols;
 import android.content.*;
 import com.google.gson.*;
 import java.util.*;

File: app/src/main/java/net/kdt/pojavlaunch/AWTCanvasView.java
Patch:
@@ -86,7 +86,7 @@ public void run() {
                 canvas.drawRGB(0, 0, 0);
 
                 if (!attached) {
-                    attached = CallbackBridge.nativeAttachThreadToOther(true, MainActivity.isInputStackCall);
+                    attached = CallbackBridge.nativeAttachThreadToOther(true, false, MainActivity.isInputStackCall);
                 } else {
                     int[] rgbArray = JREUtils.renderAWTScreenFrame(/* canvas, mWidth, mHeight */);
                         if (rgbArray == null) {

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -145,7 +145,9 @@ public void onCreate(Bundle savedInstanceState)
 			
 			mProfile = PojavProfile.getCurrentProfileContent(this);
 			mVersionInfo = Tools.getVersionInfo(mProfile.getVersion());
-
+            // Minecraft 1.12.x special case: use indirect char pipe
+            CallbackBridge.isMinecraft1p12 = mVersionInfo.assets.startsWith("1.12");
+            
 			setTitle("Minecraft " + mProfile.getVersion());
             
             // Minecraft 1.13+

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -11,6 +11,7 @@ public class CallbackBridge {
     public static final int CLIPBOARD_COPY = 2000;
     public static final int CLIPBOARD_PASTE = 2001;
     
+    public static boolean isMinecraft1p12;
     public static volatile int windowWidth, windowHeight;
     public static int mouseX, mouseY;
     public static boolean mouseLeft;
@@ -31,7 +32,7 @@ public static void putMouseEventWithCoords(int button, int state, int x, int y /
     private static boolean threadAttached;
     public static void sendCursorPos(int x, int y) {
         if (!threadAttached) {
-            threadAttached = CallbackBridge.nativeAttachThreadToOther(true, MainActivity.isInputStackCall);
+            threadAttached = CallbackBridge.nativeAttachThreadToOther(true, isMinecraft1p12, MainActivity.isInputStackCall);
         }
         
         DEBUG_STRING.append("CursorPos=" + x + ", " + y + "\n");
@@ -124,7 +125,7 @@ public static void sendData(int type, Object... dataArr) {
     private static native void nativeSendData(boolean isAndroid, int type, String data);
 */
 
-    public static native boolean nativeAttachThreadToOther(boolean isAndroid, boolean isUsePushPoll);
+    public static native boolean nativeAttachThreadToOther(boolean isAndroid, boolean isMinecraft1p12, boolean isUsePushPoll);
     private static native boolean nativeSendChar(int codepoint);
     // GLFW: GLFWCharModsCallback deprecated, but is Minecraft still use?
     private static native boolean nativeSendCharMods(int codepoint, int mods);

File: app/src/main/java/net/kdt/pojavlaunch/AWTCanvasView.java
Patch:
@@ -81,7 +81,7 @@ public void run() {
         mSurface = new Surface(getSurfaceTexture());
 
         try {
-            while (!mIsDestroyed && mSurface.isAvailable()) {
+            while (!mIsDestroyed && mSurface.isValid()) {
                 canvas = mSurface.lockCanvas(null);
                 canvas.drawRGB(0, 0, 0);
 
@@ -92,7 +92,7 @@ public void run() {
                         if (rgbArray == null) {
                             drawing = false;
                         } else {
-                            canvas.drawBitmap(rgbArray, 0, CallbackBridge.windowWidth, 0, 0, CallbackBridge.windowWidth, callbackBridge.windowHeight, true, null);
+                            canvas.drawBitmap(rgbArray, 0, CallbackBridge.windowWidth, 0, 0, CallbackBridge.windowWidth, CallbackBridge.windowHeight, true, null);
                         }
                 }
                 canvas.drawText("FPS: " + (Math.round(fps() * 10) / 10) + ", attached=" + attached + ", drawing=" + drawing, 50, 50, fpsPaint);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -128,6 +128,7 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
         overrideableArgList.add("-Djava.home=" + Tools.homeJreDir);
         overrideableArgList.add("-Djava.io.tmpdir=" + ctx.getCacheDir().getAbsolutePath());
         // overrideableArgList.add("-Djava.library.path=" + JREUtils.LD_LIBRARY_PATH);
+        overrideableArgList.add("-Duser.home=" + new File(Tools.MAIN_PATH).getParent());
 
         // Should be compatible?
         // overrideableArgList.add("-Dos.name=Android");

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -28,10 +28,10 @@ public static void putMouseEventWithCoords(int button, int state, int x, int y /
         sendMouseKeycode(button, 0, state == 1);
     }
 
-    private static boolean attached;
+    private static boolean threadAttached;
     public static void sendCursorPos(int x, int y) {
-        if (!attached) {
-            attached = CallbackBridge.nativeAttachThreadToOther(true, MainActivity.isInputStackCall);
+        if (!threadAttached) {
+            threadAttached = CallbackBridge.nativeAttachThreadToOther(true, MainActivity.isInputStackCall);
         }
         
         DEBUG_STRING.append("CursorPos=" + x + ", " + y + "\n");

File: app/src/main/java/com/oracle/dalvik/VMLauncher.java
Patch:
@@ -4,6 +4,4 @@ public final class VMLauncher {
 	private VMLauncher() {
 	}
 	public static native int launchJVM(String[] args);
-	
-	public static native int createLaunchMainJVM(String[] vmArgs, String mainClass, String[] mainArgs);
 }

File: app/src/main/java/net/kdt/pojavlaunch/InstallModActivity.java
Patch:
@@ -141,7 +141,7 @@ private int launchJavaRuntime(File modFile, String javaArgs) {
 			System.out.println(Arrays.toString(javaArgList.toArray(new String[0])));
 			
 			//JREUtils.redirectStdio(false);
-			JREUtils.setJavaEnvironment(this, Tools.LAUNCH_TYPE);
+			JREUtils.setJavaEnvironment(this);
 			JREUtils.initJavaRuntime();
 			JREUtils.chdir(Tools.MAIN_PATH);
 

File: app/src/main/java/net/kdt/pojavlaunch/InstallModActivity.java
Patch:
@@ -106,7 +106,7 @@ public void closeLogOutput(View view) {
     
 	private int launchJavaRuntime(File modFile, String javaArgs) {
 		try {
-            JREUtils.relocateLibPath();
+            JREUtils.relocateLibPath(this);
             
 			List<String> javaArgList = new ArrayList<String>();
 			javaArgList.add(Tools.homeJreDir + "/bin/java");

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -314,7 +314,7 @@ private void initMain()
                 setPref(PREF_IS_INSTALLED_JAVARUNTIME, true);
             }
             
-            JREUtils.relocateLibPath();
+            JREUtils.relocateLibPath(this);
 
             File ftIn = new File(Tools.homeJreDir, Tools.homeJreLib + "/libfreetype.so.6");
             File ftOut = new File(Tools.homeJreDir, Tools.homeJreLib + "/libfreetype.so");

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -76,7 +76,7 @@ public final class Tools
     public static ShellProcessOperation mLaunchShell;
     private static int exitCode = 0;
     public static void launchMinecraft(final LoggableActivity ctx, MCProfile.Builder profile, JMinecraftVersionList.Version versionInfo) throws Throwable {
-        JREUtils.relocateLibPath();
+        JREUtils.relocateLibPath(ctx);
         String[] launchArgs = getMinecraftArgs(profile, versionInfo);
 
         List<String> javaArgList = new ArrayList<String>();

File: app/src/main/java/net/kdt/pojavlaunch/JREUtils.java
Patch:
@@ -120,7 +120,9 @@ public void run() {
         Log.i("jrelog-logcat","Logcat thread started");
     }
     
-    public static void relocateLibPath() {
+    public static void relocateLibPath(Context ctx) {
+        nativeLibDir = ctx.getApplicationInfo().nativeLibraryDir;
+
         for (String arch : Tools.currentArch.split("/")) {
             File f = new File(Tools.homeJreDir, "lib/" + arch);
             if (f.exists() && f.isDirectory()) {
@@ -149,8 +151,6 @@ public static void relocateLibPath() {
     }
     
     public static void setJavaEnvironment(Context ctx, int launchType) throws Throwable {
-        nativeLibDir = ctx.getApplicationInfo().nativeLibraryDir;
-        
         setEnvironment(launchType, "JAVA_HOME", Tools.homeJreDir);
         setEnvironment(launchType, "HOME", Tools.MAIN_PATH);
         setEnvironment(launchType, "TMPDIR", ctx.getCacheDir().getAbsolutePath());

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -204,7 +204,7 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
 
         overrideableArgList.add("-Djava.home=" + Tools.homeJreDir);
         overrideableArgList.add("-Djava.io.tmpdir=" + ctx.getCacheDir().getAbsolutePath());
-        overrideableArgList.add("-Djava.library.path=" + JREUtils.LD_LIBRARY_PATH);
+        // overrideableArgList.add("-Djava.library.path=" + JREUtils.LD_LIBRARY_PATH);
 
         // Should be compatible?
         // overrideableArgList.add("-Dos.name=Android");

File: app/src/main/java/net/kdt/pojavlaunch/InstallModActivity.java
Patch:
@@ -71,7 +71,7 @@ public void onSurfaceTextureAvailable(SurfaceTexture tex, final int w, final int
                         
                         // final Surface surface = new Surface(tex);
                         new Thread(new Runnable(){
-                            private TextPaint fpsPaint = new TextPaint(Color.LIGHT_GRAY);
+                            private TextPaint fpsPaint = new TextPaint(Color.LTGRAY);
                             private boolean attached = false;
                             
                             // Temporary count fps https://stackoverflow.com/a/13729241

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -30,7 +30,7 @@ public class MainActivity extends LoggableActivity implements OnTouchListener, O
     public static volatile ClipboardManager GLOBAL_CLIPBOARD;
     
 	public static final String initText = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA  ";
-    volatile public static boolean isPushPollCall;
+    volatile public static boolean isInputStackCall;
 
 	private static int[] hotbarKeys = {
 		LWJGLGLFWKeycode.GLFW_KEY_1, LWJGLGLFWKeycode.GLFW_KEY_2,	LWJGLGLFWKeycode.GLFW_KEY_3,
@@ -162,8 +162,8 @@ public void onSystemUiVisibilityChange(int visibility) {
 			setTitle("Minecraft " + mProfile.getVersion());
             
             // Minecraft 1.13+
-            isPushPollCall = mVersionInfo.arguments != null;
-            CallbackBridge.nativeAttachThreadToOther(true, isPushPollCall);
+            isInputStackCall = mVersionInfo.arguments != null;
+            CallbackBridge.nativeAttachThreadToOther(true, isInputStackCall);
             
 			this.displayMetrics = Tools.getDisplayMetrics(this);
 			CallbackBridge.windowWidth = displayMetrics.widthPixels / scaleFactor;

File: app/src/main/java/net/kdt/pojavlaunch/InstallModActivity.java
Patch:
@@ -110,8 +110,9 @@ public void closeLogOutput(View view) {
     
 	private void launchJavaRuntime(File modFile, String javaArgs) {
 		try {
+            JREUtils.relocateLibPath();
+            
 			List<String> javaArgList = new ArrayList<String>();
-
 			javaArgList.add(Tools.homeJreDir + "/bin/java");
 
 			Tools.getJavaArgs(this, javaArgList);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -75,6 +75,7 @@ public final class Tools
 	public static ShellProcessOperation mLaunchShell;
     private static int exitCode = 0;
 	public static void launchMinecraft(final LoggableActivity ctx, MCProfile.Builder profile, JMinecraftVersionList.Version versionInfo) throws Throwable {
+        JREUtils.relocateLibPath();
 		String[] launchArgs = getMinecraftArgs(profile, versionInfo);
 
 		List<String> javaArgList = new ArrayList<String>();

File: app/src/main/java/net/kdt/pojavlaunch/JREUtils.java
Patch:
@@ -138,7 +138,7 @@ public static void setJavaEnvironment(Context ctx, int launchType) throws Throwa
         ldLibraryPath.append(
             // To make libjli.so ignore re-execute
             Tools.homeJreDir + "/" + Tools.homeJreLib + "/server:" +
-            Tools.homeJreDir + "/" +  Tools.homeJreLib + "/lib/jli:" +
+            Tools.homeJreDir + "/" +  Tools.homeJreLib + "/jli:" +
             Tools.homeJreDir + "/" + Tools.homeJreLib + ":"
         );
         

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -290,7 +290,7 @@ private void initMain()
             }
             
             for (String arch : Tools.currentArch.split("/")) {
-                File f = new File(Tools.homeJreDir + "/lib/" + arch);
+                File f = new File(Tools.homeJreDir, "lib/" + arch);
                 if (f.exists() && f.isDirectory()) {
                     Tools.homeJreLib = "lib/" + arch;
                     break;

File: app/src/main/java/net/kdt/pojavlaunch/JREUtils.java
Patch:
@@ -91,7 +91,7 @@ public void run() {
                         act.appendToLog(currStr);
                     }
                     
-                    if (p.exitValue() != 0) {
+                    if (p.waitFor() != 0) {
                         Log.e("jrelog-logcat", "Logcat exited with code " + p.exitValue());
                         failTime++;
                         Log.i("jrelog-logcat", (failTime <= 10 ? "Restarting logcat" : "Too many restart fails") + " (attempt " + failTime + "/10");
@@ -102,7 +102,7 @@ public void run() {
                         }
                         return;
                     }
-                } catch (IOException e) {
+                } catch (Throwable e) {
                     Log.e("jrelog-logcat", "IOException on logging thread");
                     e.printStackTrace();
 

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -204,8 +204,8 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
         
         // Should be compatible?
         // overrideableArgList.add("-Dos.name=Android");
-        overrideableArgList.add("-Dos.name=Android");
-        overrideableArgList.add("-Dos.version=" + Build.VERSION.RELEASE);
+        overrideableArgList.add("-Dos.name=Linux");
+        overrideableArgList.add("-Dos.version=Android-" + Build.VERSION.RELEASE);
 
         // javaArgList.add("-Dorg.lwjgl.libname=liblwjgl3.so");
         // javaArgList.add("-Dorg.lwjgl.system.jemalloc.libname=libjemalloc.so");

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -33,7 +33,7 @@ public static void loadPreferences() {
 		PREF_CUSTOM_JAVA_ARGS = DEFAULT_PREF.getString("javaArgs", "");
         if (PREF_CUSTOM_JAVA_ARGS.isEmpty()) {
             String DEFAULT_JAVA_ARGS =
-                "-Xms" + androidHeap + "m " +
+                "-Xms" + (androidHeap > 800 ? 800 : androidHeap) + "m " +
                 // (32bit) More than 800mb may make JVM not allocateable and crash
                 "-Xmx" + (doubleAndroidHeap > 800 ? 800 : doubleAndroidHeap) + "m " +
                 "-XX:+UseG1GC " +

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -47,7 +47,7 @@ public static void sendPrepareGrabInitialPos() {
     public static void sendKeycode(int keycode, char keychar, int modifiers, boolean isDown) {
         DEBUG_STRING.append("KeyCode=" + keycode + ", Char=" + keychar);
         // TODO CHECK: This may cause input issue, not receive input!
-        if (!nativeSendCharMods(keycode, modifiers) ||!nativeSendChar(keycode)) {
+        if (!nativeSendCharMods((int) keychar, modifiers) || !nativeSendChar((int) keychar)) {
             nativeSendKey(keycode, 0 /* scancode */, isDown ? 1 : 0, modifiers);
         }
         

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -28,7 +28,7 @@
 public class MainActivity extends LoggableActivity implements OnTouchListener, OnClickListener
 {
 	public static final String initText = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA  ";
-    public static boolean isPushPollCall;
+    volatile public static boolean isPushPollCall;
 
 	private static int[] hotbarKeys = {
 		LWJGLGLFWKeycode.GLFW_KEY_1, LWJGLGLFWKeycode.GLFW_KEY_2,	LWJGLGLFWKeycode.GLFW_KEY_3,
@@ -158,7 +158,8 @@ public void onSystemUiVisibilityChange(int visibility) {
             
             // Minecraft 1.13+
             isPushPollCall = mVersionInfo.arguments != null;
-
+            CallbackBridge.nativeAttachThreadToOther(true, isPushPollCall);
+            
 			this.displayMetrics = Tools.getDisplayMetrics(this);
 			CallbackBridge.windowWidth = displayMetrics.widthPixels / scaleFactor;
 			CallbackBridge.windowHeight = displayMetrics.heightPixels / scaleFactor;

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -107,7 +107,7 @@ public static void sendData(int type, Object... dataArr) {
     private static native void nativeSendData(boolean isAndroid, int type, String data);
 */
 
-    private static native void nativeAttachThreadToOther(boolean isAndroid, boolean isUsePushPoll);
+    public static native void nativeAttachThreadToOther(boolean isAndroid, boolean isUsePushPoll);
     private static native boolean nativeSendChar(int codepoint);
     // GLFW: GLFWCharModsCallback deprecated, but is Minecraft still use?
     private static native boolean nativeSendCharMods(int codepoint, int mods);
@@ -123,7 +123,6 @@ public static void sendData(int type, Object... dataArr) {
     
     static {
         System.loadLibrary("pojavexec");
-        nativeAttachThreadToOther(true, MainActivity.isPushPollCall);
     }
 }
 

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -107,11 +107,11 @@ public static void sendData(int type, Object... dataArr) {
     private static native void nativeSendData(boolean isAndroid, int type, String data);
 */
 
-    private static native void nativeAttachThreadToJRE();
+    private static native void nativeAttachThreadToOther(boolean isAndroid, boolean isUsePushPoll);
     private static native boolean nativeSendChar(int codepoint);
     // GLFW: GLFWCharModsCallback deprecated, but is Minecraft still use?
     private static native boolean nativeSendCharMods(int codepoint, int mods);
-    private static native void nativeSendCursorEnter(int entered);
+    // private static native void nativeSendCursorEnter(int entered);
     private static native void nativeSendCursorPos(int x, int y);
     private static native void nativeSendFramebufferSize(int width, int height);
     private static native void nativeSendKey(int key, int scancode, int action, int mods);
@@ -123,7 +123,7 @@ public static void sendData(int type, Object... dataArr) {
     
     static {
         System.loadLibrary("pojavexec");
-        nativeAttachThreadToJRE();
+        nativeAttachThreadToOther(true, MainActivity.isPushPollCall);
     }
 }
 

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -116,7 +116,7 @@ private void viewInit() {
         viewPageAdapter.addFragment(new LauncherPreferenceFragment(), R.drawable.ic_menu_settings, getString(R.string.mcl_option_settings));
         
         viewPager.setAdapter(viewPageAdapter);
-        tabLayout.setTabMode(VerticalTabLayout.MODE_SCROLLABLE);
+        // tabLayout.setTabMode(VerticalTabLayout.MODE_SCROLLABLE);
         tabLayout.setupWithViewPager(viewPager);
         tabLayout.setLastTabAsBottom();
 

File: app/src/main/java/android/support/design/widget/VerticalTabLayout.java
Patch:
@@ -1246,7 +1246,7 @@ private void applyModeAndGravity() {
 
         switch (mMode) {
             case MODE_FIXED:
-                mTabStrip.setGravity(Gravity.CENTER_HORIZONTAL);
+                mTabStrip.setGravity(Gravity.CENTER_VERTICAL);
                 break;
             case MODE_SCROLLABLE:
                 mTabStrip.setGravity(GravityCompat.START);
@@ -1556,7 +1556,7 @@ public TabView(Context context) {
             }
             ViewCompat.setPaddingRelative(this, mTabPaddingStart, mTabPaddingTop,
                     mTabPaddingEnd, mTabPaddingBottom);
-            setGravity(Gravity.CENTER_HORIZONTAL);
+            setGravity(Gravity.CENTER_VERTICAL);
             setOrientation(HORIZONTAL);
             setClickable(true);
             ViewCompat.setPointerIcon(this,

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -116,6 +116,7 @@ private void viewInit() {
         viewPageAdapter.addFragment(new LauncherPreferenceFragment(), R.drawable.ic_menu_settings, getString(R.string.mcl_option_settings));
         
         viewPager.setAdapter(viewPageAdapter);
+        tabLayout.setTabMode(VerticalTabLayout.MODE_SCROLLABLE);
         tabLayout.setupWithViewPager(viewPager);
         tabLayout.setLastTabAsBottom();
 

File: app/src/main/java/android/support/design/widget/VerticalTabLayout.java
Patch:
@@ -450,6 +450,7 @@ public void setLastTabAsBottom() {
         final int position = mTabs.size() - 1;
         final int selectedTabPosition = mSelectedTab != null ? mSelectedTab.getPosition() : 0;
         final TabView view = (TabView) mTabStrip.getChildAt(position);
+        view.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));
         mTabStrip.removeViewAt(position);
         requestLayout();
 

File: app/src/main/java/android/support/design/widget/VerticalTabLayout.java
Patch:
@@ -1009,7 +1009,8 @@ private void addViewInternal(final View child) {
         if (child instanceof TabItem) {
             addTabFromItemView((TabItem) child);
         } else {
-            throw new IllegalArgumentException("Only TabItem instances can be added to TabLayout");
+            super.addView(child);
+            // throw new IllegalArgumentException("Only TabItem instances can be added to TabLayout");
         }
     }
 

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -106,7 +106,7 @@ private void dialogSelectDefaultCtrl() {
 		builder.setPositiveButton(android.R.string.cancel, null);
 
 		final AlertDialog dialog = builder.create();
-		FileListView flv = new FileListView(this, dialog);
+		FileListView flv = new FileListView(dialog);
 		flv.lockPathAt(Tools.CTRLMAP_PATH);
 		flv.setFileSelectedListener(new FileSelectedListener(){
 
@@ -188,7 +188,7 @@ private void actionLoad() {
 		builder.setPositiveButton(android.R.string.cancel, null);
 
 		final AlertDialog dialog = builder.create();
-		FileListView flv = new FileListView(this, dialog);
+		FileListView flv = new FileListView(dialog);
 		flv.listFileAt(Tools.CTRLMAP_PATH);
 		flv.setFileSelectedListener(new FileSelectedListener(){
 

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -830,7 +830,7 @@ public void onClick(DialogInterface di, int i) {
             dialog.setView(edit);
         } else {
             dialog = builder.create();
-            FileListView flv = new FileListView(this, dialog);
+            FileListView flv = new FileListView(dialog);
             flv.setFileSelectedListener(new FileSelectedListener(){
                     @Override
                     public void onFileSelected(File file, String path) {

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -837,7 +837,7 @@ public void onClick(DialogInterface di, int i) {
             dialog.setView(edit);
         } else {
             dialog = builder.create();
-            FileListView flv = new FileListView(this, dialog);
+            FileListView flv = new FileListView(dialog);
             flv.setFileSelectedListener(new FileSelectedListener(){
 
                     @Override

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -383,7 +383,7 @@ public void run() {
                 builder.setCancelable(false);
 
                 final AlertDialog dialog = builder.create();
-                FileListView flv = new FileListView(PojavLoginActivity.this, dialog);
+                FileListView flv = new FileListView(dialog);
                 flv.setFileSelectedListener(new FileSelectedListener(){
 
                         @Override
@@ -545,7 +545,7 @@ public void onClick(DialogInterface p1, int p2)
 		fhint.setText(R.string.hint_select_account);
 		// fhint.setLayoutParams(lpHint);
 		
-		final FileListView flv = new FileListView(this, dialog);
+		final FileListView flv = new FileListView(dialog);
 		// flv.setLayoutParams(lpFlv);
 		
 		flv.lockPathAt(Tools.mpProfiles);

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -107,7 +107,7 @@ private void dialogSelectDefaultCtrl() {
 
 		final AlertDialog dialog = builder.create();
 		FileListView flv = new FileListView(this, dialog);
-		flv.listFileAt(Tools.CTRLMAP_PATH);
+		flv.lockPathAt(Tools.CTRLMAP_PATH);
 		flv.setFileSelectedListener(new FileSelectedListener(){
 
 				@Override

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -543,7 +543,7 @@ public void onClick(DialogInterface p1, int p2)
 		final FileListView flv = new FileListView(this, dialog);
 		// flv.setLayoutParams(lpFlv);
 		
-		flv.listFileAt(Tools.mpProfiles);
+		flv.lockPathAt(Tools.mpProfiles);
 		flv.setFileSelectedListener(new FileSelectedListener(){
 
 				@Override

File: app/src/main/java/net/kdt/pojavlaunch/JREUtils.java
Patch:
@@ -98,7 +98,7 @@ public static void setJavaEnvironment(Context ctx, int launchType) throws Throwa
 		setEnvironment(launchType, "JAVA_HOME", Tools.homeJreDir);
 		setEnvironment(launchType, "HOME", Tools.MAIN_PATH);
 		setEnvironment(launchType, "TMPDIR", ctx.getCacheDir().getAbsolutePath());
-		setEnvironment(launchType, "LIBGL_MIPMAP", "3");
+		setEnvironment(launchType, "LIBGL_MIPMAP", "0");
 		setEnvironment(launchType, "MESA_GLSL_CACHE_DIR", ctx.getCacheDir().getAbsolutePath());
 		setEnvironment(launchType, "LD_LIBRARY_PATH", ldLibraryPath);
 		setEnvironment(launchType, "PATH", Tools.homeJreDir + "/bin:" + getBridgeOs("getenv", "PATH"));

File: app/src/main/java/net/kdt/pojavlaunch/AndroidLWJGLKeycode.java
Patch:
@@ -170,8 +170,8 @@ public static void execKey(MainActivity mainActivity, KeyEvent keyEvent, int i,
 		for (Map.Entry<Integer, Integer> perKey : androidToLwjglMap.entrySet()) {
 			if (i == 1 && (keyEvent.getSource() == InputDevice.SOURCE_MOUSE)) {
                 // Right mouse detection
-                mainActivity.sendMouseButton(1, true);
-                mainActivity.sendMouseButton(1, false);
+                mainActivity.sendMouseButton(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_RIGHT, true);
+                mainActivity.sendMouseButton(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_RIGHT, false);
             } else if (perKey.getKey() == i) {
 				mainActivity.sendKeyPress(perKey.getValue(), keyEvent.getModifiers(), isDown);
 			}

File: app/src/main/java/net/kdt/pojavlaunch/AndroidLWJGLKeycode.java
Patch:
@@ -188,14 +188,14 @@ public static void execKey(MainActivity mainActivity, KeyEvent keyEvent, int i,
 		}
 		
 		try {
-			if (/* (int) keyEvent.getDisplayLabel() != KeyEvent.KEYCODE_UNKNOWN || */ !CallbackBridge.isGrabbing()) {
+			if ((int) keyEvent.getDisplayLabel() != KeyEvent.KEYCODE_UNKNOWN && !CallbackBridge.isGrabbing()) {
 				mainActivity.sendKeyPress(0, (char) keyEvent.getUnicodeChar(), keyEvent.getModifiers(), isDown);
 			}
 		} catch (Throwable th) {
 			th.printStackTrace();
 		}
 
-		if (isBackspaceAfterChar && !CallbackBridge.isGrabbing() && i != KeyEvent.KEYCODE_DEL) {
+		if (isBackspaceAfterChar && (int) keyEvent.getDisplayLabel() != KeyEvent.KEYCODE_UNKNOWN && !CallbackBridge.isGrabbing() && i != KeyEvent.KEYCODE_DEL) {
 			mainActivity.sendKeyPress(LWJGLGLFWKeycode.GLFW_KEY_BACKSPACE, keyEvent.getModifiers(), isDown);
 		}
     }

File: app/src/main/java/net/kdt/pojavlaunch/JREUtils.java
Patch:
@@ -150,10 +150,12 @@ public static Object getBridgeOs(String methodName, Object... objs) throws Throw
 	public static native void setLdLibraryPath(String ldLibraryPath);
 	public static native void setupBridgeWindow(Object surface);
 	
+    // TODO AWT Android port
 	public static native void setupBridgeSurfaceAWT(long surface);
 	
 	// BEFORE Load and execute PIE binary using dlopen and dlsym("main")
-	// AFTER: Execute a binary in forked process
+	// AFTER: [Deprecated]
+    @Deprecated
 	public static native int executeBinary(String[] args);
 
 	static {

File: app/src/main/java/net/kdt/pojavlaunch/PojavLauncherActivity.java
Patch:
@@ -17,7 +17,6 @@
 import java.io.*;
 import java.nio.charset.*;
 import java.util.*;
-import net.kdt.pojavlaunch.launcheruiv3.*;
 import net.kdt.pojavlaunch.mcfragments.*;
 import net.kdt.pojavlaunch.prefs.*;
 import net.kdt.pojavlaunch.util.*;
@@ -40,7 +39,7 @@ public class PojavLauncherActivity extends AppCompatActivity
      private VerticalTabLayout tabLayout;
      */
 
-    private PojavLauncherViewPager viewPager;
+    private ViewPager viewPager;
     private VerticalTabLayout tabLayout;
 
     private TextView tvVersion, tvUsernameView;

File: app/src/main/java/net/kdt/pojavlaunch/InstallModActivity.java
Patch:
@@ -142,7 +142,7 @@ private void launchJavaRuntime(File modFile, String javaArgs) {
 			System.out.println(Arrays.toString(javaArgList.toArray(new String[0])));
 			
 			//JREUtils.redirectStdio(false);
-			JREUtils.setJavaEnvironment(this);
+			JREUtils.setJavaEnvironment(this, Tools.LAUNCH_TYPE);
 			JREUtils.initJavaRuntime();
 			JREUtils.chdir(Tools.MAIN_PATH);
 

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -359,7 +359,7 @@ private File selectJreTarFile() throws InterruptedException {
             @Override
             public void run() {
                 AlertDialog.Builder builder = new AlertDialog.Builder(PojavLoginActivity.this);
-                builder.setTitle(getString(R.string.alerttitle_install_jre, System.getProperty("os.arch")));
+                builder.setTitle(getString(R.string.alerttitle_install_jre, Tools.currentArch));
                 builder.setCancelable(false);
 
                 final AlertDialog dialog = builder.create();

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -34,7 +34,8 @@ public final class Tools
 	public static String mhomeUrl = "https://pojavlauncherteam.github.io/PojavLauncher"; // "http://kdtjavacraft.eu5.net";
 	public static String datapath = "/data/data/net.kdt.pojavlaunch";
 	public static String worksDir = datapath + "/app_working_dir";
-	
+	public static String currentArch;
+    
 	// New since 3.0.0
 	public static String homeJreDir = datapath + "/jre_runtime";
 	
@@ -122,7 +123,7 @@ public void onPrintLine(String text) {
 		// can fix java?
 		// setEnvironment("ORIGIN", Tools.homeJreDir + "/lib");
 		
-		JREUtils.setJavaEnvironment(ctx);
+		JREUtils.setJavaEnvironment(ctx, Tools.LAUNCH_TYPE);
 		
 		if (LAUNCH_TYPE == LTYPE_PROCESS) {
 			mLaunchShell.writeToProcess("cd $HOME");

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -435,6 +435,7 @@ public boolean onTouch(View p1, MotionEvent e)
                                     if (CallbackBridge.isGrabbing()) {
                                         // It cause hold left mouse while moving camera
                                         // CallbackBridge.putMouseEventWithCoords(rightOverride ? (byte) 1 : (byte) 0, (byte) 1, x, y);
+                                        CallbackBridge.sendCursorPos(x, y);
                                         initialX = x;
                                         initialY = y;
                                         theHandler.sendEmptyMessageDelayed(MainActivity.MSG_LEFT_MOUSE_BUTTON_CHECK, LauncherPreferences.PREF_LONGPRESS_TRIGGER);
@@ -447,6 +448,8 @@ public boolean onTouch(View p1, MotionEvent e)
                                 if (!isTouchInHotbar) {
                                     CallbackBridge.mouseX = x;
                                     CallbackBridge.mouseY = y;
+                                    
+                                    
 
                                     // TODO uncomment after fix wrong trigger
                                     // CallbackBridge.putMouseEventWithCoords(rightOverride ? (byte) 1 : (byte) 0, (byte) 0, x, y);

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -34,8 +34,8 @@ public static void loadPreferences() {
         if (PREF_CUSTOM_JAVA_ARGS.isEmpty()) {
             String DEFAULT_JAVA_ARGS =
                 "-Xms" + androidHeap + "m " +
-                // More than 900mb may make JVM not allocateable and crash
-                "-Xmx" + (doubleAndroidHeap > 900 ? 900 : doubleAndroidHeap) + "m " +
+                // More than 800mb may make JVM not allocateable and crash
+                "-Xmx" + (doubleAndroidHeap > 800 ? 800 : doubleAndroidHeap) + "m " +
                 "-XX:+UseG1GC " +
                 // "-Dsun.rmi.dgc.server.gcInterval=2147483646 " +
                 "-XX:+UnlockExperimentalVMOptions " +

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -186,7 +186,7 @@ public static void getJavaArgs(Context ctx, List<String> javaArgList) {
         // Should be compatible?
         // overrideableArgList.add("-Dos.name=Android");
         overrideableArgList.add("-Dos.name=Linux");
-        overrideableArgList.add("-Dos.version=" + Build.VERSION.SDK);
+        overrideableArgList.add("-Dos.version=" + Build.VERSION.RELEASE);
 
         // javaArgList.add("-Dorg.lwjgl.libname=liblwjgl3.so");
         // javaArgList.add("-Dorg.lwjgl.system.jemalloc.libname=libjemalloc.so");

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -433,7 +433,7 @@ public boolean onTouch(View p1, MotionEvent e)
                                         CallbackBridge.mouseLeft = true;
                                     }
 
-                                    CallbackBridge.putMouseEventWithCoords(rightOverride ? (byte) 1 : (byte) 0, (byte) 1, x, y, 0, System.nanoTime());
+                                    // CallbackBridge.putMouseEventWithCoords(rightOverride ? (byte) 1 : (byte) 0, (byte) 1, x, y, 0, System.nanoTime());
                                     initialX = x;
                                     initialY = y;
                                     theHandler.sendEmptyMessageDelayed(MainActivity.MSG_LEFT_MOUSE_BUTTON_CHECK, LauncherPreferences.PREF_LONGPRESS_TRIGGER);

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -18,7 +18,7 @@ public class CallbackBridge {
     public static boolean mouseLeft;
     public static StringBuilder DEBUG_STRING = new StringBuilder();
     
-    volatile private static boolean isGrabbing = false;
+    // volatile private static boolean isGrabbing = false;
 
     public static void putMouseEventWithCoords(int button, int state, int x, int y, int dz, long nanos) {
         sendCursorPos(x, y);
@@ -39,6 +39,7 @@ public static void sendKeycode(int keycode, char keychar, int modifiers, boolean
 
     public static void sendMouseKeycode(int keycode, int modifiers, boolean isDown) {
         DEBUG_STRING.append("MouseKey=" + keycode + ", down=" + isDown + "\n");
+        if (isGrabbing()) DEBUG_STRING.append("MouseGrabStrace: " + android.util.Log.getStackTraceString(new Throwable()) + "\n");
         sendData(JRE_TYPE_MOUSE_KEYCODE_CONTROL, keycode, Boolean.toString(isDown), modifiers);
     }
 
@@ -60,7 +61,7 @@ public static boolean isGrabbing() {
     public static void receiveCallback(int type, String data) {
         switch (type) {
             case ANDROID_TYPE_GRAB_STATE:
-                isGrabbing = Boolean.parseBoolean(data);
+                // isGrabbing = Boolean.parseBoolean(data);
                 break;
         }
     }

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -864,7 +864,7 @@ public void onEvent(int event, String file) {
         
         appendlnToLog("--------- beggining with launcher debug");
         File lwjgl3dir = new File(Tools.MAIN_PATH, "lwjgl3");
-        if (!lwjgl3dir.exists() || lwjgl3dir.isFile() || lwjgl3dir.length() == 0) {
+        if (!lwjgl3dir.exists() || lwjgl3dir.isFile()) {
             appendlnToLog("Error: LWJGL3 is not installed!");
             Tools.showError(this, new Throwable("LWJGL3 is not installed!"), true);
             return;

File: app/src/main/java/net/kdt/pojavlaunch/CustomControlsActivity.java
Patch:
@@ -140,7 +140,7 @@ private void save(final boolean exit) {
 		builder.setPositiveButton(android.R.string.ok, null);
 		builder.setNegativeButton(android.R.string.cancel, null);
 		if (exit) {
-			builder.setNeutralButton("Exit without save", new AlertDialog.OnClickListener(){
+			builder.setNeutralButton(R.string.mcn_exit_call, new AlertDialog.OnClickListener(){
 					@Override
 					public void onClick(DialogInterface p1, int p2) {
 						CustomControlsActivity.super.onBackPressed();

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -171,7 +171,6 @@ public void onSystemUiVisibilityChange(int visibility) {
 			}
 			
 			this.displayMetrics = Tools.getDisplayMetrics(this);
-
 			CallbackBridge.windowWidth = displayMetrics.widthPixels / scaleFactor;
 			CallbackBridge.windowHeight = displayMetrics.heightPixels / scaleFactor;
 			System.out.println("WidthHeight: " + CallbackBridge.windowWidth + ":" + CallbackBridge.windowHeight);

File: app/src/main/java/net/kdt/pojavlaunch/value/customcontrols/CustomControls.java
Patch:
@@ -19,7 +19,7 @@ public CustomControls(List<ControlButton> button) {
 	// Generate default control
 	public CustomControls(Context ctx) {
 		this();
-		this.button.add(ControlButton.getSpecialButtons()[0].clone()); // LWJGLGLFWKeycode
+		this.button.add(ControlButton.getSpecialButtons()[0].clone()); // Keyboard
 		this.button.add(ControlButton.getSpecialButtons()[1].clone()); // GUI
 		this.button.add(ControlButton.getSpecialButtons()[2].clone()); // Primary Mouse button
 		this.button.add(ControlButton.getSpecialButtons()[3].clone()); // Secondary Mouse button

File: app/src/main/java/net/kdt/pojavlaunch/value/customcontrols/ControlView.java
Patch:
@@ -54,7 +54,9 @@ public void setProperties(ControlButton properties, boolean changePos) {
 			setTranslationY(moveY = properties.y);
 		}
 		
-		if (properties.specialButtonListener instanceof View.OnClickListener) {
+		if (properties.specialButtonListener == null) {
+            // A non-special button or inside custom controls screen so skip listener
+        } if (properties.specialButtonListener instanceof View.OnClickListener) {
 			setOnClickListener((View.OnClickListener) properties.specialButtonListener);
 		} else if (properties.specialButtonListener instanceof View.OnTouchListener) {
 			setOnTouchListener((View.OnTouchListener) properties.specialButtonListener);

File: app/src/main/java/net/kdt/pojavlaunch/InstallModActivity.java
Patch:
@@ -97,8 +97,6 @@ private void launchJavaRuntime(File modFile) {
 
 			System.out.println(Arrays.toString(javaArgList.toArray(new String[0])));
 			
-			JREUtils.setJavaEnvironment(this);
-			
 			//JREUtils.redirectStdio(false);
 			JREUtils.setJavaEnvironment(this);
 			JREUtils.initJavaRuntime();

File: app/src/main/java/net/kdt/pojavlaunch/prefs/UninstallJREDialogPreference.java
Patch:
@@ -17,6 +17,7 @@ public UninstallJREDialogPreference(Context ctx) {
     
     public UninstallJREDialogPreference(Context ctx, AttributeSet attrs) {
         super(ctx, attrs);
+        setPersistent(false);
         setDialogMessage(R.string.mcl_setting_title_uninstalljre);
         setPositiveButtonText(android.R.string.ok);
         setNegativeButtonText(android.R.string.cancel);

File: app/src/main/java/net/kdt/pojavlaunch/JREUtils.java
Patch:
@@ -19,6 +19,8 @@ public static void initJavaRuntime() {
 		dlopen(Tools.homeJreDir + "/lib/libawt.so");
 		dlopen(Tools.homeJreDir + "/lib/libawt_headless.so");
 		
+        dlopen("libopenal.so");
+        
         if (!dlopen(LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME)) {
             System.err.println("Failed to load custom OpenGL library " + LauncherPreferences.PREF_CUSTOM_OPENGL_LIBNAME + ". Fallbacking to GL4ES.");
             dlopen("libgl04es.so");

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -553,7 +553,7 @@ protected Throwable doInBackground(final String[] p1) {
 
 								if (libItem.downloads == null || libItem.downloads.artifact == null) {
 									MinecraftLibraryArtifact artifact = new MinecraftLibraryArtifact();
-									artifact.url = "https://libraries.minecraft.net/" + libArtifact;
+									artifact.url = (libItem.url == null ? "https://libraries.minecraft.net/" : libItem.url) + libArtifact;
 									libItem.downloads = new DependentLibrary.LibraryDownloads(artifact);
 
 									skipIfFailed = true;
@@ -570,6 +570,7 @@ protected Throwable doInBackground(final String[] p1) {
 										throw th;
 									} else {
 										th.printStackTrace();
+                                        publishProgress("0", th.getMessage());
 									}
 								}
 							}

File: app/src/main/java/net/kdt/pojavlaunch/value/DependentLibrary.java
Patch:
@@ -3,6 +3,7 @@
 public class DependentLibrary {
     public String name;
 	public LibraryDownloads downloads;
+    public String url;
 	
 	public static class LibraryDownloads
 	{

File: app/src/main/java/org/lwjgl/glfw/CallbackBridge.java
Patch:
@@ -12,7 +12,7 @@ public class CallbackBridge {
     
     public static final int ANDROID_TYPE_GRAB_STATE = 0;
 
-    public static int windowWidth, windowHeight;
+    public static volatile int windowWidth, windowHeight;
     public static int mouseX, mouseY;
     public static boolean mouseLeft;
     public static StringBuilder DEBUG_STRING = new StringBuilder();
@@ -32,7 +32,7 @@ public static void sendMouseEvent(int x, int y, int keycode, boolean isDown) {
     public static void sendCursorPos(int x, int y) {
         DEBUG_STRING.append("CursorPos=" + x + ", " + y + "\n");
         mouseX = x;
-        mouseY = windowHeight - y;
+        mouseY = y;
         sendData(JRE_TYPE_CURSOR_POS, x + ":" + y);
     }
 

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -796,8 +796,7 @@ public boolean onTouch(View v, MotionEvent e) {
 					sendMouseButton(1, isDown);
 				} else {
 					if (!isDown) {
-                        CallbackBridge.sendCursorPos(CallbackBridge.mouseX, CallbackBridge.mouseY);
-                        CallbackBridge.sendMouseKeycode(LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_RIGHT);
+                        CallbackBridge.sendMouseEvent(CallbackBridge.mouseX, CallbackBridge.mouseY, LWJGLGLFWKeycode.GLFW_MOUSE_BUTTON_RIGHT);
 					}
 					setRightOverride(isDown);
 				} break;

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -137,10 +137,9 @@ public static void launchMinecraft(final Activity ctx, MCProfile.Builder profile
                     String arg = overrideableArgList.get(i);
                     if (arg.startsWith("-D") && argOverride.startsWith(arg.substring(0, arg.indexOf('=') + 1))) {
                         overrideableArgList.set(i, argOverride);
-                        System.out.println("ARGProcessor: Replace override arg: " + arg);
-                    } else {
+                        // break;
+                    } else if (i+1 == overrideableArgList.size()) {
                         javaArgList.add(argOverride);
-                        System.out.println("ARGProcessor: Add non-override arg: " + arg);
                     }
                 }
             }

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -131,13 +131,16 @@ public static void launchMinecraft(final Activity ctx, MCProfile.Builder profile
 			}
         */
             // Override args
+            // TODO fix duplicate args
             for (String argOverride : LauncherPreferences.PREF_CUSTOM_JAVA_ARGS.split(" ")) {
                 for (int i = 0; i < overrideableArgList.size(); i++) {
                     String arg = overrideableArgList.get(i);
                     if (arg.startsWith("-D") && argOverride.startsWith(arg.substring(0, arg.indexOf('=') + 1))) {
                         overrideableArgList.set(i, argOverride);
+                        System.out.println("ARGProcessor: Replace override arg: " + arg);
                     } else {
                         javaArgList.add(argOverride);
+                        System.out.println("ARGProcessor: Add non-override arg: " + arg);
                     }
                 }
             }

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -113,7 +113,7 @@ public static void launchMinecraft(final Activity ctx, MCProfile.Builder profile
 		}
 		
 		String launchClassPath = generateLaunchClassPath(profile.getVersion());
-        Log.d(Tools.APP_NAME, "Java Classpath: " + launchClassPath);
+        System.out.println("Java Classpath: " + launchClassPath);
 		if (LAUNCH_TYPE == LTYPE_CREATEJAVAVM) {
 			javaArgList.add("-Djava.library.path=" + launchClassPath);
 		} else {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -113,6 +113,7 @@ public static void launchMinecraft(final Activity ctx, MCProfile.Builder profile
 		}
 		
 		String launchClassPath = generateLaunchClassPath(profile.getVersion());
+        Log.d(Tools.APP_NAME, "Java Classpath: " + launchClassPath);
 		if (LAUNCH_TYPE == LTYPE_CREATEJAVAVM) {
 			javaArgList.add("-Djava.library.path=" + launchClassPath);
 		} else {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -621,7 +621,7 @@ public static JMinecraftVersionList.Version getVersionInfo(String versionName) {
                     totalArgList.addAll(Arrays.asList(inheritsVer.arguments.game));
                     totalArgList.addAll(Arrays.asList(customVer.arguments.game));
                     
-                    customVer.arguments.game = totalArgList.toArray(new Object[0]);
+                    inheritsVer.arguments.game = totalArgList.toArray(new Object[0]);
                 }
                 
 				return inheritsVer;
@@ -638,7 +638,7 @@ private static void insertSafety(JMinecraftVersionList.Version targetVer, JMinec
 			try {
 				Field fieldA = fromVer.getClass().getDeclaredField(key);
 				value = fieldA.get(fromVer);
-				if (value != null || ((value instanceof String) && !((String) value).isEmpty())) {
+				if (((value instanceof String) && !((String) value).isEmpty()) || value != null) {
 					Field fieldB = targetVer.getClass().getDeclaredField(key);
 					fieldB.set(targetVer, value);
 				}

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -490,6 +490,9 @@ public boolean onTouch(View p1, MotionEvent e)
 								break;
 						}
 					}
+                    
+                    debugText.setText(LWJGLInputSender.DEBUG_STRING.toString());
+                    LWJGLInputSender.DEBUG_STRING.setLength(0);
 
 					return true;
 					// return !LWJGLInputSender.isGrabbing();

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -29,11 +29,13 @@ public static void loadPreferences() {
 		PREF_DEFAULTCTRL_PATH = DEFAULT_PREF.getString("defaultCtrl", Tools.CTRLDEF_FILE);
 		// Get double of max Android heap to set default heap size
 		int androidHeap = (int) (Runtime.getRuntime().maxMemory() / 1024l / 512l);
+        int doubleAndroidHeap = androidHeap * 2;
 		PREF_CUSTOM_JAVA_ARGS = DEFAULT_PREF.getString("javaArgs", "");
         if (PREF_CUSTOM_JAVA_ARGS.isEmpty()) {
             String DEFAULT_JAVA_ARGS =
                 "-Xms" + androidHeap + "m " +
-                "-Xmx" + (androidHeap * 2) + "m " +
+                // More than 900mb may make JVM not allocateable and crash
+                "-Xmx" + (doubleAndroidHeap > 900 ? 900 : doubleAndroidHeap) + "m " +
                 "-XX:+UseG1GC " +
                 // "-Dsun.rmi.dgc.server.gcInterval=2147483646 " +
                 "-XX:+UnlockExperimentalVMOptions " +

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -49,7 +49,7 @@ public static void loadPreferences() {
         String argLwjglLibname = "-Dorg.lwjgl.opengl.libname=";
         for (String arg : PREF_CUSTOM_JAVA_ARGS.split(" ")) {
             if (arg.startsWith(argLwjglLibname)) {
-                PREF_CUSTOM_JAVA_ARGS = arg.substring(argLwjglLibname.length());
+                PREF_CUSTOM_OPENGL_LIBNAME = arg.substring(argLwjglLibname.length());
             }
         }
 	}

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -25,6 +25,8 @@ public void onCreatePreferences(Bundle b, String str) {
 		seek2.setMax(1000);
 		seek2.setValue(500);
         
-        findPreference("javaArgs").setDefaultValue(LauncherPreferences.PREF_CUSTOM_JAVA_ARGS);
+        EditTextPreference javaArgsPref = (EditTextPreference) findPreference("javaArgs");
+        if (javaArgsPref.getText().isEmpty())
+            javaArgsPref.setText(LauncherPreferences.PREF_CUSTOM_JAVA_ARGS);
 	}
 }

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferences.java
Patch:
@@ -28,9 +28,9 @@ public static void loadPreferences() {
 		PREF_DEFAULTCTRL_PATH = DEFAULT_PREF.getString("defaultCtrl", Tools.CTRLDEF_FILE);
 		// Get double of max Android heap to set default heap size
 		int androidHeap = (int) (Runtime.getRuntime().maxMemory() / 1024l / 512l);
-		PREF_CUSTOM_JAVA_ARGS = DEFAULT_PREF.getString("customJavaArgs",
-			"-Xms" + androidHeap + " " +
-			"-Xmx" + (androidHeap * 2) + " " +
+		PREF_CUSTOM_JAVA_ARGS = DEFAULT_PREF.getString("javaArgs",
+			"-Xms" + androidHeap + "m " +
+			"-Xmx" + (androidHeap * 2) + "m " +
 			"-XX:+UseG1GC " +
 			"-Dsun.rmi.dgc.server.gcInterval=2147483646 " +
 			"-XX:+UnlockExperimentalVMOptions " +

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -844,8 +844,8 @@ private void runCraft() throws Throwable {
 				public void onEvent(int event, String file) {
 					try {
 						if (event == FileObserver.MODIFY && currLogFile.length() > 0l) {
-							appendToLog(Tools.read(file));
-							Tools.write(file, "");
+							appendToLog(Tools.read(currLogFile.getAbsolutePath()));
+							Tools.write(currLogFile.getAbsolutePath(), "");
 						}
 					} catch (Throwable th) {
 						Tools.showError(MainActivity.this, th);

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -1092,14 +1092,13 @@ public void onPrintLine(String text) {
 
 		String libName = System.getProperty("os.arch").contains("64") ? "lib64" : "lib";
 		String ldLibraryPath = (
-			Tools.homeJreDir + "/lib/server:" +
-			
 			"/system/" + libName + ":" +
 			"/vendor/" + libName + ":" +
 			"/vendor/" + libName + "/hw:" +
 
 			getApplicationInfo().nativeLibraryDir + ":" +
 			
+			Tools.homeJreDir + "/lib/server:" +
 			Tools.homeJreDir + "/lib/jli:" +
 			Tools.homeJreDir + "/lib"
 
@@ -1115,7 +1114,7 @@ public void onPrintLine(String text) {
 		setEnvironment("LD_LIBRARY_PATH", ldLibraryPath);
 		
 		// can fix java?
-		// setEnvironment("ORIGIN", Tools.homeJreDir + "/lib");
+		setEnvironment("ORIGIN", Tools.homeJreDir + "/lib");
 		
 		if (LAUNCH_TYPE == LTYPE_PROCESS) {
 			mLaunchShell.writeToProcess("cd $HOME");

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -682,7 +682,6 @@ public void onSurfaceCreated(GL10 gl, javax.microedition.khronos.egl.EGLConfig p
 						AndroidContextImplementation.display = egl10.eglGetCurrentDisplay();
 						AndroidContextImplementation.read = egl10.eglGetCurrentSurface(EGL10.EGL_READ);
 						AndroidContextImplementation.draw = egl10.eglGetCurrentSurface(EGL10.EGL_DRAW);
-						// egl10.eglMakeCurrent(AndroidContextImplementation.display, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);
 						
 						System.out.println(new StringBuffer().append("Gave up context: ").append(AndroidContextImplementation.context).toString());
 
@@ -691,7 +690,7 @@ public void onSurfaceCreated(GL10 gl, javax.microedition.khronos.egl.EGLConfig p
 						
 						if (LAUNCH_TYPE != LTYPE_PROCESS) {
 							BinaryExecutor.setupBridgeEGL();
-							egl10.eglMakeCurrent(theEgl.eglGetCurrentDisplay(), EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);
+							egl10.eglMakeCurrent(AndroidContextImplementation.display, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);
 						}
 						
 						new Thread(new Runnable(){

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -70,7 +70,6 @@ public void onSystemUiVisibilityChange(int visibility) {
 	
 	private void init() {
 		firstLaunchPrefs = getSharedPreferences("pojav_extract", MODE_PRIVATE);
-		new File(Tools.mpProfiles).mkdir();
 		
 		// Remove vmos warning???
 		/*
@@ -308,6 +307,7 @@ private void initMain()
 		mkdirs(Tools.worksDir);
 		mkdirs(Tools.versnDir);
 		mkdirs(Tools.libraries);
+		mkdirs(Tools.mpProfiles);
 		
 		File file0 = new File(Tools.mpProfiles);
 		File file1 = new File(Tools.mpModEnable);

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -122,7 +122,8 @@ public void handleMessage(Message msg) {
 	
 	private static final int LTYPE_INVOCATION = 0;
 	private static final int LTYPE_PROCESS = 1;
-	private final int LAUNCH_TYPE = LTYPE_INVOCATION;
+	private final int LAUNCH_TYPE = LTYPE_PROCESS;
+	// LTYPE_INVOCATION;
 
 	// private static Collection<? extends Provider.Service> rsaPkcs1List;
 

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -224,7 +224,8 @@ public void onClick(DialogInterface p1, int p2)
 			if (mVersionInfo.arguments == null) {
 				// Minecraft 1.12 and below
 				
-				SecondaryDexLoader.install(getClassLoader(), Arrays.asList(new File[]{new File(Tools.libraries + "/" + Tools.artifactToPath("org.lwjgl", "lwjglboardwalk", "2.9.1"))}), optDir);
+				// TODO uncomment after fix
+				// SecondaryDexLoader.install(getClassLoader(), Arrays.asList(new File[]{new File(Tools.libraries + "/" + Tools.artifactToPath("org.lwjgl", "lwjglboardwalk", "2.9.1"))}), optDir);
 			}
 			
 			this.displayMetrics = Tools.getDisplayMetrics(this);

File: app/src/main/java/net/kdt/pojavlaunch/SecondaryDexLoader.java
Patch:
@@ -140,5 +140,7 @@ public static void resetFieldArray(ClassLoader loader) throws Throwable {
 		
 		Field jlrField = findField(instance, "dexElements");
 		jlrField.set(instance, originalDex);
+		
+		originalDex = null;
 	}
 }

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -706,7 +706,7 @@ public void onSurfaceChanged(GL10 gl, int width, int height) {
 				});
 			glSurfaceView.setPreserveEGLContextOnPause(true);
 			glSurfaceView.setRenderMode(MinecraftGLView.RENDERMODE_CONTINUOUSLY);
-			glSurfaceView.requestRender();
+			// glSurfaceView.requestRender();
 		} catch (Throwable e) {
 			e.printStackTrace();
 			Tools.showError(this, e, true);

File: app/src/main/java/net/kdt/pojavlaunch/FatalErrorActivity.java
Patch:
@@ -6,11 +6,12 @@
 
 public class FatalErrorActivity extends AppCompatActivity
 {
-	public static void showError(Context ctx, Throwable th) {
+	public static void showError(Context ctx, boolean isFatalErr, Throwable th) {
 		Intent ferrorIntent = new Intent(ctx, FatalErrorActivity.class);
 		ferrorIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
 		ferrorIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 		ferrorIntent.putExtra("throwable", th);
+		ferrorIntent.putExtra("isFatal", isFatalErr);
 		ctx.startActivity(ferrorIntent);
 	}
 	

File: app/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -17,7 +17,7 @@ public void onCreate() {
 		Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler(){
 			@Override
 			public void uncaughtException(Thread thread, Throwable th) {
-				FatalErrorActivity.showError(PojavApplication.this, th);
+				FatalErrorActivity.showError(PojavApplication.this, true, th);
 				android.os.Process.killProcess(android.os.Process.myPid());
 			}
 		});

File: app/src/main/java/java/awt/GraphicsDevice.java
Patch:
@@ -21,7 +21,8 @@
 
 package java.awt;
 
-import org.apache.harmony.awt.internal.nls.Messages;
+import org.apache.harmony.awt.internal.nls.*;
+import org.lwjgl.opengl.*;
 
 /**
  * The GraphicsDevice class describes the graphics devices (such as screens or
@@ -62,7 +63,7 @@ public abstract class GraphicsDevice {
      * Constructor is not to be used directly as this class is abstract.
      */
     protected GraphicsDevice() {
-        displayMode = new DisplayMode(0, 0, DisplayMode.BIT_DEPTH_MULTI,
+        displayMode = new DisplayMode(AndroidDisplay.windowWidth, AndroidDisplay.windowHeight, DisplayMode.BIT_DEPTH_MULTI,
                 DisplayMode.REFRESH_RATE_UNKNOWN);
     }
 

File: app/src/main/java/net/kdt/pojavlaunch/mcfragments/CrashFragment.java
Patch:
@@ -40,7 +40,7 @@ public void onActivityCreated(Bundle b)
 		
 		crashView = (TextView) getView().findViewById(R.id.lmaintabconsoleLogCrashTextView);
 		crashView.setTypeface(Typeface.MONOSPACE);
-		crashView.setText(this.getText(R.string.main_nocrash));
+		crashView.setHint(this.getText(R.string.main_nocrash));
 		
 		//new File(crashPath).mkdirs();
 	}

File: app/src/main/java/net/kdt/pojavlaunch/mcfragments/ConsoleFragment.java
Patch:
@@ -20,7 +20,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
 
 		consoleView = (TextView) view.findViewById(R.id.lmaintabconsoleLogTextView);
 		consoleView.setTypeface(Typeface.MONOSPACE);
-		consoleView.setHint("No log");
+		consoleView.setHint(this.getText(R.string.main_nolog));
 		
 		return view;
     }

File: app/src/main/java/net/kdt/pojavlaunch/mcfragments/CrashFragment.java
Patch:
@@ -40,7 +40,7 @@ public void onActivityCreated(Bundle b)
 		
 		crashView = (TextView) getView().findViewById(R.id.lmaintabconsoleLogCrashTextView);
 		crashView.setTypeface(Typeface.MONOSPACE);
-		crashView.setHint("No crash detected.");
+		crashView.setText(this.getText(R.string.main_nocrash));
 		
 		//new File(crashPath).mkdirs();
 	}

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -31,7 +31,7 @@ public class PojavLoginActivity extends AppCompatActivity
 	private EditText edit2, edit3;
 	private int REQUEST_STORAGE_REQUEST_CODE = 1;
 	private ProgressBar prb;
-	private Switch sRemember, sOffline;
+	private CheckBox sRemember, sOffline;
 	
 	private boolean isPromptingGrant = false;
 	// private boolean isPermGranted = false;
@@ -247,8 +247,8 @@ public void run(){
 		edit3 = (EditText) findViewById(R.id.login_edit_password);
 		if(prb == null) prb = (ProgressBar) findViewById(R.id.launcherAccProgress);
 		
-		sRemember = (Switch) findViewById(R.id.login_switch_remember);
-		sOffline  = (Switch) findViewById(R.id.login_switch_offline);
+		sRemember = findViewById(R.id.login_switch_remember);
+		sOffline  = findViewById(R.id.login_switch_offline);
 		sOffline.setOnCheckedChangeListener(new OnCheckedChangeListener(){
 
 				@Override

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -116,7 +116,7 @@ private void viewInit() {
 		} catch(Exception e) {
 			//Tools.throwError(this, e);
 			e.printStackTrace();
-			toast(getStr(R.string.toast_login_error) + " " + e.getMessage());
+			toast(getStr(R.string.toast_login_error, e.getMessage()));
 			finish();
 		}
 
@@ -611,7 +611,7 @@ public void onReceived(String step, int maxProg, int currProg)
 						}
 					}
 
-					publishProgress("5", getStr(R.string.mcl_launch_download_client) + p1[0]);
+					publishProgress("5", getStr(R.string.mcl_launch_download_client, p1[0]));
 					outUnpatchedConvert = new File(unpatchedPath);
 					boolean patchedExist = new File(patchedFile).exists();
 					if (!patchedExist) {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -308,7 +308,7 @@ public static String[] generateLibClasspath(JMinecraftVersionList.Version info)
 				}
 			}
 		} else {
-			libDir.add(Tools.libraries + "/" + Tools.artifactToPath("lwjgl", "lwjglboardwalk", "2.9.1"));
+			libDir.add(Tools.libraries + "/" + Tools.artifactToPath("org.lwjgl", "lwjglboardwalk", "2.9.1"));
 		}
 		
 		for (DependentLibrary libItem: info.libraries) {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -304,11 +304,11 @@ public static String[] generateLibClasspath(JMinecraftVersionList.Version info)
 		if (info.arguments != null && lwjgl3Folder.exists()) {
 			for (File file: lwjgl3Folder.listFiles()) {
 				if (file.getName().endsWith(".jar")) {
-					libDir.add(Tools.libraries + "/" + file.getAbsolutePath());
+					libDir.add(file.getAbsolutePath());
 				}
 			}
 		} else {
-			libDir.add(Tools.artifactToPath("lwjgl", "lwjglboardwalk", "2.9.1"));
+			libDir.add(Tools.libraries + "/" + Tools.artifactToPath("lwjgl", "lwjglboardwalk", "2.9.1"));
 		}
 		
 		for (DependentLibrary libItem: info.libraries) {

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -304,7 +304,7 @@ public static String[] generateLibClasspath(JMinecraftVersionList.Version info)
 		if (info.arguments != null && lwjgl3Folder.exists()) {
 			for (File file: lwjgl3Folder.listFiles()) {
 				if (file.getName().endsWith(".jar")) {
-					libDir.add(file.getAbsolutePath());
+					libDir.add(Tools.libraries + "/" + file.getAbsolutePath());
 				}
 			}
 		} else {

File: app/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -13,8 +13,8 @@ public class PojavApplication extends Application
 {
 	@Override
 	public void onCreate() {
-		super.onCreate();
 		try {
+			super.onCreate();
 			Tools.APP_NAME = getResources().getString(R.string.app_short_name);
 			
 			PackageInfo thisApp = getPackageManager().getPackageInfo(getPackageName(), 0);
@@ -41,7 +41,7 @@ public void onCreate() {
 			new CustomControls(this).save(Tools.CTRLDEF_FILE);
 			
 		} catch (Exception e) {
-			e.printStackTrace();
+			Tools.showError(this, e, true);
 		}
 	}
 }

File: app/src/main/java/net/kdt/pojavlaunch/JMinecraftVersionList.java
Patch:
@@ -13,7 +13,7 @@ public class JMinecraftVersionList {
     public Version[] versions;
 
     public static class Version {
-		// Since 1.13
+		// Since 1.13, so it's one of ways to check
 		public Arguments arguments;
 
         public String assets;

File: app/src/main/java/net/kdt/pojavlaunch/value/customcontrols/ControlView.java
Patch:
@@ -59,7 +59,7 @@ public void setProperties(ControlButton properties, boolean changePos) {
 		} else if (properties.specialButtonListener instanceof View.OnTouchListener) {
 			setOnTouchListener((View.OnTouchListener) properties.specialButtonListener);
 		} else {
-			throw new IllegalArgumentException("Field " + ControlButton.class.getName() + ".specialButtonListener must be View.OnClickListener or View.OnTouchListener");
+			throw new IllegalArgumentException("Field " + ControlButton.class.getName() + ".specialButtonListener must be View.OnClickListener or View.OnTouchListener, but is " + properties.specialButtonListener.getClass().getName());
 		}
 		
 		setLayoutParams(new FrameLayout.LayoutParams(properties.width, properties.height));

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -47,7 +47,7 @@ private static int getInternalId(String type, String name) {
 					try {
 						Field f = perType.getDeclaredField(name);
 						f.setAccessible(true);
-						return f.get(null);
+						return (int) f.get(null);
 					} catch (Throwable th) {
 						th.printStackTrace();
 					}
@@ -63,7 +63,7 @@ private static int getInternalId(String type, String name) {
 				try {
 					Field f = perType.getDeclaredField(name);
 					f.setAccessible(true);
-					return f.get(null);
+					return (int) f.get(null);
 				} catch (Throwable th) {
 					th.printStackTrace();
 				}

File: app/src/main/java/com/kdt/handleview/HandleView.java
Patch:
@@ -80,7 +80,7 @@ private int getInternalId(String type, String name) {
 					try {
 						Field f = perType.getDeclaredField(name);
 						f.setAccessible(true);
-						return f.get(null);
+						return (int) f.get(null);
 					} catch (Throwable th) {
 						th.printStackTrace();
 					}

File: app/src/main/java/net/kdt/pojavlaunch/prefs/PojavPreferenceActivity.java
Patch:
@@ -162,7 +162,7 @@ public void onStopTrackingTouch(SeekBar bar) {
 		
 		try {
 			Field field = R.id.class.getDeclaredField(getId(bar.getId()).replace("seekbar", "progressseek"));
-			((TextView) findViewById(field.get(null))).setText(currProgress + "/" + bar.getMax());
+			((TextView) findViewById((Integer) field.get(null))).setText(currProgress + "/" + bar.getMax());
 		} catch (Throwable th) {
 			throw new RuntimeException(th);
 		}

File: app/src/main/java/com/kdt/handleview/ActionPopupWindow.java
Patch:
@@ -47,7 +47,7 @@ private static int getInternalId(String type, String name) {
 					try {
 						Field f = perType.getDeclaredField(name);
 						f.setAccessible(true);
-						return f.get(null);
+						return (int) f.get(null);
 					} catch (Throwable th) {
 						th.printStackTrace();
 					}
@@ -63,7 +63,7 @@ private static int getInternalId(String type, String name) {
 				try {
 					Field f = perType.getDeclaredField(name);
 					f.setAccessible(true);
-					return f.get(null);
+					return (int) f.get(null);
 				} catch (Throwable th) {
 					th.printStackTrace();
 				}

File: app/src/main/java/com/kdt/handleview/HandleView.java
Patch:
@@ -80,7 +80,7 @@ private int getInternalId(String type, String name) {
 					try {
 						Field f = perType.getDeclaredField(name);
 						f.setAccessible(true);
-						return f.get(null);
+						return (int) f.get(null);
 					} catch (Throwable th) {
 						th.printStackTrace();
 					}

File: app/src/main/java/net/kdt/pojavlaunch/prefs/PojavPreferenceActivity.java
Patch:
@@ -162,7 +162,7 @@ public void onStopTrackingTouch(SeekBar bar) {
 		
 		try {
 			Field field = R.id.class.getDeclaredField(getId(bar.getId()).replace("seekbar", "progressseek"));
-			((TextView) findViewById(field.get(null))).setText(currProgress + "/" + bar.getMax());
+			((TextView) findViewById((Integer) field.get(null))).setText(currProgress + "/" + bar.getMax());
 		} catch (Throwable th) {
 			throw new RuntimeException(th);
 		}

File: app/src/main/java/sun/security/jca/ProviderList.java
Patch:
@@ -6,7 +6,7 @@
 // Stub class to access to Android 7.0 hidden API
 public final class ProviderList
 {
-	public static List<Provider> providers() {
+	public List<Provider> providers() {
 		return null;
 	}
 }

File: app/src/main/java/com/pojavdx/dx/command/dexer/Main.java
Patch:
@@ -717,6 +717,8 @@ private boolean processFileBytes(String name, long lastModified, byte[] bytes) {
         String fixedName = fixPath(name);
 
         if (isClass) {
+			
+			// if (fixedName.startsWith("META-INF/versions/9")) return false;
 
             if (keepResources && args.keepClassesInJar) {
                 synchronized (outputResources) {

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -533,6 +533,7 @@ public void onCharPrint(char c)
 							libItem.name.startsWith("com.mojang:realms") ||
 							libItem.name.startsWith("net.java.jinput") ||
 							libItem.name.startsWith("net.minecraft.launchwrapper") ||
+							// libItem.name.startsWith("org.lwjgl.lwjgl:lwjgl") ||
 							libItem.name.startsWith("org.lwjgl") ||
 							libItem.name.startsWith("tv.twitch")
 							) { // Black list

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -1083,6 +1083,7 @@ public void fixRSAPadding() throws Exception {
 			debug_printMethodInfo(rsaFixStream, Provider.class.getMethods());
 			rsaFixStream.println("• System info");
 			rsaFixStream.println(" - Android version " + Build.VERSION.RELEASE + " (API " + Integer.toString(Build.VERSION.SDK_INT) + ")");
+			rsaFixStream.close();
 			
 			runOnUiThread(new Runnable(){
 					@Override

File: app/src/main/java/net/kdt/pojavlaunch/PojavApplication.java
Patch:
@@ -12,8 +12,7 @@
 public class PojavApplication extends Application
 {
 	@Override
-	public void onCreate()
-	{
+	public void onCreate() {
 		super.onCreate();
 		try {
 			Tools.APP_NAME = getResources().getString(R.string.app_short_name);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -426,11 +426,13 @@ public static void deleteRecursive(File fileOrDirectory) {
 	
 	public static File lastFileModified(String dir) {
 		File fl = new File(dir);
+		
 		File[] files = fl.listFiles(new FileFilter() {          
 				public boolean accept(File file) {
 					return file.isFile();
 				}
 			});
+			
 		long lastMod = Long.MIN_VALUE;
 		File choice = null;
 		for (File file : files) {
@@ -439,6 +441,7 @@ public boolean accept(File file) {
 				lastMod = file.lastModified();
 			}
 		}
+		
 		return choice;
 	}
 	

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -533,7 +533,7 @@ public void onCharPrint(char c)
 							libItem.name.startsWith("com.mojang:realms") ||
 							libItem.name.startsWith("net.java.jinput") ||
 							libItem.name.startsWith("net.minecraft.launchwrapper") ||
-							libItem.name.startsWith("org.lwjgl.lwjgl:lwjgl") ||
+							libItem.name.startsWith("org.lwjgl") ||
 							libItem.name.startsWith("tv.twitch")
 							) { // Black list
 							publishProgress("1", "Ignored " + libItem.name);

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -134,7 +134,7 @@ private void viewInit() {
 				versions.add(fVer.getName());
 			}
 		} catch (Exception e) {
-			versions.add(getStr(com.android.internal.R.string.dlg_error_title) + ":");
+			versions.add(getStr(R.string.global_error) + ":");
 			versions.add(e.getMessage());
 
 		} finally {

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -1166,7 +1166,7 @@ public void toggleMouse(View view) {
 	public void dialogForceClose()
 	{
 		new AlertDialog.Builder(this)
-			.setMessage(getResources().getString(R.string.mcn_exit_confirm, getResources().getString(com.android.internal.R.string.force_close)))
+			.setMessage(R.string.mcn_exit_confirm)
 			.setNegativeButton(android.R.string.cancel, null)
 			.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener(){
 

File: app/src/main/java/net/kdt/pojavlaunch/PojavLoginActivity.java
Patch:
@@ -34,7 +34,7 @@ public class PojavLoginActivity extends MineActivity
 	// private boolean isPermGranted = false;
 	
 	private SharedPreferences firstLaunchPrefs;
-	private String PREF_IS_DONOTSHOWAGAIN_WARN = "isWarnDoNotShowAgain";
+	// private String PREF_IS_DONOTSHOWAGAIN_WARN = "isWarnDoNotShowAgain";
 	private String PREF_IS_INSTALLED_LIBRARIES = "isLibrariesExtracted";
 	
 	private boolean isInitCalled = false;
@@ -553,7 +553,7 @@ public void onLoginDone(String[] result)
 					{
 						// TODO: Implement this method
 						if(result[0].equals("ERROR")){
-							Tools.dialogOnUiThread(PojavLoginActivity.this, getResources().getString(com.android.internal.R.string.dlg_error_title), strArrToString(result));
+							Tools.dialogOnUiThread(PojavLoginActivity.this, getResources().getString(R.string.global_error), strArrToString(result));
 						} else{
 							MCProfile.Builder builder = new MCProfile.Builder();
 							builder.setAccessToken(result[1]);

File: app/src/main/java/net/kdt/pojavlaunch/Tools.java
Patch:
@@ -182,7 +182,7 @@ public void run()
 			{
 				final String errMsg = showMore ? Log.getStackTraceString(e): e.getMessage();
 				new AlertDialog.Builder((Context) ctx)
-					.setTitle(com.android.internal.R.string.dlg_error_title)
+					.setTitle(R.string.global_error)
 					.setMessage(errMsg)
 					.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener(){
 

File: app/src/main/java/net/kdt/pojavlaunch/value/customcontrols/ControlView.java
Patch:
@@ -41,7 +41,7 @@ public void setProperties(ControlButton properties, boolean changePos) {
 			setTranslationX(moveX = properties.x);
 			setTranslationY(moveY = properties.y);
 		}
-
+		
 		setLayoutParams(new FrameLayout.LayoutParams(properties.width, properties.height));
 	}
 	

File: app/src/main/java/net/kdt/pojavlaunch/prefs/LauncherPreferenceFragment.java
Patch:
@@ -1,8 +1,8 @@
 package net.kdt.pojavlaunch.prefs;
 
 import android.os.*;
-import android.support.v7.preference.*;
 import net.kdt.pojavlaunch.*;
+import android.support.v7.preference.PreferenceFragmentCompat;
 
 public class LauncherPreferenceFragment extends PreferenceFragmentCompat
 {

File: app/src/main/java/net/minecraft/launchwrapper/LaunchClassLoader.java
Patch:
@@ -105,7 +105,7 @@ public LaunchClassLoader() { //String launchDexPath, String launchOptimizedDirec
 		//super(launchDexPath, launchOptimizedDirectory, launchLibrarySearchPath, parentClassLoader);
 		//System.out.println("MinecraftLaunchWrapper: How did Minecraft generated it: " + LaunchClassLoaderAgruments.launchDexPath);
 		
-        this.sources = new ArrayList<URL>(Arrays.asList(sources));
+        this.sources = new ArrayList<URL>(); // Arrays.asList(sources));
         Thread.currentThread().setContextClassLoader(this);
         addClassLoaderExclusion("java.");
         addClassLoaderExclusion("sun.");

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -744,7 +744,7 @@ protected void onPostExecute(Throwable p1)
 					jvmArgs.add("-Xmx1G");
 					*/
 					Intent mainIntent = new Intent(MCLauncherActivity.this, MainActivity.class);
-					mainIntent.addFlags(Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT);
+					// mainIntent.addFlags(Intent.FLAG_ACTIVITY_LAUNCH_ADJACENT);
 					mainIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT);
 					mainIntent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
 					if (PojavPreferenceActivity.PREF_FREEFORM) {

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -258,7 +258,7 @@ public void onCheckedChanged(CompoundButton button, boolean isChecked)
 
 			this.drawerLayout.closeDrawers();
 			
-			// AndroidLWJGLKeycode.isSendChar = mVersionInfo.minimumLauncherVersion < 18;
+			AndroidLWJGLKeycode.isBackspaceAfterChar = mVersionInfo.minimumLauncherVersion >= 18;
 			
 			placeMouseAt(AndroidDisplay.windowWidth / 2, AndroidDisplay.windowHeight / 2);
 			new Thread(new Runnable(){

File: app/src/main/java/net/kdt/pojavlaunch/AndroidLWJGLKeycode.java
Patch:
@@ -7,7 +7,7 @@
 import org.lwjgl.opengl.*;
 
 public class AndroidLWJGLKeycode {
-	public static boolean isSendChar;
+	// public static boolean isSendChar;
 	private static final Map<Integer, Integer> androidToLwjglMap;
 	static {
 		androidToLwjglMap = new ArrayMap<Integer, Integer>();
@@ -126,7 +126,8 @@ public static void execKey(MainActivity mainActivity, KeyEvent keyEvent, int i,
 			}
 			*/
 			System.out.println("Sending key as char: " + ((char) keyEvent.getUnicodeChar()));
-			if (isSendChar) mainActivity.sendKeyPress(0, (char) keyEvent.getUnicodeChar(), isDown);
+			// if (isSendChar)
+				mainActivity.sendKeyPress(0, (char) keyEvent.getUnicodeChar(), isDown);
 		} catch (Throwable th) {
 			th.printStackTrace();
 		}

File: app/src/main/java/net/kdt/pojavlaunch/MainActivity.java
Patch:
@@ -258,7 +258,7 @@ public void onCheckedChanged(CompoundButton button, boolean isChecked)
 
 			this.drawerLayout.closeDrawers();
 			
-			AndroidLWJGLKeycode.isSendChar = mVersionInfo.minimumLauncherVersion < 18;
+			// AndroidLWJGLKeycode.isSendChar = mVersionInfo.minimumLauncherVersion < 18;
 			
 			placeMouseAt(AndroidDisplay.windowWidth / 2, AndroidDisplay.windowHeight / 2);
 			new Thread(new Runnable(){

File: app/src/main/java/net/kdt/pojavlaunch/MCLauncherActivity.java
Patch:
@@ -885,7 +885,7 @@ public void onClick(DialogInterface p1, int p2)
 								aboutB.setTitle(R.string.mcl_option_about);
 								try
 								{
-									aboutB.setMessage(String.format(getAssetManager().loadAsset("about_en.txt"),
+									aboutB.setMessage(String.format(Tools.read(getAssets().open("about_en.txt")),
 										Tools.APP_NAME,
 										Tools.usingVerName,
 										org.lwjgl.Sys.getVersion())

