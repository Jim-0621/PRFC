File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/Lang.java
Patch:
@@ -389,7 +389,7 @@ public static <T, U> void forEachZipped(Iterable<T> i1, Iterable<U> i2, BiConsum
 
     public static synchronized Timer getTimer() {
         if (timer == null) {
-            timer = new Timer();
+            timer = new Timer(true);
         }
         return timer;
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -236,6 +236,7 @@ public VersionSettingsPage(boolean globalSetting) {
                 VBox.setMargin(chkAutoAllocate, new Insets(0, 0, 8, 5));
 
                 HBox lowerBoundPane = new HBox(8);
+                lowerBoundPane.setStyle("-fx-view-order: -1;"); // prevent the indicator from being covered by the progress bar
                 lowerBoundPane.setAlignment(Pos.CENTER);
                 VBox.setMargin(lowerBoundPane, new Insets(0, 0, 0, 16));
                 {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/InputDialogPane.java
Patch:
@@ -27,6 +27,7 @@
 
 import java.util.concurrent.CompletableFuture;
 
+import static org.jackhuang.hmcl.ui.FXUtils.onEscPressed;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public class InputDialogPane extends JFXDialogLayout {
@@ -68,6 +69,8 @@ public InputDialogPane(String text, String initialValue, FutureCallback<String>
                 lblCreationWarning.setText(msg);
             });
         });
+
+        onEscPressed(this, cancelButton::fire);
     }
 
     public CompletableFuture<String> getCompletableFuture() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -76,7 +76,6 @@
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
 import java.io.*;
-import java.lang.ref.WeakReference;
 import java.net.*;
 import java.nio.file.Files;
 import java.nio.file.Path;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -337,6 +337,8 @@ public boolean saveVersionSetting(String id) {
         if (!FileUtils.makeDirectory(file.getAbsoluteFile().getParentFile()))
             return false;
 
+        LOG.info("Saving version setting: " + id);
+
         try {
             FileUtils.writeText(file, GSON.toJson(localVersionSettings.get(id)));
             return true;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -218,7 +218,7 @@ public VersionSetting createLocalVersionSetting(String id) {
 
     private VersionSetting initLocalVersionSetting(String id, VersionSetting vs) {
         localVersionSettings.put(id, vs);
-        vs.addPropertyChangedListener(a -> saveVersionSetting(id));
+        vs.addListener(a -> saveVersionSetting(id));
         return vs;
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -188,7 +188,7 @@ private void addPropertyChangedListener(InvalidationListener listener) {
         global.addListener(listener);
         gameDir.addListener(listener);
         useRelativePath.addListener(listener);
-        global.get().addPropertyChangedListener(listener);
+        global.get().addListener(listener);
         selectedVersion.addListener(listener);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -552,9 +552,9 @@ public void loadVersion(Profile profile, String versionId) {
         FXUtils.bindEnum(cboLauncherVisibility, versionSetting.launcherVisibilityProperty());
         FXUtils.bindEnum(cboProcessPriority, versionSetting.processPriorityProperty());
 
-        versionSetting.usesGlobalProperty().addListener(specificSettingsListener);
         if (versionId != null)
             enableSpecificSettings.set(!versionSetting.isUsesGlobal());
+        versionSetting.usesGlobalProperty().addListener(specificSettingsListener);
 
         javaItem.setToggleSelectedListener(newValue -> {
             if (javaItem.getSelectedData() == null || updatingSelectedJava)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/UpgradeDialog.java
Patch:
@@ -41,6 +41,9 @@
 
 public final class UpgradeDialog extends JFXDialogLayout {
     public UpgradeDialog(RemoteVersion remoteVersion, Runnable updateRunnable) {
+        maxWidthProperty().bind(Controllers.getScene().widthProperty().multiply(0.7));
+        maxHeightProperty().bind(Controllers.getScene().heightProperty().multiply(0.7));
+
         setHeading(new Label(i18n("update.changelog")));
         setBody(new ProgressIndicator());
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/Versions.java
Patch:
@@ -83,7 +83,7 @@ public static void downloadModpackImpl(Profile profile, String version, RemoteMo
         } catch (IOException e) {
             Controllers.dialog(
                     i18n("install.failed.downloading.detail", file.getFile().getUrl()) + "\n" + StringUtils.getStackTrace(e),
-                    i18n("download.failed.no_code", file.getFile().getUrl()), MessageDialogPane.MessageType.ERROR);
+                    i18n("download.failed.no_code"), MessageDialogPane.MessageType.ERROR);
             return;
         }
         Controllers.taskDialog(
@@ -96,7 +96,7 @@ public static void downloadModpackImpl(Profile profile, String version, RemoteMo
                             } else {
                                 Controllers.dialog(
                                         i18n("install.failed.downloading.detail", file.getFile().getUrl()) + "\n" + StringUtils.getStackTrace(e),
-                                        i18n("download.failed.no_code", file.getFile().getUrl()), MessageDialogPane.MessageType.ERROR);
+                                        i18n("download.failed.no_code"), MessageDialogPane.MessageType.ERROR);
                             }
                         }).executor(true),
                 i18n("message.downloading"),

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -192,7 +192,7 @@ public void checkUpdates() {
                         })
                         .whenComplete(Schedulers.javafx(), (result, exception) -> {
                             if (exception != null || result == null) {
-                                Controllers.dialog("Failed to check updates", "failed", MessageDialogPane.MessageType.ERROR);
+                                Controllers.dialog(i18n("mods.check_updates.failed_check"), i18n("message.failed"), MessageDialogPane.MessageType.ERROR);
                             } else if (result.isEmpty()) {
                                 Controllers.dialog(i18n("mods.check_updates.empty"));
                             } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModUpdatesPage.java
Patch:
@@ -139,7 +139,7 @@ private void updateMods() {
                 task.whenComplete(Schedulers.javafx(), exception -> {
                     fireEvent(new PageCloseEvent());
                     if (!task.getFailedMods().isEmpty()) {
-                        Controllers.dialog(i18n("mods.check_updates.failed") + "\n" +
+                        Controllers.dialog(i18n("mods.check_updates.failed_download") + "\n" +
                                         task.getFailedMods().stream().map(LocalModFile::getFileName).collect(Collectors.joining("\n")),
                                 i18n("install.failed"),
                                 MessageDialogPane.MessageType.ERROR);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/LibraryAnalyzer.java
Patch:
@@ -170,6 +170,7 @@ public static boolean isModded(VersionProvider provider, Version version) {
         Version resolvedVersion = version.resolve(provider);
         String mainClass = resolvedVersion.getMainClass();
         return mainClass != null && (LAUNCH_WRAPPER_MAIN.equals(mainClass)
+                || mainClass.startsWith("net.minecraftforge")
                 || mainClass.startsWith("net.fabricmc")
                 || mainClass.startsWith("org.quiltmc")
                 || mainClass.startsWith("cpw.mods"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/AboutPage.java
Patch:
@@ -36,6 +36,7 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.Reader;
+import java.nio.charset.StandardCharsets;
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 import static org.jackhuang.hmcl.util.logging.Logger.LOG;
@@ -116,7 +117,7 @@ private static ComponentList loadIconedTwoLineList(String path) {
             return componentList;
         }
 
-        try (Reader reader = new InputStreamReader(input)) {
+        try (Reader reader = new InputStreamReader(input, StandardCharsets.UTF_8)) {
             JsonArray array = JsonUtils.GSON.fromJson(reader, JsonArray.class);
 
             for (JsonElement element : array) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -685,7 +685,7 @@ private void initJavaSubtitle() {
                 version = null;
             } else {
                 gameVersionNumber = GameVersionNumber.asGameVersion(repository.getGameVersion(versionId));
-                version = repository.getVersion(versionId);
+                version = repository.getResolvedVersion(versionId);
             }
 
             try {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -510,7 +510,7 @@ public AccountDetailsInputPane(AccountFactory<?> factory, Runnable onAction) {
 
             if (factory instanceof OfflineAccountFactory) {
                 txtUsername.setPromptText(i18n("account.methods.offline.name.special_characters"));
-                runInFX(() -> FXUtils.installFastTooltip(txtUsername, i18n("account.methods.offline.name.special_characters")));
+                FXUtils.installFastTooltip(txtUsername, i18n("account.methods.offline.name.special_characters"));
 
                 JFXHyperlink purchaseLink = new JFXHyperlink(i18n("account.methods.microsoft.purchase"));
                 purchaseLink.setExternalLink(YggdrasilService.PURCHASE_URL);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/MainPage.java
Patch:
@@ -66,7 +66,6 @@
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
 import static org.jackhuang.hmcl.ui.FXUtils.SINE;
-import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public final class MainPage extends StackPane implements DecoratorPage {
@@ -224,7 +223,7 @@ public final class MainPage extends StackPane implements DecoratorPage {
             StackPane.setAlignment(svg, Pos.CENTER_RIGHT);
             graphic.getChildren().setAll(svg);
             graphic.setTranslateX(12);
-            runInFX(() -> FXUtils.installFastTooltip(menuButton, i18n("version.switch")));
+            FXUtils.installFastTooltip(menuButton, i18n("version.switch"));
             menuButton.setGraphic(graphic);
 
             launchPane.getChildren().setAll(launchButton, separator, menuButton);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -165,7 +165,7 @@ protected Skin(RootPage control) {
             downloadItem.setActionButtonVisible(false);
             downloadItem.setTitle(i18n("download"));
             downloadItem.setOnAction(e -> Controllers.navigate(Controllers.getDownloadPage()));
-            runInFX(() -> FXUtils.installFastTooltip(downloadItem, i18n("download.hint")));
+            FXUtils.installFastTooltip(downloadItem, i18n("download.hint"));
 
             // fifth item in left sidebar
             AdvancedListItem launcherSettingsItem = new AdvancedListItem();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadListPage.java
Patch:
@@ -64,7 +64,6 @@
 import java.util.Optional;
 import java.util.stream.Collectors;
 
-import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.ui.FXUtils.stringConverter;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 import static org.jackhuang.hmcl.util.javafx.ExtendedProperties.selectedItemPropertyFor;
@@ -302,7 +301,7 @@ protected ModDownloadListPageSkin(DownloadListPage control) {
                 lblGameVersion.visibleProperty().bind(hasVersion);
                 gameVersionField.managedProperty().bind(hasVersion);
                 gameVersionField.visibleProperty().bind(hasVersion);
-                runInFX(() -> FXUtils.installFastTooltip(gameVersionField, i18n("search.enter")));
+                FXUtils.installFastTooltip(gameVersionField, i18n("search.enter"));
 
                 FXUtils.onChangeAndOperate(getSkinnable().version, version -> {
                     if (StringUtils.isNotBlank(version.getVersion())) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -62,7 +62,6 @@
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
-import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public class DownloadPage extends Control implements DecoratorPage {
@@ -241,14 +240,14 @@ protected ModDownloadPageSkin(DownloadPage control) {
                     openMcmodButton.setExternalLink(getSkinnable().translations.getMcmodUrl(getSkinnable().mod));
                     descriptionPane.getChildren().add(openMcmodButton);
                     openMcmodButton.setMinWidth(Region.USE_PREF_SIZE);
-                    runInFX(() -> FXUtils.installFastTooltip(openMcmodButton, i18n("mods.mcmod")));
+                    FXUtils.installFastTooltip(openMcmodButton, i18n("mods.mcmod"));
                 }
 
                 JFXHyperlink openUrlButton = new JFXHyperlink(control.page.getLocalizedOfficialPage());
                 openUrlButton.setExternalLink(getSkinnable().addon.getPageUrl());
                 descriptionPane.getChildren().add(openUrlButton);
                 openUrlButton.setMinWidth(Region.USE_PREF_SIZE);
-                runInFX(() -> FXUtils.installFastTooltip(openUrlButton, control.page.getLocalizedOfficialPage()));
+                FXUtils.installFastTooltip(openUrlButton, control.page.getLocalizedOfficialPage());
             }
 
             SpinnerPane spinnerPane = new SpinnerPane();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/LauncherSettingsPage.java
Patch:
@@ -36,7 +36,6 @@
 import java.util.Locale;
 
 import static org.jackhuang.hmcl.ui.versions.VersionPage.wrap;
-import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public class LauncherSettingsPage extends DecoratorAnimatedPage implements DecoratorPage, PageAware {
@@ -76,7 +75,6 @@ public LauncherSettingsPage() {
                         settingsItem.setTitle(i18n("settings.type.global.manage"));
                         settingsItem.setLeftGraphic(wrap(SVG.GAMEPAD));
                         settingsItem.activeProperty().bind(tab.getSelectionModel().selectedItemProperty().isEqualTo(gameTab));
-                        runInFX(() -> FXUtils.installFastTooltip(settingsItem, i18n("settings.type.global.manage")));
                         settingsItem.setOnAction(e -> tab.select(gameTab));
                     })
                     .addNavigationDrawerItem(javaItem -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListPage.java
Patch:
@@ -91,13 +91,11 @@ public GameListPage() {
                         installNewGameItem.setTitle(i18n("install.new_game"));
                         installNewGameItem.setLeftGraphic(VersionPage.wrap(SVG.PLUS_CIRCLE_OUTLINE));
                         installNewGameItem.setOnAction(e -> Versions.addNewGame());
-                        runInFX(() -> FXUtils.installFastTooltip(installNewGameItem, i18n("install.new_game")));
                     })
                     .addNavigationDrawerItem(installModpackItem -> {
                         installModpackItem.setTitle(i18n("install.modpack"));
                         installModpackItem.setLeftGraphic(VersionPage.wrap(SVG.PACK));
                         installModpackItem.setOnAction(e -> Versions.importModpack());
-                        runInFX(() -> FXUtils.installFastTooltip(installModpackItem, i18n("install.modpack")));
                     })
                     .addNavigationDrawerItem(refreshItem -> {
                         refreshItem.setTitle(i18n("button.refresh"));
@@ -108,7 +106,6 @@ public GameListPage() {
                         globalManageItem.setTitle(i18n("settings.type.global.manage"));
                         globalManageItem.setLeftGraphic(VersionPage.wrap(SVG.GEAR_OUTLINE));
                         globalManageItem.setOnAction(e -> modifyGlobalGameSettings());
-                        runInFX(() -> FXUtils.installFastTooltip(globalManageItem, i18n("settings.type.global.manage")));
                     });
             FXUtils.setLimitHeight(bottomLeftCornerList, 40 * 4 + 12 * 2);
             setLeft(pane, bottomLeftCornerList);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilService.java
Patch:
@@ -148,14 +148,14 @@ public void invalidate(String accessToken, String clientToken) throws Authentica
         requireEmpty(request(provider.getInvalidationURL(), createRequestWithCredentials(accessToken, clientToken)));
     }
 
-    public void uploadSkin(UUID uuid, String accessToken, String model, Path file) throws AuthenticationException, UnsupportedOperationException {
+    public void uploadSkin(UUID uuid, String accessToken, boolean isSlim, Path file) throws AuthenticationException, UnsupportedOperationException {
         try {
             HttpURLConnection con = NetworkUtils.createHttpConnection(provider.getSkinUploadURL(uuid));
             con.setRequestMethod("PUT");
             con.setRequestProperty("Authorization", "Bearer " + accessToken);
             con.setDoOutput(true);
             try (HttpMultipartRequest request = new HttpMultipartRequest(con)) {
-                request.param("model", model);
+                request.param("model", isSlim ? "slim" : "");
                 try (InputStream fis = Files.newInputStream(file)) {
                     request.file("file", FileUtils.getName(file), "image/" + FileUtils.getExtension(file), fis);
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -388,15 +388,15 @@ private static final class ModItem extends StackPane {
 
                     switch (dataItem.getVersionType()) {
                         case Alpha:
-                            content.getTags().add(i18n("version.game.snapshot"));
+                            content.getTags().add(i18n("mods.channel.alpha"));
                             graphicPane.getChildren().setAll(SVG.ALPHA_CIRCLE_OUTLINE.createIcon(Theme.blackFill(), 24, 24));
                             break;
                         case Beta:
-                            content.getTags().add(i18n("version.game.snapshot"));
+                            content.getTags().add(i18n("mods.channel.beta"));
                             graphicPane.getChildren().setAll(SVG.BETA_CIRCLE_OUTLINE.createIcon(Theme.blackFill(), 24, 24));
                             break;
                         case Release:
-                            content.getTags().add(i18n("version.game.release"));
+                            content.getTags().add(i18n("mods.channel.release"));
                             graphicPane.getChildren().setAll(SVG.RELEASE_CIRCLE_OUTLINE.createIcon(Theme.blackFill(), 24, 24));
                             break;
                     }

File: HMCL/src/main/java11/org/jackhuang/hmcl/util/logging/CallerFinder.java
Patch:
@@ -9,13 +9,13 @@
  * @author Glavo
  */
 final class CallerFinder {
-    private static final StackWalker WALKER = StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);
     private static final String PACKAGE_PREFIX = CallerFinder.class.getPackageName() + ".";
     private static final Predicate<StackWalker.StackFrame> PREDICATE = stackFrame -> !stackFrame.getClassName().startsWith(PACKAGE_PREFIX);
     private static final Function<Stream<StackWalker.StackFrame>, Optional<StackWalker.StackFrame>> FUNCTION = stream -> stream.filter(PREDICATE).findFirst();
+    private static final Function<StackWalker.StackFrame, String> FRAME_MAPPING = frame -> frame.getClassName() + "." + frame.getMethodName();
 
     static String getCaller() {
-        return WALKER.walk(FUNCTION).map(it -> it.getClassName() + "." + it.getMethodName()).orElse(null);
+        return StackWalker.getInstance().walk(FUNCTION).map(FRAME_MAPPING).orElse(null);
     }
 
     private CallerFinder() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/JavaManagementPage.java
Patch:
@@ -50,7 +50,6 @@
 import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
 import org.jackhuang.hmcl.util.platform.Platform;
-import org.jackhuang.hmcl.util.tree.TarFileTree;
 
 import java.io.*;
 import java.nio.file.Files;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/DownloadSettingsPage.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui.main;
 
 import com.jfoenix.controls.*;
-import javafx.geometry.HPos;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.control.Label;
@@ -204,7 +203,6 @@ public DownloadSettingsPage() {
                         Label host = new Label(i18n("settings.launcher.proxy.host"));
                         GridPane.setRowIndex(host, 1);
                         GridPane.setColumnIndex(host, 0);
-                        GridPane.setHalignment(host, HPos.RIGHT);
                         gridPane.getChildren().add(host);
                     }
 
@@ -220,7 +218,6 @@ public DownloadSettingsPage() {
                         Label port = new Label(i18n("settings.launcher.proxy.port"));
                         GridPane.setRowIndex(port, 2);
                         GridPane.setColumnIndex(port, 0);
-                        GridPane.setHalignment(port, HPos.RIGHT);
                         gridPane.getChildren().add(port);
                     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -881,8 +881,8 @@ public void onExit(int exitCode, ExitType exitType) {
 
     }
 
-    private static final String ORACLEJDK_DOWNLOAD_LINK = "https://www.java.com/download";
-    private static final String OPENJDK_DOWNLOAD_LINK = "https://docs.microsoft.com/java/openjdk/download";
+    private static final String ORACLEJDK_DOWNLOAD_LINK = "https://www.java.com/download/";
+    private static final String OPENJDK_DOWNLOAD_LINK = "https://learn.microsoft.com/java/openjdk/download";
 
     public static final Queue<ManagedProcess> PROCESSES = new ConcurrentLinkedQueue<>();
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -244,9 +244,9 @@ public void onStop(boolean success, TaskExecutor executor) {
                                 } else if (ex instanceof PermissionException) {
                                     message = i18n("launch.failed.executable_permission");
                                 } else if (ex instanceof ProcessCreationException) {
-                                    message = i18n("launch.failed.creating_process") + ex.getLocalizedMessage();
+                                    message = i18n("launch.failed.creating_process") + "\n" + ex.getLocalizedMessage();
                                 } else if (ex instanceof NotDecompressingNativesException) {
-                                    message = i18n("launch.failed.decompressing_natives") + ex.getLocalizedMessage();
+                                    message = i18n("launch.failed.decompressing_natives") + "\n" + ex.getLocalizedMessage();
                                 } else if (ex instanceof LibraryDownloadException) {
                                     message = i18n("launch.failed.download_library", ((LibraryDownloadException) ex).getLibrary().getName()) + "\n";
                                     if (ex.getCause() instanceof ResponseCodeException) {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackInstallTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.game;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.mod.MinecraftInstanceTask;
@@ -67,8 +66,7 @@ public HMCLModpackInstallTask(Profile profile, File zipFile, Modpack modpack, St
         ModpackConfiguration<Modpack> config = null;
         try {
             if (json.exists()) {
-                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), new TypeToken<ModpackConfiguration<Modpack>>() {
-                }.getType());
+                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), ModpackConfiguration.typeOf(Modpack.class));
 
                 if (!HMCLModpackProvider.INSTANCE.getName().equals(config.getType()))
                     throw new IllegalArgumentException("Version " + name + " is not a HMCL modpack. Cannot update this version.");

File: HMCL/src/main/java/org/jackhuang/hmcl/game/ModpackHelper.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.game;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.apache.commons.compress.archivers.zip.ZipFile;
 import org.jackhuang.hmcl.mod.*;
 import org.jackhuang.hmcl.mod.curse.CurseModpackProvider;
@@ -141,8 +140,7 @@ public static ModpackConfiguration<?> readModpackConfiguration(File file) throws
             throw new FileNotFoundException(file.getPath());
         else
             try {
-                return JsonUtils.GSON.fromJson(FileUtils.readText(file), new TypeToken<ModpackConfiguration<?>>() {
-                }.getType());
+                return JsonUtils.GSON.fromJson(FileUtils.readText(file), ModpackConfiguration.class);
             } catch (JsonParseException e) {
                 throw new IOException("Malformed modpack configuration");
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/java/JavaManifest.java
Patch:
@@ -19,7 +19,6 @@
 
 import com.google.gson.*;
 import com.google.gson.annotations.JsonAdapter;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
 import org.jackhuang.hmcl.util.platform.Platform;
@@ -29,6 +28,8 @@
 import java.util.Map;
 import java.util.Optional;
 
+import static org.jackhuang.hmcl.util.gson.JsonUtils.mapTypeOf;
+
 /**
  * @author Glavo
  */
@@ -63,8 +64,7 @@ public Map<String, JavaLocalFiles.Local> getFiles() {
 
     public static final class Serializer implements JsonSerializer<JavaManifest>, JsonDeserializer<JavaManifest> {
 
-        private static final Type LOCAL_FILES_TYPE = new TypeToken<Map<String, JavaLocalFiles.Local>>() {
-        }.getType();
+        private static final Type LOCAL_FILES_TYPE = mapTypeOf(String.class, JavaLocalFiles.Local.class).getType();
 
         @Override
         public JsonElement serialize(JavaManifest src, Type typeOfSrc, JsonSerializationContext context) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/HelpPage.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui.main;
 
 import com.google.gson.annotations.SerializedName;
-import com.google.gson.reflect.TypeToken;
 import javafx.geometry.Insets;
 import javafx.scene.control.ScrollPane;
 import javafx.scene.layout.VBox;
@@ -34,6 +33,7 @@
 import java.util.Collections;
 import java.util.List;
 
+import static org.jackhuang.hmcl.util.gson.JsonUtils.listTypeOf;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public class HelpPage extends SpinnerPane {
@@ -63,8 +63,7 @@ public HelpPage() {
 
     private void loadHelp() {
         showSpinner();
-        Task.<List<HelpCategory>>supplyAsync(() -> HttpRequest.GET("https://docs.hmcl.net/index.json").getJson(new TypeToken<List<HelpCategory>>() {
-        }.getType()))
+        Task.supplyAsync(() -> HttpRequest.GET("https://docs.hmcl.net/index.json").getJson(listTypeOf(HelpCategory.class)))
                 .thenAcceptAsync(Schedulers.javafx(), helpCategories -> {
                     for (HelpCategory category : helpCategories) {
                         ComponentList categoryPane = new ComponentList();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/YggdrasilServer.java
Patch:
@@ -17,7 +17,6 @@
  */
 package org.jackhuang.hmcl.auth.offline;
 
-import com.google.gson.reflect.TypeToken;
 import org.glavo.png.javafx.PNGJavaFXUtils;
 import org.jackhuang.hmcl.auth.yggdrasil.GameProfile;
 import org.jackhuang.hmcl.auth.yggdrasil.TextureModel;
@@ -38,6 +37,7 @@
 import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.jackhuang.hmcl.util.Lang.mapOf;
 import static org.jackhuang.hmcl.util.Pair.pair;
+import static org.jackhuang.hmcl.util.gson.JsonUtils.listTypeOf;
 
 public class YggdrasilServer extends HttpServer {
 
@@ -81,8 +81,7 @@ private Response status(Request request) {
     }
 
     private Response profiles(Request request) throws IOException {
-        List<String> names = JsonUtils.fromNonNullJsonFully(request.getSession().getInputStream(), new TypeToken<List<String>>() {
-        }.getType());
+        List<String> names = JsonUtils.fromNonNullJsonFully(request.getSession().getInputStream(), listTypeOf(String.class));
         return ok(names.stream().distinct()
                 .map(this::findCharacterByName)
                 .flatMap(Lang::toStream)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseInstallTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.curse;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
@@ -99,8 +98,7 @@ public CurseInstallTask(DefaultDependencyManager dependencyManager, File zipFile
         ModpackConfiguration<CurseManifest> config = null;
         try {
             if (json.exists()) {
-                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), new TypeToken<ModpackConfiguration<CurseManifest>>() {
-                }.getType());
+                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), ModpackConfiguration.typeOf(CurseManifest.class));
 
                 if (!CurseModpackProvider.INSTANCE.getName().equals(config.getType()))
                     throw new IllegalArgumentException("Version " + name + " is not a Curse modpack. Cannot update this version.");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackCompletionTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.mcbbs;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
 import org.jackhuang.hmcl.mod.ModManager;
@@ -88,8 +87,7 @@ public CompletableFuture<Void> getFuture(TaskCompletableFuture executor) {
             if (configuration == null) {
                 // Load configuration from disk
                 try {
-                    configuration = JsonUtils.fromNonNullJson(FileUtils.readText(configurationFile), new TypeToken<ModpackConfiguration<McbbsModpackManifest>>() {
-                    }.getType());
+                    configuration = JsonUtils.fromNonNullJson(FileUtils.readText(configurationFile), ModpackConfiguration.typeOf(McbbsModpackManifest.class));
                 } catch (IOException | JsonParseException e) {
                     throw new IOException("Malformed modpack configuration");
                 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackLocalInstallTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.mcbbs;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
@@ -80,8 +79,7 @@ public McbbsModpackLocalInstallTask(DefaultDependencyManager dependencyManager,
         ModpackConfiguration<McbbsModpackManifest> config = null;
         try {
             if (json.exists()) {
-                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), new TypeToken<ModpackConfiguration<McbbsModpackManifest>>() {
-                }.getType());
+                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), ModpackConfiguration.typeOf(McbbsModpackManifest.class));
 
                 if (!McbbsModpackProvider.INSTANCE.getName().equals(config.getType()))
                     throw new IllegalArgumentException("Version " + name + " is not a Mcbbs modpack. Cannot update this version.");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackProvider.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.mcbbs;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
 import org.apache.commons.compress.archivers.zip.ZipFile;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
@@ -56,8 +55,7 @@ public Task<?> createUpdateTask(DefaultDependencyManager dependencyManager, Stri
 
     @Override
     public void injectLaunchOptions(String modpackConfigurationJson, LaunchOptions.Builder builder) {
-        ModpackConfiguration<McbbsModpackManifest> config = JsonUtils.GSON.fromJson(modpackConfigurationJson, new TypeToken<ModpackConfiguration<McbbsModpackManifest>>() {
-        }.getType());
+        ModpackConfiguration<McbbsModpackManifest> config = JsonUtils.GSON.fromJson(modpackConfigurationJson, ModpackConfiguration.typeOf(McbbsModpackManifest.class));
 
         if (!getName().equals(config.getType())) {
             throw new IllegalArgumentException("Incorrect manifest type, actual=" + config.getType() + ", expected=" + getName());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackRemoteInstallTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.mcbbs;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
@@ -66,8 +65,7 @@ public McbbsModpackRemoteInstallTask(DefaultDependencyManager dependencyManager,
         ModpackConfiguration<McbbsModpackManifest> config = null;
         try {
             if (json.exists()) {
-                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), new TypeToken<ModpackConfiguration<McbbsModpackManifest>>() {
-                }.getType());
+                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), ModpackConfiguration.typeOf(McbbsModpackManifest.class));
 
                 if (!MODPACK_TYPE.equals(config.getType()))
                     throw new IllegalArgumentException("Version " + name + " is not a Mcbbs modpack. Cannot update this version.");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackInstallTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.multimc;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.Arguments;
@@ -128,8 +127,7 @@ public void preExecute() throws Exception {
         ModpackConfiguration<MultiMCInstanceConfiguration> config = null;
         try {
             if (json.exists()) {
-                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), new TypeToken<ModpackConfiguration<MultiMCInstanceConfiguration>>() {
-                }.getType());
+                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), ModpackConfiguration.typeOf(MultiMCInstanceConfiguration.class));
 
                 if (!MultiMCModpackProvider.INSTANCE.getName().equals(config.getType()))
                     throw new IllegalArgumentException("Version " + name + " is not a MultiMC modpack. Cannot update this version.");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackCompletionTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.server;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
@@ -66,8 +65,7 @@ public ServerModpackCompletionTask(DefaultDependencyManager dependencyManager, S
             try {
                 File manifestFile = repository.getModpackConfiguration(version);
                 if (manifestFile.exists()) {
-                    this.manifest = JsonUtils.GSON.fromJson(FileUtils.readText(manifestFile), new TypeToken<ModpackConfiguration<ServerModpackManifest>>() {
-                    }.getType());
+                    this.manifest = JsonUtils.GSON.fromJson(FileUtils.readText(manifestFile), ModpackConfiguration.typeOf(ServerModpackManifest.class));
                 }
             } catch (Exception e) {
                 LOG.warning("Unable to read Server modpack manifest.json", e);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackLocalInstallTask.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.mod.server;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
@@ -72,8 +71,7 @@ public ServerModpackLocalInstallTask(DefaultDependencyManager dependencyManager,
         ModpackConfiguration<ServerModpackManifest> config = null;
         try {
             if (json.exists()) {
-                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), new TypeToken<ModpackConfiguration<ServerModpackManifest>>() {
-                }.getType());
+                config = JsonUtils.GSON.fromJson(FileUtils.readText(json), ModpackConfiguration.typeOf(ServerModpackManifest.class));
 
                 if (!ServerModpackProvider.INSTANCE.getName().equals(config.getType()))
                     throw new IllegalArgumentException("Version " + name + " is not a Server modpack. Cannot update this version.");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/HttpRequest.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.util.io;
 
 import com.google.gson.JsonParseException;
+import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.util.Pair;
 import org.jackhuang.hmcl.util.function.ExceptionalBiConsumer;
@@ -26,7 +27,6 @@
 
 import java.io.IOException;
 import java.io.OutputStream;
-import java.lang.reflect.Type;
 import java.net.HttpURLConnection;
 import java.net.MalformedURLException;
 import java.net.URL;
@@ -101,15 +101,15 @@ public <T> T getJson(Class<T> typeOfT) throws IOException, JsonParseException {
         return JsonUtils.fromNonNullJson(getString(), typeOfT);
     }
 
-    public <T> T getJson(Type type) throws IOException, JsonParseException {
+    public <T> T getJson(TypeToken<T> type) throws IOException, JsonParseException {
         return JsonUtils.fromNonNullJson(getString(), type);
     }
 
     public <T> CompletableFuture<T> getJsonAsync(Class<T> typeOfT) {
         return getStringAsync().thenApplyAsync(jsonString -> JsonUtils.fromNonNullJson(jsonString, typeOfT));
     }
 
-    public <T> CompletableFuture<T> getJsonAsync(Type type) {
+    public <T> CompletableFuture<T> getJsonAsync(TypeToken<T> type) {
         return getStringAsync().thenApplyAsync(jsonString -> JsonUtils.fromNonNullJson(jsonString, type));
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -329,9 +329,7 @@ private static Stream<Path> searchPotentialJavaExecutables() throws IOException
                 javaExecutables.add(listDirectory(Paths.get("/usr/java")).map(JavaVersion::getExecutable)); // Oracle RPMs
                 javaExecutables.add(listDirectory(Paths.get("/usr/lib/jvm")).map(JavaVersion::getExecutable)); // General locations
                 javaExecutables.add(listDirectory(Paths.get("/usr/lib32/jvm")).map(JavaVersion::getExecutable)); // General locations
-				// SDKMAN!
-				javaExecutables.add(listDirectory(Paths.get(System.getProperty("user.home"), ".sdkman/candidates/java"))
-				        .map(JavaVersion::getExecutable));
+                javaExecutables.add(listDirectory(Paths.get(System.getProperty("user.home"), ".sdkman/candidates/java")).map(JavaVersion::getExecutable)); // SDKMAN!
                 break;
 
             case OSX:

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -804,7 +804,7 @@ public void onLog(String log, boolean isErrorStream) {
                 System.out.println(filteredLog);
 
             Log4jLevel level;
-            if (isErrorStream)
+            if (isErrorStream && !filteredLog.startsWith("[authlib-injector]"))
                 level = Log4jLevel.ERROR;
             else
                 level = showLogs ? Optional.ofNullable(Log4jLevel.guessLevel(filteredLog)).orElse(Log4jLevel.INFO) : null;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeVersion.java
Patch:
@@ -33,7 +33,7 @@ public final class ForgeVersion implements Validation {
     private final String jobver;
     private final String version;
     private final int build;
-    private final double modified;
+    private final long modified;
     private final String[][] files;
 
     /**
@@ -44,7 +44,7 @@ public ForgeVersion() {
         this(null, null, null, null, 0, 0, null);
     }
 
-    public ForgeVersion(String branch, String mcversion, String jobver, String version, int build, double modified, String[][] files) {
+    public ForgeVersion(String branch, String mcversion, String jobver, String version, int build, long modified, String[][] files) {
         this.branch = branch;
         this.mcversion = mcversion;
         this.jobver = jobver;
@@ -74,7 +74,7 @@ public int getBuild() {
         return build;
     }
 
-    public double getModified() {
+    public long getModified() {
         return modified;
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -299,7 +299,7 @@ private static final class InstallerItemSkin extends SkinBase<InstallerItem> {
             Pane pane;
             if (control.style == Style.CARD) {
                 pane = new VBox();
-                holder.add(FXUtils.onWeakChangeAndOperate(pane.widthProperty(), v -> FXUtils.setLimitHeight(pane, v.doubleValue() * 0.7)));
+                holder.add(FXUtils.onWeakChange(pane.widthProperty(), v -> FXUtils.setLimitHeight(pane, v.doubleValue() * 0.7)));
             } else {
                 pane = new HBox();
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -224,7 +224,8 @@ public InstallerItemGroup(String gameVersion, Style style) {
             InstallerItem quiltApi = new InstallerItem(QUILT_API, style);
 
             Map<InstallerItem, Set<InstallerItem>> incompatibleMap = new HashMap<>();
-            mutualIncompatible(incompatibleMap, forge, fabric, quilt, neoForge, liteLoader);
+            mutualIncompatible(incompatibleMap, forge, fabric, quilt, neoForge);
+            addIncompatibles(incompatibleMap, liteLoader, fabric, quilt, neoForge);
             addIncompatibles(incompatibleMap, optiFine, fabric, quilt, neoForge);
             addIncompatibles(incompatibleMap, fabricApi, forge, quiltApi, neoForge, liteLoader, optiFine);
             addIncompatibles(incompatibleMap, quiltApi, forge, fabric, fabricApi, neoForge, liteLoader, optiFine);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -337,7 +337,7 @@ private final class View extends VBox {
 
                 TwoLineListItem version = new TwoLineListItem();
                 version.getStyleClass().setAll("two-line-item-second-large");
-                version.setTitle(i18n("archive.game_version"));
+                version.setTitle(i18n("game.version"));
                 version.setSubtitle(GameCrashWindow.this.version.getId());
 
                 TwoLineListItem total_memory = new TwoLineListItem();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/DownloadPage.java
Patch:
@@ -162,7 +162,7 @@ private static void download(Profile profile, @Nullable String version, RemoteMo
 
         Path runDirectory = profile.getRepository().hasVersion(version) ? profile.getRepository().getRunDirectory(version).toPath() : profile.getRepository().getBaseDirectory().toPath();
 
-        Controllers.prompt(i18n("archive.name"), (result, resolve, reject) -> {
+        Controllers.prompt(i18n("archive.file.name"), (result, resolve, reject) -> {
             if (!OperatingSystem.isNameValid(result)) {
                 reject.accept(i18n("install.new_game.malformed"));
                 return;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackPage.java
Patch:
@@ -48,7 +48,7 @@ protected ModpackPage(WizardController controller) {
 
             BorderPane archiveNamePane = new BorderPane();
             {
-                Label label = new Label(i18n("archive.name"));
+                Label label = new Label(i18n("archive.file.name"));
                 BorderPane.setAlignment(label, Pos.CENTER_LEFT);
                 archiveNamePane.setLeft(label);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -260,7 +260,7 @@ static class ModInfoObject extends RecursiveTreeObject<ModInfoObject> implements
 
             StringBuilder message = new StringBuilder(localModFile.getFileName());
             if (isNotBlank(localModFile.getGameVersion()))
-                message.append(", ").append(i18n("archive.game_version")).append(": ").append(localModFile.getGameVersion());
+                message.append(", ").append(i18n("game.version")).append(": ").append(localModFile.getGameVersion());
             if (isNotBlank(localModFile.getAuthors()))
                 message.append(", ").append(i18n("archive.author")).append(": ").append(localModFile.getAuthors());
             this.message = message.toString();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -296,8 +296,8 @@ protected Version resolve(VersionProvider provider, Set<String> resolvedSoFar) t
         }
 
         if (patches == null) {
-            // This is a version from external launcher.
-            thisVersion = thisVersion.merge(this, true);
+            // This is a version from external launcher. NO need to resolve the patches.
+            return thisVersion;
         } else if (!patches.isEmpty()) {
             // Assume patches themselves do not have patches recursively.
             List<Version> sortedPatches = patches.stream()

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthRemoteModRepository.java
Patch:
@@ -95,7 +95,7 @@ public SearchResult search(String gameVersion, @Nullable RemoteModRepository.Cat
         Response<ProjectSearchResult> response = HttpRequest.GET(NetworkUtils.withQuery(PREFIX + "/v2/search", query))
                 .getJson(new TypeToken<Response<ProjectSearchResult>>() {
                 }.getType());
-        return new SearchResult(response.getHits().stream().map(ProjectSearchResult::toMod), (int)Math.ceil((double)response.totalHits / pageSize));
+        return new SearchResult(response.getHits().stream().map(ProjectSearchResult::toMod), (int) Math.ceil((double) response.totalHits / pageSize));
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/versioning/VersionNumber.java
Patch:
@@ -33,6 +33,8 @@
  */
 public final class VersionNumber implements Comparable<VersionNumber> {
 
+    public static final VersionNumber ZERO = asVersion("0");
+
     public static VersionNumber asVersion(String version) {
         Objects.requireNonNull(version);
         return new VersionNumber(version);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -241,7 +241,7 @@ public void onStop(boolean success, TaskExecutor executor) {
                         launchingStepsPane.fireEvent(new DialogCloseEvent());
                         if (!success) {
                             Exception ex = executor.getException();
-                            if (!(ex instanceof CancellationException)) {
+                            if (ex != null && !(ex instanceof CancellationException)) {
                                 String message;
                                 if (ex instanceof ModpackCompletionException) {
                                     if (ex.getCause() instanceof FileNotFoundException)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/java/JavaRepository.java
Patch:
@@ -57,7 +57,7 @@ public static Stream<Optional<Path>> findMinecraftRuntimeDirs() {
                                 "Minecraft Launcher\\runtime"));
             case LINUX:
             case FREEBSD:
-                return Stream.of(FileUtils.tryGetPath(System.getProperty("user.home", ".minecraft/runtime")));
+                return Stream.of(FileUtils.tryGetPath(System.getProperty("user.home"), ".minecraft/runtime"));
             case OSX:
                 return Stream.of(FileUtils.tryGetPath(System.getProperty("user.home"), "Library/Application Support/minecraft/runtime"));
             default:

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameLibrariesTask.java
Patch:
@@ -134,7 +134,7 @@ public void execute() throws IOException {
                     }
                 }
             }
-            if (shouldDownloadLibrary(gameRepository, version, library, integrityCheck) && library.hasDownloadURL()) {
+            if (shouldDownloadLibrary(gameRepository, version, library, integrityCheck) && (library.hasDownloadURL() || !"optifine".equals(library.getGroupId()))) {
                 dependencies.add(new LibraryDownloadTask(dependencyManager, file, library));
             } else {
                 dependencyManager.getCacheRepository().tryCacheLibrary(library, file.toPath());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/neoforge/NeoForgeRemoteVersion.java
Patch:
@@ -18,7 +18,7 @@ public Task<Version> getInstallTask(DefaultDependencyManager dependencyManager,
         return new NeoForgeInstallTask(dependencyManager, baseVersion, this);
     }
 
-    public static String fixInvalidVersion(String version) {
+    public static String normalize(String version) {
         if (version.startsWith("1.20.1-")) {
             if (version.startsWith("forge-", "1.20.1-".length())) {
                 return version.substring("1.20.1-forge-".length());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -202,6 +202,7 @@ private void analyzeCrashReport() {
                         case TWILIGHT_FOREST_OPTIFINE:
                         case PERFORMANT_FOREST_OPTIFINE:
                         case JADE_FOREST_OPTIFINE:
+                        case NEOFORGE_FOREST_OPTIFINE:
                             message = i18n("game.crash.reason.mod", "OptiFine");
                             LOG.info("Crash cause: " + result.getRule() + ": " + i18n("game.crash.reason.mod", "OptiFine"));
                             break;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CrashReportAnalyzer.java
Patch:
@@ -139,6 +139,8 @@ public enum Rule {
         TWILIGHT_FOREST_OPTIFINE(Pattern.compile("java\\.lang\\.IllegalArgumentException: (.*) outside of image bounds (.*)")),
         // Jade is not compatible with OptiFine on Minecraft 1.20+
         JADE_FOREST_OPTIFINE(Pattern.compile("Critical injection failure: LVT in net/minecraft/client/renderer/GameRenderer::m_109093_\\(FJZ\\)V has incompatible changes at opcode 760 in callback jade\\.mixins\\.json:GameRendererMixin-\\>@Inject::jade\\$runTick\\(FJZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;IILcom/mojang/blaze3d/platform/Window;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiGraphics;\\)V\\.")),
+        // NeoForge 与 OptiFine 不兼容
+        NEOFORGE_FOREST_OPTIFINE(Pattern.compile("cpw\\.mods\\.modlauncher\\.InvalidLauncherSetupException: Invalid Services found OptiFine")),
 
         // 一些模组与 Sodium 不兼容
         // https://github.com/CaffeineMC/sodium-fabric/wiki/Known-Issues#rtss-incompatible

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorDownloader.java
Patch:
@@ -43,7 +43,7 @@ public class AuthlibInjectorDownloader implements AuthlibInjectorArtifactProvide
     private final Supplier<DownloadProvider> downloadProvider;
 
     /**
-     * @param artifactsDirectory where to save authlib-injector artifacts
+     * @param artifactLocation where to save authlib-injector artifacts
      */
     public AuthlibInjectorDownloader(Path artifactLocation, Supplier<DownloadProvider> downloadProvider) {
         this.artifactLocation = artifactLocation;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorServer.java
Patch:
@@ -60,6 +60,7 @@ public static AuthlibInjectorServer locateServer(String url) throws IOException
         try {
             url = addHttpsIfMissing(url);
             HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
+            conn.setRequestProperty("Accept-Language", Locale.getDefault().toLanguageTag());
 
             String ali = conn.getHeaderField("x-authlib-injector-api-location");
             if (ali != null) {
@@ -68,6 +69,7 @@ public static AuthlibInjectorServer locateServer(String url) throws IOException
                     conn.disconnect();
                     url = absoluteAli.toString();
                     conn = (HttpURLConnection) absoluteAli.openConnection();
+                    conn.setRequestProperty("Accept-Language", Locale.getDefault().toLanguageTag());
                 }
             }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/NetworkUtils.java
Patch:
@@ -90,7 +90,7 @@ public static URLConnection createConnection(URL url) throws IOException {
         connection.setUseCaches(false);
         connection.setConnectTimeout(TIME_OUT);
         connection.setReadTimeout(TIME_OUT);
-        connection.setRequestProperty("Accept-Language", Locale.getDefault().toString());
+        connection.setRequestProperty("Accept-Language", Locale.getDefault().toLanguageTag());
         return connection;
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -333,7 +333,8 @@ public void onStop(boolean success, TaskExecutor executor) {
     }
 
     private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting setting, Version version) {
-        GameVersionNumber gameVersion = GameVersionNumber.asGameVersion(profile.getRepository().getGameVersion(version));
+        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version, profile.getRepository().getGameVersion(version).orElse(null));
+        GameVersionNumber gameVersion = GameVersionNumber.asGameVersion(analyzer.getVersion(LibraryAnalyzer.LibraryType.MINECRAFT));
 
         if (setting.isNotCheckJVM()) {
             return Task.composeAsync(() -> setting.getJavaVersion(gameVersion, version))
@@ -417,7 +418,6 @@ private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting
             JavaVersionConstraint violatedMandatoryConstraint = null;
             List<JavaVersionConstraint> violatedSuggestedConstraints = null;
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version, gameVersion.toString());
             for (JavaVersionConstraint constraint : JavaVersionConstraint.ALL) {
                 if (constraint.appliesToVersion(gameVersion, version, javaVersion, analyzer)) {
                     if (!constraint.checkJava(gameVersion, version, javaVersion)) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -164,7 +164,9 @@ private void clearLibraries() {
     }
 
     private void clearAssets() {
-        FileUtils.deleteDirectoryQuietly(new File(getProfile().getRepository().getBaseDirectory(), "assets"));
+        File baseDirectory = getProfile().getRepository().getBaseDirectory();
+        FileUtils.deleteDirectoryQuietly(new File(baseDirectory, "assets"));
+        FileUtils.deleteDirectoryQuietly(new File(baseDirectory, "resources"));
     }
 
     private void clearJunkFiles() {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -835,7 +835,7 @@ public void onLog(String log, boolean isErrorStream) {
         @Override
         public void onExit(int exitCode, ExitType exitType) {
             if (showLogs) {
-                Platform.runLater(() -> logWindow.logLine(String.format("[HMCL ProcessListener] Minecraft exit with code %d(0x%x).", exitCode, exitCode), Log4jLevel.INFO));
+                Platform.runLater(() -> logWindow.logLine(String.format("[HMCL ProcessListener] Minecraft exit with code %d(0x%x), type is %s.", exitCode, exitCode, exitType), Log4jLevel.INFO));
             }
 
             launchingLatch.countDown();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/SettingsPage.java
Patch:
@@ -32,6 +32,7 @@
 import org.jackhuang.hmcl.upgrade.UpdateChecker;
 import org.jackhuang.hmcl.upgrade.UpdateHandler;
 import org.jackhuang.hmcl.util.Logging;
+import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.i18n.Locales;
 import org.jackhuang.hmcl.util.io.FileUtils;
 
@@ -132,7 +133,7 @@ protected void onExportLogs() {
             try {
                 Files.write(logFile, Logging.getRawLogs());
             } catch (IOException e) {
-                Platform.runLater(() -> Controllers.dialog(i18n("settings.launcher.launcher_log.export.failed") + "\n" + e, null, MessageType.ERROR));
+                Platform.runLater(() -> Controllers.dialog(i18n("settings.launcher.launcher_log.export.failed") + "\n" + StringUtils.getStackTrace(e), null, MessageType.ERROR));
                 LOG.log(Level.WARNING, "Failed to export logs", e);
                 return;
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthInstallTask.java
Patch:
@@ -68,6 +68,9 @@ public ModrinthInstallTask(DefaultDependencyManager dependencyManager, File zipF
                 case "forge":
                     builder.version("forge", modLoader.getValue());
                     break;
+                case "neoforge":
+                    builder.version("neoforge", modLoader.getValue());
+                    break;
                 case "fabric-loader":
                     builder.version("fabric", modLoader.getValue());
                     break;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricVersionList.java
Patch:
@@ -68,7 +68,7 @@ public CompletableFuture<?> refreshAsync() {
     private static final String GAME_META_URL = "https://meta.fabricmc.net/v2/versions/game";
 
     private List<String> getGameVersions(String metaUrl) throws IOException {
-        String json = NetworkUtils.doGet(NetworkUtils.toURL(downloadProvider.injectURL(metaUrl)));
+        String json = NetworkUtils.doGet(downloadProvider.injectURLWithCandidates(metaUrl));
         return JsonUtils.GSON.<ArrayList<GameVersion>>fromJson(json, new TypeToken<ArrayList<GameVersion>>() {
         }.getType()).stream().map(GameVersion::getVersion).collect(Collectors.toList());
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/neoforge/NeoForgeBMCLVersionList.java
Patch:
@@ -22,12 +22,12 @@
 import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.VersionList;
 import org.jackhuang.hmcl.util.Immutable;
-import org.jackhuang.hmcl.util.Lang;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.gson.Validation;
 import org.jackhuang.hmcl.util.io.HttpRequest;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
+import java.util.Collections;
 import java.util.List;
 import java.util.Optional;
 import java.util.concurrent.CompletableFuture;
@@ -86,7 +86,7 @@ public CompletableFuture<?> refreshAsync(String gameVersion) {
                             versions.put(gameVersion, new NeoForgeRemoteVersion(
                                     neoForgeVersion.mcVersion,
                                     nf,
-                                    Lang.immutableListOf(
+                                    Collections.singletonList(
                                             apiRoot + "/neoforge/version/" + neoForgeVersion.version + "/download/installer.jar"
                                     )
                             ));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltVersionList.java
Patch:
@@ -68,7 +68,7 @@ public CompletableFuture<?> refreshAsync() {
     private static final String GAME_META_URL = "https://meta.quiltmc.org/v3/versions/game";
 
     private List<String> getGameVersions(String metaUrl) throws IOException {
-        String json = NetworkUtils.doGet(NetworkUtils.toURL(downloadProvider.injectURL(metaUrl)));
+        String json = NetworkUtils.doGet(downloadProvider.injectURLWithCandidates(metaUrl));
         return JsonUtils.GSON.<ArrayList<GameVersion>>fromJson(json, new TypeToken<ArrayList<GameVersion>>() {
         }.getType()).stream().map(GameVersion::getVersion).collect(Collectors.toList());
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -282,7 +282,7 @@ public Image getVersionIconImage(String id) {
             }
 
             if (LibraryAnalyzer.isModded(this, version)) {
-                LibraryAnalyzer libraryAnalyzer = LibraryAnalyzer.analyze(version, getGameVersion(version).orElse(null));
+                LibraryAnalyzer libraryAnalyzer = LibraryAnalyzer.analyze(version, null);
                 if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.FABRIC))
                     return VersionIconType.FABRIC.getIcon();
                 else if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.FORGE))

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackInstallTask.java
Patch:
@@ -93,7 +93,7 @@ public List<Task<?>> getDependents() {
     public void execute() throws Exception {
         String json = CompressingUtils.readTextZipEntry(zipFile, "minecraft/pack.json");
         Version originalVersion = JsonUtils.GSON.fromJson(json, Version.class).setId(name).setJar(null);
-        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(originalVersion, repository.getGameVersion(originalVersion).orElse(null));
+        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(originalVersion, null);
         Task<Version> libraryTask = Task.supplyAsync(() -> originalVersion);
         // reinstall libraries
         // libraries of Forge and OptiFine should be obtained by installation.

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultDependencyManager.java
Patch:
@@ -106,7 +106,7 @@ public Task<?> checkPatchCompletionAsync(Version version, boolean integrityCheck
             Version original = repository.getVersion(version.getId());
             Version resolved = original.resolvePreservingPatches(repository);
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(resolved, repository.getGameVersion(resolved).orElse(null));
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(resolved, gameVersion);
             for (LibraryAnalyzer.LibraryType type : LibraryAnalyzer.LibraryType.values()) {
                 if (!analyzer.has(type))
                     continue;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -430,7 +430,7 @@ public ManagedProcess launch() throws IOException, InterruptedException {
         // To guarantee that when failed to generate launch command line, we will not call pre-launch command
         List<String> rawCommandLine = command.commandLine.asList();
         if (StringUtils.isNotBlank(options.getWrapper())) {
-            rawCommandLine.addAll(0, StringUtils.parseCommand(options.getWrapper(), getEnvVars()));
+            rawCommandLine.addAll(0, StringUtils.tokenize(options.getWrapper(), getEnvVars()));
         }
 
         if (command.tempNativeFolder != null) {
@@ -452,7 +452,7 @@ public ManagedProcess launch() throws IOException, InterruptedException {
         File runDirectory = repository.getRunDirectory(version.getId());
 
         if (StringUtils.isNotBlank(options.getPreLaunchCommand())) {
-            ProcessBuilder builder = new ProcessBuilder(StringUtils.parseCommand(options.getPreLaunchCommand(), getEnvVars())).directory(runDirectory);
+            ProcessBuilder builder = new ProcessBuilder(StringUtils.tokenize(options.getPreLaunchCommand(), getEnvVars())).directory(runDirectory);
             builder.environment().putAll(getEnvVars());
             SystemUtils.callExternalProcess(builder);
         }
@@ -683,7 +683,7 @@ private void startMonitors(ManagedProcess managedProcess, ProcessListener proces
 
             if (StringUtils.isNotBlank(options.getPostExitCommand())) {
                 try {
-                    ProcessBuilder builder = new ProcessBuilder(StringUtils.parseCommand(options.getPostExitCommand(), getEnvVars())).directory(options.getGameDir());
+                    ProcessBuilder builder = new ProcessBuilder(StringUtils.tokenize(options.getPostExitCommand(), getEnvVars())).directory(options.getGameDir());
                     builder.environment().putAll(getEnvVars());
                     SystemUtils.callExternalProcess(builder);
                 } catch (Throwable e) {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -282,7 +282,7 @@ public Image getVersionIconImage(String id) {
             }
 
             if (LibraryAnalyzer.isModded(this, version)) {
-                LibraryAnalyzer libraryAnalyzer = LibraryAnalyzer.analyze(version);
+                LibraryAnalyzer libraryAnalyzer = LibraryAnalyzer.analyze(version, getGameVersion(version).orElse(null));
                 if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.FABRIC))
                     return VersionIconType.FABRIC.getIcon();
                 else if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.FORGE))

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackInstallTask.java
Patch:
@@ -93,7 +93,7 @@ public List<Task<?>> getDependents() {
     public void execute() throws Exception {
         String json = CompressingUtils.readTextZipEntry(zipFile, "minecraft/pack.json");
         Version originalVersion = JsonUtils.GSON.fromJson(json, Version.class).setId(name).setJar(null);
-        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(originalVersion);
+        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(originalVersion, repository.getGameVersion(originalVersion).orElse(null));
         Task<Version> libraryTask = Task.supplyAsync(() -> originalVersion);
         // reinstall libraries
         // libraries of Forge and OptiFine should be obtained by installation.

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -417,7 +417,7 @@ private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting
             JavaVersionConstraint violatedMandatoryConstraint = null;
             List<JavaVersionConstraint> violatedSuggestedConstraints = null;
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version);
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version, gameVersion.toString());
             for (JavaVersionConstraint constraint : JavaVersionConstraint.ALL) {
                 if (constraint.appliesToVersion(gameVersion, version, javaVersion, analyzer)) {
                     if (!constraint.checkJava(gameVersion, version, javaVersion)) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -99,7 +99,7 @@ public GameCrashWindow(ManagedProcess managedProcess, ProcessListener.ExitType e
         this.version = version;
         this.launchOptions = launchOptions;
         this.logs = logs;
-        this.analyzer = LibraryAnalyzer.analyze(version);
+        this.analyzer = LibraryAnalyzer.analyze(version, repository.getGameVersion(version).orElse(null));
 
         memory = Optional.ofNullable(launchOptions.getMaxMemory()).map(i -> i + " MB").orElse("-");
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/AdditionalInstallersPage.java
Patch:
@@ -84,7 +84,8 @@ private String getVersion(String id) {
 
     @Override
     protected void reload() {
-        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version.resolvePreservingPatches(repository));
+        Version resolved = version.resolvePreservingPatches(repository);
+        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(resolved, repository.getGameVersion(resolved).orElse(null));
         String game = analyzer.getVersion(MINECRAFT).orElse(null);
         String currentGameVersion = Lang.nonNull(getVersion("game"), game);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -72,7 +72,7 @@ public void loadVersion(Profile profile, String versionId) {
         CompletableFuture.supplyAsync(() -> {
             gameVersion = profile.getRepository().getGameVersion(version).orElse(null);
 
-            return LibraryAnalyzer.analyze(profile.getRepository().getResolvedPreservingPatchesVersion(versionId));
+            return LibraryAnalyzer.analyze(profile.getRepository().getResolvedPreservingPatchesVersion(versionId), gameVersion);
         }).thenAcceptAsync(analyzer -> {
             Function<String, Runnable> removeAction = libraryId -> () -> {
                 profile.getDependency().removeLibraryAsync(version, libraryId)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultDependencyManager.java
Patch:
@@ -106,7 +106,7 @@ public Task<?> checkPatchCompletionAsync(Version version, boolean integrityCheck
             Version original = repository.getVersion(version.getId());
             Version resolved = original.resolvePreservingPatches(repository);
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(resolved);
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(resolved, repository.getGameVersion(resolved).orElse(null));
             for (LibraryAnalyzer.LibraryType type : LibraryAnalyzer.LibraryType.values()) {
                 if (!analyzer.has(type))
                     continue;
@@ -218,8 +218,9 @@ public Task<Version> removeLibraryAsync(Version version, String libraryId) {
         if (version.isResolved())
             throw new IllegalArgumentException("removeLibraryWithoutSavingAsync requires non-resolved version");
         Version independentVersion = version.resolvePreservingPatches(repository);
+        String gameVersion = repository.getGameVersion(independentVersion).orElse(null);
 
-        return Task.supplyAsync(() -> LibraryAnalyzer.analyze(independentVersion).removeLibrary(libraryId).build());
+        return Task.supplyAsync(() -> LibraryAnalyzer.analyze(independentVersion, gameVersion).removeLibrary(libraryId).build());
     }
 
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameVerificationFixTask.java
Patch:
@@ -63,7 +63,7 @@ public Collection<Task<?>> getDependencies() {
     @Override
     public void execute() throws IOException {
         File jar = dependencyManager.getGameRepository().getVersionJar(version);
-        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version);
+        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version, gameVersion);
 
         if (jar.exists() && GameVersionNumber.compare(gameVersion, "1.6") < 0 && analyzer.has(LibraryAnalyzer.LibraryType.FORGE)) {
             try (FileSystem fs = CompressingUtils.createWritableZipFileSystem(jar.toPath(), StandardCharsets.UTF_8)) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -226,7 +226,7 @@ public boolean checkJava(GameVersionNumber gameVersionNumber, Version version, J
     public static VersionRanges findSuitableJavaVersionRange(GameVersionNumber gameVersion, Version version) {
         VersionRange<VersionNumber> mandatoryJavaRange = VersionRange.all();
         VersionRange<VersionNumber> suggestedJavaRange = VersionRange.all();
-        LibraryAnalyzer analyzer = version != null ? LibraryAnalyzer.analyze(version) : null;
+        LibraryAnalyzer analyzer = version != null ? LibraryAnalyzer.analyze(version, gameVersion != null ? gameVersion.toString() : null) : null;
         for (JavaVersionConstraint java : ALL) {
             if (java.appliesToVersion(gameVersion, version, null, analyzer)) {
                 VersionRange<VersionNumber> javaVersionRange = java.getJavaVersionRange(version);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -505,7 +505,7 @@ private Map<String, String> getEnvVars() {
             }
         }
 
-        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version);
+        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version, repository.getGameVersion(version).orElse(null));
         if (analyzer.has(LibraryAnalyzer.LibraryType.FORGE)) {
             env.put("INST_FORGE", "1");
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackExportTask.java
Patch:
@@ -82,9 +82,9 @@ public void execute() throws Exception {
                 }
             });
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(version));
             String gameVersion = repository.getGameVersion(version)
                     .orElseThrow(() -> new IOException("Cannot parse the version of " + version));
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(version), gameVersion);
 
             // Mcbbs manifest
             List<McbbsModpackManifest.Addon> addons = new ArrayList<>();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackExportTask.java
Patch:
@@ -70,9 +70,9 @@ public void execute() throws Exception {
         try (Zipper zip = new Zipper(output.toPath())) {
             zip.putDirectory(repository.getRunDirectory(versionId).toPath(), ".minecraft", path -> Modpack.acceptFile(path, blackList, whitelist));
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(versionId));
             String gameVersion = repository.getGameVersion(versionId)
                     .orElseThrow(() -> new IOException("Cannot parse the version of " + versionId));
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(versionId), gameVersion);
             List<MultiMCManifest.MultiMCManifestComponent> components = new ArrayList<>();
             components.add(new MultiMCManifest.MultiMCManifestComponent(true, false, "net.minecraft", gameVersion));
             analyzer.getVersion(FORGE).ifPresent(forgeVersion ->

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackExportTask.java
Patch:
@@ -78,9 +78,9 @@ public void execute() throws Exception {
                 }
             });
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(versionId));
             String gameVersion = repository.getGameVersion(versionId)
                     .orElseThrow(() -> new IOException("Cannot parse the version of " + versionId));
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(versionId), gameVersion);
             List<ServerModpackManifest.Addon> addons = new ArrayList<>();
             addons.add(new ServerModpackManifest.Addon(MINECRAFT.getPatchId(), gameVersion));
             analyzer.getVersion(FORGE).ifPresent(forgeVersion ->

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadListPage.java
Patch:
@@ -413,7 +413,7 @@ protected ModDownloadListPageSkin(DownloadListPage control) {
                         searchAction.handle(event);
                     });
                     lastPageButton.setDisable(true);
-                    control.pageCount.addListener((observable, oldValue, newValue) -> lastPageButton.setDisable(control.pageCount.get() == -1));
+                    control.pageCount.addListener((observable, oldValue, newValue) -> lastPageButton.setDisable(control.pageCount.get() == -1 || control.pageOffset.get() >= control.pageCount.get() - 1));
 
                     Pane placeholder = new Pane();
                     HBox.setHgrow(placeholder, Priority.SOMETIMES);

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -137,7 +137,7 @@ public static Config fromJson(String json) throws JsonParseException {
     private IntegerProperty downloadThreads = new SimpleIntegerProperty(64);
 
     @SerializedName("downloadType")
-    private StringProperty downloadType = new SimpleStringProperty("mcbbs");
+    private StringProperty downloadType = new SimpleStringProperty(DownloadProviders.DEFAULT_RAW_PROVIDER_ID);
 
     @SerializedName("autoChooseDownloadType")
     private BooleanProperty autoChooseDownloadType = new SimpleBooleanProperty(true);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -907,7 +907,9 @@ public static void copyText(String text) {
         content.putString(text);
         Clipboard.getSystemClipboard().setContent(content);
 
-        Controllers.showToast(i18n("message.copied"));
+        if (!Controllers.isStopped()) {
+            Controllers.showToast(i18n("message.copied"));
+        }
     }
 
     public static List<Node> parseSegment(String segment, Consumer<String> hyperlinkAction) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -93,7 +93,7 @@ protected boolean appliesToVersionImpl(GameVersionNumber gameVersionNumber, @Nul
         }
 
         @Override
-        public VersionRange getJavaVersionRange(Version version) {
+        public VersionRange<VersionNumber> getJavaVersionRange(Version version) {
             String javaVersion;
             if (Objects.requireNonNull(version.getJavaVersion()).getMajorVersion() >= 9) {
                 javaVersion = "" + version.getJavaVersion().getMajorVersion();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -223,7 +223,7 @@ private void search() {
                 }
             } else {
                 String lowerQueryString = queryString.toLowerCase(Locale.ROOT);
-                predicate = s -> s.contains(lowerQueryString);
+                predicate = s -> s.toLowerCase(Locale.ROOT).contains(lowerQueryString);
             }
 
             // Do we need to search in the background thread?

File: HMCL/src/main/java/org/jackhuang/hmcl/countly/CrashReport.java
Patch:
@@ -7,8 +7,8 @@
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
 
 import java.io.File;
-import java.text.SimpleDateFormat;
-import java.util.Date;
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
 import java.util.Map;
 
 import static org.jackhuang.hmcl.util.Lang.mapOf;
@@ -68,7 +68,7 @@ public Map<String, Object> getMetrics(long runningTime) {
     public String getDisplayText() {
         return "---- Hello Minecraft! Crash Report ----\n" +
                 "  Version: " + Metadata.VERSION + "\n" +
-                "  Time: " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()) + "\n" +
+                "  Time: " + DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss").format(LocalDateTime.now()) + "\n" +
                 "  Thread: " + thread + "\n" +
                 "\n  Content: \n    " +
                 stackTrace + "\n\n" +

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -48,6 +48,7 @@
 import java.io.InputStream;
 import java.nio.file.Files;
 import java.nio.file.Path;
+import java.time.Instant;
 import java.util.*;
 import java.util.logging.Level;
 import java.util.stream.Collectors;
@@ -103,7 +104,7 @@ public File getRunDirectory(String id) {
     public Stream<Version> getDisplayVersions() {
         return getVersions().stream()
                 .filter(v -> !v.isHidden())
-                .sorted(Comparator.comparing((Version v) -> v.getReleaseTime() == null ? new Date(0L) : v.getReleaseTime())
+                .sorted(Comparator.comparing((Version v) -> Lang.requireNonNullElse(v.getReleaseTime(), Instant.EPOCH))
                         .thenComparing(v -> VersionNumber.asVersion(v.getId())));
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -298,7 +298,7 @@ public void updateItem(RemoteVersion remoteVersion, boolean empty) {
 
             content.setTitle(remoteVersion.getSelfVersion());
             if (remoteVersion.getReleaseDate() != null) {
-                content.setSubtitle(formatDateTime(remoteVersion.getReleaseDate().toInstant()));
+                content.setSubtitle(formatDateTime(remoteVersion.getReleaseDate()));
             } else {
                 content.setSubtitle(null);
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -44,14 +44,15 @@
 import org.jackhuang.hmcl.ui.versions.GameAdvancedListItem;
 import org.jackhuang.hmcl.ui.versions.Versions;
 import org.jackhuang.hmcl.upgrade.UpdateChecker;
+import org.jackhuang.hmcl.util.Lang;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
 import java.io.File;
+import java.time.Instant;
 import java.util.Comparator;
-import java.util.Date;
 import java.util.List;
 import java.util.Locale;
 import java.util.logging.Level;
@@ -118,8 +119,7 @@ public MainPage getMainPage() {
                 List<Version> children = repository.getVersions().parallelStream()
                         .filter(version -> !version.isHidden())
                         .sorted(Comparator
-                                .comparing((Version version) -> version.getReleaseTime() == null ? new Date(0L)
-                                        : version.getReleaseTime())
+                                .comparing((Version version) -> Lang.requireNonNullElse(version.getReleaseTime(), Instant.EPOCH))
                                 .thenComparing(version -> VersionNumber.asVersion(repository.getGameVersion(version).orElse(version.getId()))))
                         .collect(Collectors.toList());
                 runInFX(() -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -382,7 +382,7 @@ private static final class ModItem extends StackPane {
                     TwoLineListItem content = new TwoLineListItem();
                     HBox.setHgrow(content, Priority.ALWAYS);
                     content.setTitle(dataItem.getName());
-                    content.setSubtitle(FORMATTER.format(dataItem.getDatePublished().toInstant()));
+                    content.setSubtitle(FORMATTER.format(dataItem.getDatePublished()));
 
                     switch (dataItem.getVersionType()) {
                         case Alpha:

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricAPIRemoteVersion.java
Patch:
@@ -24,7 +24,7 @@
 import org.jackhuang.hmcl.mod.RemoteMod;
 import org.jackhuang.hmcl.task.Task;
 
-import java.util.Date;
+import java.time.Instant;
 import java.util.List;
 
 public class FabricAPIRemoteVersion extends RemoteVersion {
@@ -38,7 +38,7 @@ public class FabricAPIRemoteVersion extends RemoteVersion {
      * @param selfVersion the version string of the remote version.
      * @param urls        the installer or universal jar original URL.
      */
-    FabricAPIRemoteVersion(String gameVersion, String selfVersion, String fullVersion, Date datePublished, RemoteMod.Version version, List<String> urls) {
+    FabricAPIRemoteVersion(String gameVersion, String selfVersion, String fullVersion, Instant datePublished, RemoteMod.Version version, List<String> urls) {
         super(LibraryAnalyzer.LibraryType.FABRIC_API.getPatchId(), gameVersion, selfVersion, datePublished, urls);
 
         this.fullVersion = fullVersion;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeBMCLVersionList.java
Patch:
@@ -109,7 +109,7 @@ public CompletableFuture<?> refreshAsync(String gameVersion) {
                             }
 
                             versions.put(gameVersion, new ForgeRemoteVersion(
-                                    version.getGameVersion(), version.getVersion(), releaseDate == null ? null : Date.from(releaseDate), urls));
+                                    version.getGameVersion(), version.getVersion(), releaseDate, urls));
                         }
                     } finally {
                         lock.writeLock().unlock();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeRemoteVersion.java
Patch:
@@ -23,7 +23,7 @@
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
 
-import java.util.Date;
+import java.time.Instant;
 import java.util.List;
 
 public class ForgeRemoteVersion extends RemoteVersion {
@@ -34,7 +34,7 @@ public class ForgeRemoteVersion extends RemoteVersion {
      * @param selfVersion the version string of the remote version.
      * @param url         the installer or universal jar original URL.
      */
-    public ForgeRemoteVersion(String gameVersion, String selfVersion, Date releaseDate, List<String> url) {
+    public ForgeRemoteVersion(String gameVersion, String selfVersion, Instant releaseDate, List<String> url) {
         super(LibraryAnalyzer.LibraryType.FORGE.getPatchId(), gameVersion, selfVersion, releaseDate, url);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteVersion.java
Patch:
@@ -25,7 +25,7 @@
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.Immutable;
 
-import java.util.Date;
+import java.time.Instant;
 import java.util.List;
 
 /**
@@ -37,7 +37,7 @@ public final class GameRemoteVersion extends RemoteVersion {
 
     private final ReleaseType type;
 
-    public GameRemoteVersion(String gameVersion, String selfVersion, List<String> url, ReleaseType type, Date releaseDate) {
+    public GameRemoteVersion(String gameVersion, String selfVersion, List<String> url, ReleaseType type, Instant releaseDate) {
         super(LibraryAnalyzer.LibraryType.MINECRAFT.getPatchId(), gameVersion, selfVersion, releaseDate, getReleaseType(type), url);
         this.type = type;
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltAPIRemoteVersion.java
Patch:
@@ -24,7 +24,7 @@
 import org.jackhuang.hmcl.mod.RemoteMod;
 import org.jackhuang.hmcl.task.Task;
 
-import java.util.Date;
+import java.time.Instant;
 import java.util.List;
 
 public class QuiltAPIRemoteVersion extends RemoteVersion {
@@ -38,7 +38,7 @@ public class QuiltAPIRemoteVersion extends RemoteVersion {
      * @param selfVersion the version string of the remote version.
      * @param urls        the installer or universal jar original URL.
      */
-    QuiltAPIRemoteVersion(String gameVersion, String selfVersion, String fullVersion, Date datePublished, RemoteMod.Version version, List<String> urls) {
+    QuiltAPIRemoteVersion(String gameVersion, String selfVersion, String fullVersion, Instant datePublished, RemoteMod.Version version, List<String> urls) {
         super(LibraryAnalyzer.LibraryType.QUILT_API.getPatchId(), gameVersion, selfVersion, datePublished, urls);
 
         this.fullVersion = fullVersion;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ClassicVersion.java
Patch:
@@ -18,8 +18,8 @@
 package org.jackhuang.hmcl.game;
 
 import java.io.File;
+import java.time.Instant;
 import java.util.Arrays;
-import java.util.Date;
 
 /**
  * The Minecraft version for 1.5.x and earlier.
@@ -32,7 +32,7 @@ public ClassicVersion() {
         super(true, "Classic", null, null, "${auth_player_name} ${auth_session} --workDir ${game_directory}",
                 null, "net.minecraft.client.Minecraft", null, null, null, null, null, null,
                 Arrays.asList(new ClassicLibrary("lwjgl"), new ClassicLibrary("jinput"), new ClassicLibrary("lwjgl_util")),
-                null, null, null, ReleaseType.UNKNOWN, new Date(), new Date(), 0, false, false, null);
+                null, null, null, ReleaseType.UNKNOWN, Instant.now(), Instant.now(), 0, false, false, null);
     }
 
     private static class ClassicLibrary extends Library {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/gson/JsonUtils.java
Patch:
@@ -29,7 +29,6 @@
 import java.lang.reflect.Type;
 import java.nio.charset.StandardCharsets;
 import java.time.Instant;
-import java.util.Date;
 import java.util.UUID;
 
 /**
@@ -113,7 +112,6 @@ public static GsonBuilder defaultGsonBuilder() {
                 .enableComplexMapKeySerialization()
                 .setPrettyPrinting()
                 .registerTypeAdapter(Instant.class, InstantTypeAdapter.INSTANCE)
-                .registerTypeAdapter(Date.class, DateTypeAdapter.INSTANCE)
                 .registerTypeAdapter(UUID.class, UUIDTypeAdapter.INSTANCE)
                 .registerTypeAdapter(File.class, FileTypeAdapter.INSTANCE)
                 .registerTypeAdapterFactory(ValidationTypeAdapterFactory.INSTANCE)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListPage.java
Patch:
@@ -171,7 +171,7 @@ protected List<Node> initializeToolbar(WorldListPage skinnable) {
             return Arrays.asList(chkShowAll,
                     createToolbarButton2(i18n("button.refresh"), SVG.REFRESH, skinnable::refresh),
                     createToolbarButton2(i18n("world.add"), SVG.PLUS, skinnable::add),
-                    createToolbarButton2(i18n("world.download"), SVG.PLUS, skinnable::download));
+                    createToolbarButton2(i18n("world.download"), SVG.DOWNLOAD_OUTLINE, skinnable::download));
         }
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CrashReportAnalyzer.java
Patch:
@@ -114,7 +114,7 @@ public enum Rule {
         MOD_RESOLUTION0(Pattern.compile("(\tMod File:|-- MOD |\tFailure message:)")),
         FORGE_REPEAT_INSTALLATION(Pattern.compile("MultipleArgumentsForOptionException: Found multiple arguments for option (.*?), but you asked for only one")),//https://github.com/HMCL-dev/HMCL/issues/1880
         OPTIFINE_REPEAT_INSTALLATION(Pattern.compile("ResolutionException: Module optifine reads another module named optifine")),//Optifine 重复安装（及Mod文件夹有，自动安装也有）
-        JAVA_VERSION_IS_TOO_HIGH(Pattern.compile("(Unable to make protected final java\\.lang\\.Class java\\.lang\\.ClassLoader\\.defineClass|java\\.lang\\.NoSuchFieldException: ucp|Unsupported class file major version|because module java\\.base does not export|java\\.lang\\.ClassNotFoundException: jdk\\.nashorn\\.api\\.scripting\\.NashornScriptEngineFactory|java\\.lang\\.ClassNotFoundException: java\\.lang\\.invoke\\.LambdaMetafactory)")),//Java版本过高
+        JAVA_VERSION_IS_TOO_HIGH(Pattern.compile("(Unable to make protected final java\\.lang\\.Class java\\.lang\\.ClassLoader\\.defineClass|java\\.lang\\.NoSuchFieldException: ucp|Unsupported class file major version|because module java\\.base does not export|java\\.lang\\.ClassNotFoundException: jdk\\.nashorn\\.api\\.scripting\\.NashornScriptEngineFactory|java\\.lang\\.ClassNotFoundException: java\\.lang\\.invoke\\.LambdaMetafactory|Exception in thread \"main\" java\\.lang\\.NullPointerException: Cannot read the array length because \"urls\" is null)")),//Java版本过高
         INSTALL_MIXINBOOTSTRAP(Pattern.compile("java\\.lang\\.ClassNotFoundException: org\\.spongepowered\\.asm\\.launch\\.MixinTweaker")),
 
         //Forge 默认会把每一个 mod jar 都当做一个 JPMS 的模块（Module）加载。在这个 jar 没有给出 module-info 声明的情况下，JPMS 会采用这样的顺序决定 module 名字：

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameLauncher.java
Patch:
@@ -25,7 +25,7 @@
 import org.jackhuang.hmcl.util.i18n.I18n;
 import org.jackhuang.hmcl.util.io.FileUtils;
 import org.jackhuang.hmcl.util.platform.ManagedProcess;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 
 import java.io.File;
 import java.io.IOException;
@@ -84,7 +84,7 @@ private void generateOptionsTxt() {
             1.11 ~ 12：zh_cn 时正常，zh_CN 时虽然显示了中文但语言设置会错误地显示选择英文
             1.13+    ：zh_cn 时正常，zh_CN 时自动切换为英文
          */
-        VersionNumber gameVersion = VersionNumber.asVersion(repository.getGameVersion(version).orElse("0.0"));
+        GameVersionNumber gameVersion = GameVersionNumber.asGameVersion(repository.getGameVersion(version));
         if (gameVersion.compareTo("1.1") < 0) {
             lang = null;
         } else if (gameVersion.compareTo("1.11") < 0) {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -31,7 +31,7 @@
 import org.jackhuang.hmcl.util.platform.JavaVersion;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
 import org.jackhuang.hmcl.util.platform.Platform;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 
 import java.io.IOException;
 import java.lang.reflect.Type;
@@ -644,11 +644,11 @@ public void setLauncherVisibility(LauncherVisibility launcherVisibility) {
         launcherVisibilityProperty.set(launcherVisibility);
     }
 
-    public Task<JavaVersion> getJavaVersion(VersionNumber gameVersion, Version version) {
+    public Task<JavaVersion> getJavaVersion(GameVersionNumber gameVersion, Version version) {
         return getJavaVersion(gameVersion, version, true);
     }
 
-    public Task<JavaVersion> getJavaVersion(VersionNumber gameVersion, Version version, boolean checkJava) {
+    public Task<JavaVersion> getJavaVersion(GameVersionNumber gameVersion, Version version, boolean checkJava) {
         return Task.runAsync(Schedulers.javafx(), () -> {
             if (StringUtils.isBlank(getJava())) {
                 setJava(StringUtils.isBlank(getJavaDir()) ? "Auto" : "Custom");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -39,7 +39,7 @@
 import org.jackhuang.hmcl.setting.VersionIconType;
 import org.jackhuang.hmcl.ui.construct.RipplerContainer;
 import org.jackhuang.hmcl.util.i18n.I18n;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 
 import java.util.HashMap;
 import java.util.HashSet;
@@ -204,7 +204,7 @@ public InstallerItemGroup(String gameVersion) {
 
             if (gameVersion == null) {
                 this.libraries = new InstallerItem[]{game, forge, neoForge, liteLoader, optiFine, fabric, fabricApi, quilt, quiltApi};
-            } else if (VersionNumber.compare(gameVersion, "1.13") < 0) {
+            } else if (GameVersionNumber.compare(gameVersion, "1.13") < 0) {
                 this.libraries = new InstallerItem[]{game, forge, liteLoader, optiFine};
             } else {
                 this.libraries = new InstallerItem[]{game, forge, neoForge, optiFine, fabric, fabricApi, quilt, quiltApi};

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -120,7 +120,7 @@ public MainPage getMainPage() {
                         .sorted(Comparator
                                 .comparing((Version version) -> version.getReleaseTime() == null ? new Date(0L)
                                         : version.getReleaseTime())
-                                .thenComparing(a -> VersionNumber.asVersion(a.getId())))
+                                .thenComparing(version -> VersionNumber.asVersion(repository.getGameVersion(version).orElse(version.getId()))))
                         .collect(Collectors.toList());
                 runInFX(() -> {
                     if (profile == Profiles.getSelectedProfile())

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -51,7 +51,7 @@
 import org.jackhuang.hmcl.util.i18n.I18n;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 import org.jackhuang.hmcl.util.javafx.BindingMapping;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 import org.jetbrains.annotations.Nullable;
 
 import java.io.File;
@@ -309,7 +309,7 @@ protected ModDownloadPageSkin(DownloadPage control) {
                     }
 
                     for (String gameVersion : control.versions.keys().stream()
-                            .sorted(Collections.reverseOrder(VersionNumber::compare))
+                            .sorted(Collections.reverseOrder(GameVersionNumber::compare))
                             .collect(Collectors.toList())) {
                         ComponentList sublist = new ComponentList(() ->
                                 control.versions.get(gameVersion).stream()

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -46,7 +46,7 @@
 import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.JavaVersion;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 
 import java.io.File;
 import java.nio.file.Path;
@@ -611,10 +611,10 @@ private void initJavaSubtitle() {
 
         Task.composeAsync(Schedulers.javafx(), () -> {
             if (versionId == null) {
-                return versionSetting.getJavaVersion(VersionNumber.asVersion("Unknown"), null);
+                return versionSetting.getJavaVersion(GameVersionNumber.unknown(), null);
             } else {
                 return versionSetting.getJavaVersion(
-                        VersionNumber.asVersion(GameVersion.minecraftVersion(profile.getRepository().getVersionJar(versionId)).orElse("Unknown")),
+                        GameVersionNumber.asGameVersion(profile.getRepository().getGameVersion(versionId)),
                         profile.getRepository().getVersion(versionId));
             }
         }).thenAcceptAsync(Schedulers.javafx(), javaVersion -> javaSublist.setSubtitle(Optional.ofNullable(javaVersion)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListItem.java
Patch:
@@ -29,7 +29,7 @@
 import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.wizard.SinglePageWizardProvider;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 
 import java.io.File;
 import java.time.Instant;
@@ -94,8 +94,7 @@ public void reveal() {
 
     public void manageDatapacks() {
         if (world.getGameVersion() == null || // old game will not write game version to level.dat
-                (VersionNumber.isIntVersionNumber(world.getGameVersion()) // we don't parse snapshot version
-                        && VersionNumber.asVersion(world.getGameVersion()).compareTo(VersionNumber.asVersion("1.13")) < 0)) {
+                GameVersionNumber.compare(world.getGameVersion(), "1.13") < 0) {
             Controllers.dialog(i18n("world.datapack.1_13"));
             return;
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -24,7 +24,7 @@
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
 import org.jackhuang.hmcl.util.io.FileUtils;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 
 import java.io.IOException;
 import java.nio.file.FileSystem;
@@ -100,7 +100,7 @@ public Collection<Task<?>> getDependencies() {
     @Override
     public void execute() throws IOException, VersionMismatchException, UnsupportedInstallationException {
         String originalMainClass = version.resolve(dependencyManager.getGameRepository()).getMainClass();
-        if (VersionNumber.compare("1.13", remote.getGameVersion()) <= 0) {
+        if (GameVersionNumber.compare("1.13", remote.getGameVersion()) <= 0) {
             // Forge 1.13 is not compatible with fabric.
             if (!LibraryAnalyzer.VANILLA_MAIN.equals(originalMainClass)
                     && !LibraryAnalyzer.MOD_LAUNCHER_MAIN.equals(originalMainClass)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameVerificationFixTask.java
Patch:
@@ -22,7 +22,7 @@
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 
 import java.io.File;
 import java.io.IOException;
@@ -65,7 +65,7 @@ public void execute() throws IOException {
         File jar = dependencyManager.getGameRepository().getVersionJar(version);
         LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version);
 
-        if (jar.exists() && VersionNumber.compare(gameVersion, "1.6") < 0 && analyzer.has(LibraryAnalyzer.LibraryType.FORGE)) {
+        if (jar.exists() && GameVersionNumber.compare(gameVersion, "1.6") < 0 && analyzer.has(LibraryAnalyzer.LibraryType.FORGE)) {
             try (FileSystem fs = CompressingUtils.createWritableZipFileSystem(jar.toPath(), StandardCharsets.UTF_8)) {
                 Files.deleteIfExists(fs.getPath("META-INF/MOJANG_C.DSA"));
                 Files.deleteIfExists(fs.getPath("META-INF/MOJANG_C.SF"));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineInstallTask.java
Patch:
@@ -190,7 +190,7 @@ public void execute() throws Exception {
 
                 if (LibraryAnalyzer.BOOTSTRAP_LAUNCHER_MAIN.equals(originalMainClass)) {
                     // OptiFine H1 Pre2+ is compatible with Forge 1.17
-                    if (buildofVer.compareTo(VersionNumber.asVersion("20210924-190833")) < 0) {
+                    if (buildofVer.compareTo("20210924-190833") < 0) {
                         throw new UnsupportedInstallationException(UnsupportedInstallationException.FORGE_1_17_OPTIFINE_H1_PRE2);
                     }
                 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/GameVersion.java
Patch:
@@ -42,7 +42,7 @@
 /**
  * @author huangyuhui
  */
-public final class GameVersion {
+final class GameVersion {
     private GameVersion() {
     }
 

File: HMCLCore/src/test/java/org/jackhuang/hmcl/game/JavaVersionConstraintTest.java
Patch:
@@ -17,8 +17,8 @@
  */
 package org.jackhuang.hmcl.game;
 
+import org.jackhuang.hmcl.util.versioning.GameVersionNumber;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
-import org.jackhuang.hmcl.util.versioning.VersionRange;
 import org.junit.jupiter.api.Test;
 
 import static org.junit.jupiter.api.Assertions.*;
@@ -28,10 +28,10 @@ public class JavaVersionConstraintTest {
     @Test
     public void vanillaJava16() {
         JavaVersionConstraint.VersionRanges range = JavaVersionConstraint.findSuitableJavaVersionRange(
-                VersionNumber.asVersion("1.17"),
+                GameVersionNumber.asGameVersion("1.17"),
                 null
         );
 
-        assertEquals(VersionRange.atLeast("16"), range.getMandatory());
+        assertEquals(VersionNumber.atLeast("16"), range.getMandatory());
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/Skin.java
Patch:
@@ -155,7 +155,8 @@ public Task<LoadedSkin> load(String username) {
                 if (defaultSkinLoader == null) {
                     return Task.supplyAsync(() -> null);
                 }
-                return Task.supplyAsync(() -> new LoadedSkin(TextureModel.STEVE, Texture.loadTexture(defaultSkinLoader.apply(type)), null));
+                TextureModel model = type == Type.ALEX ? TextureModel.ALEX : TextureModel.STEVE;
+                return Task.supplyAsync(() -> new LoadedSkin(model, Texture.loadTexture(defaultSkinLoader.apply(type)), null));
             case LOCAL_FILE:
                 return Task.supplyAsync(() -> {
                     Texture skin = null, cape = null;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorDownloader.java
Patch:
@@ -97,7 +97,7 @@ private void update() throws IOException {
         }
 
         try {
-            new FileDownloadTask(new URL(downloadProvider.get().injectURL(latest.downloadUrl)), artifactLocation.toFile(),
+            new FileDownloadTask(downloadProvider.get().injectURLWithCandidates(latest.downloadUrl), artifactLocation.toFile(),
                     Optional.ofNullable(latest.checksums.get("sha256"))
                             .map(checksum -> new IntegrityCheck("SHA-256", checksum))
                             .orElse(null))

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -84,7 +84,7 @@ public void loadVersion(Profile profile, String versionId) {
 
             itemsProperty().clear();
 
-            InstallerItem.InstallerItemGroup group = new InstallerItem.InstallerItemGroup();
+            InstallerItem.InstallerItemGroup group = new InstallerItem.InstallerItemGroup(gameVersion);
 
             // Conventional libraries: game, fabric, forge, neoforge, liteloader, optifine
             for (InstallerItem installerItem : group.getLibraries()) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -503,6 +503,9 @@ private Map<String, String> getEnvVars() {
         if (analyzer.has(LibraryAnalyzer.LibraryType.FORGE)) {
             env.put("INST_FORGE", "1");
         }
+        if (analyzer.has(LibraryAnalyzer.LibraryType.NEO_FORGE)) {
+            env.put("INST_NEOFORGE", "1");
+        }
         if (analyzer.has(LibraryAnalyzer.LibraryType.LITELOADER)) {
             env.put("INST_LITELOADER", "1");
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackExportTask.java
Patch:
@@ -77,9 +77,8 @@ public void execute() throws Exception {
             components.add(new MultiMCManifest.MultiMCManifestComponent(true, false, "net.minecraft", gameVersion));
             analyzer.getVersion(FORGE).ifPresent(forgeVersion ->
                     components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "net.minecraftforge", forgeVersion)));
-            // MultiMC hasn't supported NeoForge yet.
-            //  analyzer.getVersion(NEO_FORGE).ifPresent(neoForgeVersion ->
-            //          components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "net.neoforged", neoForgeVersion)));
+            analyzer.getVersion(NEO_FORGE).ifPresent(neoForgeVersion ->
+                    components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "net.neoforged", neoForgeVersion)));
             analyzer.getVersion(LITELOADER).ifPresent(liteLoaderVersion ->
                     components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "com.mumfrey.liteloader", liteLoaderVersion)));
             analyzer.getVersion(FABRIC).ifPresent(fabricVersion ->

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskListPane.java
Patch:
@@ -37,6 +37,7 @@
 import org.jackhuang.hmcl.download.java.JavaDownloadTask;
 import org.jackhuang.hmcl.download.liteloader.LiteLoaderInstallTask;
 import org.jackhuang.hmcl.download.neoforge.NeoForgeInstallTask;
+import org.jackhuang.hmcl.download.neoforge.NeoForgeOldInstallTask;
 import org.jackhuang.hmcl.download.optifine.OptiFineInstallTask;
 import org.jackhuang.hmcl.download.quilt.QuiltAPIInstallTask;
 import org.jackhuang.hmcl.download.quilt.QuiltInstallTask;
@@ -124,7 +125,7 @@ public void onRunning(Task<?> task) {
                     task.setName(i18n("install.installer.install", i18n("install.installer.game")));
                 } else if (task instanceof ForgeNewInstallTask || task instanceof ForgeOldInstallTask) {
                     task.setName(i18n("install.installer.install", i18n("install.installer.forge")));
-                } else if (task instanceof NeoForgeInstallTask) {
+                } else if (task instanceof NeoForgeInstallTask || task instanceof NeoForgeOldInstallTask) {
                     task.setName(i18n("install.installer.install", i18n("install.installer.neoforge")));
                 } else if (task instanceof LiteLoaderInstallTask) {
                     task.setName(i18n("install.installer.install", i18n("install.installer.liteloader")));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/AdditionalInstallersPage.java
Patch:
@@ -87,6 +87,7 @@ protected void reload() {
         LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version.resolvePreservingPatches(repository));
         String game = analyzer.getVersion(MINECRAFT).orElse(null);
         String forge = analyzer.getVersion(FORGE).orElse(null);
+        String neoForge = analyzer.getVersion(NEO_FORGE).orElse(null);
         String liteLoader = analyzer.getVersion(LITELOADER).orElse(null);
         String optiFine = analyzer.getVersion(OPTIFINE).orElse(null);
         String fabric = analyzer.getVersion(FABRIC).orElse(null);
@@ -95,7 +96,7 @@ protected void reload() {
         String quiltApi = analyzer.getVersion(QUILT_API).orElse(null);
 
         InstallerItem[] libraries = group.getLibraries();
-        String[] versions = new String[]{game, forge, liteLoader, optiFine, fabric, fabricApi, quilt, quiltApi};
+        String[] versions = new String[]{game, forge, neoForge, liteLoader, optiFine, fabric, fabricApi, quilt, quiltApi};
 
         String currentGameVersion = Lang.nonNull(getVersion("game"), game);
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackExportTask.java
Patch:
@@ -91,6 +91,8 @@ public void execute() throws Exception {
             addons.add(new McbbsModpackManifest.Addon(MINECRAFT.getPatchId(), gameVersion));
             analyzer.getVersion(FORGE).ifPresent(forgeVersion ->
                     addons.add(new McbbsModpackManifest.Addon(FORGE.getPatchId(), forgeVersion)));
+            analyzer.getVersion(NEO_FORGE).ifPresent(neoForgeVersion ->
+                    addons.add(new McbbsModpackManifest.Addon(NEO_FORGE.getPatchId(), neoForgeVersion)));
             analyzer.getVersion(LITELOADER).ifPresent(liteLoaderVersion ->
                     addons.add(new McbbsModpackManifest.Addon(LITELOADER.getPatchId(), liteLoaderVersion)));
             analyzer.getVersion(OPTIFINE).ifPresent(optifineVersion ->
@@ -115,6 +117,7 @@ public void execute() throws Exception {
             // CurseForge manifest
             List<CurseManifestModLoader> modLoaders = new ArrayList<>();
             analyzer.getVersion(FORGE).ifPresent(forgeVersion -> modLoaders.add(new CurseManifestModLoader("forge-" + forgeVersion, true)));
+            analyzer.getVersion(NEO_FORGE).ifPresent(forgeVersion -> modLoaders.add(new CurseManifestModLoader("neoforge-" + forgeVersion, true)));
             analyzer.getVersion(FABRIC).ifPresent(fabricVersion -> modLoaders.add(new CurseManifestModLoader("fabric-" + fabricVersion, true)));
             // OptiFine and LiteLoader are not supported by CurseForge modpack.
             CurseManifest curseManifest = new CurseManifest(CurseManifest.MINECRAFT_MODPACK, 1, info.getName(), info.getVersion(), info.getAuthor(), "overrides", new CurseManifestMinecraft(gameVersion, modLoaders), Collections.emptyList());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackExportTask.java
Patch:
@@ -77,6 +77,9 @@ public void execute() throws Exception {
             components.add(new MultiMCManifest.MultiMCManifestComponent(true, false, "net.minecraft", gameVersion));
             analyzer.getVersion(FORGE).ifPresent(forgeVersion ->
                     components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "net.minecraftforge", forgeVersion)));
+            // MultiMC hasn't supported NeoForge yet.
+            //  analyzer.getVersion(NEO_FORGE).ifPresent(neoForgeVersion ->
+            //          components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "net.neoforged", neoForgeVersion)));
             analyzer.getVersion(LITELOADER).ifPresent(liteLoaderVersion ->
                     components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "com.mumfrey.liteloader", liteLoaderVersion)));
             analyzer.getVersion(FABRIC).ifPresent(fabricVersion ->

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackExportTask.java
Patch:
@@ -85,6 +85,8 @@ public void execute() throws Exception {
             addons.add(new ServerModpackManifest.Addon(MINECRAFT.getPatchId(), gameVersion));
             analyzer.getVersion(FORGE).ifPresent(forgeVersion ->
                     addons.add(new ServerModpackManifest.Addon(FORGE.getPatchId(), forgeVersion)));
+            analyzer.getVersion(NEO_FORGE).ifPresent(neoForgeVersion ->
+                    addons.add(new ServerModpackManifest.Addon(NEO_FORGE.getPatchId(), neoForgeVersion)));
             analyzer.getVersion(LITELOADER).ifPresent(liteLoaderVersion ->
                     addons.add(new ServerModpackManifest.Addon(LITELOADER.getPatchId(), liteLoaderVersion)));
             analyzer.getVersion(OPTIFINE).ifPresent(optifineVersion ->

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -23,14 +23,14 @@
 import org.jackhuang.hmcl.event.Event;
 import org.jackhuang.hmcl.setting.Profile;
 import org.jackhuang.hmcl.setting.Profiles;
+import org.jackhuang.hmcl.setting.VersionIconType;
 import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.WeakListenerHolder;
 import org.jackhuang.hmcl.ui.construct.AdvancedListItem;
 import org.jackhuang.hmcl.util.Pair;
 
 import java.util.function.Consumer;
 
-import static org.jackhuang.hmcl.ui.FXUtils.newBuiltinImage;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public class GameAdvancedListItem extends AdvancedListItem {
@@ -72,7 +72,7 @@ private void loadVersion(String version) {
             Tooltip.uninstall(this,tooltip);
             setTitle(i18n("version.empty"));
             setSubtitle(i18n("version.empty.add"));
-            imageView.setImage(newBuiltinImage("/assets/img/grass.png"));
+            imageView.setImage(VersionIconType.DEFAULT.getIcon());
             tooltip.setText("");
         }
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionIconDialog.java
Patch:
@@ -104,7 +104,7 @@ private Node createCustomIcon() {
     }
 
     private Node createIcon(VersionIconType type) {
-        ImageView imageView = new ImageView(FXUtils.newBuiltinImage(type.getResourceUrl()));
+        ImageView imageView = new ImageView(type.getIcon());
         imageView.setMouseTransparent(true);
         RipplerContainer container = new RipplerContainer(imageView);
         FXUtils.setLimitWidth(container, 36);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -256,7 +256,7 @@ private Command generateCommandLine(File nativeFolder) throws IOException {
 
         if (StringUtils.isNotBlank(options.getServerIp())) {
             String[] args = options.getServerIp().split(":");
-            if (version.compareTo(new Version("1.20")) < 0) {
+            if (VersionNumber.VERSION_COMPARATOR.compare(repository.getGameVersion(version).orElse("0.0"), "1.20") < 0) {
                 res.add("--server");
                 res.add(args[0]);
                 res.add("--port");

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/UpdateChecker.java
Patch:
@@ -81,7 +81,7 @@ public static ReadOnlyBooleanProperty checkingUpdateProperty() {
     }
 
     private static RemoteVersion checkUpdate(UpdateChannel channel) throws IOException {
-        if (!IntegrityChecker.isSelfVerified() && !"true".equals(System.getProperty("hmcl.self_integrity_check.disable"))) {
+        if (!IntegrityChecker.DISABLE_SELF_INTEGRITY_CHECK && !IntegrityChecker.isSelfVerified()) {
             throw new IOException("Self verification failed");
         }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/util/NativePatcher.java
Patch:
@@ -93,10 +93,10 @@ public static Version patchNative(Version version, String gameVersion, JavaVersi
         if (settings.isNotPatchNatives())
             return version;
 
-        if ((os == OperatingSystem.WINDOWS || os == OperatingSystem.LINUX || os == OperatingSystem.OSX) && arch.isX86())
+        if (arch.isX86() && (os == OperatingSystem.WINDOWS || os == OperatingSystem.LINUX || os == OperatingSystem.OSX))
             return version;
 
-        if ((os == OperatingSystem.OSX || os == OperatingSystem.WINDOWS) && arch == Architecture.ARM64
+        if (arch == Architecture.ARM64 && (os == OperatingSystem.OSX || os == OperatingSystem.WINDOWS)
                 && gameVersionNumber != null
                 && gameVersionNumber.compareTo("1.19") >= 0)
             return version;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -747,7 +747,7 @@ public void setProcess(ManagedProcess process) {
 
             if (showLogs)
                 Platform.runLater(() -> {
-                    logWindow = new LogWindow();
+                    logWindow = new LogWindow(process);
                     logWindow.showNormal();
                     logWindowLatch.countDown();
                 });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -267,7 +267,7 @@ private String parseFabricModId(String modName) {
     }
 
     private void showLogWindow() {
-        LogWindow logWindow = new LogWindow();
+        LogWindow logWindow = new LogWindow(managedProcess);
 
         logWindow.logLine(Logging.filterForbiddenToken("Command: " + new CommandBuilder().addAll(managedProcess.getCommands())), Log4jLevel.INFO);
         if (managedProcess.getClasspath() != null)

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -279,6 +279,8 @@ else if (LibraryAnalyzer.isModded(this, version)) {
                     return newBuiltinImage("/assets/img/fabric.png");
                 else if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.FORGE))
                     return newBuiltinImage("/assets/img/forge.png");
+                else if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.NEO_FORGE))
+                    return newBuiltinImage("/assets/img/neoforge.png");
                 else if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.QUILT))
                     return newBuiltinImage("/assets/img/quilt.png");
                 else if (libraryAnalyzer.has(LibraryAnalyzer.LibraryType.OPTIFINE))

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -510,9 +510,7 @@ private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting
                             break;
                         case MODDED_JAVA_16:
                             // Minecraft<=1.17.1+Forge[37.0.0,37.0.60) not compatible with Java 17
-                            String forgePatchVersion = analyzer.getVersion(LibraryAnalyzer.LibraryType.FORGE)
-                                    .map(LibraryAnalyzer.LibraryType.FORGE::patchVersion)
-                                    .orElse(null);
+                            String forgePatchVersion = analyzer.getVersion(LibraryAnalyzer.LibraryType.FORGE).orElse(null);
                             if (forgePatchVersion != null && VersionNumber.VERSION_COMPARATOR.compare(forgePatchVersion, "37.0.60") < 0)
                                 suggestions.add(i18n("launch.advice.forge37_0_60"));
                             else

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionIconType.java
Patch:
@@ -27,6 +27,7 @@ public enum VersionIconType {
     CRAFT_TABLE("/assets/img/craft_table.png"),
     FABRIC("/assets/img/fabric.png"),
     FORGE("/assets/img/forge.png"),
+    NEO_FORGE("/assets/img/neoforge.png"),
     FURNACE("/assets/img/furnace.png"),
     QUILT("/assets/img/quilt.png");
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -36,6 +36,7 @@
 import org.jackhuang.hmcl.download.forge.ForgeRemoteVersion;
 import org.jackhuang.hmcl.download.game.GameRemoteVersion;
 import org.jackhuang.hmcl.download.liteloader.LiteLoaderRemoteVersion;
+import org.jackhuang.hmcl.download.neoforge.NeoForgeRemoteVersion;
 import org.jackhuang.hmcl.download.optifine.OptiFineRemoteVersion;
 import org.jackhuang.hmcl.download.quilt.QuiltAPIRemoteVersion;
 import org.jackhuang.hmcl.download.quilt.QuiltRemoteVersion;
@@ -335,6 +336,8 @@ else if (remoteVersion instanceof OptiFineRemoteVersion)
                     iconType = VersionIconType.COMMAND;
                 else if (remoteVersion instanceof ForgeRemoteVersion)
                     iconType = VersionIconType.FORGE;
+                else if (remoteVersion instanceof NeoForgeRemoteVersion)
+                    iconType = VersionIconType.NEO_FORGE;
                 else if (remoteVersion instanceof FabricRemoteVersion || remoteVersion instanceof FabricAPIRemoteVersion)
                     iconType = VersionIconType.FABRIC;
                 else if (remoteVersion instanceof QuiltRemoteVersion || remoteVersion instanceof QuiltAPIRemoteVersion)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -399,6 +399,9 @@ private static final class ModItem extends StackPane {
                             case FORGE:
                                 content.getTags().add(i18n("install.installer.forge"));
                                 break;
+                            case NEO_FORGED:
+                                content.getTags().add(i18n("install.installer.neoforge"));
+                                break;
                             case FABRIC:
                                 content.getTags().add(i18n("install.installer.fabric"));
                                 break;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -86,7 +86,7 @@ public void loadVersion(Profile profile, String versionId) {
 
             InstallerItem.InstallerItemGroup group = new InstallerItem.InstallerItemGroup();
 
-            // Conventional libraries: game, fabric, forge, liteloader, optifine
+            // Conventional libraries: game, fabric, forge, neoforge, liteloader, optifine
             for (InstallerItem installerItem : group.getLibraries()) {
                 String libraryId = installerItem.getLibraryId();
                 String libraryVersion = analyzer.getVersion(libraryId).orElse(null);
@@ -96,7 +96,7 @@ public void loadVersion(Profile profile, String versionId) {
                 installerItem.action.set(e -> {
                     Controllers.getDecorator().startWizard(new UpdateInstallerWizardProvider(profile, gameVersion, version, libraryId, libraryVersion));
                 });
-                boolean removable = !"game".equals(libraryId) && libraryVersion != null;
+                boolean removable = !LibraryAnalyzer.LibraryType.MINECRAFT.getPatchId().equals(libraryId) && libraryVersion != null;
                 installerItem.removable.set(removable);
                 if (removable) {
                     Runnable action = removeAction.apply(libraryId);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionIconDialog.java
Patch:
@@ -65,6 +65,7 @@ public VersionIconDialog(Profile profile, String versionId, Runnable onFinish) {
                 createIcon(VersionIconType.CRAFT_TABLE),
                 createIcon(VersionIconType.FABRIC),
                 createIcon(VersionIconType.FORGE),
+                createIcon(VersionIconType.NEO_FORGE),
                 createIcon(VersionIconType.FURNACE),
                 createIcon(VersionIconType.QUILT)
         );

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -208,7 +208,7 @@ private static Version maintainGameWithCpwBoostrapLauncher(GameRepository reposi
         LibraryAnalyzer libraryAnalyzer = LibraryAnalyzer.analyze(version);
         VersionLibraryBuilder builder = new VersionLibraryBuilder(version);
 
-        if (!libraryAnalyzer.has(FORGE)) return version;
+        if (!libraryAnalyzer.has(FORGE) && !libraryAnalyzer.has(NEO_FORGE)) return version;
 
         Optional<String> bslVersion = libraryAnalyzer.getVersion(BOOTSTRAP_LAUNCHER);
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeNewInstallTask.java
Patch:
@@ -192,7 +192,7 @@ public void execute() throws Exception {
     private Path tempDir;
     private AtomicInteger processorDoneCount = new AtomicInteger(0);
 
-    ForgeNewInstallTask(DefaultDependencyManager dependencyManager, Version version, String selfVersion, Path installer) {
+    public ForgeNewInstallTask(DefaultDependencyManager dependencyManager, Version version, String selfVersion, Path installer) {
         this.dependencyManager = dependencyManager;
         this.gameRepository = dependencyManager.getGameRepository();
         this.version = version;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -145,7 +145,6 @@ protected boolean appliesToVersionImpl(VersionNumber gameVersionNumber, @Nullabl
                                                @Nullable JavaVersion javaVersion, @Nullable LibraryAnalyzer analyzer) {
             if (version == null || javaVersion == null || analyzer == null) return false;
             VersionNumber forgePatchVersion = analyzer.getVersion(LibraryAnalyzer.LibraryType.FORGE)
-                    .map(LibraryAnalyzer.LibraryType.FORGE::patchVersion)
                     .map(VersionNumber::asVersion)
                     .orElse(null);
             if (forgePatchVersion == null) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseAddon.java
Patch:
@@ -588,6 +588,7 @@ public RemoteMod.Version toVersion() {
                         if ("fabric".equalsIgnoreCase(version)) return Stream.of(ModLoaderType.FABRIC);
                         else if ("forge".equalsIgnoreCase(version)) return Stream.of(ModLoaderType.FORGE);
                         else if ("quilt".equalsIgnoreCase(version)) return Stream.of(ModLoaderType.QUILT);
+                        else if ("neoforge".equalsIgnoreCase(version)) return Stream.of(ModLoaderType.NEO_FORGED);
                         else return Stream.empty();
                     }).collect(Collectors.toList())
             );

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthRemoteModRepository.java
Patch:
@@ -513,7 +513,9 @@ public Optional<RemoteMod.Version> toVersion() {
                     loaders.stream().flatMap(loader -> {
                         if ("fabric".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.FABRIC);
                         else if ("forge".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.FORGE);
+                        else if ("neoforge".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.NEO_FORGED);
                         else if ("quilt".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.QUILT);
+                        else if ("liteloader".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.LITE_LOADER);
                         else return Stream.empty();
                     }).collect(Collectors.toList())
             ));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskListPane.java
Patch:
@@ -301,7 +301,7 @@ private class ProgressListNode extends BorderPane {
         private final Label title = new Label();
         private final Label state = new Label();
         private final DoubleBinding binding = Bindings.createDoubleBinding(() ->
-                        getWidth() - getPadding().getLeft() - getPadding().getRight(),
+                        getWidth() - getPadding().getLeft() - getPadding().getRight() - getInsets().getLeft() - getInsets().getRight(),
                 paddingProperty(), widthProperty());
 
         public ProgressListNode(Task<?> task) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -206,7 +206,7 @@ public static class InstallerItemSkin extends SkinBase<InstallerItem> {
             pane.pseudoClassStateChanged(CARD, control.style == Style.CARD);
 
             if (control.imageUrl != null) {
-                ImageView view = new ImageView(FXUtils.newRemoteImage(control.imageUrl));
+                ImageView view = new ImageView(FXUtils.newBuiltinImage(control.imageUrl));
                 Node node = FXUtils.limitingSize(view, 32, 32);
                 node.setMouseTransparent(true);
                 node.getStyleClass().add("installer-item-image");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseAddon.java
Patch:
@@ -582,7 +582,7 @@ public RemoteMod.Version toVersion() {
                             throw new IllegalStateException("Broken datas.");
                         }
                         return RemoteMod.Dependency.ofGeneral(RELATION_TYPE.get(dependency.getRelationType()), CurseForgeRemoteModRepository.MODS, Integer.toString(dependency.getModId()));
-                    }).filter(Objects::nonNull).collect(Collectors.toList()),
+                    }).distinct().filter(Objects::nonNull).collect(Collectors.toList()),
                     gameVersions.stream().filter(ver -> ver.startsWith("1.") || ver.contains("w")).collect(Collectors.toList()),
                     gameVersions.stream().flatMap(version -> {
                         if ("fabric".equalsIgnoreCase(version)) return Stream.of(ModLoaderType.FABRIC);

File: HMCL/src/main/java/moe/mickey/minecraft/skin/fx/SkinCanvas.java
Patch:
@@ -12,12 +12,13 @@
 import javafx.scene.transform.Scale;
 import javafx.scene.transform.Translate;
 
+import org.jackhuang.hmcl.ui.FXUtils;
 import org.jetbrains.annotations.Nullable;
 
 public class SkinCanvas extends Group {
 
-    public static final Image ALEX = new Image("/assets/img/skin/alex.png");
-    public static final Image STEVE = new Image("/assets/img/skin/steve.png");
+    public static final Image ALEX = FXUtils.newBuiltinImage("/assets/img/skin/alex.png");
+    public static final Image STEVE = FXUtils.newBuiltinImage("/assets/img/skin/steve.png");
 
     public static final SkinCube ALEX_LARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 32F / 64F, 48F / 64F, 0F, true);
     public static final SkinCube ALEX_RARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 40F / 64F, 16F / 64F, 0F, true);

File: HMCL/src/main/java/org/jackhuang/hmcl/Metadata.java
Patch:
@@ -37,7 +37,9 @@ private Metadata() {}
     public static final String TITLE = NAME + " " + VERSION;
     public static final String FULL_TITLE = FULL_NAME + " v" + VERSION;
 
-    public static final String UPDATE_URL = System.getProperty("hmcl.update_source.override", "https://hmcl.huangyuhui.net/api/update_link");
+    // hmcl.update_source.override is deprecated. If it is used, a warning message will be printed in org.jackhuang.hmcl.Launcher.main .
+    public static final String HMCL_UPDATE_URL = System.getProperty("hmcl.hmcl_update_source.override", System.getProperty("hmcl.update_source.override", "https://hmcl.huangyuhui.net/api/update_link"));
+    public static final String RESOURCE_UPDATE_URL = System.getProperty("hmcl.resource_update_source.override", "https://hmcl.huangyuhui.net/api/dynamic_remote_resource/update_link");
     public static final String CONTACT_URL = "https://docs.hmcl.net/help.html";
     public static final String HELP_URL = "https://docs.hmcl.net";
     public static final String CHANGELOG_URL = "https://docs.hmcl.net/changelog/";

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/CrashWindow.java
Patch:
@@ -28,9 +28,9 @@
 import javafx.stage.Stage;
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.countly.CrashReport;
-import org.jackhuang.hmcl.upgrade.UpdateChecker;
+import org.jackhuang.hmcl.upgrade.hmcl.UpdateChecker;
 
-import static org.jackhuang.hmcl.ui.FXUtils.newImage;
+import static org.jackhuang.hmcl.ui.FXUtils.newBuiltinImage;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 /**
@@ -70,7 +70,7 @@ else if (UpdateChecker.isOutdated())
 
         Scene scene = new Scene(pane, 800, 480);
         setScene(scene);
-        getIcons().add(newImage("/assets/img/icon.png"));
+        getIcons().add(newBuiltinImage("/assets/img/icon.png"));
         setTitle(i18n("message.error"));
 
         setOnCloseRequest(e -> System.exit(1));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -66,7 +66,7 @@
 import java.util.stream.Collectors;
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
-import static org.jackhuang.hmcl.ui.FXUtils.newImage;
+import static org.jackhuang.hmcl.ui.FXUtils.newBuiltinImage;
 import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.util.Logging.LOG;
 import static org.jackhuang.hmcl.util.Pair.pair;
@@ -116,7 +116,7 @@ public GameCrashWindow(ManagedProcess managedProcess, ProcessListener.ExitType e
         setScene(new Scene(view, 800, 480));
         getScene().getStylesheets().addAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
         setTitle(i18n("game.crash.title"));
-        getIcons().add(newImage("/assets/img/icon.png"));
+        getIcons().add(newBuiltinImage("/assets/img/icon.png"));
 
         analyzeCrashReport();
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -30,7 +30,6 @@
 import javafx.scene.control.Label;
 import javafx.scene.control.Skin;
 import javafx.scene.control.SkinBase;
-import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.input.MouseEvent;
 import javafx.scene.layout.*;
@@ -207,7 +206,7 @@ public static class InstallerItemSkin extends SkinBase<InstallerItem> {
             pane.pseudoClassStateChanged(CARD, control.style == Style.CARD);
 
             if (control.imageUrl != null) {
-                ImageView view = new ImageView(new Image(control.imageUrl));
+                ImageView view = new ImageView(FXUtils.newRemoteImage(control.imageUrl));
                 Node node = FXUtils.limitingSize(view, 32, 32);
                 node.setMouseTransparent(true);
                 node.getStyleClass().add("installer-item-image");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -57,7 +57,7 @@
 import java.util.stream.IntStream;
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
-import static org.jackhuang.hmcl.ui.FXUtils.newImage;
+import static org.jackhuang.hmcl.ui.FXUtils.newBuiltinImage;
 import static org.jackhuang.hmcl.util.Lang.thread;
 import static org.jackhuang.hmcl.util.Logging.LOG;
 import static org.jackhuang.hmcl.util.StringUtils.parseEscapeSequence;
@@ -94,7 +94,7 @@ public LogWindow() {
         setScene(new Scene(impl, 800, 480));
         getScene().getStylesheets().addAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
         setTitle(i18n("logwindow.title"));
-        getIcons().add(newImage("/assets/img/icon.png"));
+        getIcons().add(newBuiltinImage("/assets/img/icon.png"));
 
         levelShownMap.values().forEach(property -> property.addListener((a, b, newValue) -> shakeLogs()));
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/UpgradeDialog.java
Patch:
@@ -25,7 +25,7 @@
 import javafx.scene.web.WebView;
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.ui.construct.DialogCloseEvent;
-import org.jackhuang.hmcl.upgrade.RemoteVersion;
+import org.jackhuang.hmcl.upgrade.hmcl.RemoteVersion;
 
 import java.util.logging.Level;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/WebStage.java
Patch:
@@ -29,7 +29,7 @@
 import org.jackhuang.hmcl.setting.Theme;
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
-import static org.jackhuang.hmcl.ui.FXUtils.newImage;
+import static org.jackhuang.hmcl.ui.FXUtils.newBuiltinImage;
 
 public class WebStage extends Stage {
     protected final StackPane pane = new StackPane();
@@ -44,7 +44,7 @@ public WebStage() {
     public WebStage(int width, int height) {
         setScene(new Scene(pane, width, height));
         getScene().getStylesheets().addAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
-        getIcons().add(newImage("/assets/img/icon.png"));
+        getIcons().add(newBuiltinImage("/assets/img/icon.png"));
         webView.getEngine().setUserDataDirectory(Metadata.HMCL_DIRECTORY.toFile());
         webView.setContextMenuEnabled(false);
         progressBar.progressProperty().bind(webView.getEngine().getLoadWorker().progressProperty());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -58,7 +58,7 @@
 import org.jackhuang.hmcl.ui.SVG;
 import org.jackhuang.hmcl.ui.WeakListenerHolder;
 import org.jackhuang.hmcl.ui.construct.*;
-import org.jackhuang.hmcl.upgrade.IntegrityChecker;
+import org.jackhuang.hmcl.upgrade.hmcl.IntegrityChecker;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.gson.UUIDTypeAdapter;
 import org.jackhuang.hmcl.util.javafx.BindingMapping;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorController.java
Patch:
@@ -64,7 +64,7 @@
 import static java.util.logging.Level.WARNING;
 import static java.util.stream.Collectors.toList;
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
-import static org.jackhuang.hmcl.ui.FXUtils.newImage;
+import static org.jackhuang.hmcl.ui.FXUtils.newBuiltinImage;
 import static org.jackhuang.hmcl.ui.FXUtils.onEscPressed;
 import static org.jackhuang.hmcl.util.Logging.LOG;
 import static org.jackhuang.hmcl.util.io.FileUtils.getExtension;
@@ -172,7 +172,7 @@ private Background getBackground() {
                     image = tryLoadImage(backgroundImageUrl).orElse(null);
                 break;
             case CLASSIC:
-                image = newImage("/assets/img/background-classic.jpg");
+                image = newBuiltinImage("/assets/img/background-classic.jpg");
                 break;
             case TRANSLUCENT:
                 return new Background(new BackgroundFill(new Color(1, 1, 1, 0.5), CornerRadii.EMPTY, Insets.EMPTY));
@@ -202,7 +202,7 @@ private Image loadDefaultBackgroundImage() {
 
         return image.orElseGet(() -> {
             if (defaultBackground == null)
-                defaultBackground = newImage("/assets/img/background.jpg");
+                defaultBackground = newBuiltinImage("/assets/img/background.jpg");
             return defaultBackground;
         });
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -41,6 +41,7 @@
 import org.jackhuang.hmcl.download.quilt.QuiltRemoteVersion;
 import org.jackhuang.hmcl.setting.Theme;
 import org.jackhuang.hmcl.setting.VersionIconType;
+import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.SVG;
 import org.jackhuang.hmcl.ui.animation.ContainerAnimations;
 import org.jackhuang.hmcl.ui.animation.TransitionPane;
@@ -286,7 +287,7 @@ private static class RemoteVersionListCell extends ListCell<RemoteVersion> {
         }
 
         private Image getIcon(VersionIconType type) {
-            return icons.computeIfAbsent(type, iconType -> new Image(iconType.getResourceUrl()));
+            return icons.computeIfAbsent(type, iconType -> FXUtils.newBuiltinImage(iconType.getResourceUrl()));
         }
 
         @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -41,7 +41,7 @@
 import org.jackhuang.hmcl.ui.download.ModpackInstallWizardProvider;
 import org.jackhuang.hmcl.ui.versions.GameAdvancedListItem;
 import org.jackhuang.hmcl.ui.versions.Versions;
-import org.jackhuang.hmcl.upgrade.UpdateChecker;
+import org.jackhuang.hmcl.upgrade.hmcl.UpdateChecker;
 import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -30,7 +30,7 @@
 
 import java.util.function.Consumer;
 
-import static org.jackhuang.hmcl.ui.FXUtils.newImage;
+import static org.jackhuang.hmcl.ui.FXUtils.newBuiltinImage;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public class GameAdvancedListItem extends AdvancedListItem {
@@ -72,7 +72,7 @@ private void loadVersion(String version) {
             Tooltip.uninstall(this,tooltip);
             setTitle(i18n("version.empty"));
             setSubtitle(i18n("version.empty.add"));
-            imageView.setImage(newImage("/assets/img/grass.png"));
+            imageView.setImage(newBuiltinImage("/assets/img/grass.png"));
             tooltip.setText("");
         }
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -210,7 +210,7 @@ public void checkUpdates() {
     }
 
     public void download() {
-        Controllers.getDownloadPage().showModDownloads();
+        Controllers.getDownloadPage().showModDownloads().selectVersion(versionId);
         Controllers.navigate(Controllers.getDownloadPage());
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionIconDialog.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui.versions;
 
 import javafx.scene.Node;
-import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.layout.FlowPane;
 import javafx.stage.FileChooser;
@@ -104,7 +103,7 @@ private Node createCustomIcon() {
     }
 
     private Node createIcon(VersionIconType type) {
-        ImageView imageView = new ImageView(new Image(type.getResourceUrl()));
+        ImageView imageView = new ImageView(FXUtils.newBuiltinImage(type.getResourceUrl()));
         imageView.setMouseTransparent(true);
         RipplerContainer container = new RipplerContainer(imageView);
         FXUtils.setLimitWidth(container, 36);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -27,7 +27,6 @@
 import javafx.geometry.Pos;
 import javafx.scene.control.Label;
 import javafx.scene.control.ScrollPane;
-import javafx.scene.image.Image;
 import javafx.scene.layout.*;
 import javafx.scene.text.Text;
 import javafx.stage.FileChooser;
@@ -146,7 +145,7 @@ public VersionSettingsPage(boolean globalSetting) {
             rootPane.getChildren().add(iconPickerItemWrapper);
 
             iconPickerItem = new ImagePickerItem();
-            iconPickerItem.setImage(new Image("/assets/img/icon.png"));
+            iconPickerItem.setImage(FXUtils.newBuiltinImage("/assets/img/icon.png"));
             iconPickerItem.setTitle(i18n("settings.icon"));
             iconPickerItem.setOnSelectButtonClicked(e -> onExploreIcon());
             iconPickerItem.setOnDeleteButtonClicked(e -> onDeleteIcon());

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/ExecutableHeaderHelper.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.upgrade;
+package org.jackhuang.hmcl.upgrade.hmcl;
 
 import java.io.IOException;
 import java.io.InputStream;

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/HMCLDownloadTask.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.upgrade;
+package org.jackhuang.hmcl.upgrade.hmcl;
 
 import org.jackhuang.hmcl.task.FileDownloadTask;
 import org.jackhuang.hmcl.util.Pack200Utils;

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/IntegrityChecker.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.upgrade;
+package org.jackhuang.hmcl.upgrade.hmcl;
 
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.util.DigestUtils;

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/RemoteVersion.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.upgrade;
+package org.jackhuang.hmcl.upgrade.hmcl;
 
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/UpdateChannel.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.upgrade;
+package org.jackhuang.hmcl.upgrade.hmcl;
 
 import org.jackhuang.hmcl.Metadata;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/UpdateChecker.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.upgrade;
+package org.jackhuang.hmcl.upgrade.hmcl;
 
 import javafx.application.Platform;
 import javafx.beans.binding.Bindings;
@@ -85,7 +85,7 @@ private static RemoteVersion checkUpdate(UpdateChannel channel) throws IOExcepti
             throw new IOException("Self verification failed");
         }
 
-        String url = NetworkUtils.withQuery(Metadata.UPDATE_URL, mapOf(
+        String url = NetworkUtils.withQuery(Metadata.HMCL_UPDATE_URL, mapOf(
                 pair("version", Metadata.VERSION),
                 pair("channel", channel.channelName)));
 

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/hmcl/UpdateHandler.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.upgrade;
+package org.jackhuang.hmcl.upgrade.hmcl;
 
 import com.google.gson.Gson;
 import com.google.gson.JsonParseException;

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -23,8 +23,8 @@
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.countly.CrashReport;
 import org.jackhuang.hmcl.ui.CrashWindow;
-import org.jackhuang.hmcl.upgrade.IntegrityChecker;
-import org.jackhuang.hmcl.upgrade.UpdateChecker;
+import org.jackhuang.hmcl.upgrade.hmcl.IntegrityChecker;
+import org.jackhuang.hmcl.upgrade.hmcl.UpdateChecker;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 
 import java.io.IOException;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -293,7 +293,7 @@ public static boolean isPurePatched(Version version) {
     public static Version unique(Version version) {
         List<Library> libraries = new ArrayList<>();
 
-        SimpleMultimap<String, Integer> multimap = new SimpleMultimap<String, Integer>(HashMap::new, ArrayList::new);
+        SimpleMultimap<String, Integer, List<Integer>> multimap = new SimpleMultimap<>(HashMap::new, ArrayList::new);
 
         for (Library library : version.getLibraries()) {
             String id = library.getGroupId() + ":" + library.getArtifactId();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/VersionList.java
Patch:
@@ -37,7 +37,7 @@ public abstract class VersionList<T extends RemoteVersion> {
      * key: game version.
      * values: corresponding remote versions.
      */
-    protected final SimpleMultimap<String, T> versions = new SimpleMultimap<String, T>(HashMap::new, TreeSet::new);
+    protected final SimpleMultimap<String, T, TreeSet<T>> versions = new SimpleMultimap<>(HashMap::new, TreeSet::new);
 
     /**
      * True if the version list has been loaded.

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventManager.java
Patch:
@@ -30,7 +30,7 @@
  */
 public final class EventManager<T extends Event> {
 
-    private final SimpleMultimap<EventPriority, Consumer<T>> handlers
+    private final SimpleMultimap<EventPriority, Consumer<T>, CopyOnWriteArraySet<Consumer<T>>> handlers
             = new SimpleMultimap<>(() -> new EnumMap<>(EventPriority.class), CopyOnWriteArraySet::new);
 
     public Consumer<T> registerWeak(Consumer<T> consumer) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/Datapack.java
Patch:
@@ -23,6 +23,7 @@
 import javafx.beans.property.SimpleBooleanProperty;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
+import org.jackhuang.hmcl.mod.modinfo.PackMcMeta;
 import org.jackhuang.hmcl.util.Logging;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.gson.JsonUtils;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/HttpRequest.java
Patch:
@@ -141,7 +141,7 @@ public String getString() throws IOException {
             return getStringWithRetry(() -> {
                 HttpURLConnection con = createConnection();
                 con = resolveConnection(con);
-                return IOUtils.readFullyAsString(con.getInputStream());
+                return IOUtils.readFullyAsString("gzip".equals(con.getContentEncoding()) ? IOUtils.wrapFromGZip(con.getInputStream()) : con.getInputStream());
             }, retryTimes);
         }
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LogExporter.java
Patch:
@@ -94,7 +94,7 @@ private static void processLogs(Path directory, String fileExtension, String log
                 if (Files.isRegularFile(file)) {
                     FileTime time = Files.readAttributes(file, BasicFileAttributes.class).lastModifiedTime();
                     if (time.toMillis() >= processStartTime) {
-                        String crashLog = Logging.filterForbiddenToken(FileUtils.readText(file));
+                        String crashLog = Logging.filterForbiddenToken(FileUtils.readText(file, OperatingSystem.NATIVE_CHARSET));
                         zipper.putTextFile(crashLog, file.getFileName().toString());
                     }
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -188,7 +188,7 @@ public void checkUpdates() {
                             return null;
                         })
                         .whenComplete(Schedulers.javafx(), (result, exception) -> {
-                            if (exception != null) {
+                            if (exception != null || result == null) {
                                 Controllers.dialog("Failed to check updates", "failed", MessageDialogPane.MessageType.ERROR);
                             } else if (result.isEmpty()) {
                                 Controllers.dialog(i18n("mods.check_updates.empty"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -252,7 +252,7 @@ public static class InstallerItemSkin extends SkinBase<InstallerItem> {
             pane.getChildren().add(buttonsContainer);
 
             JFXButton closeButton = new JFXButton();
-            closeButton.setGraphic(SVG.close(Theme.blackFillBinding(), -1, -1));
+            closeButton.setGraphic(SVG.CLOSE.createIcon(Theme.blackFill(), -1, -1));
             closeButton.getStyleClass().add("toggle-icon4");
             closeButton.visibleProperty().bind(control.removable);
             closeButton.managedProperty().bind(closeButton.visibleProperty());
@@ -261,8 +261,8 @@ public static class InstallerItemSkin extends SkinBase<InstallerItem> {
 
             JFXButton arrowButton = new JFXButton();
             arrowButton.graphicProperty().bind(Bindings.createObjectBinding(() -> control.upgradable.get()
-                            ? SVG.update(Theme.blackFillBinding(), -1, -1)
-                            : SVG.arrowRight(Theme.blackFillBinding(), -1, -1),
+                            ? SVG.UPDATE.createIcon(Theme.blackFill(), -1, -1)
+                            : SVG.ARROW_RIGHT.createIcon(Theme.blackFill(), -1, -1),
                     control.upgradable));
             arrowButton.getStyleClass().add("toggle-icon4");
             arrowButton.visibleProperty().bind(Bindings.createBooleanBinding(

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ListPageSkin.java
Patch:
@@ -69,15 +69,15 @@ public ListPageSkin(ListPage<?> skinnable) {
                 FXUtils.setLimitHeight(btnAdd, 40);
                 btnAdd.getStyleClass().add("jfx-button-raised-round");
                 btnAdd.setButtonType(JFXButton.ButtonType.RAISED);
-                btnAdd.setGraphic(SVG.plus(Theme.whiteFillBinding(), -1, -1));
+                btnAdd.setGraphic(SVG.PLUS.createIcon(Theme.whiteFill(), -1, -1));
                 btnAdd.setOnMouseClicked(e -> skinnable.add());
 
                 JFXButton btnRefresh = new JFXButton();
                 FXUtils.setLimitWidth(btnRefresh, 40);
                 FXUtils.setLimitHeight(btnRefresh, 40);
                 btnRefresh.getStyleClass().add("jfx-button-raised-round");
                 btnRefresh.setButtonType(JFXButton.ButtonType.RAISED);
-                btnRefresh.setGraphic(SVG.refresh(Theme.whiteFillBinding(), -1, -1));
+                btnRefresh.setGraphic(SVG.REFRESH.createIcon(Theme.whiteFill(), -1, -1));
                 btnRefresh.setOnMouseClicked(e -> skinnable.refresh());
 
                 vBox.getChildren().setAll(btnAdd);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -478,7 +478,7 @@ public AccountDetailsInputPane(AccountFactory<?> factory, Runnable onAction) {
                 linksContainer.setMinWidth(USE_PREF_SIZE);
 
                 JFXButton btnAddServer = new JFXButton();
-                btnAddServer.setGraphic(SVG.plus(Theme.blackFillBinding(), 20, 20));
+                btnAddServer.setGraphic(SVG.PLUS.createIcon(Theme.blackFill(), 20, 20));
                 btnAddServer.getStyleClass().add("toggle-icon4");
                 btnAddServer.setOnAction(e -> {
                     Controllers.dialog(new AddAuthlibInjectorServerPane());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ComponentListCell.java
Patch:
@@ -85,7 +85,7 @@ private void updateLayout() {
 
             VBox groupNode = new VBox();
 
-            Node expandIcon = SVG.expand(Theme.blackFillBinding(), 20, 20);
+            Node expandIcon = SVG.EXPAND.createIcon(Theme.blackFill(), 20, 20);
             JFXButton expandButton = new JFXButton();
             expandButton.setGraphic(expandIcon);
             expandButton.getStyleClass().add("options-list-item-expand-button");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/FileItem.java
Patch:
@@ -58,7 +58,7 @@ public FileItem() {
         setLeft(left);
 
         JFXButton right = new JFXButton();
-        right.setGraphic(SVG.pencil(Theme.blackFillBinding(), 15, 15));
+        right.setGraphic(SVG.PENCIL.createIcon(Theme.blackFill(), 15, 15));
         right.getStyleClass().add("toggle-icon4");
         right.setOnMouseClicked(e -> onExplore());
         FXUtils.installFastTooltip(right, i18n("button.edit"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/FileSelector.java
Patch:
@@ -81,7 +81,7 @@ public FileSelector() {
         FXUtils.bindString(customField, valueProperty());
 
         JFXButton selectButton = new JFXButton();
-        selectButton.setGraphic(SVG.folderOpen(Theme.blackFillBinding(), 15, 15));
+        selectButton.setGraphic(SVG.FOLDER_OPEN.createIcon(Theme.blackFill(), 15, 15));
         selectButton.setOnAction(e -> {
             if (directory) {
                 DirectoryChooser chooser = new DirectoryChooser();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/IconedTwoLineListItem.java
Patch:
@@ -32,7 +32,7 @@ public class IconedTwoLineListItem extends HBox {
     private final Lazy<JFXButton> externalLinkButton = new Lazy<>(() -> {
         JFXButton button = new JFXButton();
         button.getStyleClass().add("toggle-icon4");
-        button.setGraphic(SVG.openInNew(Theme.blackFillBinding(), -1, -1));
+        button.setGraphic(SVG.OPEN_IN_NEW.createIcon(Theme.blackFill(), -1, -1));
         button.setOnAction(e -> FXUtils.openLink(externalLink.get()));
         return button;
     });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ImagePickerItem.java
Patch:
@@ -54,12 +54,12 @@ public ImagePickerItem() {
         imageView.setPreserveRatio(true);
 
         JFXButton selectButton = new JFXButton();
-        selectButton.setGraphic(SVG.pencil(Theme.blackFillBinding(), 20, 20));
+        selectButton.setGraphic(SVG.PENCIL.createIcon(Theme.blackFill(), 20, 20));
         selectButton.onMouseClickedProperty().bind(onSelectButtonClicked);
         selectButton.getStyleClass().add("toggle-icon4");
 
         JFXButton deleteButton = new JFXButton();
-        deleteButton.setGraphic(SVG.close(Theme.blackFillBinding(), 20, 20));
+        deleteButton.setGraphic(SVG.CLOSE.createIcon(Theme.blackFill(), 20, 20));
         deleteButton.onMouseClickedProperty().bind(onDeleteButtonClicked);
         deleteButton.getStyleClass().add("toggle-icon4");
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/JFXHyperlink.java
Patch:
@@ -27,13 +27,13 @@ public class JFXHyperlink extends Hyperlink {
     public JFXHyperlink() {
         super();
 
-        setGraphic(SVG.launchOutline(Theme.blackFillBinding(), 16, 16));
+        setGraphic(SVG.LAUNCH_OUTLINE.createIcon(Theme.blackFill(), 16, 16));
     }
 
     public JFXHyperlink(String text) {
         super(text);
 
-        setGraphic(SVG.launchOutline(Theme.blackFillBinding(), 16, 16));
+        setGraphic(SVG.LAUNCH_OUTLINE.createIcon(Theme.blackFill(), 16, 16));
     }
 
     public void setExternalLink(String externalLink) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MenuUpDownButton.java
Patch:
@@ -81,8 +81,8 @@ protected MenuUpDownButtonSkin(MenuUpDownButton control) {
             label.setStyle("-fx-text-fill: black;");
             label.textProperty().bind(control.text);
 
-            Node up = SVG.menuUp(Theme.blackFillBinding(), 16, 16);
-            Node down = SVG.menuDown(Theme.blackFillBinding(), 16, 16);
+            Node up = SVG.MENU_UP.createIcon(Theme.blackFill(), 16, 16);
+            Node down = SVG.MENU_DOWN.createIcon(Theme.blackFill(), 16, 16);
 
             JFXButton button = new JFXButton();
             button.setGraphic(content);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackSelectionPage.java
Patch:
@@ -98,7 +98,7 @@ private JFXButton createButton(String type, Runnable action) {
         graphic.setLeft(new TwoLineListItem(i18n("modpack.choose." + type), i18n("modpack.choose." + type + ".detail")));
 
         SVGPath arrow = new SVGPath();
-        arrow.setContent(SVG.ARROW_RIGHT);
+        arrow.setContent(SVG.ARROW_RIGHT.getPath());
         BorderPane.setAlignment(arrow, Pos.CENTER);
         graphic.setRight(arrow);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -177,7 +177,7 @@ public VersionsPage(Navigation navigation, String title, String gameVersion, Dow
         chkSnapshot.selectedProperty().addListener(listener);
         chkOld.selectedProperty().addListener(listener);
 
-        btnRefresh.setGraphic(wrap(SVG.refresh(Theme.blackFillBinding(), -1, -1)));
+        btnRefresh.setGraphic(wrap(SVG.REFRESH.createIcon(Theme.blackFill(), -1, -1)));
 
         Holder<RemoteVersionListCell> lastCell = new Holder<>();
         EnumMap<VersionIconType, Image> icons = new EnumMap<>(VersionIconType.class);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackTypeSelectionPage.java
Patch:
@@ -72,7 +72,7 @@ private JFXButton createButton(String type, ModpackExportInfo.Options option) {
         graphic.setLeft(new TwoLineListItem(i18n("modpack.type." + type), i18n("modpack.type." + type + ".export")));
 
         SVGPath arrow = new SVGPath();
-        arrow.setContent(SVG.ARROW_RIGHT);
+        arrow.setContent(SVG.ARROW_RIGHT.getPath());
         BorderPane.setAlignment(arrow, Pos.CENTER);
         graphic.setRight(arrow);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/MainPage.java
Patch:
@@ -143,7 +143,7 @@ public final class MainPage extends StackPane implements DecoratorPage {
             StackPane.setMargin(hBox, new Insets(9, 12, 9, 16));
             {
                 Label lblIcon = new Label();
-                lblIcon.setGraphic(SVG.update(Theme.whiteFillBinding(), 20, 20));
+                lblIcon.setGraphic(SVG.UPDATE.createIcon(Theme.whiteFill(), 20, 20));
 
                 TwoLineListItem prompt = new TwoLineListItem();
                 prompt.setSubtitle(i18n("update.bubble.subtitle"));
@@ -155,7 +155,7 @@ public final class MainPage extends StackPane implements DecoratorPage {
             }
 
             JFXButton closeUpdateButton = new JFXButton();
-            closeUpdateButton.setGraphic(SVG.close(Theme.whiteFillBinding(), 10, 10));
+            closeUpdateButton.setGraphic(SVG.CLOSE.createIcon(Theme.whiteFill(), 10, 10));
             StackPane.setAlignment(closeUpdateButton, Pos.TOP_RIGHT);
             closeUpdateButton.getStyleClass().add("toggle-icon-tiny");
             StackPane.setMargin(closeUpdateButton, new Insets(5));
@@ -224,7 +224,7 @@ public final class MainPage extends StackPane implements DecoratorPage {
             menuButton.setOnMouseClicked(e -> onMenu());
             menuButton.setClip(new Rectangle(211, -100, 100, 200));
             StackPane graphic = new StackPane();
-            Node svg = SVG.triangle(Theme.foregroundFillBinding(), 10, 10);
+            Node svg = SVG.TRIANGLE.createIcon(Theme.foregroundFillBinding(), 10, 10);
             StackPane.setAlignment(svg, Pos.CENTER_RIGHT);
             graphic.getChildren().setAll(svg);
             graphic.setTranslateX(12);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/PersonalizationPage.java
Patch:
@@ -202,7 +202,7 @@ public PersonalizationPage() {
 
                         JFXButton clearButton = new JFXButton();
                         clearButton.getStyleClass().add("toggle-icon4");
-                        clearButton.setGraphic(SVG.restore(Theme.blackFillBinding(), -1, -1));
+                        clearButton.setGraphic(SVG.RESTORE.createIcon(Theme.blackFill(), -1, -1));
                         clearButton.setOnAction(e -> config().setLauncherFontFamily(null));
 
                         hBox.getChildren().setAll(cboFont, clearButton);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/SettingsView.java
Patch:
@@ -121,7 +121,7 @@ public SettingsView() {
                         btnUpdate = new JFXButton();
                         btnUpdate.setOnMouseClicked(e -> onUpdate());
                         btnUpdate.getStyleClass().add("toggle-icon4");
-                        btnUpdate.setGraphic(SVG.update(Theme.blackFillBinding(), 20, 20));
+                        btnUpdate.setGraphic(SVG.UPDATE.createIcon(Theme.blackFill(), 20, 20));
 
                         updatePane.setHeaderRight(btnUpdate);
                     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItemSkin.java
Patch:
@@ -51,7 +51,7 @@ public ProfileListItemSkin(ProfileListItem skinnable) {
             getSkinnable().setSelected(true);
         });
 
-        Node left = VersionPage.wrap(SVG::folderOutline);
+        Node left = VersionPage.wrap(SVG.FOLDER_OUTLINE);
         root.setLeft(left);
         BorderPane.setAlignment(left, Pos.CENTER_LEFT);
 
@@ -67,7 +67,7 @@ public ProfileListItemSkin(ProfileListItem skinnable) {
         btnRemove.setOnMouseClicked(e -> skinnable.remove());
         btnRemove.getStyleClass().add("toggle-icon4");
         BorderPane.setAlignment(btnRemove, Pos.CENTER);
-        btnRemove.setGraphic(SVG.close(Theme.blackFillBinding(), 14, 14));
+        btnRemove.setGraphic(SVG.CLOSE.createIcon(Theme.blackFill(), 14, 14));
         right.getChildren().add(btnRemove);
         root.setRight(right);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -175,7 +175,7 @@ private class InstallerListPageSkin extends ToolbarListPageSkin<InstallerListPag
         @Override
         protected List<Node> initializeToolbar(InstallerListPage skinnable) {
             return Collections.singletonList(
-                    createToolbarButton2(i18n("install.installer.install_offline"), SVG::plus, skinnable::installOffline));
+                    createToolbarButton2(i18n("install.installer.install_offline"), SVG.PLUS, skinnable::installOffline));
         }
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionIconDialog.java
Patch:
@@ -92,7 +92,7 @@ private void exploreIcon() {
     }
 
     private Node createCustomIcon() {
-        Node shape = SVG.plusCircleOutline(Theme.blackFillBinding(), 32, 32);
+        Node shape = SVG.PLUS_CIRCLE_OUTLINE.createIcon(Theme.blackFill(), 32, 32);
         shape.setMouseTransparent(true);
         RipplerContainer container = new RipplerContainer(shape);
         FXUtils.setLimitWidth(container, 36);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListPage.java
Patch:
@@ -169,9 +169,9 @@ protected List<Node> initializeToolbar(WorldListPage skinnable) {
             chkShowAll.selectedProperty().bindBidirectional(skinnable.showAllProperty());
 
             return Arrays.asList(chkShowAll,
-                    createToolbarButton2(i18n("button.refresh"), SVG::refresh, skinnable::refresh),
-                    createToolbarButton2(i18n("world.add"), SVG::plus, skinnable::add),
-                    createToolbarButton2(i18n("world.download"), SVG::plus, skinnable::download));
+                    createToolbarButton2(i18n("button.refresh"), SVG.REFRESH, skinnable::refresh),
+                    createToolbarButton2(i18n("world.add"), SVG.PLUS, skinnable::add),
+                    createToolbarButton2(i18n("world.download"), SVG.PLUS, skinnable::download));
         }
     }
 }

File: HMCLCore/src/test/java/org/jackhuang/hmcl/game/CrashReportAnalyzerTest.java
Patch:
@@ -38,7 +38,7 @@ private String loadLog(String path) throws IOException {
         return IOUtils.readFullyAsString(is);
     }
 
-    private CrashReportAnalyzer.Result findResultByRule(List<CrashReportAnalyzer.Result> results, CrashReportAnalyzer.Rule rule) {
+    private CrashReportAnalyzer.Result findResultByRule(Set<CrashReportAnalyzer.Result> results, CrashReportAnalyzer.Rule rule) {
         CrashReportAnalyzer.Result r = results.stream().filter(result -> result.getRule() == rule).findFirst().orElse(null);
         assertNotNull(r);
         return r;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CrashReportAnalyzer.java
Patch:
@@ -101,7 +101,7 @@ public enum Rule {
         UNSATISFIED_LINK_ERROR(Pattern.compile("java.lang.UnsatisfiedLinkError: Failed to locate library: (?<name>.*)"), "name"),
 
         //https://github.com/huanghongxun/HMCL/pull/1813
-        OPTIFINE_IS_NOT_COMPATIBLE_WITH_FORGE(Pattern.compile("(java\\.lang\\.NoSuchMethodError: 'void net\\.minecraft\\.client\\.renderer\\.texture\\.SpriteContents\\.<init>\\(net\\.minecraft\\.resources\\.ResourceLocation, |java\\.lang\\.NoSuchMethodError: 'void net\\.minecraftforge\\.client\\.gui\\.overlay\\.ForgeGui\\.renderSelectedItemName\\(net\\.minecraft\\.client\\.gui\\.GuiGraphics, int\\)'|java.lang.NoSuchMethodError: 'java\\.lang\\.String com\\.mojang\\.blaze3d\\.systems\\.RenderSystem\\.getBackendDescription\\(\\)'|java\\.lang\\.NoSuchMethodError: 'net\\.minecraft\\.network\\.chat\\.FormattedText net\\.minecraft\\.client\\.gui\\.Font\\.ellipsize\\(net\\.minecraft\\.network\\.chat\\.FormattedText, int\\)'|java\\.lang\\.NoSuchMethodError: 'void net\\.minecraft\\.server\\.level\\.DistanceManager\\.(.*?)\\(net\\.minecraft\\.server\\.level\\.TicketType, net\\.minecraft\\.world\\.level\\.ChunkPos, int, java\\.lang\\.Object, boolean\\)'|java\\.lang\\.NoSuchMethodError: 'void net\\.minecraft\\.client\\.renderer\\.block\\.model\\.BakedQuad\\.<init>\\(int\\[\\], int, net\\.minecraft\\.core\\.Direction, net\\.minecraft\\.client\\.renderer\\.texture\\.TextureAtlasSprite, boolean, boolean\\)'|TRANSFORMER/net\\.optifine/net\\.optifine\\.reflect\\.Reflector\\.<clinit>\\(Reflector\\.java)")),
+        OPTIFINE_IS_NOT_COMPATIBLE_WITH_FORGE(Pattern.compile("(java\\.lang\\.NoSuchMethodError: 'java\\.lang\\.Class sun\\.misc\\.Unsafe\\.defineAnonymousClass\\(java\\.lang\\.Class, byte\\[\\], java\\.lang\\.Object\\[\\]\\)'|java\\.lang\\.NoSuchMethodError: 'void net\\.minecraft\\.client\\.renderer\\.texture\\.SpriteContents\\.\\<init\\>\\(net\\.minecraft\\.resources\\.ResourceLocation, |java\\.lang\\.NoSuchMethodError: 'void net\\.minecraftforge\\.client\\.gui\\.overlay\\.ForgeGui\\.renderSelectedItemName\\(net\\.minecraft\\.client\\.gui\\.GuiGraphics, int\\)'|java\\.lang\\.NoSuchMethodError: 'java\\.lang\\.String com\\.mojang\\.blaze3d\\.systems\\.RenderSystem\\.getBackendDescription\\(\\)'|java\\.lang\\.NoSuchMethodError: 'net\\.minecraft\\.network\\.chat\\.FormattedText net\\.minecraft\\.client\\.gui\\.Font\\.ellipsize\\(net\\.minecraft\\.network\\.chat\\.FormattedText, int\\)'|java\\.lang\\.NoSuchMethodError: 'void net\\.minecraft\\.server\\.level\\.DistanceManager\\.(.*?)\\(net\\.minecraft\\.server\\.level\\.TicketType, net\\.minecraft\\.world\\.level\\.ChunkPos, int, java\\.lang\\.Object, boolean\\)'|java\\.lang\\.NoSuchMethodError: 'void net\\.minecraft\\.client\\.renderer\\.block\\.model\\.BakedQuad\\.\\<init\\>\\(int\\[\\], int, net\\.minecraft\\.core\\.Direction, net\\.minecraft\\.client\\.renderer\\.texture\\.TextureAtlasSprite, boolean, boolean\\)'|TRANSFORMER/net\\.optifine/net\\.optifine\\.reflect\\.Reflector\\.\\<clinit\\>\\(Reflector\\.java)")),
         MOD_FILES_ARE_DECOMPRESSED(Pattern.compile("(The directories below appear to be extracted jar files\\. Fix this before you continue|Extracted mod jars found, loading will NOT continue)")),//Mod文件被解压
         OPTIFINE_CAUSES_THE_WORLD_TO_FAIL_TO_LOAD(Pattern.compile("java\\.lang\\.NoSuchMethodError: net\\.minecraft\\.world\\.server\\.ChunkManager$ProxyTicketManager\\.shouldForceTicks\\(J\\)Z")),//OptiFine导致无法加载世界 https://www.minecraftforum.net/forums/support/java-edition-support/3051132-exception-ticking-world
         TOO_MANY_MODS_LEAD_TO_EXCEEDING_THE_ID_LIMIT(Pattern.compile("maximum id range exceeded")),//Mod过多导致超出ID限制

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModUpdatesPage.java
Patch:
@@ -170,7 +170,7 @@ private void exportList() {
             csvTable.write(Files.newOutputStream(path));
 
             FXUtils.showFileInExplorer(path);
-        }).whenComplete(exception -> {
+        }).whenComplete(Schedulers.javafx() ,exception -> {
             if (exception == null) {
                 Controllers.dialog(path.toString(), i18n("message.success"));
             } else {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/InfiniteSizeList.java
Patch:
@@ -91,11 +91,10 @@ public T set(int index, T element) {
             }
 
             T previous = super.get(index);
+            super.set(index, element);
             if (previous != null) { // !null -> !null
-                super.set(index, element);
                 return previous;
             } else { // null -> !null
-                super.set(index, element);
                 if (index >= this.actualSize) {
                     this.actualSize = index + 1;
                 }
@@ -104,8 +103,9 @@ public T set(int index, T element) {
         }
     }
 
+    @SuppressWarnings("unchecked")
     private void allocate0(int index) {
-        super.ensureCapacity(index + 1);
+        this.addAll(Lang.immutableListOf((T[])new Object[index + 1 - super.size()]));
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/DownloadPage.java
Patch:
@@ -127,7 +127,7 @@ public DownloadPage() {
                         item.setTitle(i18n("resourcepack"));
                         item.setLeftGraphic(wrap(SVG::textureBox));
                         item.activeProperty().bind(tab.getSelectionModel().selectedItemProperty().isEqualTo(resourcePackTab));
-                        item.setOnAction(e -> selectTabIfCurseForgeAvailable(resourcePackTab));
+                        item.setOnAction(e -> tab.select(resourcePackTab));
                     })
 //                    .addNavigationDrawerItem(item -> {
 //                        item.setTitle(i18n("download.curseforge.customization"));

File: HMCL/src/main/java/org/jackhuang/hmcl/util/FractureiserDetector.java
Patch:
@@ -43,7 +43,7 @@ public static boolean detect() {
             }
 
             for (Path badPath : badPaths) {
-                if (Files.exists(badPath)) {
+                if (Files.isRegularFile(badPath)) {
                     return true;
                 }
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -337,10 +337,10 @@ public void decompressNatives(File destination) throws NotDecompressingNativesEx
                                 if (ext.equals("sha1") || ext.equals("git"))
                                     return false;
 
-                                if (options.isUseNativeGLFW() && FileUtils.getName(destFile).toLowerCase(Locale.ROOT).contains("glfw")) {
+                                if ((OperatingSystem.CURRENT_OS == OperatingSystem.LINUX || OperatingSystem.CURRENT_OS == OperatingSystem.OSX) && options.isUseNativeGLFW() && FileUtils.getName(destFile).toLowerCase(Locale.ROOT).contains("glfw")) {
                                     return false;
                                 }
-                                if (options.isUseNativeOpenAL() && FileUtils.getName(destFile).toLowerCase(Locale.ROOT).contains("openal")) {
+                                if ((OperatingSystem.CURRENT_OS == OperatingSystem.LINUX || OperatingSystem.CURRENT_OS == OperatingSystem.OSX) && options.isUseNativeOpenAL() && FileUtils.getName(destFile).toLowerCase(Locale.ROOT).contains("openal")) {
                                     return false;
                                 }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModCheckUpdatesTask.java
Patch:
@@ -46,7 +46,7 @@ public ModCheckUpdatesTask(String gameVersion, Collection<LocalModFile> mods) {
                 .collect(Collectors.toList());
 
         setStage("mods.check_updates");
-        getProperties().put("total", dependents.size());
+        getProperties().put("total", dependents.size() * RemoteMod.Type.values().length);
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CrashReportAnalyzer.java
Patch:
@@ -110,7 +110,7 @@ public enum Rule {
         //https://github.com/huanghongxun/HMCL/pull/2038
         MODMIXIN_FAILURE(Pattern.compile("(MixinApplyError|Mixin prepare failed |Mixin apply failed |mixin\\.injection\\.throwables\\.|\\.mixins\\.json\\] FAILED during \\))")),//ModMixin失败
         FORGE_ERROR(Pattern.compile("An exception was thrown, the game will display an error screen and halt\\.(?<reason>(.*)[\\n\\r]*((.*)[\\n\\r]*)+)at "), "reason"),//Forge报错,Forge可能已经提供了错误信息
-        MOD_RESOLUTION0(Pattern.compile("(Multiple entries with same key: |Failure message:)")),//可能是Mod问题
+        MOD_RESOLUTION0(Pattern.compile("(\tMod File:|-- MOD |\tFailure message:)")),
         FORGE_REPEAT_INSTALLATION(Pattern.compile("--launchTarget, fmlclient, --fml.forgeVersion,[\\w\\W]*?--launchTarget, fmlclient, --fml.forgeVersion,[\\w\\W\\n\\r]*?MultipleArgumentsForOptionException: Found multiple arguments for option gameDir, but you asked for only one")),//https://github.com/huanghongxun/HMCL/issues/1880
         OPTIFINE_REPEAT_INSTALLATION(Pattern.compile("ResolutionException: Module optifine reads another module named optifine")),//Optifine 重复安装（及Mod文件夹有，自动安装也有）
         JAVA_VERSION_IS_TOO_HIGH(Pattern.compile("(Unable to make protected final java\\.lang\\.Class java\\.lang\\.ClassLoader\\.defineClass|java\\.lang\\.NoSuchFieldException: ucp|Unsupported class file major version|because module java\\.base does not export|java\\.lang\\.ClassNotFoundException: jdk\\.nashorn\\.api\\.scripting\\.NashornScriptEngineFactory|java\\.lang\\.ClassNotFoundException: java\\.lang\\.invoke\\.LambdaMetafactory)")),//Java版本过高
@@ -135,7 +135,7 @@ public enum Rule {
         // TwilightForest is not compatible with OptiFine on Minecraft 1.16
         TWILIGHT_FOREST_OPTIFINE(Pattern.compile("java\\.lang\\.IllegalArgumentException: (.*) outside of image bounds (.*)")),
         // Jade is not compatible with OptiFine on Minecraft 1.20+
-        JADE_FOREST_OPTIFINE(Pattern.compile("'void net\\.minecraft\\.client\\.renderer\\.block\\.model\\.BakedQuad\\.<init>\\(int\\[\\], int, net\\.minecraft\\.core\\.Direction, net\\.minecraft\\.client\\.renderer\\.texture\\.TextureAtlasSprite, boolean, boolean\\)'"));
+        JADE_FOREST_OPTIFINE(Pattern.compile("Critical injection failure: LVT in net/minecraft/client/renderer/GameRenderer::m_109093_\\(FJZ\\)V has incompatible changes at opcode 760 in callback jade\\.mixins\\.json:GameRendererMixin-\\>@Inject::jade\\$runTick\\(FJZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;IILcom/mojang/blaze3d/platform/Window;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiGraphics;\\)V\\."));
 
         private final Pattern pattern;
         private final String[] groupNames;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -56,7 +56,6 @@
 import java.nio.file.Paths;
 import java.time.LocalDateTime;
 import java.time.format.DateTimeFormatter;
-import java.util.List;
 import java.util.*;
 import java.util.concurrent.CompletableFuture;
 import java.util.logging.Level;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -181,6 +181,8 @@ private void analyzeCrashReport() {
                             segments.add(new Text("\n"));
                             break;
                         case TWILIGHT_FOREST_OPTIFINE:
+                        case PERFORMANT_FOREST_OPTIFINE:
+                        case JADE_FOREST_OPTIFINE:
                             segments.addAll(FXUtils.parseSegment(i18n("game.crash.reason.mod", "OptiFine"), Controllers::onHyperlinkAction));
                             segments.add(new Text("\n"));
                             break;

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -844,6 +844,7 @@ public VersionSetting deserialize(JsonElement json, Type typeOfT, JsonDeserializ
             vs.setHeight(Optional.ofNullable(obj.get("height")).map(JsonElement::getAsJsonPrimitive).map(this::parseJsonPrimitive).orElse(0));
             vs.setJavaDir(Optional.ofNullable(obj.get("javaDir")).map(JsonElement::getAsString).orElse(""));
             vs.setPreLaunchCommand(Optional.ofNullable(obj.get("precalledCommand")).map(JsonElement::getAsString).orElse(""));
+            vs.setPostExitCommand(Optional.ofNullable(obj.get("postExitCommand")).map(JsonElement::getAsString).orElse(""));
             vs.setServerIp(Optional.ofNullable(obj.get("serverIp")).map(JsonElement::getAsString).orElse(""));
             vs.setJava(Optional.ofNullable(obj.get("java")).map(JsonElement::getAsString).orElse(""));
             vs.setWrapper(Optional.ofNullable(obj.get("wrapper")).map(JsonElement::getAsString).orElse(""));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/AdvancedVersionSettingPage.java
Patch:
@@ -217,6 +217,7 @@ void bindProperties() {
         FXUtils.bindString(txtEnvironmentVariables, versionSetting.environmentVariablesProperty());
         FXUtils.bindString(txtWrapper, versionSetting.wrapperProperty());
         FXUtils.bindString(txtPreLaunchCommand, versionSetting.preLaunchCommandProperty());
+        FXUtils.bindString(txtPostExitCommand, versionSetting.postExitCommandProperty());
         FXUtils.bindEnum(cboRenderer, versionSetting.rendererProperty());
         noGameCheckPane.selectedProperty().bindBidirectional(versionSetting.notCheckGameProperty());
         noJVMCheckPane.selectedProperty().bindBidirectional(versionSetting.notCheckJVMProperty());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/DownloadPage.java
Patch:
@@ -89,7 +89,7 @@ public DownloadPage() {
             return page;
         }));
         modTab.setNodeSupplier(loadVersionFor(() -> new ModDownloadListPage((profile, version, file) -> download(profile, version, file, "mods"), true)));
-        resourcePackTab.setNodeSupplier(loadVersionFor(() -> new DownloadListPage(CurseForgeRemoteModRepository.RESOURCE_PACKS, (profile, version, file) -> download(profile, version, file, "resourcepacks"), true)));
+        resourcePackTab.setNodeSupplier(loadVersionFor(() -> new ResourcePackDownloadListPage((profile, version, file) -> download(profile, version, file, "resourcepacks"), true)));
         customizationTab.setNodeSupplier(loadVersionFor(() -> new DownloadListPage(CurseForgeRemoteModRepository.CUSTOMIZATIONS)));
         worldTab.setNodeSupplier(loadVersionFor(() -> new DownloadListPage(CurseForgeRemoteModRepository.WORLDS)));
         tab = new TabHeader(newGameTab, modpackTab, modTab, resourcePackTab, worldTab);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthRemoteModRepository.java
Patch:
@@ -42,6 +42,7 @@
 public final class ModrinthRemoteModRepository implements RemoteModRepository {
     public static final ModrinthRemoteModRepository MODS = new ModrinthRemoteModRepository("mod");
     public static final ModrinthRemoteModRepository MODPACKS = new ModrinthRemoteModRepository("modpack");
+    public static final ModrinthRemoteModRepository RESOURCE_PACKS = new ModrinthRemoteModRepository("resourcepack");
 
     private static final String PREFIX = "https://api.modrinth.com";
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/Constants.java
Patch:
@@ -28,6 +28,6 @@ private Constants() {
     }
 
     public static final String DEFAULT_LIBRARY_URL = "https://libraries.minecraft.net/";
-    public static final String DEFAULT_VERSION_DOWNLOAD_URL = "https://s3.amazonaws.com/Minecraft.Download/versions/";
-    public static final String DEFAULT_INDEX_URL = "https://s3.amazonaws.com/Minecraft.Download/indexes/";
+    public static final String DEFAULT_VERSION_DOWNLOAD_URL = "https://bmclapi2.bangbang93.com/versions/";
+    public static final String DEFAULT_INDEX_URL = "https://launchermeta.mojang.com/mc-staging/assets/legacy/c0fd82e8ce9fbc93119e40d96d5a4e62cfa3f729/";
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -283,6 +283,7 @@ protected Skin(VersionPage control) {
                         new IconedMenuItem(FXUtils.limitingSize(SVG.puzzle(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("folder.mod"), FXUtils.withJFXPopupClosing(() -> control.onBrowse("mods"), browsePopup)),
                         new IconedMenuItem(FXUtils.limitingSize(SVG.gearOutline(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("folder.config"), FXUtils.withJFXPopupClosing(() -> control.onBrowse("config"), browsePopup)),
                         new IconedMenuItem(FXUtils.limitingSize(SVG.texture(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("folder.resourcepacks"), FXUtils.withJFXPopupClosing(() -> control.onBrowse("resourcepacks"), browsePopup)),
+                        new IconedMenuItem(FXUtils.limitingSize(SVG.texture(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("folder.shaderpacks"), FXUtils.withJFXPopupClosing(() -> control.onBrowse("shaderpacks"), browsePopup)),
                         new IconedMenuItem(FXUtils.limitingSize(SVG.monitorScreenshot(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("folder.screenshots"), FXUtils.withJFXPopupClosing(() -> control.onBrowse("screenshots"), browsePopup)),
                         new IconedMenuItem(FXUtils.limitingSize(SVG.earth(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("folder.saves"), FXUtils.withJFXPopupClosing(() -> control.onBrowse("saves"), browsePopup))
                 );

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -65,7 +65,6 @@
 import java.util.stream.Collectors;
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
-import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.ui.FXUtils.newImage;
 import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.util.Logging.LOG;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -413,17 +413,17 @@ private static final class ModItem extends StackPane {
             for (ModLoaderType modLoaderType : dataItem.getLoaders()) {
                 switch (modLoaderType) {
                     case FORGE:
-                        graphicPane.getChildren().setAll(SVG.releaseCircleOutline(Theme.blackFillBinding(), 24, 24));
                         content.getTags().add(i18n("install.installer.forge"));
                         break;
                     case FABRIC:
-                        graphicPane.getChildren().setAll(SVG.releaseCircleOutline(Theme.blackFillBinding(), 24, 24));
                         content.getTags().add(i18n("install.installer.fabric"));
                         break;
                     case LITE_LOADER:
-                        graphicPane.getChildren().setAll(SVG.releaseCircleOutline(Theme.blackFillBinding(), 24, 24));
                         content.getTags().add(i18n("install.installer.liteloader"));
                         break;
+                    case QUILT:
+                        content.getTags().add(i18n("install.installer.quilt"));
+                        break;
                 }
             }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/GameVersion.java
Patch:
@@ -49,7 +49,7 @@ private GameVersion() {
     private static Optional<String> getVersionFromJson(InputStream versionJson) {
         try {
             Map<?, ?> version = JsonUtils.fromNonNullJsonFully(versionJson, Map.class);
-            return tryCast(version.get("name"), String.class);
+            return tryCast(version.get("id"), String.class);
         } catch (IOException | JsonParseException e) {
             LOG.log(Level.WARNING, "Failed to parse version.json", e);
             return Optional.empty();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ModLoaderType.java
Patch:
@@ -21,6 +21,7 @@ public enum ModLoaderType {
     UNKNOWN,
     FORGE,
     FABRIC,
+    QUILT,
     LITE_LOADER,
     PACK
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseAddon.java
Patch:
@@ -562,6 +562,8 @@ public RemoteMod.Version toVersion() {
                 modLoaderType = ModLoaderType.FORGE;
             } else if (gameVersions.contains("Fabric")) {
                 modLoaderType = ModLoaderType.FABRIC;
+            } else if (gameVersions.contains("Quilt")) {
+                modLoaderType = ModLoaderType.QUILT;
             } else {
                 modLoaderType = ModLoaderType.UNKNOWN;
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthRemoteModRepository.java
Patch:
@@ -497,6 +497,7 @@ public Optional<RemoteMod.Version> toVersion() {
                     loaders.stream().flatMap(loader -> {
                         if ("fabric".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.FABRIC);
                         else if ("forge".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.FORGE);
+                        else if ("quilt".equalsIgnoreCase(loader)) return Stream.of(ModLoaderType.QUILT);
                         else return Stream.empty();
                     }).collect(Collectors.toList())
             ));

File: HMCLCore/src/test/java/org/jackhuang/hmcl/util/TaskTest.java
Patch:
@@ -80,7 +80,7 @@ public void testWithCompose() {
     public void testThenAccept() {
         AtomicBoolean flag = new AtomicBoolean();
         boolean result = Task.supplyAsync(JavaVersion::fromCurrentEnvironment)
-                .thenAcceptAsync(Schedulers.javafx(), javaVersion -> {
+                .thenAcceptAsync(Schedulers.io(), javaVersion -> {
                     flag.set(true);
                     assertEquals(javaVersion, JavaVersion.fromCurrentEnvironment());
                 })

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -186,7 +186,7 @@ public Version readVersionJson(File file) throws IOException, JsonParseException
         } catch (JsonParseException ignored) {
         }
 
-        LOG.warning("Cannot parse version json + " + file.toString() + "\n" + jsonText);
+        LOG.warning("Cannot parse version json: " + file.toString() + "\n" + jsonText);
         throw new JsonParseException("Version json incorrect");
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/AuthInfo.java
Patch:
@@ -30,6 +30,7 @@
  */
 @Immutable
 public class AuthInfo implements AutoCloseable {
+    public static final String USER_TYPE_MSA = "msa";
     public static final String USER_TYPE_MOJANG = "mojang";
     public static final String USER_TYPE_LEGACY = "legacy";
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/microsoft/MicrosoftSession.java
Patch:
@@ -110,7 +110,7 @@ public Map<Object, Object> toStorage() {
     public AuthInfo toAuthInfo() {
         requireNonNull(profile);
 
-        return new AuthInfo(profile.getName(), profile.getId(), accessToken, AuthInfo.USER_TYPE_MOJANG, "{}");
+        return new AuthInfo(profile.getName(), profile.getId(), accessToken, AuthInfo.USER_TYPE_MSA, "{}");
     }
 
     public static class User {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccount.java
Patch:
@@ -114,7 +114,7 @@ protected boolean loadAuthlibInjector(Skin skin) {
     @Override
     public AuthInfo logIn() throws AuthenticationException {
         // Using "legacy" user type here because "mojang" user type may cause "invalid session token" or "disconnected" when connecting to a game server.
-        AuthInfo authInfo = new AuthInfo(username, uuid, UUIDTypeAdapter.fromUUID(UUID.randomUUID()), AuthInfo.USER_TYPE_LEGACY, "{}");
+        AuthInfo authInfo = new AuthInfo(username, uuid, UUIDTypeAdapter.fromUUID(UUID.randomUUID()), AuthInfo.USER_TYPE_MSA, "{}");
 
         if (loadAuthlibInjector(skin)) {
             CompletableFuture<AuthlibInjectorArtifactInfo> artifactTask = CompletableFuture.supplyAsync(() -> {
@@ -154,7 +154,7 @@ private class OfflineAuthInfo extends AuthInfo {
         private YggdrasilServer server;
 
         public OfflineAuthInfo(AuthInfo authInfo, AuthlibInjectorArtifactInfo artifact) {
-            super(authInfo.getUsername(), authInfo.getUUID(), authInfo.getAccessToken(), USER_TYPE_LEGACY, authInfo.getUserProperties());
+            super(authInfo.getUsername(), authInfo.getUUID(), authInfo.getAccessToken(), USER_TYPE_MSA, authInfo.getUserProperties());
 
             this.artifact = artifact;
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilSession.java
Patch:
@@ -105,7 +105,7 @@ public AuthInfo toAuthInfo() {
         if (selectedProfile == null)
             throw new IllegalStateException("No character is selected");
 
-        return new AuthInfo(selectedProfile.getName(), selectedProfile.getId(), accessToken, AuthInfo.USER_TYPE_MOJANG,
+        return new AuthInfo(selectedProfile.getName(), selectedProfile.getId(), accessToken, AuthInfo.USER_TYPE_MSA,
                 Optional.ofNullable(userProperties)
                         .map(properties -> properties.entrySet().stream()
                                 .collect(Collectors.toMap(Map.Entry::getKey,

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -207,7 +207,7 @@ private Command generateCommandLine(File nativeFolder) throws IOException {
             res.addDefault("-Dfml.ignorePatchDiscrepancies=", "true");
         }
 
-        List<String> classpath = repository.getClasspath(version);
+        Set<String> classpath = repository.getClasspath(version);
 
         File jar = repository.getVersionJar(version);
         if (!jar.exists() || !jar.isFile())

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -222,7 +222,7 @@ public static void main(String[] args) {
             LOG.info("Java Version: " + System.getProperty("java.version") + ", " + System.getProperty("java.vendor"));
             LOG.info("Java VM Version: " + System.getProperty("java.vm.name") + " (" + System.getProperty("java.vm.info") + "), " + System.getProperty("java.vm.vendor"));
             LOG.info("Java Home: " + System.getProperty("java.home"));
-            LOG.info("Current Directory: " + Paths.get("").toAbsolutePath());
+            LOG.info("Current Directory: " + System.getProperty("user.dir"));
             LOG.info("HMCL Directory: " + Metadata.HMCL_DIRECTORY);
             LOG.info("HMCL Jar Path: " + JarUtils.thisJar().map(it -> it.toAbsolutePath().toString()).orElse("Not Found"));
             LOG.info("Memory: " + Runtime.getRuntime().maxMemory() / 1024 / 1024 + "MB");
@@ -231,6 +231,8 @@ public static void main(String[] args) {
                     .findAny()
                     .map(bean -> bean.getUsage().getUsed() / 1024 / 1024 + "MB")
                     .orElse("Unknown"));
+            if (OperatingSystem.CURRENT_OS == OperatingSystem.LINUX)
+                LOG.info("XDG Session Type: " + System.getenv("XDG_SESSION_TYPE"));
 
             launch(Launcher.class, args);
         } catch (Throwable e) { // Fucking JavaFX will suppress the exception and will break our crash reporter.

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskExecutorDialogPane.java
Patch:
@@ -88,7 +88,9 @@ public TaskExecutorDialogPane(@NotNull TaskCancellationAction cancel) {
 
         btnCancel.setOnAction(e -> {
             Optional.ofNullable(executor).ifPresent(TaskExecutor::cancel);
-            onCancel.getCancellationAction().accept(this);
+            if (onCancel.getCancellationAction() != null) {
+                onCancel.getCancellationAction().accept(this);
+            }
         });
 
         speedEventHandler = speedEvent -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/ClassicAccountLoginDialog.java
Patch:
@@ -36,7 +36,6 @@
 import org.jackhuang.hmcl.setting.Accounts;
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.task.Task;
-import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.construct.DialogCloseEvent;
 import org.jackhuang.hmcl.ui.construct.JFXHyperlink;
 import org.jackhuang.hmcl.ui.construct.RequiredValidator;
@@ -91,10 +90,10 @@ public ClassicAccountLoginDialog(ClassicAccount oldAccount, Consumer<AuthInfo> s
                 body.getChildren().add(linkPane);
 
                 JFXHyperlink migrationLink = new JFXHyperlink(i18n("account.methods.yggdrasil.migration"));
-                migrationLink.setOnAction(e -> FXUtils.openLink(YggdrasilService.PROFILE_URL));
+                migrationLink.setExternalLink(YggdrasilService.PROFILE_URL);
 
                 JFXHyperlink migrationHowLink = new JFXHyperlink(i18n("account.methods.yggdrasil.migration.how"));
-                migrationHowLink.setOnAction(e -> FXUtils.openLink(YggdrasilService.MIGRATION_FAQ_URL));
+                migrationHowLink.setExternalLink(YggdrasilService.MIGRATION_FAQ_URL);
 
                 linkPane.getChildren().setAll(migrationLink, migrationHowLink);
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -157,7 +157,7 @@ protected Skin(RootPage control) {
             multiplayerItem.setActionButtonVisible(false);
             multiplayerItem.setTitle(i18n("multiplayer"));
             JFXHyperlink link = new JFXHyperlink(i18n("multiplayer.hint.details"));
-            link.setOnAction(e -> FXUtils.openLink("https://hmcl.huangyuhui.net/api/redirect/multiplayer-migrate"));
+            link.setExternalLink("https://hmcl.huangyuhui.net/api/redirect/multiplayer-migrate");
             multiplayerItem.setOnAction(e -> Controllers.dialog(
                     new MessageDialogPane.Builder(i18n("multiplayer.hint"), null, MessageDialogPane.MessageType.INFO)
                             .addAction(link)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -260,18 +260,18 @@ protected ModDownloadPageSkin(DownloadPage control) {
 
                 if (getSkinnable().mod != null) {
                     JFXHyperlink openMcmodButton = new JFXHyperlink(i18n("mods.mcmod"));
-                    openMcmodButton.setOnAction(e -> FXUtils.openLink(getSkinnable().translations.getMcmodUrl(getSkinnable().mod)));
+                    openMcmodButton.setExternalLink(getSkinnable().translations.getMcmodUrl(getSkinnable().mod));
                     descriptionPane.getChildren().add(openMcmodButton);
 
                     if (StringUtils.isNotBlank(getSkinnable().mod.getMcbbs())) {
                         JFXHyperlink openMcbbsButton = new JFXHyperlink(i18n("mods.mcbbs"));
-                        openMcbbsButton.setOnAction(e -> FXUtils.openLink(ModManager.getMcbbsUrl(getSkinnable().mod.getMcbbs())));
+                        openMcbbsButton.setExternalLink(ModManager.getMcbbsUrl(getSkinnable().mod.getMcbbs()));
                         descriptionPane.getChildren().add(openMcbbsButton);
                     }
                 }
 
                 JFXHyperlink openUrlButton = new JFXHyperlink(control.page.getLocalizedOfficialPage());
-                openUrlButton.setOnAction(e -> FXUtils.openLink(getSkinnable().addon.getPageUrl()));
+                openUrlButton.setExternalLink(getSkinnable().addon.getPageUrl());
                 descriptionPane.getChildren().add(openUrlButton);
             }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameItem.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.versions;
 
+import com.google.gson.JsonParseException;
 import javafx.application.Platform;
 import javafx.beans.property.ObjectProperty;
 import javafx.beans.property.SimpleObjectProperty;
@@ -82,8 +83,8 @@ public GameItem(Profile profile, String id) {
                 ModpackConfiguration<?> config = profile.getRepository().readModpackConfiguration(version);
                 if (config == null) return;
                 tag.set(config.getVersion());
-            } catch (IOException e) {
-                LOG.log(Level.WARNING, "Failed to read modpack configuration from ", e);
+            } catch (IOException | JsonParseException e) {
+                LOG.log(Level.WARNING, "Failed to read modpack configuration from " + version, e);
             }
         }, Platform::runLater)
                 .exceptionally(handleUncaught);

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -182,7 +182,7 @@ private static void loadGlobalAccountStorages() {
                 globalAccountStorages.setAll((List<Map<Object, Object>>)
                         Config.CONFIG_GSON.fromJson(reader, new TypeToken<List<Map<Object, Object>>>() {
                         }.getType()));
-            } catch (IOException e) {
+            } catch (Throwable e) {
                 LOG.log(Level.WARNING, "Failed to load global accounts", e);
             }
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/CommandBuilder.java
Patch:
@@ -297,7 +297,7 @@ private static String escape(String str, char... escapeChars) {
     }
 
     public static String toBatchStringLiteral(String s) {
-        return containsEscape(s, " \t\"^&<>|") ? '"' + escape(s, '\\', '"') : s;
+        return containsEscape(s, " \t\"^&<>|") ? '"' + escape(s, '\\', '"') + '"' : s;
     }
 
     public static String toShellStringLiteral(String s) {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -325,7 +325,7 @@ static void init() {
             Schedulers.io().execute(() -> {
                 try {
                     finalSelected.logIn();
-                } catch (AuthenticationException e) {
+                } catch (Throwable e) {
                     LOG.log(Level.WARNING, "Failed to log " + finalSelected + " in", e);
                 }
             });

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/versioning/VersionRange.java
Patch:
@@ -66,10 +66,12 @@ public boolean isAll() {
     }
 
     public boolean contains(String versionNumber) {
+        if (versionNumber == null) return false;
         return contains(VersionNumber.asVersion(versionNumber));
     }
 
     public boolean contains(VersionNumber versionNumber) {
+        if (versionNumber == null) return false;
         if (isEmpty()) return false;
         if (isAll()) return true;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -32,7 +32,6 @@
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.Priority;
 import javafx.scene.layout.StackPane;
-import org.apache.commons.lang3.mutable.MutableObject;
 import org.jackhuang.hmcl.mod.LocalModFile;
 import org.jackhuang.hmcl.mod.ModManager;
 import org.jackhuang.hmcl.setting.Theme;
@@ -44,6 +43,7 @@
 import org.jackhuang.hmcl.ui.animation.ContainerAnimations;
 import org.jackhuang.hmcl.ui.animation.TransitionPane;
 import org.jackhuang.hmcl.ui.construct.*;
+import org.jackhuang.hmcl.util.Holder;
 import org.jackhuang.hmcl.util.Lazy;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.i18n.I18n;
@@ -164,7 +164,7 @@ class ModListPageSkin extends SkinBase<ModListPage> {
             center.getStyleClass().add("large-spinner-pane");
             center.loadingProperty().bind(skinnable.loadingProperty());
 
-            MutableObject<Object> lastCell = new MutableObject<>();
+            Holder<Object> lastCell = new Holder<>();
             listView.setCellFactory(x -> new ModInfoListCell(listView, lastCell));
             listView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);
             Bindings.bindContent(listView.getItems(), skinnable.getItems());
@@ -371,7 +371,7 @@ final class ModInfoListCell extends MDListCell<ModInfoObject> {
         JFXButton revealButton = new JFXButton();
         BooleanProperty booleanProperty;
 
-        ModInfoListCell(JFXListView<ModInfoObject> listView, MutableObject<Object> lastCell) {
+        ModInfoListCell(JFXListView<ModInfoObject> listView, Holder<Object> lastCell) {
             super(listView, lastCell);
 
             HBox container = new HBox(8);

File: HMCLCore/src/test/java/org/jackhuang/hmcl/util/versioning/VersionNumberTest.java
Patch:
@@ -15,9 +15,8 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
-package org.jackhuang.hmcl.util;
+package org.jackhuang.hmcl.util.versioning;
 
-import org.jackhuang.hmcl.util.versioning.VersionNumber;
 import org.junit.jupiter.api.Test;
 
 import java.util.Arrays;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -495,6 +495,9 @@ private Map<String, String> getEnvVars() {
         if (analyzer.has(LibraryAnalyzer.LibraryType.OPTIFINE)) {
             env.put("INST_OPTIFINE", "1");
         }
+        if (analyzer.has(LibraryAnalyzer.LibraryType.QUILT)) {
+            env.put("INST_QUILT", "1");
+        }
         return env;
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackExportTask.java
Patch:
@@ -97,6 +97,8 @@ public void execute() throws Exception {
                     addons.add(new McbbsModpackManifest.Addon(OPTIFINE.getPatchId(), optifineVersion)));
             analyzer.getVersion(FABRIC).ifPresent(fabricVersion ->
                     addons.add(new McbbsModpackManifest.Addon(FABRIC.getPatchId(), fabricVersion)));
+            analyzer.getVersion(QUILT).ifPresent(quiltVersion ->
+                    addons.add(new McbbsModpackManifest.Addon(QUILT.getPatchId(), quiltVersion)));
 
             List<Library> libraries = new ArrayList<>();
             // TODO libraries

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -58,8 +58,6 @@ public static void main(String[] args) {
         System.setProperty("java.net.useSystemProxies", "true");
         System.setProperty("javafx.autoproxy.disable", "true");
         System.getProperties().putIfAbsent("http.agent", "HMCL/" + Metadata.VERSION);
-        // Fix title bar not displaying in GTK systems
-        System.getProperties().putIfAbsent("jdk.gtk.version", "2");
 
         checkDirectoryPath();
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -275,7 +275,7 @@ public static Node limitingSize(Node node, double width, double height) {
     }
 
     public static void smoothScrolling(ScrollPane scrollPane) {
-        JFXScrollPane.smoothScrolling(scrollPane);
+        ScrollUtils.addSmoothScrolling(scrollPane);
     }
 
     public static void installFastTooltip(Node node, Tooltip tooltip) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ListPageSkin.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui;
 
 import com.jfoenix.controls.JFXButton;
-import com.jfoenix.controls.JFXScrollPane;
 import javafx.beans.binding.Bindings;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
@@ -56,7 +55,7 @@ public ListPageSkin(ListPage<?> skinnable) {
                 Bindings.bindContent(list.getChildren(), skinnable.itemsProperty());
 
                 scrollPane.setContent(content);
-                JFXScrollPane.smoothScrolling(scrollPane);
+                FXUtils.smoothScrolling(scrollPane);
             }
             
             VBox vBox = new VBox();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ToolbarListPageSkin.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui;
 
 import com.jfoenix.controls.JFXButton;
-import com.jfoenix.controls.JFXScrollPane;
 import javafx.beans.binding.Bindings;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
@@ -69,7 +68,7 @@ public ToolbarListPageSkin(T skinnable) {
             Bindings.bindContent(content.getChildren(), skinnable.itemsProperty());
 
             scrollPane.setContent(content);
-            JFXScrollPane.smoothScrolling(scrollPane);
+            FXUtils.smoothScrolling(scrollPane);
 
             root.getContent().add(scrollPane);
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListPage.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui.account;
 
 import com.jfoenix.controls.JFXButton;
-import com.jfoenix.controls.JFXScrollPane;
 import javafx.beans.binding.Bindings;
 import javafx.beans.property.*;
 import javafx.beans.value.ObservableValue;
@@ -187,7 +186,7 @@ public AccountListPageSkin(AccountListPage skinnable) {
                 Bindings.bindContent(list.getChildren(), skinnable.items);
 
                 scrollPane.setContent(list);
-                JFXScrollPane.smoothScrolling(scrollPane);
+                FXUtils.smoothScrolling(scrollPane);
 
                 setCenter(scrollPane);
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/AboutPage.java
Patch:
@@ -17,13 +17,13 @@
  */
 package org.jackhuang.hmcl.ui.main;
 
-import com.jfoenix.controls.JFXScrollPane;
 import javafx.geometry.Insets;
 import javafx.scene.control.ScrollPane;
 import javafx.scene.image.Image;
 import javafx.scene.layout.StackPane;
 import javafx.scene.layout.VBox;
 import org.jackhuang.hmcl.Metadata;
+import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.construct.ComponentList;
 import org.jackhuang.hmcl.ui.construct.IconedTwoLineListItem;
 
@@ -191,7 +191,7 @@ public AboutPage() {
 
         ScrollPane scrollPane = new ScrollPane(content);
         scrollPane.setFitToWidth(true);
-        JFXScrollPane.smoothScrolling(scrollPane);
+        FXUtils.smoothScrolling(scrollPane);
         getChildren().setAll(scrollPane);
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/DownloadSettingsPage.java
Patch:
@@ -48,7 +48,7 @@ public DownloadSettingsPage() {
         content.setPadding(new Insets(10));
         content.setFillWidth(true);
         ScrollPane scrollPane = new ScrollPane(content);
-        JFXScrollPane.smoothScrolling(scrollPane);
+        FXUtils.smoothScrolling(scrollPane);
         scrollPane.setFitToWidth(true);
         getChildren().setAll(scrollPane);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/FeedbackPage.java
Patch:
@@ -17,11 +17,11 @@
  */
 package org.jackhuang.hmcl.ui.main;
 
-import com.jfoenix.controls.JFXScrollPane;
 import javafx.geometry.Insets;
 import javafx.scene.control.ScrollPane;
 import javafx.scene.image.Image;
 import javafx.scene.layout.VBox;
+import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.construct.ComponentList;
 import org.jackhuang.hmcl.ui.construct.IconedTwoLineListItem;
 import org.jackhuang.hmcl.ui.construct.SpinnerPane;
@@ -37,7 +37,7 @@ public FeedbackPage() {
         content.setFillWidth(true);
         ScrollPane scrollPane = new ScrollPane(content);
         scrollPane.setFitToWidth(true);
-        JFXScrollPane.smoothScrolling(scrollPane);
+        FXUtils.smoothScrolling(scrollPane);
         setContent(scrollPane);
 
         ComponentList community = new ComponentList();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/HelpPage.java
Patch:
@@ -19,13 +19,13 @@
 
 import com.google.gson.annotations.SerializedName;
 import com.google.gson.reflect.TypeToken;
-import com.jfoenix.controls.JFXScrollPane;
 import javafx.geometry.Insets;
 import javafx.scene.control.ScrollPane;
 import javafx.scene.layout.VBox;
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.task.Task;
+import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.construct.ComponentList;
 import org.jackhuang.hmcl.ui.construct.IconedTwoLineListItem;
 import org.jackhuang.hmcl.ui.construct.SpinnerPane;
@@ -47,7 +47,7 @@ public HelpPage() {
         content.setFillWidth(true);
         ScrollPane scrollPane = new ScrollPane(content);
         scrollPane.setFitToWidth(true);
-        JFXScrollPane.smoothScrolling(scrollPane);
+        FXUtils.smoothScrolling(scrollPane);
         setContent(scrollPane);
 
         IconedTwoLineListItem docPane = new IconedTwoLineListItem();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/PersonalizationPage.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui.main;
 
 import com.jfoenix.controls.JFXButton;
-import com.jfoenix.controls.JFXScrollPane;
 import com.jfoenix.controls.JFXTextField;
 import com.jfoenix.effects.JFXDepthManager;
 import javafx.application.Platform;
@@ -56,7 +55,7 @@ public PersonalizationPage() {
         content.setPadding(new Insets(10));
         content.setFillWidth(true);
         ScrollPane scrollPane = new ScrollPane(content);
-        JFXScrollPane.smoothScrolling(scrollPane);
+        FXUtils.smoothScrolling(scrollPane);
         scrollPane.setFitToWidth(true);
         getChildren().setAll(scrollPane);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui.versions;
 
 import com.jfoenix.controls.JFXButton;
-import com.jfoenix.controls.JFXScrollPane;
 import javafx.beans.binding.Bindings;
 import javafx.beans.binding.BooleanBinding;
 import javafx.beans.property.BooleanProperty;
@@ -233,7 +232,7 @@ protected ModDownloadPageSkin(DownloadPage control) {
             pane.getStyleClass().add("gray-background");
             pane.setPadding(new Insets(10));
             ScrollPane scrollPane = new ScrollPane(pane);
-            JFXScrollPane.smoothScrolling(scrollPane);
+            FXUtils.smoothScrolling(scrollPane);
             scrollPane.setFitToWidth(true);
             scrollPane.setFitToHeight(true);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -58,7 +58,6 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.Locale;
-import java.util.concurrent.ThreadPoolExecutor;
 import java.util.function.Predicate;
 import java.util.logging.Level;
 import java.util.regex.Pattern;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -107,7 +107,7 @@ public GameCrashWindow(ManagedProcess managedProcess, ProcessListener.ExitType e
 
         this.feedbackTextFlow.getChildren().addAll(FXUtils.parseSegment(i18n("game.crash.feedback"), Controllers::onHyperlinkAction));
 
-        setScene(new Scene(view, 800, 480));
+        setScene(new Scene(view, 854, 700));
         getScene().getStylesheets().addAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
         setTitle(i18n("game.crash.title"));
         getIcons().add(newImage("/assets/img/icon.png"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -90,7 +90,7 @@ public final class LogWindow extends Stage {
     private boolean stopCheckLogCount = false;
 
     public LogWindow() {
-        setScene(new Scene(impl, 800, 480));
+        setScene(new Scene(impl, 854, 480));
         getScene().getStylesheets().addAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
         setTitle(i18n("logwindow.title"));
         getIcons().add(newImage("/assets/img/icon.png"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModUpdatesPage.java
Patch:
@@ -110,6 +110,7 @@ public ModUpdatesPage(ModManager modManager, List<LocalModFile.ModUpdate> update
         JFXButton nextButton = new JFXButton(i18n("mods.check_updates.update"));
         nextButton.getStyleClass().add("jfx-button-raised");
         nextButton.setButtonType(JFXButton.ButtonType.RAISED);
+        nextButton.setOnAction(e -> updateMods());
 
         JFXButton cancelButton = new JFXButton(i18n("button.cancel"));
         cancelButton.getStyleClass().add("jfx-button-raised");

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -65,6 +65,7 @@ public void start(Stage primaryStage) {
 
         CookieHandler.setDefault(COOKIE_MANAGER);
 
+        LOG.info("JavaFX Version: " + System.getProperty("javafx.runtime.version"));
         try {
             Object pipeline = Class.forName("com.sun.prism.GraphicsPipeline").getMethod("getPipeline").invoke(null);
             LOG.info("Prism pipeline: " + (pipeline == null ? "null" : pipeline.getClass().getName()));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/OfflineAccountSkinPane.java
Patch:
@@ -141,9 +141,9 @@ public OfflineAccountSkinPane(OfflineAccount account) {
                                 return;
                             }
                             canvas.updateSkin(
-                                    result.getSkin() != null ? new Image(result.getSkin().getInputStream()) : getDefaultTexture(),
+                                    result.getSkin() != null ? result.getSkin().getImage() : getDefaultTexture(),
                                     result.getModel() == TextureModel.ALEX,
-                                    result.getCape() != null ? new Image(result.getCape().getInputStream()) : null);
+                                    result.getCape() != null ? result.getCape().getImage() : null);
                         }
                     }).start();
         }, skinItem.selectedDataProperty(), cslApiField.textProperty(), skinSelector.valueProperty(), capeSelector.valueProperty());

File: HMCL/src/main/java/moe/mickey/minecraft/skin/fx/SkinCanvas.java
Patch:
@@ -16,8 +16,8 @@
 
 public class SkinCanvas extends Group {
 
-    public static final Image ALEX = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/skin/alex.png"));
-    public static final Image STEVE = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/skin/steve.png"));
+    public static final Image ALEX = new Image("/assets/img/skin/alex.png");
+    public static final Image STEVE = new Image("/assets/img/skin/steve.png");
 
     public static final SkinCube ALEX_LARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 32F / 64F, 48F / 64F, 0F, true);
     public static final SkinCube ALEX_RARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 40F / 64F, 16F / 64F, 0F, true);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/DownloadSettingsPage.java
Patch:
@@ -214,7 +214,6 @@ public DownloadSettingsPage() {
                         GridPane.setColumnIndex(txtProxyHost, 1);
                         gridPane.getChildren().add(txtProxyHost);
                         FXUtils.bindString(txtProxyHost, config().proxyHostProperty());
-                        txtProxyHost.getValidators().setAll(new NumberValidator(i18n("input.number"), false));
                     }
 
                     {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -327,7 +327,7 @@ public LaunchOptions getLaunchOptions(String version, JavaVersion javaVersion, F
                 .setVersionName(version)
                 .setProfileName(Metadata.TITLE)
                 .setGameArguments(StringUtils.tokenize(vs.getMinecraftArgs()))
-                .setJavaArguments(StringUtils.tokenize(vs.getJavaArgs()))
+                .setOverrideJavaArguments(StringUtils.tokenize(vs.getJavaArgs()))
                 .setMaxMemory(vs.isNoJVMArgs() && vs.isAutoMemory() ? null : (int)(getAllocatedMemory(
                         vs.getMaxMemory() * 1024L * 1024L,
                         OperatingSystem.getPhysicalMemoryStatus().orElse(OperatingSystem.PhysicalMemoryStatus.INVALID).getAvailable(),

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -114,6 +114,8 @@ static List<DependencyDescriptor> readDependencies() {
                 throw new UncheckedIOException(e);
             }
 
+            if (dependencies == null) return null;
+
             try {
                 ClassLoader classLoader = SelfDependencyPatcher.class.getClassLoader();
                 Class.forName("netscape.javascript.JSObject", false, classLoader);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ModAdviser.java
Patch:
@@ -19,6 +19,7 @@
 
 import org.jackhuang.hmcl.util.Lang;
 
+import java.io.File;
 import java.util.List;
 
 /**
@@ -61,7 +62,7 @@ enum ModSuggestion {
             "optionsof.txt" /* OptiFine */,
             "journeymap" /* JourneyMap */,
             "optionsshaders.txt",
-            "mods/VoxelMods");
+            "mods" + File.separator + "VoxelMods");
 
     static ModAdviser.ModSuggestion suggestMod(String fileName, boolean isDirectory) {
         if (match(MODPACK_BLACK_LIST, fileName, isDirectory))
@@ -75,7 +76,7 @@ static ModAdviser.ModSuggestion suggestMod(String fileName, boolean isDirectory)
     static boolean match(List<String> l, String fileName, boolean isDirectory) {
         for (String s : l)
             if (isDirectory) {
-                if (fileName.startsWith(s + "/"))
+                if (fileName.startsWith(s + File.separator))
                     return true;
             } else {
                 if (s.startsWith("regex:")) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/Modpack.java
Patch:
@@ -119,9 +119,8 @@ public Modpack setManifest(ModpackManifest manifest) {
     public static boolean acceptFile(String path, List<String> blackList, List<String> whiteList) {
         if (path.isEmpty())
             return true;
-        for (String s : blackList)
-            if (path.equals(s))
-                return false;
+        if (ModAdviser.match(blackList, path, false))
+            return false;
         if (whiteList == null || whiteList.isEmpty())
             return true;
         for (String s : whiteList)

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/ExecutableHeaderHelper.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.nio.Buffer;
 import java.nio.ByteBuffer;
 import java.nio.channels.FileChannel;
 import java.nio.channels.FileChannel.MapMode;
@@ -75,7 +76,7 @@ private static int detectHeaderLength(ZipFile zip, FileChannel channel) throws I
         suffixLoop: for (String suffix : suffix2header.keySet()) {
             Optional<byte[]> header = readHeader(zip, suffix);
             if (header.isPresent()) {
-                buf.rewind();
+                ((Buffer) buf).rewind();
                 for (byte b : header.get()) {
                     if (!buf.hasRemaining() || b != buf.get()) {
                         continue suffixLoop;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -218,7 +218,7 @@ public static JavaVersion fromCurrentEnvironment() {
     public static final JavaVersion CURRENT_JAVA;
 
     static {
-        Path currentExecutable = getExecutable(Paths.get(System.getProperty("java.home")));
+        Path currentExecutable = getExecutable(Paths.get(System.getProperty("java.home")).toAbsolutePath());
         try {
             currentExecutable = currentExecutable.toRealPath();
         } catch (IOException e) {

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -118,7 +118,7 @@ public void start(Stage primaryStage) {
                     return;
             }
 
-            if (Metadata.HMCL_DIRECTORY.toAbsolutePath().toString().indexOf('=') >= 0) {
+            if (Metadata.HMCL_DIRECTORY.toString().indexOf('=') >= 0) {
                 Main.showWarningAndContinue(i18n("fatal.illegal_char"));
             }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -89,7 +89,7 @@ public final class Controllers {
     private static Lazy<AccountListPage> accountListPage = new Lazy<>(() -> {
         AccountListPage accountListPage = new AccountListPage();
         accountListPage.selectedAccountProperty().bindBidirectional(Accounts.selectedAccountProperty());
-        accountListPage.accountsProperty().bindContent(Accounts.accountsProperty());
+        accountListPage.accountsProperty().bindContent(Accounts.getAccounts());
         accountListPage.authServersProperty().bindContentBidirectional(config().getAuthlibInjectorServers());
         return accountListPage;
     });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItem.java
Patch:
@@ -73,13 +73,14 @@ public AccountListItem(Account account) {
         setUserData(account);
 
         String loginTypeName = Accounts.getLocalizedLoginTypeName(Accounts.getAccountFactory(account));
+        String portableSuffix = account.isPortable() ? ", " + i18n("account.portable") : "";
         if (account instanceof AuthlibInjectorAccount) {
             AuthlibInjectorServer server = ((AuthlibInjectorAccount) account).getServer();
             subtitle.bind(Bindings.concat(
                     loginTypeName, ", ", i18n("account.injector.server"), ": ",
-                    Bindings.createStringBinding(server::getName, server)));
+                    Bindings.createStringBinding(server::getName, server), portableSuffix));
         } else {
-            subtitle.set(loginTypeName);
+            subtitle.set(loginTypeName + portableSuffix);
         }
 
         StringBinding characterName = Bindings.createStringBinding(account::getCharacter, account);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -136,7 +136,8 @@ private Command generateCommandLine(File nativeFolder) throws IOException {
         if (options.getMaxMemory() != null && options.getMaxMemory() > 0)
             res.addDefault("-Xmx", options.getMaxMemory() + "m");
 
-        if (options.getMinMemory() != null && options.getMinMemory() > 0)
+        if (options.getMinMemory() != null && options.getMinMemory() > 0
+                && (options.getMaxMemory() == null || options.getMinMemory() <= options.getMaxMemory()))
             res.addDefault("-Xms", options.getMinMemory() + "m");
 
         if (options.getMetaspace() != null && options.getMetaspace() > 0)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/RemoteModRepository.java
Patch:
@@ -89,7 +89,7 @@ public List<Category> getSubcategories() {
     }
 
     String[] DEFAULT_GAME_VERSIONS = new String[]{
-            "1.19.2", "1.19.1", "1.19",
+            "1.19.3", "1.19.2", "1.19.1", "1.19",
             "1.18.2", "1.18.1", "1.18",
             "1.17.1", "1.17",
             "1.16.5", "1.16.4", "1.16.3", "1.16.2", "1.16.1", "1.16",

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -40,7 +40,6 @@
 import org.jackhuang.hmcl.util.i18n.Locales.SupportedLocale;
 import org.jackhuang.hmcl.util.javafx.ObservableHelper;
 import org.jackhuang.hmcl.util.javafx.PropertyUtils;
-import org.jackhuang.hmcl.util.platform.OperatingSystem;
 import org.jetbrains.annotations.Nullable;
 
 import java.io.File;
@@ -120,7 +119,7 @@ public static Config fromJson(String json) throws JsonParseException {
     private DoubleProperty height = new SimpleDoubleProperty();
 
     @SerializedName("theme")
-    private ObjectProperty<Theme> theme = new SimpleObjectProperty<>(Theme.BLUE);
+    private ObjectProperty<Theme> theme = new SimpleObjectProperty<>();
 
     @SerializedName("localization")
     private ObjectProperty<SupportedLocale> localization = new SimpleObjectProperty<>(Locales.DEFAULT);
@@ -147,7 +146,7 @@ public static Config fromJson(String json) throws JsonParseException {
     private ObservableList<Map<Object, Object>> accountStorages = FXCollections.observableArrayList();
 
     @SerializedName("fontFamily")
-    private StringProperty fontFamily = new SimpleStringProperty(OperatingSystem.CURRENT_OS == OperatingSystem.WINDOWS ? "Consolas" : "Monospace");
+    private StringProperty fontFamily = new SimpleStringProperty();
 
     @SerializedName("fontSize")
     private DoubleProperty fontSize = new SimpleDoubleProperty(12);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -35,6 +35,7 @@
 import org.jackhuang.hmcl.setting.Accounts;
 import org.jackhuang.hmcl.setting.EnumCommonDirectory;
 import org.jackhuang.hmcl.setting.Profiles;
+import org.jackhuang.hmcl.setting.Theme;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.task.TaskExecutor;
 import org.jackhuang.hmcl.ui.account.AccountListPage;
@@ -181,7 +182,7 @@ public static void initialize(Stage stage) {
         stage.setMinWidth(800 + 2 + 16); // bg width + border width*2 + shadow width*2
         decorator.getDecorator().prefWidthProperty().bind(scene.widthProperty());
         decorator.getDecorator().prefHeightProperty().bind(scene.heightProperty());
-        scene.getStylesheets().setAll(config().getTheme().getStylesheets(config().getLauncherFontFamily()));
+        scene.getStylesheets().setAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
 
         stage.getIcons().add(newImage("/assets/img/icon.png"));
         stage.setTitle(Metadata.FULL_TITLE);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -94,6 +94,8 @@ public final class FXUtils {
     private FXUtils() {
     }
 
+    public static String DEFAULT_MONOSPACE_FONT = OperatingSystem.CURRENT_OS == OperatingSystem.WINDOWS ? "Consolas" : "Monospace";
+
     public static void runInFX(Runnable runnable) {
         if (Platform.isFxApplicationThread()) {
             runnable.run();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -38,6 +38,7 @@
 import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.game.*;
 import org.jackhuang.hmcl.launch.ProcessListener;
+import org.jackhuang.hmcl.setting.Theme;
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.ui.construct.TwoLineListItem;
 import org.jackhuang.hmcl.util.Lang;
@@ -107,7 +108,7 @@ public GameCrashWindow(ManagedProcess managedProcess, ProcessListener.ExitType e
         this.feedbackTextFlow.getChildren().addAll(FXUtils.parseSegment(i18n("game.crash.feedback"), Controllers::onHyperlinkAction));
 
         setScene(new Scene(view, 800, 480));
-        getScene().getStylesheets().addAll(config().getTheme().getStylesheets(config().getLauncherFontFamily()));
+        getScene().getStylesheets().addAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
         setTitle(i18n("game.crash.title"));
         getIcons().add(newImage("/assets/img/icon.png"));
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/WebStage.java
Patch:
@@ -26,6 +26,7 @@
 import javafx.scene.web.WebView;
 import javafx.stage.Stage;
 import org.jackhuang.hmcl.Metadata;
+import org.jackhuang.hmcl.setting.Theme;
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
 import static org.jackhuang.hmcl.ui.FXUtils.newImage;
@@ -42,7 +43,7 @@ public WebStage() {
 
     public WebStage(int width, int height) {
         setScene(new Scene(pane, width, height));
-        getScene().getStylesheets().addAll(config().getTheme().getStylesheets(config().getLauncherFontFamily()));
+        getScene().getStylesheets().addAll(Theme.getTheme().getStylesheets(config().getLauncherFontFamily()));
         getIcons().add(newImage("/assets/img/icon.png"));
         webView.getEngine().setUserDataDirectory(Metadata.HMCL_DIRECTORY.toFile());
         webView.setContextMenuEnabled(false);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/FontComboBox.java
Patch:
@@ -26,15 +26,14 @@
 import com.jfoenix.controls.JFXComboBox;
 import com.jfoenix.controls.JFXListCell;
 
-import javafx.beans.NamedArg;
 import javafx.beans.binding.Bindings;
 import javafx.scene.text.Font;
 
 public class FontComboBox extends JFXComboBox<String> {
 
     private boolean loaded = false;
 
-    public FontComboBox(@NamedArg(value = "fontSize", defaultValue = "12.0") double fontSize) {
+    public FontComboBox() {
         styleProperty().bind(Bindings.concat("-fx-font-family: \"", valueProperty(), "\""));
 
         setCellFactory(listView -> new JFXListCell<String>() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SVG.java
Patch:
@@ -54,6 +54,8 @@ private static Node createSVGPath(String d, ObjectBinding<? extends Paint> fill,
         return svg;
     }
 
+    public static final String ARROW_RIGHT = "M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z";
+
     // default fill: white, width: 24, height 24
 
     public static Node gear(ObjectBinding<? extends Paint> fill, double width, double height) {
@@ -273,7 +275,7 @@ public static Node check(ObjectBinding<? extends Paint> fill, double width, doub
     }
 
     public static Node arrowRight(ObjectBinding<? extends Paint> fill, double width, double height) {
-        return createSVGPath("M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z", fill, width,
+        return createSVGPath(ARROW_RIGHT, fill, width,
                 height);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallersPage.java
Patch:
@@ -21,7 +21,6 @@
 import com.jfoenix.controls.JFXTextField;
 import javafx.beans.property.BooleanProperty;
 import javafx.beans.property.SimpleBooleanProperty;
-import javafx.fxml.FXML;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.control.Control;
@@ -119,7 +118,6 @@ public void onNavigate(Map<String, Object> settings) {
     public void cleanup(Map<String, Object> settings) {
     }
 
-    @FXML
     protected void onInstall() {
         controller.getSettings().put("name", txtName.getText());
         controller.onFinish();

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -44,7 +44,6 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
     private static final class Hole {
         @SuppressWarnings("unchecked")
         static final Pair<String, String>[] SOURCE = (Pair<String, String>[]) new Pair<?, ?>[]{
-                pair("javafx.fxml.LoadException", i18n("crash.NoClassDefFound")),
                 pair("Location is not set", i18n("crash.NoClassDefFound")),
                 pair("UnsatisfiedLinkError", i18n("crash.user_fault")),
                 pair("java.time.zone.ZoneRulesException: Unable to load TZDB time-zone rules", i18n("crash.user_fault")),

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -822,7 +822,7 @@ public void onExit(int exitCode, ExitType exitType) {
             if (exitType != ExitType.NORMAL) {
                 ArrayList<Pair<String, Log4jLevel>> pairs = new ArrayList<>(logs.size());
                 Lang.forEachZipped(logs, levels,
-                        (log, l) -> pairs.add(pair(log, l instanceof Log4jLevel ? ((Log4jLevel) l) : Log4jLevel.guessLevel(log))));
+                        (log, l) -> pairs.add(pair(log, l instanceof Log4jLevel ? ((Log4jLevel) l) : Optional.ofNullable(Log4jLevel.guessLevel(log)).orElse(Log4jLevel.INFO))));
                 repository.markVersionLaunchedAbnormally(version.getId());
                 Platform.runLater(() -> new GameCrashWindow(process, exitType, repository, version, launchOptions, pairs).show());
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModUpdatesPage.java
Patch:
@@ -277,9 +277,7 @@ public static class ModUpdateTask extends Task<Void> {
             dependents = mods.stream()
                     .map(mod -> {
                         return Task
-                                .runAsync(Schedulers.javafx(), () -> {
-                                    mod.getKey().setOld(true);
-                                })
+                                .runAsync(Schedulers.javafx(), () -> mod.getKey().setOld(true))
                                 .thenComposeAsync(() -> {
                                     FileDownloadTask task = new FileDownloadTask(
                                             new URL(mod.getValue().getFile().getUrl()),
@@ -326,6 +324,8 @@ public boolean isRelyingOnDependents() {
 
         @Override
         public void execute() throws Exception {
+            if (!isDependentsSucceeded())
+                throw getException();
         }
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -709,7 +709,7 @@ public final Task<Void> whenComplete(Executor executor, FinalizedCallback action
             @Override
             public void execute() throws Exception {
                 if (isDependentsSucceeded() != (Task.this.getException() == null))
-                    throw new AssertionError("When whenComplete succeeded, Task.exception must be null.");
+                    throw new AssertionError("When whenComplete succeeded, Task.exception must be null.", Task.this.getException());
 
                 action.execute(Task.this.getException());
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -331,6 +331,7 @@ protected void updateControl(ModInfoObject dataItem, boolean empty) {
             restoreButton.setOnMouseClicked(e -> {
                 menu.get().getContent().setAll(dataItem.getModInfo().getMod().getOldFiles().stream()
                         .map(localModFile -> new IconedMenuItem(null, localModFile.getVersion(), () -> {
+                            popup.get().hide();
                             getSkinnable().rollback(dataItem.getModInfo(), localModFile);
                         }))
                         .collect(Collectors.toList())

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -756,6 +756,7 @@ private void finishLaunch() {
                             Controllers.getStage().close();
                             Controllers.shutdown();
                             Schedulers.shutdown();
+                            System.gc();
                         }
                     });
                     break;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -315,6 +315,8 @@ public static void shutdown() {
         rootPage = null;
         versionPage = null;
         gameListPage = null;
+        downloadPage = null;
+        accountListPage = null;
         settingsPage = null;
         decorator = null;
         stage = null;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/OAuthServer.java
Patch:
@@ -30,7 +30,6 @@
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 
 import java.io.IOException;
-import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.CompletableFuture;
@@ -104,7 +103,7 @@ public Response serve(IHTTPSession session) {
 
         String html;
         try {
-            html = IOUtils.readFullyAsString(OAuthServer.class.getResourceAsStream("/assets/microsoft_auth.html"), StandardCharsets.UTF_8)
+            html = IOUtils.readFullyAsString(OAuthServer.class.getResourceAsStream("/assets/microsoft_auth.html"))
                     .replace("%close-page%", i18n("account.methods.microsoft.close_page"));
         } catch (IOException e) {
             Logging.LOG.log(Level.SEVERE, "Failed to load html");

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionIconType.java
Patch:
@@ -27,7 +27,8 @@ public enum VersionIconType {
     CRAFT_TABLE("/assets/img/craft_table.png"),
     FABRIC("/assets/img/fabric.png"),
     FORGE("/assets/img/forge.png"),
-    FURNACE("/assets/img/furnace.png");
+    FURNACE("/assets/img/furnace.png"),
+    QUILT("/assets/img/quilt.png");
 
     // Please append new items at last
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorController.java
Patch:
@@ -163,7 +163,7 @@ private void setupBackground() {
                         config().backgroundImageUrlProperty()));
     }
 
-    private Image defaultBackground = newImage("/assets/img/background.jpg");
+    private final Image defaultBackground = newImage("/assets/img/background.jpg");
 
     /**
      * Load background image from bg/, background.png, background.jpg

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/DownloadPage.java
Patch:
@@ -242,7 +242,7 @@ public void showWorldDownloads() {
         tab.select(worldTab);
     }
 
-    private class DownloadNavigator implements Navigation {
+    private static final class DownloadNavigator implements Navigation {
         private final Map<String, Object> settings = new HashMap<>();
 
         @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DatapackListPage.java
Patch:
@@ -47,6 +47,8 @@ public class DatapackListPage extends ListPageBase<DatapackListPageSkin.Datapack
     private final Path worldDir;
     private final Datapack datapack;
 
+    // Strongly referencing items, preventing GC collection
+    @SuppressWarnings("FieldCanBeLocal")
     private final ObservableList<DatapackListPageSkin.DatapackInfoObject> items;
 
     public DatapackListPage(String worldName, Path worldDir) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModTranslations.java
Patch:
@@ -23,7 +23,6 @@
 import org.jackhuang.hmcl.util.io.IOUtils;
 import org.jetbrains.annotations.Nullable;
 
-import java.nio.charset.StandardCharsets;
 import java.util.*;
 import java.util.logging.Level;
 import java.util.stream.Collectors;
@@ -123,7 +122,7 @@ private boolean loadFromResource() {
             return true;
         }
         try {
-            String modData = IOUtils.readFullyAsString(ModTranslations.class.getResourceAsStream(resourceName), StandardCharsets.UTF_8);
+            String modData = IOUtils.readFullyAsString(ModTranslations.class.getResourceAsStream(resourceName));
             mods = Arrays.stream(modData.split("\n")).filter(line -> !line.startsWith("#")).map(Mod::new).collect(Collectors.toList());
             return true;
         } catch (Exception e) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModUpdatesPage.java
Patch:
@@ -27,6 +27,7 @@
 import javafx.geometry.Pos;
 import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.HBox;
+import org.apache.commons.lang3.mutable.MutableObject;
 import org.jackhuang.hmcl.mod.LocalModFile;
 import org.jackhuang.hmcl.mod.ModManager;
 import org.jackhuang.hmcl.mod.RemoteMod;
@@ -158,8 +159,8 @@ public ReadOnlyObjectWrapper<State> stateProperty() {
     public static class ModUpdateCell extends MDListCell<LocalModFile.ModUpdate> {
         TwoLineListItem content = new TwoLineListItem();
 
-        public ModUpdateCell(JFXListView<LocalModFile.ModUpdate> listView) {
-            super(listView);
+        public ModUpdateCell(JFXListView<LocalModFile.ModUpdate> listView, MutableObject<Object> lastCell) {
+            super(listView, lastCell);
 
             getContainer().getChildren().setAll(content);
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/OAuth.java
Patch:
@@ -253,7 +253,7 @@ public enum GrantFlow {
         DEVICE,
     }
 
-    public class Result {
+    public static final class Result {
         private final String accessToken;
         private final String refreshToken;
 
@@ -282,7 +282,7 @@ private static class DeviceTokenResponse extends ErrorResponse {
         @SerializedName("verification_uri")
         public String verificationURI;
 
-        // Life time in seconds for device_code and user_code
+        // Lifetime in seconds for device_code and user_code
         @SerializedName("expires_in")
         public int expiresIn;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/YggdrasilServer.java
Patch:
@@ -25,7 +25,6 @@
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.gson.UUIDTypeAdapter;
 import org.jackhuang.hmcl.util.io.HttpServer;
-import org.jackhuang.hmcl.util.io.IOUtils;
 
 import java.io.IOException;
 import java.security.*;
@@ -80,8 +79,7 @@ private Response status(Request request) {
     }
 
     private Response profiles(Request request) throws IOException {
-        String body = IOUtils.readFullyAsString(request.getSession().getInputStream(), UTF_8);
-        List<String> names = JsonUtils.fromNonNullJson(body, new TypeToken<List<String>>() {
+        List<String> names = JsonUtils.fromNonNullJsonFully(request.getSession().getInputStream(), new TypeToken<List<String>>() {
         }.getType());
         return ok(names.stream().distinct()
                 .map(this::findCharacterByName)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultCacheRepository.java
Patch:
@@ -240,7 +240,7 @@ public void validate() throws JsonParseException, TolerableValidationException {
         }
     }
 
-    private class LibraryIndex implements Validation {
+    private static final class LibraryIndex implements Validation {
         private final String name;
         private final String hash;
         private final String type;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeOldInstallTask.java
Patch:
@@ -68,8 +68,7 @@ public void execute() throws Exception {
             InputStream stream = zipFile.getInputStream(zipFile.getEntry("install_profile.json"));
             if (stream == null)
                 throw new ArtifactMalformedException("Malformed forge installer file, install_profile.json does not exist.");
-            String json = IOUtils.readFullyAsString(stream);
-            ForgeInstallProfile installProfile = JsonUtils.fromNonNullJson(json, ForgeInstallProfile.class);
+            ForgeInstallProfile installProfile = JsonUtils.fromNonNullJsonFully(stream, ForgeInstallProfile.class);
 
             // unpack the universal jar in the installer file.
             Library forgeLibrary = new Library(installProfile.getInstall().getPath());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/StringArgument.java
Patch:
@@ -67,7 +67,7 @@ public String toString() {
         return argument;
     }
 
-    public class Serializer implements JsonSerializer<StringArgument> {
+    public static final class Serializer implements JsonSerializer<StringArgument> {
         @Override
         public JsonElement serialize(StringArgument src, Type typeOfSrc, JsonSerializationContext context) {
             return new JsonPrimitive(src.getArgument());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/LiteModMetadata.java
Patch:
@@ -20,7 +20,6 @@
 import com.google.gson.JsonParseException;
 import org.jackhuang.hmcl.util.Immutable;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
-import org.jackhuang.hmcl.util.io.IOUtils;
 
 import java.io.IOException;
 import java.nio.file.Path;
@@ -112,7 +111,7 @@ public static LocalModFile fromFile(ModManager modManager, Path modFile) throws
             ZipEntry entry = zipFile.getEntry("litemod.json");
             if (entry == null)
                 throw new IOException("File " + modFile + "is not a LiteLoader mod.");
-            LiteModMetadata metadata = JsonUtils.GSON.fromJson(IOUtils.readFullyAsString(zipFile.getInputStream(entry)), LiteModMetadata.class);
+            LiteModMetadata metadata = JsonUtils.fromJsonFully(zipFile.getInputStream(entry), LiteModMetadata.class);
             if (metadata == null)
                 throw new IOException("Mod " + modFile + " `litemod.json` is malformed.");
             return new LocalModFile(modManager, modManager.getLocalMod(metadata.getName(), ModLoaderType.LITE_LOADER), modFile, metadata.getName(), new LocalModFile.Description(metadata.getDescription()), metadata.getAuthor(),

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCManifest.java
Patch:
@@ -22,7 +22,6 @@
 import org.apache.commons.compress.archivers.zip.ZipFile;
 import org.jackhuang.hmcl.util.Immutable;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
-import org.jackhuang.hmcl.util.io.IOUtils;
 
 import java.io.IOException;
 import java.util.List;
@@ -60,8 +59,7 @@ public static MultiMCManifest readMultiMCModpackManifest(ZipFile zipFile, String
         ZipArchiveEntry mmcPack = zipFile.getEntry(rootEntryName + "mmc-pack.json");
         if (mmcPack == null)
             return null;
-        String json = IOUtils.readFullyAsString(zipFile.getInputStream(mmcPack));
-        MultiMCManifest manifest = JsonUtils.fromNonNullJson(json, MultiMCManifest.class);
+        MultiMCManifest manifest = JsonUtils.fromNonNullJsonFully(zipFile.getInputStream(mmcPack), MultiMCManifest.class);
         if (manifest.getComponents() == null)
             throw new IOException("mmc-pack.json malformed.");
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/CompressingUtils.java
Patch:
@@ -231,7 +231,7 @@ public static String readTextZipEntry(File zipFile, String name) throws IOExcept
      * @return the plain text content of given file.
      */
     public static String readTextZipEntry(ZipFile zipFile, String name) throws IOException {
-        return IOUtils.readFullyAsString(zipFile.getInputStream(zipFile.getEntry(name)), StandardCharsets.UTF_8);
+        return IOUtils.readFullyAsString(zipFile.getInputStream(zipFile.getEntry(name)));
     }
 
     /**
@@ -244,7 +244,7 @@ public static String readTextZipEntry(ZipFile zipFile, String name) throws IOExc
      */
     public static String readTextZipEntry(Path zipFile, String name, Charset encoding) throws IOException {
         try (ZipFile s = openZipFile(zipFile, encoding)) {
-            return IOUtils.readFullyAsString(s.getInputStream(s.getEntry(name)), StandardCharsets.UTF_8);
+            return IOUtils.readFullyAsString(s.getInputStream(s.getEntry(name)));
         }
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/HttpMultipartRequest.java
Patch:
@@ -27,10 +27,11 @@
 import static java.nio.charset.StandardCharsets.UTF_8;
 
 public class HttpMultipartRequest implements Closeable {
+    private static final String endl = "\r\n";
+
     private final String boundary = "*****" + System.currentTimeMillis() + "*****";
     private final HttpURLConnection urlConnection;
     private final ByteArrayOutputStream stream;
-    private final String endl = "\r\n";
 
     public HttpMultipartRequest(HttpURLConnection urlConnection) throws IOException {
         this.urlConnection = urlConnection;
@@ -69,7 +70,7 @@ public void close() throws IOException {
         addLine("--" + boundary + "--");
         urlConnection.setRequestProperty("Content-Length", "" + stream.size());
         try (OutputStream os = urlConnection.getOutputStream()) {
-            IOUtils.write(stream.toByteArray(), os);
+            stream.writeTo(os);
         }
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/HttpRequest.java
Patch:
@@ -31,7 +31,6 @@
 import java.net.MalformedURLException;
 import java.net.SocketTimeoutException;
 import java.net.URL;
-import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
@@ -143,7 +142,7 @@ public String getString() throws IOException {
             return getStringWithRetry(() -> {
                 HttpURLConnection con = createConnection();
                 con = resolveConnection(con);
-                return IOUtils.readFullyAsString(con.getInputStream(), StandardCharsets.UTF_8);
+                return IOUtils.readFullyAsString(con.getInputStream());
             }, retryTimes);
         }
     }

File: HMCLCore/src/test/java/org/jackhuang/hmcl/game/CrashReportAnalyzerTest.java
Patch:
@@ -25,7 +25,6 @@
 
 import java.io.IOException;
 import java.io.InputStream;
-import java.nio.charset.StandardCharsets;
 import java.util.*;
 
 public class CrashReportAnalyzerTest {
@@ -35,7 +34,7 @@ private String loadLog(String path) throws IOException {
         if (is == null) {
             throw new IllegalStateException("Resource not found: " + path);
         }
-        return IOUtils.readFullyAsString(is, StandardCharsets.UTF_8);
+        return IOUtils.readFullyAsString(is);
     }
 
     private CrashReportAnalyzer.Result findResultByRule(List<CrashReportAnalyzer.Result> results, CrashReportAnalyzer.Rule rule) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/RemoteModRepository.java
Patch:
@@ -89,6 +89,7 @@ public List<Category> getSubcategories() {
     }
 
     String[] DEFAULT_GAME_VERSIONS = new String[]{
+            "1.19.2", "1.19.1", "1.19",
             "1.18.2", "1.18.1", "1.18",
             "1.17.1", "1.17",
             "1.16.5", "1.16.4", "1.16.3", "1.16.2", "1.16.1", "1.16",

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/UpgradeDialog.java
Patch:
@@ -41,7 +41,7 @@ public UpgradeDialog(RemoteVersion remoteVersion, Runnable updateRunnable) {
         }
 
         {
-            String url = CHANGELOG_URL + remoteVersion.getChannel().channelName + ".html";
+            String url = CHANGELOG_URL + remoteVersion.getChannel().channelName + ".html#nowchange";
             try {
                 WebView webView = new WebView();
                 webView.getEngine().setUserDataDirectory(Metadata.HMCL_DIRECTORY.toFile());

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateChecker.java
Patch:
@@ -94,7 +94,7 @@ private static RemoteVersion checkUpdate(UpdateChannel channel) throws IOExcepti
 
     private static boolean isDevelopmentVersion(String version) {
         return version.contains("@") || // eg. @develop@
-                version.contains("SNAPSHOT"); // eg. 3.1.SNAPSHOT
+                version.contains("SNAPSHOT"); // eg. 3.5.SNAPSHOT
     }
 
     public static void requestCheckUpdate(UpdateChannel channel) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackExportTask.java
Patch:
@@ -81,6 +81,8 @@ public void execute() throws Exception {
                     components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "com.mumfrey.liteloader", liteLoaderVersion)));
             analyzer.getVersion(FABRIC).ifPresent(fabricVersion ->
                     components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "net.fabricmc.fabric-loader", fabricVersion)));
+            analyzer.getVersion(QUILT).ifPresent(quiltVersion ->
+                    components.add(new MultiMCManifest.MultiMCManifestComponent(false, false, "org.quiltmc.quilt-loader", quiltVersion)));
             MultiMCManifest mmcPack = new MultiMCManifest(1, components);
             zip.putTextFile(JsonUtils.GSON.toJson(mmcPack), "mmc-pack.json");
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackInstallTask.java
Patch:
@@ -90,7 +90,7 @@ public MultiMCModpackInstallTask(DefaultDependencyManager dependencyManager, Fil
                     builder.version("fabric", c.getVersion());
             });
 
-            Optional<MultiMCManifest.MultiMCManifestComponent> quilt = manifest.getMmcPack().getComponents().stream().filter(e -> e.getUid().equals("net.quiltmc.quilt-loader")).findAny();
+            Optional<MultiMCManifest.MultiMCManifestComponent> quilt = manifest.getMmcPack().getComponents().stream().filter(e -> e.getUid().equals("org.quiltmc.quilt-loader")).findAny();
             quilt.ifPresent(c -> {
                 if (c.getVersion() != null)
                     builder.version("quilt", c.getVersion());

File: HMCL/src/main/java/moe/mickey/minecraft/skin/fx/SkinCanvas.java
Patch:
@@ -16,8 +16,8 @@
 
 public class SkinCanvas extends Group {
 
-    public static final Image ALEX = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/alex.png"));
-    public static final Image STEVE = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/steve.png"));
+    public static final Image ALEX = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/skin/alex.png"));
+    public static final Image STEVE = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/skin/steve.png"));
 
     public static final SkinCube ALEX_LARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 32F / 64F, 48F / 64F, 0F, true);
     public static final SkinCube ALEX_RARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 40F / 64F, 16F / 64F, 0F, true);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/TexturesLoader.java
Patch:
@@ -136,8 +136,8 @@ public static LoadedTexture loadTexture(Texture texture) throws IOException {
     private final static Map<TextureModel, LoadedTexture> DEFAULT_SKINS = new EnumMap<>(TextureModel.class);
 
     static {
-        loadDefaultSkin("/assets/img/steve.png", TextureModel.STEVE);
-        loadDefaultSkin("/assets/img/alex.png", TextureModel.ALEX);
+        loadDefaultSkin("/assets/img/skin/steve.png", TextureModel.STEVE);
+        loadDefaultSkin("/assets/img/skin/alex.png", TextureModel.ALEX);
     }
 
     private static void loadDefaultSkin(String path, TextureModel model) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -710,6 +710,9 @@ public static void copyText(String text) {
     }
 
     public static List<Node> parseSegment(String segment, Consumer<String> hyperlinkAction) {
+        if (segment.indexOf('<') < 0)
+            return Collections.singletonList(new Text(segment));
+
         try {
             DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
             DocumentBuilder builder = factory.newDocumentBuilder();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/ManagedProcess.java
Patch:
@@ -131,11 +131,11 @@ public synchronized void addRelatedThread(Thread thread) {
     }
 
     public synchronized void pumpInputStream(Consumer<String> onLogLine) {
-        addRelatedThread(Lang.thread(new StreamPump(process.getInputStream(), onLogLine), "ProcessInputStreamPump", true));
+        addRelatedThread(Lang.thread(new StreamPump(process.getInputStream(), onLogLine, OperatingSystem.NATIVE_CHARSET), "ProcessInputStreamPump", true));
     }
 
     public synchronized void pumpErrorStream(Consumer<String> onLogLine) {
-        addRelatedThread(Lang.thread(new StreamPump(process.getErrorStream(), onLogLine), "ProcessErrorStreamPump", true));
+        addRelatedThread(Lang.thread(new StreamPump(process.getErrorStream(), onLogLine, OperatingSystem.NATIVE_CHARSET), "ProcessErrorStreamPump", true));
     }
 
     /**

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorAccount.java
Patch:
@@ -120,7 +120,7 @@ private static class AuthlibInjectorAuthInfo extends AuthInfo {
         private final String prefetchedMeta;
 
         public AuthlibInjectorAuthInfo(AuthInfo authInfo, AuthlibInjectorArtifactInfo artifact, AuthlibInjectorServer server, String prefetchedMeta) {
-            super(authInfo.getUsername(), authInfo.getUUID(), authInfo.getAccessToken(), authInfo.getUserProperties());
+            super(authInfo.getUsername(), authInfo.getUUID(), authInfo.getAccessToken(), authInfo.getUserType(), authInfo.getUserProperties());
 
             this.artifact = artifact;
             this.server = server;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/microsoft/MicrosoftSession.java
Patch:
@@ -110,7 +110,7 @@ public Map<Object, Object> toStorage() {
     public AuthInfo toAuthInfo() {
         requireNonNull(profile);
 
-        return new AuthInfo(profile.getName(), profile.getId(), accessToken, "{}");
+        return new AuthInfo(profile.getName(), profile.getId(), accessToken, AuthInfo.USER_TYPE_MOJANG, "{}");
     }
 
     public static class User {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccount.java
Patch:
@@ -104,7 +104,8 @@ private boolean loadAuthlibInjector(Skin skin) {
 
     @Override
     public AuthInfo logIn() throws AuthenticationException {
-        AuthInfo authInfo = new AuthInfo(username, uuid, UUIDTypeAdapter.fromUUID(UUID.randomUUID()), "{}");
+        // Using "legacy" user type here because "mojang" user type may cause "invalid session token" or "disconnected" when connecting to a game server.
+        AuthInfo authInfo = new AuthInfo(username, uuid, UUIDTypeAdapter.fromUUID(UUID.randomUUID()), AuthInfo.USER_TYPE_LEGACY, "{}");
 
         if (loadAuthlibInjector(skin)) {
             CompletableFuture<AuthlibInjectorArtifactInfo> artifactTask = CompletableFuture.supplyAsync(() -> {
@@ -144,7 +145,7 @@ private class OfflineAuthInfo extends AuthInfo {
         private YggdrasilServer server;
 
         public OfflineAuthInfo(AuthInfo authInfo, AuthlibInjectorArtifactInfo artifact) {
-            super(authInfo.getUsername(), authInfo.getUUID(), authInfo.getAccessToken(), authInfo.getUserProperties());
+            super(authInfo.getUsername(), authInfo.getUUID(), authInfo.getAccessToken(), USER_TYPE_LEGACY, authInfo.getUserProperties());
 
             this.artifact = artifact;
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilSession.java
Patch:
@@ -104,7 +104,7 @@ public AuthInfo toAuthInfo() {
         if (selectedProfile == null)
             throw new IllegalStateException("No character is selected");
 
-        return new AuthInfo(selectedProfile.getName(), selectedProfile.getId(), accessToken,
+        return new AuthInfo(selectedProfile.getName(), selectedProfile.getId(), accessToken, AuthInfo.USER_TYPE_MOJANG,
                 Optional.ofNullable(userProperties)
                         .map(properties -> properties.entrySet().stream()
                                 .collect(Collectors.toMap(Map.Entry::getKey,

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -401,7 +401,7 @@ protected Map<String, String> getConfigurations() {
                 pair("${profile_name}", Optional.ofNullable(options.getProfileName()).orElse("Minecraft")),
                 pair("${version_type}", Optional.ofNullable(options.getVersionType()).orElse(version.getType().getId())),
                 pair("${game_directory}", repository.getRunDirectory(version.getId()).getAbsolutePath()),
-                pair("${user_type}", "mojang"),
+                pair("${user_type}", authInfo.getUserType()),
                 pair("${assets_index_name}", version.getAssetIndex().getId()),
                 pair("${user_properties}", authInfo.getUserProperties()),
                 pair("${resolution_width}", options.getWidth().toString()),

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hmcl.task;
 
+import org.jackhuang.hmcl.util.Hex;
 import org.jackhuang.hmcl.util.Logging;
 import org.jackhuang.hmcl.util.io.ChecksumMismatchException;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
@@ -25,7 +26,6 @@
 import java.io.File;
 import java.io.IOException;
 import java.io.RandomAccessFile;
-import java.math.BigInteger;
 import java.net.URL;
 import java.net.URLConnection;
 import java.nio.file.FileSystem;
@@ -72,7 +72,7 @@ public MessageDigest createDigest() {
         }
 
         public void performCheck(MessageDigest digest) throws ChecksumMismatchException {
-            String actualChecksum = String.format("%1$040x", new BigInteger(1, digest.digest()));
+            String actualChecksum = Hex.encodeHex(digest.digest());
             if (!checksum.equalsIgnoreCase(actualChecksum)) {
                 throw new ChecksumMismatchException(algorithm, checksum, actualChecksum);
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAuthlibInjectorServerPane.java
Patch:
@@ -68,7 +68,7 @@ public AddAuthlibInjectorServerPane() {
         loadFXML(this, "/assets/fxml/authlib-injector-server-add.fxml");
         root.setContent(addServerPane, ContainerAnimations.NONE.getAnimationProducer());
 
-        lblCreationWarning.maxWidthProperty().bind(((FlowPane)lblCreationWarning.getParent()).widthProperty());
+        lblCreationWarning.maxWidthProperty().bind(((FlowPane) lblCreationWarning.getParent()).widthProperty());
         btnAddNext.disableProperty().bind(txtServerUrl.textProperty().isEmpty());
         nextPane.hideSpinner();
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -627,19 +627,19 @@ private static Task<AuthInfo> logIn(Account account) {
 
                 return Task.completed(DialogController.logIn(account));
             } catch (AuthenticationException e) {
-                LOG.log(Level.WARNING, "Authentication failed, try playing offline", e);
+                LOG.log(Level.WARNING, "Authentication failed, try skipping refresh", e);
 
                 CompletableFuture<Task<AuthInfo>> future = new CompletableFuture<>();
                 runInFX(() -> {
-                    JFXButton loginOfflineButton = new JFXButton(i18n("account.login.offline"));
+                    JFXButton loginOfflineButton = new JFXButton(i18n("account.login.skip"));
                     loginOfflineButton.setOnAction(event -> {
                         try {
                             future.complete(Task.completed(account.playOffline()));
                         } catch (AuthenticationException e2) {
                             future.completeExceptionally(e2);
                         }
                     });
-                    JFXButton retryButton = new JFXButton(i18n("button.retry"));
+                    JFXButton retryButton = new JFXButton(i18n("account.login.retry"));
                     retryButton.setOnAction(event -> {
                         future.complete(logIn(account));
                     });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAuthlibInjectorServerPane.java
Patch:
@@ -22,6 +22,7 @@
 import com.jfoenix.controls.JFXTextField;
 import javafx.fxml.FXML;
 import javafx.scene.control.Label;
+import javafx.scene.layout.FlowPane;
 import javafx.scene.layout.StackPane;
 import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorServer;
 import org.jackhuang.hmcl.task.Schedulers;
@@ -67,6 +68,7 @@ public AddAuthlibInjectorServerPane() {
         loadFXML(this, "/assets/fxml/authlib-injector-server-add.fxml");
         root.setContent(addServerPane, ContainerAnimations.NONE.getAnimationProducer());
 
+        lblCreationWarning.maxWidthProperty().bind(((FlowPane)lblCreationWarning.getParent()).widthProperty());
         btnAddNext.disableProperty().bind(txtServerUrl.textProperty().isEmpty());
         nextPane.hideSpinner();
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/OperatingSystem.java
Patch:
@@ -256,6 +256,7 @@ public static Optional<PhysicalMemoryStatus> getPhysicalMemoryStatus() {
         return Optional.empty();
     }
 
+    @SuppressWarnings("removal")
     public static void forceGC() {
         System.gc();
         try {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPageSkin.java
Patch:
@@ -22,7 +22,6 @@
 import com.jfoenix.controls.JFXTextField;
 import javafx.beans.binding.Bindings;
 import javafx.collections.ObservableList;
-import javafx.geometry.HPos;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.Node;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/DialogPane.java
Patch:
@@ -34,7 +34,7 @@
 
 public class DialogPane extends JFXDialogLayout {
     private final StringProperty title = new SimpleStringProperty();
-    private final BooleanProperty valid = new SimpleBooleanProperty();
+    private final BooleanProperty valid = new SimpleBooleanProperty(true);
     protected final SpinnerPane acceptPane = new SpinnerPane();
     protected final JFXButton cancelButton = new JFXButton();
     protected final Label warningLabel = new Label();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthInstallTask.java
Patch:
@@ -72,7 +72,8 @@ public ModrinthInstallTask(DefaultDependencyManager dependencyManager, File zipF
                     builder.version("fabric", modLoader.getValue());
                     break;
                 case "quilt-loader":
-                    throw new IllegalStateException("Quilt Modloader is not supported");
+                    builder.version("quilt", modLoader.getValue());
+                    break;
                 default:
                     throw new IllegalStateException("Unsupported mod loader " + modLoader.getKey());
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -243,7 +243,7 @@ public void stopBroadcasting() {
     }
 
     private void onBroadcasterExit(Event event) {
-        this.broadcaster.set(null);
+        runInFX(() -> this.broadcaster.set(null));
     }
 
     private void clearSession() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -290,7 +290,7 @@ private void onExit(MultiplayerManager.HiperExitEvent event) {
                     break;
             }
 
-            clearSession();
+//            clearSession();
         });
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -295,8 +295,10 @@ private void initDetailsPane() {
                 JFXHyperlink purchaseLink = new JFXHyperlink(i18n("account.methods.yggdrasil.purchase"));
                 JFXHyperlink deauthorizeLink = new JFXHyperlink(i18n("account.methods.microsoft.deauthorize"));
                 deauthorizeLink.setOnAction(e -> FXUtils.openLink("https://account.live.com/consent/Edit?client_id=000000004C794E0A"));
+                JFXHyperlink createProfileLink = new JFXHyperlink(i18n("account.methods.microsoft.makegameidsettings"));
+                createProfileLink.setOnAction(e -> FXUtils.openLink("https://www.minecraft.net/msaprofile/mygames/editprofile"));    
                 purchaseLink.setOnAction(e -> FXUtils.openLink(YggdrasilService.PURCHASE_URL));
-                box.getChildren().setAll(profileLink, birthLink, purchaseLink, deauthorizeLink);
+                box.getChildren().setAll(profileLink, birthLink, purchaseLink, deauthorizeLink, createProfileLink);
                 GridPane.setColumnSpan(box, 2);
 
                 vbox.getChildren().setAll(hintPane, box);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -251,6 +251,9 @@ private void onExit(MultiplayerManager.HiperExitEvent event) {
                 case MultiplayerManager.HiperExitEvent.INTERRUPTED:
                     // do nothing
                     break;
+                case MultiplayerManager.HiperExitEvent.FAILED_GET_DEVICE:
+                    Controllers.dialog(i18n("multiplayer.error.failed_get_device"));
+                    break;
                 default:
                     Controllers.dialog(i18n("multiplayer.exit", event.getExitCode()));
                     break;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/OAuth.java
Patch:
@@ -181,8 +181,7 @@ private static void handleErrorResponse(ErrorResponse response) throws Authentic
 
         switch (response.error) {
             case "invalid_grant":
-                if (response.errorDescription.contains("The user must sign in again and if needed grant the client application access to the requested scope") ||
-                        response.errorDescription.contains("The user could not be authenticated as the grant is expired")) {
+                if (response.errorDescription.contains("AADSTS70000")) {
                     throw new CredentialExpiredException();
                 }
                 break;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthCompletionTask.java
Patch:
@@ -102,6 +102,8 @@ public void execute() throws Exception {
         Path runDirectory = repository.getRunDirectory(version).toPath();
 
         for (ModrinthManifest.File file : manifest.getFiles()) {
+            if (file.getEnv() != null && file.getEnv().getOrDefault("client", "required").equals("unsupported"))
+                continue;
             Path filePath = runDirectory.resolve(file.getPath());
             if (!Files.exists(filePath) && !file.getDownloads().isEmpty()) {
                 FileDownloadTask task = new FileDownloadTask(file.getDownloads().get(0), filePath.toFile());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MultiFileItem.java
Patch:
@@ -28,7 +28,6 @@
 import javafx.scene.control.Label;
 import javafx.scene.control.Toggle;
 import javafx.scene.control.ToggleGroup;
-import javafx.scene.control.Tooltip;
 import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.VBox;
 import javafx.stage.FileChooser;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/OAuth.java
Patch:
@@ -181,7 +181,8 @@ private static void handleErrorResponse(ErrorResponse response) throws Authentic
 
         switch (response.error) {
             case "invalid_grant":
-                if (response.errorDescription.contains("The user must sign in again and if needed grant the client application access to the requested scope")) {
+                if (response.errorDescription.contains("The user must sign in again and if needed grant the client application access to the requested scope") ||
+                        response.errorDescription.contains("The user could not be authenticated as the grant is expired")) {
                     throw new CredentialExpiredException();
                 }
                 break;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/microsoft/MicrosoftService.java
Patch:
@@ -119,6 +119,7 @@ private MicrosoftSession authenticateViaLiveAccessToken(String liveAccessToken,
                                 mapOf(pair("AuthMethod", "RPS"), pair("SiteName", "user.auth.xboxlive.com"),
                                         pair("RpsTicket", "d=" + liveAccessToken))),
                         pair("RelyingParty", "http://auth.xboxlive.com"), pair("TokenType", "JWT")))
+                .retry(5)
                 .accept("application/json").getJson(XBoxLiveAuthenticationResponse.class);
 
         String uhs = getUhs(xboxResponse, null);
@@ -132,6 +133,7 @@ private MicrosoftSession authenticateViaLiveAccessToken(String liveAccessToken,
                                         pair("UserTokens", Collections.singletonList(xboxResponse.token)))),
                         pair("RelyingParty", "rp://api.minecraftservices.com/"), pair("TokenType", "JWT")))
                 .ignoreHttpErrorCode(401)
+                .retry(5)
                 .getJson(XBoxLiveAuthenticationResponse.class);
 
         getUhs(minecraftXstsResponse, uhs);
@@ -140,6 +142,7 @@ private MicrosoftSession authenticateViaLiveAccessToken(String liveAccessToken,
         MinecraftLoginWithXBoxResponse minecraftResponse = HttpRequest
                 .POST("https://api.minecraftservices.com/authentication/login_with_xbox")
                 .json(mapOf(pair("identityToken", "XBL3.0 x=" + uhs + ";" + minecraftXstsResponse.token)))
+                .retry(5)
                 .accept("application/json").getJson(MinecraftLoginWithXBoxResponse.class);
 
         long notAfter = minecraftResponse.expiresIn * 1000L + System.currentTimeMillis();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -286,7 +286,8 @@ private void initDetailsPane() {
                 holder.add(Accounts.OAUTH_CALLBACK.onGrantDeviceCode.registerWeak(value -> {
                     runInFX(() -> deviceCode.set(value));
                 }));
-                HBox box = new HBox(8);
+                FlowPane box = new FlowPane();
+                box.setHgap(8);
                 JFXHyperlink birthLink = new JFXHyperlink(i18n("account.methods.microsoft.birth"));
                 birthLink.setOnAction(e -> FXUtils.openLink("https://support.microsoft.com/account-billing/837badbc-999e-54d2-2617-d19206b9540a"));
                 JFXHyperlink profileLink = new JFXHyperlink(i18n("account.methods.microsoft.profile"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/OptionToggleButton.java
Patch:
@@ -50,8 +50,9 @@ public OptionToggleButton() {
         titleLabel.textProperty().bind(title);
         Label subtitleLabel = new Label();
         subtitleLabel.setMouseTransparent(true);
+        subtitleLabel.setWrapText(true);
         subtitleLabel.textProperty().bind(subtitle);
-        pane.setLeft(left);
+        pane.setCenter(left);
         left.setAlignment(Pos.CENTER_LEFT);
 
         JFXToggleButton toggleButton = new JFXToggleButton();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPageSkin.java
Patch:
@@ -146,7 +146,6 @@ protected MultiplayerPageSkin(MultiplayerPage control) {
             content.setFillWidth(true);
             ScrollPane scrollPane = new ScrollPane(content);
             scrollPane.setFitToWidth(true);
-            scrollPane.setFitToHeight(true);
             setCenter(scrollPane);
 
             ComponentList roomPane = new ComponentList();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/java/JavaRepository.java
Patch:
@@ -66,6 +66,8 @@ public static Stream<Optional<Path>> findMinecraftRuntimeDirs() {
     }
 
     public static Stream<Path> findJavaHomeInMinecraftRuntimeDir(Path runtimeDir) {
+        if (!Files.isDirectory(runtimeDir))
+            return Stream.empty();
         // Examples:
         // $HOME/Library/Application Support/minecraft/runtime/java-runtime-beta/mac-os/java-runtime-beta/jre.bundle/Contents/Home
         // $HOME/.minecraft/runtime/java-runtime-beta/linux/java-runtime-beta

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -36,8 +36,6 @@
 import org.jackhuang.hmcl.setting.*;
 import org.jackhuang.hmcl.task.*;
 import org.jackhuang.hmcl.ui.*;
-import org.jackhuang.hmcl.ui.account.ClassicAccountLoginDialog;
-import org.jackhuang.hmcl.ui.account.OAuthAccountLoginDialog;
 import org.jackhuang.hmcl.ui.construct.*;
 import org.jackhuang.hmcl.ui.construct.MessageDialogPane.MessageType;
 import org.jackhuang.hmcl.util.*;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -601,7 +601,7 @@ else if (!isWindows && !scriptExtension.equals("sh"))
                     writer.write("set APPDATA=" + options.getGameDir().getAbsoluteFile().getParent());
                     writer.newLine();
                     for (Map.Entry<String, String> entry : getEnvVars().entrySet()) {
-                        writer.write("set " + entry.getKey() + "=" + entry.getValue());
+                        writer.write("set " + entry.getKey() + "=" + CommandBuilder.toBatchStringLiteral(entry.getValue()));
                         writer.newLine();
                     }
                     writer.newLine();
@@ -610,7 +610,7 @@ else if (!isWindows && !scriptExtension.equals("sh"))
                     writer.write("#!/usr/bin/env bash");
                     writer.newLine();
                     for (Map.Entry<String, String> entry : getEnvVars().entrySet()) {
-                        writer.write("export " + entry.getKey() + "=" + entry.getValue());
+                        writer.write("export " + entry.getKey() + "=" + CommandBuilder.toShellStringLiteral(entry.getValue()));
                         writer.newLine();
                     }
                     if (commandLine.tempNativeFolder != null) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -541,9 +541,6 @@ else if (!isWindows && !scriptExtension.equals("sh"))
                 throw new IllegalArgumentException("The extension of " + scriptFile + " is not 'sh' or 'ps1' in macOS/Linux");
         }
 
-        if (!FileUtils.makeFile(scriptFile))
-            throw new IOException("Script file: " + scriptFile + " cannot be created.");
-
         final Command commandLine = generateCommandLine(nativeFolder);
         final String command = usePowerShell ? null : commandLine.commandLine.toString();
 
@@ -553,6 +550,9 @@ else if (!isWindows && !scriptExtension.equals("sh"))
             }
         }
 
+        if (!FileUtils.makeFile(scriptFile))
+            throw new IOException("Script file: " + scriptFile + " cannot be created.");
+
         OutputStream outputStream = new FileOutputStream(scriptFile);
         Charset charset = StandardCharsets.UTF_8;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/util/JavaFXPatcher.java
Patch:
@@ -20,6 +20,8 @@
 import java.nio.file.Path;
 import java.util.Set;
 
+import static org.jackhuang.hmcl.util.Logging.LOG;
+
 /**
  * Utility for Adding JavaFX to module path.
  *
@@ -30,6 +32,6 @@ private JavaFXPatcher() {
     }
 
     public static void patch(Set<String> modules, Path... jarPaths) {
-        // Nothing to do with Java 8
+        LOG.info("No need to patch JavaFX with Java 8");
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/Account.java
Patch:
@@ -64,7 +64,7 @@ public abstract class Account implements Observable {
      * Play offline.
      * @return the specific offline player's info.
      */
-    public abstract Optional<AuthInfo> playOffline() throws AuthenticationException;
+    public abstract AuthInfo playOffline() throws AuthenticationException;
 
     public abstract Map<Object, Object> toStorage();
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/microsoft/MicrosoftAccount.java
Patch:
@@ -117,8 +117,8 @@ public AuthInfo logInWhenCredentialsExpired() throws AuthenticationException {
     }
 
     @Override
-    public Optional<AuthInfo> playOffline() {
-        return Optional.of(session.toAuthInfo());
+    public AuthInfo playOffline() {
+        return session.toAuthInfo();
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccount.java
Patch:
@@ -180,8 +180,8 @@ public void close() throws Exception {
     }
 
     @Override
-    public Optional<AuthInfo> playOffline() throws AuthenticationException {
-        return Optional.of(logIn());
+    public AuthInfo playOffline() throws AuthenticationException {
+        return logIn();
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilAccount.java
Patch:
@@ -161,8 +161,8 @@ public synchronized AuthInfo logInWithPassword(String password) throws Authentic
     }
 
     @Override
-    public Optional<AuthInfo> playOffline() {
-        return Optional.of(session.toAuthInfo());
+    public AuthInfo playOffline() throws AuthenticationException {
+        return session.toAuthInfo();
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -175,10 +175,10 @@ private void launch0() {
                     try {
                         return account.logIn();
                     } catch (CredentialExpiredException e) {
-                        LOG.info("Credential has expired: " + e);
+                        LOG.log(Level.INFO, "Credential has expired", e);
                         return DialogController.logIn(account);
                     } catch (AuthenticationException e) {
-                        LOG.warning("Authentication failed, try playing offline: " + e);
+                        LOG.log(Level.WARNING, "Authentication failed, try playing offline", e);
                         return account.playOffline().orElseThrow(() -> e);
                     }
                 }).withStage("launch.state.logging_in"))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltInstallTask.java
Patch:
@@ -116,7 +116,7 @@ private Version getPatch(QuiltInfo quiltInfo, String gameVersion, String loaderV
             }
         }
 
-        libraries.add(new Library(Artifact.fromDescriptor(quiltInfo.hashed.maven), getMavenRepositoryByGroup(quiltInfo.hashed.maven), null));
+        // libraries.add(new Library(Artifact.fromDescriptor(quiltInfo.hashed.maven), getMavenRepositoryByGroup(quiltInfo.hashed.maven), null));
         libraries.add(new Library(Artifact.fromDescriptor(quiltInfo.intermediary.maven), getMavenRepositoryByGroup(quiltInfo.intermediary.maven), null));
         libraries.add(new Library(Artifact.fromDescriptor(quiltInfo.loader.maven), getMavenRepositoryByGroup(quiltInfo.loader.maven), null));
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/AdditionalInstallersPage.java
Patch:
@@ -91,9 +91,11 @@ protected void reload() {
         String optiFine = analyzer.getVersion(OPTIFINE).orElse(null);
         String fabric = analyzer.getVersion(FABRIC).orElse(null);
         String fabricApi = analyzer.getVersion(FABRIC_API).orElse(null);
+        String quilt = analyzer.getVersion(QUILT).orElse(null);
+        String quiltApi = analyzer.getVersion(QUILT_API).orElse(null);
 
         InstallerItem[] libraries = group.getLibraries();
-        String[] versions = new String[]{game, forge, liteLoader, optiFine, fabric, fabricApi};
+        String[] versions = new String[]{game, forge, liteLoader, optiFine, fabric, fabricApi, quilt, quiltApi};
 
         String currentGameVersion = Lang.nonNull(getVersion("game"), game);
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -488,6 +488,7 @@ protected Path reconstructAssets(String version, String assetId) throws IOExcept
     }
 
     public Task<Version> saveAsync(Version version) {
+        this.gameVersions.remove(getVersionJar(version));
         if (version.isResolvedPreservingPatches()) {
             return new VersionJsonSaveTask(this, MaintainTask.maintainPreservingPatches(this, version));
         } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -36,6 +36,7 @@
 import javafx.stage.Stage;
 import org.jackhuang.hmcl.game.LauncherHelper;
 import org.jackhuang.hmcl.util.Log4jLevel;
+import org.jackhuang.hmcl.util.Logging;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
 
 import javax.swing.*;
@@ -99,7 +100,7 @@ public LogWindow() {
     }
 
     public void logLine(String line, Log4jLevel level) {
-        Log log = new Log(parseEscapeSequence(line), level);
+        Log log = new Log(Logging.filterForbiddenToken(parseEscapeSequence(line)), level);
         logs.add(log);
         if (levelShownMap.get(level).get())
             impl.listView.getItems().add(log);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallersPage.java
Patch:
@@ -31,13 +31,11 @@
 import javafx.scene.layout.BorderPane;
 import javafx.scene.layout.FlowPane;
 import javafx.scene.layout.HBox;
-import javafx.scene.layout.VBox;
 import org.jackhuang.hmcl.download.DownloadProvider;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.HMCLGameRepository;
 import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.InstallerItem;
-import org.jackhuang.hmcl.ui.construct.ComponentList;
 import org.jackhuang.hmcl.ui.construct.MessageDialogPane;
 import org.jackhuang.hmcl.ui.construct.RequiredValidator;
 import org.jackhuang.hmcl.ui.construct.Validator;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltAPIRemoteVersion.java
Patch:
@@ -1,6 +1,6 @@
 /*
  * Hello Minecraft! Launcher
- * Copyright (C) 2021  huangyuhui <huanghongxun2008@126.com> and contributors
+ * Copyright (C) 2022  huangyuhui <huanghongxun2008@126.com> and contributors
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -20,7 +20,6 @@
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
-import org.jackhuang.hmcl.download.fabric.FabricAPIInstallTask;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.mod.RemoteMod;
 import org.jackhuang.hmcl.task.Task;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltAPIVersionList.java
Patch:
@@ -1,6 +1,6 @@
 /*
  * Hello Minecraft! Launcher
- * Copyright (C) 2021  huangyuhui <huanghongxun2008@126.com> and contributors
+ * Copyright (C) 2022  huangyuhui <huanghongxun2008@126.com> and contributors
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -19,7 +19,6 @@
 
 import org.jackhuang.hmcl.download.DownloadProvider;
 import org.jackhuang.hmcl.download.VersionList;
-import org.jackhuang.hmcl.download.fabric.FabricAPIRemoteVersion;
 import org.jackhuang.hmcl.mod.RemoteMod;
 import org.jackhuang.hmcl.mod.modrinth.ModrinthRemoteModRepository;
 import org.jackhuang.hmcl.util.Lang;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltInstallTask.java
Patch:
@@ -1,6 +1,6 @@
 /*
  * Hello Minecraft! Launcher
- * Copyright (C) 2020  huangyuhui <huanghongxun2008@126.com> and contributors
+ * Copyright (C) 2022  huangyuhui <huanghongxun2008@126.com> and contributors
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -22,7 +22,6 @@
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.UnsupportedInstallationException;
-import org.jackhuang.hmcl.download.fabric.FabricRemoteVersion;
 import org.jackhuang.hmcl.game.Arguments;
 import org.jackhuang.hmcl.game.Artifact;
 import org.jackhuang.hmcl.game.Library;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltRemoteVersion.java
Patch:
@@ -20,7 +20,6 @@
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
-import org.jackhuang.hmcl.download.fabric.FabricInstallTask;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/quilt/QuiltVersionList.java
Patch:
@@ -20,7 +20,6 @@
 import com.google.gson.reflect.TypeToken;
 import org.jackhuang.hmcl.download.DownloadProvider;
 import org.jackhuang.hmcl.download.VersionList;
-import org.jackhuang.hmcl.download.fabric.FabricRemoteVersion;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 import org.jetbrains.annotations.Nullable;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -355,6 +355,7 @@ public LaunchOptions getLaunchOptions(String version, JavaVersion javaVersion, F
                 .setNativesDirType(vs.getNativesDirType())
                 .setNativesDir(vs.getNativesDir())
                 .setProcessPriority(vs.getProcessPriority())
+                .setUseSoftwareRenderer(vs.isUseSoftwareRenderer())
                 .setUseNativeGLFW(vs.isUseNativeGLFW())
                 .setUseNativeOpenAL(vs.isUseNativeOpenAL())
                 .setDaemon(!makeLaunchScript && vs.getLauncherVisibility().isDaemon())

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/GlobalConfig.java
Patch:
@@ -153,6 +153,7 @@ public static class Serializer implements JsonSerializer<GlobalConfig>, JsonDese
         private static final Set<String> knownFields = new HashSet<>(Arrays.asList(
                 "agreementVersion",
                 "multiplayerToken",
+                "multiplayerRelay",
                 "multiplayerAgreementVersion"
         ));
 

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/ExecutableHeaderHelper.java
Patch:
@@ -43,7 +43,9 @@ final class ExecutableHeaderHelper {
     private ExecutableHeaderHelper() {}
 
     private static Map<String, String> suffix2header = mapOf(
-            pair("exe", "assets/HMCLauncher.exe"));
+            pair("exe", "assets/HMCLauncher.exe"),
+            pair("sh", "assets/HMCLauncher.sh")
+    );
 
     private static Optional<String> getSuffix(Path file) {
         String filename = file.getFileName().toString();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/BMCLAPIDownloadProvider.java
Patch:
@@ -106,7 +106,8 @@ public String injectURL(String baseURL) {
                 .replace("http://dl.liteloader.com/versions", apiRoot + "/maven")
                 .replace("https://meta.fabricmc.net", apiRoot + "/fabric-meta")
                 .replace("https://maven.fabricmc.net", apiRoot + "/maven")
-                .replace("https://authlib-injector.yushi.moe", apiRoot + "/mirrors/authlib-injector");
+                .replace("https://authlib-injector.yushi.moe", apiRoot + "/mirrors/authlib-injector")
+                .replace("https://repo1.maven.org/maven2", "https://maven.aliyun.com/repository/central");
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CrashReportAnalyzer.java
Patch:
@@ -44,7 +44,7 @@ public enum Rule {
 
         // Maybe software rendering? Suggest user for using a graphics card.
         OPENGL_NOT_SUPPORTED(Pattern.compile("The driver does not appear to support OpenGL")),
-        GRAPHICS_DRIVER(Pattern.compile("(Pixel format not accelerated|Couldn't set pixel format|net\\.minecraftforge\\.fml.client\\.SplashProgress|org\\.lwjgl\\.LWJGLException|EXCEPTION_ACCESS_VIOLATION(.|\\n|\\r)+# C {2}\\[(ig|atio|nvoglv))")),
+        GRAPHICS_DRIVER(Pattern.compile("(Pixel format not accelerated|GLX: Failed to create context: GLXBadFBConfig|Couldn't set pixel format|net\\.minecraftforge\\.fml.client\\.SplashProgress|org\\.lwjgl\\.LWJGLException|EXCEPTION_ACCESS_VIOLATION(.|\\n|\\r)+# C {2}\\[(ig|atio|nvoglv))")),
         // Out of memory
         OUT_OF_MEMORY(Pattern.compile("(java\\.lang\\.OutOfMemoryError|The system is out of physical RAM or swap space)")),
         // Memory exceeded

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilSession.java
Patch:
@@ -78,6 +78,8 @@ public Map<String, String> getUserProperties() {
     }
 
     public static YggdrasilSession fromStorage(Map<?, ?> storage) {
+        Objects.requireNonNull(storage);
+
         UUID uuid = tryCast(storage.get("uuid"), String.class).map(UUIDTypeAdapter::fromString).orElseThrow(() -> new IllegalArgumentException("uuid is missing"));
         String name = tryCast(storage.get("displayName"), String.class).orElseThrow(() -> new IllegalArgumentException("displayName is missing"));
         String clientToken = tryCast(storage.get("clientToken"), String.class).orElseThrow(() -> new IllegalArgumentException("clientToken is missing"));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/CompressingUtils.java
Patch:
@@ -23,6 +23,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.nio.Buffer;
 import java.nio.ByteBuffer;
 import java.nio.CharBuffer;
 import java.nio.charset.*;
@@ -72,7 +73,7 @@ public static boolean testEncoding(ZipFile zipFile, Charset encoding) throws IOE
             int clen = (int)(ba.length * cd.maxCharsPerByte());
             if (clen == 0) continue;
             if (clen <= cb.capacity())
-                cb.clear();
+                ((Buffer) cb).clear(); // cast to prevent "java.lang.NoSuchMethodError: java.nio.CharBuffer.clear()Ljava/nio/CharBuffer;" when compiling with Java 9+
             else
                 cb = CharBuffer.allocate(clen);
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DependencyManager.java
Patch:
@@ -49,8 +49,8 @@ public interface DependencyManager {
     Task<?> checkGameCompletionAsync(Version version, boolean integrityCheck);
 
     /**
-     * Check if the game is complete.
-     * Check libraries, assets files and so on.
+     * Check if libraries of this version in complete.
+     * If not, download missing libraries if possible.
      *
      * @return the task to check game completion.
      */

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameLibrariesTask.java
Patch:
@@ -109,7 +109,8 @@ public void execute() {
         libraries.stream().filter(Library::appliesToCurrentEnvironment).forEach(library -> {
             File file = dependencyManager.getGameRepository().getLibraryFile(version, library);
             if (shouldDownloadLibrary(dependencyManager.getGameRepository(), version, library, integrityCheck)) {
-                dependencies.add(new LibraryDownloadTask(dependencyManager, file, library));
+                if (library.hasDownloadURL() || !"optifine".equals(library.getGroupId()))
+                    dependencies.add(new LibraryDownloadTask(dependencyManager, file, library));
             } else {
                 dependencyManager.getCacheRepository().tryCacheLibrary(library, file.toPath());
             }

File: HMCLCore/src/test/java/org/jackhuang/hmcl/util/gson/DateTypeAdapterTest.java
Patch:
@@ -4,6 +4,7 @@
 import org.junit.Test;
 
 import java.time.LocalDateTime;
+import java.time.ZoneId;
 import java.time.ZoneOffset;
 
 public class DateTypeAdapterTest {
@@ -22,7 +23,7 @@ public void parse() {
 
         Assert.assertEquals(
                 LocalDateTime.of(2021, 1, 3, 0, 53, 34)
-                        .atOffset(ZoneOffset.UTC).toInstant(),
+                        .atZone(ZoneId.systemDefault()).toInstant(),
                 DateTypeAdapter.deserializeToDate("2021-01-03T00:53:34").toInstant());
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -610,7 +610,7 @@ public Task<JavaVersion> getJavaVersion(VersionNumber gameVersion, Version versi
     public Task<JavaVersion> getJavaVersion(VersionNumber gameVersion, Version version, boolean checkJava) {
         return Task.runAsync(Schedulers.javafx(), () -> {
             if (StringUtils.isBlank(getJava())) {
-                setJava(StringUtils.isBlank(getJavaDir()) ? "Default" : "Custom");
+                setJava(StringUtils.isBlank(getJavaDir()) ? "Auto" : "Custom");
             }
         }).thenSupplyAsync(() -> {
             try {
@@ -633,7 +633,7 @@ public Task<JavaVersion> getJavaVersion(VersionNumber gameVersion, Version versi
                             .collect(Collectors.toList());
                     if (matchedJava.isEmpty()) {
                         runInFX(() -> {
-                            setJava("Default");
+                            setJava("Auto");
                         });
                         return JavaVersion.fromCurrentEnvironment();
                     } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -47,6 +47,7 @@ private static final class Hole {
                 pair("javafx.fxml.LoadException", i18n("crash.NoClassDefFound")),
                 pair("Location is not set", i18n("crash.NoClassDefFound")),
                 pair("UnsatisfiedLinkError", i18n("crash.user_fault")),
+                pair("java.time.zone.ZoneRulesException: Unable to load TZDB time-zone rules", i18n("crash.user_fault")),
                 pair("java.lang.NoClassDefFoundError", i18n("crash.NoClassDefFound")),
                 pair("org.jackhuang.hmcl.util.ResourceNotFoundError", i18n("crash.NoClassDefFound")),
                 pair("java.lang.VerifyError", i18n("crash.NoClassDefFound")),

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackSelectionPage.java
Patch:
@@ -23,6 +23,7 @@
 import javafx.fxml.FXML;
 import javafx.scene.layout.StackPane;
 import javafx.stage.FileChooser;
+import org.jackhuang.hmcl.game.ModpackHelper;
 import org.jackhuang.hmcl.mod.server.ServerModpackManifest;
 import org.jackhuang.hmcl.task.FileDownloadTask;
 import org.jackhuang.hmcl.task.GetTask;
@@ -33,7 +34,6 @@
 import org.jackhuang.hmcl.ui.wizard.WizardPage;
 import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
-import org.jackhuang.hmcl.util.io.FileUtils;
 
 import java.io.File;
 import java.io.IOException;
@@ -67,7 +67,7 @@ public ModpackSelectionPage(WizardController controller) {
             Platform.runLater(controller::onNext);
         }
 
-        FXUtils.applyDragListener(this, it -> "zip".equals(FileUtils.getExtension(it)), modpacks -> {
+        FXUtils.applyDragListener(this, ModpackHelper::isFileModpackByExtension, modpacks -> {
             File modpack = modpacks.get(0);
             controller.getSettings().put(MODPACK_FILE, modpack);
             controller.onNext();
@@ -78,7 +78,7 @@ public ModpackSelectionPage(WizardController controller) {
     private void onChooseLocalFile() {
         FileChooser chooser = new FileChooser();
         chooser.setTitle(i18n("modpack.choose"));
-        chooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(i18n("modpack"), "*.zip"));
+        chooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(i18n("modpack"), "*.zip", "*.mrpack"));
         File selectedFile = chooser.showOpenDialog(Controllers.getStage());
         if (selectedFile == null) {
             Platform.runLater(controller::onEnd);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -261,7 +261,7 @@ protected ModDownloadPageSkin(DownloadPage control) {
 
                 if (getSkinnable().mod != null) {
                     JFXHyperlink openMcmodButton = new JFXHyperlink(i18n("mods.mcmod"));
-                    openMcmodButton.setOnAction(e -> FXUtils.openLink(ModManager.getMcmodUrl(getSkinnable().mod.getMcmod())));
+                    openMcmodButton.setOnAction(e -> FXUtils.openLink(getSkinnable().translations.getMcmodUrl(getSkinnable().mod)));
                     descriptionPane.getChildren().add(openMcmodButton);
 
                     if (StringUtils.isNotBlank(getSkinnable().mod.getMcbbs())) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -261,7 +261,7 @@ static class ModInfoDialog extends JFXDialogLayout {
                 mcmodButton.setText(i18n("mods.mcmod.page"));
                 mcmodButton.setOnAction(e -> {
                     fireEvent(new DialogCloseEvent());
-                    FXUtils.openLink(ModManager.getMcmodUrl(modInfo.getMod().getMcmod()));
+                    FXUtils.openLink(ModTranslations.MOD.getMcmodUrl(modInfo.getMod()));
                 });
                 getActions().add(mcmodButton);
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/RemoteModRepository.java
Patch:
@@ -17,6 +17,8 @@
  */
 package org.jackhuang.hmcl.mod;
 
+import org.jetbrains.annotations.Nullable;
+
 import java.io.IOException;
 import java.nio.file.Path;
 import java.util.List;
@@ -49,7 +51,7 @@ enum SortOrder {
         DESC
     }
 
-    Stream<RemoteMod> search(String gameVersion, Category category, int pageOffset, int pageSize, String searchFilter, SortType sortType, SortOrder sortOrder)
+    Stream<RemoteMod> search(String gameVersion, @Nullable Category category, int pageOffset, int pageSize, String searchFilter, SortType sortType, SortOrder sortOrder)
             throws IOException;
 
     Optional<RemoteMod.Version> getRemoteVersionByLocalFile(LocalModFile localModFile, Path file) throws IOException;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseForgeRemoteModRepository.java
Patch:
@@ -24,6 +24,7 @@
 import org.jackhuang.hmcl.util.MurmurHash2;
 import org.jackhuang.hmcl.util.io.HttpRequest;
 import org.jackhuang.hmcl.util.io.JarUtils;
+import org.jetbrains.annotations.Nullable;
 
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
@@ -92,7 +93,7 @@ private String toSortOrder(SortOrder sortOrder) {
     }
 
     @Override
-    public Stream<RemoteMod> search(String gameVersion, RemoteModRepository.Category category, int pageOffset, int pageSize, String searchFilter, SortType sortType, SortOrder sortOrder) throws IOException {
+    public Stream<RemoteMod> search(String gameVersion, @Nullable RemoteModRepository.Category category, int pageOffset, int pageSize, String searchFilter, SortType sortType, SortOrder sortOrder) throws IOException {
         int categoryId = 0;
         if (category != null) categoryId = ((CurseAddon.Category) category.getSelf()).getId();
         Response<List<CurseAddon>> response = HttpRequest.GET(PREFIX + "/v1/mods/search",

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/modrinth/ModrinthRemoteModRepository.java
Patch:
@@ -28,6 +28,7 @@
 import org.jackhuang.hmcl.util.io.HttpRequest;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 import org.jackhuang.hmcl.util.io.ResponseCodeException;
+import org.jetbrains.annotations.Nullable;
 
 import java.io.IOException;
 import java.nio.file.Path;
@@ -73,13 +74,13 @@ private static String convertSortType(SortType sortType) {
     }
 
     @Override
-    public Stream<RemoteMod> search(String gameVersion, RemoteModRepository.Category category, int pageOffset, int pageSize, String searchFilter, SortType sort, SortOrder sortOrder) throws IOException {
+    public Stream<RemoteMod> search(String gameVersion, @Nullable RemoteModRepository.Category category, int pageOffset, int pageSize, String searchFilter, SortType sort, SortOrder sortOrder) throws IOException {
         List<List<String>> facets = new ArrayList<>();
         facets.add(Collections.singletonList("project_type:" + projectType));
         if (StringUtils.isNotBlank(gameVersion)) {
             facets.add(Collections.singletonList("versions:" + gameVersion));
         }
-        if (StringUtils.isNotBlank(category.getId())) {
+        if (category != null && StringUtils.isNotBlank(category.getId())) {
             facets.add(Collections.singletonList("categories:" + category.getId()));
         }
         Map<String, String> query = mapOf(

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/java/JavaRepository.java
Patch:
@@ -59,7 +59,7 @@ public static Stream<Optional<Path>> findMinecraftRuntimeDirs() {
                 return Stream.of(FileUtils.tryGetPath(System.getProperty("user.home", ".minecraft/runtime")));
             case OSX:
                 return Stream.of(FileUtils.tryGetPath("/Library/Application Support/minecraft/runtime"),
-                        FileUtils.tryGetPath(System.getProperty("user.home"), "/Library/Application Support/minecraft/runtime"));
+                        FileUtils.tryGetPath(System.getProperty("user.home"), "Library/Application Support/minecraft/runtime"));
             default:
                 return Stream.empty();
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -204,14 +204,14 @@ public void saveAs(RemoteMod.Version file) {
             return;
         }
 
-        Controllers.taskDialog(Task.composeAsync(() -> {
+        Controllers.taskDialog(
+                Task.composeAsync(() -> {
                     FileDownloadTask task = new FileDownloadTask(NetworkUtils.toURL(file.getFile().getUrl()), dest, file.getFile().getIntegrityCheck());
                     task.setName(file.getName());
                     return task;
                 }),
                 i18n("message.downloading"),
-                TaskCancellationAction.NORMAL
-        );
+                TaskCancellationAction.NORMAL);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskListPane.java
Patch:
@@ -195,7 +195,7 @@ public void onPropertiesUpdate(Task<?> task) {
                 if (task instanceof Task.CountTask) {
                     runInFX(() -> {
                         stageNodes.stream()
-                                .filter(x -> x.stage.equals(((Task.CountTask) task).getCountStage()))
+                                .filter(x -> x.stage.equals(((Task<?>.CountTask) task).getCountStage()))
                                 .findAny()
                                 .ifPresent(StageNode::count);
                     });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -40,6 +40,7 @@
 import org.jackhuang.hmcl.ui.versions.GameAdvancedListItem;
 import org.jackhuang.hmcl.ui.versions.Versions;
 import org.jackhuang.hmcl.upgrade.UpdateChecker;
+import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
@@ -198,7 +199,7 @@ private void onRefreshedVersions(HMCLGameRepository repository) {
                                                 modpack)
                                         .executor())
                                 .thenAcceptAsync(Schedulers.javafx(), executor -> {
-                                    Controllers.taskDialog(executor, i18n("modpack.installing"));
+                                    Controllers.taskDialog(executor, i18n("modpack.installing"), TaskCancellationAction.NO_CANCEL);
                                     executor.start();
                                 }).start();
                     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -40,6 +40,7 @@
 import org.jackhuang.hmcl.util.HMCLService;
 import org.jackhuang.hmcl.util.Result;
 import org.jackhuang.hmcl.util.StringUtils;
+import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.io.ChecksumMismatchException;
 import org.jetbrains.annotations.Nullable;
 
@@ -196,7 +197,7 @@ private void downloadCatoIfNecessary() {
                             Controllers.showToast(i18n("multiplayer.download.success"));
                         }
                     }).executor();
-            Controllers.taskDialog(executor, i18n("multiplayer.download"));
+            Controllers.taskDialog(executor, i18n("multiplayer.download"), TaskCancellationAction.NORMAL);
             executor.start();
         } else {
             setDisabled(false);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -31,6 +31,7 @@
 import org.jackhuang.hmcl.ui.*;
 import org.jackhuang.hmcl.ui.download.UpdateInstallerWizardProvider;
 import org.jackhuang.hmcl.util.Lang;
+import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.io.FileUtils;
 
 import java.io.File;
@@ -161,7 +162,7 @@ public void onStop(boolean success, TaskExecutor executor) {
                 });
             }
         });
-        Controllers.taskDialog(executor, i18n("install.installer.install_offline"));
+        Controllers.taskDialog(executor, i18n("install.installer.install_offline"), TaskCancellationAction.NO_CANCEL);
         executor.start();
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -35,6 +35,7 @@
 import org.jackhuang.hmcl.ui.construct.MessageDialogPane;
 import org.jackhuang.hmcl.ui.construct.PageAware;
 import org.jackhuang.hmcl.util.Logging;
+import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.io.FileUtils;
 
 import java.io.File;
@@ -194,8 +195,7 @@ public void checkUpdates() {
                             }
                         })
                         .withStagesHint(Collections.singletonList("mods.check_updates")),
-                i18n("update.checking"), pane -> {
-                });
+                i18n("update.checking"), TaskCancellationAction.NORMAL);
     }
 
     public void download() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModUpdatesPage.java
Patch:
@@ -39,6 +39,7 @@
 import org.jackhuang.hmcl.ui.construct.*;
 import org.jackhuang.hmcl.ui.decorator.DecoratorPage;
 import org.jackhuang.hmcl.util.Pair;
+import org.jackhuang.hmcl.util.TaskCancellationAction;
 import org.jackhuang.hmcl.util.i18n.I18n;
 
 import java.net.URL;
@@ -146,8 +147,7 @@ private void updateMods() {
                     }
                 }),
                 i18n("mods.check_updates.update"),
-                t -> {
-                });
+                TaskCancellationAction.NORMAL);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/TaskExecutorDialogWizardDisplayer.java
Patch:
@@ -26,6 +26,7 @@
 import org.jackhuang.hmcl.ui.construct.MessageDialogPane.MessageType;
 import org.jackhuang.hmcl.ui.construct.TaskExecutorDialogPane;
 import org.jackhuang.hmcl.util.StringUtils;
+import org.jackhuang.hmcl.util.TaskCancellationAction;
 
 import java.util.Map;
 import java.util.Queue;
@@ -41,10 +42,10 @@ public TaskExecutorDialogWizardDisplayer(Queue<Object> cancelQueue) {
 
     @Override
     public void handleTask(Map<String, Object> settings, Task<?> task) {
-        TaskExecutorDialogPane pane = new TaskExecutorDialogPane(it -> {
+        TaskExecutorDialogPane pane = new TaskExecutorDialogPane(new TaskCancellationAction(it -> {
             it.fireEvent(new DialogCloseEvent());
             onEnd();
-        });
+        }));
 
         pane.setTitle(i18n("message.doing"));
         if (settings.containsKey("title")) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -23,7 +23,6 @@
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.event.Event;
 import org.jackhuang.hmcl.event.EventManager;
-import org.jackhuang.hmcl.launch.StreamPump;
 import org.jackhuang.hmcl.task.FileDownloadTask;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.ui.FXUtils;
@@ -358,8 +357,8 @@ public static class CatoSession extends ManagedProcess {
 
             this.type = type;
             addRelatedThread(Lang.thread(this::waitFor, "CatoExitWaiter", true));
-            addRelatedThread(Lang.thread(new StreamPump(process.getInputStream(), this::checkCatoLog), "CatoInputStreamPump", true));
-            addRelatedThread(Lang.thread(new StreamPump(process.getErrorStream(), this::checkCatoLog), "CatoErrorStreamPump", true));
+            pumpInputStream(this::checkCatoLog);
+            pumpErrorStream(this::checkCatoLog);
 
             writer = new BufferedWriter(new OutputStreamWriter(process.getOutputStream(), StandardCharsets.UTF_8));
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -41,7 +41,6 @@
 import org.jackhuang.hmcl.ui.versions.Versions;
 import org.jackhuang.hmcl.upgrade.UpdateChecker;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
-import org.jackhuang.hmcl.util.io.FileUtils;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
 import java.io.File;
@@ -82,7 +81,7 @@ protected Skin createDefaultSkin() {
     private MainPage getMainPage() {
         if (mainPage == null) {
             MainPage mainPage = new MainPage();
-            FXUtils.applyDragListener(mainPage, it -> "zip".equals(FileUtils.getExtension(it)), modpacks -> {
+            FXUtils.applyDragListener(mainPage, ModpackHelper::isFileModpackByExtension, modpacks -> {
                 File modpack = modpacks.get(0);
                 Controllers.getDecorator().startWizard(
                         new ModpackInstallWizardProvider(Profiles.getSelectedProfile(), modpack),

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -190,7 +190,7 @@ public static Config fromJson(String json) throws JsonParseException {
     public Config() {
         // Default override for better-looking logs on Windows
         if (System.getProperty("os.name").startsWith("Windows")) {
-            this.fontFamily = new SimpleStringProperty("Consolas");
+            this.fontFamily.setValue("Consolas");
         }
         PropertyUtils.attachListener(this, helper);
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/OfflineAccountSkinPane.java
Patch:
@@ -186,7 +186,7 @@ public OfflineAccountSkinPane(OfflineAccount account) {
         });
 
         JFXHyperlink littleSkinLink = new JFXHyperlink(i18n("account.skin.type.little_skin"));
-        littleSkinLink.setOnAction(e -> FXUtils.openLink("https://mcskin.littleservice.cn/"));
+        littleSkinLink.setOnAction(e -> FXUtils.openLink("https://littleskin.cn/"));
         JFXButton cancelButton = new JFXButton(i18n("button.cancel"));
         cancelButton.getStyleClass().add("dialog-cancel");
         cancelButton.setOnAction(e -> fireEvent(new DialogCloseEvent()));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/Skin.java
Patch:
@@ -130,7 +130,7 @@ public Task<LoadedSkin> load(String username) {
                 });
             case LITTLE_SKIN:
             case CUSTOM_SKIN_LOADER_API:
-                String realCslApi = type == Type.LITTLE_SKIN ? "http://mcskin.littleservice.cn" : StringUtils.removeSuffix(cslApi, "/");
+                String realCslApi = type == Type.LITTLE_SKIN ? "https://littleskin.cn" : StringUtils.removeSuffix(cslApi, "/");
                 return Task.composeAsync(() -> new GetTask(new URL(String.format("%s/%s.json", realCslApi, username))))
                         .thenComposeAsync(json -> {
                             SkinJson result = JsonUtils.GSON.fromJson(json, SkinJson.class);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadListPage.java
Patch:
@@ -399,7 +399,7 @@ protected ModDownloadListPageSkin(DownloadListPage control) {
                     protected void updateControl(RemoteMod dataItem, boolean empty) {
                         if (empty) return;
                         ModTranslations.Mod mod = ModTranslations.getTranslationsByRepositoryType(getSkinnable().repository.getType()).getModByCurseForgeId(dataItem.getSlug());
-                        content.setTitle(mod != null ? mod.getDisplayName() : dataItem.getTitle());
+                        content.setTitle(mod != null && I18n.getCurrentLocale().getLocale() == Locale.CHINA ? mod.getDisplayName() : dataItem.getTitle());
                         content.setSubtitle(dataItem.getDescription());
                         content.getTags().setAll(dataItem.getCategories().stream()
                                 .map(category -> getSkinnable().getLocalizedCategory(category))

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -51,6 +51,7 @@
 import org.jackhuang.hmcl.ui.decorator.DecoratorPage;
 import org.jackhuang.hmcl.util.SimpleMultimap;
 import org.jackhuang.hmcl.util.StringUtils;
+import org.jackhuang.hmcl.util.i18n.I18n;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 import org.jetbrains.annotations.Nullable;
@@ -246,7 +247,7 @@ protected ModDownloadPageSkin(DownloadPage control) {
                 TwoLineListItem content = new TwoLineListItem();
                 HBox.setHgrow(content, Priority.ALWAYS);
                 ModTranslations.Mod mod = getSkinnable().translations.getModByCurseForgeId(getSkinnable().addon.getSlug());
-                content.setTitle(mod != null ? mod.getDisplayName() : getSkinnable().addon.getTitle());
+                content.setTitle(mod != null && I18n.getCurrentLocale().getLocale() == Locale.CHINA ? mod.getDisplayName() : getSkinnable().addon.getTitle());
                 content.setSubtitle(getSkinnable().addon.getDescription());
                 content.getTags().setAll(getSkinnable().addon.getCategories().stream()
                         .map(category -> getSkinnable().page.getLocalizedCategory(category))
@@ -351,7 +352,7 @@ private static final class DependencyModItem extends StackPane {
             getChildren().setAll(container);
 
             ModTranslations.Mod mod = ModTranslations.getTranslationsByRepositoryType(page.repository.getType()).getModByCurseForgeId(addon.getSlug());
-            content.setTitle(mod != null ? mod.getDisplayName() : addon.getTitle());
+            content.setTitle(mod != null && I18n.getCurrentLocale().getLocale() == Locale.CHINA ? mod.getDisplayName() : addon.getTitle());
             content.setSubtitle(addon.getDescription());
             content.getTags().setAll(addon.getCategories().stream()
                     .map(page::getLocalizedCategory)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModUpdatesPage.java
Patch:
@@ -39,11 +39,13 @@
 import org.jackhuang.hmcl.ui.construct.*;
 import org.jackhuang.hmcl.ui.decorator.DecoratorPage;
 import org.jackhuang.hmcl.util.Pair;
+import org.jackhuang.hmcl.util.i18n.I18n;
 
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
+import java.util.Locale;
 import java.util.function.Function;
 import java.util.stream.Collectors;
 
@@ -166,7 +168,7 @@ public ModUpdateCell(JFXListView<LocalModFile.ModUpdate> listView) {
         protected void updateControl(LocalModFile.ModUpdate item, boolean empty) {
             if (empty) return;
             ModTranslations.Mod mod = ModTranslations.MOD.getModById(item.getLocalMod().getId());
-            content.setTitle(mod != null ? mod.getDisplayName() : item.getCurrentVersion().getName());
+            content.setTitle(mod != null && I18n.getCurrentLocale().getLocale() == Locale.CHINA ? mod.getDisplayName() : item.getCurrentVersion().getName());
             content.setSubtitle(item.getLocalMod().getFileName());
             content.getTags().setAll();
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -96,7 +96,7 @@ public final class VersionsPage extends BorderPane implements WizardPage, Refres
     @FXML
     private StackPane center;
 
-    private VersionList<?> versionList;
+    private final VersionList<?> versionList;
     private CompletableFuture<?> executor;
 
     public VersionsPage(Navigation navigation, String title, String gameVersion, DownloadProvider downloadProvider, String libraryId, Runnable callback) {
@@ -144,7 +144,7 @@ public void updateItem(RemoteVersion remoteVersion, boolean empty) {
 
                 content.setTitle(remoteVersion.getSelfVersion());
                 if (remoteVersion.getReleaseDate() != null) {
-                    content.setSubtitle(Locales.DATE_TIME_FORMATTER.get().format(remoteVersion.getReleaseDate()));
+                    content.setSubtitle(Locales.DATE_TIME_FORMATTER.get().format(remoteVersion.getReleaseDate().toInstant()));
                 } else {
                     content.setSubtitle("");
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadListPage.java
Patch:
@@ -173,7 +173,7 @@ public void search(String userGameVersion, RemoteModRepository.Category category
             }
             return gameVersion;
         }).thenApplyAsync(gameVersion -> {
-            return repository.search(gameVersion, category, pageOffset, 50, searchFilter, sort);
+            return repository.search(gameVersion, category, pageOffset, 50, searchFilter, sort, RemoteModRepository.SortOrder.DESC);
         }).whenComplete(Schedulers.javafx(), (result, exception) -> {
             setLoading(false);
             if (exception == null) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeRemoteVersion.java
Patch:
@@ -23,7 +23,7 @@
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
 
-import java.time.Instant;
+import java.util.Date;
 import java.util.List;
 
 public class ForgeRemoteVersion extends RemoteVersion {
@@ -34,8 +34,8 @@ public class ForgeRemoteVersion extends RemoteVersion {
      * @param selfVersion the version string of the remote version.
      * @param url         the installer or universal jar original URL.
      */
-    public ForgeRemoteVersion(String gameVersion, String selfVersion, Instant instant, List<String> url) {
-        super(LibraryAnalyzer.LibraryType.FORGE.getPatchId(), gameVersion, selfVersion, instant, url);
+    public ForgeRemoteVersion(String gameVersion, String selfVersion, Date releaseDate, List<String> url) {
+        super(LibraryAnalyzer.LibraryType.FORGE.getPatchId(), gameVersion, selfVersion, releaseDate, url);
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteVersion.java
Patch:
@@ -25,7 +25,7 @@
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.Immutable;
 
-import java.time.Instant;
+import java.util.Date;
 import java.util.List;
 
 /**
@@ -37,7 +37,7 @@ public final class GameRemoteVersion extends RemoteVersion {
 
     private final ReleaseType type;
 
-    public GameRemoteVersion(String gameVersion, String selfVersion, List<String> url, ReleaseType type, Instant releaseDate) {
+    public GameRemoteVersion(String gameVersion, String selfVersion, List<String> url, ReleaseType type, Date releaseDate) {
         super(LibraryAnalyzer.LibraryType.MINECRAFT.getPatchId(), gameVersion, selfVersion, releaseDate, getReleaseType(type), url);
         this.type = type;
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameVersionList.java
Patch:
@@ -59,7 +59,7 @@ public CompletableFuture<?> refreshAsync() {
                                     remoteVersion.getGameVersion(),
                                     remoteVersion.getGameVersion(),
                                     Collections.singletonList(remoteVersion.getUrl()),
-                                    remoteVersion.getType(), remoteVersion.getReleaseTime().toInstant()));
+                                    remoteVersion.getType(), remoteVersion.getReleaseTime()));
                         }
                     } finally {
                         lock.writeLock().unlock();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -195,7 +195,7 @@ public static JavaVersion fromExecutable(Path executable) throws IOException {
 
         JavaVersion javaVersion = new JavaVersion(executable, version, platform);
         if (javaVersion.getParsedVersion() == UNKNOWN)
-            throw new IOException("Unrecognized Java version " + version);
+            throw new IOException("Unrecognized Java version " + version + " at " + executable);
         fromExecutableCache.put(executable, javaVersion);
         return javaVersion;
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DatapackListPageSkin.java
Patch:
@@ -82,7 +82,6 @@ class DatapackListPageSkin extends SkinBase<DatapackListPage> {
 
                 {
                     Region clippedContainer = (Region)listView.lookup(".clipped-container");
-                    setPrefWidth(0);
                     HBox container = new HBox(8);
                     container.setPadding(new Insets(0, 0, 0, 6));
                     container.setAlignment(Pos.CENTER_LEFT);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -551,7 +551,7 @@ private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting
                 }
             }
 
-            if (!future.isDone()) {
+            if (!suggested && !future.isDone()) {
                 future.complete(javaVersion);
             }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/CompressingUtils.java
Patch:
@@ -227,7 +227,7 @@ public static String readTextZipEntry(Path zipFile, String name, Charset encodin
     public static Optional<String> readTextZipEntryQuietly(File file, String name) {
         try {
             return Optional.of(readTextZipEntry(file, name));
-        } catch (IOException e) {
+        } catch (IOException | NullPointerException e) {
             return Optional.empty();
         }
     }
@@ -242,7 +242,7 @@ public static Optional<String> readTextZipEntryQuietly(File file, String name) {
     public static Optional<String> readTextZipEntryQuietly(Path file, String name, Charset encoding) {
         try {
             return Optional.of(readTextZipEntry(file, name, encoding));
-        } catch (IOException e) {
+        } catch (IOException | NullPointerException e) {
             return Optional.empty();
         }
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/java/JavaDownloadTask.java
Patch:
@@ -116,6 +116,7 @@ public void execute() throws Exception {
                 Files.createDirectories(dest);
             } else if (entry.getValue() instanceof RemoteFiles.RemoteLink) {
                 RemoteFiles.RemoteLink link = ((RemoteFiles.RemoteLink) entry.getValue());
+                Files.deleteIfExists(dest);
                 Files.createSymbolicLink(dest, Paths.get(link.getTarget()));
             }
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -133,7 +133,9 @@ private static CompletableFuture<CatoSession> startCato(String token, State stat
                 throw e;
             }
 
-            String[] commands = new String[]{exe.toString(), "-auth.token", token};
+            String[] commands = StringUtils.isBlank(token)
+                    ? new String[]{exe.toString()}
+                    : new String[]{exe.toString(), "-auth.token", token};
             Process process = new ProcessBuilder()
                     .command(commands)
                     .start();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -373,10 +373,11 @@ private String localizeErrorMessage(Throwable t, boolean isStaticToken, Function
             }
         } else if (e instanceof MultiplayerManager.CatoExitException) {
             LOG.info("Cato exited accidentally");
+            int exitCode = ((MultiplayerManager.CatoExitException) e).getExitCode();
             if (!((MultiplayerManager.CatoExitException) e).isReady()) {
-                return i18n("multiplayer.exit.before_ready");
+                return i18n("multiplayer.exit.before_ready", exitCode);
             } else {
-                return i18n("multiplayer.exit.after_ready");
+                return i18n("multiplayer.exit.after_ready", exitCode);
             }
         } else if (e instanceof ChecksumMismatchException) {
             return i18n("exception.artifact_malformed");

File: HMCL/src/test/java/moe/mickey/minecraft/skin/fx/SkinCanvasSupport.java
Patch:
@@ -101,7 +101,7 @@ public void accept(SkinCanvas t) {
                             Stage stage = new Stage();
                             stage.setTitle(title);
                             SkinCanvas canvas = Test.createSkinCanvas();
-                            canvas.updateSkin(new Image(input), skin.getName().contains("[alex]"));
+                            canvas.updateSkin(new Image(input), skin.getName().contains("[alex]"), null);
                             Scene scene = new Scene(canvas);
                             stage.setScene(scene);
                             stage.show();

File: HMCL/src/test/java/moe/mickey/minecraft/skin/fx/test/Test.java
Patch:
@@ -17,7 +17,7 @@ public class Test extends Application {
 
     public static SkinCanvas createSkinCanvas() {
         SkinCanvas canvas = new SkinCanvas(SkinCanvas.STEVE, 400, 400, true);
-        canvas.getAnimationplayer().addSkinAnimation(new SkinAniWavingArms(100, 2000, 7.5, canvas), new SkinAniRunning(100, 100, 30, canvas));
+        canvas.getAnimationPlayer().addSkinAnimation(new SkinAniWavingArms(100, 2000, 7.5, canvas), new SkinAniRunning(100, 100, 30, canvas));
         FunctionHelper.alwaysB(Consumer<SkinCanvas>::accept, canvas, new SkinCanvasSupport.Mouse(.5), new SkinCanvasSupport.Drag(TITLE));
         return canvas;
     }

File: HMCL/src/main/java/moe/mickey/minecraft/skin/fx/SkinCanvas.java
Patch:
@@ -125,8 +125,7 @@ public void updateSkin(Image skin, boolean isSlim, final @Nullable Image cape) {
             int multiple = Math.max((int) (1024 / skin.getWidth()), 1);
             if (multiple > 1)
                 this.skin = SkinHelper.enlarge(this.skin, multiple, multiple);
-            if (this.isSlim != isSlim)
-                updateSkinModel(isSlim, cape != null);
+            updateSkinModel(isSlim, cape != null);
             bindMaterial(root);
         }
     }

File: HMCL/src/main/java/moe/mickey/minecraft/skin/fx/SkinAnimation.java
Patch:
@@ -12,7 +12,6 @@ public class SkinAnimation {
     protected int weight, left;
     protected List<SkinTransition> transitions;
 
-    @Deprecated
     public SkinAnimation() {
         this.transitions = new ArrayList<>();
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LogExporter.java
Patch:
@@ -17,7 +17,6 @@
  */
 package org.jackhuang.hmcl.game;
 
-import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.util.Logging;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.io.Zipper;
@@ -77,6 +76,6 @@ public static CompletableFuture<Void> exportLogs(Path zipFile, DefaultGameReposi
             } catch (IOException e) {
                 throw new UncheckedIOException(e);
             }
-        }, Schedulers.io());
+        });
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadListPage.java
Patch:
@@ -317,6 +317,7 @@ protected ModDownloadListPageSkin(DownloadListPage control) {
                 sortComboBox.prefWidthProperty().bind(sortStackPane.widthProperty());
                 sortComboBox.getStyleClass().add("fit-width");
                 sortComboBox.setConverter(stringConverter(sortType -> i18n("curse.sort." + sortType.name().toLowerCase(Locale.ROOT))));
+                sortComboBox.getItems().setAll(RemoteModRepository.SortType.values());
                 sortComboBox.getSelectionModel().select(0);
                 searchPane.addRow(rowIndex++, new Label(i18n("mods.category")), categoryStackPane, new Label(i18n("search.sort")), sortStackPane);
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccount.java
Patch:
@@ -159,7 +159,7 @@ public Arguments getLaunchArguments(LaunchOptions options) throws IOException {
             try {
                 server.addCharacter(new YggdrasilServer.Character(uuid, username, skin.load(username).run()));
             } catch (IOException e) {
-                throw e;
+                // ignore
             } catch (Exception e) {
                 throw new IOException(e);
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerClient.java
Patch:
@@ -54,11 +54,11 @@ public MultiplayerClient(String id, int port) {
         setDaemon(true);
     }
 
-    public void setGamePort(int gamePort) {
+    public synchronized void setGamePort(int gamePort) {
         this.gamePort = gamePort;
     }
 
-    public int getGamePort() {
+    public synchronized int getGamePort() {
         return gamePort;
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/UpdateInstallerWizardProvider.java
Patch:
@@ -41,6 +41,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.CancellationException;
 import java.util.zip.ZipException;
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
@@ -173,6 +174,8 @@ public static void alertFailureMessage(Exception exception, Runnable next) {
         } else if (exception instanceof VersionMismatchException) {
             VersionMismatchException e = ((VersionMismatchException) exception);
             Controllers.dialog(i18n("install.failed.version_mismatch", e.getExpect(), e.getActual()), i18n("install.failed"), MessageDialogPane.MessageType.ERROR, next);
+        } else if (exception instanceof CancellationException) {
+            // Ignore cancel
         } else {
             Controllers.dialog(StringUtils.getStackTrace(exception), i18n("install.failed"), MessageDialogPane.MessageType.ERROR, next);
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadListPage.java
Patch:
@@ -118,7 +118,7 @@ public void loadVersion(Profile profile, String version) {
 
         if (!searchInitialized) {
             searchInitialized = true;
-            search("", null, 0, "", 0);
+            search("", null, 0, "", RemoteModRepository.SortType.DATE_CREATED);
         }
 
         if (versionSelection) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModDownloadListPage.java
Patch:
@@ -48,7 +48,7 @@ public ModDownloadListPage(DownloadPage.DownloadCallback callback, boolean versi
     private class Repository implements RemoteModRepository {
 
         @Override
-        public Stream<RemoteMod> search(String gameVersion, Category category, int pageOffset, int pageSize, String searchFilter, int sort) throws IOException {
+        public Stream<RemoteMod> search(String gameVersion, Category category, int pageOffset, int pageSize, String searchFilter, SortType sort) throws IOException {
             String newSearchFilter;
             if (StringUtils.CHINESE_PATTERN.matcher(searchFilter).find()) {
                 List<ModTranslations.Mod> mods = ModTranslations.searchMod(searchFilter);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseForgeRemoteModRepository.java
Patch:
@@ -63,10 +63,10 @@ public List<CurseAddon> searchPaginated(String gameVersion, int category, int pa
     }
 
     @Override
-    public Stream<RemoteMod> search(String gameVersion, RemoteModRepository.Category category, int pageOffset, int pageSize, String searchFilter, int sort) throws IOException {
+    public Stream<RemoteMod> search(String gameVersion, RemoteModRepository.Category category, int pageOffset, int pageSize, String searchFilter, SortType sort) throws IOException {
         int categoryId = 0;
         if (category != null) categoryId = ((Category) category.getSelf()).getId();
-        return searchPaginated(gameVersion, categoryId, pageOffset, pageSize, searchFilter, sort).stream()
+        return searchPaginated(gameVersion, categoryId, pageOffset, pageSize, searchFilter, sort.ordinal()).stream()
                 .map(CurseAddon::toMod);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -52,10 +52,8 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import static org.jackhuang.hmcl.util.Lang.mapOf;
 import static org.jackhuang.hmcl.util.Lang.wrap;
 import static org.jackhuang.hmcl.util.Logging.LOG;
-import static org.jackhuang.hmcl.util.Pair.pair;
 
 /**
  * Cato Management.

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DownloadPage.java
Patch:
@@ -198,7 +198,7 @@ public void saveAs(RemoteMod.Version file) {
         }
 
         Controllers.taskDialog(
-                new FileDownloadTask(NetworkUtils.toURL(file.getFile().getUrl()), dest).executor(true),
+                new FileDownloadTask(NetworkUtils.toURL(file.getFile().getUrl()), dest, file.getFile().getIntegrityCheck()).executor(true),
                 i18n("message.downloading")
         );
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricAPIVersionList.java
Patch:
@@ -20,7 +20,7 @@
 import org.jackhuang.hmcl.download.DownloadProvider;
 import org.jackhuang.hmcl.download.VersionList;
 import org.jackhuang.hmcl.mod.RemoteMod;
-import org.jackhuang.hmcl.mod.curse.CurseForgeRemoteModRepository;
+import org.jackhuang.hmcl.mod.modrinth.ModrinthRemoteModRepository;
 import org.jackhuang.hmcl.util.Lang;
 
 import java.util.Collection;
@@ -47,9 +47,9 @@ public boolean hasType() {
     @Override
     public CompletableFuture<?> refreshAsync() {
         return CompletableFuture.runAsync(wrap(() -> {
-            for (RemoteMod.Version modVersion : Lang.toIterable(CurseForgeRemoteModRepository.MODS.getRemoteVersionsById("306612"))) {
+            for (RemoteMod.Version modVersion : Lang.toIterable(ModrinthRemoteModRepository.INSTANCE.getRemoteVersionsById("P7dR8mSH"))) {
                 for (String gameVersion : modVersion.getGameVersions()) {
-                    versions.put(gameVersion, new FabricAPIRemoteVersion(gameVersion, modVersion.getName(), modVersion.getName(), modVersion.getDatePublished(),
+                    versions.put(gameVersion, new FabricAPIRemoteVersion(gameVersion, modVersion.getVersion(), modVersion.getName(), modVersion.getDatePublished(), modVersion,
                             Collections.singletonList(modVersion.getFile().getUrl())));
                 }
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/RemoteModRepository.java
Patch:
@@ -61,6 +61,7 @@ public List<Category> getSubcategories() {
     }
 
     String[] DEFAULT_GAME_VERSIONS = new String[]{
+            "1.18.1", "1.18",
             "1.17.1", "1.17",
             "1.16.5", "1.16.4", "1.16.3", "1.16.2", "1.16.1", "1.16",
             "1.15.2", "1.15.1", "1.15",

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/AboutPage.java
Patch:
@@ -167,9 +167,9 @@ public AboutPage() {
             jstun.setExternalLink("https://github.com/tking/JSTUN");
 
             IconedTwoLineListItem minecraftJFXSkin = new IconedTwoLineListItem();
-            jstun.setTitle("minecraft-jfx-skin");
-            jstun.setSubtitle("Copyright (c) 2016 InfinityStudio.\nLicensed under the GPL 3.");
-            jstun.setExternalLink("https://github.com/InfinityStudio/minecraft-jfx-skin");
+            minecraftJFXSkin.setTitle("minecraft-jfx-skin");
+            minecraftJFXSkin.setSubtitle("Copyright (c) 2016 InfinityStudio.\nLicensed under the GPL 3.");
+            minecraftJFXSkin.setExternalLink("https://github.com/InfinityStudio/minecraft-jfx-skin");
 
             dep.getContent().setAll(javafx, jfoenix, gson, xz, fxgson, constantPoolScanner, openNBT, jstun, minecraftJFXSkin);
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -328,7 +328,7 @@ public void globalizeVersionSetting(String id) {
             vs.setUsesGlobal(true);
     }
 
-    public LaunchOptions getLaunchOptions(String version, JavaVersion javaVersion, File gameDir) {
+    public LaunchOptions getLaunchOptions(String version, JavaVersion javaVersion, File gameDir, boolean makeLaunchScript) {
         VersionSetting vs = getVersionSetting(version);
 
         LaunchOptions.Builder builder = new LaunchOptions.Builder()
@@ -358,7 +358,8 @@ public LaunchOptions getLaunchOptions(String version, JavaVersion javaVersion, F
                 .setNativesDir(vs.getNativesDir())
                 .setProcessPriority(vs.getProcessPriority())
                 .setUseNativeGLFW(vs.isUseNativeGLFW())
-                .setUseNativeOpenAL(vs.isUseNativeOpenAL());
+                .setUseNativeOpenAL(vs.isUseNativeOpenAL())
+                .setDaemon(!makeLaunchScript && vs.getLauncherVisibility().isDaemon());
         if (config().hasProxy()) {
             builder.setProxy(ProxyManager.getProxy());
             if (config().hasProxyAuth()) {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -172,7 +172,7 @@ else if (McbbsModpackLocalInstallTask.MODPACK_TYPE.equals(configuration.getType(
                     }
                 }).withStage("launch.state.logging_in"))
                 .thenComposeAsync(authInfo -> Task.supplyAsync(() -> {
-                    LaunchOptions launchOptions = repository.getLaunchOptions(selectedVersion, javaVersionRef.get(), profile.getGameDir());
+                    LaunchOptions launchOptions = repository.getLaunchOptions(selectedVersion, javaVersionRef.get(), profile.getGameDir(), scriptFile != null);
                     return new HMCLGameLauncher(
                             repository,
                             version,

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -132,7 +132,7 @@ private static CompletableFuture<CatoSession> startCato(String token, State stat
                 throw e;
             }
 
-            String[] commands = new String[]{exe.toString(), "--token", StringUtils.isBlank(token) ? "new" : token};
+            String[] commands = new String[]{exe.toString(), "-client.token", StringUtils.isBlank(token) ? "new" : token};
             Process process = new ProcessBuilder()
                     .command(commands)
                     .start();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/FeedbackPage.java
Patch:
@@ -128,7 +128,7 @@ public FeedbackPage() {
                     container.setPickOnBounds(false);
                     container.setAlignment(Pos.CENTER_LEFT);
                     HBox.setHgrow(content, Priority.ALWAYS);
-                    content.setMouseTransparent(true);
+                    content.setMouseTransparent(false);
                     setSelectable();
 
                     likeButton.getStyleClass().add("toggle-icon4");
@@ -152,7 +152,7 @@ protected void updateControl(FeedbackResponse feedback, boolean empty) {
                             "#" + feedback.getId(),
                             i18n("feedback.state." + feedback.getState().name().toLowerCase(Locale.US)),
                             i18n("feedback.type." + feedback.getType().name().toLowerCase(Locale.US)));
-                    container.setOnMouseClicked(e -> {
+                    content.setOnMouseClicked(e -> {
                         getFeedback(feedback.getId())
                                 .thenAcceptAsync(Schedulers.javafx(), f -> {
                                     Controllers.dialog(new ViewFeedbackDialog(f));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -112,6 +112,7 @@ public int getParsedVersion() {
     public static final int JAVA_8 = 8;
     public static final int JAVA_9 = 9;
     public static final int JAVA_16 = 16;
+    public static final int JAVA_17 = 17;
 
     private static int parseVersion(String version) {
         Matcher matcher = VERSION.matcher(version);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultDependencyManager.java
Patch:
@@ -27,6 +27,7 @@
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
 
+import java.io.File;
 import java.io.IOException;
 import java.nio.file.Path;
 import java.util.ArrayList;
@@ -78,7 +79,8 @@ public Task<?> checkGameCompletionAsync(Version original, boolean integrityCheck
         Version version = original.resolve(repository);
         return Task.allOf(
                 Task.composeAsync(() -> {
-                    if (!repository.getVersionJar(version).exists())
+                    File versionJar = repository.getVersionJar(version);
+                    if (!versionJar.exists() || versionJar.length() == 0)
                         return new GameDownloadTask(this, null, version);
                     else
                         return null;

File: minecraft/libraries/log4j-patch/src/main/java/org/apache/logging/log4j/core/lookup/Interpolator.java
Patch:
@@ -65,7 +65,7 @@ public Interpolator() {
         lookups.put("sys", new SystemPropertiesLookup());
         lookups.put("env", new EnvironmentLookup());
         // lookups.put("jndi", new JndiLookup());
-        LOGGER.warn("log4j-patch works, JNDI lookup is disabled.");
+        LOGGER.warn("log4j-patch works, JNDI lookup is disabled");
 
         try {
             if (Class.forName("javax.servlet.ServletContext") != null) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -27,6 +27,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.io.InputStream;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
@@ -136,10 +137,9 @@ private static Version maintainGameWithCpwModLauncher(GameRepository repository,
                 builder.addJvmArgument("-Dhmcl.transformer.candidates=${library_directory}/" + library.getPath());
                 if (!libraryExisting) builder.addLibrary(hmclTransformerDiscoveryService);
                 Path libraryPath = repository.getLibraryFile(version, hmclTransformerDiscoveryService).toPath();
-                try {
+                try (InputStream input = MaintainTask.class.getResourceAsStream("/assets/game/HMCLTransformerDiscoveryService-1.0.jar")) {
                     Files.createDirectories(libraryPath.getParent());
-                    Files.copy(MaintainTask.class.getResourceAsStream("/assets/game/HMCLTransformerDiscoveryService-1.0.jar"),
-                            libraryPath, StandardCopyOption.REPLACE_EXISTING);
+                    Files.copy(input, libraryPath, StandardCopyOption.REPLACE_EXISTING);
                 } catch (IOException e) {
                     Logging.LOG.log(Level.WARNING, "Unable to unpack HMCLTransformerDiscoveryService", e);
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -400,7 +400,8 @@ private void waitFor() {
                 onExit.fireEvent(new CatoExitEvent(this, CatoExitEvent.EXIT_CODE_INTERRUPTED));
             } finally {
                 try {
-                    writer.close();
+                    if (writer != null)
+                        writer.close();
                 } catch (IOException e) {
                     LOG.log(Level.WARNING, "Failed to close cato stdin writer", e);
                 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/mcbbs/McbbsModpackCompletionTask.java
Patch:
@@ -62,7 +62,6 @@ public class McbbsModpackCompletionTask extends CompletableFutureTask<Void> {
     private final String version;
     private final File configurationFile;
     private ModpackConfiguration<McbbsModpackManifest> configuration;
-    private GetTask dependent;
     private McbbsModpackManifest manifest;
     private final List<Task<?>> dependencies = new LinkedList<>();
 
@@ -108,11 +107,11 @@ public CompletableFuture<Void> getFuture(TaskCompletableFuture executor) {
                 }
             })).thenComposeAsync(wrap(unused1 -> {
                 return executor.one(new GetTask(new URL(manifest.getFileApi() + "/manifest.json")));
-            })).thenComposeAsync(wrap(unused1 -> {
+            })).thenComposeAsync(wrap(remoteManifestJson -> {
                 McbbsModpackManifest remoteManifest;
                 // We needs to update modpack from online server.
                 try {
-                    remoteManifest = JsonUtils.fromNonNullJson(dependent.getResult(), McbbsModpackManifest.class);
+                    remoteManifest = JsonUtils.fromNonNullJson(remoteManifestJson, McbbsModpackManifest.class);
                 } catch (JsonParseException e) {
                     throw new IOException("Unable to parse server manifest.json from " + manifest.getFileApi(), e);
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -60,7 +60,7 @@ public void setGlobal(boolean global) {
         this.global = global;
     }
 
-    private final BooleanProperty usesGlobalProperty = new SimpleBooleanProperty(this, "usesGlobal", false);
+    private final BooleanProperty usesGlobalProperty = new SimpleBooleanProperty(this, "usesGlobal", true);
 
     public BooleanProperty usesGlobalProperty() {
         return usesGlobalProperty;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -112,7 +112,7 @@ public final class VersionSettingsPage extends StackPane implements DecoratorPag
 
     private final StringProperty selectedVersion = new SimpleStringProperty();
     private final BooleanProperty navigateToSpecificSettings = new SimpleBooleanProperty(false);
-    private final BooleanProperty enableSpecificSettings = new SimpleBooleanProperty(true);
+    private final BooleanProperty enableSpecificSettings = new SimpleBooleanProperty(false);
     private final IntegerProperty maxMemory = new SimpleIntegerProperty();
     private final ObjectProperty<OperatingSystem.PhysicalMemoryStatus> memoryStatus = new SimpleObjectProperty<>(OperatingSystem.PhysicalMemoryStatus.INVALID);
     private final BooleanProperty modpack = new SimpleBooleanProperty();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -440,7 +440,7 @@ public ManagedProcess launch() throws IOException, InterruptedException {
     private Map<String, String> getEnvVars() {
         String versionName = Optional.ofNullable(options.getVersionName()).orElse(version.getId());
         Map<String, String> env = new HashMap<>();
-        env.put("FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS", "true");
+        env.put("LOG4J_FORMAT_MSG_NO_LOOKUPS", "true");
         env.put("INST_NAME", versionName);
         env.put("INST_ID", versionName);
         env.put("INST_DIR", repository.getVersionRoot(version.getId()).getAbsolutePath());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -440,6 +440,7 @@ public ManagedProcess launch() throws IOException, InterruptedException {
     private Map<String, String> getEnvVars() {
         String versionName = Optional.ofNullable(options.getVersionName()).orElse(version.getId());
         Map<String, String> env = new HashMap<>();
+        env.put("FORMAT_MESSAGES_PATTERN_DISABLE_LOOKUPS", "true");
         env.put("INST_NAME", versionName);
         env.put("INST_ID", versionName);
         env.put("INST_DIR", repository.getVersionRoot(version.getId()).getAbsolutePath());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -178,6 +178,9 @@ private Command generateCommandLine(File nativeFolder) throws IOException {
 
             res.addDefault("-Dfml.ignoreInvalidMinecraftCertificates=", "true");
             res.addDefault("-Dfml.ignorePatchDiscrepancies=", "true");
+
+            // Fix RCE vulnerability of log4j2
+            res.addDefault("-Dlog4j2.formatMsgNoLookups=", "true");
         }
 
         Proxy proxy = options.getProxy();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/StringUtils.java
Patch:
@@ -37,7 +37,7 @@ private StringUtils() {
     }
 
     public static String getStackTrace(Throwable throwable) {
-        ByteArrayOutputStream stream = new ByteArrayOutputStream();
+        ByteArrayOutputStream stream = new ByteArrayOutputStream(512);
         try {
             throwable.printStackTrace(new PrintStream(stream, false, "UTF-8"));
             return stream.toString("UTF-8");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/Zipper.java
Patch:
@@ -80,7 +80,7 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IO
                 if (filter != null && !filter.test(relativePath.replace('\\', '/'))) {
                     return FileVisitResult.SKIP_SUBTREE;
                 }
-                Files.copy(file, root.resolve(relativePath));
+                Files.copy(file, root.resolve(relativePath), StandardCopyOption.COPY_ATTRIBUTES);
                 return FileVisitResult.CONTINUE;
             }
 
@@ -104,11 +104,11 @@ public void putFile(File file, String path) throws IOException {
     }
 
     public void putFile(Path file, String path) throws IOException {
-        Files.copy(file, fs.getPath(path));
+        Files.copy(file, fs.getPath(path), StandardCopyOption.COPY_ATTRIBUTES);
     }
 
     public void putStream(InputStream in, String path) throws IOException {
-        Files.copy(in, fs.getPath(path));
+        Files.copy(in, fs.getPath(path), StandardCopyOption.COPY_ATTRIBUTES);
     }
 
     public void putTextFile(String text, String path) throws IOException {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -40,6 +40,7 @@
 import org.jackhuang.hmcl.util.HMCLService;
 import org.jackhuang.hmcl.util.Result;
 import org.jackhuang.hmcl.util.StringUtils;
+import org.jackhuang.hmcl.util.io.ChecksumMismatchException;
 import org.jetbrains.annotations.Nullable;
 
 import java.util.concurrent.CancellationException;
@@ -377,6 +378,8 @@ private String localizeErrorMessage(Throwable t, boolean isStaticToken, Function
             } else {
                 return i18n("multiplayer.exit.after_ready");
             }
+        } else if (e instanceof ChecksumMismatchException) {
+            return i18n("exception.artifact_malformed");
         } else {
             return fallback.apply(e);
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/Versions.java
Patch:
@@ -122,8 +122,8 @@ public static CompletableFuture<String> renameVersion(Profile profile, String ve
                 return;
             }
             if (profile.getRepository().renameVersion(version, newName)) {
-                profile.getRepository().refreshVersionsAsync().start();
                 resolve.run();
+                profile.getRepository().refreshVersionsAsync().start();
             } else {
                 reject.accept(i18n("version.manage.rename.fail"));
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/countly/CrashReport.java
Patch:
@@ -1,7 +1,6 @@
 package org.jackhuang.hmcl.countly;
 
 import org.jackhuang.hmcl.Metadata;
-import org.jackhuang.hmcl.util.CrashReporter;
 import org.jackhuang.hmcl.util.Logging;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.platform.Architecture;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/MainPage.java
Patch:
@@ -234,7 +234,7 @@ private void showUpdate(boolean show) {
         doAnimation(show);
 
         if (show && getLatestVersion() != null && !Objects.equals(config().getPromptedVersion(), getLatestVersion().getVersion())) {
-            Controllers.dialog("",  i18n("update.bubble.title", getLatestVersion().getVersion()), MessageDialogPane.MessageType.INFO, () -> {
+            Controllers.dialog("", i18n("update.bubble.title", getLatestVersion().getVersion()), MessageDialogPane.MessageType.INFO, () -> {
                 config().setPromptedVersion(getLatestVersion().getVersion());
                 onUpgrade();
             });

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/Result.java
Patch:
@@ -64,4 +64,4 @@ public boolean isError() {
         }
     }
 
-}
\ No newline at end of file
+}

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -212,7 +212,8 @@ private Command generateCommandLine(File nativeFolder) throws IOException {
         configuration.put("${game_assets}", gameAssets.toAbsolutePath().toString());
         configuration.put("${assets_root}", gameAssets.toAbsolutePath().toString());
 
-
+        // lwjgl assumes path to native libraries encoded by ASCII.
+        // Here is a workaround for this issue: https://github.com/huanghongxun/HMCL/issues/1141.
         String nativeFolderPath = nativeFolder.getAbsolutePath();
         Path tempNativeFolder = null;
         if (OperatingSystem.CURRENT_OS == OperatingSystem.LINUX

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerClient.java
Patch:
@@ -87,6 +87,7 @@ public void run() {
                  BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), StandardCharsets.UTF_8));
                  BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8))) {
                 MultiplayerServer.Endpoint endpoint = new MultiplayerServer.Endpoint(socket, writer);
+                socket.setSoTimeout(30000);
                 LOG.info("Connected to 127.0.0.1:" + port);
 
                 endpoint.write(new HandshakeRequest());
@@ -107,7 +108,7 @@ public void run() {
                     } catch (IOException e) {
                         LOG.log(Level.WARNING, "Failed to close socket", e);
                     }
-                }, 15 * 1000);
+                }, 25 * 1000);
 
                 String line;
                 while ((line = reader.readLine()) != null) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -60,7 +60,7 @@
  * Cato Management.
  */
 public final class MultiplayerManager {
-    static final String CATO_VERSION = "1.1.1-202110231414";
+    static final String CATO_VERSION = "1.1.1";
     //    private static final String CATO_DOWNLOAD_URL = "https://files.huangyuhui.net/maven/cato/cato/" + MultiplayerManager.CATO_VERSION;
     private static final String CATO_DOWNLOAD_URL = "https://codechina.csdn.net/to/ioi_bin/-/raw/acb0524bcad82a31fa5a09bf4c79248ebd674de1/client/";
     private static final String CATO_PATH = getCatoPath();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -229,6 +229,7 @@ public static CompletableFuture<CatoSession> createSession(String token, String
             MultiplayerServer server = new MultiplayerServer(sessionName, gamePort, allowAllJoinRequests);
             server.startServer();
 
+            session.setName(sessionName);
             session.allowForwardingAddress(REMOTE_ADDRESS, server.getPort());
             session.allowForwardingAddress(REMOTE_ADDRESS, gamePort);
             session.showAllowedAddress();
@@ -264,7 +265,7 @@ public static CompletableFuture<CatoSession> createSession(String token, String
         }));
     }
 
-    public static final Pattern INVITATION_CODE_PATTERN = Pattern.compile("^(?<id>(idx|mix)(.*?))#(?<port>\\d{2,5})$");
+    public static final Pattern INVITATION_CODE_PATTERN = Pattern.compile("^(?<id>.*?)#(?<port>\\d{2,5})$");
 
     public static Invitation parseInvitationCode(String invitationCode) throws JsonParseException {
         Matcher matcher = INVITATION_CODE_PATTERN.matcher(invitationCode);

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/DownloadProviders.java
Patch:
@@ -33,6 +33,7 @@
 import java.util.Arrays;
 import java.util.Map;
 import java.util.Optional;
+import java.util.concurrent.CancellationException;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
@@ -160,6 +161,8 @@ public static String localizeErrorMessage(Throwable exception) {
             }
         } else if (exception instanceof ArtifactMalformedException) {
             return i18n("exception.artifact_malformed");
+        } else if (exception instanceof CancellationException) {
+            return i18n("message.cancelled");
         }
         return StringUtils.getStackTrace(exception);
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/Architecture.java
Patch:
@@ -194,7 +194,7 @@ public static Architecture parseArchName(String value) {
             }
         } else {
             try {
-                Process process = Runtime.getRuntime().exec("/usr/bin/arch");
+                Process process = Runtime.getRuntime().exec(new String[]{"/bin/uname", "-m"});
                 if (process.waitFor(3, TimeUnit.SECONDS)) {
                     try (BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream(), OperatingSystem.NATIVE_CHARSET))) {
                         sysArchName = reader.readLine().trim();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MultiFileItem.java
Patch:
@@ -36,6 +36,7 @@
 import org.jackhuang.hmcl.util.StringUtils;
 
 import java.util.Collection;
+import java.util.Objects;
 import java.util.Optional;
 import java.util.function.Consumer;
 import java.util.stream.Collectors;
@@ -61,7 +62,7 @@ public MultiFileItem() {
         });
         selectedData.addListener((a, b, newValue) -> {
             Optional<Toggle> selecting = group.getToggles().stream()
-                    .filter(it -> it.getUserData() == newValue)
+                    .filter(it -> Objects.equals(it.getUserData(), newValue))
                     .findFirst();
             if (!selecting.isPresent()) {
                 selecting = group.getToggles().stream()

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -21,6 +21,7 @@
 import javafx.application.Platform;
 import javafx.stage.Stage;
 import org.jackhuang.hmcl.setting.ConfigHolder;
+import org.jackhuang.hmcl.setting.SambaException;
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.task.AsyncTaskExecutor;
 import org.jackhuang.hmcl.ui.AwtUtils;
@@ -62,6 +63,8 @@ public void start(Stage primaryStage) {
         try {
             try {
                 ConfigHolder.init();
+            } catch (SambaException ignored) {
+                Main.showWarningAndContinue(i18n("fatal.samba"));
             } catch (IOException e) {
                 LOG.log(Level.SEVERE, "Failed to load config", e);
                 Main.showErrorAndExit(i18n("fatal.config_loading_failure", Paths.get("").toAbsolutePath().normalize()));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/PersonalizationPage.java
Patch:
@@ -107,6 +107,7 @@ public PersonalizationPage() {
                             .setChooserTitle(i18n("launcher.background.choose"))
                             .bindBidirectional(config().backgroundImageProperty()),
                     new MultiFileItem.StringOption<>(i18n("launcher.background.network"), EnumBackgroundImage.NETWORK)
+                            .setValidators(new URLValidator(true))
                             .bindBidirectional(config().backgroundImageUrlProperty())
             ));
             backgroundItem.selectedDataProperty().bindBidirectional(config().backgroundImageTypeProperty());

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/EnumBackgroundImage.java
Patch:
@@ -21,5 +21,6 @@ public enum EnumBackgroundImage {
     DEFAULT,
     CUSTOM,
     CLASSIC,
-    NETWORK
+    NETWORK,
+    TRANSLUCENT
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/PersonalizationPage.java
Patch:
@@ -102,6 +102,7 @@ public PersonalizationPage() {
             backgroundItem.loadChildren(Arrays.asList(
                     new MultiFileItem.Option<>(i18n("launcher.background.default"), EnumBackgroundImage.DEFAULT),
                     new MultiFileItem.Option<>(i18n("launcher.background.classic"), EnumBackgroundImage.CLASSIC),
+                    new MultiFileItem.Option<>(i18n("launcher.background.translucent"), EnumBackgroundImage.TRANSLUCENT),
                     new MultiFileItem.FileOption<>(i18n("settings.custom"), EnumBackgroundImage.CUSTOM)
                             .setChooserTitle(i18n("launcher.background.choose"))
                             .bindBidirectional(config().backgroundImageProperty()),

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/RemoteVersion.java
Patch:
@@ -96,7 +96,7 @@ public Type getVersionType() {
     }
 
     public Task<Version> getInstallTask(DefaultDependencyManager dependencyManager, Version baseVersion) {
-        throw new UnsupportedOperationException(toString() + " cannot be installed yet");
+        throw new UnsupportedOperationException(this + " cannot be installed yet");
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -474,7 +474,7 @@ private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting
                 suggested = true;
                 switch (violatedSuggestedConstraint) {
                     case MODDED_JAVA_7:
-                        Controllers.dialog(i18n("launch.advice.java.modded_java_7"), i18n("message.error"), MessageType.ERROR, continueAction);
+                        Controllers.dialog(i18n("launch.advice.java.modded_java_7"), i18n("message.warning"), MessageType.WARNING, continueAction);
                         return null;
                     case MODDED_JAVA_8:
                         Controllers.dialog(i18n("launch.advice.newer_java"), i18n("message.warning"), MessageType.WARNING, continueAction);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -39,7 +39,7 @@ public enum JavaVersionConstraint {
     VANILLA_JAVA_8(JavaVersionConstraint.RULE_MANDATORY, versionRange("1.13", JavaVersionConstraint.MAX), versionRange("1.8", JavaVersionConstraint.MAX)),
     // Minecraft>=1.7.10+Forge accepts Java 8
     MODDED_JAVA_8(JavaVersionConstraint.RULE_SUGGESTED, versionRange("1.7.10", JavaVersionConstraint.MAX), versionRange("1.8", JavaVersionConstraint.MAX)),
-    // Minecraft<=1.7.2+Forge requires Java<=7
+    // Minecraft<=1.7.2+Forge requires Java<=7, But LegacyModFixer may fix that problem. So only suggest user using Java 7.
     MODDED_JAVA_7(JavaVersionConstraint.RULE_SUGGESTED, versionRange(JavaVersionConstraint.MIN, "1.7.2"), versionRange(JavaVersionConstraint.MIN, "1.7.999")) {
         @Override
         protected boolean appliesToVersionImpl(VersionNumber gameVersionNumber, @Nullable Version version,
@@ -49,7 +49,7 @@ protected boolean appliesToVersionImpl(VersionNumber gameVersionNumber, @Nullabl
             return analyzer.has(LibraryAnalyzer.LibraryType.FORGE);
         }
     },
-    // LaunchWrapper<=1.12 will crash because of assuming the system class loader is an instance of URLClassLoader (Java 8)
+    // LaunchWrapper<=1.12 will crash because LaunchWrapper assumes the system class loader is an instance of URLClassLoader (Java 8)
     LAUNCH_WRAPPER(JavaVersionConstraint.RULE_MANDATORY, versionRange("0", "1.12.999"), versionRange("0", "1.8.999")) {
         @Override
         protected boolean appliesToVersionImpl(VersionNumber gameVersionNumber, @Nullable Version version,

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.game;
 
 import org.apache.commons.lang3.Range;
+import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.util.Lang;
 import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.JavaVersion;
@@ -44,7 +45,8 @@ public enum JavaVersionConstraint {
         protected boolean appliesToVersionImpl(VersionNumber gameVersionNumber, @Nullable Version version,
                                                @Nullable JavaVersion javaVersion) {
             if (version == null) return false;
-            return LAUNCH_WRAPPER_MAIN.equals(version.getMainClass());
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version);
+            return analyzer.has(LibraryAnalyzer.LibraryType.FORGE);
         }
     },
     // LaunchWrapper<=1.12 will crash because of assuming the system class loader is an instance of URLClassLoader (Java 8)

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -59,6 +59,7 @@
 import java.io.IOException;
 import java.net.SocketTimeoutException;
 import java.net.URL;
+import java.nio.file.AccessDeniedException;
 import java.util.*;
 import java.util.concurrent.*;
 import java.util.concurrent.atomic.AtomicReference;
@@ -299,6 +300,8 @@ public void onStop(boolean success, TaskExecutor executor) {
                                     );
 
                                     return;
+                                } else if (ex instanceof AccessDeniedException) {
+                                    message = i18n("exception.access_denied", ((AccessDeniedException) ex).getFile());
                                 } else {
                                     message = StringUtils.getStackTrace(ex);
                                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -333,7 +333,7 @@ public static void installTooltip(Node node, double openDelay, double visibleDel
     public static void playAnimation(Node node, String animationKey, Timeline timeline) {
         animationKey = "FXUTILS.ANIMATION." + animationKey;
         Object oldTimeline = node.getProperties().get(animationKey);
-        if (oldTimeline instanceof Timeline) ((Timeline) oldTimeline).stop();
+//        if (oldTimeline instanceof Timeline) ((Timeline) oldTimeline).stop();
         if (timeline != null) timeline.play();
         node.getProperties().put(animationKey, timeline);
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/YggdrasilServer.java
Patch:
@@ -175,7 +175,7 @@ public Object toCompleteResponse(String rootUrl) {
                 }
             }
             if (skin != null && skin.getCape() != null) {
-                realTextures.put("CAPE", mapOf(pair("url", rootUrl + "/textures/" + skin.getSkin().getHash())));
+                realTextures.put("CAPE", mapOf(pair("url", rootUrl + "/textures/" + skin.getCape().getHash())));
             }
 
             Map<String, Object> textureResponse = mapOf(

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -174,7 +174,7 @@ public static JavaVersion findSuitableJavaVersion(VersionNumber gameVersion, Ver
         JavaVersion suggested = null;
         for (JavaVersion javaVersion : JavaVersion.getJavas()) {
             // select the latest x86 java that this version accepts.
-            if(!javaVersion.getArchitecture().isX86())
+            if (!javaVersion.getArchitecture().isX86())
                 continue;
 
             VersionNumber javaVersionNumber = javaVersion.getVersionNumber();

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -106,7 +106,7 @@ public static void main(String[] args) {
 
         try {
             LOG.info("*** " + Metadata.TITLE + " ***");
-            LOG.info("Operating System: " + System.getProperty("os.name") + ' ' + OperatingSystem.SYSTEM_VERSION);
+            LOG.info("Operating System: " + OperatingSystem.SYSTEM_NAME + ' ' + OperatingSystem.SYSTEM_VERSION);
             LOG.info("Java Version: " + System.getProperty("java.version") + ", " + System.getProperty("java.vendor"));
             LOG.info("Java VM Version: " + System.getProperty("java.vm.name") + " (" + System.getProperty("java.vm.info") + "), " + System.getProperty("java.vm.vendor"));
             LOG.info("Java Home: " + System.getProperty("java.home"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -69,7 +69,7 @@ public class GameCrashWindow extends Stage {
     private final String memory;
     private final String java;
     private final LibraryAnalyzer analyzer;
-    private final StringProperty os = new SimpleStringProperty(System.getProperty("os.name"));
+    private final StringProperty os = new SimpleStringProperty(OperatingSystem.SYSTEM_NAME);
     private final StringProperty arch = new SimpleStringProperty(Architecture.CURRENT_ARCH_NAME);
     private final StringProperty reason = new SimpleStringProperty(i18n("game.crash.reason.unknown"));
     private final BooleanProperty loading = new SimpleBooleanProperty();

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -113,7 +113,7 @@ public void uncaughtException(Thread t, Throwable e) {
                     "\n  Content: \n    " +
                     stackTrace + "\n\n" +
                     "-- System Details --\n" +
-                    "  Operating System: " + System.getProperty("os.name") + ' ' + OperatingSystem.SYSTEM_VERSION + "\n" +
+                    "  Operating System: " + OperatingSystem.SYSTEM_NAME + ' ' + OperatingSystem.SYSTEM_VERSION + "\n" +
                     "  Java Version: " + System.getProperty("java.version") + ", " + System.getProperty("java.vendor") + "\n" +
                     "  Java VM Version: " + System.getProperty("java.vm.name") + " (" + System.getProperty("java.vm.info") + "), " + System.getProperty("java.vm.vendor") + "\n" +
                     "  JVM Max Memory: " + Runtime.getRuntime().maxMemory() + "\n" +

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModTranslations.java
Patch:
@@ -119,7 +119,9 @@ private static boolean loadModIdMap() {
         modIdMap = new HashMap<>();
         for (Mod mod : mods) {
             for (String id : mod.getModIds()) {
-                modIdMap.put(id, mod);
+                if (StringUtils.isNotBlank(id) && !"examplemod".equals(id)) {
+                    modIdMap.put(id, mod);
+                }
             }
         }
         return true;

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -35,6 +35,7 @@
 import java.security.cert.CertificateException;
 import java.security.cert.X509Certificate;
 import java.util.Collections;
+import java.util.concurrent.CancellationException;
 import java.util.logging.Level;
 
 import static org.jackhuang.hmcl.util.Lang.thread;
@@ -99,7 +100,7 @@ private static void checkJavaFX() {
         } catch (SelfDependencyPatcher.IncompatibleVersionException e) {
             LOG.log(Level.SEVERE, "unable to patch JVM", e);
             showErrorAndExit(i18n("fatal.javafx.incompatible"));
-        } catch (SelfDependencyPatcher.CanceledException e) {
+        } catch (CancellationException e) {
             LOG.log(Level.SEVERE, "User cancels downloading JavaFX", e);
             System.exit(0);
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -17,7 +17,6 @@
  */
 package org.jackhuang.hmcl.game;
 
-import org.jackhuang.hmcl.util.Pair;
 import org.jackhuang.hmcl.util.Range;
 import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.JavaVersion;
@@ -28,7 +27,6 @@
 import java.util.Objects;
 
 import static org.jackhuang.hmcl.download.LibraryAnalyzer.LAUNCH_WRAPPER_MAIN;
-import static org.jackhuang.hmcl.util.Pair.pair;
 
 public enum JavaVersionConstraint {
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerClient.java
Patch:
@@ -101,6 +101,7 @@ public void run() {
                     // We fail to establish the connection with server.
 
                     try {
+                        LOG.log(Level.WARNING, "Socket connection timeout, closing socket");
                         socket.close();
                     } catch (IOException e) {
                         LOG.log(Level.WARNING, "Failed to close socket", e);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -20,7 +20,7 @@
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXDialogLayout;
 import de.javawi.jstun.test.DiscoveryInfo;
-import de.javawi.jstun.test.FastDiscoveryTest;
+import de.javawi.jstun.test.DiscoveryTest;
 import javafx.application.Platform;
 import javafx.beans.property.*;
 import javafx.collections.FXCollections;
@@ -128,7 +128,7 @@ public ReadOnlyObjectProperty<MultiplayerManager.CatoSession> sessionProperty()
 
     private void testNAT() {
         Task.supplyAsync(() -> {
-            FastDiscoveryTest tester = new FastDiscoveryTest(null, 0, "stun.stunprotocol.org", 3478);
+            DiscoveryTest tester = new DiscoveryTest(null, 0, "stun.stunprotocol.org", 3478);
             return tester.test();
         }).whenComplete(Schedulers.javafx(), (info, exception) -> {
             LOG.log(Level.INFO, "Nat test result " + MultiplayerPageSkin.getNATType(info), exception);

File: HMCLCore/src/test/java/org/jackhuang/hmcl/game/CrashReportAnalyzerTest.java
Patch:
@@ -76,7 +76,7 @@ public void modResolutionCollection() throws IOException {
                 CrashReportAnalyzer.anaylze(loadLog("/logs/mod_resolution_collection.txt")),
                 CrashReportAnalyzer.Rule.MOD_RESOLUTION_COLLECTION);
         Assert.assertEquals("tabtps-fabric", result.getMatcher().group("sourcemod"));
-        Assert.assertEquals("{fabricloader @ [>=0.11.1]", result.getMatcher().group("destmod"));
+        Assert.assertEquals("{fabricloader @ [>=0.11.1]}", result.getMatcher().group("destmod"));
     }
 
     @Test

File: HMCL/src/main/java/org/jackhuang/hmcl/util/AggregatedObservableList.java
Patch:
@@ -43,7 +43,7 @@ public AggregatedObservableList() {
      * @return an unmodifiable view of the aggregatedList
      */
     public ObservableList<T> getAggregatedList() {
-        return FXCollections.unmodifiableObservableList(aggregatedList);
+        return aggregatedList;
     }
 
     public void appendList(@NotNull ObservableList<T> list) {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -430,7 +430,7 @@ private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting
                 }
             }
 
-            if (javaVersion.getPlatform() != Architecture.CURRENT.getPlatform()) {
+            if (javaVersion.getPlatform() != Architecture.SYSTEM.getPlatform()) {
                 Controllers.dialog(i18n("launch.advice.different_platform"), i18n("message.warning"), MessageType.ERROR, continueAction);
                 suggested = true;
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -26,9 +26,9 @@
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.Lang;
 import org.jackhuang.hmcl.util.StringUtils;
+import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.JavaVersion;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
-import org.jackhuang.hmcl.util.platform.Platform;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
 import java.io.IOException;
@@ -608,7 +608,7 @@ public Task<JavaVersion> getJavaVersion(VersionNumber gameVersion, Version versi
                         if (checkJava)
                             return JavaVersion.fromExecutable(Paths.get(getJavaDir()));
                         else
-                            return new JavaVersion(Paths.get(getJavaDir()), "", Platform.getPlatform());
+                            return new JavaVersion(Paths.get(getJavaDir()), "", Architecture.SYSTEM.getPlatform());
                     } catch (IOException | InvalidPathException e) {
                         return null; // Custom Java Directory not found,
                     }

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -84,7 +84,7 @@ static class DependencyDescriptor {
 
         private static String currentArchClassifier() {
             if (OperatingSystem.CURRENT_OS == OperatingSystem.LINUX) {
-                switch (Architecture.CURRENT) {
+                switch (Architecture.JDK) {
                     case X86_64:
                         return "linux";
                     case ARM:
@@ -93,14 +93,14 @@ private static String currentArchClassifier() {
                         return "linux-aarch64";
                 }
             } else if (OperatingSystem.CURRENT_OS == OperatingSystem.OSX) {
-                switch (Architecture.CURRENT) {
+                switch (Architecture.JDK) {
                     case X86_64:
                         return "mac";
                     case ARM64:
                         return "mac-aarch64";
                 }
             } else if (OperatingSystem.CURRENT_OS == OperatingSystem.WINDOWS) {
-                switch (Architecture.CURRENT) {
+                switch (Architecture.JDK) {
                     case X86_64:
                         return "win";
                     case X86:

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/JavaVersionConstraint.java
Patch:
@@ -84,7 +84,7 @@ public Range<VersionNumber> getJavaVersion(Version version) {
     VANILLA_LINUX_JAVA_8(JavaVersionConstraint.RULE_MANDATORY, versionRange("0", "1.12.999"), versionRange(JavaVersionConstraint.MIN, "1.8.999")) {
         @Override
         public boolean appliesToVersion(@Nullable VersionNumber gameVersion, @Nullable Version version) {
-            return OperatingSystem.CURRENT_OS == OperatingSystem.LINUX && Architecture.CURRENT == Architecture.X86_64;
+            return OperatingSystem.CURRENT_OS == OperatingSystem.LINUX && Architecture.SYSTEM == Architecture.X86_64;
         }
     }
     ;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Library.java
Patch:
@@ -24,8 +24,8 @@
 import org.jackhuang.hmcl.util.ToStringBuilder;
 import org.jackhuang.hmcl.util.gson.TolerableValidationException;
 import org.jackhuang.hmcl.util.gson.Validation;
+import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
-import org.jackhuang.hmcl.util.platform.Platform;
 
 import java.util.List;
 import java.util.Map;
@@ -94,7 +94,7 @@ public String getVersion() {
     public String getClassifier() {
         if (artifact.getClassifier() == null)
             if (natives != null && natives.containsKey(OperatingSystem.CURRENT_OS))
-                return natives.get(OperatingSystem.CURRENT_OS).replace("${arch}", Platform.getPlatform().getBit());
+                return natives.get(OperatingSystem.CURRENT_OS).replace("${arch}", Architecture.SYSTEM.getPlatform().getBit());
             else
                 return null;
         else

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -163,7 +163,7 @@ public static JavaVersion fromCurrentEnvironment() {
         CURRENT_JAVA = new JavaVersion(
                 currentExecutable,
                 System.getProperty("java.version"),
-                Platform.getPlatform());
+                Architecture.JDK.getPlatform());
     }
 
     private static Collection<JavaVersion> JAVAS;

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -34,7 +34,6 @@
 import org.hildan.fxgson.factories.JavaFxPropertyTypeAdapterFactory;
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorServer;
-import org.jackhuang.hmcl.upgrade.UpdateChannel;
 import org.jackhuang.hmcl.util.gson.EnumOrdinalDeserializer;
 import org.jackhuang.hmcl.util.gson.FileTypeAdapter;
 import org.jackhuang.hmcl.util.i18n.Locales;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -39,7 +39,6 @@
 import org.jackhuang.hmcl.ui.decorator.DecoratorPage;
 import org.jackhuang.hmcl.util.StringUtils;
 
-import java.io.FileNotFoundException;
 import java.util.concurrent.CancellationException;
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.function.Consumer;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPageSkin.java
Patch:
@@ -295,7 +295,7 @@ protected MultiplayerPageSkin(MultiplayerPage control) {
         }
     }
 
-    private static String getNATType(DiscoveryInfo info) {
+    public static String getNATType(DiscoveryInfo info) {
         if (info == null) {
             return i18n("multiplayer.nat.testing");
         } else if (info.isBlockedUDP()) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CrashReportAnalyzer.java
Patch:
@@ -37,7 +37,7 @@ public enum Rule {
 
         OPENJ9(Pattern.compile("(Open J9 is not supported|OpenJ9 is incompatible)")),
         TOO_OLD_JAVA(Pattern.compile("java\\.lang\\.UnsupportedClassVersionError: (.*?) version (?<expected>\\d+)\\.0"), "expected"),
-        JVM_32BIT(Pattern.compile("Could not reserve enough space for 1048576KB object heap")),
+        JVM_32BIT(Pattern.compile("Could not reserve enough space for (.*?) object heap")),
 
         // Some mods/shader packs do incorrect GL operations.
         GL_OPERATION_FAILURE(Pattern.compile("1282: Invalid operation")),

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateHandler.java
Patch:
@@ -89,7 +89,7 @@ public static boolean processArguments(String[] args) {
     public static void updateFrom(RemoteVersion version) {
         checkFxUserThread();
 
-        Controllers.dialog(new UpgradeDialog(() -> {
+        Controllers.dialog(new UpgradeDialog(version, () -> {
             Path downloaded;
             try {
                 downloaded = Files.createTempFile("hmcl-update-", ".jar");

File: HMCL/src/test/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerClientServerTest.java
Patch:
@@ -27,7 +27,7 @@ public class MultiplayerClientServerTest {
     @Ignore
     public void startServer() throws Exception {
         Logging.initForTest();
-        MultiplayerServer server = new MultiplayerServer(1000);
+        MultiplayerServer server = new MultiplayerServer(1000, true);
         server.startServer(44444);
 
         MultiplayerClient client = new MultiplayerClient("username", 44444);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/Skin.java
Patch:
@@ -130,7 +130,7 @@ public Task<LoadedSkin> load(String username) {
                 });
             case LITTLE_SKIN:
             case CUSTOM_SKIN_LOADER_API:
-                String realCslApi = type == Type.LITTLE_SKIN ? "http://mcskin.littleservice.cn" : cslApi;
+                String realCslApi = type == Type.LITTLE_SKIN ? "http://mcskin.littleservice.cn" : StringUtils.removeSuffix(cslApi, "/");
                 return Task.composeAsync(() -> new GetTask(new URL(String.format("%s/%s.json", realCslApi, username))))
                         .thenComposeAsync(json -> {
                             SkinJson result = JsonUtils.GSON.fromJson(json, SkinJson.class);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/OfflineAccountSkinPane.java
Patch:
@@ -38,8 +38,6 @@
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.FXUtils;
-import org.jackhuang.hmcl.ui.animation.ContainerAnimations;
-import org.jackhuang.hmcl.ui.animation.TransitionPane;
 import org.jackhuang.hmcl.ui.construct.*;
 
 import java.io.File;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -20,7 +20,6 @@
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXDialogLayout;
 import de.javawi.jstun.test.DiscoveryInfo;
-import de.javawi.jstun.test.DiscoveryTest;
 import de.javawi.jstun.test.FastDiscoveryTest;
 import javafx.application.Platform;
 import javafx.beans.property.*;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/Versions.java
Patch:
@@ -141,8 +141,8 @@ public static void openFolder(Profile profile, String version) {
     public static void duplicateVersion(Profile profile, String version) {
         Controllers.prompt(
                 new PromptDialogPane.Builder(i18n("version.manage.duplicate.prompt"), (res, resolve, reject) -> {
-                    String newVersionName = ((PromptDialogPane.Builder.StringQuestion) res.get(0)).getValue();
-                    boolean copySaves = ((PromptDialogPane.Builder.BooleanQuestion) res.get(1)).getValue();
+                    String newVersionName = ((PromptDialogPane.Builder.StringQuestion) res.get(1)).getValue();
+                    boolean copySaves = ((PromptDialogPane.Builder.BooleanQuestion) res.get(2)).getValue();
                     Task.runAsync(() -> profile.getRepository().duplicateVersion(version, newVersionName, copySaves))
                             .thenComposeAsync(profile.getRepository().refreshVersionsAsync())
                             .whenComplete(Schedulers.javafx(), (result, exception) -> {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CrashReportAnalyzer.java
Patch:
@@ -81,7 +81,9 @@ public enum Rule {
         // Game crashed when ticking entity
         ENTITY(Pattern.compile("Entity Type: (?<type>.*)[\\w\\W\\n\\r]*?Entity's Exact location: (?<location>.*)"), "type", "location"),
         // Game crashed when tesselating block model
-        BLOCK(Pattern.compile("Block: (?<type>.*)[\\w\\W\\n\\r]*?Block location: (?<location>.*)"), "type", "location");
+        BLOCK(Pattern.compile("Block: (?<type>.*)[\\w\\W\\n\\r]*?Block location: (?<location>.*)"), "type", "location"),
+        // Cannot find native libraries
+        UNSATISFIED_LINK_ERROR(Pattern.compile("java.lang.UnsatisfiedLinkError: Failed to locate library: (?<name>.*)"), "name");
 
         private final Pattern pattern;
         private final String[] groupNames;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPage.java
Patch:
@@ -160,12 +160,14 @@ private void checkAgreement(Runnable runnable) {
             });
             agreementPane.setActions(agreementLink, yesButton, noButton);
             Controllers.dialog(agreementPane);
+        } else {
+            runnable.run();
         }
     }
 
     private void downloadCatoIfNecessary() {
         if (StringUtils.isBlank(MultiplayerManager.getCatoPath())) {
-            Controllers.dialog(i18n("multiplayer.download.failed"), i18n("install.failed.downloading"), MessageDialogPane.MessageType.ERROR);
+            Controllers.dialog(i18n("multiplayer.download.unsupported"), i18n("install.failed.downloading"), MessageDialogPane.MessageType.ERROR);
             fireEvent(new PageCloseEvent());
             return;
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameCrashWindow.java
Patch:
@@ -90,6 +90,7 @@ public GameCrashWindow(ManagedProcess managedProcess, ProcessListener.ExitType e
         this.version = version;
         this.launchOptions = launchOptions;
         this.logs = logs;
+        this.analyzer = LibraryAnalyzer.analyze(version);
         this.view = new View();
 
         setScene(new Scene(view, 800, 480));
@@ -100,7 +101,6 @@ public GameCrashWindow(ManagedProcess managedProcess, ProcessListener.ExitType e
         memory = Optional.ofNullable(launchOptions.getMaxMemory()).map(i -> i + " MB").orElse("-");
         java = launchOptions.getJava().getVersion();
 
-        analyzer = LibraryAnalyzer.analyze(version);
 
         analyzeCrashReport();
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -1113,7 +1113,7 @@ public void execute() throws Exception {
         }
     }
 
-    public class CountTask extends Task<T> {
+    public final class CountTask extends Task<T> {
         private final String countStage;
 
         private CountTask(String countStage) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/MainPage.java
Patch:
@@ -90,7 +90,7 @@ public final class MainPage extends StackPane implements DecoratorPage {
         titleLabel.getStyleClass().add("jfx-decorator-title");
         titleNode.getChildren().setAll(titleIcon, titleLabel);
 
-        state.setValue(State.fromTitleNode(titleNode));
+        state.setValue(new State(null, titleNode, false, false, true));
 
         setPadding(new Insets(20));
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -29,7 +29,6 @@
 import javafx.scene.layout.StackPane;
 import javafx.scene.layout.VBox;
 import org.jackhuang.hmcl.setting.Profile;
-import org.jackhuang.hmcl.setting.Profiles;
 import org.jackhuang.hmcl.setting.Theme;
 import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.SVG;
@@ -78,9 +77,9 @@ public class VersionPage extends DecoratorAnimatedPage implements DecoratorPage
     private <T extends Node> Supplier<T> loadVersionFor(Supplier<T> nodeSupplier) {
         return () -> {
             T node = nodeSupplier.get();
-            if (this.version.get() != null) {
+            if (version.get() != null) {
                 if (node instanceof VersionPage.VersionLoadable) {
-                    ((VersionPage.VersionLoadable) node).loadVersion(Profiles.getSelectedProfile(), null);
+                    ((VersionLoadable) node).loadVersion(version.get().getProfile(), version.get().getVersion());
                 }
             }
             return node;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -116,7 +116,6 @@ public static CompletableFuture<CatoSession> joinSession(String token, String ve
             }
 
             CatoSession session = new CatoSession(sessionName, State.SLAVE, process, Arrays.asList(commands));
-            session.addRelatedThread(Lang.thread(new LocalServerBroadcaster(localPort, session), "LocalServerBroadcaster", true));
 
             CompletableFuture<CatoSession> future = new CompletableFuture<>();
 
@@ -137,8 +136,9 @@ public static CompletableFuture<CatoSession> joinSession(String token, String ve
                 client.onConnected().register(connectedEvent -> {
                     try {
                         int port = findAvailablePort();
-                        String command = String.format("net add %s %s:%d %s:%d %s\n", peer, LOCAL_ADDRESS, port, REMOTE_ADDRESS, connectedEvent.getPort(), mode.getName());
+                        String command = String.format("net add %s %s:%d %s:%d %s", peer, LOCAL_ADDRESS, port, REMOTE_ADDRESS, connectedEvent.getPort(), mode.getName());
                         LOG.info("Invoking cato: " + command);
+                        session.addRelatedThread(Lang.thread(new LocalServerBroadcaster(port, session), "LocalServerBroadcaster", true));
                         client.setGamePort(port);
                         writer.write(command);
                         writer.newLine();

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -420,6 +420,9 @@ private static Task<JavaVersion> checkGameState(Profile profile, VersionSetting
                         case VANILLA_JAVA_8:
                             Controllers.dialog(i18n("launch.advice.java8_1_13"), i18n("message.error"), MessageType.ERROR, breakAction);
                             return null;
+                        case VANILLA_LINUX_JAVA_8:
+                            Controllers.dialog(i18n("launch.advice.vanilla_linux_java_8"), i18n("message.error"), MessageType.ERROR, breakAction);
+                            return null;
                         case LAUNCH_WRAPPER:
                             Controllers.dialog(i18n("launch.advice.java9") + "\n" + i18n("launch.advice.uncorrected"), i18n("message.error"), MessageType.ERROR, breakAction);
                             return null;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/YggdrasilServer.java
Patch:
@@ -145,7 +145,7 @@ public static class Character {
         public Character(UUID uuid, String name, Skin.LoadedSkin skin) {
             this.uuid = uuid;
             this.name = name;
-            this.skin = Objects.requireNonNull(skin);
+            this.skin = skin;
         }
 
         public UUID getUUID() {
@@ -162,10 +162,10 @@ public GameProfile toSimpleResponse() {
 
         public Object toCompleteResponse(String rootUrl) {
             Map<String, Object> realTextures = new HashMap<>();
-            if (skin.getSkin() != null) {
+            if (skin != null && skin.getSkin() != null) {
                 realTextures.put("SKIN", mapOf(pair("url", rootUrl + "/textures/" + skin.getSkin().getHash())));
             }
-            if (skin.getCape() != null) {
+            if (skin != null && skin.getCape() != null) {
                 realTextures.put("CAPE", mapOf(pair("url", rootUrl + "/textures/" + skin.getSkin().getHash())));
             }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/FeedbackPage.java
Patch:
@@ -32,6 +32,7 @@
 import javafx.scene.layout.*;
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.game.MicrosoftAuthenticationServer;
+import org.jackhuang.hmcl.setting.Accounts;
 import org.jackhuang.hmcl.setting.HMCLAccounts;
 import org.jackhuang.hmcl.setting.Theme;
 import org.jackhuang.hmcl.task.Schedulers;
@@ -278,7 +279,7 @@ private void login() {
                     } else if (exception instanceof JsonParseException) {
                         errorLabel.setText(i18n("account.failed.server_response_malformed"));
                     } else {
-                        errorLabel.setText(exception.getClass().getName() + ": " + exception.getLocalizedMessage());
+                        errorLabel.setText(Accounts.localizeErrorMessage(exception));
                     }
                 } else {
                     fireEvent(new DialogCloseEvent());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -25,7 +25,7 @@
 import javafx.beans.InvalidationListener;
 import javafx.beans.binding.Bindings;
 import javafx.beans.property.*;
-import javafx.beans.value.WeakChangeListener;
+import javafx.beans.value.ChangeListener;
 import javafx.css.PseudoClass;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
@@ -83,7 +83,7 @@ public final class LogWindow extends Stage {
         }
     };
     private final LogWindowImpl impl = new LogWindowImpl();
-    private final WeakChangeListener<Number> logLinesListener = FXUtils.onWeakChange(config().logLinesProperty(), logLines -> checkLogCount());
+    private final ChangeListener<Number> logLinesListener = FXUtils.onWeakChange(config().logLinesProperty(), logLines -> checkLogCount());
 
     private Consumer<String> exportGameCrashInfoCallback;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -92,7 +92,9 @@ class ModListPageSkin extends SkinBase<ModListPage> {
                     createToolbarButton2(i18n("mods.disable"), SVG::close, () ->
                             skinnable.disableSelected(listView.getSelectionModel().getSelectedItems())),
                     createToolbarButton2(i18n("folder.mod"), SVG::folderOpen, () ->
-                            skinnable.openModFolder()));
+                            skinnable.openModFolder()),
+                    createToolbarButton2(i18n("mods.check_updates"), SVG::update, () ->
+                            skinnable.checkUpdates()));
             root.getContent().add(toolbar);
         }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/util/JavaRuntimeDownloadTask.java
Patch:
@@ -18,7 +18,7 @@ public void execute() {
     }
 
     @Override
-    public Collection<Task<?>> getDependencies() {
+    public Collection<? extends Task<?>> getDependencies() {
         return super.getDependencies();
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetDownloadTask.java
Patch:
@@ -65,6 +65,7 @@ public GameAssetDownloadTask(AbstractDependencyManager dependencyManager, Versio
         this.assetIndexFile = dependencyManager.getGameRepository().getIndexFile(version.getId(), assetIndexInfo.getId());
         this.integrityCheck = integrityCheck;
 
+        setStage("hmcl.install.assets");
         dependents.add(new GameAssetIndexDownloadTask(dependencyManager, this.version, forceDownloadingIndex));
     }
 
@@ -109,7 +110,7 @@ public void execute() throws Exception {
                         .resolve("assets").resolve("objects").resolve(assetObject.getLocation()));
                 task.setCacheRepository(dependencyManager.getCacheRepository());
                 task.setCaching(true);
-                dependencies.add(task.withCounter());
+                dependencies.add(task.withCounter("hmcl.install.assets"));
             } else {
                 dependencyManager.getCacheRepository().tryCacheFile(file.toPath(), CacheRepository.SHA1, assetObject.getHash());
             }
@@ -119,6 +120,7 @@ public void execute() throws Exception {
 
         if (!dependencies.isEmpty()) {
             getProperties().put("total", dependencies.size());
+            notifyPropertiesChanged();
         }
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameInstallTask.java
Patch:
@@ -74,7 +74,7 @@ public void execute() throws Exception {
                 Task.allOf(
                         new GameAssetDownloadTask(dependencyManager, version, GameAssetDownloadTask.DOWNLOAD_INDEX_FORCIBLY, true),
                         new GameLibrariesTask(dependencyManager, version, true)
-                ).withStage("hmcl.install.assets").withRunAsync(() -> {
+                ).withRunAsync(() -> {
                     // ignore failure
                 })
         ).thenComposeAsync(gameRepository.saveAsync(version)));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseAddon.java
Patch:
@@ -176,15 +176,14 @@ public List<RemoteMod> loadDependencies() throws IOException {
                 .collect(Collectors.toSet());
         List<RemoteMod> mods = new ArrayList<>();
         for (int dependencyId : dependencies) {
-            mods.add(CurseForgeRemoteModRepository.MODS.getAddon(dependencyId).toMod());
+            mods.add(CurseForgeRemoteModRepository.MODS.getModById(Integer.toString(dependencyId)));
         }
         return mods;
     }
 
     @Override
     public Stream<RemoteMod.Version> loadVersions() throws IOException {
-        return CurseForgeRemoteModRepository.MODS.getFiles(this).stream()
-                .map(CurseAddon.LatestFile::toVersion);
+        return CurseForgeRemoteModRepository.MODS.getRemoteVersionsById(Integer.toString(id));
     }
 
     public RemoteMod toMod() {
@@ -500,6 +499,7 @@ public RemoteMod.Version toVersion() {
 
             return new RemoteMod.Version(
                     this,
+                    Integer.toString(projectId),
                     getDisplayName(),
                     null,
                     null,

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/TaskListener.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.task;
 
 import java.util.EventListener;
-import java.util.Map;
 
 /**
  *
@@ -80,6 +79,6 @@ public void onFailed(Task<?> task, Throwable throwable) {
     public void onStop(boolean success, TaskExecutor executor) {
     }
 
-    public void onPropertiesUpdate(Map<String, Map<String, Object>> stageProperties) {
+    public void onPropertiesUpdate(Task<?> task) {
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -98,7 +98,7 @@ public void execute() throws Exception {
             Exception t = task.getException();
             if (t instanceof DownloadException)
                 throw new LibraryDownloadException(library, t.getCause());
-            else if (t == null)
+            else if (t instanceof CancellationException)
                 throw new CancellationException();
             else
                 throw new LibraryDownloadException(library, t);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountLoginPane.java
Patch:
@@ -114,6 +114,8 @@ public AccountLoginPane(Account oldAccount, Consumer<AuthInfo> success, Runnable
             dialogLayout.setActions(lblCreationWarning, acceptButton, cancelButton);
         }
 
+        getChildren().setAll(dialogLayout);
+
         onEscPressed(this, this::onCancel);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/AboutPage.java
Patch:
@@ -162,9 +162,9 @@ public AboutPage() {
             openNBT.setExternalLink("https://github.com/Steveice10/OpenNBT");
 
             IconedTwoLineListItem jstun = new IconedTwoLineListItem();
-            openNBT.setTitle("JSTUN");
-            openNBT.setSubtitle("Copyright (c) 2005 Thomas King <king@t-king.de>.\nLicensed under the Apache License 2.0.");
-            openNBT.setExternalLink("https://github.com/tking/JSTUN");
+            jstun.setTitle("JSTUN");
+            jstun.setSubtitle("Copyright (c) 2005 Thomas King <king@t-king.de>.\nLicensed under the Apache License 2.0.");
+            jstun.setExternalLink("https://github.com/tking/JSTUN");
 
             dep.getContent().setAll(javafx, jfoenix, gson, xz, fxgson, constantPoolScanner, openNBT, jstun);
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricAPIVersionList.java
Patch:
@@ -51,7 +51,7 @@ public CompletableFuture<?> refreshAsync() {
         return CompletableFuture.runAsync(wrap(() -> {
             DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
             DocumentBuilder builder = factory.newDocumentBuilder();
-            Document doc = builder.parse(downloadProvider.injectURL("https://maven.fabricmc.net/net/fabricmc/fabric-api/fabric-api/maven-metadata.xml"));
+            Document doc = builder.parse("https://maven.fabricmc.net/net/fabricmc/fabric-api/fabric-api/maven-metadata.xml");
             Element r = doc.getDocumentElement();
             NodeList versionElements = r.getElementsByTagName("version");
             for (int i = 0; i < versionElements.getLength(); i++) {

File: HMCL/src/main/java/moe/mickey/minecraft/skin/fx/SkinCanvas.java
Patch:
@@ -14,7 +14,7 @@
 public class SkinCanvas extends Group {
 
     public static final Image ALEX = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/alex.png"));
-    public static final Image STEVE = new Image(SkinCanvas.class.getResourceAsStream("/assets/img//steve.png"));
+    public static final Image STEVE = new Image(SkinCanvas.class.getResourceAsStream("/assets/img/steve.png"));
 
     public static final SkinCube ALEX_LARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 32F / 64F, 48F / 64F, 0F, true);
     public static final SkinCube ALEX_RARM = new SkinCube(3, 12, 4, 14F / 64F, 16F / 64F, 40F / 64F, 16F / 64F, 0F, true);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountLoginPane.java
Patch:
@@ -96,7 +96,7 @@ public AccountLoginPane(Account oldAccount, Consumer<AuthInfo> success, Runnable
                 JFXHyperlink migrationHowLink = new JFXHyperlink(i18n("account.methods.yggdrasil.migration.how"));
                 migrationHowLink.setOnAction(e -> FXUtils.openLink(YggdrasilService.MIGRATION_FAQ_URL));
 
-                linkPane.getChildren().setAll(migrationLink, migrationLink);
+                linkPane.getChildren().setAll(migrationLink, migrationHowLink);
             }
 
             dialogLayout.setBody(body);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseAddon.java
Patch:
@@ -165,6 +165,7 @@ public boolean isExperimental() {
     public List<DownloadManager.Mod> loadDependencies() throws IOException {
         Set<Integer> dependencies = latestFiles.stream()
                 .flatMap(latestFile -> latestFile.getDependencies().stream())
+                .filter(dep -> dep.getType() == 3)
                 .map(Dependency::getAddonId)
                 .collect(Collectors.toSet());
         List<DownloadManager.Mod> mods = new ArrayList<>();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerPageSkin.java
Patch:
@@ -301,7 +301,7 @@ private static String getNATType(DiscoveryInfo info) {
     }
 
     private static class ClientItem extends StackPane {
-        ClientItem(MultiplayerServer.CatoClient client) {
+        ClientItem(MultiplayerChannel.CatoClient client) {
             BorderPane pane = new BorderPane();
             pane.setLeft(new Label(client.getUsername()));
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccount.java
Patch:
@@ -149,7 +149,7 @@ public Map<Object, Object> toStorage() {
         return mapOf(
                 pair("uuid", UUIDTypeAdapter.fromUUID(uuid)),
                 pair("username", username),
-                pair("skin", skin.toStorage())
+                pair("skin", skin == null ? null : skin.toStorage())
         );
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/Range.java
Patch:
@@ -20,8 +20,7 @@
 import java.util.Comparator;
 import java.util.Objects;
 
-public class Range<T> {
-
+public final class Range<T> {
 
     @SuppressWarnings({"rawtypes", "unchecked"})
     private enum ComparableComparator implements Comparator {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/LocalServerBroadcaster.java
Patch:
@@ -57,7 +57,7 @@ public void run() {
                 byte[] data = String.format("[MOTD]%s[/MOTD][AD]%d[/AD]", i18n("multiplayer.session.name.motd", session.getName()), port).getBytes(StandardCharsets.UTF_8);
                 DatagramPacket packet = new DatagramPacket(data, 0, data.length, broadcastAddress, 4445);
                 socket.send(packet);
-                LOG.fine("Broadcast server 127.0.0.1:" + port);
+                LOG.fine("Broadcast server 0.0.0.0:" + port);
             } catch (IOException e) {
                 LOG.log(Level.WARNING, "Failed to send motd packet", e);
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/LocalServerDetector.java
Patch:
@@ -79,7 +79,7 @@ public void run() {
             }
 
             String response = new String(packet.getData(), packet.getOffset(), packet.getLength(), StandardCharsets.UTF_8);
-            LOG.fine("Local server broadcast message: " + response);
+            LOG.fine("Local server " + packet.getAddress() + ":" + packet.getPort() + " broadcast message: " + response);
             onDetectedLanServer.fireEvent(new DetectedLanServerEvent(this, PingResponse.parsePingResponse(response)));
             break;
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -51,7 +51,7 @@
  */
 public final class MultiplayerManager {
     private static final String CATO_DOWNLOAD_URL = "https://files.huangyuhui.net/maven/";
-    private static final String CATO_VERSION = "2021-09-21";
+    private static final String CATO_VERSION = "2021-09-25";
     private static final Artifact CATO_ARTIFACT = new Artifact("cato", "cato", CATO_VERSION,
             OperatingSystem.CURRENT_OS.getCheckedName() + "-" + Architecture.CURRENT.name().toLowerCase(Locale.ROOT),
             OperatingSystem.CURRENT_OS == OperatingSystem.WINDOWS ? "exe" : null);
@@ -85,7 +85,7 @@ public static CatoSession joinSession(String version, String sessionName, String
         if (!Files.isRegularFile(exe)) {
             throw new IllegalStateException("Cato file not found");
         }
-        String[] commands = new String[]{exe.toString(), "--token", "new", "--peer", peer, "--from", String.format("127.0.0.1:%d", localPort), "--to", String.format("127.0.0.1:%d", remotePort)};
+        String[] commands = new String[]{exe.toString(), "--token", "new", "--peer", peer, "--local", String.format("127.0.0.1:%d", localPort), "--remote", String.format("127.0.0.1:%d", remotePort)};
         Process process = new ProcessBuilder()
                 .command(commands)
                 .start();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccount.java
Patch:
@@ -23,6 +23,7 @@
 import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorArtifactInfo;
 import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorArtifactProvider;
 import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorDownloadException;
+import org.jackhuang.hmcl.auth.yggdrasil.TextureModel;
 import org.jackhuang.hmcl.auth.yggdrasil.TextureType;
 import org.jackhuang.hmcl.game.Arguments;
 import org.jackhuang.hmcl.util.StringUtils;
@@ -110,14 +111,14 @@ public AuthInfo logIn() throws AuthenticationException {
             try {
                 YggdrasilServer server = new YggdrasilServer(0);
                 server.start();
-                server.addCharacter(new YggdrasilServer.Character(uuid, username, YggdrasilServer.ModelType.STEVE,
+                server.addCharacter(new YggdrasilServer.Character(uuid, username, TextureModel.STEVE,
                         mapOf(
                                 pair(TextureType.SKIN, server.loadTexture(skin)),
                                 pair(TextureType.CAPE, server.loadTexture(cape))
                         )));
 
                 return authInfo.withArguments(new Arguments().addJVMArguments(
-                                "-javaagent:" + artifact.getLocation().toString() + "=" + "http://127.0.0.1:" + server.getListeningPort(),
+                                "-javaagent:" + artifact.getLocation().toString() + "=" + "http://localhost:" + server.getListeningPort(),
                                 "-Dauthlibinjector.side=client"
                         ))
                         .withCloseable(server::stop);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/HttpServer.java
Patch:
@@ -46,7 +46,7 @@ public HttpServer(String hostname, int port) {
     }
 
     public String getRootUrl() {
-        return "http://127.0.0.1:" + getListeningPort();
+        return "http://localhost:" + getListeningPort();
     }
 
     protected void addRoute(Method method, Pattern path, ExceptionalFunction<Request, Response, ?> server) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/LauncherSettingsPage.java
Patch:
@@ -56,7 +56,7 @@ public LauncherSettingsPage() {
         feedbackTab.setNodeSupplier(FeedbackPage::new);
         sponsorTab.setNodeSupplier(SponsorPage::new);
         aboutTab.setNodeSupplier(AboutPage::new);
-        tab = new TabHeader(gameTab, settingsTab, personalizationTab, downloadTab, helpTab, sponsorTab, aboutTab);
+        tab = new TabHeader(gameTab, settingsTab, personalizationTab, downloadTab, helpTab, feedbackTab, sponsorTab, aboutTab);
 
         tab.getSelectionModel().select(gameTab);
         gameTab.initializeIfNeeded();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -406,7 +406,7 @@ private Map<String, String> getEnvVars() {
         env.put("INST_NAME", versionName);
         env.put("INST_ID", versionName);
         env.put("INST_DIR", repository.getVersionRoot(version.getId()).getAbsolutePath());
-        env.put("INST_MC_DIR",  repository.getRunDirectory(version.getId()).getAbsolutePath());
+        env.put("INST_MC_DIR", repository.getRunDirectory(version.getId()).getAbsolutePath());
         env.put("INST_JAVA", options.getJava().getBinary().toString());
 
         LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(version);
@@ -452,6 +452,7 @@ else if (!isWindows && !FileUtils.getExtension(scriptFile).equals("sh"))
                 writer.write("@echo off");
                 writer.newLine();
                 writer.write("set APPDATA=" + options.getGameDir().getAbsoluteFile().getParent());
+                writer.newLine();
                 for (Map.Entry<String, String> entry : getEnvVars().entrySet()) {
                     writer.write("set " + entry.getKey() + "=" + entry.getValue());
                     writer.newLine();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/DownloadManager.java
Patch:
@@ -29,6 +29,7 @@ private DownloadManager() {
 
     public interface IMod {
         List<Mod> loadDependencies() throws IOException;
+
         Stream<Version> loadVersions() throws IOException;
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -191,7 +191,7 @@ protected Skin(RootPage control) {
                     .add(gameListItem)
                     .add(gameItem)
                     .add(downloadItem)
-                    .startCategory(i18n("settings.launcher.general").toLowerCase())
+                    .startCategory(i18n("settings.launcher.general").toUpperCase())
                     .add(multiplayerItem)
                     .add(launcherSettingsItem);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/SettingsPage.java
Patch:
@@ -99,8 +99,6 @@ public SettingsPage() {
         UpdateChecker.checkingUpdateProperty().addListener(new WeakInvalidationListener(updateListener));
         updateListener.invalidated(null);
 
-        lblUpdateNote.setWrappingWidth(470);
-
         ToggleGroup updateChannelGroup = new ToggleGroup();
         chkUpdateDev.setToggleGroup(updateChannelGroup);
         chkUpdateDev.setUserData(UpdateChannel.DEVELOPMENT);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -292,6 +292,8 @@ protected void updateControl(ModInfoObject dataItem, boolean empty) {
             content.setTitle(dataItem.getTitle());
             if (dataItem.getMod() != null && I18n.getCurrentLocale().getLocale() == Locale.CHINA) {
                 content.getTags().setAll(dataItem.getMod().getDisplayName());
+            } else {
+                content.getTags().clear();
             }
             content.setSubtitle(dataItem.getSubtitle());
             if (booleanProperty != null) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItemSkin.java
Patch:
@@ -116,7 +116,7 @@ public GameListItemSkin(GameListItem skinnable) {
         getChildren().setAll(container);
 
         root.setCursor(Cursor.HAND);
-        root.setOnMouseClicked(e -> {
+        container.setOnMouseClicked(e -> {
             if (e.getButton() == MouseButton.PRIMARY) {
                 if (e.getClickCount() == 1) {
                     skinnable.modifyGameSettings();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ToolbarListPageSkin.java
Patch:
@@ -43,7 +43,7 @@ public ToolbarListPageSkin(T skinnable) {
         SpinnerPane spinnerPane = new SpinnerPane();
         spinnerPane.loadingProperty().bind(skinnable.loadingProperty());
         spinnerPane.failedReasonProperty().bind(skinnable.failedReasonProperty());
-        spinnerPane.onActionProperty().bind(skinnable.onActionProperty());
+        spinnerPane.onFailedActionProperty().bind(skinnable.onFailedActionProperty());
         spinnerPane.getStyleClass().add("large-spinner-pane");
 
         ComponentList root = new ComponentList();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListPage.java
Patch:
@@ -180,7 +180,7 @@ public GameList() {
 
             Profiles.registerVersionsListener(this::loadVersions);
 
-            setOnAction(e -> Controllers.navigate(Controllers.getDownloadPage()));
+            setOnFailedAction(e ->  Controllers.navigate(Controllers.getDownloadPage()));
         }
 
         private void loadVersions(Profile profile) {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/EnumBackgroundImage.java
Patch:
@@ -19,5 +19,7 @@
 
 public enum EnumBackgroundImage {
     DEFAULT,
-    CUSTOM
+    CUSTOM,
+    CLASSIC,
+    NETWORK
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorController.java
Patch:
@@ -137,6 +137,9 @@ private void setupBackground() {
                             if (config().getBackgroundImageType() == EnumBackgroundImage.CUSTOM && config().getBackgroundImage() != null) {
                                 image = tryLoadImage(Paths.get(config().getBackgroundImage()))
                                         .orElse(null);
+                            }
+                            if (config().getBackgroundImageType() == EnumBackgroundImage.NETWORK) {
+
                             }
                             if (image == null) {
                                 image = loadDefaultBackgroundImage();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FetchTask.java
Patch:
@@ -297,6 +297,7 @@ protected static ExecutorService download() {
     }
 
     public static void setDownloadExecutorConcurrency(int concurrency) {
+        concurrency = Math.max(concurrency, 1);
         synchronized (Schedulers.class) {
             downloadExecutorConcurrency = concurrency;
             if (DOWNLOAD_EXECUTOR != null) {

File: HMCLCore/src/test/java/org/jackhuang/hmcl/util/TaskTest.java
Patch:
@@ -117,11 +117,10 @@ public void testCancellation() throws InterruptedException {
                 Assume.assumeNoException(e);
             }
         });
-        System.out.println("Start");
         Assert.assertFalse("Task should fail because we have cancelled it", executor.test());
         Thread.sleep(3000);
-        Assert.assertNull("CancellationException should not be recorded.", executor.getException());
-        Assert.assertNull("CancellationException should not be recorded.", task.getException());
+        Assert.assertTrue("CancellationException should not be recorded.", executor.getException() instanceof CancellationException);
+        Assert.assertTrue("CancellationException should not be recorded.", task.getException() instanceof CancellationException);
         Assert.assertTrue("Thread.sleep cannot be interrupted", flag.get());
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -192,7 +192,7 @@ protected Skin(RootPage control) {
                     .add(gameItem)
                     .add(downloadItem)
                     .startCategory(i18n("settings.launcher.general").toLowerCase())
-//                    .add(multiplayerItem)
+                    .add(multiplayerItem)
                     .add(launcherSettingsItem);
 
             // the root page, with the sidebar in left, navigator in center.

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/DownloadProviders.java
Patch:
@@ -26,6 +26,7 @@
 import org.jackhuang.hmcl.util.i18n.I18n;
 import org.jackhuang.hmcl.util.io.ResponseCodeException;
 
+import java.io.FileNotFoundException;
 import java.net.SocketTimeoutException;
 import java.net.URL;
 import java.util.Arrays;
@@ -147,6 +148,8 @@ public static String localizeErrorMessage(Exception exception) {
                 } else {
                     return i18n("install.failed.downloading.detail", url) + "\n" + StringUtils.getStackTrace(exception.getCause());
                 }
+            } else if (exception.getCause() instanceof FileNotFoundException) {
+                return i18n("download.code.404", url);
             } else {
                 return i18n("install.failed.downloading.detail", url) + "\n" + StringUtils.getStackTrace(exception.getCause());
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/multiplayer/MultiplayerManager.java
Patch:
@@ -36,7 +36,6 @@
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Path;
-import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Base64;
 import java.util.List;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListPage.java
Patch:
@@ -22,7 +22,6 @@
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.scene.Node;
-import javafx.scene.control.Control;
 import javafx.scene.control.ScrollPane;
 import javafx.scene.control.SkinBase;
 import javafx.scene.control.ToggleGroup;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -35,7 +35,6 @@
 
 import java.util.*;
 import java.util.concurrent.Callable;
-import java.util.concurrent.CancellationException;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.Executor;
 import java.util.function.Consumer;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -665,14 +665,14 @@ public final Task<Void> whenComplete(Executor executor, FinalizedCallback action
             @Override
             public void execute() throws Exception {
                 if (isDependentsSucceeded() != (Task.this.getException() == null))
-                    throw new AssertionError("When dependents succeeded, Task.exception must be nonnull.");
+                    throw new AssertionError("When whenComplete succeeded, Task.exception must be null.");
 
                 action.execute(Task.this.getException());
 
                 if (!isDependentsSucceeded()) {
                     setSignificance(TaskSignificance.MINOR);
                     if (Task.this.getException() == null)
-                        throw new CancellationException();
+                        throw new AssertionError("When failed, exception cannot be null");
                     else
                         throw Task.this.getException();
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -82,7 +82,7 @@ public void refresh() {
     @Override
     public void loadVersion(Profile profile, String id) {
         this.profile = profile;
-        this.versionId = versionId;
+        this.versionId = id;
 
         libraryAnalyzer = LibraryAnalyzer.analyze(profile.getRepository().getResolvedPreservingPatchesVersion(id));
         modded.set(libraryAnalyzer.hasModLoader());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListPage.java
Patch:
@@ -128,9 +128,11 @@ protected GameListPageSkin() {
                     addProfileItem.setOnAction(e -> Controllers.navigate(new ProfilePage(null)));
 
                     ScrollPane pane = new ScrollPane();
+                    pane.setFitToWidth(true);
                     VBox wrapper = new VBox();
                     wrapper.getStyleClass().add("advanced-list-box-content");
                     VBox box = new VBox();
+                    box.setFillWidth(true);
                     Bindings.bindContent(box.getChildren(), profileListItems);
                     wrapper.getChildren().setAll(box, addProfileItem);
                     pane.setContent(wrapper);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/MicrosoftAuthenticationServer.java
Patch:
@@ -98,7 +98,7 @@ public MicrosoftService.OAuthSession startServer() throws IOException {
             for (int port : new int[]{29111, 29112, 29113, 29114, 29115}) {
                 try {
                     MicrosoftAuthenticationServer server = new MicrosoftAuthenticationServer(port);
-                    server.start(NanoHTTPD.SOCKET_READ_TIMEOUT, false);
+                    server.start(NanoHTTPD.SOCKET_READ_TIMEOUT, true);
                     return server;
                 } catch (IOException e) {
                     exception = e;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -296,7 +296,7 @@ public LaunchOptions getLaunchOptions(String version, File gameDir, boolean chec
                 .setGameArguments(StringUtils.tokenize(vs.getMinecraftArgs()))
                 .setJavaArguments(StringUtils.tokenize(vs.getJavaArgs()))
                 .setMaxMemory((int)(getAllocatedMemory(
-                        vs.getMaxMemory(),
+                        vs.getMaxMemory() * 1024L * 1024L,
                         OperatingSystem.getPhysicalMemoryStatus().orElse(OperatingSystem.PhysicalMemoryStatus.INVALID).getAvailable(),
                         vs.isAutoMemory()
                 ) / 1024 / 1024))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -437,6 +437,7 @@ else if (!isWindows && !FileUtils.getExtension(scriptFile).equals("sh"))
                 writer.newLine();
             } else if (OperatingSystem.CURRENT_OS == OperatingSystem.OSX || OperatingSystem.CURRENT_OS == OperatingSystem.LINUX) {
                 writer.write("#!/usr/bin/env bash");
+                writer.newLine();
                 writer.write(new CommandBuilder().add("cd", repository.getRunDirectory(version.getId()).getAbsolutePath()).toString());
                 writer.newLine();
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/NetworkUtils.java
Patch:
@@ -21,6 +21,7 @@
 
 import java.io.*;
 import java.net.*;
+import java.nio.charset.StandardCharsets;
 import java.util.*;
 import java.util.Map.Entry;
 
@@ -173,7 +174,7 @@ public static HttpURLConnection resolveConnection(HttpURLConnection conn) throws
     public static String doGet(URL url) throws IOException {
         HttpURLConnection con = createHttpConnection(url);
         con = resolveConnection(con);
-        return IOUtils.readFullyAsString(con.getInputStream());
+        return IOUtils.readFullyAsString(con.getInputStream(), StandardCharsets.UTF_8);
     }
 
     public static String doPost(URL u, Map<String, String> params) throws IOException {

File: HMCL/src/main/java/org/jackhuang/hmcl/util/AggregatedObservableList.java
Patch:
@@ -196,4 +196,4 @@ public String dump(Function<T, Object> function) {
         sb.append("]");
         return sb.toString();
     }
-}
\ No newline at end of file
+}

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -272,9 +272,9 @@ private void initDetailsPane() {
             });
 
             HBox box = new HBox(8);
-            Hyperlink birthLink = new Hyperlink(i18n("account.methods.microsoft.birth"));
+            JFXHyperlink birthLink = new JFXHyperlink(i18n("account.methods.microsoft.birth"));
             birthLink.setOnAction(e -> FXUtils.openLink("https://support.microsoft.com/zh-cn/account-billing/如何更改-microsoft-帐户上的出生日期-837badbc-999e-54d2-2617-d19206b9540a"));
-            Hyperlink profileLink = new Hyperlink(i18n("account.methods.microsoft.profile"));
+            JFXHyperlink profileLink = new JFXHyperlink(i18n("account.methods.microsoft.profile"));
             profileLink.setOnAction(e -> FXUtils.openLink("https://account.live.com/editprof.aspx"));
             box.getChildren().setAll(profileLink, birthLink);
             GridPane.setColumnSpan(box, 2);
@@ -415,7 +415,7 @@ public AccountDetailsInputPane(AccountFactory<?> factory, Runnable onAction) {
 
             if (factory instanceof YggdrasilAccountFactory) {
                 HBox box = new HBox();
-                Hyperlink migrationLink = new Hyperlink(i18n("account.methods.yggdrasil.migration"));
+                JFXHyperlink migrationLink = new JFXHyperlink(i18n("account.methods.yggdrasil.migration"));
                 migrationLink.setOnAction(e -> FXUtils.openLink("https://help.minecraft.net/hc/en-us/articles/360050865492-JAVA-Account-Migration-FAQ"));
                 GridPane.setColumnSpan(box, 2);
                 box.getChildren().setAll(migrationLink);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModDownloadListPage.java
Patch:
@@ -26,6 +26,8 @@
 public class ModDownloadListPage extends DownloadListPage {
     public ModDownloadListPage(int section, DownloadPage.DownloadCallback callback, boolean versionSelection) {
         super(section, callback, versionSelection);
+
+        supportChinese.set(true);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModTranslations.java
Patch:
@@ -190,7 +190,7 @@ public Mod(String curseforge, String mcmod, String mcbbs, List<String> modIds, S
         public String getDisplayName() {
             StringBuilder builder = new StringBuilder();
             if (StringUtils.isNotBlank(abbr)) {
-                builder.append("[").append(abbr).append("]");
+                builder.append("[").append(abbr).append("] ");
             }
             builder.append(name);
             if (StringUtils.isNotBlank(subname)) {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -369,6 +369,8 @@ else if (remoteMessage.contains("Invalid username or password"))
             }
         } else if (exception instanceof MicrosoftService.NoMinecraftJavaEditionProfileException) {
             return i18n("account.methods.microsoft.error.no_character");
+        } else if (exception instanceof MicrosoftService.NoXuiException) {
+            return i18n("account.methods.microsoft.error.add_family_probably");
         } else if (exception.getClass() == AuthenticationException.class) {
             return exception.getLocalizedMessage();
         } else {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCInstanceConfiguration.java
Patch:
@@ -24,7 +24,9 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.InputStreamReader;
 import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 import java.nio.file.FileSystem;
 import java.nio.file.Files;
 import java.nio.file.Path;
@@ -67,7 +69,7 @@ public final class MultiMCInstanceConfiguration {
 
     private MultiMCInstanceConfiguration(String defaultName, InputStream contentStream, MultiMCManifest mmcPack) throws IOException {
         Properties p = new Properties();
-        p.load(contentStream);
+        p.load(new InputStreamReader(contentStream, StandardCharsets.UTF_8));
 
         this.mmcPack = mmcPack;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/OperatingSystem.java
Patch:
@@ -95,6 +95,8 @@ public String getCheckedName() {
     private static final String[] INVALID_RESOURCE_BASENAMES;
     private static final String[] INVALID_RESOURCE_FULLNAMES;
 
+    private static final Pattern MEMINFO_PATTERN = Pattern.compile("^(?<key>.*?):\\s+(?<value>\\d+) kB?$");
+    
     static {
         String name = System.getProperty("os.name").toLowerCase(Locale.US);
         if (name.contains("win"))
@@ -132,8 +134,6 @@ else if (name.contains("solaris") || name.contains("linux") || name.contains("un
         }
     }
 
-    private static final Pattern MEMINFO_PATTERN = Pattern.compile("^(?<key>.*?):\\s+(?<value>\\d+) kB?$");
-
     public static Optional<PhysicalMemoryStatus> getPhysicalMemoryStatus() {
         if (CURRENT_OS == LINUX) {
             try {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -360,6 +360,8 @@ else if (remoteMessage.contains("Invalid username or password"))
             long errorCode = ((MicrosoftService.XboxAuthorizationException) exception).getErrorCode();
             if (errorCode == MicrosoftService.XboxAuthorizationException.ADD_FAMILY) {
                 return i18n("account.methods.microsoft.error.add_family");
+            } else if (errorCode == MicrosoftService.XboxAuthorizationException.COUNTRY_UNAVAILABLE) {
+                return i18n("account.methods.microsoft.error.country_unavailable");
             } else if (errorCode == MicrosoftService.XboxAuthorizationException.MISSING_XBOX_ACCOUNT) {
                 return i18n("account.methods.microsoft.error.missing_xbox_account");
             } else {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MultipleSourceVersionList.java
Patch:
@@ -39,12 +39,12 @@ public boolean hasType() {
 
     @Override
     public CompletableFuture<?> loadAsync() {
-        throw new UnsupportedOperationException("ForgeBMCLVersionList does not support loading the entire Forge remote version list.");
+        throw new UnsupportedOperationException("MultipleSourceVersionList does not support loading the entire remote version list.");
     }
 
     @Override
     public CompletableFuture<?> refreshAsync() {
-        throw new UnsupportedOperationException("ForgeBMCLVersionList does not support loading the entire Forge remote version list.");
+        throw new UnsupportedOperationException("MultipleSourceVersionList does not support loading the entire remote version list.");
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/VersionJsonDownloadTask.java
Patch:
@@ -44,7 +44,7 @@ public VersionJsonDownloadTask(String gameVersion, DefaultDependencyManager depe
         this.dependencyManager = dependencyManager;
         this.gameVersionList = dependencyManager.getVersionList("game");
 
-        dependents.add(Task.fromCompletableFuture(gameVersionList.loadAsync()));
+        dependents.add(Task.fromCompletableFuture(gameVersionList.loadAsync(gameVersion)));
 
         setSignificance(TaskSignificance.MODERATE);
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorSkin.java
Patch:
@@ -187,7 +187,9 @@ public DecoratorSkin(Decorator control) {
                             s.isAnimate() ? Duration.millis(160) : null, leftPane.prefWidthProperty(), null, container.getWidth(), FXUtils.SINE);
                     if (animation != null) {
                         animation.setOnFinished(action -> {
-                            leftPane.prefWidthProperty().bind(container.widthProperty());
+                            if (animation.getStatus() != Animation.Status.STOPPED) {
+                                leftPane.prefWidthProperty().bind(container.widthProperty());
+                            }
                         });
                     }
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -334,7 +334,7 @@ private static void fetchDependencies(Repository repository, List<DependencyDesc
             final String url = repository.resolveDependencyURL(dependency);
             SwingUtilities.invokeLater(() -> {
                 dialog.setStatus(url);
-                dialog.setProgress(currentProgress, dependencies.size());
+                dialog.setProgress(currentProgress, dependencies.size() + 1);
             });
 
             LOG.info("Downloading " + url);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -282,7 +282,7 @@ private static List<Hyperlink> createHyperlinks(AuthlibInjectorServer server) {
         public AccountDetailsInputPane(AccountFactory<?> factory, Runnable onAction) {
             this.factory = factory;
 
-            setVgap(15);
+            setVgap(22);
             setHgap(15);
             setAlignment(Pos.CENTER);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/CreateAccountPane.java
Patch:
@@ -38,6 +38,7 @@
 import org.jackhuang.hmcl.auth.yggdrasil.YggdrasilService;
 import org.jackhuang.hmcl.game.TexturesLoader;
 import org.jackhuang.hmcl.setting.Accounts;
+import org.jackhuang.hmcl.setting.Theme;
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.task.TaskExecutor;
@@ -312,16 +313,16 @@ public AccountDetailsInputPane(AccountFactory<?> factory, Runnable onAction) {
                 classPropertyFor(cboServers, "jfx-combo-box-warning").bind(noServers);
                 classPropertyFor(cboServers, "jfx-combo-box").bind(noServers.not());
                 HBox.setHgrow(cboServers, Priority.ALWAYS);
+                HBox.setMargin(cboServers, new Insets(0, 10, 0, 0));
                 cboServers.setMaxWidth(Double.MAX_VALUE);
 
                 HBox linksContainer = new HBox();
                 linksContainer.setAlignment(Pos.CENTER);
-                linksContainer.setPadding(new Insets(0, 5, 0, 15));
                 onChangeAndOperate(cboServers.valueProperty(), server -> linksContainer.getChildren().setAll(createHyperlinks(server)));
                 linksContainer.setMinWidth(USE_PREF_SIZE);
 
                 JFXButton btnAddServer = new JFXButton();
-                btnAddServer.setGraphic(SVG.plus(null, 20, 20));
+                btnAddServer.setGraphic(SVG.plus(Theme.blackFillBinding(), 20, 20));
                 btnAddServer.getStyleClass().add("toggle-icon4");
                 btnAddServer.setOnAction(e -> {
                     Controllers.dialog(new AddAuthlibInjectorServerPane());

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -365,6 +365,8 @@ else if (remoteMessage.contains("Invalid username or password"))
             } else {
                 return i18n("account.methods.microsoft.error.unknown", errorCode);
             }
+        } else if (exception instanceof MicrosoftService.NoMinecraftJavaEditionProfileException) {
+            return i18n("account.methods.microsoft.error.no_character");
         } else if (exception.getClass() == AuthenticationException.class) {
             return exception.getLocalizedMessage();
         } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/LauncherSettingsPage.java
Patch:
@@ -67,7 +67,7 @@ public LauncherSettingsPage() {
         {
             AdvancedListBox sideBar = new AdvancedListBox()
                     .addNavigationDrawerItem(settingsItem -> {
-                        settingsItem.setTitle(i18n("settings.type.global.manag"));
+                        settingsItem.setTitle(i18n("settings.type.global.manage"));
                         settingsItem.setLeftGraphic(wrap(SVG.gamepad(null, 20, 20)));
                         settingsItem.activeProperty().bind(tab.getSelectionModel().selectedItemProperty().isEqualTo(gameTab));
                         settingsItem.setOnAction(e -> tab.getSelectionModel().select(gameTab));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/SettingsView.java
Patch:
@@ -69,6 +69,7 @@ public SettingsView() {
                         StackPane sponsorPane = new StackPane();
                         sponsorPane.setCursor(Cursor.HAND);
                         sponsorPane.setOnMouseClicked(e -> onSponsor());
+                        sponsorPane.setPadding(new Insets(8, 0, 8, 0));
 
                         GridPane gridPane = new GridPane();
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -105,6 +105,7 @@ public VersionsPage(WizardController controller, String title, String gameVersio
         } else {
             centrePane.getContent().setAll(list);
         }
+        list.getProperties().put("vgrow", true);
 
         InvalidationListener listener = o -> list.getItems().setAll(loadVersions());
         chkRelease.selectedProperty().addListener(listener);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItemSkin.java
Patch:
@@ -90,6 +90,7 @@ public void fire() {
 
         JFXButton btnRefresh = new JFXButton();
         SpinnerPane spinnerRefresh = new SpinnerPane();
+        spinnerRefresh.getStyleClass().setAll("small-spinner-pane");
         btnRefresh.setOnMouseClicked(e -> {
             spinnerRefresh.showSpinner();
             skinnable.refreshAsync()

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -450,7 +450,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
 
             // First find if same java version but whose platform is 64-bit installed.
             Optional<JavaVersion> java64 = JavaVersion.getJavas().stream()
-                    .filter(javaVersion -> javaVersion.getPlatform() == org.jackhuang.hmcl.util.platform.Platform.PLATFORM)
+                    .filter(javaVersion -> javaVersion.getPlatform() == org.jackhuang.hmcl.util.platform.Platform.getPlatform())
                     .filter(javaVersion -> javaVersion.getParsedVersion() == java32.getParsedVersion())
                     .max(Comparator.comparing(JavaVersion::getVersionNumber));
 
@@ -459,7 +459,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
 
                 // Then find if other java version which satisfies requirements installed.
                 java64 = JavaVersion.getJavas().stream()
-                        .filter(javaVersion -> javaVersion.getPlatform() == org.jackhuang.hmcl.util.platform.Platform.PLATFORM)
+                        .filter(javaVersion -> javaVersion.getPlatform() == org.jackhuang.hmcl.util.platform.Platform.getPlatform())
                         .filter(javaVersion -> {
                             if (java8requiredFinal) return javaVersion.getParsedVersion() == JavaVersion.JAVA_8;
                             if (newJavaRequiredFinal) return javaVersion.getParsedVersion() >= JavaVersion.JAVA_8;

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -567,7 +567,7 @@ else if (isUsesCustomJavaDir()) {
                 if (checkJava)
                     return JavaVersion.fromExecutable(Paths.get(getJavaDir()));
                 else
-                    return new JavaVersion(Paths.get(getJavaDir()), "", Platform.PLATFORM);
+                    return new JavaVersion(Paths.get(getJavaDir()), "", Platform.getPlatform());
             } catch (IOException | InvalidPathException e) {
                 return null; // Custom Java Directory not found,
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -80,7 +80,6 @@ private SelfDependencyPatcher() {
     static class DependencyDescriptor {
 
         private static final Path DEPENDENCIES_DIR_PATH = HMCL_DIRECTORY.resolve("dependencies");
-
         public static final String CURRENT_ARCH_CLASSIFIER = currentArchClassifier();
 
         private static String currentArchClassifier() {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Library.java
Patch:
@@ -94,7 +94,7 @@ public String getVersion() {
     public String getClassifier() {
         if (artifact.getClassifier() == null)
             if (natives != null && natives.containsKey(OperatingSystem.CURRENT_OS))
-                return natives.get(OperatingSystem.CURRENT_OS).replace("${arch}", Platform.PLATFORM.getBit());
+                return natives.get(OperatingSystem.CURRENT_OS).replace("${arch}", Platform.getPlatform().getBit());
             else
                 return null;
         else

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -165,7 +165,7 @@ public static JavaVersion fromCurrentEnvironment() {
         CURRENT_JAVA = new JavaVersion(
                 currentExecutable,
                 System.getProperty("java.version"),
-                Platform.PLATFORM);
+                Platform.getPlatform());
     }
 
     private static Collection<JavaVersion> JAVAS;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/Platform.java
Patch:
@@ -47,7 +47,9 @@ public String getBit() {
     /**
      * The platform of current Java Environment.
      */
-    public static final Platform PLATFORM = Architecture.CURRENT.getPlatform();
+    public static Platform getPlatform() {
+        return Architecture.CURRENT.getPlatform();
+    }
 
     /**
      * The json serializer to {@link Platform}.

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/LauncherSettingsPage.java
Patch:
@@ -67,7 +67,7 @@ public LauncherSettingsPage() {
         {
             AdvancedListBox sideBar = new AdvancedListBox()
                     .addNavigationDrawerItem(settingsItem -> {
-                        settingsItem.setTitle(i18n("settings.game.current"));
+                        settingsItem.setTitle(i18n("settings.type.global.manag"));
                         settingsItem.setLeftGraphic(wrap(SVG.gamepad(null, 20, 20)));
                         settingsItem.activeProperty().bind(tab.getSelectionModel().selectedItemProperty().isEqualTo(gameTab));
                         settingsItem.setOnAction(e -> tab.getSelectionModel().select(gameTab));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/java/JavaDownloadTask.java
Patch:
@@ -98,8 +98,8 @@ public void execute() throws Exception {
                     FileDownloadTask task = new FileDownloadTask(NetworkUtils.toURL(download.getUrl()), tempFile, new FileDownloadTask.IntegrityCheck("SHA-1", download.getSha1()));
                     task.setName(entry.getKey());
                     dependencies.add(task.thenRunAsync(() -> {
-                        try {
-                            Files.copy(new LZMAInputStream(new FileInputStream(tempFile)), dest);
+                        try (LZMAInputStream input = new LZMAInputStream(new FileInputStream(tempFile))) {
+                            Files.copy(input, dest);
                         } catch (IOException e) {
                             throw new ArtifactMalformedException("File " + entry.getKey() + " is malformed");
                         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MultipleSourceVersionList.java
Patch:
@@ -27,13 +27,13 @@ public class MultipleSourceVersionList extends VersionList<RemoteVersion> {
     MultipleSourceVersionList(List<VersionList<?>> backends) {
         this.backends = backends;
 
-        assert(backends.size() >= 1);
+        assert (backends.size() >= 1);
     }
 
     @Override
     public boolean hasType() {
         boolean hasType = backends.get(0).hasType();
-        assert(backends.stream().allMatch(versionList -> versionList.hasType() == hasType));
+        assert (backends.stream().allMatch(versionList -> versionList.hasType() == hasType));
         return hasType;
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -310,7 +310,6 @@ private static void fetchDependencies(Repository repository, List<DependencyDesc
         dialog.dispose();
     }
 
-
     private static List<DependencyDescriptor> checkMissingDependencies() {
         List<DependencyDescriptor> missing = new ArrayList<>();
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorSkin.java
Patch:
@@ -178,8 +178,8 @@ public DecoratorSkin(Decorator control) {
                     navBarPane.getChildren().setAll(node);
                 }
 
+                leftPane.prefWidthProperty().unbind();
                 if (s.getLeftPaneWidth() >= 0) {
-                    leftPane.prefWidthProperty().unbind();
                     FXUtils.playAnimation(leftPane, "animation",
                             s.isAnimate() ? Duration.millis(160) : null, leftPane.prefWidthProperty(), null, s.getLeftPaneWidth(), FXUtils.SINE);
                 } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -182,7 +182,7 @@ else if (McbbsModpackLocalInstallTask.MODPACK_TYPE.equals(configuration.getType(
                 .thenComposeAsync(authInfo -> Task.supplyAsync(() -> {
                     return new HMCLGameLauncher(
                             repository,
-                            version.getPatches().isEmpty() ? repository.getResolvedVersion(selectedVersion) : version,
+                            version,
                             authInfo,
                             repository.getLaunchOptions(selectedVersion, profile.getGameDir(), !setting.isNotCheckJVM()),
                             launcherVisibility == LauncherVisibility.CLOSE

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/Log4jLevel.java
Patch:
@@ -102,7 +102,7 @@ public static Log4jLevel guessLevel(String line) {
                     }
             }
 
-            if (line.contains("STDERR]")) {
+            if (line.contains("STDERR]") || line.contains("[STDERR/]")) {
                 level = ERROR;
             }
         } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -55,7 +55,6 @@
 import org.jackhuang.hmcl.ui.construct.MessageDialogPane.MessageType;
 import org.jackhuang.hmcl.ui.construct.TaskExecutorDialogPane;
 import org.jackhuang.hmcl.util.*;
-import org.jackhuang.hmcl.util.gson.UUIDTypeAdapter;
 import org.jackhuang.hmcl.util.i18n.I18n;
 import org.jackhuang.hmcl.util.io.ResponseCodeException;
 import org.jackhuang.hmcl.util.platform.*;
@@ -603,7 +602,7 @@ public HMCLProcessListener(HMCLGameRepository repository, String version, AuthIn
                 forbiddenTokens = Collections.emptyMap();
             else
                 forbiddenTokens = mapOf(
-                        pair(authInfo.getAccessToken(), "<access token>"),
+                        pair(authInfo.getAccessToken(), "<access token>")
                 );
 
             logs = new LinkedList<>();

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -604,7 +604,6 @@ public HMCLProcessListener(HMCLGameRepository repository, String version, AuthIn
             else
                 forbiddenTokens = mapOf(
                         pair(authInfo.getAccessToken(), "<access token>"),
-                        pair(UUIDTypeAdapter.fromUUID(authInfo.getUUID()), "<uuid>")
                 );
 
             logs = new LinkedList<>();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TabControl.java
Patch:
@@ -260,7 +260,7 @@ public void setUserData(Object userData) {
         }
 
         public boolean isInitialized() {
-            return getNode() == null;
+            return getNode() != null;
         }
 
         public boolean initializeIfNeeded() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountAdvancedListItem.java
Patch:
@@ -78,6 +78,8 @@ public AccountAdvancedListItem() {
         setLeftGraphic(view.getKey());
         imageView = view.getValue();
 
+        setActionButtonVisible(false);
+
         setOnScroll(event -> {
             Account current = account.get();
             if (current == null) return;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/RootPage.java
Patch:
@@ -182,7 +182,6 @@ protected Skin(RootPage control) {
                     .startCategory(i18n("version").toUpperCase())
                     .add(gameListItem)
                     .add(gameItem)
-                    .startCategory(i18n("launcher").toUpperCase())
                     .add(launcherSettingsItem);
 
             // the root page, with the sidebar in left, navigator in center.

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/OperatingSystem.java
Patch:
@@ -130,7 +130,7 @@ else if (name.contains("solaris") || name.contains("linux") || name.contains("un
     }
 
     public static Optional<PhysicalMemoryStatus> getPhysicalMemoryStatus() {
-        java.lang.management.OperatingSystemMXBean bean =  java.lang.management.ManagementFactory.getOperatingSystemMXBean();
+        java.lang.management.OperatingSystemMXBean bean = java.lang.management.ManagementFactory.getOperatingSystemMXBean();
         if (bean instanceof com.sun.management.OperatingSystemMXBean) {
             com.sun.management.OperatingSystemMXBean sunBean =
                     (com.sun.management.OperatingSystemMXBean)

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -597,8 +597,7 @@ public HMCLProcessListener(HMCLGameRepository repository, String version, AuthIn
             else
                 forbiddenTokens = mapOf(
                         pair(authInfo.getAccessToken(), "<access token>"),
-                        pair(UUIDTypeAdapter.fromUUID(authInfo.getUUID()), "<uuid>"),
-                        pair(authInfo.getUsername(), "<player>")
+                        pair(UUIDTypeAdapter.fromUUID(authInfo.getUUID()), "<uuid>")
                 );
 
             logs = new LinkedList<>();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/microsoft/MicrosoftService.java
Patch:
@@ -239,15 +239,15 @@ private static void getXBoxProfile(String uhs, String xstsToken) throws IOExcept
                         + "PublicGamerpic,ShowUserAsAvatar,Gamerscore,Gamertag,ModernGamertag,ModernGamertagSuffix,"
                         + "UniqueModernGamertag,AccountTier,TenureLevel,XboxOneRep,"
                         + "PreferredColor,Location,Bio,Watermarks," + "RealName,RealNameOverride,IsQuarantined"))
-                .contentType("application/json").accept("application/json")
+                .accept("application/json")
                 .authorization(String.format("XBL3.0 x=%s;%s", uhs, xstsToken)).header("x-xbl-contract-version", "3")
                 .getString();
     }
 
     private static MinecraftProfileResponse getMinecraftProfile(String tokenType, String accessToken)
             throws IOException, AuthenticationException {
         HttpURLConnection conn = HttpRequest.GET("https://api.minecraftservices.com/minecraft/profile")
-                .contentType("application/json").authorization(String.format("%s %s", tokenType, accessToken))
+                .authorization(String.format("%s %s", tokenType, accessToken))
                 .createConnection();
         int responseCode = conn.getResponseCode();
         if (responseCode == HTTP_NOT_FOUND) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/LaunchOptions.java
Patch:
@@ -55,7 +55,7 @@ public class LaunchOptions implements Serializable {
     private String preLaunchCommand;
     private NativesDirectoryType nativesDirType;
     private String nativesDir;
-    private ProcessPriority processPriority;
+    private ProcessPriority processPriority = ProcessPriority.NORMAL;
 
     /**
      * The game directory
@@ -497,7 +497,7 @@ public Builder setNativesDir(String nativesDir) {
             return this;
         }
 
-        public Builder setProcessPriority(ProcessPriority processPriority) {
+        public Builder setProcessPriority(@NotNull ProcessPriority processPriority) {
             options.processPriority = processPriority;
             return this;
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -597,8 +597,7 @@ public HMCLProcessListener(HMCLGameRepository repository, String version, AuthIn
             else
                 forbiddenTokens = mapOf(
                         pair(authInfo.getAccessToken(), "<access token>"),
-                        pair(UUIDTypeAdapter.fromUUID(authInfo.getUUID()), "<uuid>"),
-                        pair(authInfo.getUsername(), "<player>")
+                        pair(UUIDTypeAdapter.fromUUID(authInfo.getUUID()), "<uuid>")
                 );
 
             logs = new LinkedList<>();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/AboutPage.java
Patch:
@@ -80,7 +80,7 @@ public AboutPage() {
             contributors.setTitle(i18n("about.thanks_to.contributors"));
             contributors.setSubtitle(i18n("about.thanks_to.contributors.statement"));
             contributors.setExternalLink("https://github.com/huanghongxun/HMCL/graphs/contributors");
-            mcbbs.setExternalLink("https://hmcl.huangyuhui.net/api/redirect/sponsor");
+            contributors.setExternalLink("https://hmcl.huangyuhui.net/api/redirect/sponsor");
 
             IconedTwoLineListItem users = new IconedTwoLineListItem();
             users.setImage(new Image("/assets/img/craft_table.png", 32, 32, false, true));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/main/SponsorPage.java
Patch:
@@ -110,8 +110,7 @@ private void onSponsor() {
 
     private void loadSponsorList() {
         Task.<List<Sponsor>>supplyAsync(() -> HttpRequest.GET("https://hmcl.huangyuhui.net/api/sponsor").getJson(new TypeToken<List<Sponsor>>() {
-                }.getType())
-        ).thenAcceptAsync(Schedulers.javafx(), sponsors -> {
+        }.getType())).thenAcceptAsync(Schedulers.javafx(), sponsors -> {
             listView.getItems().setAll(sponsors);
         }).start();
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/HttpRequest.java
Patch:
@@ -28,6 +28,7 @@
 import java.net.HttpURLConnection;
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -97,7 +98,7 @@ public HttpGetRequest(URL url) {
         public String getString() throws IOException {
             HttpURLConnection con = createConnection();
             con = resolveConnection(con);
-            return IOUtils.readFullyAsString(con.getInputStream());
+            return IOUtils.readFullyAsString(con.getInputStream(), StandardCharsets.UTF_8);
         }
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/microsoft/MicrosoftService.java
Patch:
@@ -33,6 +33,7 @@
 
 import java.io.IOException;
 import java.net.HttpURLConnection;
+import java.net.URL;
 import java.util.*;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.ThreadPoolExecutor;
@@ -251,6 +252,8 @@ private static MinecraftProfileResponse getMinecraftProfile(String tokenType, St
         int responseCode = conn.getResponseCode();
         if (responseCode == HTTP_NOT_FOUND) {
             throw new NoCharacterException();
+        } else if (responseCode != 200) {
+            throw new ResponseCodeException(new URL("https://api.minecraftservices.com/minecraft/profile"), responseCode);
         }
 
         String result = NetworkUtils.readData(conn);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/microsoft/MicrosoftService.java
Patch:
@@ -198,7 +198,6 @@ public Optional<MinecraftProfileResponse> getCompleteProfile(String authorizatio
     }
 
     public boolean validate(String tokenType, String accessToken) throws AuthenticationException {
-        if (true) return false;
         requireNonNull(tokenType);
         requireNonNull(accessToken);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/MicrosoftAuthenticationServer.java
Patch:
@@ -35,7 +35,7 @@
 import static org.jackhuang.hmcl.util.Lang.mapOf;
 import static org.jackhuang.hmcl.util.Lang.thread;
 
-public class MicrosoftAuthenticationServer extends NanoHTTPD implements MicrosoftService.OAuthSession {
+public final class MicrosoftAuthenticationServer extends NanoHTTPD implements MicrosoftService.OAuthSession {
     private final int port;
     private final CompletableFuture<String> future = new CompletableFuture<>();
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/HttpRequest.java
Patch:
@@ -107,7 +107,7 @@ public HttpPostRequest json(Object payload) throws JsonParseException {
             return string(payload instanceof String ? (String) payload : GSON.toJson(payload), "application/json");
         }
 
-        public final HttpPostRequest form(Map<String, String> params) {
+        public HttpPostRequest form(Map<String, String> params) {
             return string(NetworkUtils.withQuery("", params), "application/x-www-form-urlencoded");
         }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -267,5 +267,7 @@ public static void shutdown() {
         decorator = null;
         stage = null;
         scene = null;
+        stageHeight = null;
+        stageWidth = null;
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -46,7 +46,6 @@
 import org.jackhuang.hmcl.ui.download.ModpackInstallWizardProvider;
 import org.jackhuang.hmcl.ui.main.LauncherSettingsPage;
 import org.jackhuang.hmcl.ui.main.RootPage;
-import org.jackhuang.hmcl.ui.main.SettingsPage;
 import org.jackhuang.hmcl.ui.versions.GameListPage;
 import org.jackhuang.hmcl.ui.versions.ModDownloadListPage;
 import org.jackhuang.hmcl.ui.versions.VersionPage;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameItem.java
Patch:
@@ -69,7 +69,7 @@ public GameItem(Profile profile, String id) {
                         if (I18n.hasKey("install.installer." + libraryId)) {
                             libraries.append(", ").append(i18n("install.installer." + libraryId));
                             if (libraryVersion != null)
-                                libraries.append(": ").append(LibraryAnalyzer.modifyVersion(game, libraryVersion.replaceAll("(?i)" + libraryId, "")));
+                                libraries.append(": ").append(libraryVersion.replaceAll("(?i)" + libraryId, ""));
                         }
                     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/AdditionalInstallersPage.java
Patch:
@@ -1,6 +1,6 @@
 /*
  * Hello Minecraft! Launcher
- * Copyright (C) 2020  huangyuhui <huanghongxun2008@126.com> and contributors
+ * Copyright (C) 2021  huangyuhui <huanghongxun2008@126.com> and contributors
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -23,6 +23,7 @@
 import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.GameRepository;
+import org.jackhuang.hmcl.game.HMCLGameRepository;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.ui.InstallerItem;
 import org.jackhuang.hmcl.ui.wizard.WizardController;
@@ -40,7 +41,7 @@ class AdditionalInstallersPage extends InstallersPage {
     protected final String gameVersion;
     protected final Version version;
 
-    public AdditionalInstallersPage(String gameVersion, Version version, WizardController controller, GameRepository repository, InstallerWizardDownloadProvider downloadProvider) {
+    public AdditionalInstallersPage(String gameVersion, Version version, WizardController controller, HMCLGameRepository repository, InstallerWizardDownloadProvider downloadProvider) {
         super(controller, repository, gameVersion, downloadProvider);
         this.gameVersion = gameVersion;
         this.version = version;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackInfoPage.java
Patch:
@@ -1,6 +1,6 @@
 /*
  * Hello Minecraft! Launcher
- * Copyright (C) 2020  huangyuhui <huanghongxun2008@126.com> and contributors
+ * Copyright (C) 2021  huangyuhui <huanghongxun2008@126.com> and contributors
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -215,7 +215,7 @@ public ModpackInfoPageSkin(ModpackInfoPage skinnable) {
                         txtModpackName.textProperty().bindBidirectional(skinnable.name);
                         txtModpackName.setLabelFloat(true);
                         txtModpackName.setPromptText(i18n("modpack.name"));
-                        txtModpackName.getValidators().add(new RequiredValidator(i18n("modpack.not_a_valid_name")));
+                        txtModpackName.getValidators().add(new RequiredValidator());
                         StackPane.setMargin(txtModpackName, insets);
                         list.getContent().add(txtModpackName);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/LocalModpackPage.java
Patch:
@@ -1,6 +1,6 @@
 /*
  * Hello Minecraft! Launcher
- * Copyright (C) 2020  huangyuhui <huanghongxun2008@126.com> and contributors
+ * Copyright (C) 2021  huangyuhui <huanghongxun2008@126.com> and contributors
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -131,7 +131,8 @@ public LocalModpackPage(WizardController controller) {
                     lblModpackLocation.setText(selectedFile.getAbsolutePath());
 
                     if (!name.isPresent()) {
-                        txtModpackName.setText(manifest.getName());
+                        // trim: https://github.com/huanghongxun/HMCL/issues/962
+                        txtModpackName.setText(manifest.getName().trim());
                     }
                 }, e -> {
                     Controllers.dialog(i18n("modpack.task.install.error"), i18n("message.error"), MessageType.ERROR);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/RemoteModpackPage.java
Patch:
@@ -1,6 +1,6 @@
 /*
  * Hello Minecraft! Launcher
- * Copyright (C) 2020  huangyuhui <huanghongxun2008@126.com> and contributors
+ * Copyright (C) 2021  huangyuhui <huanghongxun2008@126.com> and contributors
  *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -101,7 +101,8 @@ public RemoteModpackPage(WizardController controller) {
         lblAuthor.setText(manifest.getAuthor());
 
         if (!name.isPresent()) {
-            txtModpackName.setText(manifest.getName());
+            // trim: https://github.com/huanghongxun/HMCL/issues/962
+            txtModpackName.setText(manifest.getName().trim());
             txtModpackName.getValidators().addAll(
                     new Validator(i18n("install.new_game.already_exists"), str -> !profile.getRepository().hasVersion(str) && StringUtils.isNotBlank(str)),
                     new Validator(i18n("version.forbidden_name"), str -> !profile.getRepository().forbidsVersion(str))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/BMCLAPIDownloadProvider.java
Patch:
@@ -84,6 +84,7 @@ public String injectURL(String baseURL) {
                 .replace("https://launcher.mojang.com", apiRoot)
                 .replace("https://libraries.minecraft.net", apiRoot + "/libraries")
                 .replaceFirst("https?://files\\.minecraftforge\\.net/maven", apiRoot + "/maven")
+                .replace("https://maven.minecraftforge.net", apiRoot + "/maven")
                 .replace("http://dl.liteloader.com/versions/versions.json", apiRoot + "/maven/com/mumfrey/liteloader/versions.json")
                 .replace("http://dl.liteloader.com/versions", apiRoot + "/maven")
                 .replace("https://meta.fabricmc.net", apiRoot + "/fabric-meta")

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/LibraryAnalyzer.java
Patch:
@@ -158,7 +158,8 @@ public enum LibraryType {
         FABRIC(true, "fabric", Pattern.compile("net\\.fabricmc"), Pattern.compile("fabric-loader")),
         FORGE(true, "forge", Pattern.compile("net\\.minecraftforge"), Pattern.compile("(forge|fmlloader)")),
         LITELOADER(true, "liteloader", Pattern.compile("com\\.mumfrey"), Pattern.compile("liteloader")),
-        OPTIFINE(false, "optifine", Pattern.compile("(net\\.)?optifine"), Pattern.compile("^(?!.*launchwrapper).*$"));
+        OPTIFINE(false, "optifine", Pattern.compile("(net\\.)?optifine"), Pattern.compile("^(?!.*launchwrapper).*$")),
+        BOOTSTRAP_LAUNCHER(false, "", Pattern.compile("cpw\\.mods"), Pattern.compile("bootstraplauncher"));
 
         private final boolean modLoader;
         private final String patchId;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -304,7 +304,8 @@ protected Map<String, String> getConfigurations() {
                 // when we propose this placeholder.
                 pair("${libraries_directory}", repository.getLibrariesDirectory(version).getAbsolutePath()),
                 // file_separator is used in -DignoreList
-                pair("${file_separator}", OperatingSystem.FILE_SEPARATOR)
+                pair("${file_separator}", OperatingSystem.FILE_SEPARATOR),
+                pair("${primary_jar_name}", FileUtils.getName(repository.getVersionJar(version).toPath()))
         );
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItemSkin.java
Patch:
@@ -93,7 +93,7 @@ public void fire() {
         btnRefresh.setOnMouseClicked(e -> {
             spinnerRefresh.showSpinner();
             skinnable.refreshAsync()
-                    .whenComplete(ex -> spinnerRefresh.hideSpinner())
+                    .whenComplete(Schedulers.javafx(), ex -> spinnerRefresh.hideSpinner())
                     .start();
         });
         btnRefresh.getStyleClass().add("toggle-icon4");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/SpinnerPane.java
Patch:
@@ -19,7 +19,7 @@
 
 import com.jfoenix.controls.JFXSpinner;
 import javafx.beans.DefaultProperty;
-import javafx.beans.WeakInvalidationListener;
+import javafx.beans.InvalidationListener;
 import javafx.beans.property.*;
 import javafx.scene.Node;
 import javafx.scene.control.Control;
@@ -94,7 +94,7 @@ private static class Skin extends SkinBase<SpinnerPane> {
         private final StackPane failedPane = new StackPane();
         private final Label failedReasonLabel = new Label();
         @SuppressWarnings("FieldCanBeLocal") // prevent from gc.
-        private final WeakInvalidationListener observer;
+        private final InvalidationListener observer;
 
         protected Skin(SpinnerPane control) {
             super(control);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModDownloadListPage.java
Patch:
@@ -47,7 +47,7 @@
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
-public class ModDownloadListPage extends Control implements DecoratorPage {
+public class ModDownloadListPage extends Control implements DecoratorPage, VersionPage.VersionLoadable {
     protected final ReadOnlyObjectWrapper<State> state = new ReadOnlyObjectWrapper<>();
     private final BooleanProperty loading = new SimpleBooleanProperty(false);
     private final BooleanProperty failed = new SimpleBooleanProperty(false);
@@ -66,6 +66,7 @@ public ModDownloadListPage(int section, ModDownloadPage.DownloadCallback callbac
         this.callback = callback;
     }
 
+    @Override
     public void loadVersion(Profile profile, String version) {
         this.version.set(new Profile.ProfileVersion(profile, version));
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -67,7 +67,7 @@
 import static org.jackhuang.hmcl.ui.FXUtils.stringConverter;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
-public final class VersionSettingsPage extends StackPane implements DecoratorPage {
+public final class VersionSettingsPage extends StackPane implements DecoratorPage, VersionPage.VersionLoadable {
     private final ReadOnlyObjectWrapper<State> state = new ReadOnlyObjectWrapper<>(new State("", null, false, false, false));
 
     private VersionSetting lastVersionSetting = null;
@@ -168,6 +168,7 @@ private void initialize() {
         advancedSettingsPane.disableProperty().bind(chkEnableSpecificSettings.selectedProperty().not());
     }
 
+    @Override
     public void loadVersion(Profile profile, String versionId) {
         this.profile = profile;
         this.versionId = versionId;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListPage.java
Patch:
@@ -47,7 +47,7 @@
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
-public class WorldListPage extends ListPageBase<WorldListItem> {
+public class WorldListPage extends ListPageBase<WorldListItem> implements VersionPage.VersionLoadable {
     private final BooleanProperty showAll = new SimpleBooleanProperty(this, "showAll", false);
 
     private Path savesDir;
@@ -74,11 +74,11 @@ protected ToolbarListPageSkin<WorldListPage> createDefaultSkin() {
         return new WorldListPageSkin();
     }
 
-    public CompletableFuture<?> loadVersion(Profile profile, String id) {
+    public void loadVersion(Profile profile, String id) {
         this.profile = profile;
         this.id = id;
         this.savesDir = profile.getRepository().getRunDirectory(id).toPath().resolve("saves");
-        return refresh();
+        refresh();
     }
 
     public CompletableFuture<?> refresh() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItemSkin.java
Patch:
@@ -51,7 +51,7 @@ public ProfileListItemSkin(ProfileListItem skinnable) {
             getSkinnable().setSelected(true);
         });
 
-        Node left = VersionPage.wrap(SVG.folderOutline(Theme.blackFillBinding(), 24, 24));
+        Node left = VersionPage.wrap(SVG.folderOutline(null, 24, 24));
         root.setLeft(left);
         BorderPane.setAlignment(left, Pos.CENTER_LEFT);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -21,9 +21,7 @@
 import javafx.scene.control.Tooltip;
 import javafx.scene.image.ImageView;
 import org.jackhuang.hmcl.setting.Profiles;
-import org.jackhuang.hmcl.setting.Theme;
 import org.jackhuang.hmcl.ui.FXUtils;
-import org.jackhuang.hmcl.ui.SVG;
 import org.jackhuang.hmcl.ui.construct.AdvancedListItem;
 import org.jackhuang.hmcl.util.Pair;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItemSkin.java
Patch:
@@ -81,7 +81,7 @@ public GameListItemSkin(GameListItem skinnable) {
             JFXButton btnUpgrade = new JFXButton();
             btnUpgrade.setOnMouseClicked(e -> skinnable.update());
             btnUpgrade.getStyleClass().add("toggle-icon4");
-            btnUpgrade.setGraphic(SVG.update(Theme.blackFillBinding(), -1, -1));
+            btnUpgrade.setGraphic(FXUtils.limitingSize(SVG.update(Theme.blackFillBinding(), 24, 24), 24, 24));
             runInFX(() -> FXUtils.installFastTooltip(btnUpgrade, i18n("version.update")));
             right.getChildren().add(btnUpgrade);
         }
@@ -91,7 +91,7 @@ public GameListItemSkin(GameListItem skinnable) {
             btnLaunch.setOnMouseClicked(e -> skinnable.launch());
             btnLaunch.getStyleClass().add("toggle-icon4");
             BorderPane.setAlignment(btnLaunch, Pos.CENTER);
-            btnLaunch.setGraphic(SVG.launch(Theme.blackFillBinding(), 20, 20));
+            btnLaunch.setGraphic(FXUtils.limitingSize(SVG.launchOutline(Theme.blackFillBinding(), 24, 24), 24, 24));
             right.getChildren().add(btnLaunch);
         }
 
@@ -103,7 +103,7 @@ public GameListItemSkin(GameListItem skinnable) {
             });
             btnManage.getStyleClass().add("toggle-icon4");
             BorderPane.setAlignment(btnManage, Pos.CENTER);
-            btnManage.setGraphic(SVG.dotsVertical(Theme.blackFillBinding(), -1, -1));
+            btnManage.setGraphic(FXUtils.limitingSize(SVG.dotsVertical(Theme.blackFillBinding(), 24, 24), 24, 24));
             right.getChildren().add(btnManage);
         }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -335,7 +335,7 @@ protected Version resolvePreservingPatches(VersionProvider provider, Set<String>
             }
         }
 
-       return thisVersion.setId(id).setJar(resolve(provider).getJar());
+        return thisVersion.setId(id).setJar(resolve(provider).getJar());
     }
 
     private Version markAsResolved() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ComponentListCell.java
Patch:
@@ -80,7 +80,7 @@ private void updateLayout() {
 
             BorderPane groupNode = new BorderPane();
 
-            Node expandIcon = SVG.expand(Theme.blackFillBinding(), 10, 10);
+            Node expandIcon = SVG.expand(Theme.blackFillBinding(), 20, 20);
             JFXButton expandButton = new JFXButton();
             expandButton.setGraphic(expandIcon);
             expandButton.getStyleClass().add("options-list-item-expand-button");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ImagePickerItem.java
Patch:
@@ -54,12 +54,12 @@ public ImagePickerItem() {
         imageView.setPreserveRatio(true);
 
         JFXButton selectButton = new JFXButton();
-        selectButton.setGraphic(SVG.pencil(Theme.blackFillBinding(), 15, 15));
+        selectButton.setGraphic(SVG.pencil(Theme.blackFillBinding(), 20, 20));
         selectButton.onMouseClickedProperty().bind(onSelectButtonClicked);
         selectButton.getStyleClass().add("toggle-icon4");
 
         JFXButton deleteButton = new JFXButton();
-        deleteButton.setGraphic(SVG.close(Theme.blackFillBinding(), 15, 15));
+        deleteButton.setGraphic(SVG.close(Theme.blackFillBinding(), 20, 20));
         deleteButton.onMouseClickedProperty().bind(onDeleteButtonClicked);
         deleteButton.getStyleClass().add("toggle-icon4");
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -58,6 +58,7 @@ public GameAdvancedListItem() {
             }
         });
 
-        setRightGraphic(SVG.gear(Theme.blackFillBinding(), -1, -1));
+        setActionButtonVisible(false);
+//        setRightGraphic(SVG.gear(Theme.blackFillBinding(), -1, -1));
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItemSkin.java
Patch:
@@ -62,7 +62,7 @@ public GameListItemSkin(GameListItem skinnable) {
             popup = new JFXPopup(menu);
 
             menu.getContent().setAll(
-                    new IconedMenuItem(FXUtils.limitingSize(SVG.launch(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("version.launch.test"), FXUtils.withJFXPopupClosing(() -> currentSkinnable.launch(), popup)),
+                    new IconedMenuItem(FXUtils.limitingSize(SVG.launchOutline(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("version.launch.test"), FXUtils.withJFXPopupClosing(() -> currentSkinnable.launch(), popup)),
                     new IconedMenuItem(FXUtils.limitingSize(SVG.script(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("version.launch_script"), FXUtils.withJFXPopupClosing(() -> currentSkinnable.generateLaunchScript(), popup)),
                     new MenuSeparator(),
                     new IconedMenuItem(FXUtils.limitingSize(SVG.gear(Theme.blackFillBinding(), 14, 14), 14, 14), i18n("version.manage.manage"), FXUtils.withJFXPopupClosing(() -> currentSkinnable.modifyGameSettings(), popup)),

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -129,7 +129,9 @@ public void duplicateVersion(String srcId, String dstId, boolean copySaves) thro
 
         if (dstDir.exists()) throw new IOException("Version exists");
         FileUtils.copyDirectory(srcDir.toPath(), dstDir.toPath());
-        Files.move(dstDir.toPath().resolve(srcId + ".jar"), dstDir.toPath().resolve(dstId + ".jar"));
+        if (Files.exists(dstDir.toPath().resolve(srcId + ".jar"))) {
+            Files.move(dstDir.toPath().resolve(srcId + ".jar"), dstDir.toPath().resolve(dstId + ".jar"));
+        }
         Files.move(dstDir.toPath().resolve(srcId + ".json"), dstDir.toPath().resolve(dstId + ".json"));
         VersionSetting oldVersionSetting = getVersionSetting(srcId).clone();
         GameDirectoryType originalGameDirType = oldVersionSetting.getGameDirType();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/LibraryAnalyzer.java
Patch:
@@ -214,4 +214,5 @@ public String getLibraryVersion() {
     public static final String VANILLA_MAIN = "net.minecraft.client.main.Main";
     public static final String LAUNCH_WRAPPER_MAIN = "net.minecraft.launchwrapper.Launch";
     public static final String MOD_LAUNCHER_MAIN = "cpw.mods.modlauncher.Launcher";
+    public static final String BOOTSTRAP_LAUNCHER_MAIN = "cpw.mods.bootstraplauncher.BootstrapLauncher";
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -173,7 +173,7 @@ public static Task<Version> install(DefaultDependencyManager dependencyManager,
                 ForgeNewInstallProfile profile = JsonUtils.fromNonNullJson(installProfileText, ForgeNewInstallProfile.class);
                 if (!gameVersion.get().equals(profile.getMinecraft()))
                     throw new VersionMismatchException(profile.getMinecraft(), gameVersion.get());
-                return new ForgeNewInstallTask(dependencyManager, version, modifyVersion(gameVersion.get(), profile.getPath().getVersion().replaceAll("(?i)forge", "")), installer);
+                return new ForgeNewInstallTask(dependencyManager, version, modifyVersion(gameVersion.get(), profile.getVersion()), installer);
             } else if (installProfile.containsKey("install") && installProfile.containsKey("versionInfo")) {
                 ForgeInstallProfile profile = JsonUtils.fromNonNullJson(installProfileText, ForgeInstallProfile.class);
                 if (!gameVersion.get().equals(profile.getInstall().getMinecraft()))

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameLauncher.java
Patch:
@@ -64,7 +64,7 @@ private void generateOptionsTxt() {
         try {
             // TODO: Dirty implementation here
             if (I18n.getCurrentLocale().getLocale() == Locale.CHINA)
-                FileUtils.writeText(optionsFile, "lang:zh_cn\nforceUnicodeFont:true\n");
+                FileUtils.writeText(optionsFile, "lang:zh_CN\nforceUnicodeFont:true\n");
         } catch (IOException e) {
             Logging.LOG.log(Level.WARNING, "Unable to generate options.txt", e);
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/HMCLDownloadTask.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.upgrade;
 
 import org.jackhuang.hmcl.task.FileDownloadTask;
+import org.jackhuang.hmcl.util.Pack200Utils;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 import org.tukaani.xz.XZInputStream;
 
@@ -26,7 +27,6 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.jar.JarOutputStream;
-import java.util.jar.Pack200;
 
 class HMCLDownloadTask extends FileDownloadTask {
 
@@ -52,7 +52,7 @@ public void execute() throws Exception {
                     byte[] raw = Files.readAllBytes(target);
                     try (InputStream in = new XZInputStream(new ByteArrayInputStream(raw));
                             JarOutputStream out = new JarOutputStream(Files.newOutputStream(target))) {
-                        Pack200.newUnpacker().unpack(in, out);
+                        Pack200Utils.unpack(in, out);
                     }
                     break;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/RemoteVersion.java
Patch:
@@ -21,9 +21,9 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
 import org.jackhuang.hmcl.task.FileDownloadTask.IntegrityCheck;
+import org.jackhuang.hmcl.util.Pack200Utils;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
-import org.jackhuang.hmcl.util.platform.SystemUtils;
 
 import java.io.IOException;
 import java.util.Optional;
@@ -38,7 +38,7 @@ public static RemoteVersion fetch(String url) throws IOException {
             String jarHash = Optional.ofNullable(response.get("jarsha1")).map(JsonElement::getAsString).orElse(null);
             String packXZUrl = Optional.ofNullable(response.get("packxz")).map(JsonElement::getAsString).orElse(null);
             String packXZHash = Optional.ofNullable(response.get("packxzsha1")).map(JsonElement::getAsString).orElse(null);
-            if (SystemUtils.JRE_CAPABILITY_PACK200 && packXZUrl != null && packXZHash != null) {
+            if (Pack200Utils.isSupported() && packXZUrl != null && packXZHash != null) {
                 return new RemoteVersion(version, packXZUrl, Type.PACK_XZ, new IntegrityCheck("SHA-1", packXZHash));
             } else if (jarUrl != null && jarHash != null) {
                 return new RemoteVersion(version, jarUrl, Type.JAR, new IntegrityCheck("SHA-1", jarHash));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -133,7 +133,7 @@ private static Version maintainGameWithModLauncher(GameRepository repository, Ve
             Optional<Library> optiFine = version.getLibraries().stream().filter(library -> library.is("optifine", "OptiFine")).findAny();
             boolean libraryExisting = version.getLibraries().stream().anyMatch(library -> library.is("org.jackhuang.hmcl", "transformer-discovery-service"));
             optiFine.ifPresent(library -> {
-                builder.addJvmArgument("-Dhmcl.transformer.candidates=${libraries_directory}/" + library.getPath());
+                builder.addJvmArgument("-Dhmcl.transformer.candidates=${library_directory}/" + library.getPath());
                 if (!libraryExisting) builder.addLibrary(hmclTransformerDiscoveryService);
                 Path libraryPath = repository.getLibraryFile(version, hmclTransformerDiscoveryService).toPath();
                 try {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackInfoPage.java
Patch:
@@ -78,13 +78,13 @@ public final class ModpackInfoPage extends Control implements WizardPage {
     private final SimpleStringProperty url = new SimpleStringProperty("");
     private final SimpleBooleanProperty forceUpdate = new SimpleBooleanProperty();
     private final SimpleBooleanProperty packWithLauncher = new SimpleBooleanProperty();
-    private final SimpleStringProperty fileApi = new SimpleStringProperty();
+    private final SimpleStringProperty fileApi = new SimpleStringProperty("");
     private final SimpleIntegerProperty minMemory = new SimpleIntegerProperty(0);
     private final SimpleStringProperty authlibInjectorServer = new SimpleStringProperty();
     private final SimpleStringProperty launchArguments = new SimpleStringProperty("");
     private final SimpleStringProperty javaArguments = new SimpleStringProperty("");
     private final ObjectProperty<EventHandler<? super MouseEvent>> next = new SimpleObjectProperty<>();
-    private final SimpleStringProperty mcbbsThreadId = new SimpleStringProperty();
+    private final SimpleStringProperty mcbbsThreadId = new SimpleStringProperty("");
 
     public ModpackInfoPage(WizardController controller, HMCLGameRepository gameRepository, String version) {
         this.controller = controller;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -488,7 +488,7 @@ public void onStop(boolean success, TaskExecutor executor) {
                 super.onStop(success, executor);
                 Platform.runLater(() -> {
                     if (!success) {
-                        future.completeExceptionally(executor.getException());
+                        future.completeExceptionally(Optional.ofNullable(executor.getException()).orElseGet(InterruptedException::new));
                     } else {
                         future.complete(null);
                     }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -326,7 +326,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
                 if (acceptableJava.isPresent()) {
                     setting.setJavaVersion(acceptableJava.get());
                 } else {
-                    Controllers.dialog(i18n("launch.advice.require_newer_java_version", gameVersion.toString(), version.getJavaVersion().getMajorVersion()), i18n("message.warning"), MessageType.WARNING, () -> {
+                    Controllers.confirm(i18n("launch.advice.require_newer_java_version", gameVersion.toString(), version.getJavaVersion().getMajorVersion()), i18n("message.warning"), () -> {
                         downloadJava(version.getJavaVersion(), profile)
                                 .thenAcceptAsync(x -> {
                                     try {
@@ -338,7 +338,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
                                         LOG.log(Level.SEVERE, "Cannot list javas", e);
                                     }
                                 }, Platform::runLater).thenAccept(x -> onAccept.run());
-                    });
+                    }, null);
                     flag = true;
                 }
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -559,6 +559,7 @@ public void addPropertyChangedListener(InvalidationListener listener) {
         launcherVisibilityProperty.addListener(listener);
         defaultJavaPathProperty.addListener(listener);
         nativesDirProperty.addListener(listener);
+        nativesDirTypeProperty.addListener(listener);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -147,7 +147,7 @@ private void initialize() {
 
         nativesDirItem.setCustomUserData(NativesDirectoryType.CUSTOM);
         nativesDirItem.loadChildren(Arrays.asList(
-                nativesDirItem.createChildren(i18n("settings.advanced.natives_dir.default"), NativesDirectoryType.VERSION_FOLDER)
+                nativesDirItem.createChildren(i18n("settings.advanced.natives_directory.default"), NativesDirectoryType.VERSION_FOLDER)
         ));
 
         chkEnableSpecificSettings.selectedProperty().addListener((a, b, newValue) -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackFileSelectionPage.java
Patch:
@@ -129,7 +129,7 @@ private CheckBoxTreeItem<String> getTreeItem(File file, String basePath) {
 
     private void getFilesNeeded(CheckBoxTreeItem<String> node, String basePath, List<String> list) {
         if (node == null) return;
-        if (node.isSelected()) {
+        if (node.isSelected() || node.isIndeterminate()) {
             if (basePath.length() > "minecraft/".length())
                 list.add(StringUtils.substringAfter(basePath, "minecraft/"));
             for (TreeItem<String> child : node.getChildren()) {

File: HMCLCore/src/test/java/org/jackhuang/hmcl/util/TaskTest.java
Patch:
@@ -188,4 +188,4 @@ public void testRejectedExecutionException() {
         Assert.assertFalse("Task should fail since ExecutorService is shut down and RejectedExecutionException should be thrown", result);
         Assert.assertTrue("RejectedExecutionException should be recorded", task.getException() instanceof RejectedExecutionException);
     }
-}
\ No newline at end of file
+}

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/NativesDirectoryType.java
Patch:
@@ -2,7 +2,7 @@
 
 public enum NativesDirectoryType {
     /**
-     * .minecraft/versions/&lt;version name/natives&gt;
+     * .minecraft/versions/&lt;version&gt;/natives
      */
     VERSION_FOLDER,
     /**

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/BMCLAPIDownloadProvider.java
Patch:
@@ -78,6 +78,7 @@ public VersionList<?> getVersionListById(String id) {
 
     @Override
     public String injectURL(String baseURL) {
+        if (baseURL.contains("v1/products/java-runtime")) return baseURL;
         return baseURL
                 .replace("https://bmclapi2.bangbang93.com", apiRoot)
                 .replace("https://launchermeta.mojang.com", apiRoot)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/OSRestriction.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.game;
 
 import org.jackhuang.hmcl.util.Lang;
+import org.jackhuang.hmcl.util.platform.Architecture;
 import org.jackhuang.hmcl.util.platform.OperatingSystem;
 
 import java.util.regex.Pattern;
@@ -71,7 +72,7 @@ public boolean allow() {
                 return false;
 
         if (arch != null)
-            return !Lang.test(() -> !Pattern.compile(arch).matcher(OperatingSystem.SYSTEM_ARCHITECTURE).matches());
+            return !Lang.test(() -> !Pattern.compile(arch).matcher(Architecture.SYSTEM_ARCHITECTURE).matches());
 
         return true;
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -130,7 +130,7 @@ private CommandBuilder generateCommandLine(File nativeFolder) throws IOException
             if (options.getMinMemory() != null && options.getMinMemory() > 0)
                 res.add("-Xms" + options.getMinMemory() + "m");
 
-            if (options.getJava().getParsedVersion() >= JavaVersion.JAVA_16)
+            if (options.getJava().getParsedVersion() == JavaVersion.JAVA_16)
                 res.add("--illegal-access=permit");
 
             res.add("-Dfml.ignoreInvalidMinecraftCertificates=true");

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -40,7 +40,8 @@ public class SelfDependencyPatcher {
         addJfxDependency("fxml");
         addJfxDependency("graphics");
         addJfxDependency("media");
-        addJfxDependency("swing");
+        // Fix #874: Remove the dependency on javafx.swing
+        // addJfxDependency("swing");
         addJfxDependency("web");
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -77,6 +77,7 @@ public static void patch() throws PatchException, IncompatibleVersionException {
             case "amd64":
             case "x64":
             case "x86-64":
+            case "x86_64":
                 break;
             default:
                 throw new IncompatibleVersionException();

File: HMCL/src/main/java/org/jackhuang/hmcl/util/SelfDependencyPatcher.java
Patch:
@@ -73,9 +73,10 @@ public static void patch() throws PatchException, IncompatibleVersionException {
 
         // We can only self-patch JavaFX on x86 platform.
         // For ARM support, user's manual patch is required.
-        switch (System.getProperty("os.arch")) {
+        switch (System.getProperty("os.arch", "unknown").toLowerCase()) {
             case "amd64":
-            case "x86":
+            case "x64":
+            case "x86-64":
                 break;
             default:
                 throw new IncompatibleVersionException();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ClassicVersion.java
Patch:
@@ -30,7 +30,7 @@ public class ClassicVersion extends Version {
 
     public ClassicVersion() {
         super(true, "Classic", null, null, "${auth_player_name} ${auth_session} --workDir ${game_directory}",
-                null, "net.minecraft.client.Minecraft", null, null, null, null,
+                null, "net.minecraft.client.Minecraft", null, null, null, null, null, null,
                 Arrays.asList(new ClassicLibrary("lwjgl"), new ClassicLibrary("jinput"), new ClassicLibrary("lwjgl_util")),
                 null, null, null, ReleaseType.UNKNOWN, new Date(), new Date(), 0, false, false, null);
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -130,6 +130,9 @@ private CommandBuilder generateCommandLine(File nativeFolder) throws IOException
             if (options.getMinMemory() != null && options.getMinMemory() > 0)
                 res.add("-Xms" + options.getMinMemory() + "m");
 
+            if (options.getJava().getParsedVersion() >= JavaVersion.JAVA_16)
+                res.add("--illegal-access=permit");
+
             res.add("-Dfml.ignoreInvalidMinecraftCertificates=true");
             res.add("-Dfml.ignorePatchDiscrepancies=true");
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -96,6 +96,7 @@ public int getParsedVersion() {
     public static final int JAVA_7 = 7;
     public static final int JAVA_8 = 8;
     public static final int JAVA_9 = 9;
+    public static final int JAVA_16 = 16;
 
     private static int parseVersion(String version) {
         Matcher matcher = VERSION.matcher(version);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -99,7 +99,7 @@ private CommandBuilder generateCommandLine(File nativeFolder) throws IOException
                 res.add("-Duser.home=" + options.getGameDir().getParent());
 
             // Force using G1GC with its settings
-            if (options.getJava().getParsedVersion() >= JavaVersion.JAVA_7) {
+            if (options.getJava().getParsedVersion() >= JavaVersion.JAVA_8) {
                 res.add("-XX:+UnlockExperimentalVMOptions");
                 res.add("-XX:+UseG1GC");
                 res.add("-XX:G1NewSizePercent=20");

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -341,7 +341,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
 
         // LaunchWrapper 1.12 will crash because of assuming the system class loader is an instance of URLClassLoader.
         if (!flag && java.getParsedVersion() >= JavaVersion.JAVA_9
-                && version.getMainClass().equals(LibraryAnalyzer.LAUNCH_WRAPPER_MAIN)
+                && LibraryAnalyzer.LAUNCH_WRAPPER_MAIN.equals(version.getMainClass())
                 && version.getLibraries().stream()
                 .filter(library -> "launchwrapper".equals(library.getArtifactId()))
                 .anyMatch(library -> VersionNumber.asVersion(library.getVersion()).compareTo(VersionNumber.asVersion("1.13")) < 0)) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -198,7 +198,7 @@ private void onExportLogs() {
                 if (Desktop.isDesktopSupported()) {
                     try {
                         Desktop.getDesktop().open(logFile.toFile());
-                    } catch (IOException ignored) {
+                    } catch (IOException | IllegalArgumentException ignored) {
                     }
                 }
             });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DatapackListPageSkin.java
Patch:
@@ -132,7 +132,7 @@ String getTitle() {
         }
 
         String getSubtitle() {
-            return StringUtils.parseColorEscapes(packInfo.getDescription());
+            return StringUtils.parseColorEscapes(packInfo.getDescription().toString());
         }
 
         Datapack.Pack getPackInfo() {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/Datapack.java
Patch:
@@ -202,10 +202,10 @@ public static class Pack {
         private Path file;
         private final BooleanProperty active;
         private final String id;
-        private final String description;
+        private final ModInfo.Description description;
         private final Datapack datapack;
 
-        public Pack(Path file, String id, String description, Datapack datapack) {
+        public Pack(Path file, String id, ModInfo.Description description, Datapack datapack) {
             this.file = file;
             this.id = id;
             this.description = description;
@@ -235,7 +235,7 @@ public String getId() {
             return id;
         }
 
-        public String getDescription() {
+        public ModInfo.Description getDescription() {
             return description;
         }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/FabricModMetadata.java
Patch:
@@ -67,7 +67,7 @@ public static ModInfo fromFile(ModManager modManager, File modFile) throws IOExc
                 throw new IOException("File " + modFile + " is not a Fabric mod.");
             FabricModMetadata metadata = JsonUtils.fromNonNullJson(FileUtils.readText(mcmod), FabricModMetadata.class);
             String authors = metadata.authors == null ? "" : metadata.authors.stream().map(author -> author.name).collect(Collectors.joining(", "));
-            return new ModInfo(modManager, modFile, metadata.name, metadata.description,
+            return new ModInfo(modManager, modFile, metadata.name, new ModInfo.Description(metadata.description),
                     authors,  metadata.version, "", metadata.contact != null ? metadata.contact.getOrDefault("homepage", "") : "");
         }
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ForgeModMetadata.java
Patch:
@@ -132,7 +132,7 @@ public static ModInfo fromFile(ModManager modManager, File modFile) throws IOExc
                 authors = String.join(", ", metadata.getAuthorList());
             if (StringUtils.isBlank(authors))
                 authors = metadata.getCredits();
-            return new ModInfo(modManager, modFile, metadata.getName(), metadata.getDescription(),
+            return new ModInfo(modManager, modFile, metadata.getName(), new ModInfo.Description(metadata.getDescription()),
                     authors, metadata.getVersion(), metadata.getGameVersion(),
                     StringUtils.isBlank(metadata.getUrl()) ? metadata.getUpdateUrl() : metadata.url);
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/LiteModMetadata.java
Patch:
@@ -116,7 +116,7 @@ public static ModInfo fromFile(ModManager modManager, File modFile) throws IOExc
             LiteModMetadata metadata = JsonUtils.GSON.fromJson(IOUtils.readFullyAsString(zipFile.getInputStream(entry)), LiteModMetadata.class);
             if (metadata == null)
                 throw new IOException("Mod " + modFile + " `litemod.json` is malformed.");
-            return new ModInfo(modManager, modFile, metadata.getName(), metadata.getDescription(), metadata.getAuthor(),
+            return new ModInfo(modManager, modFile, metadata.getName(), new ModInfo.Description(metadata.getDescription()), metadata.getAuthor(),
                     metadata.getVersion(), metadata.getGameVersion(), metadata.getUpdateURI());
         }
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ModManager.java
Patch:
@@ -94,7 +94,7 @@ public ModInfo getModInfo(File modFile) {
             default:
                 throw new IllegalArgumentException("File " + modFile + " is not a mod file.");
         }
-        return new ModInfo(this, modFile, FileUtils.getNameWithoutExtension(modFile), description);
+        return new ModInfo(this, modFile, FileUtils.getNameWithoutExtension(modFile), new ModInfo.Description(description));
     }
 
     public void refreshMods() throws IOException {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/UpgradeDialog.java
Patch:
@@ -22,22 +22,22 @@
 import javafx.scene.control.Label;
 import javafx.scene.web.WebEngine;
 import javafx.scene.web.WebView;
+import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.ui.construct.DialogCloseEvent;
 
 import static org.jackhuang.hmcl.Metadata.CHANGELOG_URL;
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public class UpgradeDialog extends JFXDialogLayout {
-    private final WebView webView = new WebView();
-
     public UpgradeDialog(Runnable updateRunnable) {
         {
             setHeading(new Label(i18n("update.changelog")));
         }
 
         {
             WebView webView = new WebView();
+            webView.getEngine().setUserDataDirectory(Metadata.HMCL_DIRECTORY.toFile());
             WebEngine engine = webView.getEngine();
             engine.load(CHANGELOG_URL + config().getUpdateChannel().channelName);
             engine.getLoadWorker().stateProperty().addListener((observable, oldValue, newValue) -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/WebStage.java
Patch:
@@ -25,6 +25,7 @@
 import javafx.scene.web.WebEngine;
 import javafx.scene.web.WebView;
 import javafx.stage.Stage;
+import org.jackhuang.hmcl.Metadata;
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
 import static org.jackhuang.hmcl.ui.FXUtils.newImage;
@@ -43,6 +44,7 @@ public WebStage(int width, int height) {
         setScene(new Scene(pane, width, height));
         getScene().getStylesheets().addAll(config().getTheme().getStylesheets());
         getIcons().add(newImage("/assets/img/icon.png"));
+        webView.getEngine().setUserDataDirectory(Metadata.HMCL_DIRECTORY.toFile());
         webView.setContextMenuEnabled(false);
         progressBar.progressProperty().bind(webView.getEngine().getLoadWorker().progressProperty());
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilService.java
Patch:
@@ -218,7 +218,7 @@ private static YggdrasilSession handleAuthenticationResponse(String responseText
                 response.accessToken,
                 response.selectedProfile,
                 response.availableProfiles == null ? null : unmodifiableList(response.availableProfiles),
-                response.user);
+                response.user == null ? null : response.user.getProperties());
     }
 
     private static void requireEmpty(String response) throws AuthenticationException {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameItem.java
Patch:
@@ -82,7 +82,7 @@ public GameItem(Profile profile, String id) {
 
         CompletableFuture.runAsync(() -> {
             try {
-                ModpackConfiguration<Void> config = profile.getRepository().readModpackConfiguration(version);
+                ModpackConfiguration<?> config = profile.getRepository().readModpackConfiguration(version);
                 if (config == null) return;
                 tag.set(config.getVersion());
             } catch (IOException e) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.ui.versions;
 
 import javafx.application.Platform;
-import javafx.beans.binding.Bindings;
 import javafx.scene.Node;
 import javafx.scene.control.Skin;
 import javafx.stage.FileChooser;
@@ -40,10 +39,8 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.CompletableFuture;
-import java.util.function.Consumer;
 import java.util.function.Function;
 
-import static org.jackhuang.hmcl.download.LibraryAnalyzer.LibraryType.*;
 import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackInfoPage.java
Patch:
@@ -415,7 +415,7 @@ public ModpackInfoPageSkin(ModpackInfoPage skinnable) {
                             // our requirement.
                             Bindings.createBooleanBinding(() -> validatingFields.stream()
                                             .map(field -> !field.validate())
-                                            .reduce(true, (left, right) -> left || right),
+                                            .reduce(false, (left, right) -> left || right),
                                     validatingFields.stream().map(JFXTextField::textProperty).toArray(StringProperty[]::new)));
                     hbox.getChildren().add(nextButton);
                 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/Lang.java
Patch:
@@ -202,12 +202,12 @@ public static Thread thread(Runnable runnable, String name, boolean isDaemon) {
 
     public static ThreadPoolExecutor threadPool(String name, boolean daemon, int threads, long timeout, TimeUnit timeunit) {
         AtomicInteger counter = new AtomicInteger(1);
-        ThreadPoolExecutor pool = new ThreadPoolExecutor(0, threads, timeout, timeunit, new LinkedBlockingQueue<>(), r -> {
+        ThreadPoolExecutor pool = new ThreadPoolExecutor(threads, threads, timeout, timeunit, new LinkedBlockingQueue<>(), r -> {
             Thread t = new Thread(r, name + "-" + counter.getAndIncrement());
             t.setDaemon(daemon);
             return t;
         });
-        pool.allowsCoreThreadTimeOut();
+        pool.allowCoreThreadTimeOut(true);
         return pool;
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAccountPane.java
Patch:
@@ -258,7 +258,7 @@ private void onAddInjecterServer() {
         Controllers.dialog(new AddAuthlibInjectorServerPane());
     }
 
-    private class Selector extends BorderPane implements CharacterSelector {
+    private static class Selector extends BorderPane implements CharacterSelector {
 
         private final AdvancedListBox listBox = new AdvancedListBox();
         private final JFXButton cancel = new JFXButton();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/CharacterSelector.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * This interface is for your application to open a GUI for user to choose the character
- * when a having-multi-character yggdrasil account is being logging in..
+ * when a having-multi-character yggdrasil account is being logging in.
  */
 public interface CharacterSelector {
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilService.java
Patch:
@@ -52,7 +52,7 @@
 
 public class YggdrasilService {
 
-    private static final ThreadPoolExecutor POOL = threadPool("ProfileProperties", true, 2, 10, TimeUnit.SECONDS);
+    private static final ThreadPoolExecutor POOL = threadPool("YggdrasilProfileProperties", true, 2, 10, TimeUnit.SECONDS);
 
     public static final YggdrasilService MOJANG = new YggdrasilService(new MojangYggdrasilProvider());
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FetchTask.java
Patch:
@@ -51,7 +51,7 @@ public FetchTask(List<URL> urls, int retry) {
         this.urls = new ArrayList<>(urls);
         this.retry = retry;
 
-        setExecutor(Schedulers.io());
+        setExecutor(download());
     }
 
     public void setCaching(boolean caching) {
@@ -278,7 +278,8 @@ protected static ExecutorService download() {
         if (DOWNLOAD_EXECUTOR == null) {
             synchronized (Schedulers.class) {
                 if (DOWNLOAD_EXECUTOR == null) {
-                    DOWNLOAD_EXECUTOR = new ThreadPoolExecutor(0, downloadExecutorConcurrency, 10, TimeUnit.SECONDS, new SynchronousQueue<>(),
+                    DOWNLOAD_EXECUTOR = new ThreadPoolExecutor(0, downloadExecutorConcurrency, 10, TimeUnit.SECONDS,
+                            new LinkedBlockingQueue<>(),
                             runnable -> {
                                 Thread thread = Executors.defaultThreadFactory().newThread(runnable);
                                 thread.setDaemon(true);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Schedulers.java
Patch:
@@ -47,7 +47,8 @@ public static ExecutorService io() {
         if (IO_EXECUTOR == null) {
             synchronized (Schedulers.class) {
                 if (IO_EXECUTOR == null) {
-                    IO_EXECUTOR = new ThreadPoolExecutor(0, 4, 10, TimeUnit.SECONDS, new SynchronousQueue<>(),
+                    IO_EXECUTOR = new ThreadPoolExecutor(0, 4, 10, TimeUnit.SECONDS,
+                            new LinkedBlockingQueue<>(),
                             runnable -> {
                                 Thread thread = Executors.defaultThreadFactory().newThread(runnable);
                                 thread.setDaemon(true);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -323,6 +323,9 @@ public ManagedProcess launch() throws IOException, InterruptedException {
         Process process;
         try {
             ProcessBuilder builder = new ProcessBuilder(rawCommandLine).directory(runDirectory);
+            if (listener == null) {
+                builder.inheritIO();
+            }
             String appdata = options.getGameDir().getAbsoluteFile().getParent();
             if (appdata != null) builder.environment().put("APPDATA", appdata);
             process = builder.start();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadException.java
Patch:
@@ -18,11 +18,12 @@
 package org.jackhuang.hmcl.download.game;
 
 import org.jackhuang.hmcl.game.Library;
+import org.jetbrains.annotations.NotNull;
 
 public class LibraryDownloadException extends Exception {
     private final Library library;
 
-    public LibraryDownloadException(Library library, Throwable cause) {
+    public LibraryDownloadException(Library library, @NotNull Throwable cause) {
         super("Unable to download library " + library, cause);
 
         this.library = library;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -37,6 +37,7 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.*;
+import java.util.concurrent.CancellationException;
 import java.util.jar.*;
 import java.util.logging.Level;
 
@@ -95,6 +96,8 @@ public void execute() throws Exception {
             Exception t = task.getException();
             if (t instanceof DownloadException)
                 throw new LibraryDownloadException(library, t.getCause());
+            else if (t == null)
+                throw new CancellationException();
             else
                 throw new LibraryDownloadException(library, t);
         } else {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/DownloadException.java
Patch:
@@ -17,6 +17,8 @@
  */
 package org.jackhuang.hmcl.task;
 
+import org.jetbrains.annotations.NotNull;
+
 import java.io.IOException;
 import java.net.URL;
 
@@ -26,7 +28,7 @@ public class DownloadException extends IOException {
 
     private final URL url;
 
-    public DownloadException(URL url, Throwable cause) {
+    public DownloadException(URL url, @NotNull Throwable cause) {
         super("Unable to download " + url + ", " + cause.getMessage(), requireNonNull(cause));
 
         this.url = url;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -31,6 +31,7 @@
 import org.jackhuang.hmcl.util.function.ExceptionalFunction;
 import org.jackhuang.hmcl.util.function.ExceptionalRunnable;
 import org.jackhuang.hmcl.util.function.ExceptionalSupplier;
+import org.jetbrains.annotations.Nullable;
 
 import java.util.*;
 import java.util.concurrent.Callable;
@@ -131,6 +132,7 @@ final void setState(TaskState state) {
      *
      * @return the exception thrown during execution, possibly from dependents or dependencies.
      */
+    @Nullable
     public final Exception getException() {
         return exception;
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -202,7 +202,7 @@ private CommandBuilder generateCommandLine(File nativeFolder) throws IOException
         if (options.isFullscreen())
             res.add("--fullscreen");
 
-        if (options.getProxy() != null) {
+        if (options.getProxy() != null && options.getProxy().type() == Proxy.Type.SOCKS) {
             InetSocketAddress address = (InetSocketAddress) options.getProxy().address();
             if (address != null) {
                 res.add("--proxyHost");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAccountPane.java
Patch:
@@ -317,6 +317,8 @@ else if (remoteMessage.contains("Invalid token"))
                     return i18n("account.failed.invalid_token");
                 else if (remoteMessage.contains("Invalid username or password"))
                     return i18n("account.failed.invalid_password");
+                else
+                    return remoteMessage;
             }
             return exception.getMessage();
         } else if (exception instanceof AuthlibInjectorDownloadException) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/AsyncTaskExecutor.java
Patch:
@@ -210,7 +210,7 @@ private CompletableFuture<?> executeTask(Task<?> parentTask, Task<?> task) {
                     if (resolved instanceof Exception) {
                         Exception e = (Exception) resolved;
                         if (e instanceof InterruptedException || e instanceof CancellationException) {
-                            task.setException(e);
+                            task.setException(null);
                             if (task.getSignificance().shouldLog()) {
                                 Logging.LOG.log(Level.FINE, "Task aborted: " + task.getName());
                             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorController.java
Patch:
@@ -307,6 +307,7 @@ public void showDialog(Node node) {
 
             dialog.setContent(dialogPane);
             decorator.capableDraggingWindow(dialog);
+            decorator.forbidDraggingWindow(dialogPane);
             dialog.setDialogContainer(decorator.getDrawerWrapper());
             dialog.setOverlayClose(false);
             dialog.show();

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -206,7 +206,7 @@ else if ("Server".equals(configuration.getType()))
                         "launch.state.dependencies",
                         "launch.state.logging_in",
                         "launch.state.waiting_launching"))
-                .cancellableExecutor();
+                .executor();
         launchingStepsPane.setExecutor(executor, false);
         executor.addTaskListener(new TaskListener() {
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/TaskExecutorDialogWizardDisplayer.java
Patch:
@@ -56,7 +56,7 @@ else if (title instanceof String)
         }
 
         runInFX(() -> {
-            TaskExecutor executor = task.cancellableExecutor(new TaskListener() {
+            TaskExecutor executor = task.executor(new TaskListener() {
                 @Override
                 public void onStop(boolean success, TaskExecutor executor) {
                     runInFX(() -> {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FetchTask.java
Patch:
@@ -143,13 +143,13 @@ public void execute() throws Exception {
                             lastDownloaded = downloaded;
                         }
 
+                        if (isCancelled()) break download;
+
                         updateDownloadSpeed(downloaded - lastDownloaded);
 
                         if (contentLength >= 0 && downloaded != contentLength)
                             throw new IOException("Unexpected file size: " + downloaded + ", expected: " + contentLength);
 
-                        if (isCancelled()) break download;
-
                         context.withResult(true);
                     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorSkin.java
Patch:
@@ -81,9 +81,9 @@ public DecoratorSkin(Decorator control) {
         parent.setPickOnBounds(false);
         parent.prefHeightProperty().bind(control.prefHeightProperty());
         parent.prefWidthProperty().bind(control.prefWidthProperty());
-        root.setOnMouseReleased(this::onMouseReleased);
-        root.setOnMouseDragged(this::onMouseDragged);
-        root.setOnMouseMoved(this::onMouseMoved);
+        root.addEventFilter(MouseEvent.MOUSE_RELEASED, this::onMouseReleased);
+        root.addEventFilter(MouseEvent.MOUSE_DRAGGED, this::onMouseDragged);
+        root.addEventFilter(MouseEvent.MOUSE_MOVED, this::onMouseMoved);
 
         root.getChildren().setAll(parent);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -40,6 +40,7 @@
 import java.util.LinkedList;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
+import java.util.logging.Level;
 
 import static org.jackhuang.hmcl.ui.FXUtils.runInFX;
 import static org.jackhuang.hmcl.util.Logging.LOG;
@@ -55,6 +56,7 @@ public void start(Stage primaryStage) {
             try {
                 ConfigHolder.init();
             } catch (IOException e) {
+                LOG.log(Level.SEVERE, "Failed to load config", e);
                 Main.showErrorAndExit(i18n("fatal.config_loading_failure", Paths.get("").toAbsolutePath().normalize()));
             }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -580,7 +580,7 @@ public synchronized void onLog(String log, Log4jLevel level) {
                 Platform.runLater(() -> logWindow.logLine(filteredLog, level));
             }
 
-            if (!lwjgl && (filteredLog.toLowerCase().contains("lwjgl version") || !detectWindow)) {
+            if (!lwjgl && (filteredLog.toLowerCase().contains("lwjgl version") || filteredLog.toLowerCase().contains("lwjgl openal") || !detectWindow)) {
                 lwjgl = true;
                 finishLaunch();
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -32,16 +32,17 @@ public class GameAdvancedListItem extends AdvancedListItem {
 
     public GameAdvancedListItem() {
         tooltip = new Tooltip();
-        FXUtils.installFastTooltip(this, tooltip);
 
         FXUtils.onChangeAndOperate(Profiles.selectedVersionProperty(), version -> {
             if (version != null && Profiles.getSelectedProfile() != null &&
                     Profiles.getSelectedProfile().getRepository().hasVersion(version)) {
+                FXUtils.installFastTooltip(this, tooltip);
                 setTitle(version);
                 setSubtitle(null);
                 setImage(Profiles.getSelectedProfile().getRepository().getVersionIconImage(version));
                 tooltip.setText(version);
             } else {
+                Tooltip.uninstall(this,tooltip);
                 setTitle(i18n("version.empty"));
                 setSubtitle(i18n("version.empty.add"));
                 setImage(newImage("/assets/img/grass.png"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -42,6 +42,7 @@ public GameAdvancedListItem() {
                 setImage(Profiles.getSelectedProfile().getRepository().getVersionIconImage(version));
                 tooltip.setText(version);
             } else {
+                Tooltip.uninstall(this,tooltip);
                 setTitle(i18n("version.empty"));
                 setSubtitle(i18n("version.empty.add"));
                 setImage(newImage("/assets/img/grass.png"));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -32,11 +32,11 @@ public class GameAdvancedListItem extends AdvancedListItem {
 
     public GameAdvancedListItem() {
         tooltip = new Tooltip();
-        FXUtils.installFastTooltip(this, tooltip);
 
         FXUtils.onChangeAndOperate(Profiles.selectedVersionProperty(), version -> {
             if (version != null && Profiles.getSelectedProfile() != null &&
                     Profiles.getSelectedProfile().getRepository().hasVersion(version)) {
+                FXUtils.installFastTooltip(this, tooltip);
                 setTitle(version);
                 setSubtitle(null);
                 setImage(Profiles.getSelectedProfile().getRepository().getVersionIconImage(version));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DownloadProvider.java
Patch:
@@ -60,7 +60,7 @@ default List<URL> getAssetObjectCandidates(String assetObjectLocation) {
      * @return the URL that is equivalent to [baseURL], but belongs to your own service provider.
      */
     default List<URL> injectURLWithCandidates(String baseURL) {
-        return Collections.singletonList(NetworkUtils.toURL(baseURL));
+        return Collections.singletonList(NetworkUtils.toURL(injectURL(baseURL)));
     }
 
     default List<URL> injectURLsWithCandidates(List<String> urls) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -151,7 +151,7 @@ private boolean testURLExistence(String rawUrl) {
                 try {
                     return NetworkUtils.urlExists(xzURL);
                 } catch (IOException e) {
-                    LOG.log(Level.WARNING, "Failed to test for url existence: " + rawUrl + ".pack.xz", e);
+                    LOG.log(Level.WARNING, "Failed to test for url existence: " + url + ".pack.xz", e);
                 }
             }
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -554,8 +554,7 @@ public LaunchOptions toLaunchOptions(File gameDir, boolean checkJava) throws Int
                 .setPrecalledCommand(getPreLaunchCommand())
                 .setNoGeneratedJVMArgs(isNoJVMArgs());
         if (config().hasProxy()) {
-            builder.setProxyHost(config().getProxyHost());
-            builder.setProxyPort(config().getProxyPort());
+            builder.setProxy(ProxyManager.getProxy());
             if (config().hasProxyAuth()) {
                 builder.setProxyUser(config().getProxyUser());
                 builder.setProxyPass(config().getProxyPass());

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/RemoteVersion.java
Patch:
@@ -23,6 +23,7 @@
 import org.jackhuang.hmcl.task.FileDownloadTask.IntegrityCheck;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
+import org.jackhuang.hmcl.util.platform.SystemUtils;
 
 import java.io.IOException;
 import java.util.Optional;
@@ -37,7 +38,7 @@ public static RemoteVersion fetch(String url) throws IOException {
             String jarHash = Optional.ofNullable(response.get("jarsha1")).map(JsonElement::getAsString).orElse(null);
             String packXZUrl = Optional.ofNullable(response.get("packxz")).map(JsonElement::getAsString).orElse(null);
             String packXZHash = Optional.ofNullable(response.get("packxzsha1")).map(JsonElement::getAsString).orElse(null);
-            if (packXZUrl != null && packXZHash != null) {
+            if (SystemUtils.JRE_CAPABILITY_PACK200 && packXZUrl != null && packXZHash != null) {
                 return new RemoteVersion(version, packXZUrl, Type.PACK_XZ, new IntegrityCheck("SHA-1", packXZHash));
             } else if (jarUrl != null && jarHash != null) {
                 return new RemoteVersion(version, jarUrl, Type.JAR, new IntegrityCheck("SHA-1", jarHash));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -28,6 +28,7 @@
 import org.jackhuang.hmcl.util.io.FileUtils;
 import org.jackhuang.hmcl.util.io.IOUtils;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
+import org.jackhuang.hmcl.util.platform.SystemUtils;
 import org.tukaani.xz.XZInputStream;
 
 import java.io.*;
@@ -125,7 +126,7 @@ public void preExecute() {
             }
         }
 
-        if (testURLExistence(url)) {
+        if (SystemUtils.JRE_CAPABILITY_PACK200 && testURLExistence(url)) {
             List<URL> urls = dependencyManager.getDownloadProvider().injectURLWithCandidates(url + ".pack.xz");
             task = new FileDownloadTask(urls, xzFile, null);
             task.setCacheRepository(cacheRepository);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MessageDialogPane.java
Patch:
@@ -38,7 +38,6 @@ public enum MessageType {
         WARNING,
         QUESTION,
         FINE,
-        PLAIN,
     }
 
     @FXML

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilAccount.java
Patch:
@@ -191,7 +191,7 @@ public void clearCache() {
     }
 
     public void uploadSkin(String model, Path file) throws AuthenticationException, UnsupportedOperationException {
-        service.uploadSkin(characterUUID, model, file);
+        service.uploadSkin(characterUUID, session.getAccessToken(), model, file);
     }
 
     private static String randomClientToken() {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/CompressingUtils.java
Patch:
@@ -77,6 +77,8 @@ public FileVisitResult preVisitDirectory(Path dir,
                     return testZipPath(dir, root, result);
                 }
             });
+        } catch (IllegalArgumentException e) {
+            throw new IOException(e);
         }
         return result.get();
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MinecraftInstanceTask.java
Patch:
@@ -49,9 +49,6 @@ public MinecraftInstanceTask(File zipFile, Charset encoding, String subDirectory
         this.manifest = manifest;
         this.jsonFile = jsonFile;
         this.type = type;
-
-        if (!zipFile.exists())
-            throw new IllegalArgumentException("File " + zipFile + " does not exist. Cannot parse this modpack.");
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricInstallTask.java
Patch:
@@ -49,8 +49,8 @@ public FabricInstallTask(DefaultDependencyManager dependencyManager, Version ver
         this.version = version;
         this.remote = remoteVersion;
 
-        launchMetaTask = new GetTask(dependencyManager.getDownloadProvider().injectURLsWithCandidates(remoteVersion.getUrls()))
-                .setCacheRepository(dependencyManager.getCacheRepository());
+        launchMetaTask = new GetTask(dependencyManager.getDownloadProvider().injectURLsWithCandidates(remoteVersion.getUrls()));
+        launchMetaTask.setCacheRepository(dependencyManager.getCacheRepository());
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -72,9 +72,9 @@ public void preExecute() throws Exception {
 
         dependent = new FileDownloadTask(
                 dependencyManager.getDownloadProvider().injectURLsWithCandidates(remote.getUrls()),
-                installer.toFile(), null)
-                .setCacheRepository(dependencyManager.getCacheRepository())
-                .setCaching(true);
+                installer.toFile(), null);
+        dependent.setCacheRepository(dependencyManager.getCacheRepository());
+        dependent.setCaching(true);
         dependent.addIntegrityCheckHandler(FileDownloadTask.ZIP_INTEGRITY_CHECK_HANDLER);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameDownloadTask.java
Patch:
@@ -59,9 +59,9 @@ public void execute() {
         FileDownloadTask task = new FileDownloadTask(
                 dependencyManager.getDownloadProvider().injectURLWithCandidates(version.getDownloadInfo().getUrl()),
                 jar,
-                IntegrityCheck.of(CacheRepository.SHA1, version.getDownloadInfo().getSha1()))
-                .setCaching(true)
-                .setCacheRepository(dependencyManager.getCacheRepository());
+                IntegrityCheck.of(CacheRepository.SHA1, version.getDownloadInfo().getSha1()));
+        task.setCaching(true);
+        task.setCacheRepository(dependencyManager.getCacheRepository());
 
         if (gameVersion != null)
             task.setCandidate(dependencyManager.getCacheRepository().getCommonDirectory().resolve("jars").resolve(gameVersion + ".jar"));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -310,7 +310,7 @@ public ReadOnlyDoubleProperty progressProperty() {
         return progress.getReadOnlyProperty();
     }
 
-    protected void updateProgress(int progress, int total) {
+    protected void updateProgress(long progress, long total) {
         updateProgress(1.0 * progress / total);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItemSkin.java
Patch:
@@ -20,7 +20,6 @@
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXRadioButton;
 import com.jfoenix.effects.JFXDepthManager;
-import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.control.Label;
 import javafx.scene.control.SkinBase;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItemSkin.java
Patch:
@@ -20,7 +20,6 @@
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXRadioButton;
 import com.jfoenix.effects.JFXDepthManager;
-import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.control.SkinBase;
 import javafx.scene.image.ImageView;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItemSkin.java
Patch:
@@ -21,7 +21,6 @@
 import com.jfoenix.controls.JFXPopup;
 import com.jfoenix.controls.JFXRadioButton;
 import com.jfoenix.effects.JFXDepthManager;
-import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.Cursor;
 import javafx.scene.control.SkinBase;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -23,7 +23,6 @@
 import com.jfoenix.effects.JFXDepthManager;
 import javafx.beans.binding.Bindings;
 import javafx.beans.property.BooleanProperty;
-import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.control.Label;
 import javafx.scene.control.SelectionMode;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -21,7 +21,6 @@
 import com.jfoenix.controls.JFXListCell;
 import com.jfoenix.controls.JFXListView;
 import com.jfoenix.controls.JFXPopup;
-import com.jfoenix.effects.JFXDepthManager;
 import javafx.application.Platform;
 import javafx.beans.property.*;
 import javafx.geometry.Pos;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListItemSkin.java
Patch:
@@ -20,7 +20,6 @@
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXPopup;
 import com.jfoenix.effects.JFXDepthManager;
-import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.control.SkinBase;
 import javafx.scene.image.ImageView;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/LibraryAnalyzer.java
Patch:
@@ -24,7 +24,6 @@
 import org.jetbrains.annotations.Nullable;
 
 import java.util.*;
-import java.util.function.BiConsumer;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricVersionList.java
Patch:
@@ -25,7 +25,6 @@
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 import org.jetbrains.annotations.Nullable;
 
-import javax.xml.stream.XMLStreamException;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collections;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -134,7 +134,7 @@ public static boolean detectForgeInstallerType(DependencyManager dependencyManag
         if (!gameVersion.isPresent()) throw new IOException();
         try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(installer)) {
             String installProfileText = FileUtils.readText(fs.getPath("install_profile.json"));
-            Map installProfile = JsonUtils.fromNonNullJson(installProfileText, Map.class);
+            Map<?, ?> installProfile = JsonUtils.fromNonNullJson(installProfileText, Map.class);
             if (installProfile.containsKey("spec")) {
                 ForgeNewInstallProfile profile = JsonUtils.fromNonNullJson(installProfileText, ForgeNewInstallProfile.class);
                 if (!gameVersion.get().equals(profile.getMinecraft()))
@@ -167,7 +167,7 @@ public static Task<Version> install(DefaultDependencyManager dependencyManager,
         if (!gameVersion.isPresent()) throw new IOException();
         try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(installer)) {
             String installProfileText = FileUtils.readText(fs.getPath("install_profile.json"));
-            Map installProfile = JsonUtils.fromNonNullJson(installProfileText, Map.class);
+            Map<?, ?> installProfile = JsonUtils.fromNonNullJson(installProfileText, Map.class);
             if (installProfile.containsKey("spec")) {
                 ForgeNewInstallProfile profile = JsonUtils.fromNonNullJson(installProfileText, ForgeNewInstallProfile.class);
                 if (!gameVersion.get().equals(profile.getMinecraft()))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeNewInstallTask.java
Patch:
@@ -21,7 +21,6 @@
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.game.GameLibrariesTask;
-import org.jackhuang.hmcl.download.optifine.OptiFineInstallTask;
 import org.jackhuang.hmcl.game.Artifact;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
 import org.jackhuang.hmcl.game.Library;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineInstallTask.java
Patch:
@@ -38,8 +38,6 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.*;
-import java.util.stream.Collectors;
-
 import static org.jackhuang.hmcl.util.Lang.getOrDefault;
 
 /**

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventBus.java
Patch:
@@ -19,7 +19,6 @@
 
 import org.jackhuang.hmcl.util.Logging;
 
-import java.util.HashMap;
 import java.util.concurrent.ConcurrentHashMap;
 
 /**

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventManager.java
Patch:
@@ -21,7 +21,6 @@
 
 import java.lang.ref.WeakReference;
 import java.util.EnumMap;
-import java.util.HashSet;
 import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.function.Consumer;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ModAdviser.java
Patch:
@@ -20,7 +20,6 @@
 import org.jackhuang.hmcl.util.Lang;
 
 import java.util.List;
-import java.util.regex.Pattern;
 
 /**
  * @author huangyuhui

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ModpackInstallTask.java
Patch:
@@ -91,7 +91,7 @@ public void execute() throws Exception {
                     } else {
                         // If both old and new modpacks have this entry, and user has modified this file,
                         // we will not replace it since this modified file is what user expects.
-                        String fileHash = encodeHex(digest("SHA-1", Files.newInputStream(destPath)));
+                        String fileHash = encodeHex(digest("SHA-1", destPath));
                         String oldHash = files.get(entryPath).getHash();
                         return Objects.equals(oldHash, fileHash);
                     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/PackMcMeta.java
Patch:
@@ -17,13 +17,13 @@
  */
 package org.jackhuang.hmcl.mod;
 
-import com.google.gson.*;
+import com.google.gson.JsonParseException;
 import com.google.gson.annotations.SerializedName;
 import org.jackhuang.hmcl.util.Immutable;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.gson.Validation;
 import org.jackhuang.hmcl.util.io.CompressingUtils;
-import org.jackhuang.hmcl.util.io.IOUtils;
+import org.jackhuang.hmcl.util.io.FileUtils;
 
 import java.io.File;
 import java.io.IOException;
@@ -85,7 +85,7 @@ public static ModInfo fromFile(ModManager modManager, File modFile) throws IOExc
             Path mcmod = fs.getPath("pack.mcmeta");
             if (Files.notExists(mcmod))
                 throw new IOException("File " + modFile + " is not a resource pack.");
-            PackMcMeta metadata = JsonUtils.fromNonNullJson(IOUtils.readFullyAsString(Files.newInputStream(mcmod)), PackMcMeta.class);
+            PackMcMeta metadata = JsonUtils.fromNonNullJson(FileUtils.readText(mcmod), PackMcMeta.class);
             return new ModInfo(modManager, modFile, metadata.pack.description, "", "", "", "", "");
         }
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCManifest.java
Patch:
@@ -20,12 +20,12 @@
 import com.google.gson.annotations.SerializedName;
 import org.jackhuang.hmcl.util.Immutable;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
-import org.jackhuang.hmcl.util.io.IOUtils;
+import org.jackhuang.hmcl.util.io.FileUtils;
 
 import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.Path;
-import java.util.List;
+import java.util.*;
 
 @Immutable
 public final class MultiMCManifest {
@@ -60,7 +60,7 @@ public static MultiMCManifest readMultiMCModpackManifest(Path root) throws IOExc
         Path mmcPack = root.resolve("mmc-pack.json");
         if (Files.notExists(mmcPack))
             return null;
-        String json = IOUtils.readFullyAsString(Files.newInputStream(mmcPack));
+        String json = FileUtils.readText(mmcPack);
         MultiMCManifest manifest = JsonUtils.fromNonNullJson(json, MultiMCManifest.class);
 
         if (manifest.getComponents() == null)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackCompletionTask.java
Patch:
@@ -128,7 +128,7 @@ public void execute() throws Exception {
                 download = true;
             } else {
                 // If user modified this entry file, we will not replace this file since this modified file is that user expects.
-                String fileHash = encodeHex(digest("SHA-1", Files.newInputStream(actualPath)));
+                String fileHash = encodeHex(digest("SHA-1", actualPath));
                 String oldHash = files.get(file.getPath()).getHash();
                 download = !Objects.equals(oldHash, file.getHash()) && Objects.equals(oldHash, fileHash);
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackRemoteInstallTask.java
Patch:
@@ -22,10 +22,7 @@
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
-import org.jackhuang.hmcl.mod.MinecraftInstanceTask;
-import org.jackhuang.hmcl.mod.Modpack;
 import org.jackhuang.hmcl.mod.ModpackConfiguration;
-import org.jackhuang.hmcl.mod.ModpackInstallTask;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.io.FileUtils;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/OperatingSystem.java
Patch:
@@ -21,8 +21,6 @@
 import javax.management.MBeanServer;
 import javax.management.ObjectName;
 
-import org.jackhuang.hmcl.util.Lang;
-
 import java.io.File;
 import java.lang.management.ManagementFactory;
 import java.nio.charset.Charset;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackInstallTask.java
Patch:
@@ -104,7 +104,7 @@ public void execute() throws Exception {
             libraryTask = libraryTask.thenComposeAsync(version -> dependency.installLibraryAsync(modpack.getGameVersion(), version, mark.getLibraryId(), mark.getLibraryVersion()));
         }
 
-        dependencies.add(libraryTask.thenComposeAsync(repository::save));
+        dependencies.add(libraryTask.thenComposeAsync(repository::saveAsync));
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/UpdateInstallerWizardProvider.java
Patch:
@@ -96,7 +96,7 @@ public Object finish(Map<String, Object> settings) {
             }
         }
 
-        return ret.thenComposeAsync(profile.getRepository()::save).thenComposeAsync(profile.getRepository().refreshVersionsAsync()).withStagesHint(stages);
+        return ret.thenComposeAsync(profile.getRepository()::saveAsync).thenComposeAsync(profile.getRepository().refreshVersionsAsync()).withStagesHint(stages);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -76,7 +76,7 @@ public CompletableFuture<?> loadVersion(Profile profile, String versionId) {
         }).thenAcceptAsync(analyzer -> {
             Function<String, Consumer<InstallerItem>> removeAction = libraryId -> x -> {
                 profile.getDependency().removeLibraryAsync(version, libraryId)
-                        .thenComposeAsync(profile.getRepository()::save)
+                        .thenComposeAsync(profile.getRepository()::saveAsync)
                         .withComposeAsync(profile.getRepository().refreshVersionsAsync())
                         .withRunAsync(Schedulers.javafx(), () -> loadVersion(this.profile, this.versionId))
                         .start();
@@ -122,7 +122,7 @@ public void installOffline() {
 
     private void doInstallOffline(File file) {
         Task<?> task = profile.getDependency().installLibraryAsync(version, file.toPath())
-                .thenComposeAsync(profile.getRepository()::save)
+                .thenComposeAsync(profile.getRepository()::saveAsync)
                 .thenComposeAsync(profile.getRepository().refreshVersionsAsync());
         task.setName(i18n("install.installer.install_offline"));
         TaskExecutor executor = task.executor(new TaskListener() {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultGameBuilder.java
Patch:
@@ -60,7 +60,7 @@ public Task<?> buildAsync() {
             stages.add(String.format("hmcl.install.%s:%s", remoteVersion.getLibraryId(), remoteVersion.getSelfVersion()));
         }
 
-        return libraryTask.thenComposeAsync(dependencyManager.getGameRepository()::save).whenComplete(exception -> {
+        return libraryTask.thenComposeAsync(dependencyManager.getGameRepository()::saveAsync).whenComplete(exception -> {
             if (exception != null)
                 dependencyManager.getGameRepository().removeVersionFromDisk(name);
         }).withStagesHint(stages);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameInstallTask.java
Patch:
@@ -77,7 +77,7 @@ public void execute() throws Exception {
                 ).withStage("hmcl.install.assets").withRunAsync(() -> {
                     // ignore failure
                 })
-        ).thenComposeAsync(gameRepository.save(version)));
+        ).thenComposeAsync(gameRepository.saveAsync(version)));
     }
 
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackInstallTask.java
Patch:
@@ -180,7 +180,7 @@ public void execute() throws Exception {
             FileUtils.copyDirectory(jarmods, repository.getVersionRoot(name).toPath().resolve("jarmods"));
         }
 
-        dependencies.add(repository.save(version));
+        dependencies.add(repository.saveAsync(version));
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -63,6 +63,7 @@
 import java.util.*;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.RejectedExecutionException;
 
 import static org.jackhuang.hmcl.setting.ConfigHolder.config;
 import static org.jackhuang.hmcl.util.Lang.mapOf;
@@ -109,7 +110,7 @@ public void launch() {
                     Controllers.dialog(launchingStepsPane);
                     Schedulers.newThread().execute(this::launch0);
                 });
-            } catch (InterruptedException ignore) {
+            } catch (InterruptedException | RejectedExecutionException ignore) {
             }
         });
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -38,8 +38,8 @@
 import java.io.File;
 import java.io.IOException;
 import java.nio.file.Files;
+import java.nio.file.InvalidPathException;
 import java.nio.file.Path;
-import java.nio.file.StandardCopyOption;
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.List;
@@ -181,7 +181,7 @@ public boolean renameVersion(String from, String to) {
                 fromVersion = fromVersion.setJar(null);
             FileUtils.writeText(toJson.toFile(), JsonUtils.GSON.toJson(fromVersion.setId(to)));
             return true;
-        } catch (IOException | JsonParseException | VersionNotFoundException e) {
+        } catch (IOException | JsonParseException | VersionNotFoundException | InvalidPathException e) {
             LOG.log(Level.WARNING, "Unable to rename version " + from + " to " + to, e);
             return false;
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackInstallTask.java
Patch:
@@ -77,6 +77,7 @@ public HMCLModpackInstallTask(Profile profile, File zipFile, Modpack modpack, St
         } catch (JsonParseException | IOException ignore) {
         }
         dependents.add(new ModpackInstallTask<>(zipFile, run, modpack.getEncoding(), "/minecraft", it -> !"pack.json".equals(it), config));
+        dependents.add(new MinecraftInstanceTask<>(zipFile, modpack.getEncoding(), "/minecraft", modpack, MODPACK_TYPE, repository.getModpackConfiguration(name)).withStage("hmcl.modpack"));
     }
 
     @Override
@@ -104,7 +105,6 @@ public void execute() throws Exception {
         }
 
         dependencies.add(libraryTask.thenComposeAsync(repository::save));
-        dependencies.add(new MinecraftInstanceTask<>(zipFile, modpack.getEncoding(), "/minecraft", modpack, MODPACK_TYPE, repository.getModpackConfiguration(name)).withStage("hmcl.modpack"));
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ModpackInstallTask.java
Patch:
@@ -89,7 +89,8 @@ public void execute() throws Exception {
                         // If both old and new modpacks have this entry, but the file is deleted by user, leave it missing.
                         return false;
                     } else {
-                        // If user modified this entry file, we will not replace this file since this modified file is that user expects.
+                        // If both old and new modpacks have this entry, and user has modified this file,
+                        // we will not replace it since this modified file is what user expects.
                         String fileHash = encodeHex(digest("SHA-1", Files.newInputStream(destPath)));
                         String oldHash = files.get(entryPath).getHash();
                         return Objects.equals(oldHash, fileHash);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackInstallTask.java
Patch:
@@ -134,6 +134,8 @@ public void preExecute() throws Exception {
             else if (Files.exists(fs.getPath("/" + manifest.getName() + "/minecraft")))
                 dependents.add(new ModpackInstallTask<>(zipFile, run, modpack.getEncoding(), "/" + manifest.getName() + "/minecraft", any -> true, config).withStage("hmcl.modpack"));
         }
+
+        dependents.add(new MinecraftInstanceTask<>(zipFile, modpack.getEncoding(), "/" + manifest.getName() + "/minecraft", manifest, MODPACK_TYPE, repository.getModpackConfiguration(name)).withStage("hmcl.modpack"));
     }
 
     @Override
@@ -179,7 +181,6 @@ public void execute() throws Exception {
         }
 
         dependencies.add(repository.save(version));
-        dependencies.add(new MinecraftInstanceTask<>(zipFile, modpack.getEncoding(), "/" + manifest.getName() + "/minecraft", manifest, MODPACK_TYPE, repository.getModpackConfiguration(name)).withStage("hmcl.modpack"));
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackLocalInstallTask.java
Patch:
@@ -82,6 +82,7 @@ public ServerModpackLocalInstallTask(DefaultDependencyManager dependencyManager,
         } catch (JsonParseException | IOException ignore) {
         }
         dependents.add(new ModpackInstallTask<>(zipFile, run, modpack.getEncoding(), "/overrides", any -> true, config).withStage("hmcl.modpack"));
+        dependents.add(new MinecraftInstanceTask<>(zipFile, modpack.getEncoding(), "/overrides", manifest, MODPACK_TYPE, repository.getModpackConfiguration(name)).withStage("hmcl.modpack"));
     }
 
     @Override
@@ -96,7 +97,6 @@ public List<Task<?>> getDependencies() {
 
     @Override
     public void execute() throws Exception {
-        dependencies.add(new MinecraftInstanceTask<>(zipFile, modpack.getEncoding(), "/overrides", manifest, MODPACK_TYPE, repository.getModpackConfiguration(name)).withStage("hmcl.modpack"));
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -176,8 +176,8 @@ public static synchronized void initialize() {
 
         List<JavaVersion> javaVersions;
 
-        try {
-            javaVersions = lookupJavas(searchPotentialJavaHomes());
+        try (Stream<Path> stream = searchPotentialJavaHomes()) {
+            javaVersions = lookupJavas(stream);
         } catch (IOException e) {
             LOG.log(Level.WARNING, "Failed to search Java homes", e);
             javaVersions = new ArrayList<>();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -52,7 +52,7 @@ public final class ForgeInstallTask extends Task<Version> {
     private final Version version;
     private Path installer;
     private final ForgeRemoteVersion remote;
-    private Task<Void> dependent;
+    private FileDownloadTask dependent;
     private Task<Version> dependency;
 
     public ForgeInstallTask(DefaultDependencyManager dependencyManager, Version version, ForgeRemoteVersion remoteVersion) {
@@ -75,6 +75,7 @@ public void preExecute() throws Exception {
                 installer.toFile(), null)
                 .setCacheRepository(dependencyManager.getCacheRepository())
                 .setCaching(true);
+        dependent.addIntegrityCheckHandler(FileDownloadTask.ZIP_INTEGRITY_CHECK_HANDLER);
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -26,8 +26,6 @@
 import org.jackhuang.hmcl.task.FileDownloadTask.IntegrityCheck;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.Logging;
-import org.jackhuang.hmcl.util.StringUtils;
-import org.jackhuang.hmcl.util.io.CompressingUtils;
 import org.jackhuang.hmcl.util.io.FileUtils;
 import org.jackhuang.hmcl.util.io.IOUtils;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
@@ -36,7 +34,6 @@
 import java.io.*;
 import java.net.URL;
 import java.nio.charset.StandardCharsets;
-import java.nio.file.FileSystem;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.*;
@@ -142,6 +139,7 @@ public void preExecute() throws Exception {
                         library.getDownload().getSha1() != null ? new IntegrityCheck("SHA-1", library.getDownload().getSha1()) : null)
                         .setCacheRepository(cacheRepository)
                         .setCaching(true);
+                task.addIntegrityCheckHandler(FileDownloadTask.ZIP_INTEGRITY_CHECK_HANDLER);
                 xz = false;
             }
         } catch (IOException e) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -156,8 +156,6 @@ public FileDownloadTask(List<URL> urls, File file, IntegrityCheck integrityCheck
         this.integrityCheck = integrityCheck;
         this.retry = retry;
 
-        this.addIntegrityCheckHandler(ZIP_INTEGRITY_CHECK_HANDLER);
-
         setName(file.getName());
         setExecutor(Schedulers.io());
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/CompressingUtils.java
Patch:
@@ -178,9 +178,9 @@ public static FileSystem createZipFileSystem(Path zipFile, boolean create, boole
             // Since Java 8 throws ZipError stupidly
             throw new ZipException(error.getMessage());
         } catch (UnsupportedOperationException ex) {
-            throw new IOException("Not a zip file", ex);
+            throw new ZipException("Not a zip file");
         } catch (FileSystemNotFoundException ex) {
-            throw new IOException("Java Environment is broken");
+            throw new ZipException("Java Environment is broken");
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -106,7 +106,6 @@ public static void stopApplication() {
             Schedulers.shutdown();
             Controllers.shutdown();
             Platform.exit();
-            Lang.executeDelayed(OperatingSystem::forceGC, TimeUnit.SECONDS, 5, true);
         });
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -383,13 +383,13 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
                 setting.getMaxMemory() > 1.5 * 1024) {
             // 1.5 * 1024 is an inaccurate number.
             // Actual memory limit depends on operating system and memory.
-            Controllers.dialog(i18n("launch.advice.too_large_memory_for_32bit"), i18n("message.error"), MessageType.ERROR, onAccept);
+            Controllers.confirm(i18n("launch.advice.too_large_memory_for_32bit"), i18n("message.error"), onAccept, null);
             flag = true;
         }
 
         // Cannot allocate too much memory exceeding free space.
         if (!flag && OperatingSystem.TOTAL_MEMORY > 0 && OperatingSystem.TOTAL_MEMORY < setting.getMaxMemory()) {
-            Controllers.dialog(i18n("launch.advice.not_enough_space", OperatingSystem.TOTAL_MEMORY), i18n("message.error"), MessageType.ERROR, onAccept);
+            Controllers.confirm(i18n("launch.advice.not_enough_space", OperatingSystem.TOTAL_MEMORY), i18n("message.error"), onAccept, null);
             flag = true;
         }
 
@@ -401,7 +401,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
                                     VersionNumber.VERSION_COMPARATOR.compare(it.getVersion(), "1.12.2-14.23.5.2773") < 0);
             boolean hasLiteLoader = version.getLibraries().stream().anyMatch(it -> it.is("com.mumfrey", "liteloader"));
             if (hasForge2760 && hasLiteLoader && gameVersion.compareTo(VersionNumber.asVersion("1.12.2")) == 0) {
-                Controllers.dialog(i18n("launch.advice.forge2760_liteloader"), i18n("message.error"), MessageType.ERROR, onAccept);
+                Controllers.confirm(i18n("launch.advice.forge2760_liteloader"), i18n("message.error"), onAccept, null);
                 flag = true;
             }
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -145,8 +145,9 @@ public void preExecute() throws Exception {
                 task.addIntegrityCheckHandler((file, dest) -> {
                     String ext = FileUtils.getExtension(dest).toLowerCase();
                     if (ext.equals("jar")) {
-                        JarFile jarFile = new JarFile(file.toFile());
-                        jarFile.getManifest();
+                        try (JarFile jarFile = new JarFile(file.toFile())) {
+                            jarFile.getManifest();
+                        }
                     }
                 });
                 xz = false;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -178,6 +178,7 @@ private void onTerminateGame() {
         }
 
         private void onClear() {
+            impl.listView.getItems().clear();
             logs.clear();
         }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -292,7 +292,7 @@ public ManagedProcess launch() throws IOException, InterruptedException {
                     .replace("$INST_MC_DIR", repository.getRunDirectory(version.getId()).getAbsolutePath())
                     .replace("$INST_JAVA", options.getJava().getBinary().toString());
 
-            new ProcessBuilder(preLaunchCommand)
+            new ProcessBuilder(StringUtils.tokenize(preLaunchCommand))
                     .directory(runDirectory).start().waitFor();
         }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallerWizardDownloadProvider.java
Patch:
@@ -47,7 +47,7 @@ public String getAssetBaseURL() {
 
     @Override
     public List<URL> getAssetObjectCandidates(String assetObjectLocation) {
-        return fallback.injectURLWithCandidates(assetObjectLocation);
+        return fallback.getAssetObjectCandidates(assetObjectLocation);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -507,12 +507,14 @@ private void finishLaunch() {
                     });
                     break;
                 case HIDE:
+                    launchingLatch.countDown();
                     Platform.runLater(() -> {
                         // If application was stopped and execution services did not finish termination,
                         // these codes will be executed.
                         if (Controllers.getStage() != null) {
                             Controllers.getStage().close();
-                            launchingLatch.countDown();
+                            Controllers.shutdown();
+                            Schedulers.shutdown();
                         }
                     });
                     break;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/CancellableTaskExecutor.java
Patch:
@@ -288,12 +288,14 @@ public Invoker(Task<?> parentTask, Task<?> task, CountDownLatch latch, AtomicBoo
 
         @Override
         public void run() {
+            String oldName = Thread.currentThread().getName();
             try {
                 if (task.getName() != null)
                     Thread.currentThread().setName(task.getName());
                 if (!executeTask(parentTask, task))
                     success.set(false);
             } finally {
+                Thread.currentThread().setName(oldName);
                 latch.countDown();
             }
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Schedulers.java
Patch:
@@ -74,10 +74,10 @@ public static synchronized void shutdown() {
         Logging.LOG.info("Shutting down executor services.");
 
         if (CACHED_EXECUTOR != null)
-            CACHED_EXECUTOR.shutdownNow();
+            CACHED_EXECUTOR.shutdown();
 
         if (IO_EXECUTOR != null)
-            IO_EXECUTOR.shutdownNow();
+            IO_EXECUTOR.shutdown();
     }
 
     public static Future<?> schedule(Executor executor, Runnable command) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/UpdateInstallerWizardProvider.java
Patch:
@@ -42,6 +42,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import java.util.zip.ZipException;
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
@@ -158,7 +159,7 @@ public static void alertFailureMessage(Exception exception, Runnable next) {
             Controllers.dialog(i18n("install.failed.optifine_conflict"), i18n("install.failed"), MessageDialogPane.MessageType.ERROR, next);
         } else if (exception instanceof DefaultDependencyManager.UnsupportedLibraryInstallerException) {
             Controllers.dialog(i18n("install.failed.install_online"), i18n("install.failed"), MessageDialogPane.MessageType.ERROR, next);
-        } else if (exception instanceof ArtifactMalformedException) {
+        } else if (exception instanceof ArtifactMalformedException || exception instanceof ZipException) {
             Controllers.dialog(i18n("install.failed.malformed"), i18n("install.failed"), MessageDialogPane.MessageType.ERROR, next);
         } else if (exception instanceof GameAssetIndexDownloadTask.GameAssetIndexMalformedException) {
             Controllers.dialog(i18n("assets.index.malformed"), i18n("install.failed"), MessageDialogPane.MessageType.ERROR, next);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -104,6 +104,8 @@ public void duplicateVersion(String srcId, String dstId, boolean copySaves) thro
 
         if (dstDir.exists()) throw new IOException("Version exists");
         FileUtils.copyDirectory(srcDir.toPath(), dstDir.toPath());
+        Files.move(dstDir.toPath().resolve(srcId + ".jar"), dstDir.toPath().resolve(dstId + ".jar"));
+        Files.move(dstDir.toPath().resolve(srcId + ".json"), dstDir.toPath().resolve(dstId + ".json"));
         VersionSetting oldVersionSetting = getVersionSetting(srcId).clone();
         EnumGameDirectory originalGameDirType = oldVersionSetting.getGameDirType();
         oldVersionSetting.setUsesGlobal(false);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -83,7 +83,6 @@ public class VersionPage extends Control implements DecoratorPage {
             if (newValue == null && !Objects.equals(oldValue, newValue)) {
                 if (listView.getItems().contains(preferredVersionName)) {
                     loadVersion(preferredVersionName, profile);
-                    preferredVersionName = null;
                 } else if (!listView.getItems().isEmpty()) {
                     loadVersion(listView.getItems().get(0), profile);
                 }
@@ -122,6 +121,7 @@ public void setVersion(String version, Profile profile) {
 
     public void loadVersion(String version, Profile profile) {
         setVersion(version, profile);
+        preferredVersionName = version;
         listView.getSelectionModel().select(version);
 
         versionSettingsPage.loadVersion(profile, version);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorTransitionPage.java
Patch:
@@ -34,7 +34,7 @@
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 public abstract class DecoratorTransitionPage extends Control implements DecoratorPage {
-    protected final ReadOnlyObjectWrapper<State> state = new ReadOnlyObjectWrapper<>(State.fromTitle(i18n("")));
+    protected final ReadOnlyObjectWrapper<State> state = new ReadOnlyObjectWrapper<>(State.fromTitle(""));
     private final BooleanProperty backable = new SimpleBooleanProperty(false);
     private final BooleanProperty refreshable = new SimpleBooleanProperty(false);
     private Node currentPage;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallersPage.java
Patch:
@@ -20,6 +20,7 @@
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXTextField;
 import com.jfoenix.effects.JFXDepthManager;
+import javafx.beans.binding.Bindings;
 import javafx.fxml.FXML;
 import javafx.scene.Node;
 import javafx.scene.control.Label;
@@ -91,7 +92,8 @@ public InstallersPage(WizardController controller, GameRepository repository, St
         Validator nameValidator = new Validator(OperatingSystem::isNameValid);
         nameValidator.setMessage(i18n("install.new_game.malformed"));
         txtName.getValidators().addAll(hasVersion, nameValidator);
-        txtName.textProperty().addListener(e -> btnInstall.setDisable(!txtName.validate()));
+        btnInstall.disableProperty().bind(Bindings.createBooleanBinding(() -> !txtName.validate(),
+                txtName.textProperty()));
         txtName.setText(gameVersion);
 
         Node[] buttons = new Node[]{btnGame, btnFabric, btnForge, btnLiteLoader, btnOptiFine};

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackInstallWizardProvider.java
Patch:
@@ -119,7 +119,7 @@ public void onFail(Map<String, Object> settings, Exception exception, Runnable n
                         Controllers.dialog(i18n("install.success"), i18n("install.success"), MessageType.INFORMATION, next);
                     }
                 } else {
-                    InstallerWizardProvider.alertFailureMessage(exception, next);
+                    UpdateInstallerWizardProvider.alertFailureMessage(exception, next);
                 }
             }
         });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VanillaInstallWizardProvider.java
Patch:
@@ -62,7 +62,7 @@ private Task<Void> finishVersionDownloadingAsync(Map<String, Object> settings) {
     public Object finish(Map<String, Object> settings) {
         settings.put("title", i18n("install.new_game"));
         settings.put("success_message", i18n("install.success"));
-        settings.put("failure_callback", (FailureCallback) (settings1, exception, next) -> InstallerWizardProvider.alertFailureMessage(exception, next));
+        settings.put("failure_callback", (FailureCallback) (settings1, exception, next) -> UpdateInstallerWizardProvider.alertFailureMessage(exception, next));
 
         return finishVersionDownloadingAsync(settings);
     }
@@ -72,7 +72,8 @@ public Node createPage(WizardController controller, int step, Map<String, Object
         DownloadProvider provider = profile.getDependency().getPrimaryDownloadProvider();
         switch (step) {
             case 0:
-                return new VersionsPage(controller, i18n("install.installer.choose", i18n("install.installer.game")), "", provider, "game", () -> controller.onNext(new InstallersPage(controller, profile.getRepository(), ((RemoteVersion) controller.getSettings().get("game")).getGameVersion(), provider)));
+                return new VersionsPage(controller, i18n("install.installer.choose", i18n("install.installer.game")), "", provider, "game",
+                        () -> controller.onNext(new InstallersPage(controller, profile.getRepository(), ((RemoteVersion) controller.getSettings().get("game")).getGameVersion(), provider)));
             default:
                 throw new IllegalStateException("error step " + step + ", settings: " + settings + ", pages: " + controller.getPages());
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultDependencyManager.java
Patch:
@@ -112,7 +112,7 @@ public Task<Version> installLibraryAsync(Version baseVersion, RemoteVersion libr
         return removeLibraryAsync(baseVersion.resolvePreservingPatches(repository), libraryVersion.getLibraryId())
                 .thenComposeAsync(version -> libraryVersion.getInstallTask(this, version))
                 .thenApplyAsync(baseVersion::addPatch)
-                .thenComposeAsync(repository::save).withStage(String.format("hmcl.install.%s:%s", libraryVersion.getLibraryId(), libraryVersion.getSelfVersion()));
+                .withStage(String.format("hmcl.install.%s:%s", libraryVersion.getLibraryId(), libraryVersion.getSelfVersion()));
     }
 
     public Task<Version> installLibraryAsync(Version oldVersion, Path installer) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultGameBuilder.java
Patch:
@@ -66,7 +66,7 @@ public Task<?> buildAsync() {
             stages.add(String.format("hmcl.install.%s:%s", remoteVersion.getLibraryId(), remoteVersion.getSelfVersion()));
         }
 
-        return libraryTask.whenComplete(exception -> {
+        return libraryTask.thenComposeAsync(dependencyManager.getGameRepository()::save).whenComplete(exception -> {
             if (exception != null)
                 dependencyManager.getGameRepository().removeVersionFromDisk(name);
         }).withStagesHint(stages);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeNewInstallTask.java
Patch:
@@ -131,7 +131,8 @@ public void preExecute() throws Exception {
 
     @Override
     public void execute() throws Exception {
-        if ("net.minecraft.launchwrapper.Launch".equals(version.resolve(dependencyManager.getGameRepository()).getMainClass()))
+        String originalMainClass = version.resolve(dependencyManager.getGameRepository()).getMainClass();
+        if (!"net.minecraft.client.main.Main".equals(originalMainClass) && !"cpw.mods.modlauncher.Launcher".equals(originalMainClass))
             throw new OptiFineInstallTask.UnsupportedOptiFineInstallationException();
 
         Path temp  = Files.createTempDirectory("forge_installer");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineInstallTask.java
Patch:
@@ -122,7 +122,8 @@ public boolean isRelyingOnDependencies() {
 
     @Override
     public void execute() throws Exception {
-        if ("cpw.mods.modlauncher.Launcher".equals(version.resolve(dependencyManager.getGameRepository()).getMainClass()))
+        String originalMainClass = version.resolve(dependencyManager.getGameRepository()).getMainClass();
+        if (!"net.minecraft.client.main.Main".equals(originalMainClass) && !"net.minecraft.launchwrapper.Launch".equals(originalMainClass))
             throw new OptiFineInstallTask.UnsupportedOptiFineInstallationException();
 
         List<Library> libraries = new LinkedList<>();

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -124,7 +124,7 @@ public void makeLaunchScript(File scriptFile) {
     private void launch0() {
         HMCLGameRepository repository = profile.getRepository();
         DefaultDependencyManager dependencyManager = profile.getDependency();
-        Version version = MaintainTask.maintain(repository, repository.getResolvedPreservingPatchesVersion(selectedVersion));
+        Version version = MaintainTask.maintain(repository, repository.getResolvedVersion(selectedVersion));
         Optional<String> gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version));
 
         TaskExecutor executor = Task.allOf(

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -124,7 +124,7 @@ public void makeLaunchScript(File scriptFile) {
     private void launch0() {
         HMCLGameRepository repository = profile.getRepository();
         DefaultDependencyManager dependencyManager = profile.getDependency();
-        Version version = MaintainTask.maintain(repository, repository.getResolvedVersion(selectedVersion));
+        Version version = MaintainTask.maintain(repository, repository.getResolvedPreservingPatchesVersion(selectedVersion));
         Optional<String> gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version));
 
         TaskExecutor executor = Task.allOf(

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -257,7 +257,7 @@ protected Version resolve(VersionProvider provider, Set<String> resolvedSoFar) t
 
         if (inheritsFrom == null) {
             if (isRoot())
-                thisVersion = new Version(id).setJar(id);
+                thisVersion = new Version(id).setPatches(patches).setJar(id);
             else
                 thisVersion = this.jar == null ? this.setJar(id) : this;
         } else {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeBMCLVersionList.java
Patch:
@@ -92,15 +92,15 @@ public void execute() {
                                         + (StringUtils.isNotBlank(version.getBranch()) ? "-" + version.getBranch() : "");
                                 String fileName1 = "forge-" + classifier + "-" + file.getCategory() + "." + file.getFormat();
                                 String fileName2 = "forge-" + classifier + "-" + gameVersion + "-" + file.getCategory() + "." + file.getFormat();
+                                urls.add(apiRoot + "/maven/net/minecraftforge/forge/" + classifier + "-" + gameVersion + "/" + fileName2);
+                                urls.add(apiRoot + "/maven/net/minecraftforge/forge/" + classifier + "/" + fileName1);
                                 urls.add(NetworkUtils.withQuery(apiRoot + "/forge/download", mapOf(
                                         pair("mcversion", version.getGameVersion()),
                                         pair("version", version.getVersion()),
                                         pair("branch", version.getBranch()),
                                         pair("category", file.getCategory()),
                                         pair("format", file.getFormat())
                                 )));
-                                urls.add(apiRoot + "/maven/net/minecraftforge/forge/" + classifier + "/" + fileName1);
-                                urls.add(apiRoot + "/maven/net/minecraftforge/forge/" + classifier + "-" + gameVersion + "/" + fileName2);
                             }
 
                         if (urls.isEmpty())

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -209,6 +209,7 @@ public void execute() throws Exception {
 
         Logging.LOG.log(Level.FINER, "Downloading " + urls.get(0) + " to " + file);
         Exception exception = null;
+        URL failedURL = null;
 
         for (int repeat = 0; repeat < retry * urls.size(); repeat++) {
             URL url = urls.get(repeat / retry);
@@ -325,6 +326,7 @@ public void execute() throws Exception {
             } catch (IOException e) {
                 if (temp != null)
                     temp.toFile().delete();
+                failedURL = url;
                 exception = e;
                 Logging.LOG.log(Level.WARNING, "Failed to download " + url + ", repeat times: " + (repeat + 1), e);
             } finally {
@@ -333,7 +335,7 @@ public void execute() throws Exception {
         }
 
         if (exception != null)
-            throw new DownloadException(urls.get(0), exception);
+            throw new DownloadException(failedURL, exception);
     }
 
     private static final Timer timer = new Timer("DownloadSpeedRecorder", true);

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/DownloadProviders.java
Patch:
@@ -45,7 +45,7 @@ private DownloadProviders() {}
             pair("bmclapi", new BMCLAPIDownloadProvider("https://bmclapi2.bangbang93.com")),
             pair("mcbbs", new BMCLAPIDownloadProvider("https://download.mcbbs.net")));
 
-    public static final String DEFAULT_PROVIDER_ID = "bmclapi";
+    public static final String DEFAULT_PROVIDER_ID = "mcbbs";
 
     private static ObjectBinding<DownloadProvider> downloadProviderProperty;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -554,14 +554,14 @@ public synchronized void onLog(String log, Log4jLevel level) {
 
         @Override
         public void onExit(int exitCode, ExitType exitType) {
+            launchingLatch.countDown();
+
             if (exitType == ExitType.INTERRUPTED)
                 return;
 
             // Game crashed before opening the game window.
             if (!lwjgl) finishLaunch();
 
-            launchingLatch.countDown();
-
             if (exitType != ExitType.NORMAL) {
                 repository.markVersionLaunchedAbnormally(version);
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallerWizardProvider.java
Patch:
@@ -24,6 +24,7 @@
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.download.VersionMismatchException;
 import org.jackhuang.hmcl.download.fabric.FabricInstallTask;
+import org.jackhuang.hmcl.download.game.GameAssetIndexDownloadTask;
 import org.jackhuang.hmcl.download.game.LibraryDownloadException;
 import org.jackhuang.hmcl.download.optifine.OptiFineInstallTask;
 import org.jackhuang.hmcl.game.Version;
@@ -143,6 +144,8 @@ public static void alertFailureMessage(Exception exception, Runnable next) {
             Controllers.dialog(i18n("install.failed.install_online"), i18n("install.failed"), MessageType.ERROR, next);
         } else if (exception instanceof ArtifactMalformedException) {
             Controllers.dialog(i18n("install.failed.malformed"), i18n("install.failed"), MessageType.ERROR, next);
+        } else if (exception instanceof GameAssetIndexDownloadTask.GameAssetIndexMalformedException) {
+            Controllers.dialog(i18n("assets.index.malformed"), i18n("install.failed"), MessageType.ERROR, next);
         } else if (exception instanceof VersionMismatchException) {
             VersionMismatchException e = ((VersionMismatchException) exception);
             Controllers.dialog(i18n("install.failed.version_mismatch", e.getExpect(), e.getActual()), i18n("install.failed"), MessageType.ERROR, next);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/VersionList.java
Patch:
@@ -86,7 +86,7 @@ public Task<?> loadAsync() {
     }
 
     public Task<?> loadAsync(String gameVersion) {
-        return Task.composeAsync(null, () -> {
+        return Task.composeAsync(() -> {
             lock.readLock().lock();
             boolean loaded;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/VersionList.java
Patch:
@@ -86,7 +86,7 @@ public Task<?> loadAsync() {
     }
 
     public Task<?> loadAsync(String gameVersion) {
-        return Task.composeAsync(() -> {
+        return Task.composeAsync(null, () -> {
             lock.readLock().lock();
             boolean loaded;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/CancellableTaskExecutor.java
Patch:
@@ -143,7 +143,7 @@ private boolean executeTask(Task<?> parentTask, Task<?> task) {
                     .findAny().orElse(null);
             if (!doDependentsSucceeded && task.isRelyingOnDependents() || cancelled.get()) {
                 task.setException(dependentsException);
-                throw new CancellationException();
+                throw new ExecutionException(dependentsException);
             }
 
             if (doDependentsSucceeded)
@@ -183,7 +183,7 @@ private boolean executeTask(Task<?> parentTask, Task<?> task) {
             if (!doDependenciesSucceeded && task.isRelyingOnDependencies()) {
                 Logging.LOG.severe("Subtasks failed for " + task.getName());
                 task.setException(dependenciesException);
-                throw new CancellationException();
+                throw new ExecutionException(dependenciesException);
             }
 
             flag = true;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -211,7 +211,7 @@ public void execute() throws Exception {
         Exception exception = null;
 
         for (int repeat = 0; repeat < retry * urls.size(); repeat++) {
-            URL url = urls.get(repeat / urls.size());
+            URL url = urls.get(repeat / retry);
             if (isCancelled()) {
                 break;
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/BMCLAPIDownloadProvider.java
Patch:
@@ -85,7 +85,7 @@ public String injectURL(String baseURL) {
                 .replaceFirst("https?://files\\.minecraftforge\\.net/maven", apiRoot + "/maven")
                 .replace("http://dl.liteloader.com/versions/versions.json", apiRoot + "/maven/com/mumfrey/liteloader/versions.json")
                 .replace("http://dl.liteloader.com/versions", apiRoot + "/maven")
-                .replace("https://meta.fabricmc.net/v2/versions/game", apiRoot + "/fabric-meta/v2/versions")
+                .replace("https://meta.fabricmc.net", apiRoot + "/fabric-meta")
                 .replace("https://maven.fabricmc.net", apiRoot + "/maven")
                 .replace("https://authlib-injector.yushi.moe", apiRoot + "/mirrors/authlib-injector");
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -162,7 +162,7 @@ else if ("Server".equals(configuration.getType()))
                     }
                 })
                 .thenRunAsync(Schedulers.javafx(), () -> emitStatus(LoadingState.LOGGING_IN))
-                .thenSupplyAsync(i18n("account.methods"), () -> {
+                .thenSupplyAsync(i18n("launch.state.logging_in"), () -> {
                     try {
                         return account.logIn();
                     } catch (CredentialExpiredException e) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/TaskExecutor.java
Patch:
@@ -108,6 +108,8 @@ public synchronized void cancel() {
             throw new IllegalStateException("Cannot cancel a not started TaskExecutor");
         }
 
+        Logging.LOG.log(Level.INFO, "Cancelling task " + firstTask);
+
         cancelled.set(true);
         future.cancel(true);
     }
@@ -132,9 +134,6 @@ private CompletableFuture<Exception> executeTasks(Collection<Task<?>> tasks) {
                 .thenApplyAsync(unused -> (Exception) null)
                 .exceptionally(throwable -> {
                     Throwable resolved = resolveException(throwable);
-                    if (resolved instanceof CancellationException) {
-                        throw (CancellationException)resolved;
-                    }
                     if (resolved instanceof Exception) {
                         return (Exception) resolved;
                     } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -154,12 +154,11 @@ public Image getVersionIconImage(String id) {
         if (id == null || !isLoaded())
             return newImage("/assets/img/grass.png");
 
-        Version version = getVersion(id);
+        Version version = getVersion(id).resolve(this);
         File iconFile = getVersionIconFile(id);
         if (iconFile.exists())
             return new Image("file:" + iconFile.getAbsolutePath());
-        else if (!version.getPatches().isEmpty() ||
-                version.getMainClass() != null &&
+        else if (version.getMainClass() != null &&
                 ("net.minecraft.launchwrapper.Launch".equals(version.getMainClass())
                         || version.getMainClass().startsWith("net.fabricmc")
                         || "cpw.mods.modlauncher.Launcher".equals(version.getMainClass())))

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -26,6 +26,7 @@
 import org.jackhuang.hmcl.auth.CredentialExpiredException;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.MaintainTask;
+import org.jackhuang.hmcl.download.game.GameAssetIndexDownloadTask;
 import org.jackhuang.hmcl.download.game.LibraryDownloadException;
 import org.jackhuang.hmcl.launch.NotDecompressingNativesException;
 import org.jackhuang.hmcl.launch.PermissionException;
@@ -239,6 +240,8 @@ public void onStop(boolean success, TaskExecutor executor) {
                                     message = i18n("launch.failed.decompressing_natives") + ex.getLocalizedMessage();
                                 } else if (ex instanceof LibraryDownloadException) {
                                     message = i18n("launch.failed.download_library", ((LibraryDownloadException) ex).getLibrary().getName()) + "\n" + StringUtils.getStackTrace(ex.getCause());
+                                } else if (ex instanceof GameAssetIndexDownloadTask.GameAssetIndexMalformedException) {
+                                    message = i18n("assets.index.malformed");
                                 } else {
                                     message = StringUtils.getStackTrace(ex);
                                 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetDownloadTask.java
Patch:
@@ -79,7 +79,7 @@ public void execute() throws Exception {
         int progress = 0;
         if (index != null)
             for (AssetObject assetObject : index.getObjects().values()) {
-                if (Thread.interrupted())
+                if (isCancelled())
                     throw new InterruptedException();
 
                 File file = dependencyManager.getGameRepository().getAssetObject(version.getId(), assetIndexInfo.getId(), assetObject);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/CommandBuilder.java
Patch:
@@ -109,7 +109,7 @@ private static String parseBatch(String s) {
             // The argument has not been quoted, add quotes.
             return '"' + s
                     .replace("\\", "\\\\")
-                    .replace("\"", "\"\"")
+                    .replace("\"", "\\\"")
                     + '"';
         else {
             return s;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/VersionList.java
Patch:
@@ -127,7 +127,7 @@ public final Collection<T> getVersions(String gameVersion) {
      * @param remoteVersion the version of the remote version.
      * @return the specific remote version, null if it is not found.
      */
-    public final Optional<T> getVersion(String gameVersion, String remoteVersion) {
+    public Optional<T> getVersion(String gameVersion, String remoteVersion) {
         lock.readLock().lock();
         try {
             T result = null;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/curse/CurseManifestFile.java
Patch:
@@ -84,7 +84,7 @@ public void validate() throws JsonParseException {
 
     public URL getUrl() {
         return url == null ? NetworkUtils.toURL("https://www.curseforge.com/minecraft/mc-mods/" + projectID + "/download/" + fileID + "/file")
-                : NetworkUtils.toURL(url);
+                : NetworkUtils.toURL(NetworkUtils.encodeLocation(url));
     }
 
     public CurseManifestFile withFileName(String fileName) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -94,7 +94,7 @@ public Collection<Version> getVersions() {
 
     @Override
     public File getLibraryFile(Version version, Library lib) {
-        if ("local".equals(lib.getHint()))
+        if ("local".equals(lib.getHint()) && lib.getFileName() != null)
             return new File(getVersionRoot(version.getId()), "libraries/" + lib.getFileName());
         else
             return new File(getBaseDirectory(), "libraries/" + lib.getPath());

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -544,7 +544,7 @@ public synchronized void onLog(String log, Log4jLevel level) {
                 Platform.runLater(() -> logWindow.logLine(log, level));
             }
 
-            if (!lwjgl && (log.contains("LWJGL Version: ") || !detectWindow)) {
+            if (!lwjgl && (log.toLowerCase().contains("lwjgl version") || !detectWindow)) {
                 lwjgl = true;
                 finishLaunch();
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/LocalModpackPage.java
Patch:
@@ -48,7 +48,7 @@
 import static org.jackhuang.hmcl.util.Lang.tryCast;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
-public final class ModpackPage extends StackPane implements WizardPage {
+public final class LocalModpackPage extends StackPane implements WizardPage {
     private final WizardController controller;
 
     private Modpack manifest = null;
@@ -77,7 +77,7 @@ public final class ModpackPage extends StackPane implements WizardPage {
     @FXML
     private SpinnerPane spinnerPane;
 
-    public ModpackPage(WizardController controller) {
+    public LocalModpackPage(WizardController controller) {
         this.controller = controller;
 
         FXUtils.loadFXML(this, "/assets/fxml/download/modpack.fxml");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/server/ServerModpackLocalInstallTask.java
Patch:
@@ -35,7 +35,7 @@
 import java.util.LinkedList;
 import java.util.List;
 
-public class ServerModpackInstallTask extends Task<Void> {
+public class ServerModpackLocalInstallTask extends Task<Void> {
 
     private final File zipFile;
     private final Modpack modpack;
@@ -45,7 +45,7 @@ public class ServerModpackInstallTask extends Task<Void> {
     private final List<Task<?>> dependencies = new LinkedList<>();
     private final List<Task<?>> dependents = new LinkedList<>();
 
-    public ServerModpackInstallTask(DefaultDependencyManager dependencyManager, File zipFile, Modpack modpack, ServerModpackManifest manifest, String name) {
+    public ServerModpackLocalInstallTask(DefaultDependencyManager dependencyManager, File zipFile, Modpack modpack, ServerModpackManifest manifest, String name) {
         this.zipFile = zipFile;
         this.modpack = modpack;
         this.manifest = manifest;
@@ -75,7 +75,7 @@ public ServerModpackInstallTask(DefaultDependencyManager dependencyManager, File
                 }.getType());
 
                 if (!MODPACK_TYPE.equals(config.getType()))
-                    throw new IllegalArgumentException("Version " + name + " is not a Curse modpack. Cannot update this version.");
+                    throw new IllegalArgumentException("Version " + name + " is not a Server modpack. Cannot update this version.");
             }
         } catch (JsonParseException | IOException ignore) {
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -237,7 +237,7 @@ public void execute() throws Exception {
                 }
 
                 int contentLength = con.getContentLength();
-                if (contentLength < 1)
+                if (contentLength < 0)
                     throw new IOException("The content length is invalid.");
 
                 if (!FileUtils.makeDirectory(file.getAbsoluteFile().getParentFile()))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/GetTask.java
Patch:
@@ -89,7 +89,7 @@ public void execute() throws Exception {
                 updateProgress(0);
                 HttpURLConnection conn = NetworkUtils.createConnection(url);
                 if (checkETag) repository.injectConnection(conn);
-                conn.connect();
+                conn = NetworkUtils.resolveConnection(conn);
 
                 if (conn.getResponseCode() == HttpURLConnection.HTTP_NOT_MODIFIED) {
                     // Handle cache

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/NetworkUtils.java
Patch:
@@ -198,8 +198,8 @@ public static String detectFileName(HttpURLConnection conn) {
 
     public static URL toURL(String str) {
         try {
-            return new URL(str);
-        } catch (MalformedURLException e) {
+            return new URL(URLEncoder.encode(str, "UTF-8"));
+        } catch (MalformedURLException | UnsupportedEncodingException e) {
             throw new IllegalArgumentException(e);
         }
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -287,7 +287,8 @@ public ManagedProcess launch() throws IOException, InterruptedException {
         Process process;
         try {
             ProcessBuilder builder = new ProcessBuilder(rawCommandLine).directory(runDirectory);
-            builder.environment().put("APPDATA", options.getGameDir().getAbsoluteFile().getParent());
+            String appdata = options.getGameDir().getAbsoluteFile().getParent();
+            if (appdata != null) builder.environment().put("APPDATA", appdata);
             process = builder.start();
         } catch (IOException e) {
             throw new ProcessCreationException(e);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/NetworkUtils.java
Patch:
@@ -178,7 +178,7 @@ public static String readData(HttpURLConnection con) throws IOException {
     public static String detectFileName(URL url) throws IOException {
         HttpURLConnection conn = resolveConnection(createConnection(url));
         int code = conn.getResponseCode();
-        if (code == 404)
+        if (code / 100 == 4)
             throw new FileNotFoundException();
         if (code / 100 != 2)
             throw new IOException(url + ": response code " + conn.getResponseCode());

File: HMCL/src/main/java/org/jackhuang/hmcl/game/ModpackHelper.java
Patch:
@@ -107,9 +107,6 @@ public static Task<Void> getInstallTask(Profile profile, File zipFile, String na
             if (ex instanceof CurseCompletionException && !(ex.getCause() instanceof FileNotFoundException)) {
                 success.run();
                 // This is tolerable and we will not delete the game
-            } else {
-                HMCLGameRepository repository = profile.getRepository();
-                repository.removeVersionFromDisk(name);
             }
         };
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackInstallTask.java
Patch:
@@ -142,7 +142,7 @@ public List<Task<?>> getDependents() {
     public void execute() throws Exception {
         Version version = repository.readVersionJson(name);
 
-        try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(zipFile.toPath())) {
+        try (FileSystem fs = CompressingUtils.readonly(zipFile.toPath()).setAutoDetectEncoding(true).build()) {
             Path root = MultiMCInstanceConfiguration.getRootPath(fs.getPath("/"));
             Path patches = root.resolve("patches");
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -303,7 +303,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
         }
 
         // LaunchWrapper 1.12 will crash because of assuming the system class loader is an instance of URLClassLoader.
-        if (!flag && java.getParsedVersion() >= JavaVersion.JAVA_9
+        if (!flag && java.getParsedVersion() >= JavaVersion.JAVA_9_AND_LATER
                 && version.getMainClass().contains("launchwrapper")
                 && version.getLibraries().stream()
                 .filter(library -> "launchwrapper".equals(library.getArtifactId()))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -206,7 +206,7 @@ public Map<String, Boolean> getFeatures() {
     }
 
     private final Map<String, Supplier<Boolean>> forbiddens = mapOf(
-            pair("-Xincgc", () -> options.getJava().getParsedVersion() >= JavaVersion.JAVA_9)
+            pair("-Xincgc", () -> options.getJava().getParsedVersion() >= JavaVersion.JAVA_9_AND_LATER)
     );
 
     protected Map<String, Supplier<Boolean>> getForbiddens() {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DownloadType.java
Patch:
@@ -24,5 +24,7 @@
 public enum DownloadType {
     CLIENT,
     SERVER,
-    WINDOWS_SERVER
+    WINDOWS_SERVER,
+    CLIENT_MAPPINGS,
+    SERVER_MAPPINGS
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeRemoteVersion.java
Patch:
@@ -31,7 +31,7 @@ public class ForgeRemoteVersion extends RemoteVersion {
      * @param selfVersion the version string of the remote version.
      * @param url         the installer or universal jar URL.
      */
-    public ForgeRemoteVersion(String gameVersion, String selfVersion, String url) {
+    public ForgeRemoteVersion(String gameVersion, String selfVersion, String... url) {
         super(LibraryAnalyzer.LibraryType.FORGE.getPatchId(), gameVersion, selfVersion, url);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteVersion.java
Patch:
@@ -38,7 +38,7 @@ public final class GameRemoteVersion extends RemoteVersion {
     private final Date time;
 
     public GameRemoteVersion(String gameVersion, String selfVersion, String url, ReleaseType type, Date time) {
-        super(LibraryAnalyzer.LibraryType.MINECRAFT.getPatchId(), gameVersion, selfVersion, url, getReleaseType(type));
+        super(LibraryAnalyzer.LibraryType.MINECRAFT.getPatchId(), gameVersion, selfVersion, getReleaseType(type), url);
         this.type = type;
         this.time = time;
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderInstallTask.java
Patch:
@@ -67,7 +67,7 @@ public void execute() {
         Library library = new Library(
                 new Artifact("com.mumfrey", "liteloader", remote.getSelfVersion()),
                 "http://dl.liteloader.com/versions/",
-                new LibrariesDownloadInfo(new LibraryDownloadInfo(null, remote.getUrl()))
+                new LibrariesDownloadInfo(new LibraryDownloadInfo(null, remote.getUrl()[0]))
         );
 
         setResult(new Version(LibraryAnalyzer.LibraryType.LITELOADER.getPatchId(),

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineBMCLVersionList.java
Patch:
@@ -72,7 +72,7 @@ public void execute() {
                         continue;
 
                     String gameVersion = VersionNumber.normalize(element.getGameVersion());
-                    versions.put(gameVersion, new OptiFineRemoteVersion(gameVersion, version, () -> mirror, isPre));
+                    versions.put(gameVersion, new OptiFineRemoteVersion(gameVersion, version, mirror, isPre));
                 }
             }
         };

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackExportTask.java
Patch:
@@ -74,7 +74,7 @@ public void execute() throws Exception {
                 return false;
             });
 
-            Version mv = repository.getResolvedVersion(version);
+            Version mv = repository.getResolvedPreservingPatchesVersion(version);
             String gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version))
                     .orElseThrow(() ->  new IOException("Cannot parse the version of " + version));
             zip.putTextFile(JsonUtils.GSON.toJson(mv.setJar(gameVersion)), "minecraft/pack.json"); // Making "jar" to gameVersion is to be compatible with old HMCL.

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/AdditionalInstallersPage.java
Patch:
@@ -113,16 +113,14 @@ public void onNavigate(Map<String, Object> settings) {
         String liteLoader = analyzer.getVersion(LITELOADER).orElse(null);
         String optiFine = analyzer.getVersion(OPTIFINE).orElse(null);
 
-        JFXButton[] buttons = new JFXButton[]{btnFabric, btnForge, btnLiteLoader, btnOptiFine};
         Label[] labels = new Label[]{lblFabric, lblForge, lblLiteLoader, lblOptiFine};
         String[] libraryIds = new String[]{"fabric", "forge", "liteloader", "optifine"};
         String[] versions = new String[]{fabric, forge, liteLoader, optiFine};
 
         for (int i = 0; i < libraryIds.length; ++i) {
             String libraryId = libraryIds[i];
-            buttons[i].setDisable(versions[i] != null);
             if (versions[i] != null || controller.getSettings().containsKey(libraryId))
-                labels[i].setText(i18n("install.installer.version", i18n("install.installer." + libraryId)) + ": " + Lang.nonNull(versions[i], getVersion(libraryId)));
+                labels[i].setText(i18n("install.installer.version", i18n("install.installer." + libraryId)) + ": " + Lang.nonNull(getVersion(libraryId), versions[i]));
             else
                 labels[i].setText(i18n("install.installer.not_installed", i18n("install.installer." + libraryId)));
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/UpdateInstallerWizardProvider.java
Patch:
@@ -58,8 +58,7 @@ public Object finish(Map<String, Object> settings) {
 
         // We remove library but not save it,
         // so if installation failed will not break down current version.
-        return profile.getDependency().removeLibraryWithoutSavingAsync(version.getId(), libraryId)
-                .thenComposeAsync(profile.getDependency().installLibraryAsync((RemoteVersion) settings.get(libraryId)))
+        return profile.getDependency().installLibraryAsync(version, (RemoteVersion) settings.get(libraryId))
                 .thenComposeAsync(profile.getRepository().refreshVersionsAsync());
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricRemoteVersion.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.download.fabric;
 
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
+import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
@@ -31,7 +32,7 @@ public class FabricRemoteVersion extends RemoteVersion {
      * @param url         the installer or universal jar URL.
      */
     FabricRemoteVersion(String gameVersion, String selfVersion, String url) {
-        super(gameVersion, selfVersion, url);
+        super(LibraryAnalyzer.LibraryType.FABRIC.getPatchId(), gameVersion, selfVersion, url);
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeRemoteVersion.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.download.forge;
 
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
+import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
@@ -31,7 +32,7 @@ public class ForgeRemoteVersion extends RemoteVersion {
      * @param url         the installer or universal jar URL.
      */
     public ForgeRemoteVersion(String gameVersion, String selfVersion, String url) {
-        super(gameVersion, selfVersion, url);
+        super(LibraryAnalyzer.LibraryType.FORGE.getPatchId(), gameVersion, selfVersion, url);
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteVersion.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.download.game;
 
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
+import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.ReleaseType;
 import org.jackhuang.hmcl.game.Version;
@@ -37,7 +38,7 @@ public final class GameRemoteVersion extends RemoteVersion {
     private final Date time;
 
     public GameRemoteVersion(String gameVersion, String selfVersion, String url, ReleaseType type, Date time) {
-        super(gameVersion, selfVersion, url, getReleaseType(type));
+        super(LibraryAnalyzer.LibraryType.MINECRAFT.getPatchId(), gameVersion, selfVersion, url, getReleaseType(type));
         this.type = type;
         this.time = time;
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderRemoteVersion.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.download.liteloader;
 
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
+import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.Library;
 import org.jackhuang.hmcl.game.Version;
@@ -36,7 +37,7 @@ public class LiteLoaderRemoteVersion extends RemoteVersion {
      * @param url         the installer or universal jar URL.
      */
     LiteLoaderRemoteVersion(String gameVersion, String selfVersion, String url, String tweakClass, Collection<Library> libraries) {
-        super(gameVersion, selfVersion, url);
+        super(LibraryAnalyzer.LibraryType.LITELOADER.getPatchId(), gameVersion, selfVersion, url);
 
         this.tweakClass = tweakClass;
         this.libraries = libraries;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineRemoteVersion.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.download.optifine;
 
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
+import org.jackhuang.hmcl.download.LibraryAnalyzer;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.Task;
@@ -28,7 +29,7 @@ public class OptiFineRemoteVersion extends RemoteVersion {
     private final Supplier<String> url;
 
     public OptiFineRemoteVersion(String gameVersion, String selfVersion, Supplier<String> url, boolean snapshot) {
-        super(gameVersion, selfVersion, "", snapshot ? Type.SNAPSHOT : Type.RELEASE);
+        super(LibraryAnalyzer.LibraryType.OPTIFINE.getPatchId(), gameVersion, selfVersion, "", snapshot ? Type.SNAPSHOT : Type.RELEASE);
 
         this.url = url;
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/NetworkUtils.java
Patch:
@@ -40,6 +40,8 @@ public static String withQuery(String baseUrl, Map<String, String> params) {
             StringBuilder sb = new StringBuilder(baseUrl);
             boolean first = true;
             for (Entry<String, String> param : params.entrySet()) {
+                if (param.getValue() == null)
+                    continue;
                 if (first) {
                     sb.append('?');
                     first = false;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackExportTask.java
Patch:
@@ -25,6 +25,7 @@
 import org.jackhuang.hmcl.util.io.Zipper;
 
 import java.io.File;
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -75,7 +76,7 @@ public void execute() throws Exception {
 
             Version mv = repository.getResolvedVersion(version);
             String gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version))
-                    .orElseThrow(() ->  new IllegalStateException("Cannot parse the version of " + version));
+                    .orElseThrow(() ->  new IOException("Cannot parse the version of " + version));
             zip.putTextFile(JsonUtils.GSON.toJson(mv.setJar(gameVersion)), "minecraft/pack.json"); // Making "jar" to gameVersion is to be compatible with old HMCL.
             zip.putTextFile(JsonUtils.GSON.toJson(modpack.setGameVersion(gameVersion)), "modpack.json"); // Newer HMCL only reads 'gameVersion' field.
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/ModpackHelper.java
Patch:
@@ -123,7 +123,7 @@ else if (modpack.getManifest() instanceof MultiMCInstanceConfiguration)
             return new MultiMCModpackInstallTask(profile.getDependency(), zipFile, modpack, ((MultiMCInstanceConfiguration) modpack.getManifest()), name)
                     .whenComplete(Schedulers.defaultScheduler(), success, failure)
                     .thenComposeAsync(new MultiMCInstallVersionSettingTask(profile, ((MultiMCInstanceConfiguration) modpack.getManifest()), name));
-        else throw new IllegalStateException("Unrecognized modpack: " + modpack);
+        else throw new IllegalArgumentException("Unrecognized modpack: " + modpack);
     }
 
     public static Task<Void> getUpdateTask(Profile profile, File zipFile, Charset charset, String name, ModpackConfiguration<?> configuration) throws UnsupportedModpackException, MismatchedModpackTypeException {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/fabric/FabricInstallTask.java
Patch:
@@ -65,7 +65,7 @@ public boolean doPreExecute() {
     }
 
     @Override
-    public void preExecute() {
+    public void preExecute() throws Exception {
         if (!Objects.equals("net.minecraft.client.main.Main", version.resolve(dependencyManager.getGameRepository()).getMainClass()))
             throw new UnsupportedFabricInstallationException();
     }
@@ -128,6 +128,6 @@ private Version getPatch(JsonObject jsonObject, String gameVersion, String loade
         return new Version("net.fabricmc", loaderVersion, 30000, arguments, mainClass, libraries);
     }
 
-    public static class UnsupportedFabricInstallationException extends UnsupportedOperationException {
+    public static class UnsupportedFabricInstallationException extends Exception {
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeNewInstallTask.java
Patch:
@@ -38,6 +38,7 @@
 import org.jackhuang.hmcl.util.platform.SystemUtils;
 
 import java.io.FileNotFoundException;
+import java.io.IOException;
 import java.io.InputStream;
 import java.nio.file.FileSystem;
 import java.nio.file.Files;
@@ -233,7 +234,7 @@ public void execute() throws Exception {
                 List<String> args = processor.getArgs().stream().map(arg -> {
                     String parsed = parseLiteral(arg, data, ExceptionalFunction.identity());
                     if (parsed == null)
-                        throw new IllegalStateException("Invalid forge installation configuration");
+                        throw new IOException("Invalid forge installation configuration");
                     return parsed;
                 }).collect(Collectors.toList());
 
@@ -242,7 +243,7 @@ public void execute() throws Exception {
                 LOG.info("Executing external processor " + processor.getJar().toString() + ", command line: " + new CommandBuilder().addAll(command).toString());
                 int exitCode = SystemUtils.callExternalProcess(command);
                 if (exitCode != 0)
-                    throw new IllegalStateException("Game processor exited abnormally");
+                    throw new IOException("Game processor exited abnormally");
 
                 for (Map.Entry<String, String> entry : outputs.entrySet()) {
                     Path artifact = Paths.get(entry.getKey());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/VersionJsonDownloadTask.java
Patch:
@@ -24,6 +24,7 @@
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 
+import java.io.IOException;
 import java.util.Collection;
 import java.util.LinkedList;
 import java.util.List;
@@ -61,9 +62,9 @@ public Collection<Task<?>> getDependents() {
     }
 
     @Override
-    public void execute() {
+    public void execute() throws IOException {
         RemoteVersion remoteVersion = gameVersionList.getVersion(gameVersion, gameVersion)
-                .orElseThrow(() -> new IllegalStateException("Cannot find specific version " + gameVersion + " in remote repository"));
+                .orElseThrow(() -> new IOException("Cannot find specific version " + gameVersion + " in remote repository"));
         String jsonURL = dependencyManager.getDownloadProvider().injectURL(remoteVersion.getUrl());
         dependencies.add(new GetTask(NetworkUtils.toURL(jsonURL)).storeTo(this::setResult));
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineInstallTask.java
Patch:
@@ -149,7 +149,7 @@ public void execute() throws Exception {
                         gameRepository.getLibraryFile(version, optiFineLibrary).toString()
                 );
                 if (exitCode != 0)
-                    throw new IllegalStateException("OptiFine patcher failed");
+                    throw new IOException("OptiFine patcher failed");
             } else {
                 FileUtils.copyFile(dest, gameRepository.getLibraryFile(version, optiFineLibrary).toPath());
             }
@@ -188,7 +188,7 @@ public void execute() throws Exception {
         dependencies.add(dependencyManager.checkLibraryCompletionAsync(getResult()));
     }
 
-    public static class UnsupportedOptiFineInstallationException extends UnsupportedOperationException {
+    public static class UnsupportedOptiFineInstallationException extends Exception {
     }
 
     /**

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventBus.java
Patch:
@@ -20,19 +20,19 @@
 import org.jackhuang.hmcl.util.Logging;
 
 import java.util.HashMap;
+import java.util.concurrent.ConcurrentHashMap;
 
 /**
  *
  * @author huangyuhui
  */
 public final class EventBus {
 
-    private final HashMap<Class<?>, EventManager<?>> events = new HashMap<>();
+    private final ConcurrentHashMap<Class<?>, EventManager<?>> events = new ConcurrentHashMap<>();
 
     @SuppressWarnings("unchecked")
     public <T extends Event> EventManager<T> channel(Class<T> clazz) {
-        if (!events.containsKey(clazz))
-            events.put(clazz, new EventManager<>());
+        events.putIfAbsent(clazz, new EventManager<>());
         return (EventManager<T>) events.get(clazz);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventManager.java
Patch:
@@ -22,6 +22,7 @@
 import java.lang.ref.WeakReference;
 import java.util.EnumMap;
 import java.util.HashSet;
+import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.function.Consumer;
 
 /**
@@ -31,7 +32,7 @@
 public final class EventManager<T extends Event> {
 
     private final SimpleMultimap<EventPriority, Consumer<T>> handlers
-            = new SimpleMultimap<>(() -> new EnumMap<>(EventPriority.class), HashSet::new);
+            = new SimpleMultimap<>(() -> new EnumMap<>(EventPriority.class), CopyOnWriteArraySet::new);
 
     public Consumer<T> registerWeak(Consumer<T> consumer) {
         register(new WeakListener(consumer));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/AssetObject.java
Patch:
@@ -54,6 +54,6 @@ public String getLocation() {
     @Override
     public void validate() throws JsonParseException {
         if (StringUtils.isBlank(hash) || hash.length() < 2)
-            throw new IllegalStateException("AssetObject hash cannot be blank.");
+            throw new JsonParseException("AssetObject hash cannot be blank.");
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackExportTask.java
Patch:
@@ -27,6 +27,7 @@
 import org.jackhuang.hmcl.util.io.Zipper;
 
 import java.io.File;
+import java.io.IOException;
 import java.io.StringWriter;
 import java.util.ArrayList;
 import java.util.List;
@@ -80,7 +81,7 @@ public void execute() throws Exception {
 
             LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(versionId));
             String gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(versionId))
-                    .orElseThrow(() ->  new IllegalStateException("Cannot parse the version of " + versionId));
+                    .orElseThrow(() -> new IOException("Cannot parse the version of " + versionId));
             List<MultiMCManifest.MultiMCManifestComponent> components = new ArrayList<>();
             components.add(new MultiMCManifest.MultiMCManifestComponent(true, false, "net.minecraft", gameVersion));
             analyzer.getVersion(FORGE).ifPresent(forgeVersion ->

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -292,7 +292,7 @@ public void execute() throws Exception {
                 }
 
                 if (downloaded != contentLength)
-                    throw new IllegalStateException("Unexpected file size: " + downloaded + ", expected: " + contentLength);
+                    throw new IOException("Unexpected file size: " + downloaded + ", expected: " + contentLength);
 
                 // Integrity check
                 if (integrityCheck != null) {
@@ -312,7 +312,7 @@ public void execute() throws Exception {
                 }
 
                 return;
-            } catch (IOException | IllegalStateException e) {
+            } catch (IOException e) {
                 if (temp != null)
                     temp.toFile().delete();
                 exception = e;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/TaskExecutor.java
Patch:
@@ -64,7 +64,7 @@ public TaskExecutor start() {
                         Logging.LOG.log(Level.WARNING, "An exception occurred in task execution", exception);
 
                         Throwable resolvedException = resolveException(exception);
-                        if (resolvedException instanceof RuntimeException) {
+                        if (resolvedException instanceof RuntimeException && !(resolvedException instanceof CancellationException)) {
                             // Track uncaught RuntimeException which are thrown mostly by our mistake
                             if (uncaughtExceptionHandler != null)
                                 uncaughtExceptionHandler.uncaughtException(Thread.currentThread(), resolvedException);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -142,6 +142,7 @@ public void setParentTab(JFXTabPane parentTab) {
     public void removeSelected(ObservableList<TreeItem<ModListPageSkin.ModInfoObject>> selectedItems) {
         try {
             modManager.removeMods(selectedItems.stream()
+                    .filter(Objects::nonNull)
                     .map(TreeItem::getValue)
                     .filter(Objects::nonNull)
                     .map(ModListPageSkin.ModInfoObject::getModInfo)

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -39,6 +39,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.Type;
+import java.nio.file.InvalidPathException;
 import java.nio.file.Paths;
 import java.util.List;
 import java.util.Optional;
@@ -482,7 +483,7 @@ public JavaVersion getJavaVersion() throws InterruptedException {
         else if (isUsesCustomJavaDir()) {
             try {
                 return JavaVersion.fromExecutable(Paths.get(getJavaDir()));
-            } catch (IOException e) {
+            } catch (IOException | InvalidPathException e) {
                 return null; // Custom Java Directory not found,
             }
         } else if (StringUtils.isNotBlank(getJava())) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultDependencyManager.java
Patch:
@@ -84,7 +84,7 @@ public Task<?> checkGameCompletionAsync(Version original) {
 
     @Override
     public Task<?> checkLibraryCompletionAsync(Version version) {
-        return new GameLibrariesTask(this, version);
+        return new GameLibrariesTask(this, version, version.getLibraries());
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderInstallTask.java
Patch:
@@ -79,7 +79,7 @@ public void execute() {
                 .setLogging(Collections.emptyMap()) // Mods may log in malformed format, causing XML parser to crash. So we suppress using official log4j configuration
         );
 
-        dependencies.add(dependencyManager.checkLibraryCompletionAsync(version.setLibraries(getResult().getLibraries())));
+        dependencies.add(dependencyManager.checkLibraryCompletionAsync(getResult()));
     }
 
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineInstallTask.java
Patch:
@@ -185,7 +185,7 @@ public void execute() throws Exception {
                 libraries
         ));
 
-        dependencies.add(dependencyManager.checkLibraryCompletionAsync(version.setLibraries(libraries)));
+        dependencies.add(dependencyManager.checkLibraryCompletionAsync(getResult()));
     }
 
     public static class UnsupportedOptiFineInstallationException extends UnsupportedOperationException {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/UpdateInstallerWizardProvider.java
Patch:
@@ -25,6 +25,7 @@
 import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.wizard.WizardController;
 import org.jackhuang.hmcl.ui.wizard.WizardProvider;
+import org.jetbrains.annotations.NotNull;
 
 import java.util.Map;
 
@@ -38,7 +39,7 @@ public final class UpdateInstallerWizardProvider implements WizardProvider {
     private final String libraryId;
     private final String oldLibraryVersion;
 
-    public UpdateInstallerWizardProvider(Profile profile, String gameVersion, Version version, String libraryId, String oldLibraryVersion) {
+    public UpdateInstallerWizardProvider(@NotNull Profile profile, @NotNull String gameVersion, @NotNull Version version, @NotNull String libraryId, @NotNull String oldLibraryVersion) {
         this.profile = profile;
         this.gameVersion = gameVersion;
         this.version = version;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -26,7 +26,6 @@
 import org.jackhuang.hmcl.auth.CredentialExpiredException;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.MaintainTask;
-import org.jackhuang.hmcl.download.game.LibrariesUniqueTask;
 import org.jackhuang.hmcl.download.game.LibraryDownloadException;
 import org.jackhuang.hmcl.launch.NotDecompressingNativesException;
 import org.jackhuang.hmcl.launch.PermissionException;
@@ -132,7 +131,7 @@ public void makeLaunchScript(File scriptFile) {
     private void launch0() {
         HMCLGameRepository repository = profile.getRepository();
         DefaultDependencyManager dependencyManager = profile.getDependency();
-        Version version = MaintainTask.maintain(LibrariesUniqueTask.unique(repository.getResolvedVersion(selectedVersion)));
+        Version version = MaintainTask.maintain(repository, repository.getResolvedVersion(selectedVersion));
         Optional<String> gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version));
 
         TaskExecutor executor = Task.runAsync(Schedulers.javafx(), () -> emitStatus(LoadingState.DEPENDENCIES))

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/AdditionalInstallersPage.java
Patch:
@@ -107,7 +107,7 @@ private String getVersion(String id) {
     public void onNavigate(Map<String, Object> settings) {
         lblGameVersion.setText(i18n("install.new_game.current_game_version") + ": " + provider.getGameVersion());
 
-        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(provider.getVersion().resolve(provider.getProfile().getRepository()));
+        LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(provider.getVersion().resolvePreservingPatches(provider.getProfile().getRepository()));
         String fabric = analyzer.getVersion(FABRIC).orElse(null);
         String forge = analyzer.getVersion(FORGE).orElse(null);
         String liteLoader = analyzer.getVersion(LITELOADER).orElse(null);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -79,7 +79,7 @@ public void refresh() {
     }
 
     public void loadVersion(Profile profile, String id) {
-        libraryAnalyzer = LibraryAnalyzer.analyze(profile.getRepository().getResolvedVersion(id));
+        libraryAnalyzer = LibraryAnalyzer.analyze(profile.getRepository().getResolvedPreservingPatchesVersion(id));
         modded.set(libraryAnalyzer.hasModLoader());
         loadMods(profile.getRepository().getModManager(id));
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/LibrariesDownloadInfo.java
Patch:
@@ -34,7 +34,7 @@ public final class LibrariesDownloadInfo {
     private final Map<String, LibraryDownloadInfo> classifiers;
 
     public LibrariesDownloadInfo(LibraryDownloadInfo artifact) {
-        this(artifact, Collections.emptyMap());
+        this(artifact, null);
     }
 
     public LibrariesDownloadInfo(LibraryDownloadInfo artifact, Map<String, LibraryDownloadInfo> classifiers) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/multimc/MultiMCModpackExportTask.java
Patch:
@@ -78,7 +78,7 @@ public void execute() throws Exception {
                 return false;
             });
 
-            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedVersion(versionId));
+            LibraryAnalyzer analyzer = LibraryAnalyzer.analyze(repository.getResolvedPreservingPatchesVersion(versionId));
             String gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(versionId))
                     .orElseThrow(() ->  new IllegalStateException("Cannot parse the version of " + versionId));
             List<MultiMCManifest.MultiMCManifestComponent> components = new ArrayList<>();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -190,6 +190,7 @@ protected void setResult(T result) {
      */
     public Task<T> storeTo(Consumer<T> action) {
         this.resultConsumer = action;
+        action.accept(getResult());
         return this;
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/javafx/ExtendedProperties.java
Patch:
@@ -129,7 +129,7 @@ private static <T> ObjectProperty<T> createMappedPropertyForToggleGroup(ToggleGr
     public static ObjectProperty<Boolean> reservedSelectedPropertyFor(CheckBox checkbox) {
         return (ObjectProperty<Boolean>) checkbox.getProperties().computeIfAbsent(
                 PROP_PREFIX + ".checkbox.reservedSelected",
-                any -> new MappedProperty<>(checkbox, "ext.reservedSelected",
+                any -> new MappedProperty<Boolean, Boolean>(checkbox, "ext.reservedSelected",
                         checkbox.selectedProperty(), it -> !it, it -> !it));
     }
     // ====

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/CacheRepository.java
Patch:
@@ -263,7 +263,7 @@ public void saveETagIndex() throws IOException {
         try (RandomAccessFile file = new RandomAccessFile(indexFile.toFile(), "rw"); FileChannel channel = file.getChannel()) {
             FileLock lock = channel.lock();
             try {
-                ETagIndex indexOnDisk = JsonUtils.GSON.fromJson(new String(IOUtils.readFullyWithoutClosing(Channels.newInputStream(channel)), UTF_8), ETagIndex.class);
+                ETagIndex indexOnDisk = JsonUtils.fromMaybeMalformedJson(new String(IOUtils.readFullyWithoutClosing(Channels.newInputStream(channel)), UTF_8), ETagIndex.class);
                 Map<String, ETagItem> newIndex = joinETagIndexes(indexOnDisk == null ? null : indexOnDisk.eTag, index.values());
                 channel.truncate(0);
                 OutputStream os = Channels.newOutputStream(channel);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseManifestFile.java
Patch:
@@ -83,7 +83,7 @@ public void validate() throws JsonParseException {
     }
 
     public URL getUrl() {
-        return url == null ? NetworkUtils.toURL("https://minecraft.curseforge.com/projects/" + projectID + "/files/" + fileID + "/download")
+        return url == null ? NetworkUtils.toURL("https://www.curseforge.com/minecraft/mc-mods/" + projectID + "/download/" + fileID + "/file")
                 : NetworkUtils.toURL(url);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseManifestFile.java
Patch:
@@ -83,7 +83,7 @@ public void validate() throws JsonParseException {
     }
 
     public URL getUrl() {
-        return url == null ? NetworkUtils.toURL("https://minecraft.curseforge.com/projects/" + projectID + "/files/" + fileID + "/download")
+        return url == null ? NetworkUtils.toURL("https://www.curseforge.com/minecraft/mc-mods/" + projectID + "/download/" + fileID + "/file")
                 : NetworkUtils.toURL(url);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackExportTask.java
Patch:
@@ -30,7 +30,7 @@
 /**
  * Export the game to a mod pack file.
  */
-public class HMCLModpackExportTask extends Task {
+public class HMCLModpackExportTask extends Task<Void> {
     private final DefaultGameRepository repository;
     private final String version;
     private final List<String> whitelist;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/ModpackHelper.java
Patch:
@@ -86,7 +86,7 @@ else if (manifest instanceof CurseManifest)
             throw new UnsupportedModpackException();
     }
 
-    public static Task getInstallTask(Profile profile, File zipFile, String name, Modpack modpack) {
+    public static Task<Void> getInstallTask(Profile profile, File zipFile, String name, Modpack modpack) {
         profile.getRepository().markVersionAsModpack(name);
 
         ExceptionalRunnable<?> success = () -> {
@@ -117,11 +117,11 @@ else if (modpack.getManifest() instanceof HMCLModpackManifest)
         else if (modpack.getManifest() instanceof MultiMCInstanceConfiguration)
             return new MultiMCModpackInstallTask(profile.getDependency(), zipFile, modpack, ((MultiMCInstanceConfiguration) modpack.getManifest()), name)
                     .whenComplete(Schedulers.defaultScheduler(), success, failure)
-                    .then(new MultiMCInstallVersionSettingTask(profile, ((MultiMCInstanceConfiguration) modpack.getManifest()), name));
+                    .thenCompose(new MultiMCInstallVersionSettingTask(profile, ((MultiMCInstanceConfiguration) modpack.getManifest()), name));
         else throw new IllegalStateException("Unrecognized modpack: " + modpack);
     }
 
-    public static Task getUpdateTask(Profile profile, File zipFile, Charset charset, String name, ModpackConfiguration<?> configuration) throws UnsupportedModpackException, MismatchedModpackTypeException {
+    public static Task<Void> getUpdateTask(Profile profile, File zipFile, Charset charset, String name, ModpackConfiguration<?> configuration) throws UnsupportedModpackException, MismatchedModpackTypeException {
         Modpack modpack = ModpackHelper.readModpackManifest(zipFile.toPath(), charset);
 
         switch (configuration.getType()) {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -197,7 +197,7 @@ static void init() {
 
         Account selected = selectedAccount.get();
         if (selected != null) {
-            Schedulers.io().schedule(() -> {
+            Schedulers.io().execute(() -> {
                 try {
                     selected.logIn();
                 } catch (AuthenticationException e) {
@@ -209,7 +209,7 @@ static void init() {
         for (AuthlibInjectorServer server : config().getAuthlibInjectorServers()) {
             if (selected instanceof AuthlibInjectorAccount && ((AuthlibInjectorAccount) selected).getServer() == server)
                 continue;
-            Schedulers.io().schedule(() -> {
+            Schedulers.io().execute(() -> {
                 try {
                     server.fetchMetadataResponse();
                 } catch (IOException e) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -208,7 +208,7 @@ public static void initialize(Stage stage) {
             dialog(i18n("launcher.cache_directory.invalid"));
         }
 
-        Task.of(JavaVersion::initialize).start();
+        Task.runAsync(JavaVersion::initialize).start();
 
         scene = new Scene(decorator.getDecorator(), 800, 519);
         scene.getStylesheets().setAll(config().getTheme().getStylesheets());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -397,7 +397,7 @@ public static void unbindBoolean(JFXCheckBox checkBox, Property<Boolean> propert
      */
     @SuppressWarnings("unchecked")
     @Deprecated
-    public static void bindEnum(JFXComboBox<?> comboBox, Property<? extends Enum> property) {
+    public static void bindEnum(JFXComboBox<?> comboBox, Property<? extends Enum<?>> property) {
         unbindEnum(comboBox);
         ChangeListener<Number> listener = (a, b, newValue) ->
                 ((Property) property).setValue(property.getValue().getClass().getEnumConstants()[newValue.intValue()]);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LeftPaneController.java
Patch:
@@ -118,10 +118,10 @@ private void onRefreshedVersions(HMCLGameRepository repository) {
                 if (repository.getVersionCount() == 0) {
                     File modpackFile = new File("modpack.zip").getAbsoluteFile();
                     if (modpackFile.exists()) {
-                        Task.ofResult(() -> CompressingUtils.findSuitableEncoding(modpackFile.toPath()))
+                        Task.supplyAsync(() -> CompressingUtils.findSuitableEncoding(modpackFile.toPath()))
                                 .thenApply(encoding -> ModpackHelper.readModpackManifest(modpackFile.toPath(), encoding))
                                 .thenApply(modpack -> ModpackHelper.getInstallTask(repository.getProfile(), modpackFile, modpack.getName(), modpack)
-                                            .with(Task.of(Schedulers.javafx(), this::checkAccount)).executor())
+                                            .withRun(Schedulers.javafx(), this::checkAccount).executor())
                                 .thenAccept(Schedulers.javafx(), executor -> {
                                     Controllers.taskDialog(executor, i18n("modpack.installing"));
                                     executor.start();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -33,7 +33,6 @@
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.StackPane;
 import javafx.scene.layout.VBox;
-import javafx.scene.paint.Color;
 import javafx.scene.shape.Rectangle;
 import javafx.util.Duration;
 import org.jackhuang.hmcl.setting.Profile;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountLoginPane.java
Patch:
@@ -61,7 +61,7 @@ private void onAccept() {
         String password = txtPassword.getText();
         progressBar.setVisible(true);
         lblCreationWarning.setText("");
-        Task.ofResult(() -> oldAccount.logInWithPassword(password))
+        Task.supplyAsync(() -> oldAccount.logInWithPassword(password))
                 .whenComplete(Schedulers.javafx(), authInfo -> {
                     success.accept(authInfo);
                     fireEvent(new DialogCloseEvent());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAccountPane.java
Patch:
@@ -197,7 +197,7 @@ private void onCreationAccept() {
         AccountFactory<?> factory = cboType.getSelectionModel().getSelectedItem();
         Object additionalData = getAuthAdditionalData();
 
-        Task.ofResult(() -> factory.create(new Selector(), username, password, additionalData))
+        Task.supplyAsync(() -> factory.create(new Selector(), username, password, additionalData))
                 .whenComplete(Schedulers.javafx(), account -> {
                     int oldIndex = Accounts.getAccounts().indexOf(account);
                     if (oldIndex == -1) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAuthlibInjectorServerPane.java
Patch:
@@ -104,13 +104,13 @@ private void onAddNext() {
         nextPane.showSpinner();
         addServerPane.setDisable(true);
 
-        Task.of(() -> {
+        Task.runAsync(() -> {
             serverBeingAdded = AuthlibInjectorServer.locateServer(url);
-        }).whenComplete(Schedulers.javafx(), (isDependentSucceeded, exception) -> {
+        }).whenComplete(Schedulers.javafx(), exception -> {
             addServerPane.setDisable(false);
             nextPane.hideSpinner();
 
-            if (isDependentSucceeded) {
+            if (exception == null) {
                 lblServerName.setText(serverBeingAdded.getName());
                 lblServerUrl.setText(serverBeingAdded.getUrl());
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/IconedItem.java
Patch:
@@ -17,7 +17,6 @@
  */
 package org.jackhuang.hmcl.ui.construct;
 
-import javafx.geometry.Pos;
 import javafx.scene.Node;
 import javafx.scene.control.Label;
 import javafx.scene.layout.HBox;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorSkin.java
Patch:
@@ -21,7 +21,6 @@
 import com.jfoenix.svg.SVGGlyph;
 import javafx.beans.binding.Bindings;
 import javafx.collections.ListChangeListener;
-import javafx.geometry.BoundingBox;
 import javafx.geometry.Bounds;
 import javafx.geometry.Insets;
 import javafx.geometry.Pos;
@@ -56,7 +55,6 @@ public class DecoratorSkin extends SkinBase<Decorator> {
 
     private double xOffset, yOffset, newX, newY, initX, initY;
     private boolean allowMove, isDragging;
-    private BoundingBox originalBox, maximizedBox;
 
     /**
      * Constructor for all SkinBase instances.

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallerWizardProvider.java
Patch:
@@ -29,7 +29,6 @@
 import org.jackhuang.hmcl.setting.Profile;
 import org.jackhuang.hmcl.task.DownloadException;
 import org.jackhuang.hmcl.task.Task;
-import org.jackhuang.hmcl.task.TaskResult;
 import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.construct.MessageDialogPane.MessageType;
 import org.jackhuang.hmcl.ui.wizard.WizardController;
@@ -96,7 +95,7 @@ public Object finish(Map<String, Object> settings) {
         settings.put("success_message", i18n("install.success"));
         settings.put("failure_callback", (FailureCallback) (settings1, exception, next) -> alertFailureMessage(exception, next));
 
-        TaskResult<Version> ret = Task.ofResult(() -> version);
+        Task<Version> ret = Task.supplyAsync(() -> version);
 
         if (settings.containsKey("forge"))
             ret = ret.thenCompose(profile.getDependency().installLibraryAsync((RemoteVersion) settings.get("forge")));
@@ -107,7 +106,7 @@ public Object finish(Map<String, Object> settings) {
         if (settings.containsKey("optifine"))
             ret = ret.thenCompose(profile.getDependency().installLibraryAsync((RemoteVersion) settings.get("optifine")));
 
-        return ret.then(profile.getRepository().refreshVersionsAsync());
+        return ret.thenCompose(profile.getRepository().refreshVersionsAsync());
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackInstallWizardProvider.java
Patch:
@@ -71,7 +71,7 @@ public void start(Map<String, Object> settings) {
         settings.put(PROFILE, profile);
     }
 
-    private Task finishModpackInstallingAsync(Map<String, Object> settings) {
+    private Task<Void> finishModpackInstallingAsync(Map<String, Object> settings) {
         if (!settings.containsKey(ModpackPage.MODPACK_FILE))
             return null;
 
@@ -93,7 +93,7 @@ private Task finishModpackInstallingAsync(Map<String, Object> settings) {
             return null;
         } else {
             return ModpackHelper.getInstallTask(profile, selected, name, modpack)
-                    .then(Task.of(Schedulers.javafx(), () -> profile.setSelectedVersion(name)));
+                    .thenRun(Schedulers.javafx(), () -> profile.setSelectedVersion(name));
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackPage.java
Patch:
@@ -109,7 +109,7 @@ public ModpackPage(WizardController controller) {
         }
 
         spinnerPane.showSpinner();
-        Task.ofResult(() -> CompressingUtils.findSuitableEncoding(selectedFile.toPath()))
+        Task.supplyAsync(() -> CompressingUtils.findSuitableEncoding(selectedFile.toPath()))
                 .thenApply(encoding -> manifest = ModpackHelper.readModpackManifest(selectedFile.toPath(), encoding))
                 .whenComplete(Schedulers.javafx(), manifest -> {
                     spinnerPane.hideSpinner();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VanillaInstallWizardProvider.java
Patch:
@@ -43,7 +43,7 @@ public void start(Map<String, Object> settings) {
         settings.put(PROFILE, profile);
     }
 
-    private Task finishVersionDownloadingAsync(Map<String, Object> settings) {
+    private Task<Void> finishVersionDownloadingAsync(Map<String, Object> settings) {
         GameBuilder builder = profile.getDependency().gameBuilder();
 
         String name = (String) settings.get("name");
@@ -59,8 +59,8 @@ private Task finishVersionDownloadingAsync(Map<String, Object> settings) {
         if (settings.containsKey("optifine"))
             builder.version((RemoteVersion) settings.get("optifine"));
 
-        return builder.buildAsync().whenComplete((a, b) -> profile.getRepository().refreshVersions())
-                .then(Task.of(Schedulers.javafx(), () -> profile.setSelectedVersion(name)));
+        return builder.buildAsync().whenComplete(any -> profile.getRepository().refreshVersions())
+                .thenRun(Schedulers.javafx(), () -> profile.setSelectedVersion(name));
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -128,8 +128,8 @@ private List<VersionsPageItem> loadVersions() {
     @Override
     public void refresh() {
         transitionHandler.setContent(spinner, ContainerAnimations.FADE.getAnimationProducer());
-        executor = versionList.refreshAsync(gameVersion, downloadProvider).whenComplete((isDependentSucceeded, exception) -> {
-            if (isDependentSucceeded) {
+        executor = versionList.refreshAsync(gameVersion, downloadProvider).whenComplete(exception -> {
+            if (exception == null) {
                 List<VersionsPageItem> items = loadVersions();
 
                 Platform.runLater(() -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfilePage.java
Patch:
@@ -26,19 +26,16 @@
 import javafx.beans.property.SimpleStringProperty;
 import javafx.beans.property.StringProperty;
 import javafx.fxml.FXML;
-import javafx.scene.Node;
 import javafx.scene.layout.StackPane;
 import org.jackhuang.hmcl.setting.Profile;
 import org.jackhuang.hmcl.setting.Profiles;
-import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.construct.FileItem;
 import org.jackhuang.hmcl.ui.construct.PageCloseEvent;
 import org.jackhuang.hmcl.ui.decorator.DecoratorPage;
 import org.jackhuang.hmcl.util.StringUtils;
 
 import java.io.File;
-import java.nio.file.Paths;
 import java.util.Optional;
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -80,9 +80,9 @@ public void loadVersion(Profile profile, String versionId) {
                 LinkedList<Library> newList = new LinkedList<>(version.getLibraries());
                 newList.remove(library);
                 new MaintainTask(version.setLibraries(newList))
-                        .then(maintainedVersion -> new VersionJsonSaveTask(profile.getRepository(), maintainedVersion))
-                        .with(profile.getRepository().refreshVersionsAsync())
-                        .with(Task.of(Schedulers.javafx(), () -> loadVersion(this.profile, this.versionId)))
+                        .thenCompose(maintainedVersion -> new VersionJsonSaveTask(profile.getRepository(), maintainedVersion))
+                        .withCompose(profile.getRepository().refreshVersionsAsync())
+                        .withRun(Schedulers.javafx(), () -> loadVersion(this.profile, this.versionId))
                         .start();
             };
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -115,7 +115,7 @@ private void initialize() {
 
         FXUtils.smoothScrolling(scroll);
 
-        Task.ofResult(JavaVersion::getJavas).thenAccept(Schedulers.javafx(), list -> {
+        Task.supplyAsync(JavaVersion::getJavas).thenAccept(Schedulers.javafx(), list -> {
             javaItem.loadChildren(list.stream()
                     .map(javaVersion -> javaItem.createChildren(javaVersion.getVersion() + i18n("settings.game.java_directory.bit",
                             javaVersion.getPlatform().getBit()), javaVersion.getBinary().toString(), javaVersion))
@@ -270,7 +270,7 @@ private void initJavaSubtitle() {
         VersionSetting versionSetting = lastVersionSetting;
         if (versionSetting == null)
             return;
-        Task.ofResult(versionSetting::getJavaVersion)
+        Task.supplyAsync(versionSetting::getJavaVersion)
                 .thenAccept(Schedulers.javafx(), javaVersion -> javaItem.setSubtitle(Optional.ofNullable(javaVersion)
                         .map(JavaVersion::getBinary).map(Path::toString).orElse("Invalid Java Path")))
                 .start();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/Versions.java
Patch:
@@ -19,7 +19,6 @@
 
 import javafx.stage.FileChooser;
 import org.jackhuang.hmcl.download.game.GameAssetDownloadTask;
-import org.jackhuang.hmcl.download.game.GameAssetIndexDownloadTask;
 import org.jackhuang.hmcl.game.GameRepository;
 import org.jackhuang.hmcl.game.LauncherHelper;
 import org.jackhuang.hmcl.game.Version;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldExportPage.java
Patch:
@@ -74,6 +74,6 @@ public String getTitle() {
 
     @Override
     protected Object finish() {
-        return Task.of(i18n("world.export.wizard", worldName.get()), () -> world.export(Paths.get(path.get()), worldName.get()));
+        return Task.runAsync(i18n("world.export.wizard", worldName.get()), () -> world.export(Paths.get(path.get()), worldName.get()));
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/AbstractWizardDisplayer.java
Patch:
@@ -32,8 +32,8 @@ public interface AbstractWizardDisplayer extends WizardDisplayer {
     Queue<Object> getCancelQueue();
 
     @Override
-    default void handleTask(Map<String, Object> settings, Task task) {
-        TaskExecutor executor = task.with(Task.of(Schedulers.javafx(), this::navigateToSuccess)).executor();
+    default void handleTask(Map<String, Object> settings, Task<?> task) {
+        TaskExecutor executor = task.withRun(Schedulers.javafx(), this::navigateToSuccess).executor();
         TaskListPane pane = new TaskListPane();
         pane.setExecutor(executor);
         navigateTo(pane, Navigation.NavigationDirection.FINISH);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/DefaultWizardDisplayer.java
Patch:
@@ -23,7 +23,6 @@
 import javafx.scene.Node;
 import javafx.scene.control.Label;
 import javafx.scene.layout.StackPane;
-import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.FXUtils;
 import org.jackhuang.hmcl.ui.animation.TransitionHandler;
 import org.jackhuang.hmcl.util.StringUtils;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardController.java
Patch:
@@ -111,7 +111,7 @@ public boolean canPrev() {
     public void onFinish() {
         Object result = provider.finish(settings);
         if (result instanceof Summary) displayer.navigateTo(((Summary) result).getComponent(), NavigationDirection.NEXT);
-        else if (result instanceof Task) displayer.handleTask(settings, ((Task) result));
+        else if (result instanceof Task<?>) displayer.handleTask(settings, ((Task<?>) result));
         else if (result != null) throw new IllegalStateException("Unrecognized wizard result: " + result);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardDisplayer.java
Patch:
@@ -27,5 +27,5 @@ public interface WizardDisplayer {
     void onEnd();
     void onCancel();
     void navigateTo(Node page, Navigation.NavigationDirection nav);
-    void handleTask(Map<String, Object> settings, Task task);
+    void handleTask(Map<String, Object> settings, Task<?> task);
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateHandler.java
Patch:
@@ -20,7 +20,7 @@
 import com.google.gson.Gson;
 import com.google.gson.JsonParseException;
 import javafx.application.Platform;
-import javafx.scene.layout.Region;
+
 import org.jackhuang.hmcl.Main;
 import org.jackhuang.hmcl.Metadata;
 import org.jackhuang.hmcl.task.Task;
@@ -101,7 +101,7 @@ public static void updateFrom(RemoteVersion version) {
                 return;
             }
 
-            Task task = new HMCLDownloadTask(version, downloaded);
+            Task<?> task = new HMCLDownloadTask(version, downloaded);
 
             TaskExecutor executor = task.executor();
             Controllers.taskDialog(executor, i18n("message.downloading"));
@@ -122,7 +122,7 @@ public static void updateFrom(RemoteVersion version) {
                     }
 
                 } else {
-                    Throwable e = executor.getLastException();
+                    Exception e = executor.getException();
                     LOG.log(Level.WARNING, "Failed to update to " + version, e);
                     Platform.runLater(() -> Controllers.dialog(e.toString(), i18n("update.failed"), MessageType.ERROR));
                 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/AbstractDependencyManager.java
Patch:
@@ -17,8 +17,6 @@
  */
 package org.jackhuang.hmcl.download;
 
-import org.jackhuang.hmcl.util.CacheRepository;
-
 /**
  *
  * @author huangyuhui

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/GameBuilder.java
Patch:
@@ -72,5 +72,5 @@ public GameBuilder version(RemoteVersion remoteVersion) {
     /**
      * @return the task that can build thw whole Minecraft environment
      */
-    public abstract Task buildAsync();
+    public abstract Task<?> buildAsync();
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -18,11 +18,10 @@
 package org.jackhuang.hmcl.download;
 
 import org.jackhuang.hmcl.game.*;
-import org.jackhuang.hmcl.task.TaskResult;
-
+import org.jackhuang.hmcl.task.Task;
 import static org.jackhuang.hmcl.download.LibraryAnalyzer.LibraryType.*;
 
-public class MaintainTask extends TaskResult<Version> {
+public class MaintainTask extends Task<Version> {
 
     private final Version version;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MojangDownloadProvider.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.download;
 
 import org.jackhuang.hmcl.download.forge.ForgeBMCLVersionList;
-import org.jackhuang.hmcl.download.forge.ForgeVersionList;
 import org.jackhuang.hmcl.download.game.GameVersionList;
 import org.jackhuang.hmcl.download.liteloader.LiteLoaderVersionList;
 import org.jackhuang.hmcl.download.optifine.OptiFineBMCLVersionList;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeVersionList.java
Patch:
@@ -45,12 +45,12 @@ public boolean hasType() {
     }
 
     @Override
-    public Task refreshAsync(DownloadProvider downloadProvider) {
+    public Task<?> refreshAsync(DownloadProvider downloadProvider) {
         final GetTask task = new GetTask(NetworkUtils.toURL(downloadProvider.injectURL(FORGE_LIST)));
-        return new Task() {
+        return new Task<Void>() {
 
             @Override
-            public Collection<Task> getDependents() {
+            public Collection<Task<?>> getDependents() {
                 return Collections.singleton(task);
             }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameLibrariesTask.java
Patch:
@@ -32,12 +32,12 @@
  *
  * @author huangyuhui
  */
-public final class GameLibrariesTask extends Task {
+public final class GameLibrariesTask extends Task<Void> {
 
     private final AbstractDependencyManager dependencyManager;
     private final Version version;
     private final List<Library> libraries;
-    private final List<Task> dependencies = new LinkedList<>();
+    private final List<Task<?>> dependencies = new LinkedList<>();
 
     /**
      * Constructor.
@@ -64,7 +64,7 @@ public GameLibrariesTask(AbstractDependencyManager dependencyManager, Version ve
     }
 
     @Override
-    public List<Task> getDependencies() {
+    public List<Task<?>> getDependencies() {
         return dependencies;
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameVersionList.java
Patch:
@@ -55,11 +55,11 @@ protected Collection<GameRemoteVersion> getVersionsImpl(String gameVersion) {
     }
 
     @Override
-    public Task refreshAsync(DownloadProvider downloadProvider) {
+    public Task<?> refreshAsync(DownloadProvider downloadProvider) {
         GetTask task = new GetTask(NetworkUtils.toURL(downloadProvider.getVersionListURL()));
-        return new Task() {
+        return new Task<Void>() {
             @Override
-            public Collection<Task> getDependents() {
+            public Collection<Task<?>> getDependents() {
                 return Collections.singleton(task);
             }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibrariesUniqueTask.java
Patch:
@@ -20,7 +20,7 @@
 import org.jackhuang.hmcl.game.CompatibilityRule;
 import org.jackhuang.hmcl.game.Library;
 import org.jackhuang.hmcl.game.Version;
-import org.jackhuang.hmcl.task.TaskResult;
+import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.SimpleMultimap;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
@@ -31,7 +31,7 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
-public class LibrariesUniqueTask extends TaskResult<Version> {
+public class LibrariesUniqueTask extends Task<Version> {
     private final Version version;
 
     public LibrariesUniqueTask(Version version) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -45,7 +45,7 @@
 import static org.jackhuang.hmcl.util.DigestUtils.digest;
 import static org.jackhuang.hmcl.util.Hex.encodeHex;
 
-public class LibraryDownloadTask extends Task {
+public class LibraryDownloadTask extends Task<Void> {
     private FileDownloadTask task;
     protected final File jar;
     protected final DefaultCacheRepository cacheRepository;
@@ -74,7 +74,7 @@ public LibraryDownloadTask(AbstractDependencyManager dependencyManager, File fil
     }
 
     @Override
-    public Collection<? extends Task> getDependents() {
+    public Collection<Task<?>> getDependents() {
         if (cached) return Collections.emptyList();
         else return Collections.singleton(task);
     }
@@ -91,7 +91,7 @@ public void execute() throws Exception {
         if (!isDependentsSucceeded()) {
             // Since FileDownloadTask wraps the actual exception with DownloadException.
             // We should extract it letting the error message clearer.
-            Throwable t = task.getLastException();
+            Exception t = task.getException();
             if (t instanceof DownloadException)
                 throw new LibraryDownloadException(library, t.getCause());
             else

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/VersionJsonSaveTask.java
Patch:
@@ -19,7 +19,7 @@
 
 import org.jackhuang.hmcl.game.DefaultGameRepository;
 import org.jackhuang.hmcl.game.Version;
-import org.jackhuang.hmcl.task.TaskResult;
+import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.io.FileUtils;
 
@@ -30,7 +30,7 @@
  *
  * @author huangyuhui
  */
-public final class VersionJsonSaveTask extends TaskResult<Version> {
+public final class VersionJsonSaveTask extends Task<Version> {
 
     private final DefaultGameRepository repository;
     private final Version version;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineBMCLVersionList.java
Patch:
@@ -46,11 +46,11 @@ public boolean hasType() {
     }
 
     @Override
-    public Task refreshAsync(DownloadProvider downloadProvider) {
+    public Task<?> refreshAsync(DownloadProvider downloadProvider) {
         GetTask task = new GetTask(NetworkUtils.toURL("http://bmclapi2.bangbang93.com/optifine/versionlist"));
-        return new Task() {
+        return new Task<Void>() {
             @Override
-            public Collection<Task> getDependents() {
+            public Collection<Task<?>> getDependents() {
                 return Collections.singleton(task);
             }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/GameRepository.java
Patch:
@@ -77,8 +77,8 @@ default Version getResolvedVersion(String id) throws VersionNotFoundException {
      */
     void refreshVersions();
 
-    default Task refreshVersionsAsync() {
-        return Task.of(this::refreshVersions);
+    default Task<Void> refreshVersionsAsync() {
+        return Task.runAsync(this::refreshVersions);
     }
 
     /**

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/World.java
Patch:
@@ -36,7 +36,6 @@
 import java.nio.file.FileSystem;
 import java.nio.file.Files;
 import java.nio.file.Path;
-import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.stream.Collectors;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MinecraftInstanceTask.java
Patch:
@@ -33,7 +33,7 @@
 import static org.jackhuang.hmcl.util.DigestUtils.digest;
 import static org.jackhuang.hmcl.util.Hex.encodeHex;
 
-public final class MinecraftInstanceTask<T> extends Task {
+public final class MinecraftInstanceTask<T> extends Task<Void> {
 
     private final File zipFile;
     private final Charset encoding;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ModpackInstallTask.java
Patch:
@@ -31,7 +31,7 @@
 import static org.jackhuang.hmcl.util.DigestUtils.digest;
 import static org.jackhuang.hmcl.util.Hex.encodeHex;
 
-public class ModpackInstallTask<T> extends Task {
+public class ModpackInstallTask<T> extends Task<Void> {
 
     private final File modpackFile;
     private final File dest;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/TaskEvent.java
Patch:
@@ -25,16 +25,16 @@
  */
 public class TaskEvent extends Event {
 
-    private final Task task;
+    private final Task<?> task;
     private final boolean failed;
 
-    public TaskEvent(Object source, Task task, boolean failed) {
+    public TaskEvent(Object source, Task<?> task, boolean failed) {
         super(source);
         this.task = task;
         this.failed = failed;
     }
 
-    public Task getTask() {
+    public Task<?> getTask() {
         return task;
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/NetworkUtils.java
Patch:
@@ -19,7 +19,6 @@
 
 import java.io.*;
 import java.net.*;
-import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeNewInstallTask.java
Patch:
@@ -143,7 +143,7 @@ public void execute() throws Exception {
                 data.put(key, parseLiteral(value,
                         Collections.emptyMap(),
                         str -> {
-                            Path dest = temp.resolve(str);
+                            Path dest = Files.createTempFile(temp, null, null);
                             FileUtils.copyFile(fs.getPath(str), dest);
                             return dest.toString();
                         }));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MultiMCModpackInstallTask.java
Patch:
@@ -135,8 +135,7 @@ public void execute() throws Exception {
         Version version = repository.readVersionJson(name);
 
         try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(zipFile.toPath())) {
-            Path root = Files.list(fs.getPath("/")).filter(Files::isDirectory).findAny()
-                    .orElseThrow(() -> new IOException("Not a valid MultiMC modpack"));
+            Path root = MultiMCInstanceConfiguration.getRootPath(fs.getPath("/"));
             Path patches = root.resolve("patches");
 
             if (Files.exists(patches))

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DatapackListPage.java
Patch:
@@ -24,6 +24,7 @@
 import javafx.scene.control.TreeItem;
 import javafx.stage.FileChooser;
 import org.jackhuang.hmcl.mod.Datapack;
+import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.FXUtils;
@@ -80,7 +81,7 @@ protected Skin<?> createDefaultSkin() {
     public void refresh() {
         setLoading(true);
         Task.of(datapack::loadFromDir)
-                .with(Task.of(() -> setLoading(false)))
+                .with(Task.of(Schedulers.javafx(), () -> setLoading(false)))
                 .start();
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItemSkin.java
Patch:
@@ -100,7 +100,7 @@ public void fire() {
         right.getChildren().add(btnRemove);
         root.setRight(right);
 
-        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 12;");
+        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 0;");
         JFXDepthManager.setDepth(root, 1);
 
         getChildren().setAll(root);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItemSkin.java
Patch:
@@ -72,7 +72,7 @@ public void fire() {
         right.getChildren().add(btnRemove);
         root.setRight(right);
 
-        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 12;");
+        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 0;");
         JFXDepthManager.setDepth(root, 1);
         item.titleProperty().bind(skinnable.titleProperty());
         item.subtitleProperty().bind(skinnable.subtitleProperty());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItemSkin.java
Patch:
@@ -87,7 +87,7 @@ public GameListItemSkin(GameListItem skinnable) {
         right.getChildren().add(btnManage);
         root.setRight(right);
 
-        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 12;");
+        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 0;");
         JFXDepthManager.setDepth(root, 1);
 
         getChildren().setAll(root);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardProvider.java
Patch:
@@ -26,6 +26,9 @@ public interface WizardProvider {
     Object finish(Map<String, Object> settings);
     Node createPage(WizardController controller, int step, Map<String, Object> settings);
     boolean cancel();
+    default boolean cancelIfCannotGoBack() {
+        return false;
+    }
 
     interface FailureCallback {
         void onFail(Map<String, Object> settings, Exception exception, Runnable next);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -41,6 +41,7 @@
 import java.util.Arrays;
 import java.util.LinkedList;
 import java.util.List;
+import java.util.Objects;
 import java.util.logging.Level;
 import java.util.stream.Collectors;
 
@@ -142,6 +143,7 @@ public void removeSelected(ObservableList<TreeItem<ModListPageSkin.ModInfoObject
         try {
             modManager.removeMods(selectedItems.stream()
                     .map(TreeItem::getValue)
+                    .filter(Objects::nonNull)
                     .map(ModListPageSkin.ModInfoObject::getModInfo)
                     .toArray(ModInfo[]::new));
             loadMods(modManager);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/RipplerContainer.java
Patch:
@@ -71,6 +71,7 @@ public RipplerContainer(@NamedArg("container") Node container) {
         setContainer(container);
 
         getStyleClass().add(DEFAULT_STYLE_CLASS);
+        buttonRippler.setPosition(JFXRippler.RipplerPos.BACK);
         buttonContainer.getChildren().add(buttonRippler);
         focusedProperty().addListener((a, b, newValue) -> {
             if (newValue) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -217,7 +217,7 @@ protected void appendJvmArgs(CommandBuilder result) {
 
     public void decompressNatives(File destination) throws NotDecompressingNativesException {
         try {
-            FileUtils.cleanDirectory(destination);
+            FileUtils.cleanDirectoryQuietly(destination);
             for (Library library : version.getLibraries())
                 if (library.isNative())
                     new Unzipper(repository.getLibraryFile(version, library), destination)
@@ -229,7 +229,7 @@ public void decompressNatives(File destination) throws NotDecompressingNativesEx
                                     return false;
                                 return library.getExtract().shouldExtract(path);
                             })
-                            .setReplaceExistentFile(true).unzip();
+                            .setReplaceExistentFile(false).unzip();
         } catch (IOException e) {
             throw new NotDecompressingNativesException(e);
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultGameBuilder.java
Patch:
@@ -72,7 +72,7 @@ public Task buildAsync() {
             return libraryTask;
         }).whenComplete((isDependentSucceeded, exception) -> {
             if (!isDependentSucceeded)
-                dependencyManager.getGameRepository().getVersionRoot(name).delete();
+                dependencyManager.getGameRepository().removeVersionFromDisk(name);
         });
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeBMCLVersionList.java
Patch:
@@ -78,7 +78,7 @@ public void execute() {
                             continue;
                         String jar = null;
                         for (ForgeVersion.File file : version.getFiles())
-                            if ("installer".equals(file.getCategory())) {
+                            if ("installer".equals(file.getCategory()) && "jar".equals(file.getFormat())) {
                                 String classifier = gameVersion + "-" + version.getVersion()
                                         + (StringUtils.isNotBlank(version.getBranch()) ? "-" + version.getBranch() : "");
                                 String fileName = "forge-" + classifier + "-" + file.getCategory() + "." + file.getFormat();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -58,7 +58,8 @@ public boolean doPreExecute() {
     public void preExecute() throws Exception {
         installer = Files.createTempFile("forge-installer", ".jar");
 
-        dependent = new FileDownloadTask(NetworkUtils.toURL(remote.getUrl()), installer.toFile());
+        dependent = new FileDownloadTask(NetworkUtils.toURL(remote.getUrl()), installer.toFile())
+                .setCaching(true);
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetDownloadTask.java
Patch:
@@ -89,6 +89,7 @@ public void execute() throws Exception {
                     String url = dependencyManager.getDownloadProvider().getAssetBaseURL() + assetObject.getLocation();
                     FileDownloadTask task = new FileDownloadTask(NetworkUtils.toURL(url), file, new FileDownloadTask.IntegrityCheck("SHA-1", assetObject.getHash()));
                     task.setName(assetObject.getHash());
+                    task.setCaching(true);
                     dependencies.add(task
                             .setCacheRepository(dependencyManager.getCacheRepository())
                             .setCaching(true)

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -128,12 +128,12 @@ public void preExecute() throws Exception {
         try {
             URL packXz = NetworkUtils.toURL(url + ".pack.xz");
             if (NetworkUtils.urlExists(packXz)) {
-                task = new FileDownloadTask(packXz, xzFile, null);
+                task = new FileDownloadTask(packXz, xzFile, null).setCaching(true);
                 xz = true;
             } else {
                 task = new FileDownloadTask(NetworkUtils.toURL(url),
                         jar,
-                        library.getDownload().getSha1() != null ? new IntegrityCheck("SHA-1", library.getDownload().getSha1()) : null);
+                        library.getDownload().getSha1() != null ? new IntegrityCheck("SHA-1", library.getDownload().getSha1()) : null).setCaching(true);
                 xz = false;
             }
         } catch (IOException e) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseCompletionTask.java
Patch:
@@ -140,7 +140,7 @@ public void execute() throws Exception {
         for (CurseManifestFile file : newManifest.getFiles())
             if (StringUtils.isNotBlank(file.getFileName())) {
                 if (!modManager.hasSimpleMod(file.getFileName())) {
-                    dependencies.add(new FileDownloadTask(file.getUrl(), modManager.getSimpleModPath(file.getFileName()).toFile()));
+                    dependencies.add(new FileDownloadTask(file.getUrl(), modManager.getSimpleModPath(file.getFileName()).toFile()).setCaching(true));
                 }
             }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAuthlibInjectorServerPane.java
Patch:
@@ -110,7 +110,7 @@ private void onAddNext() {
             addServerPane.setDisable(false);
             nextPane.hideSpinner();
 
-            if (isDependentsSucceeded) {
+            if (isDependentSucceeded) {
                 lblServerName.setText(serverBeingAdded.getName());
                 lblServerUrl.setText(serverBeingAdded.getUrl());
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -129,7 +129,7 @@ private List<VersionsPageItem> loadVersions() {
     public void refresh() {
         transitionHandler.setContent(spinner, ContainerAnimations.FADE.getAnimationProducer());
         executor = versionList.refreshAsync(gameVersion, downloadProvider).whenComplete((isDependentSucceeded, exception) -> {
-            if (isDependentsSucceeded) {
+            if (isDependentSucceeded) {
                 List<VersionsPageItem> items = loadVersions();
 
                 Platform.runLater(() -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -93,7 +93,7 @@ public void loadMods(ModManager modManager) {
             }
         }).whenComplete(Schedulers.javafx(), (list, isDependentSucceeded, exception) -> {
             loadingProperty().set(false);
-            if (isDependentsSucceeded)
+            if (isDependentSucceeded)
                 FXUtils.onWeakChangeAndOperate(parentTab.getSelectionModel().selectedItemProperty(), newValue -> {
                     if (newValue != null && newValue.getUserData() == ModListPage.this)
                         itemsProperty().setAll(list.stream().map(ModListPageSkin.ModInfoObject::new).collect(Collectors.toList()));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListPage.java
Patch:
@@ -53,7 +53,7 @@ public void loadVersion(Profile profile, String id) {
         Task.ofResult(() -> World.getWorlds(savesDir).parallel().collect(Collectors.toList()))
                 .whenComplete(Schedulers.javafx(), (result, isDependentSucceeded, exception) -> {
                     setLoading(false);
-                    if (isDependentsSucceeded)
+                    if (isDependentSucceeded)
                         itemsProperty().setAll(result.stream().map(WorldListItem::new).collect(Collectors.toList()));
                 }).start();
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -510,6 +510,7 @@ public static <T> Callback<ListView<T>, ListCell<T>> jfxListCellFactory(Function
             public void updateItem(T item, boolean empty) {
                 super.updateItem(item, empty);
                 if (!empty) {
+                    setContentDisplay(ContentDisplay.GRAPHIC_ONLY);
                     setGraphic(graphicBuilder.apply(item));
                 }
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItemSkin.java
Patch:
@@ -72,7 +72,7 @@ public void fire() {
         right.getChildren().add(btnRemove);
         root.setRight(right);
 
-        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 0;");
+        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 12;");
         JFXDepthManager.setDepth(root, 1);
         item.titleProperty().bind(skinnable.titleProperty());
         item.subtitleProperty().bind(skinnable.subtitleProperty());

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateHandler.java
Patch:
@@ -102,7 +102,7 @@ public static void updateFrom(RemoteVersion version) {
         Task task = new HMCLDownloadTask(version, downloaded);
 
         TaskExecutor executor = task.executor();
-        Region dialog = Controllers.taskDialog(executor, i18n("message.downloading"));
+        Controllers.taskDialog(executor, i18n("message.downloading"));
         thread(() -> {
             boolean success = executor.test();
 
@@ -121,7 +121,8 @@ public static void updateFrom(RemoteVersion version) {
                 }
 
             } else {
-                LOG.log(Level.WARNING, "Failed to update to " + version, executor.getLastException());
+                Throwable e = executor.getLastException();
+                LOG.log(Level.WARNING, "Failed to update to " + version, e);
                 Platform.runLater(() -> Controllers.dialog(e.toString(), i18n("update.failed"), MessageBox.ERROR_MESSAGE));
             }
         });

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/Texture.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.auth.yggdrasil;
 
 import org.jackhuang.hmcl.util.Immutable;
+import org.jetbrains.annotations.Nullable;
 
 import java.util.Map;
 
@@ -36,10 +37,12 @@ public Texture(String url, Map<String, String> metadata) {
         this.metadata = metadata;
     }
 
+    @Nullable
     public String getUrl() {
         return url;
     }
 
+    @Nullable
     public Map<String, String> getMetadata() {
         return metadata;
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ListPageSkin.java
Patch:
@@ -70,15 +70,15 @@ public ListPageSkin(ListPage<?> skinnable) {
                 JFXButton btnAdd = new JFXButton();
                 FXUtils.setLimitWidth(btnAdd, 40);
                 FXUtils.setLimitHeight(btnAdd, 40);
-                btnAdd.getStyleClass().setAll("jfx-button-raised-round");
+                btnAdd.getStyleClass().add("jfx-button-raised-round");
                 btnAdd.setButtonType(JFXButton.ButtonType.RAISED);
                 btnAdd.setGraphic(SVG.plus(Theme.whiteFillBinding(), -1, -1));
                 btnAdd.setOnMouseClicked(e -> skinnable.add());
 
                 JFXButton btnRefresh = new JFXButton();
                 FXUtils.setLimitWidth(btnRefresh, 40);
                 FXUtils.setLimitHeight(btnRefresh, 40);
-                btnRefresh.getStyleClass().setAll("jfx-button-raised-round");
+                btnRefresh.getStyleClass().add("jfx-button-raised-round");
                 btnRefresh.setButtonType(JFXButton.ButtonType.RAISED);
                 btnRefresh.setGraphic(SVG.refresh(Theme.whiteFillBinding(), -1, -1));
                 btnRefresh.setOnMouseClicked(e -> skinnable.refresh());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/AdvancedListItemSkin.java
Patch:
@@ -83,7 +83,7 @@ public AdvancedListItemSkin(AdvancedListItem skinnable) {
         HBox right = new HBox();
         right.setAlignment(Pos.CENTER);
         right.setMouseTransparent(true);
-        right.getStyleClass().setAll("toggle-icon4");
+        right.getStyleClass().add("toggle-icon4");
         FXUtils.setLimitWidth(right, 40);
         FXUtils.onChangeAndOperate(skinnable.rightGraphicProperty(),
                 newGraphic -> {
@@ -99,7 +99,7 @@ public AdvancedListItemSkin(AdvancedListItem skinnable) {
                 visible -> root.setRight(visible ? right : null));
 
         stackPane.setStyle("-fx-padding: 10 16 10 16;");
-        stackPane.getStyleClass().setAll("transparent");
+        stackPane.getStyleClass().add("transparent");
         stackPane.setPickOnBounds(false);
         stackPane.getChildren().setAll(root);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/IconedItem.java
Patch:
@@ -45,7 +45,7 @@ private static HBox createHBox(Node icon) {
             hBox.getChildren().add(icon);
         }
 
-        hBox.getStyleClass().setAll("iconed-item-container");
+        hBox.getStyleClass().add("iconed-item-container");
         Label textLabel = new Label();
         textLabel.setId("label");
         textLabel.setMouseTransparent(true);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/PopupMenu.java
Patch:
@@ -64,7 +64,7 @@ protected Skin<?> createDefaultSkin() {
     public static Node wrapPopupMenuItem(Node node) {
         StackPane pane = new StackPane();
         pane.getChildren().setAll(node);
-        pane.getStyleClass().setAll("menu-container");
+        pane.getStyleClass().add("menu-container");
         node.setMouseTransparent(true);
         return new RipplerContainer(pane);
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorWizardDisplayer.java
Patch:
@@ -52,7 +52,7 @@ public DecoratorWizardDisplayer(WizardProvider provider, String category) {
         wizardController.setProvider(provider);
         wizardController.onStart();
 
-        getStyleClass().setAll("white-background");
+        getStyleClass().add("white-background");
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListSkin.java
Patch:
@@ -50,7 +50,7 @@ public GameListSkin(GameList skinnable) {
 
         {
             HBox toolbar = new HBox();
-            toolbar.getStyleClass().setAll("jfx-tool-bar-second");
+            toolbar.getStyleClass().add("jfx-tool-bar-second");
             JFXDepthManager.setDepth(toolbar, 1);
             toolbar.setPickOnBounds(false);
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPageSkin.java
Patch:
@@ -58,7 +58,7 @@ public ModListPageSkin(ModListPage skinnable) {
 
         {
             HBox toolbar = new HBox();
-            toolbar.getStyleClass().setAll("jfx-tool-bar-second");
+            toolbar.getStyleClass().add("jfx-tool-bar-second");
             JFXDepthManager.setDepth(toolbar, 1);
             toolbar.setPickOnBounds(false);
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -20,6 +20,7 @@
 import org.jackhuang.hmcl.download.AbstractDependencyManager;
 import org.jackhuang.hmcl.download.DefaultCacheRepository;
 import org.jackhuang.hmcl.game.Library;
+import org.jackhuang.hmcl.task.DownloadException;
 import org.jackhuang.hmcl.task.FileDownloadTask;
 import org.jackhuang.hmcl.task.FileDownloadTask.IntegrityCheck;
 import org.jackhuang.hmcl.task.Task;
@@ -88,10 +89,10 @@ public void execute() throws Exception {
         if (cached) return;
 
         if (!isDependentsSucceeded()) {
-            // Since FileDownloadTask wraps the actual exception with another IOException.
+            // Since FileDownloadTask wraps the actual exception with DownloadException.
             // We should extract it letting the error message clearer.
             Throwable t = task.getLastException();
-            if (t.getCause() != null)
+            if (t instanceof DownloadException)
                 throw new LibraryDownloadException(library, t.getCause());
             else
                 throw new LibraryDownloadException(library, t);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/DownloadException.java
Patch:
@@ -20,12 +20,14 @@
 import java.io.IOException;
 import java.net.URL;
 
+import static java.util.Objects.requireNonNull;
+
 public class DownloadException extends IOException {
 
     private final URL url;
 
     public DownloadException(URL url, Throwable cause) {
-        super("Unable to download " + url + ", " + cause.getMessage(), cause);
+        super("Unable to download " + url + ", " + cause.getMessage(), requireNonNull(cause));
 
         this.url = url;
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import javafx.application.Application;
 import javafx.application.Platform;
 import javafx.stage.Stage;

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -19,7 +19,7 @@
 
 import com.google.gson.*;
 import com.google.gson.annotations.JsonAdapter;
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import javafx.application.Platform;
 import javafx.beans.InvalidationListener;
 import javafx.beans.Observable;

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profiles.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.setting;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import javafx.application.Platform;
 import javafx.beans.Observable;
 import javafx.beans.property.*;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import javafx.scene.Node;
 import javafx.scene.Scene;
 import javafx.scene.image.Image;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/DialogController.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import org.jackhuang.hmcl.auth.Account;
 import org.jackhuang.hmcl.auth.AuthInfo;
 import org.jackhuang.hmcl.auth.yggdrasil.YggdrasilAccount;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import com.jfoenix.controls.*;
 import javafx.animation.Animation;
 import javafx.animation.Interpolator;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LeftPaneController.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import javafx.application.Platform;
 import javafx.scene.image.Image;
 import javafx.scene.layout.Region;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItemSkin.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.account;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXRadioButton;
 import com.jfoenix.effects.JFXDepthManager;
@@ -103,7 +103,7 @@ public void fire() {
         right.getChildren().add(btnRemove);
         root.setRight(right);
 
-        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 0;");
+        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 12;");
         JFXDepthManager.setDepth(root, 1);
 
         getChildren().setAll(root);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAccountPane.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.account;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import com.jfoenix.controls.*;
 
 import javafx.application.Platform;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskExecutorDialogPane.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.construct;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXProgressBar;
 import javafx.application.Platform;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameList.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.versions;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import javafx.application.Platform;
 import javafx.beans.property.*;
 import javafx.collections.FXCollections;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItemSkin.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.versions;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import com.jfoenix.controls.JFXButton;
 import com.jfoenix.controls.JFXPopup;
 import com.jfoenix.controls.JFXRadioButton;
@@ -87,7 +87,7 @@ public GameListItemSkin(GameListItem skinnable) {
         right.getChildren().add(btnManage);
         root.setRight(right);
 
-        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 0;");
+        root.setStyle("-fx-background-color: white; -fx-padding: 8 8 8 12;");
         JFXDepthManager.setDepth(root, 1);
 
         getChildren().setAll(root);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.versions;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import com.jfoenix.controls.JFXTabPane;
 import javafx.beans.property.BooleanProperty;
 import javafx.beans.property.ListProperty;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/TaskExecutorDialogWizardDisplayer.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hmcl.ui.wizard;
 
-import com.jfoenix.concurrency.JFXUtilities;
+import com.jfoenix.utils.JFXUtilities;
 import javafx.beans.property.StringProperty;
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.task.TaskExecutor;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -161,6 +161,8 @@ public Image getVersionIconImage(String id) {
             return new Image("file:" + iconFile.getAbsolutePath());
         else if ("net.minecraft.launchwrapper.Launch".equals(version.getMainClass()))
             return new Image("/assets/img/furnace.png");
+        else if ("cpw.mods.modlauncher.Launcher".equals(version.getMainClass()))
+            return new Image("/assets/img/furnace.png");
         else
             return new Image("/assets/img/grass.png");
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -44,7 +44,7 @@ public static Version maintain(Version version) {
             return maintainGameWithLaunchWrapper(version);
         } else {
             // Vanilla Minecraft does not need maintain
-            // Forge 1.13.2 support not implemented.
+            // Forge 1.13 support not implemented, not compatible with OptiFine currently.
             return version;
         }
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -117,7 +117,7 @@ public Version readVersionJson(String id) throws IOException, JsonParseException
     }
 
     public Version readVersionJson(File file) throws IOException, JsonParseException {
-        return JsonUtils.GSON.fromJson(FileUtils.readText(file), Version.class);
+        return JsonUtils.fromNonNullJson(FileUtils.readText(file), Version.class);
     }
 
     @Override
@@ -221,15 +221,15 @@ protected void refreshVersionsImpl() {
 
                 Version version;
                 try {
-                    version = Objects.requireNonNull(readVersionJson(json));
+                    version = readVersionJson(json);
                 } catch (Exception e) {
                     LOG.log(Level.WARNING, "Malformed version json " + id, e);
                     // JsonSyntaxException or IOException or NullPointerException(!!)
                     if (EventBus.EVENT_BUS.fireEvent(new GameJsonParseFailedEvent(this, json, id)) != Event.Result.ALLOW)
                         return Stream.empty();
 
                     try {
-                        version = Objects.requireNonNull(readVersionJson(json));
+                        version = readVersionJson(json);
                     } catch (Exception e2) {
                         LOG.log(Level.SEVERE, "User corrected version json is still malformed", e2);
                         return Stream.empty();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Library.java
Patch:
@@ -45,13 +45,13 @@ public class Library implements Comparable<Library> {
     private final String classifier;
     private final String url;
     private final LibrariesDownloadInfo downloads;
-    private final LibraryDownloadInfo download;
+    private transient final LibraryDownloadInfo download;
     private final ExtractRules extract;
     private final Map<OperatingSystem, String> natives;
     private final List<CompatibilityRule> rules;
     private final List<String> checksums;
 
-    private final String path;
+    private transient final String path;
 
     public Library(String groupId, String artifactId, String version) {
         this(groupId, artifactId, version, null, null, null);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MultiMCModpackInstallTask.java
Patch:
@@ -40,7 +40,6 @@
 import java.nio.file.Path;
 import java.util.LinkedList;
 import java.util.List;
-import java.util.Objects;
 import java.util.Optional;
 
 /**
@@ -133,7 +132,7 @@ public List<Task> getDependents() {
     
     @Override
     public void execute() throws Exception {
-        Version version = Objects.requireNonNull(repository.readVersionJson(name));
+        Version version = repository.readVersionJson(name);
 
         try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(zipFile.toPath())) {
             Path root = Files.list(fs.getPath("/")).filter(Files::isDirectory).findAny()

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/versioning/VersionNumber.java
Patch:
@@ -25,6 +25,7 @@
 /**
  * Copied from org.apache.maven.artifact.versioning.ComparableVersion
  * Apache License 2.0
+ * @see <a href="http://maven.apache.org/pom.html#Version_Order_Specification">Specification</a>
  */
 public class VersionNumber implements Comparable<VersionNumber> {
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorSkin.java
Patch:
@@ -207,7 +207,7 @@ public void onChanged(Change<? extends Node> c) {
                         else navLeft.getChildren().setAll(backNavButton);
                     });
 
-                    skinnable.showCloseAsHomeProperty().addListener((a, b, newValue) -> {
+                    FXUtils.onChangeAndOperate(skinnable.showCloseAsHomeProperty(), (newValue) -> {
                         if (newValue)
                             closeNavButton.setGraphic(SVG.home(Theme.foregroundFillBinding(), -1, -1));
                         else

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/World.java
Patch:
@@ -28,6 +28,7 @@
 import org.jackhuang.hmcl.util.io.Unzipper;
 import org.jackhuang.hmcl.util.io.Zipper;
 
+import java.io.BufferedInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -194,7 +195,7 @@ public void export(Path zip, String worldName) throws IOException {
     }
 
     private static CompoundTag parseLevelDat(Path path) throws IOException {
-        try (InputStream is = new GZIPInputStream(Files.newInputStream(path))) {
+        try (InputStream is = new BufferedInputStream(new GZIPInputStream(Files.newInputStream(path)))) {
             Tag nbt = NBTIO.readTag(is);
             if (nbt instanceof CompoundTag)
                 return (CompoundTag) nbt;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineBMCLVersionList.java
Patch:
@@ -66,7 +66,7 @@ public void execute() {
                     if (!duplicates.add(mirror))
                         continue;
 
-                    boolean isPre = element.getPatch() != null && (element.getPatch().equals("pre") || element.getPatch().startsWith("alpha"));
+                    boolean isPre = element.getPatch() != null && (element.getPatch().startsWith("pre") || element.getPatch().startsWith("alpha"));
 
                     if (StringUtils.isBlank(element.getGameVersion()))
                         continue;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MultiMCModpackInstallTask.java
Patch:
@@ -103,6 +103,7 @@ public MultiMCModpackInstallTask(DefaultDependencyManager dependencyManager, Fil
         }
 
         dependents.add(new ModpackInstallTask<>(zipFile, run, modpack.getEncoding(), "/" + manifest.getName() + "/minecraft", any -> true, config));
+        dependents.add(new ModpackInstallTask<>(zipFile, run, modpack.getEncoding(), "/" + manifest.getName() + "/.minecraft", any -> true, config));
     }
     
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -375,7 +375,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
         if (!flag) {
             boolean hasForge2760 = version.getLibraries().stream().filter(it -> it.is("net.minecraftforge", "forge"))
                     .anyMatch(it ->
-                            0 <= VersionNumber.VERSION_COMPARATOR.compare("1.12.2-14.23.5.2760", it.getVersion()) &&
+                            VersionNumber.VERSION_COMPARATOR.compare("1.12.2-14.23.5.2760", it.getVersion()) <= 0 &&
                                     VersionNumber.VERSION_COMPARATOR.compare(it.getVersion(), "1.12.2-14.23.5.2773") < 0);
             boolean hasLiteLoader = version.getLibraries().stream().anyMatch(it -> it.is("com.mumfrey", "liteloader"));
             if (hasForge2760 && hasLiteLoader && gameVersion.compareTo(VersionNumber.asVersion("1.12.2")) == 0) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/ForgeModMetadata.java
Patch:
@@ -114,7 +114,7 @@ public String[] getAuthors() {
         return authors;
     }
 
-    public static ModInfo fromFile(File modFile) throws IOException, JsonParseException {
+    public static ModInfo fromFile(ModManager modManager, File modFile) throws IOException, JsonParseException {
         try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(modFile.toPath())) {
             Path mcmod = fs.getPath("mcmod.info");
             if (Files.notExists(mcmod))
@@ -132,7 +132,7 @@ public static ModInfo fromFile(File modFile) throws IOException, JsonParseExcept
                 authors = String.join(", ", metadata.getAuthorList());
             if (StringUtils.isBlank(authors))
                 authors = metadata.getCredits();
-            return new ModInfo(modFile, metadata.getName(), metadata.getDescription(),
+            return new ModInfo(modManager, modFile, metadata.getName(), metadata.getDescription(),
                     authors, metadata.getVersion(), metadata.getGameVersion(),
                     StringUtils.isBlank(metadata.getUrl()) ? metadata.getUpdateUrl() : metadata.url);
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/LiteModMetadata.java
Patch:
@@ -108,15 +108,16 @@ public String getUpdateURI() {
         return updateURI;
     }
     
-    public static ModInfo fromFile(File modFile) throws IOException, JsonParseException {
+    public static ModInfo fromFile(ModManager modManager, File modFile) throws IOException, JsonParseException {
         try (ZipFile zipFile = new ZipFile(modFile)) {
             ZipEntry entry = zipFile.getEntry("litemod.json");
             if (entry == null)
                 throw new IOException("File " + modFile + "is not a LiteLoader mod.");
             LiteModMetadata metadata = JsonUtils.GSON.fromJson(IOUtils.readFullyAsString(zipFile.getInputStream(entry)), LiteModMetadata.class);
             if (metadata == null)
                 throw new IOException("Mod " + modFile + " `litemod.json` is malformed.");
-            return new ModInfo(modFile, metadata.getName(), metadata.getDescription(), metadata.getAuthor(), metadata.getVersion(), metadata.getGameVersion(), metadata.getUpdateURI());
+            return new ModInfo(modManager, modFile, metadata.getName(), metadata.getDescription(), metadata.getAuthor(),
+                    metadata.getVersion(), metadata.getGameVersion(), metadata.getUpdateURI());
         }
     }
     

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/RiftModMetadata.java
Patch:
@@ -60,14 +60,14 @@ public List<String> getAuthors() {
         return authors;
     }
 
-    public static ModInfo fromFile(File modFile) throws IOException, JsonParseException {
+    public static ModInfo fromFile(ModManager modManager, File modFile) throws IOException, JsonParseException {
         try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(modFile.toPath())) {
             Path mcmod = fs.getPath("riftmod.json");
             if (Files.notExists(mcmod))
                 throw new IOException("File " + modFile + " is not a Forge mod.");
             RiftModMetadata metadata = JsonUtils.fromNonNullJson(IOUtils.readFullyAsString(Files.newInputStream(mcmod)), RiftModMetadata.class);
             String authors = metadata.getAuthors() == null ? "" : String.join(", ", metadata.getAuthors());
-            return new ModInfo(modFile, metadata.getName(), "",
+            return new ModInfo(modManager, modFile, metadata.getName(), "",
                     authors, "", "", "");
         }
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/Metadata.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/AccountHelper.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLCacheRepository.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameLauncher.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackExportTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackInstallTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackManager.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackManifest.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LoadingState.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/ModAdviser.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/ModpackHelper.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/game/MultiMCInstallVersionSettingTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/ConfigHolder.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/ConfigUpgrader.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/DownloadProviders.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/EnumBackgroundImage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/EnumCommonDirectory.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/EnumGameDirectory.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/LauncherVisibility.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profiles.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/ProxyManager.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Theme.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/CrashWindow.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/DialogController.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LeftPaneController.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ListPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ListPageSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SVG.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SafeIntStringConverter.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SettingsPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SettingsView.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/WeakListenerHolder.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/WebStage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountAdvancedListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItemSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountLoginPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAccountPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAuthlibInjectorServerPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AuthlibInjectorServerItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AuthlibInjectorServersPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/animation/AnimationHandler.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/animation/AnimationProducer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/animation/ContainerAnimations.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/animation/TransitionHandler.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/AdvancedListBox.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/AdvancedListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/AdvancedListItemSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ClassTitle.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ComponentList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ComponentListCell.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ComponentSublist.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/DialogAware.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/DialogCloseEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/FileItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/FontComboBox.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/IconedItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/IconedMenuItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/ImagePickerItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/InputDialogPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MenuSeparator.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MessageBox.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MessageDialogPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MultiColorItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MultiFileItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/Navigator.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/NoneMultipleSelectionModel.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/NumberValidator.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/PageCloseEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/PopupMenu.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/RipplerContainer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/SpinnerPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/StackContainerPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskExecutorDialogPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskListPane.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TwoLineListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/Validator.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/Decorator.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorController.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorWizardDisplayer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/AdditionalInstallersPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallerWizardProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallersPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackInstallWizardProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VanillaInstallWizardProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPageItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ExportWizardProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackFileSelectionPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackInfoPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileAdvancedListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItemSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfilePage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DatapackListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/DatapackListPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameItemSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItemSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/ModListPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionSettingsPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/Versions.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldExportPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldExportPageSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListItem.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListItemSkin.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/AbstractWizardDisplayer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/DefaultWizardDisplayer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/Navigation.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/Refreshable.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/SinglePageWizardProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/Summary.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/TaskExecutorDialogWizardDisplayer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/Wizard.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardController.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardDisplayer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardNavigationResult.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardPage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardSinglePage.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/ExecutableHeaderHelper.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/HMCLDownloadTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/IntegrityChecker.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/RemoteVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateChannel.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateChecker.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateHandler.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/util/i18n/I18n.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/util/i18n/Locales.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/util/i18n/UTF8Control.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/Account.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/AccountFactory.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/AuthInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/AuthenticationException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/CharacterSelector.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/CredentialExpiredException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/NoCharacterException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/NoSelectedCharacterException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/ServerDisconnectException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/ServerResponseMalformedException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/SpecificCharacterSelector.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorAccount.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorAccountFactory.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorArtifactInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorArtifactProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorDnD.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorDownloadException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorDownloader.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorServer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/SimpleAuthlibInjectorArtifactProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccount.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/offline/OfflineAccountFactory.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/GameProfile.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/MojangYggdrasilProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/PropertyMap.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/RemoteAuthenticationException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/Texture.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/TextureType.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/User.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilAccount.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilAccountFactory.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilService.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilSession.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/AbstractDependencyManager.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/BMCLAPIDownloadProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultCacheRepository.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultDependencyManager.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultGameBuilder.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DependencyManager.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DownloadProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/GameBuilder.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/LibraryAnalyzer.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MojangDownloadProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/RemoteVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/VersionList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstall.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallProfile.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeRemoteVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeVersionList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeVersionRoot.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetDownloadTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetIndexDownloadTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameDownloadTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameLibrariesTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteLatestVersions.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteVersionInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameRemoteVersions.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameVersionList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibrariesUniqueTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/VersionJsonDownloadTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/VersionJsonSaveTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderBMCLVersionList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderBranch.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderGameVersions.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderInstallTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderRemoteVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderRepository.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderVersionList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderVersionsMeta.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/liteloader/LiteLoaderVersionsRoot.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineBMCLVersionList.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineInstallTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineRemoteVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/Event.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventBus.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventManager.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/EventPriority.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/FailedEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/GameJsonParseFailedEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/JVMLaunchFailedEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/LoadedOneVersionEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/ProcessExitedAbnormallyEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/ProcessStoppedEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/RefreshedVersionsEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/RefreshingVersionsEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/RemoveVersionEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/event/RenameVersionEvent.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Argument.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Arguments.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/AssetIndex.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/AssetIndexInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/AssetObject.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CircleDependencyException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ClassicLibrary.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ClassicVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/CompatibilityRule.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DownloadInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DownloadType.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ExtractRules.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/GameException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/GameRepository.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/GameVersion.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/IdDownloadInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/LaunchOptions.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/LibrariesDownloadInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Library.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/LibraryDownloadInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/LoggingInfo.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/OSRestriction.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ReleaseType.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/RuledArgument.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/SimpleVersionProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/StringArgument.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/VersionNotFoundException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/VersionProvider.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/World.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/ExitWaiter.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/Launcher.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/NotDecompressingNativesException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/PermissionException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/ProcessCreationException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/ProcessListener.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/StreamPump.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseCompletionException.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseCompletionTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseInstallTask.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseManifest.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseManifestFile.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseManifestMinecraft.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Hello Minecraft! Launcher
  * Copyright (C) 2019  huangyuhui <huanghongxun2008@126.com> and contributors
  *

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TwoLineListItem.java
Patch:
@@ -53,6 +53,7 @@ public TwoLineListItem(String titleString, String subtitleString) {
     }
 
     public TwoLineListItem() {
+        setMouseTransparent(true);
         Label lblTitle = new Label();
         lblTitle.textFillProperty().bind(titleFill);
         lblTitle.fontProperty().bind(titleFont);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseInstallTask.java
Patch:
@@ -23,6 +23,7 @@
 import org.jackhuang.hmcl.download.GameBuilder;
 import org.jackhuang.hmcl.game.DefaultGameRepository;
 import org.jackhuang.hmcl.task.Task;
+import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.gson.JsonUtils;
 import org.jackhuang.hmcl.util.io.FileUtils;
 
@@ -111,7 +112,7 @@ public Collection<Task> getDependencies() {
     public void execute() throws Exception {
         if (config != null)
             for (CurseManifestFile oldCurseManifestFile : config.getManifest().getFiles()) {
-                if (oldCurseManifestFile.getFileName() == null) continue;
+                if (StringUtils.isBlank(oldCurseManifestFile.getFileName())) continue;
                 File oldFile = new File(run, "mods/" + oldCurseManifestFile.getFileName());
                 if (!oldFile.exists()) continue;
                 if (manifest.getFiles().stream().noneMatch(oldCurseManifestFile::equals))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/LaunchOptions.java
Patch:
@@ -43,7 +43,7 @@ public class LaunchOptions implements Serializable {
     private String serverIp;
     private String wrapper;
     private String proxyHost;
-    private String proxyPort;
+    private int proxyPort;
     private String proxyUser;
     private String proxyPass;
     private boolean noGeneratedJVMArgs;
@@ -160,7 +160,7 @@ public String getProxyHost() {
     /**
      * the port of the proxy address.
      */
-    public String getProxyPort() {
+    public int getProxyPort() {
         return proxyPort;
     }
 
@@ -275,7 +275,7 @@ public Builder setProxyHost(String proxyHost) {
             return this;
         }
 
-        public Builder setProxyPort(String proxyPort) {
+        public Builder setProxyPort(int proxyPort) {
             options.proxyPort = proxyPort;
             return this;
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -162,11 +162,11 @@ private CommandBuilder generateCommandLine(File nativeFolder) throws IOException
         if (options.isFullscreen())
             res.add("--fullscreen");
 
-        if (StringUtils.isNotBlank(options.getProxyHost()) && StringUtils.isNotBlank(options.getProxyPort())) {
+        if (StringUtils.isNotBlank(options.getProxyHost())) {
             res.add("--proxyHost");
             res.add(options.getProxyHost());
             res.add("--proxyPort");
-            res.add(options.getProxyPort());
+            res.add(String.valueOf(options.getProxyPort()));
             if (StringUtils.isNotBlank(options.getProxyUser()) && StringUtils.isNotBlank(options.getProxyPass())) {
                 res.add("--proxyUser");
                 res.add(options.getProxyUser());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/FileUtils.java
Patch:
@@ -250,7 +250,8 @@ public static void moveFile(File srcFile, File destFile) throws IOException {
     }
 
     public static boolean makeDirectory(File directory) {
-        return directory.isDirectory() || directory.mkdirs();
+        directory.mkdirs();
+        return directory.isDirectory();
     }
 
     public static boolean makeFile(File file) {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Theme.java
Patch:
@@ -84,7 +84,7 @@ public String[] getStylesheets() {
                     .replace("%base-color%", color)
                     .replace("%font-color%", getColorDisplayName(getForegroundColor())));
             css = temp.toURI().toString();
-        } catch (IOException e) {
+        } catch (IOException | NullPointerException e) {
             Logging.LOG.log(Level.SEVERE, "Unable to create theme stylesheet. Fallback to blue theme.", e);
             css = "/assets/css/blue.css";
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ExportWizardProvider.java
Patch:
@@ -81,11 +81,14 @@ public void execute() throws Exception {
                     dependency = dependency.then(Task.of(() -> {
                         try (Zipper zip = new Zipper(modpackFile.toPath())) {
                             Config exported = new Config();
+
                             exported.setBackgroundImageType(config().getBackgroundImageType());
                             exported.setBackgroundImage(config().getBackgroundImage());
                             exported.setTheme(config().getTheme());
                             exported.setDownloadType(config().getDownloadType());
+                            exported.setPreferredLoginType(config().getPreferredLoginType());
                             exported.getAuthlibInjectorServers().setAll(config().getAuthlibInjectorServers());
+
                             zip.putTextFile(exported.toJson(), ConfigHolder.CONFIG_FILENAME);
                             zip.putFile(tempModpack, "modpack.zip");
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -62,7 +62,7 @@ private Accounts() {}
     public static final OfflineAccountFactory FACTORY_OFFLINE = OfflineAccountFactory.INSTANCE;
     public static final YggdrasilAccountFactory FACTORY_YGGDRASIL = new YggdrasilAccountFactory(MojangYggdrasilProvider.INSTANCE);
     public static final AuthlibInjectorAccountFactory FACTORY_AUTHLIB_INJECTOR = new AuthlibInjectorAccountFactory(
-            new AuthlibInjectorDownloader(Metadata.HMCL_DIRECTORY, DownloadProviders::getDownloadProvider)::getArtifactInfo,
+            new AuthlibInjectorDownloader(Metadata.HMCL_DIRECTORY, DownloadProviders::getDownloadProvider),
             Accounts::getOrCreateAuthlibInjectorServer);
 
     // ==== login type / account factory mapping ====

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/UpdateHandler.java
Patch:
@@ -29,6 +29,7 @@
 import org.jackhuang.hmcl.ui.construct.DialogCloseEvent;
 import org.jackhuang.hmcl.ui.construct.MessageBox;
 import org.jackhuang.hmcl.util.StringUtils;
+import org.jackhuang.hmcl.util.io.FileUtils;
 import org.jackhuang.hmcl.util.io.JarUtils;
 import org.jackhuang.hmcl.util.platform.JavaVersion;
 
@@ -45,7 +46,6 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.jackhuang.hmcl.ui.FXUtils.checkFxUserThread;
 import static org.jackhuang.hmcl.util.Lang.thread;
 import static org.jackhuang.hmcl.util.Logging.LOG;
@@ -242,7 +242,7 @@ private static void breakForceUpdateFeature() {
         Path hmclVersionJson = Metadata.HMCL_DIRECTORY.resolve("hmclver.json");
         if (Files.isRegularFile(hmclVersionJson)) {
             try {
-                Map<?, ?> content = new Gson().fromJson(new String(Files.readAllBytes(hmclVersionJson), UTF_8), Map.class);
+                Map<?, ?> content = new Gson().fromJson(FileUtils.readText(hmclVersionJson), Map.class);
                 Object ver = content.get("ver");
                 if (ver instanceof String && ((String) ver).startsWith("3.")) {
                     Files.delete(hmclVersionJson);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/CompressingUtils.java
Patch:
@@ -20,7 +20,6 @@
 import java.io.File;
 import java.io.IOException;
 import java.nio.file.FileSystem;
-import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.spi.FileSystemProvider;
 import java.util.HashMap;
@@ -88,7 +87,7 @@ public static FileSystem createZipFileSystem(Path zipFile, boolean create, boole
      */
     public static String readTextZipEntry(File zipFile, String name) throws IOException {
         try (FileSystem fs = createReadOnlyZipFileSystem(zipFile.toPath())) {
-            return new String(Files.readAllBytes(fs.getPath(name)));
+            return FileUtils.readText(fs.getPath(name));
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItem.java
Patch:
@@ -44,7 +44,7 @@ public AccountListItem(Account account) {
         getStyleClass().clear();
         setUserData(account);
 
-        StringBuilder subtitleString = new StringBuilder(Accounts.getAccountTypeName(account));
+        StringBuilder subtitleString = new StringBuilder(Accounts.getLocalizedLoginTypeName(Accounts.getAccountFactory(account)));
         if (account instanceof AuthlibInjectorAccount) {
             AuthlibInjectorServer server = ((AuthlibInjectorAccount) account).getServer();
             subtitleString.append(", ").append(i18n("account.injector.server")).append(": ").append(server.getName());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAccountPane.java
Patch:
@@ -80,11 +80,11 @@ public AddAccountPane() {
         selectDefaultServer();
 
         cboType.getItems().setAll(Accounts.FACTORY_OFFLINE, Accounts.FACTORY_YGGDRASIL, Accounts.FACTORY_AUTHLIB_INJECTOR);
-        cboType.setConverter(stringConverter(Accounts::getAccountTypeName));
+        cboType.setConverter(stringConverter(Accounts::getLocalizedLoginTypeName));
         // try selecting the preferred login type
         cboType.getSelectionModel().select(
                 cboType.getItems().stream()
-                        .filter(type -> Accounts.getAccountTypeName(type).equals(config().getPreferredLoginType()))
+                        .filter(type -> Accounts.getLoginType(type).equals(config().getPreferredLoginType()))
                         .findFirst()
                         .orElse(Accounts.FACTORY_OFFLINE));
 
@@ -97,7 +97,7 @@ public AddAccountPane() {
         ReadOnlyObjectProperty<AccountFactory<?>> loginType = cboType.getSelectionModel().selectedItemProperty();
 
         // remember the last used login type
-        loginType.addListener((observable, oldValue, newValue) -> config().setPreferredLoginType(Accounts.getAccountTypeName(newValue)));
+        loginType.addListener((observable, oldValue, newValue) -> config().setPreferredLoginType(Accounts.getLoginType(newValue)));
 
         txtPassword.visibleProperty().bind(loginType.isNotEqualTo(Accounts.FACTORY_OFFLINE));
         lblPassword.visibleProperty().bind(txtPassword.visibleProperty());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -61,7 +61,7 @@ public Version(boolean resolved, String id, String minecraftArguments, Arguments
         this.jar = jar;
         this.assetIndex = assetIndex;
         this.assets = assets;
-        this.libraries = new LinkedList<>(libraries);
+        this.libraries = libraries == null ? new LinkedList<>() : new LinkedList<>(libraries);
         this.compatibilityRules = compatibilityRules == null ? null : new LinkedList<>(compatibilityRules);
         this.downloads = downloads == null ? null : new HashMap<>(downloads);
         this.logging = logging == null ? null : new HashMap<>(logging);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameList.java
Patch:
@@ -39,6 +39,7 @@
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
 import java.util.Comparator;
+import java.util.Date;
 import java.util.List;
 import java.util.stream.Collectors;
 
@@ -67,7 +68,8 @@ private void loadVersions(Profile profile) {
         toggleGroup.getProperties().put("ReferenceHolder", listenerHolder);
         List<GameListItem> children = repository.getVersions().parallelStream()
                 .filter(version -> !version.isHidden())
-                .sorted(Comparator.comparing(Version::getReleaseTime).thenComparing(a -> VersionNumber.asVersion(a.getId())))
+                .sorted(Comparator.comparing((Version version) -> version.getReleaseTime() == null ? new Date(0L) : version.getReleaseTime())
+                        .thenComparing(a -> VersionNumber.asVersion(a.getId())))
                 .map(version -> new GameListItem(toggleGroup, profile, version.getId()))
                 .collect(Collectors.toList());
         JFXUtilities.runInFX(() -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -177,7 +177,7 @@ public static MainPage getMainPage() {
                 HMCLGameRepository repository = profile.getRepository();
                 List<Node> children = repository.getVersions().parallelStream()
                         .filter(version -> !version.isHidden())
-                        .sorted(Comparator.comparing((Version version) -> version.getReleaseTime() == null ? new Date() : version.getReleaseTime())
+                        .sorted(Comparator.comparing((Version version) -> version.getReleaseTime() == null ? new Date(0L) : version.getReleaseTime())
                                 .thenComparing(a -> VersionNumber.asVersion(a.getId())))
                         .map(version -> {
                             Node node = PopupMenu.wrapPopupMenuItem(new GameItem(profile, version.getId()));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -51,6 +51,7 @@
 
 import java.io.File;
 import java.util.Comparator;
+import java.util.Date;
 import java.util.List;
 import java.util.function.Consumer;
 import java.util.stream.Collectors;
@@ -176,7 +177,8 @@ public static MainPage getMainPage() {
                 HMCLGameRepository repository = profile.getRepository();
                 List<Node> children = repository.getVersions().parallelStream()
                         .filter(version -> !version.isHidden())
-                        .sorted(Comparator.comparing(Version::getReleaseTime).thenComparing(a -> VersionNumber.asVersion(a.getId())))
+                        .sorted(Comparator.comparing((Version version) -> version.getReleaseTime() == null ? new Date() : version.getReleaseTime())
+                                .thenComparing(a -> VersionNumber.asVersion(a.getId())))
                         .map(version -> {
                             Node node = PopupMenu.wrapPopupMenuItem(new GameItem(profile, version.getId()));
                             node.setOnMouseClicked(e -> profile.setSelectedVersion(version.getId()));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/FileUtils.java
Patch:
@@ -95,7 +95,7 @@ public static void writeText(File file, String text, Charset charset) throws IOE
 
     public static void writeBytes(File file, byte[] array) throws IOException {
         Files.createDirectories(file.toPath().getParent());
-        Files.write(file.toPath(), array, StandardOpenOption.CREATE);
+        Files.write(file.toPath(), array);
     }
 
     public static void deleteDirectory(File directory)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -30,7 +30,8 @@ public class GameAdvancedListItem extends AdvancedListItem {
 
     public GameAdvancedListItem() {
         FXUtils.onChangeAndOperate(Profiles.selectedVersionProperty(), version -> {
-            if (Profiles.getSelectedProfile().getRepository().hasVersion(version)) {
+            if (version != null && Profiles.getSelectedProfile() != null &&
+                    Profiles.getSelectedProfile().getRepository().hasVersion(version)) {
                 setTitle(version);
                 setSubtitle(null);
                 setImage(Profiles.getSelectedProfile().getRepository().getVersionIconImage(version));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -89,7 +89,7 @@ public final class VersionPage extends StackPane implements DecoratorPage {
                 new IconedMenuItem(null, i18n("folder.config"), FXUtils.withJFXPopupClosing(() -> onBrowse("config"), browsePopup)),
                 new IconedMenuItem(null, i18n("folder.resourcepacks"), FXUtils.withJFXPopupClosing(() -> onBrowse("resourcepacks"), browsePopup)),
                 new IconedMenuItem(null, i18n("folder.screenshots"), FXUtils.withJFXPopupClosing(() -> onBrowse("screenshots"), browsePopup)),
-                new IconedMenuItem(null, i18n("folder.saves"), FXUtils.withJFXPopupClosing(() -> onBrowse("resourcepacks"), browsePopup))
+                new IconedMenuItem(null, i18n("folder.saves"), FXUtils.withJFXPopupClosing(() -> onBrowse("saves"), browsePopup))
         );
 
         PopupMenu managementList = new PopupMenu();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/VersionPage.java
Patch:
@@ -89,7 +89,7 @@ public final class VersionPage extends StackPane implements DecoratorPage {
                 new IconedMenuItem(null, i18n("folder.config"), FXUtils.withJFXPopupClosing(() -> onBrowse("config"), browsePopup)),
                 new IconedMenuItem(null, i18n("folder.resourcepacks"), FXUtils.withJFXPopupClosing(() -> onBrowse("resourcepacks"), browsePopup)),
                 new IconedMenuItem(null, i18n("folder.screenshots"), FXUtils.withJFXPopupClosing(() -> onBrowse("screenshots"), browsePopup)),
-                new IconedMenuItem(null, i18n("folder.saves"), FXUtils.withJFXPopupClosing(() -> onBrowse("resourcepacks"), browsePopup))
+                new IconedMenuItem(null, i18n("folder.saves"), FXUtils.withJFXPopupClosing(() -> onBrowse("saves"), browsePopup))
         );
 
         PopupMenu managementList = new PopupMenu();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/FileUtils.java
Patch:
@@ -94,7 +94,8 @@ public static void writeText(File file, String text, Charset charset) throws IOE
     }
 
     public static void writeBytes(File file, byte[] array) throws IOException {
-        Files.write(file.toPath(), array);
+        Files.createDirectories(file.toPath().getParent());
+        Files.write(file.toPath(), array, StandardOpenOption.CREATE);
     }
 
     public static void deleteDirectory(File directory)

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Theme.java
Patch:
@@ -43,7 +43,7 @@ public class Theme {
             Color.web("#43A047"), // green
             Color.web("#E67E22"), // orange
             Color.web("#9C27B0"), // purple
-            Color.web("#F44336")  // red
+            Color.web("#B71C1C")  // red
     };
 
     private final String color;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -218,9 +218,9 @@ public void execute() throws Exception {
 
                 HttpURLConnection con = NetworkUtils.createConnection(url);
                 if (checkETag) repository.injectConnection(con);
-                con.connect();
+                con = NetworkUtils.resolveConnection(con);
 
-                if (con.getResponseCode() == 304) {
+                if (con.getResponseCode() == HttpURLConnection.HTTP_NOT_MODIFIED) {
                     // Handle cache
                     Path cache = repository.getCachedRemoteFile(con);
                     FileUtils.copyFile(cache.toFile(), file);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -296,7 +296,7 @@ private static void checkGameState(Profile profile, VersionSetting setting, Vers
         }
 
         // Minecraft 1.13 may crash when generating world on Java 8 earlier than 1.8.0_51
-        VersionNumber JAVA_8 = VersionNumber.asVersion("1.8.0.51");
+        VersionNumber JAVA_8 = VersionNumber.asVersion("1.8.0_51");
         if (!flag && gameVersion.compareTo(VersionNumber.asVersion("1.13")) >= 0 && java.getParsedVersion() == JavaVersion.JAVA_8 && java.getVersionNumber().compareTo(JAVA_8) < 0) {
             Optional<JavaVersion> java8 = JavaVersion.getJavas().stream()
                     .filter(javaVersion -> javaVersion.getVersionNumber().compareTo(JAVA_8) >= 0)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -34,6 +34,7 @@
 import javafx.scene.shape.Rectangle;
 import javafx.util.Duration;
 import org.jackhuang.hmcl.game.HMCLGameRepository;
+import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.setting.Profile;
 import org.jackhuang.hmcl.setting.Profiles;
 import org.jackhuang.hmcl.setting.Theme;
@@ -49,6 +50,7 @@
 import org.jackhuang.hmcl.util.javafx.MultiStepBinding;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
+import java.util.Comparator;
 import java.util.List;
 import java.util.stream.Collectors;
 
@@ -130,7 +132,7 @@ private void loadVersions(Profile profile) {
         HMCLGameRepository repository = profile.getRepository();
         List<Node> children = repository.getVersions().parallelStream()
                 .filter(version -> !version.isHidden())
-                .sorted((a, b) -> VersionNumber.COMPARATOR.compare(VersionNumber.asVersion(a.getId()), VersionNumber.asVersion(b.getId())))
+                .sorted(Comparator.comparing(Version::getReleaseTime).thenComparing(a -> VersionNumber.asVersion(a.getId())))
                 .map(version -> {
                     StackPane pane = new StackPane();
                     GameItem item = new GameItem(profile, version.getId());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameList.java
Patch:
@@ -25,9 +25,9 @@
 import javafx.scene.control.Skin;
 import javafx.scene.control.ToggleGroup;
 import org.jackhuang.hmcl.event.EventBus;
-import org.jackhuang.hmcl.event.RefreshedVersionsEvent;
 import org.jackhuang.hmcl.event.RefreshingVersionsEvent;
 import org.jackhuang.hmcl.game.HMCLGameRepository;
+import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.setting.Profile;
 import org.jackhuang.hmcl.setting.Profiles;
 import org.jackhuang.hmcl.ui.Controllers;
@@ -37,6 +37,7 @@
 import org.jackhuang.hmcl.util.i18n.I18n;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
+import java.util.Comparator;
 import java.util.List;
 import java.util.stream.Collectors;
 
@@ -65,7 +66,7 @@ private void loadVersions(Profile profile) {
         toggleGroup.getProperties().put("ReferenceHolder", listenerHolder);
         List<GameListItem> children = repository.getVersions().parallelStream()
                 .filter(version -> !version.isHidden())
-                .sorted((a, b) -> VersionNumber.COMPARATOR.compare(VersionNumber.asVersion(a.getId()), VersionNumber.asVersion(b.getId())))
+                .sorted(Comparator.comparing(Version::getReleaseTime).thenComparing(a -> VersionNumber.asVersion(a.getId())))
                 .map(version -> new GameListItem(toggleGroup, profile, version.getId()))
                 .collect(Collectors.toList());
         JFXUtilities.runInFX(() -> {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/WorldListItem.java
Patch:
@@ -11,7 +11,6 @@
 import org.jackhuang.hmcl.game.World;
 import org.jackhuang.hmcl.ui.Controllers;
 import org.jackhuang.hmcl.ui.wizard.SinglePageWizardProvider;
-import org.jackhuang.hmcl.util.versioning.IntVersionNumber;
 import org.jackhuang.hmcl.util.versioning.VersionNumber;
 
 import java.io.File;
@@ -67,7 +66,7 @@ public void export() {
 
     public void manageDatapacks() {
         if (world.getGameVersion() == null || // old game will not write game version to level.dat
-                (IntVersionNumber.isIntVersionNumber(world.getGameVersion()) // we don't parse snapshot version
+                (VersionNumber.isIntVersionNumber(world.getGameVersion()) // we don't parse snapshot version
                         && VersionNumber.asVersion(world.getGameVersion()).compareTo(VersionNumber.asVersion("1.13")) < 0)) {
             Controllers.dialog(i18n("world.datapack.1_13"));
             return;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineBMCLVersionList.java
Patch:
@@ -70,8 +70,9 @@ public void execute() {
 
                     if (StringUtils.isBlank(element.getGameVersion()))
                         continue;
-                    VersionNumber.parseVersion(element.getGameVersion())
-                            .ifPresent(gameVersion -> versions.put(gameVersion, new OptiFineRemoteVersion(gameVersion, version, () -> mirror, isPre)));
+
+                    String gameVersion = VersionNumber.normalize(element.getGameVersion());
+                    versions.put(gameVersion, new OptiFineRemoteVersion(gameVersion, version, () -> mirror, isPre));
                 }
             }
         };

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/platform/JavaVersion.java
Patch:
@@ -70,7 +70,7 @@ public Platform getPlatform() {
     }
 
     public VersionNumber getVersionNumber() {
-        return VersionNumber.asVersion(longVersion.replace('_',  '.'));
+        return VersionNumber.asVersion(longVersion);
     }
 
     /**

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AddAccountPane.java
Patch:
@@ -31,6 +31,7 @@
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.StackPane;
 import org.jackhuang.hmcl.auth.*;
+import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorDownloadException;
 import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorServer;
 import org.jackhuang.hmcl.auth.yggdrasil.GameProfile;
 import org.jackhuang.hmcl.auth.yggdrasil.RemoteAuthenticationException;
@@ -278,6 +279,8 @@ else if (remoteMessage.contains("Invalid username or password"))
                     return i18n("account.failed.invalid_password");
             }
             return exception.getMessage();
+        } else if (exception instanceof AuthlibInjectorDownloadException) {
+            return i18n("account.failed.injector_download_failure");
         } else {
             return exception.getClass().getName() + ": " + exception.getLocalizedMessage();
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorAccount.java
Patch:
@@ -69,7 +69,7 @@ private AuthInfo inject(ExceptionalSupplier<AuthInfo, AuthenticationException> l
             try {
                 return authlibInjectorDownloader.get();
             } catch (IOException e) {
-                throw new CompletionException(new AuthenticationException("Failed to download authlib-injector", e));
+                throw new CompletionException(new AuthlibInjectorDownloadException(e));
             }
         });
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -90,13 +90,13 @@ public static <T> void onWeakChange(ObservableValue<T> value, Consumer<T> consum
     }
 
     public static <T> void onChangeAndOperate(ObservableValue<T> value, Consumer<T> consumer) {
-        onChange(value, consumer);
         consumer.accept(value.getValue());
+        onChange(value, consumer);
     }
 
     public static <T> void onWeakChangeAndOperate(ObservableValue<T> value, Consumer<T> consumer) {
-        onWeakChange(value, consumer);
         consumer.accept(value.getValue());
+        onWeakChange(value, consumer);
     }
 
     public static void runLaterIf(BooleanSupplier condition, Runnable runnable) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/MultiFileItem.java
Patch:
@@ -24,6 +24,7 @@
 import javafx.beans.property.*;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
+import javafx.geometry.Insets;
 import javafx.geometry.Pos;
 import javafx.scene.Node;
 import javafx.scene.control.Label;
@@ -138,7 +139,7 @@ public Node createChildren(String title, T userData) {
 
     public Node createChildren(String title, String subtitle, T userData) {
         BorderPane pane = new BorderPane();
-        pane.setStyle("-fx-padding: 3;");
+        pane.setPadding(new Insets(3));
         FXUtils.setLimitHeight(pane, 20);
 
         JFXRadioButton left = new JFXRadioButton(title);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/javafx/ExtendedProperties.java
Patch:
@@ -130,7 +130,7 @@ public static ObjectProperty<Boolean> reservedSelectedPropertyFor(CheckBox check
         return (ObjectProperty<Boolean>) checkbox.getProperties().computeIfAbsent(
                 PROP_PREFIX + ".checkbox.reservedSelected",
                 any -> new MappedProperty<>(checkbox, "ext.reservedSelected",
-                        checkbox.selectedProperty(), it -> !it, it -> !it));
+                        checkbox.selectedProperty(), it -> !(boolean) it, it -> !(boolean) it));
     }
     // ====
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItem.java
Patch:
@@ -18,8 +18,8 @@
 package org.jackhuang.hmcl.ui.account;
 
 import javafx.beans.property.*;
+import javafx.scene.control.RadioButton;
 import javafx.scene.control.Skin;
-import javafx.scene.control.ToggleButton;
 import javafx.scene.image.Image;
 import org.jackhuang.hmcl.auth.Account;
 import org.jackhuang.hmcl.auth.authlibinjector.AuthlibInjectorAccount;
@@ -32,7 +32,7 @@
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
-public class AccountListItem extends ToggleButton {
+public class AccountListItem extends RadioButton {
 
     private final Account account;
     private final StringProperty title = new SimpleStringProperty();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfileListItem.java
Patch:
@@ -19,13 +19,13 @@
 
 import javafx.beans.property.SimpleStringProperty;
 import javafx.beans.property.StringProperty;
+import javafx.scene.control.RadioButton;
 import javafx.scene.control.Skin;
-import javafx.scene.control.ToggleButton;
 
 import org.jackhuang.hmcl.setting.Profile;
 import org.jackhuang.hmcl.setting.Profiles;
 
-public class ProfileListItem extends ToggleButton {
+public class ProfileListItem extends RadioButton {
     private final Profile profile;
     private final StringProperty title = new SimpleStringProperty();
     private final StringProperty subtitle = new SimpleStringProperty();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/profile/ProfilePage.java
Patch:
@@ -36,6 +36,7 @@
 import org.jackhuang.hmcl.util.StringUtils;
 
 import java.io.File;
+import java.nio.file.Paths;
 import java.util.Optional;
 
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
@@ -60,7 +61,7 @@ public ProfilePage(Profile profile) {
         title = new ReadOnlyStringWrapper(this, "title",
                 profile == null ? i18n("profile.new") : i18n("profile") + " - " + profileDisplayName);
         location = new SimpleStringProperty(this, "location",
-                Optional.ofNullable(profile).map(Profile::getGameDir).map(File::getAbsolutePath).orElse(""));
+                Optional.ofNullable(profile).map(Profile::getGameDir).map(File::getAbsolutePath).orElse(".minecraft"));
 
         FXUtils.loadFXML(this, "/assets/fxml/profile.fxml");
 

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackExportTask.java
Patch:
@@ -61,6 +61,8 @@ public void execute() throws Exception {
         Logging.LOG.info("Compressing game files without some files in blacklist, including files or directories: usernamecache.json, asm, logs, backups, versions, assets, usercache.json, libraries, crash-reports, launcher_profiles.json, NVIDIA, TCNodeTracker");
         try (Zipper zip = new Zipper(output.toPath())) {
             zip.putDirectory(repository.getRunDirectory(version).toPath(), "minecraft", path -> {
+                if (path.isEmpty())
+                    return true;
                 for (String s : blackList)
                     if (path.equals(s))
                         return false;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackManager.java
Patch:
@@ -36,7 +36,7 @@ public final class HMCLModpackManager {
     public static final List<String> MODPACK_BLACK_LIST = Lang.immutableListOf(
             "usernamecache.json", "usercache.json", // Minecraft
             "launcher_profiles.json", "launcher.pack.lzma", // Minecraft Launcher
-            "pack.json", "launcher.jar", "hmclmc.log", // HMCL
+            "pack.json", "launcher.jar", "hmclmc.log", "cache", // HMCL
             "manifest.json", "minecraftinstance.json", ".curseclient", // Curse
             "minetweaker.log", // Mods
             "jars", "logs", "versions", "assets", "libraries", "crash-reports", "NVIDIA", "AMD", "screenshots", "natives", "native", "$native", "server-resource-packs", // Minecraft

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/io/Zipper.java
Patch:
@@ -76,7 +76,7 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IO
                     return FileVisitResult.SKIP_SUBTREE;
                 }
                 String relativePath = source.relativize(file).normalize().toString();
-                if (filter != null && !filter.test(relativePath)) {
+                if (filter != null && !filter.test(relativePath.replace('\\', '/'))) {
                     return FileVisitResult.SKIP_SUBTREE;
                 }
                 Files.copy(file, root.resolve(relativePath));
@@ -86,7 +86,7 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IO
             @Override
             public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {
                 String relativePath = source.relativize(dir).normalize().toString();
-                if (filter != null && !filter.test(relativePath)) {
+                if (filter != null && !filter.test(relativePath.replace('\\', '/'))) {
                     return FileVisitResult.SKIP_SUBTREE;
                 }
                 Path path = root.resolve(relativePath);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItem.java
Patch:
@@ -87,8 +87,7 @@ public void launch() {
     }
 
     public void modifyGameSettings() {
-        Controllers.getVersionPage().load(version, profile);
-        Controllers.navigate(Controllers.getVersionPage());
+        Versions.modifyGameSettings(profile, version);
     }
 
     public void generateLaunchScript() {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -54,14 +54,14 @@ private Settings() {
 
         CacheRepository.setInstance(HMCLCacheRepository.REPOSITORY);
         HMCLCacheRepository.REPOSITORY.directoryProperty().bind(Bindings.createStringBinding(() -> {
-            String str = config().getCommonDirectory();
+            String str = getCommonDirectory();
             try {
                 Paths.get(str);
                 return str;
             } catch (InvalidPathException e) {
                 return getDefaultCommonDirectory();
             }
-        }, config().commonDirectoryProperty()));
+        }, config().commonDirectoryProperty(), config().commonDirTypeProperty()));
     }
 
     public Font getFont() {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -95,7 +95,7 @@ public static Config fromJson(String json) throws JsonParseException {
     private BooleanProperty hasProxyAuth = new SimpleBooleanProperty();
 
     @SerializedName("proxyType")
-    private ObjectProperty<Proxy.Type> proxyType = new SimpleObjectProperty<>(Proxy.Type.DIRECT);
+    private ObjectProperty<Proxy.Type> proxyType = new SimpleObjectProperty<>(Proxy.Type.HTTP);
 
     @SerializedName("proxyHost")
     private StringProperty proxyHost = new SimpleStringProperty();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/Versions.java
Patch:
@@ -92,13 +92,10 @@ public static void updateVersion(Profile profile, String version) {
                 region.set(Controllers.taskDialog(executor, i18n("modpack.update"), ""));
                 executor.start();
             } catch (UnsupportedModpackException e) {
-                region.get().fireEvent(new DialogCloseEvent());
                 Controllers.dialog(i18n("modpack.unsupported"), i18n("message.error"), MessageBox.ERROR_MESSAGE);
             } catch (MismatchedModpackTypeException e) {
-                region.get().fireEvent(new DialogCloseEvent());
                 Controllers.dialog(i18n("modpack.mismatched_type"), i18n("message.error"), MessageBox.ERROR_MESSAGE);
             } catch (IOException e) {
-                region.get().fireEvent(new DialogCloseEvent());
                 Controllers.dialog(i18n("modpack.invalid"), i18n("message.error"), MessageBox.ERROR_MESSAGE);
             }
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultCacheRepository.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hmcl.download;
 
+import com.google.gson.JsonParseException;
 import org.jackhuang.hmcl.download.game.LibraryDownloadTask;
 import org.jackhuang.hmcl.game.Library;
 import org.jackhuang.hmcl.game.LibraryDownloadInfo;
@@ -62,7 +63,7 @@ public void changeDirectory(Path commonDir) {
                 index = JsonUtils.GSON.fromJson(FileUtils.readText(indexFile.toFile()), Index.class);
             else
                 index = new Index();
-        } catch (IOException e) {
+        } catch (IOException | JsonParseException e) {
             Logging.LOG.log(Level.WARNING, "Unable to read index file", e);
             index = new Index();
         } finally {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/forge/ForgeInstallTask.java
Patch:
@@ -89,9 +89,7 @@ public void execute() throws Exception {
             if (stream == null)
                 throw new IOException("Malformed forge installer file, install_profile.json does not exist.");
             String json = IOUtils.readFullyAsString(stream);
-            ForgeInstallProfile installProfile = JsonUtils.GSON.fromJson(json, ForgeInstallProfile.class);
-            if (installProfile == null)
-                throw new IOException("Malformed forge installer file, install_profile.json does not exist.");
+            ForgeInstallProfile installProfile = JsonUtils.fromNonNullJson(json, ForgeInstallProfile.class);
             
             // unpack the universal jar in the installer file.
             Library forgeLibrary = Library.fromName(installProfile.getInstall().getPath());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -18,7 +18,6 @@
 package org.jackhuang.hmcl.game;
 
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonSyntaxException;
 import org.jackhuang.hmcl.event.*;
 import org.jackhuang.hmcl.task.Schedulers;
 import org.jackhuang.hmcl.util.Logging;
@@ -108,11 +107,11 @@ public File getVersionJson(String id) {
         return new File(getVersionRoot(id), id + ".json");
     }
 
-    public Version readVersionJson(String id) throws IOException, JsonSyntaxException {
+    public Version readVersionJson(String id) throws IOException, JsonParseException {
         return readVersionJson(getVersionJson(id));
     }
 
-    public Version readVersionJson(File file) throws IOException, JsonSyntaxException {
+    public Version readVersionJson(File file) throws IOException, JsonParseException {
         return JsonUtils.GSON.fromJson(FileUtils.readText(file), Version.class);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/Datapack.java
Patch:
@@ -112,7 +112,7 @@ public void loadFromZip() throws IOException {
                 try {
                     PackMcMeta pack = JsonUtils.fromNonNullJson(FileUtils.readText(mcmeta), PackMcMeta.class);
                     info.add(new Pack(path, FileUtils.getNameWithoutExtension(path), pack.getPackInfo().getDescription(), this));
-                } catch (IOException e) {
+                } catch (IOException | JsonParseException e) {
                     Logging.LOG.log(Level.WARNING, "Failed to read datapack " + path, e);
                 }
             } else {
@@ -147,7 +147,7 @@ private void loadFromDir(Path dir) throws IOException {
                         PackMcMeta pack = enabled ? JsonUtils.fromNonNullJson(FileUtils.readText(mcmeta), PackMcMeta.class)
                                 : JsonUtils.fromNonNullJson(FileUtils.readText(mcmetaDisabled), PackMcMeta.class);
                         info.add(new Pack(enabled ? mcmeta : mcmetaDisabled, FileUtils.getName(subDir), pack.getPackInfo().getDescription(), this));
-                    } catch (IOException e) {
+                    } catch (IOException | JsonParseException e) {
                         Logging.LOG.log(Level.WARNING, "Failed to read datapack " + subDir, e);
                     }
                 } else if (Files.isRegularFile(subDir)) {
@@ -169,7 +169,7 @@ private void loadFromDir(Path dir) throws IOException {
 
                         PackMcMeta pack = JsonUtils.fromNonNullJson(FileUtils.readText(mcmeta), PackMcMeta.class);
                         info.add(new Pack(subDir, name, pack.getPackInfo().getDescription(), this));
-                    } catch (IOException e) {
+                    } catch (IOException | JsonParseException e) {
                         Logging.LOG.log(Level.WARNING, "Failed to read datapack " + subDir, e);
                     }
                 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MultiMCManifest.java
Patch:
@@ -63,8 +63,8 @@ public static MultiMCManifest readMultiMCModpackManifest(File zipFile) throws IO
             String json = IOUtils.readFullyAsString(Files.newInputStream(mmcPack));
             MultiMCManifest manifest = JsonUtils.fromNonNullJson(json, MultiMCManifest.class);
 
-            if (manifest != null && manifest.getComponents() == null)
-                    throw new IOException("mmc-pack.json malformed.");
+            if (manifest.getComponents() == null)
+                throw new IOException("mmc-pack.json malformed.");
 
             return manifest;
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MultiMCModpackInstallTask.java
Patch:
@@ -125,6 +125,7 @@ public void execute() throws Exception {
             if (Files.exists(patches))
                 for (Path patchJson : Files.newDirectoryStream(patches)) {
                     if (patchJson.toString().endsWith(".json")) {
+                        // If json is malformed, we should stop installing this modpack instead of skipping it.
                         MultiMCInstancePatch patch = JsonUtils.GSON.fromJson(IOUtils.readFullyAsString(Files.newInputStream(patchJson)), MultiMCInstancePatch.class);
                         List<String> newArguments = new LinkedList<>();
                         for (String arg : patch.getTweakers()) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilService.java
Patch:
@@ -8,6 +8,7 @@
 import org.jackhuang.hmcl.auth.ServerResponseMalformedException;
 import org.jackhuang.hmcl.util.StringUtils;
 import org.jackhuang.hmcl.util.gson.UUIDTypeAdapter;
+import org.jackhuang.hmcl.util.gson.ValidationTypeAdapterFactory;
 import org.jackhuang.hmcl.util.io.NetworkUtils;
 
 import java.io.IOException;
@@ -187,6 +188,7 @@ private class ErrorResponse {
     private static final Gson GSON = new GsonBuilder()
             .registerTypeAdapter(PropertyMap.class, PropertyMap.Serializer.INSTANCE)
             .registerTypeAdapter(UUID.class, UUIDTypeAdapter.INSTANCE)
+            .registerTypeAdapterFactory(ValidationTypeAdapterFactory.INSTANCE)
             .create();
 
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountListItemSkin.java
Patch:
@@ -59,7 +59,6 @@ public AccountListItemSkin(AccountListItem skinnable) {
         ImageView imageView = new ImageView();
         FXUtils.limitSize(imageView, 32, 32);
         imageView.imageProperty().bind(skinnable.imageProperty());
-        imageView.viewportProperty().bind(skinnable.viewportProperty());
         imageViewContainer.getChildren().setAll(imageView);
 
         TwoLineListItem item = new TwoLineListItem();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/AdvancedListItemSkin.java
Patch:
@@ -54,7 +54,6 @@ public AdvancedListItemSkin(AdvancedListItem skinnable) {
         FXUtils.limitSize(imageView, 32, 32);
         imageView.setPreserveRatio(true);
         imageView.imageProperty().bind(skinnable.imageProperty());
-        imageView.viewportProperty().bind(skinnable.viewportProperty());
         imageViewContainer.getChildren().setAll(imageView);
 
         VBox vbox = new VBox();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -67,9 +67,8 @@ public final class MainPage extends StackPane implements DecoratorPage {
     {
         FXUtils.loadFXML(this, "/assets/fxml/main.fxml");
 
-        btnLaunch.setClip(new Rectangle(-100, -100, 280, 200));
-        btnMenu.setClip(new Rectangle(181, -100, 100, 200));
-        menu.setMinWidth(200);
+        btnLaunch.setClip(new Rectangle(-100, -100, 310, 200));
+        btnMenu.setClip(new Rectangle(211, -100, 100, 200));
         menu.getStyleClass().setAll("menu");
 
         StackPane graphic = new StackPane();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/Navigator.java
Patch:
@@ -79,7 +79,9 @@ public void clear() {
     public void close(Node from) {
         FXUtils.checkFxUserThread();
 
-        stack.remove(from);
+        if (stack.peek() != from)
+            throw new IllegalStateException();
+        stack.pop();
         Node node = stack.peek();
         fireEvent(new NavigationEvent(this, from, NavigationEvent.NAVIGATING));
         setContent(node);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/AccountHelper.java
Patch:
@@ -159,11 +159,11 @@ public static Image scale(String url, double scaleRatio) {
     }
 
     public static Image getSteveSkin(double scaleRatio) {
-         return scale("/assets/img/steve.png", 4);
+        return scale("/assets/img/steve.png", scaleRatio);
     }
 
     public static Image getAlexSkin(double scaleRatio) {
-        return scale("/assets/img/alex.png", 4);
+        return scale("/assets/img/alex.png", scaleRatio);
     }
 
     public static Image getDefaultSkin(UUID uuid, double scaleRatio) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -87,7 +87,7 @@ public final class MainPage extends StackPane implements DecoratorPage {
         graphic.setTranslateX(12);
         btnMenu.setGraphic(graphic);
 
-        Profiles.selectedVersionProperty().addListener((o, a, version) -> {
+        FXUtils.onChangeAndOperate(Profiles.selectedVersionProperty(), version -> {
             if (version != null) {
                 lblCurrentGame.setText(version);
             } else {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/decorator/DecoratorController.java
Patch:
@@ -94,6 +94,7 @@ public DecoratorController(Stage stage, Node mainPage) {
         welcomeView = new ImageView();
         welcomeView.setImage(new Image("/assets/img/welcome.png"));
         welcomeView.setCursor(Cursor.HAND);
+        FXUtils.limitSize(welcomeView, 796, 517);
         welcomeView.setOnMouseClicked(e -> {
             Timeline nowAnimation = new Timeline();
             nowAnimation.getKeyFrames().addAll(

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -140,6 +140,8 @@ public boolean renameVersion(String from, String to) {
                 return false;
             }
 
+            if (fromVersion.getId().equals(fromVersion.getJar()))
+                fromVersion = fromVersion.setJar(to);
             FileUtils.writeText(toJson, Constants.GSON.toJson(fromVersion.setId(to)));
             return true;
         } catch (IOException | JsonParseException | VersionNotFoundException e) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/CompressingUtils.java
Patch:
@@ -73,6 +73,8 @@ public static FileSystem createZipFileSystem(Path zipFile, boolean create, boole
         } catch (ZipError error) {
             // Since Java 8 throws ZipError stupidly
             throw new ZipException(error.getMessage());
+        } catch (UnsupportedOperationException ex) {
+            throw new IOException("Not a zip file");
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -59,7 +59,7 @@ private Accounts() {}
     public static final OfflineAccountFactory FACTORY_OFFLINE = OfflineAccountFactory.INSTANCE;
     public static final YggdrasilAccountFactory FACTORY_YGGDRASIL = new YggdrasilAccountFactory(MojangYggdrasilProvider.INSTANCE);
     public static final AuthlibInjectorAccountFactory FACTORY_AUTHLIB_INJECTOR = new AuthlibInjectorAccountFactory(
-            new AuthlibInjectorDownloader(Launcher.HMCL_DIRECTORY.toPath(), () -> Settings.instance().getDownloadProvider())::getArtifactInfo,
+            new AuthlibInjectorDownloader(Launcher.HMCL_DIRECTORY.toPath(), DownloadProviders::getDownloadProvider)::getArtifactInfo,
             Accounts::getOrCreateAuthlibInjectorServer);
 
     private static final String TYPE_OFFLINE = "offline";

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -162,7 +162,7 @@ public ModManager getModManager() {
     }
 
     public DefaultDependencyManager getDependency() {
-        return new DefaultDependencyManager(repository, Settings.instance().getDownloadProvider(), HMCLCacheRepository.REPOSITORY);
+        return new DefaultDependencyManager(repository, DownloadProviders.getDownloadProvider(), HMCLCacheRepository.REPOSITORY);
     }
 
     public VersionSetting getVersionSetting(String id) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MojangDownloadProvider.java
Patch:
@@ -23,7 +23,7 @@
 import org.jackhuang.hmcl.download.optifine.OptiFineBMCLVersionList;
 
 /**
- * @see <a href="http://wiki.vg">http://wiki,vg</a>
+ * @see <a href="http://wiki.vg">http://wiki.vg</a>
  * @author huangyuhui
  */
 public class MojangDownloadProvider implements DownloadProvider {
@@ -56,6 +56,6 @@ public VersionList<?> getVersionListById(String id) {
 
     @Override
     public String injectURL(String baseURL) {
-            return baseURL;
+        return baseURL;
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameListItem.java
Patch:
@@ -59,7 +59,7 @@ public GameListItem(ToggleGroup toggleGroup, Profile profile, String id) {
 
         title.set(id);
         subtitle.set(libraries.toString());
-        selected.set(profile.getSelectedVersion().equals(id));
+        selected.set(id.equals(profile.getSelectedVersion()));
 
         File iconFile = profile.getRepository().getVersionIcon(version);
         if (iconFile.exists())

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profiles.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hmcl.setting;
 
+import javafx.application.Platform;
 import javafx.beans.Observable;
 import javafx.beans.property.ObjectProperty;
 import javafx.beans.property.ReadOnlyListProperty;
@@ -87,7 +88,7 @@ private static void checkProfiles() {
         if (profiles.isEmpty()) {
             Profile current = new Profile(Profiles.DEFAULT_PROFILE, new File(".minecraft"), new VersionSetting(), null, true);
             Profile home = new Profile(Profiles.HOME_PROFILE, Launcher.MINECRAFT_DIRECTORY);
-            profiles.addAll(current, home);
+            Platform.runLater(() -> profiles.addAll(current, home));
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -147,7 +147,7 @@ private void checkSelectedVersion() {
             Optional<String> version = repository.getVersions().stream().findFirst().map(Version::getId);
             if (version.isPresent())
                 selectedVersion.setValue(version.get());
-            else if (StringUtils.isNotBlank(newValue))
+            else if (newValue != null)
                 selectedVersion.setValue(null);
         }
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/InstallerListPage.java
Patch:
@@ -60,6 +60,7 @@ public void loadVersion(Profile profile, String versionId) {
                     .start();
         };
 
+        itemsProperty().clear();
         analyzer.getForge().ifPresent(library -> itemsProperty().add(new InstallerItem("Forge", library.getVersion(), removeAction.apply(library))));
         analyzer.getLiteLoader().ifPresent(library -> itemsProperty().add(new InstallerItem("LiteLoader", library.getVersion(), removeAction.apply(library))));
         analyzer.getOptiFine().ifPresent(library -> itemsProperty().add(new InstallerItem("OptiFine", library.getVersion(), removeAction.apply(library))));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MinecraftInstanceTask.java
Patch:
@@ -63,7 +63,7 @@ public void execute() throws Exception {
                     @Override
                     public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
                         String relativePath = root.relativize(file).normalize().toString();
-                        overrides.add(new ModpackConfiguration.FileInformation(relativePath, encodeHex(digest("SHA-1", Files.newInputStream(file)))));
+                        overrides.add(new ModpackConfiguration.FileInformation(relativePath, encodeHex(digest("SHA-1", file))));
                         return FileVisitResult.CONTINUE;
                     }
                 });

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/versions/GameAdvancedListItem.java
Patch:
@@ -54,7 +54,8 @@ private void loadProfile(Profile newProfile) {
         if (profile != null)
             profile.selectedVersionProperty().removeListener(listener);
         profile = newProfile;
-        profile.selectedVersionProperty().addListener(listener);
+        if (profile != null)
+            profile.selectedVersionProperty().addListener(listener);
         loadVersion();
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -57,7 +57,7 @@ public void setBaseDirectory(File baseDirectory) {
 
     @Override
     public boolean hasVersion(String id) {
-        return versions.containsKey(id);
+        return id != null && versions.containsKey(id);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/account/AccountAdvancedListItem.java
Patch:
@@ -39,11 +39,13 @@ protected void invalidated() {
                 titleProperty().set(i18n("account.missing"));
                 subtitleProperty().set(i18n("account.missing.add"));
                 imageProperty().set(new Image("/assets/img/craft_table.png"));
+                viewportProperty().set(null);
             } else {
                 titleProperty().set(account.getCharacter());
                 subtitleProperty().set(accountSubtitle(account));
 
                 imageProperty().set(AccountHelper.getDefaultSkin(account.getUUID(), 4));
+                viewportProperty().set(AccountHelper.getViewport(4));
 
                 if (account instanceof YggdrasilAccount) {
                     AccountHelper.loadSkinAsync((YggdrasilAccount) account).subscribe(Schedulers.javafx(), () -> {
@@ -56,7 +58,6 @@ protected void invalidated() {
     };
 
     public AccountAdvancedListItem() {
-        viewportProperty().set(AccountHelper.getViewport(4));
     }
 
     public ObjectProperty<Account> accountProperty() {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profiles.java
Patch:
@@ -128,7 +128,7 @@ static void init() {
                 profiles.stream()
                         .filter(it -> it.getName().equals(config().getSelectedProfile()))
                         .findFirst()
-                        .get());
+                        .orElse(profiles.get(0)));
     }
 
     public static ObservableList<Profile> getProfiles() {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameVersionList.java
Patch:
@@ -24,6 +24,7 @@
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.util.Constants;
 import org.jackhuang.hmcl.util.NetworkUtils;
+import org.jackhuang.hmcl.util.StringUtils;
 
 import java.util.Collection;
 import java.util.Collections;
@@ -48,7 +49,7 @@ public boolean hasType() {
     protected Collection<GameRemoteVersion> getVersionsImpl(String gameVersion) {
         lock.readLock().lock();
         try {
-            return versions.values();
+            return StringUtils.isBlank(gameVersion) ? versions.values() : versions.get(gameVersion);
         } finally {
             lock.readLock().unlock();
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -47,7 +47,7 @@ public final class VersionsPage extends StackPane implements WizardPage, Refresh
     private final DownloadProvider downloadProvider;
     private final String libraryId;
     private final String title;
-    private final Runnable callback;
+    private final WizardController controller;
 
     @FXML
     private JFXListView<VersionsPageItem> list;
@@ -77,7 +77,7 @@ public VersionsPage(WizardController controller, String title, String gameVersio
         this.gameVersion = gameVersion;
         this.downloadProvider = downloadProvider;
         this.libraryId = libraryId;
-        this.callback = callback;
+        this.controller = controller;
         this.versionList = downloadProvider.getVersionListById(libraryId);
 
         FXUtils.loadFXML(this, "/assets/fxml/download/versions.fxml");
@@ -160,5 +160,5 @@ private void onRefresh() {
     }
 
     @FXML
-    private void onBack() { callback.run(); }
+    private void onBack() { controller.onPrev(true); }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/VersionList.java
Patch:
@@ -70,7 +70,7 @@ public Task loadAsync(DownloadProvider downloadProvider) {
         });
     }
 
-    private Collection<T> getVersionsImpl(String gameVersion) {
+    protected Collection<T> getVersionsImpl(String gameVersion) {
         lock.readLock().lock();
         try {
             return versions.get(gameVersion);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/MaintainTask.java
Patch:
@@ -94,7 +94,9 @@ public static Version maintain(Version version) {
             args.add("optifine.OptiFineForgeTweaker");
         }
 
-        return version.setMinecraftArguments(new CommandBuilder().addAll(args).toString());
+        // Since $ will be escaped in linux, and our maintain of minecraftArgument will not cause escaping,
+        // so we regenerate the minecraftArgument without escaping.
+        return version.setMinecraftArguments(new CommandBuilder().addAllWithoutParsing(args).toString());
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Arguments.java
Patch:
@@ -82,7 +82,7 @@ else if (b == null)
     }
 
     public static List<String> parseStringArguments(List<String> arguments, Map<String, String> keys) {
-        return arguments.stream().map(str -> keys.getOrDefault(str, str)).collect(Collectors.toList());
+        return arguments.stream().flatMap(str -> new StringArgument(str).toString(keys, Collections.emptyMap()).stream()).collect(Collectors.toList());
     }
 
     public static List<String> parseArguments(List<Argument> arguments, Map<String, String> keys) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/RuledArgument.java
Patch:
@@ -65,7 +65,7 @@ public Object clone() {
 
     @Override
     public List<String> toString(Map<String, String> keys, Map<String, Boolean> features) {
-        if (CompatibilityRule.appliesToCurrentEnvironment(rules) && value != null)
+        if (CompatibilityRule.appliesToCurrentEnvironment(rules, features) && value != null)
             return value.stream()
                     .map(StringArgument::new)
                     .map(str -> str.toString(keys, features).get(0))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/LibraryDownloadTask.java
Patch:
@@ -142,7 +142,7 @@ private static boolean validateJar(byte[] data, List<String> checksums) throws I
         JarInputStream jar = new JarInputStream(new ByteArrayInputStream(data));
         JarEntry entry = jar.getNextJarEntry();
         while (entry != null) {
-            byte[] eData = IOUtils.readFullyAsByteArray(jar);
+            byte[] eData = IOUtils.readFullyWithoutClosing(jar);
             if (entry.getName().equals("checksums.sha1")) {
                 hashes = new String(eData, Charset.forName("UTF-8")).split("\n");
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Library.java
Patch:
@@ -223,6 +223,7 @@ public JsonElement serialize(Library src, Type type, JsonSerializationContext co
             obj.addProperty("name", src.getName());
             obj.addProperty("url", src.url);
             obj.add("downloads", context.serialize(src.downloads));
+            obj.add("checksums", context.serialize(src.getChecksums()));
             obj.add("extract", context.serialize(src.extract));
             obj.add("natives", context.serialize(src.natives, new TypeToken<Map<OperatingSystem, String>>() {
             }.getType()));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -100,8 +100,6 @@ public VersionsPage(WizardController controller, String title, String gameVersio
     private List<VersionsPageItem> loadVersions() {
         return versionList.getVersions(gameVersion).stream()
                 .filter(it -> {
-                    if (it.getVersionType() == null)
-                        return true;
                     switch (it.getVersionType()) {
                         case RELEASE:
                             return chkRelease.isSelected();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/RemoteVersion.java
Patch:
@@ -42,7 +42,7 @@ public class RemoteVersion implements Comparable<RemoteVersion> {
      * @param url         the installer or universal jar URL.
      */
     public RemoteVersion(String gameVersion, String selfVersion, String url) {
-        this(gameVersion, selfVersion, url, null);
+        this(gameVersion, selfVersion, url, Type.UNCATEGORIZED);
     }
 
     /**
@@ -56,7 +56,7 @@ public RemoteVersion(String gameVersion, String selfVersion, String url, Type ty
         this.gameVersion = Objects.requireNonNull(gameVersion);
         this.selfVersion = Objects.requireNonNull(selfVersion);
         this.url = Objects.requireNonNull(url);
-        this.type = type;
+        this.type = Objects.requireNonNull(type);
     }
 
     public String getGameVersion() {
@@ -100,6 +100,7 @@ public int compareTo(RemoteVersion o) {
     }
 
     public enum Type {
+        UNCATEGORIZED,
         RELEASE,
         SNAPSHOT,
         OLD

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultGameBuilder.java
Patch:
@@ -68,7 +68,7 @@ public Task buildAsync() {
                 result = result.then(libraryTaskHelper(gameVersion, "optifine"));
 
             for (RemoteVersion remoteVersion : remoteVersions)
-                result = result.then(var -> dependencyManager.installLibraryAsync(var.get("version"), remoteVersion));
+                result = result.then(dependencyManager.installLibraryAsync(remoteVersion));
 
             return result;
         }).finalized((variables, isDependentsSucceeded) -> {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/BMCLAPIDownloadProvider.java
Patch:
@@ -64,8 +64,8 @@ public String injectURL(String baseURL) {
         return baseURL
                 .replace("https://launchermeta.mojang.com", "https://bmclapi2.bangbang93.com")
                 .replace("https://launcher.mojang.com", "https://bmclapi2.bangbang93.com")
-                .replace("https://libraries.minecraft.net", "https://bmclapi2.bangbang93.com/libraries")
-                .replaceFirst("https?://files\\.minecraftforge\\.net/maven", "https://bmclapi2.bangbang93.com/maven")
+                .replace("https://libraries.minecraft.net", "http://bmclapi2.bangbang93.com/libraries")
+                .replaceFirst("https?://files\\.minecraftforge\\.net/maven", "http://bmclapi2.bangbang93.com/maven")
                 .replace("http://dl.liteloader.com/versions/versions.json", "https://bmclapi2.bangbang93.com/maven/com/mumfrey/liteloader/versions.json")
                 .replace("http://dl.liteloader.com/versions", "https://bmclapi2.bangbang93.com/maven")
                 .replace("https://authlib-injector.yushi.moe", "https://bmclapi2.bangbang93.com/mirrors/authlib-injector");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/Task.java
Patch:
@@ -108,7 +108,7 @@ public boolean isRelyingOnDependencies() {
         return true;
     }
 
-    private String name = getClass().toString();
+    private String name = getClass().getName();
 
     public String getName() {
         return name;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MultiMCInstanceConfiguration.java
Patch:
@@ -19,6 +19,7 @@
 
 import org.jackhuang.hmcl.util.CompressingUtils;
 import org.jackhuang.hmcl.util.Lang;
+import org.jackhuang.hmcl.util.StringUtils;
 
 import java.io.File;
 import java.io.IOException;
@@ -268,7 +269,7 @@ public static Modpack readMultiMCModpackManifest(File modpackFile) throws IOExce
         try (FileSystem fs = CompressingUtils.createReadOnlyZipFileSystem(modpackFile.toPath())) {
             Path root = Files.list(fs.getPath("/")).filter(Files::isDirectory).findAny()
                     .orElseThrow(() -> new IOException("Not a valid MultiMC modpack"));
-            String name = root.normalize().getFileName().toString();
+            String name = StringUtils.removeSuffix(root.normalize().getFileName().toString(), "/");
 
             Path instancePath = root.resolve("instance.cfg");
             if (Files.notExists(instancePath))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/MultiMCModpackInstallTask.java
Patch:
@@ -120,7 +120,7 @@ public void execute() throws Exception {
 
             if (Files.exists(patches))
                 for (Path patchJson : Files.newDirectoryStream(patches)) {
-                    if (patchJson.endsWith(".json")) {
+                    if (patchJson.toString().endsWith(".json")) {
                         MultiMCInstancePatch patch = Constants.GSON.fromJson(IOUtils.readFullyAsString(Files.newInputStream(patchJson)), MultiMCInstancePatch.class);
                         List<String> newArguments = new LinkedList<>();
                         for (String arg : patch.getTweakers()) {

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -40,6 +40,8 @@
 public final class Main {
 
     public static void main(String[] args) {
+        System.setProperty("java.net.useSystemProxies", "true");
+
         checkJavaFX();
         checkDirectoryPath();
         checkDSTRootCAX3();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -151,8 +151,9 @@ public Version resolve(VersionProvider provider) throws VersionNotFoundException
     }
 
     protected Version resolve(VersionProvider provider, Set<String> resolvedSoFar) throws VersionNotFoundException {
-        if (inheritsFrom == null)
-            return this;
+        if (inheritsFrom == null) {
+            return this.jar == null ? this.setJar(id) : this;
+        }
 
         // To maximize the compatibility.
         if (!resolvedSoFar.add(id)) {

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -396,7 +396,7 @@ public synchronized void onLog(String log, Log4jLevel level) {
                 Platform.runLater(() -> logWindow.logLine(log, level));
             }
 
-            if (!lwjgl && log.contains("LWJGL Version: ") || !detectWindow) {
+            if (!lwjgl && (log.contains("LWJGL Version: ") || !detectWindow)) {
                 lwjgl = true;
                 switch (visibility) {
                     case HIDE_AND_REOPEN:

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -66,7 +66,7 @@ public VersionSetting getGlobal() {
         return globalProperty.get();
     }
 
-    public void setGlobal(VersionSetting global) {
+    private void setGlobal(VersionSetting global) {
         if (global == null)
             global = new VersionSetting();
         globalProperty.set(global);
@@ -175,6 +175,7 @@ public void addPropertyChangedListener(InvalidationListener listener) {
         globalProperty.addListener(listener);
         gameDirProperty.addListener(listener);
         useRelativePathProperty.addListener(listener);
+        globalProperty.get().addPropertyChangedListener(listener);
     }
 
     public static final class Serializer implements JsonSerializer<Profile>, JsonDeserializer<Profile> {

File: HMCL/src/main/java/org/jackhuang/hmcl/Metadata.java
Patch:
@@ -17,15 +17,15 @@
  */
 package org.jackhuang.hmcl;
 
-import java.util.Optional;
+import org.jackhuang.hmcl.util.JarUtils;
 
 /**
  * Stores metadata about this application.
  */
 public final class Metadata {
     private Metadata() {}
 
-    public static final String VERSION = System.getProperty("hmcl.version.override", Optional.ofNullable(Metadata.class.getPackage().getImplementationVersion()).orElse("@develop@"));
+    public static final String VERSION = System.getProperty("hmcl.version.override", JarUtils.thisJar().flatMap(JarUtils::getImplementationVersion).orElse("@develop@"));
     public static final String NAME = "HMCL";
     public static final String TITLE = NAME + " " + VERSION;
     

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -601,7 +601,9 @@ private int parseJsonPrimitive(JsonPrimitive primitive) {
         }
 
         private int parseJsonPrimitive(JsonPrimitive primitive, int defaultValue) {
-            if (primitive.isNumber())
+            if (primitive == null)
+                return defaultValue;
+            else if (primitive.isNumber())
                 return primitive.getAsInt();
             else
                 return Lang.parseInt(primitive.getAsString(), defaultValue);

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -42,7 +42,6 @@ public class Settings {
 
     private Settings() {
         firstLaunch = CONFIG.isFirstLaunch();
-        CONFIG.setFirstLaunch(false);
 
         ProxyManager.init();
         Accounts.init();
@@ -56,6 +55,7 @@ private Settings() {
         }
 
         CONFIG.addListener(source -> save());
+        CONFIG.setFirstLaunch(false);
     }
 
     private void save() {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/VersionItem.java
Patch:
@@ -71,7 +71,7 @@ public final class VersionItem extends StackPane {
     private void initializeComponents() {
         setPickOnBounds(false);
         FXUtils.setLimitWidth(this, 160);
-        FXUtils.setLimitHeight(this, 156);
+        FXUtils.setLimitHeight(this, 149);
 
         content = new VBox();
         {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallerWizardProvider.java
Patch:
@@ -20,6 +20,7 @@
 import javafx.scene.Node;
 
 import org.jackhuang.hmcl.download.BMCLAPIDownloadProvider;
+import org.jackhuang.hmcl.download.DownloadProvider;
 import org.jackhuang.hmcl.download.RemoteVersion;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.setting.Profile;
@@ -100,9 +101,10 @@ public Object finish(Map<String, Object> settings) {
 
     @Override
     public Node createPage(WizardController controller, int step, Map<String, Object> settings) {
+        DownloadProvider provider = profile.getDependency().getDownloadProvider();
         switch (step) {
             case 0:
-                return new AdditionalInstallersPage(this, controller, profile.getRepository(), BMCLAPIDownloadProvider.INSTANCE);
+                return new AdditionalInstallersPage(this, controller, profile.getRepository(), provider);
             default:
                 throw new IllegalStateException();
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/AddAccountPane.java
Patch:
@@ -152,8 +152,9 @@ private void onCreationAccept() {
                         Accounts.getAccounts().add(account);
                     } else {
                         // adding an already-added account
-                        // instead of discarding the new account, we replace the existing account with the new account
-                        Accounts.getAccounts().set(oldIndex, account);
+                        // instead of discarding the new account, we first remove the existing one then add the new one
+                        Accounts.getAccounts().remove(oldIndex);
+                        Accounts.getAccounts().add(oldIndex, account);
                     }
                     acceptPane.hideSpinner();
                     fireEvent(new DialogCloseEvent());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/MappedObservableList.java
Patch:
@@ -22,7 +22,7 @@
 
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.HashMap;
+import java.util.IdentityHashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
@@ -75,7 +75,7 @@ private static class MappedObservableListUpdater<T, U> implements ListChangeList
         @Override
         public void onChanged(Change<? extends T> change) {
             // cache removed elements to reduce calls to mapper
-            Map<T, LinkedList<U>> cache = new HashMap<>();
+            Map<T, LinkedList<U>> cache = new IdentityHashMap<>();
 
             while (change.next()) {
                 int from = change.getFrom();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -34,6 +34,8 @@
 import org.jackhuang.hmcl.util.FutureCallback;
 import org.jackhuang.hmcl.util.JavaVersion;
 
+import static org.jackhuang.hmcl.setting.ConfigHolder.CONFIG;
+
 import java.util.function.Consumer;
 
 public final class Controllers {
@@ -106,7 +108,7 @@ public static void initialize(Stage stage) {
         decorator.setCustomMaximize(false);
 
         scene = new Scene(decorator, 804, 521);
-        scene.getStylesheets().setAll(Settings.INSTANCE.getTheme().getStylesheets());
+        scene.getStylesheets().setAll(CONFIG.getTheme().getStylesheets());
         stage.setMinWidth(804);
         stage.setMaxWidth(804);
         stage.setMinHeight(521);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindow.java
Patch:
@@ -43,6 +43,7 @@
 import org.w3c.dom.Element;
 import org.w3c.dom.Node;
 
+import static org.jackhuang.hmcl.setting.ConfigHolder.CONFIG;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
 
 import java.util.concurrent.CountDownLatch;
@@ -64,7 +65,7 @@ public final class LogWindow extends Stage {
 
     public LogWindow() {
         setScene(new Scene(impl, 800, 480));
-        getScene().getStylesheets().addAll(Settings.INSTANCE.getTheme().getStylesheets());
+        getScene().getStylesheets().addAll(CONFIG.getTheme().getStylesheets());
         setTitle(i18n("logwindow.title"));
         getIcons().add(new Image("/assets/img/icon.png"));
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/WebStage.java
Patch:
@@ -21,14 +21,15 @@
 import javafx.scene.image.Image;
 import javafx.scene.web.WebView;
 import javafx.stage.Stage;
-import org.jackhuang.hmcl.setting.Settings;
+
+import static org.jackhuang.hmcl.setting.ConfigHolder.CONFIG;
 
 public class WebStage extends Stage {
     private final WebView webView = new WebView();
 
     public WebStage() {
         setScene(new Scene(webView, 800, 480));
-        getScene().getStylesheets().addAll(Settings.INSTANCE.getTheme().getStylesheets());
+        getScene().getStylesheets().addAll(CONFIG.getTheme().getStylesheets());
         getIcons().add(new Image("/assets/img/icon.png"));
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.io.File;
 import java.lang.reflect.Modifier;
+import java.net.Proxy;
 import java.util.Map;
 import java.util.TreeMap;
 import java.util.stream.Stream;
@@ -66,6 +67,7 @@ public final class Config implements Cloneable, Observable {
             .registerTypeAdapter(ObservableMap.class, new ObservableMapCreator())
             .registerTypeAdapterFactory(new JavaFxPropertyTypeAdapterFactory(true, true))
             .registerTypeAdapter(EnumBackgroundImage.class, new EnumOrdinalDeserializer<>(EnumBackgroundImage.class)) // backward compatibility for backgroundType
+            .registerTypeAdapter(Proxy.Type.class, new EnumOrdinalDeserializer<>(Proxy.Type.class)) // backward compatibility for hasProxy
             .setPrettyPrinting()
             .create();
 
@@ -96,7 +98,7 @@ public static Config fromJson(String json) throws JsonParseException {
     public final BooleanProperty hasProxyAuth = new SimpleBooleanProperty();
 
     @SerializedName("proxyType")
-    public final IntegerProperty proxyType = new SimpleIntegerProperty();
+    public final ObjectProperty<Proxy.Type> proxyType = new SimpleObjectProperty<>(Proxy.Type.DIRECT);
 
     @SerializedName("proxyHost")
     public final StringProperty proxyHost = new SimpleStringProperty();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SettingsPage.java
Patch:
@@ -155,7 +155,7 @@ public final class SettingsPage extends StackPane implements DecoratorPage {
         chkProxySocks.setToggleGroup(proxyConfigurationGroup);
 
         for (Toggle toggle : proxyConfigurationGroup.getToggles())
-            if (toggle.getUserData() == Settings.INSTANCE.getProxyType())
+            if (toggle.getUserData() == ConfigHolder.CONFIG.proxyType.get())
                 toggle.setSelected(true);
 
         ToggleGroup hasProxyGroup = new ToggleGroup();
@@ -171,7 +171,7 @@ public final class SettingsPage extends StackPane implements DecoratorPage {
                 ConfigHolder.CONFIG.hasProxy.set(newValue != chkNoProxy));
 
         proxyConfigurationGroup.selectedToggleProperty().addListener((a, b, newValue) ->
-                Settings.INSTANCE.setProxyType((Proxy.Type) newValue.getUserData()));
+                ConfigHolder.CONFIG.proxyType.set((Proxy.Type) newValue.getUserData()));
 
         chkProxyAuthentication.setSelected(ConfigHolder.CONFIG.hasProxyAuth.get());
         chkProxyAuthentication.selectedProperty().addListener((a, b, newValue) -> ConfigHolder.CONFIG.hasProxyAuth.set(newValue));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Decorator.java
Patch:
@@ -220,7 +220,7 @@ private void loadBackground() {
         try {
             Image background;
 
-            if (Settings.INSTANCE.getBackgroundImageType() == EnumBackgroundImage.DEFAULT)
+            if (ConfigHolder.CONFIG.backgroundImageType.get() == EnumBackgroundImage.DEFAULT)
                 background = searchBackgroundImage(new Image("/assets/img/background.jpg"), "");
             else
                 background = searchBackgroundImage(new Image("/assets/img/background.jpg"), ConfigHolder.CONFIG.backgroundImage.get());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/FileItem.java
Patch:
@@ -80,7 +80,7 @@ private String processPath(String path) {
         Path given = Paths.get(path).toAbsolutePath();
         if (isConvertToRelativePath()) {
             try {
-                return Paths.get(".").toAbsolutePath().relativize(given).normalize().toString();
+                return Paths.get(".").normalize().toAbsolutePath().relativize(given).normalize().toString();
             } catch (IllegalArgumentException e) {
                 // the given path can't be relativized against current path
             }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -323,7 +323,8 @@ private void startMonitors(ManagedProcess managedProcess, ProcessListener proces
     }
 
     private void startMonitors(ManagedProcess managedProcess, ProcessListener processListener, boolean isDaemon) {
-        boolean enablesLoggingInfo = version.getLogging() != null && version.getLogging().containsKey(DownloadType.CLIENT);
+        boolean enablesLoggingInfo = version.getLogging() != null && version.getLogging().containsKey(DownloadType.CLIENT)
+                && !"net.minecraft.launchwrapper.Launch".equals(version.getMainClass());
         if (enablesLoggingInfo)
             startMonitorsWithLoggingInfo(managedProcess, processListener, isDaemon);
         else

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/Log4jHandler.java
Patch:
@@ -118,6 +118,9 @@ public Future<?> newLine(String log) {
                     Logging.LOG.log(Level.WARNING, "An error occurred when writing console lines", e);
                     logs.forEach(System.out::println);
                     broken = true;
+                } else {
+                    // Output plain XML to user
+                    callback.accept(log, Log4jLevel.INFO);
                 }
             }
         });

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -84,6 +84,8 @@ private Settings() {
 
         ConfigHolder.CONFIG.authlibInjectorServers.addListener(onInvalidating(this::removeDanglingAuthlibInjectorAccounts));
 
+        this.selectedAccount.set(accounts.get(ConfigHolder.CONFIG.selectedAccount.get()));
+
         checkProfileMap();
 
         save();
@@ -300,7 +302,7 @@ public void setDownloadProvider(DownloadProvider downloadProvider) {
      *               ACCOUNTS               *
      ****************************************/
 
-    private final ImmediateObjectProperty<Account> selectedAccount = new ImmediateObjectProperty<Account>(this, "selectedAccount", accounts.get(ConfigHolder.CONFIG.selectedAccount.get())) {
+    private final ImmediateObjectProperty<Account> selectedAccount = new ImmediateObjectProperty<Account>(this, "selectedAccount", null) {
         @Override
         public Account get() {
             Account a = super.get();

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -84,6 +84,8 @@ private Settings() {
 
         ConfigHolder.CONFIG.authlibInjectorServers.addListener(onInvalidating(this::removeDanglingAuthlibInjectorAccounts));
 
+        this.selectedAccount.set(accounts.get(ConfigHolder.CONFIG.selectedAccount.get()));
+
         checkProfileMap();
 
         save();
@@ -300,7 +302,7 @@ public void setDownloadProvider(DownloadProvider downloadProvider) {
      *               ACCOUNTS               *
      ****************************************/
 
-    private final ImmediateObjectProperty<Account> selectedAccount = new ImmediateObjectProperty<Account>(this, "selectedAccount", accounts.get(ConfigHolder.CONFIG.selectedAccount.get())) {
+    private final ImmediateObjectProperty<Account> selectedAccount = new ImmediateObjectProperty<Account>(this, "selectedAccount", null) {
         @Override
         public Account get() {
             Account a = super.get();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/AccountPage.java
Patch:
@@ -78,7 +78,6 @@ public AccountPage(Account account, VersionListItem item) {
 
         FXUtils.loadFXML(this, "/assets/fxml/account.fxml");
 
-        FXUtils.setLimitWidth(this, 300);
         if (account instanceof AuthlibInjectorAccount) {
             lblServer.setText(((AuthlibInjectorAccount) account).getServer().getName());
             FXUtils.setLimitHeight(this, 182);

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Accounts.java
Patch:
@@ -71,7 +71,7 @@ static String getAccountId(String username, String character) {
     }
 
     private static AuthlibInjectorServer getOrCreateAuthlibInjectorServer(String url) {
-        return Settings.SETTINGS.authlibInjectorServers.stream()
+        return ConfigHolder.CONFIG.authlibInjectorServers.stream()
                 .filter(server -> url.equals(server.getUrl()))
                 .findFirst()
                 .orElseGet(() -> {
@@ -85,7 +85,7 @@ private static AuthlibInjectorServer getOrCreateAuthlibInjectorServer(String url
                         LOG.log(Level.WARNING, "Failed to migrate authlib injector server " + url, e);
                     }
 
-                    Settings.SETTINGS.authlibInjectorServers.add(server);
+                    ConfigHolder.CONFIG.authlibInjectorServers.add(server);
                     return server;
                 });
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ExportWizardProvider.java
Patch:
@@ -23,6 +23,7 @@
 import org.jackhuang.hmcl.game.HMCLModpackManager;
 import org.jackhuang.hmcl.mod.Modpack;
 import org.jackhuang.hmcl.setting.Config;
+import org.jackhuang.hmcl.setting.ConfigHolder;
 import org.jackhuang.hmcl.setting.Profile;
 import org.jackhuang.hmcl.setting.Settings;
 import org.jackhuang.hmcl.task.Task;
@@ -93,7 +94,7 @@ public void execute() throws Exception {
                             config.logLines.set(100);
                             config.configurations.clear();
 
-                            zip.putTextFile(Settings.GSON.toJson(config), Settings.SETTINGS_FILE_NAME);
+                            zip.putTextFile(config.toJson(), ConfigHolder.CONFIG_FILENAME);
                             zip.putFile(tempModpack, "modpack.zip");
 
                             File bg = new File("bg").getAbsoluteFile();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/AuthlibInjectorServersPage.java
Patch:
@@ -35,7 +35,7 @@
 import javafx.scene.layout.VBox;
 
 public class AuthlibInjectorServersPage extends StackPane implements DecoratorPage {
-    private final StringProperty title = new SimpleStringProperty(this, "title", i18n("account.injector.server"));
+    private final StringProperty title = new SimpleStringProperty(this, "title", i18n("account.injector.manage.title"));
 
     @FXML private ScrollPane scrollPane;
     @FXML private VBox listPane;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorServer.java
Patch:
@@ -26,8 +26,8 @@
 import org.jackhuang.hmcl.util.NetworkUtils;
 
 import com.google.gson.JsonObject;
+import com.google.gson.JsonParseException;
 import com.google.gson.JsonPrimitive;
-import com.google.gson.JsonSyntaxException;
 
 public class AuthlibInjectorServer {
 
@@ -36,7 +36,7 @@ public static AuthlibInjectorServer fetchServerInfo(String url) throws IOExcepti
             JsonObject response = JsonUtils.fromNonNullJson(NetworkUtils.doGet(NetworkUtils.toURL(url)), JsonObject.class);
             String name = extractServerName(response).orElse(url);
             return new AuthlibInjectorServer(url, name);
-        } catch (JsonSyntaxException e) {
+        } catch (JsonParseException e) {
             throw new IOException("Malformed response", e);
         }
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorServer.java
Patch:
@@ -26,8 +26,8 @@
 import org.jackhuang.hmcl.util.NetworkUtils;
 
 import com.google.gson.JsonObject;
+import com.google.gson.JsonParseException;
 import com.google.gson.JsonPrimitive;
-import com.google.gson.JsonSyntaxException;
 
 public class AuthlibInjectorServer {
 
@@ -36,7 +36,7 @@ public static AuthlibInjectorServer fetchServerInfo(String url) throws IOExcepti
             JsonObject response = JsonUtils.fromNonNullJson(NetworkUtils.doGet(NetworkUtils.toURL(url)), JsonObject.class);
             String name = extractServerName(response).orElse(url);
             return new AuthlibInjectorServer(url, name);
-        } catch (JsonSyntaxException e) {
+        } catch (JsonParseException e) {
             throw new IOException("Malformed response", e);
         }
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/DialogController.java
Patch:
@@ -34,7 +34,7 @@ public static AuthInfo logIn(Account account) throws Exception {
             CountDownLatch latch = new CountDownLatch(1);
             AtomicReference<AuthInfo> res = new AtomicReference<>(null);
             JFXUtilities.runInFX(() -> {
-                AccountLoginPane pane = new AccountLoginPane(account, Controllers::closeDialog, it -> {
+                AccountLoginPane pane = new AccountLoginPane(account, it -> {
                         res.set(it);
                         latch.countDown();
                 }, latch::countDown);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LeftPaneController.java
Patch:
@@ -45,6 +45,7 @@
 import org.jackhuang.hmcl.task.TaskExecutor;
 import org.jackhuang.hmcl.ui.construct.AdvancedListBox;
 import org.jackhuang.hmcl.ui.construct.ClassTitle;
+import org.jackhuang.hmcl.ui.construct.DialogCloseEvent;
 import org.jackhuang.hmcl.ui.construct.IconedItem;
 import org.jackhuang.hmcl.ui.construct.RipplerContainer;
 import org.jackhuang.hmcl.util.Lang;
@@ -100,7 +101,7 @@ public LeftPaneController(AdvancedListBox leftPane) {
     }
 
     private void addNewAccount() {
-        Controllers.dialog(new AddAccountPane(Controllers::closeDialog));
+        Controllers.dialog(new AddAccountPane());
     }
 
     private void onSelectedAccountChanged(Account newAccount) {
@@ -228,7 +229,7 @@ private void onRefreshedVersions(RefreshedVersionsEvent event) {
                             Modpack modpack = ModpackHelper.readModpackManifest(modpackFile);
                             TaskExecutor executor = ModpackHelper.getInstallTask(repository.getProfile(), modpackFile, modpack.getName(), modpack)
                                     .with(Task.of(Schedulers.javafx(), () -> {
-                                        Controllers.closeDialog(region.get());
+                                        region.get().fireEvent(new DialogCloseEvent());
                                         checkAccount();
                                     })).executor();
                             region.set(Controllers.taskDialog(executor, i18n("modpack.installing"), ""));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskExecutorDialogWizardDisplayer.java
Patch:
@@ -35,7 +35,7 @@ public interface TaskExecutorDialogWizardDisplayer extends AbstractWizardDisplay
     @Override
     default void handleTask(Map<String, Object> settings, Task task) {
         TaskExecutorDialogPane pane = new TaskExecutorDialogPane(it -> {
-            Controllers.closeDialog(it);
+            it.fireEvent(new DialogCloseEvent());
             Controllers.navigate(null);
         });
 
@@ -62,7 +62,7 @@ else if (subtitle instanceof String)
                 @Override
                 public void onStop(boolean success, TaskExecutor executor) {
                     JFXUtilities.runInFX(() -> {
-                        Controllers.closeDialog(pane);
+                        pane.fireEvent(new DialogCloseEvent());
                         if (success) {
                             if (settings.containsKey("success_message") && settings.get("success_message") instanceof String)
                                 Controllers.dialog((String) settings.get("success_message"), null, MessageBox.FINE_MESSAGE, () -> Controllers.navigate(null));

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/AppDataUpgrader.java
Patch:
@@ -27,6 +27,7 @@
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.task.TaskExecutor;
 import org.jackhuang.hmcl.ui.Controllers;
+import org.jackhuang.hmcl.ui.construct.DialogCloseEvent;
 import org.jackhuang.hmcl.ui.construct.MessageBox;
 import org.jackhuang.hmcl.util.*;
 import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
@@ -120,7 +121,7 @@ public void download(UpdateChecker checker, VersionNumber ver) {
                                 .directory(new File("").getAbsoluteFile()).start();
                         System.exit(0);
                     }
-                    JFXUtilities.runInFX(() -> Controllers.closeDialog(region.get()));
+                    JFXUtilities.runInFX(() -> region.get().fireEvent(new DialogCloseEvent()));
                 } catch (IOException ex) {
                     Logging.LOG.log(Level.SEVERE, "Failed to create upgrader", ex);
                 }
@@ -138,7 +139,7 @@ else if (map != null && map.containsKey("pack") && !StringUtils.isBlank(map.get(
                                 .directory(new File("").getAbsoluteFile()).start();
                         System.exit(0);
                     }
-                    JFXUtilities.runInFX(() -> Controllers.closeDialog(region.get()));
+                    JFXUtilities.runInFX(() -> region.get().fireEvent(new DialogCloseEvent()));
                 } catch (IOException ex) {
                     Logging.LOG.log(Level.SEVERE, "Failed to create upgrader", ex);
                 }

File: HMCL/src/main/java/org/jackhuang/hmcl/upgrade/NewFileUpgrader.java
Patch:
@@ -24,6 +24,7 @@
 import org.jackhuang.hmcl.task.Task;
 import org.jackhuang.hmcl.task.TaskExecutor;
 import org.jackhuang.hmcl.ui.Controllers;
+import org.jackhuang.hmcl.ui.construct.DialogCloseEvent;
 import org.jackhuang.hmcl.util.Logging;
 import org.jackhuang.hmcl.util.VersionNumber;
 import java.io.File;
@@ -72,7 +73,7 @@ public void download(UpdateChecker checker, VersionNumber version) {
             }
             System.exit(0);
         }
-        JFXUtilities.runInFX(() -> Controllers.closeDialog(region.get()));
+        JFXUtilities.runInFX(() -> region.get().fireEvent(new DialogCloseEvent()));
     }
 
     private static String getRealPath() {

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -51,8 +51,6 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("netscape.javascript.JSException", i18n("crash.NoClassDefFound"));
             put("java.lang.IncompatibleClassChangeError", i18n("crash.NoClassDefFound"));
             put("java.lang.ClassFormatError", i18n("crash.NoClassDefFound"));
-            put("java.lang.OutOfMemoryError", "FUCKING MEMORY LIMIT!");
-            put("Trampoline", i18n("launcher.update_java"));
             put("com.sun.javafx.css.StyleManager.findMatchingStyles", i18n("launcher.update_java"));
             put("NoSuchAlgorithmException", "Has your operating system been installed completely or is a ghost system?");
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -51,8 +51,6 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("netscape.javascript.JSException", i18n("crash.NoClassDefFound"));
             put("java.lang.IncompatibleClassChangeError", i18n("crash.NoClassDefFound"));
             put("java.lang.ClassFormatError", i18n("crash.NoClassDefFound"));
-            put("java.lang.OutOfMemoryError", "FUCKING MEMORY LIMIT!");
-            put("Trampoline", i18n("launcher.update_java"));
             put("com.sun.javafx.css.StyleManager.findMatchingStyles", i18n("launcher.update_java"));
             put("NoSuchAlgorithmException", "Has your operating system been installed completely or is a ghost system?");
         }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/AddAccountPane.java
Patch:
@@ -269,7 +269,7 @@ else if (remoteMessage.contains("Invalid username or password"))
             }
             return exception.getMessage();
         } else {
-            return exception.getClass() + ": " + exception.getLocalizedMessage();
+            return exception.getClass().getName() + ": " + exception.getLocalizedMessage();
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/AddAuthlibInjectorServerDialog.java
Patch:
@@ -79,7 +79,7 @@ private String resolveFetchExceptionMessage(Throwable exception) {
         if (exception instanceof IOException) {
             return i18n("account.failed.connect_injector_server");
         } else {
-            return exception.getClass() + ": " + exception.getLocalizedMessage();
+            return exception.getClass().getName() + ": " + exception.getLocalizedMessage();
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/animation/AnimationProducer.java
Patch:
@@ -18,11 +18,12 @@
 package org.jackhuang.hmcl.ui.animation;
 
 import javafx.animation.KeyFrame;
+import javafx.util.Duration;
 
 import java.util.List;
 
-@FunctionalInterface
 public interface AnimationProducer {
+    void init(AnimationHandler handler);
 
     List<KeyFrame> animate(AnimationHandler handler);
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -17,6 +17,8 @@
  */
 package org.jackhuang.hmcl;
 
+import static org.jackhuang.hmcl.util.i18n.I18n.i18n;
+
 import java.io.File;
 
 import javax.swing.JOptionPane;
@@ -42,9 +44,7 @@ private static void checkJavaFX() {
         try {
             Class.forName("javafx.application.Application");
         } catch (ClassNotFoundException e) {
-            showErrorAndExit("JavaFX is missing.\n"
-                    + "If you are using Java 11 or above, please downgrade to Java 8 or 10.\n"
-                    + "If you are using OpenJDK, please ensure OpenJFX is included.");
+            showErrorAndExit(i18n("fatal.missing_javafx"));
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -17,9 +17,10 @@
  */
 package org.jackhuang.hmcl;
 
-import javax.swing.*;
 import java.io.File;
 
+import javax.swing.JOptionPane;
+
 public final class Main {
 
     public static void main(String[] args) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -203,7 +203,7 @@ public static void smoothScrolling(ScrollPane scrollPane) {
     }
 
     public static void loadFXML(Node node, String absolutePath) {
-        FXMLLoader loader = new FXMLLoader(node.getClass().getResource(absolutePath), I18n.RESOURCE_BUNDLE);
+        FXMLLoader loader = new FXMLLoader(node.getClass().getResource(absolutePath), I18n.getResourceBundle());
         loader.setRoot(node);
         loader.setController(node);
         Lang.invoke((ExceptionalSupplier<Object, IOException>) loader::load);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/mod/CurseManifestFile.java
Patch:
@@ -82,7 +82,7 @@ public URL getUrl() {
         return NetworkUtils.toURL("https://minecraft.curseforge.com/projects/" + projectID + "/files/" + fileID + "/download");
     }
     
-    public CurseManifestFile setFileName(String fileName) {
+    public CurseManifestFile withFileName(String fileName) {
         return new CurseManifestFile(projectID, fileID, fileName, required);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/wizard/WizardController.java
Patch:
@@ -85,7 +85,7 @@ public void onPrev(boolean cleanUp) {
         if (!canPrev()) {
             throw new IllegalStateException("Cannot go backward since this is the back page. Pages: " + pages);
         }
-        
+
         Node page = pages.pop();
         if (cleanUp && page instanceof WizardPage)
             ((WizardPage) page).cleanup(settings);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/Account.java
Patch:
@@ -47,10 +47,9 @@ public abstract class Account {
     /**
      * Login with stored credentials.
      *
-     * @throws ServerDisconnectException if an network error has occurred, in which case password login won't be tried.
-     * @throws AuthenticationException if an error has occurred. If it's not a {@link ServerDisconnectException}, password login will be tried.
+     * @throws CredentialExpiredException when the stored credentials has expired, in which case a password login will be performed
      */
-    public abstract AuthInfo logIn() throws ServerDisconnectException, AuthenticationException;
+    public abstract AuthInfo logIn() throws CredentialExpiredException, AuthenticationException;
 
     /**
      * Login with specified password.

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/DownloadWizardProvider.java
Patch:
@@ -102,10 +102,10 @@ public Node createPage(WizardController controller, int step, Map<String, Object
                     case 1:
                         return new ModpackPage(controller);
                     default:
-                        throw new IllegalStateException("Error step " + step + ", subStep " + subStep + ", settings: " + settings);
+                        throw new IllegalStateException("Error step " + step + ", subStep " + subStep + ", settings: " + settings + ", pages: " + controller.getPages());
                 }
             default:
-                throw new IllegalStateException("error step " + step + ", settings: " + settings);
+                throw new IllegalStateException("error step " + step + ", settings: " + settings + ", pages: " + controller.getPages());
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -116,6 +116,7 @@ public VersionSetting getVersionSetting(String id) {
         VersionSetting vs = repository.getVersionSetting(id);
         if (vs == null || vs.isUsesGlobal()) {
             getGlobal().setGlobal(true); // always keep global.isGlobal = true
+            getGlobal().setUsesGlobal(true);
             return getGlobal();
         } else
             return vs;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/VersionSettingsController.java
Patch:
@@ -173,6 +173,8 @@ public void loadVersionSetting(Profile profile, String versionId) {
         else
             globalItem.getGroup().getToggles().stream().filter(it -> it.getUserData() == Boolean.FALSE).findFirst().ifPresent(it -> it.setSelected(true));
         globalItem.setToggleSelectedListener(newValue -> {
+            // do not call versionSettings.setUsesGlobal(true/false)
+            // because versionSettings can be the global one.
             if ((Boolean) newValue.getUserData())
                 profile.globalizeVersionSetting(versionId);
             else

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Config.java
Patch:
@@ -79,7 +79,7 @@ public final class Config implements Cloneable {
     public final StringProperty localization = new SimpleStringProperty();
 
     @SerializedName("downloadtype")
-    public final IntegerProperty downloadType = new SimpleIntegerProperty();
+    public final IntegerProperty downloadType = new SimpleIntegerProperty(1);
 
     @SerializedName("configurations")
     public final ObservableMap<String, Profile> configurations = FXCollections.observableMap(new TreeMap<>());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/animation/TransitionHandler.java
Patch:
@@ -93,7 +93,7 @@ private void updateContent(Node newView) {
         } else
             previousNode = NULL;
 
-        if (previousNode == currentNode)
+        if (previousNode == newView)
             previousNode = NULL;
 
         currentNode = newView;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/FXUtils.java
Patch:
@@ -34,7 +34,6 @@
 import javafx.scene.control.ScrollBar;
 import javafx.scene.control.ScrollPane;
 import javafx.scene.control.Tooltip;
-import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.input.MouseEvent;
 import javafx.scene.input.ScrollEvent;
@@ -402,8 +401,6 @@ public static <T> T runInUIThread(Supplier<T> supplier) {
         }
     }
 
-    public static final Image DEFAULT_ICON = new Image("/assets/img/icon.png");
-
     public static final Interpolator SINE = new Interpolator() {
         @Override
         protected double curve(double t) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/VersionSettingsController.java
Patch:
@@ -264,7 +264,7 @@ private void loadIcon() {
         if (iconFile.exists())
             iconPickerItem.setImage(new Image("file:" + iconFile.getAbsolutePath()));
         else
-            iconPickerItem.setImage(FXUtils.DEFAULT_ICON);
+            iconPickerItem.setImage(Constants.DEFAULT_ICON.get());
         FXUtils.limitSize(iconPickerItem.getImageView(), 32, 32);
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/game/ModpackHelper.java
Patch:
@@ -59,12 +59,12 @@ public static Modpack readModpackManifest(File file) throws UnsupportedModpackEx
         throw new UnsupportedModpackException(file.toString());
     }
 
-    public static <T> ModpackConfiguration<T> readModpackConfiguration(File file) throws IOException {
+    public static ModpackConfiguration<?> readModpackConfiguration(File file) throws IOException {
         if (!file.exists())
             throw new FileNotFoundException(file.getPath());
         else
             try {
-                return Constants.GSON.fromJson(FileUtils.readText(file), new TypeToken<ModpackConfiguration<T>>() {
+                return Constants.GSON.fromJson(FileUtils.readText(file), new TypeToken<ModpackConfiguration<?>>() {
                 }.getType());
             } catch (JsonParseException e) {
                 throw new IOException("Malformed modpack configuration");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/DownloadWizardProvider.java
Patch:
@@ -69,7 +69,7 @@ private Task finishModpackInstallingAsync(Map<String, Object> settings) {
             return null;
 
         File selected = tryCast(settings.get(ModpackPage.MODPACK_FILE), File.class).orElse(null);
-        Modpack modpack = tryCast(settings.get(ModpackPage.MODPACK_CURSEFORGE_MANIFEST), Modpack.class).orElse(null);
+        Modpack modpack = tryCast(settings.get(ModpackPage.MODPACK_MANIFEST), Modpack.class).orElse(null);
         String name = tryCast(settings.get(ModpackPage.MODPACK_NAME), String.class).orElse(null);
         if (selected == null || modpack == null || name == null) return null;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/ModpackPage.java
Patch:
@@ -90,7 +90,7 @@ public ModpackPage(WizardController controller) {
 
             try {
                 manifest = ModpackHelper.readModpackManifest(selectedFile);
-                controller.getSettings().put(MODPACK_CURSEFORGE_MANIFEST, manifest);
+                controller.getSettings().put(MODPACK_MANIFEST, manifest);
                 lblName.setText(manifest.getName());
                 lblVersion.setText(manifest.getVersion());
                 lblAuthor.setText(manifest.getAuthor());
@@ -130,5 +130,5 @@ public String getTitle() {
 
     public static final String MODPACK_FILE = "MODPACK_FILE";
     public static final String MODPACK_NAME = "MODPACK_NAME";
-    public static final String MODPACK_CURSEFORGE_MANIFEST = "CURSEFORGE_MANIFEST";
+    public static final String MODPACK_MANIFEST = "MODPACK_MANIFEST";
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -497,6 +497,7 @@ public void addPropertyChangedListener(InvalidationListener listener) {
         gameDirTypeProperty.addListener(listener);
         gameDirProperty.addListener(listener);
         launcherVisibilityProperty.addListener(listener);
+        defaultJavaPathProperty.addListener(listener);
     }
 
     public LaunchOptions toLaunchOptions(File gameDir) throws InterruptedException {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -497,6 +497,7 @@ public void addPropertyChangedListener(InvalidationListener listener) {
         gameDirTypeProperty.addListener(listener);
         gameDirProperty.addListener(listener);
         launcherVisibilityProperty.addListener(listener);
+        defaultJavaPathProperty.addListener(listener);
     }
 
     public LaunchOptions toLaunchOptions(File gameDir) throws InterruptedException {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -115,7 +115,8 @@ public static void initialize(Stage stage) {
     }
 
     public static void dialog(Region content) {
-        decorator.showDialog(content);
+        if (decorator != null)
+            decorator.showDialog(content);
     }
 
     public static void dialog(String text) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/Account.java
Patch:
@@ -61,8 +61,6 @@ public abstract class Account {
      */
     public abstract AuthInfo playOffline();
 
-    public abstract void logOut();
-
     public abstract Map<Object, Object> toStorage();
 
     public abstract void clearCache();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/authlibinjector/AuthlibInjectorAccount.java
Patch:
@@ -39,8 +39,8 @@ public class AuthlibInjectorAccount extends YggdrasilAccount {
     private final String serverBaseURL;
     private final ExceptionalSupplier<String, ?> injectorJarPath;
 
-    protected AuthlibInjectorAccount(YggdrasilService service, String serverBaseURL, ExceptionalSupplier<String, ?> injectorJarPath, String username, String clientToken, String character, YggdrasilSession session) {
-        super(service, username, clientToken, character, session);
+    protected AuthlibInjectorAccount(YggdrasilService service, String serverBaseURL, ExceptionalSupplier<String, ?> injectorJarPath, String username, String character, YggdrasilSession session) {
+        super(service, username, character, session);
 
         this.injectorJarPath = injectorJarPath;
         this.serverBaseURL = serverBaseURL;
@@ -72,7 +72,7 @@ private AuthInfo inject(ExceptionalSupplier<AuthInfo, AuthenticationException> s
             if (flag.get())
                 arguments = Arguments.addJVMArguments(arguments, "-Dorg.to2mbn.authlibinjector.config.prefetched=" + new String(Base64.getEncoder().encode(getTask.getResult().getBytes()), UTF_8));
 
-            return info.setArguments(arguments);
+            return info.withArguments(arguments);
         } catch (Exception e) {
             throw new AuthenticationException("Unable to get authlib injector jar path", e);
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetRefreshTask.java
Patch:
@@ -17,6 +17,8 @@
  */
 package org.jackhuang.hmcl.download.game;
 
+import static org.jackhuang.hmcl.util.Pair.pair;
+
 import org.jackhuang.hmcl.download.AbstractDependencyManager;
 import org.jackhuang.hmcl.game.AssetIndex;
 import org.jackhuang.hmcl.game.AssetIndexInfo;
@@ -82,7 +84,7 @@ public void execute() throws Exception {
                 if (Thread.interrupted())
                     throw new InterruptedException();
 
-                res.add(new Pair<>(dependencyManager.getGameRepository().getAssetObject(version.getId(), assetIndexInfo.getId(), assetObject), assetObject));
+            res.add(pair(dependencyManager.getGameRepository().getAssetObject(version.getId(), assetIndexInfo.getId(), assetObject), assetObject));
                 updateProgress(++progress, index.getObjects().size());
             }
         setResult(res);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -295,7 +295,7 @@ else if (!isWindows && !FileUtils.getExtension(scriptFile).equals("sh"))
             if (isWindows) {
                 writer.write("@echo off");
                 writer.newLine();
-                writer.write("set APPDATA=" + options.getGameDir().getParent());
+                writer.write("set APPDATA=" + options.getGameDir().getAbsoluteFile().getParent());
                 writer.newLine();
                 writer.write("cd /D %APPDATA%");
                 writer.newLine();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/DialogController.java
Patch:
@@ -34,11 +34,11 @@ public static AuthInfo logIn(Account account) throws Exception {
             CountDownLatch latch = new CountDownLatch(1);
             AtomicReference<AuthInfo> res = new AtomicReference<>(null);
             JFXUtilities.runInFX(() -> {
-                AccountLoginPane pane = new AccountLoginPane(account, it -> {
+                AccountLoginPane pane = new AccountLoginPane(account, Controllers::closeDialog, it -> {
                         res.set(it);
                         latch.countDown();
                 }, latch::countDown);
-                pane.setDialog(Controllers.dialog(pane));
+                Controllers.dialog(pane);
             });
             latch.await();
             return Optional.ofNullable(res.get()).orElseThrow(SilentException::new);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskExecutorDialogWizardDisplayer.java
Patch:
@@ -33,8 +33,8 @@ public interface TaskExecutorDialogWizardDisplayer extends AbstractWizardDisplay
 
     @Override
     default void handleTask(Map<String, Object> settings, Task task) {
-        TaskExecutorDialogPane pane = new TaskExecutorDialogPane(() -> {
-            Controllers.closeDialog();
+        TaskExecutorDialogPane pane = new TaskExecutorDialogPane(it -> {
+            Controllers.closeDialog(it);
             Controllers.navigate(null);
         });
 
@@ -61,7 +61,7 @@ else if (subtitle instanceof String)
                 @Override
                 public void onStop(boolean success, TaskExecutor executor) {
                     JFXUtilities.runInFX(() -> {
-                        Controllers.closeDialog();
+                        Controllers.closeDialog(pane);
                         if (success) {
                             if (settings.containsKey("success_message") && settings.get("success_message") instanceof String)
                                 Controllers.dialog((String) settings.get("success_message"), null, MessageBox.FINE_MESSAGE, () -> Controllers.navigate(null));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -199,7 +199,7 @@ private Node buildNode(HMCLGameRepository repository, Version version, String ga
                             FXUtils.openFolder(repository.getRunDirectory(id));
                             break;
                         default:
-                            throw new Error();
+                            break;
                     }});
                 versionPopup.show(item, JFXPopup.PopupVPosition.TOP, JFXPopup.PopupHPosition.LEFT, event.getX(), event.getY());
             } else if (event.getButton() == MouseButton.PRIMARY && event.getClickCount() == 2) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ClassicVersion.java
Patch:
@@ -40,7 +40,7 @@ private static class ClassicLibrary extends Library {
         public ClassicLibrary(String name) {
             super("", "", "", null, null,
                     new LibrariesDownloadInfo(new LibraryDownloadInfo("bin/" + name + ".jar"), null),
-                    false, null, null, null, null);
+                    null, null, null, null);
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/StackContainerPane.java
Patch:
@@ -26,7 +26,7 @@ public class StackContainerPane extends StackPane {
     private final Stack<Node> stack = new Stack<>();
 
     public void push(Node node) {
-        if (node.getProperties().containsKey("controllers"))
+        if (!node.getProperties().containsKey("controllers"))
             stack.push(node);
         getChildren().setAll(node);
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/DownloadProviders.java
Patch:
@@ -28,7 +28,7 @@
 public final class DownloadProviders {
     private DownloadProviders() {}
 
-    public static final List<DownloadProvider> DOWNLOAD_PROVIDERS = Lang.immutableListOf(new MojangDownloadProvider(Settings.INSTANCE.getLocale() == Locales.ZH_CN), BMCLAPIDownloadProvider.INSTANCE, CurseCDNDownloadProvider.INSTANCE);
+    public static final List<DownloadProvider> DOWNLOAD_PROVIDERS = Lang.immutableListOf(new MojangDownloadProvider(), BMCLAPIDownloadProvider.INSTANCE, CurseCDNDownloadProvider.INSTANCE);
 
     public static DownloadProvider getDownloadProvider(int index) {
         return Lang.get(DOWNLOAD_PROVIDERS, index).orElse(DOWNLOAD_PROVIDERS.get(0));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineBMCLVersionList.java
Patch:
@@ -42,7 +42,7 @@ private OptiFineBMCLVersionList() {
 
     @Override
     public Task refreshAsync(DownloadProvider downloadProvider) {
-        GetTask task = new GetTask(NetworkUtils.toURL("https://bmclapi.bangbang93.com/optifine/versionlist"));
+        GetTask task = new GetTask(NetworkUtils.toURL("http://bmclapi2.bangbang93.com/optifine/versionlist"));
         return new Task() {
             @Override
             public Collection<Task> getDependents() {
@@ -59,7 +59,7 @@ public void execute() {
                     String version = element.getType();
                     if (version == null)
                         continue;
-                    String mirror = "https://bmclapi2.bangbang93.com/optifine/" + element.getGameVersion() + "/" + element.getType() + "/" + element.getPatch();
+                    String mirror = "http://bmclapi2.bangbang93.com/optifine/" + element.getGameVersion() + "/" + element.getType() + "/" + element.getPatch();
                     if (!duplicates.add(mirror))
                         continue;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -127,7 +127,8 @@ private Node buildNode(HMCLGameRepository repository, Version version, String ga
                 Controllers.dialog(Launcher.i18n("login.empty_username"));
             else {
                 FileChooser chooser = new FileChooser();
-                chooser.setInitialDirectory(repository.getRunDirectory(id));
+                if (repository.getRunDirectory(id).isDirectory())
+                    chooser.setInitialDirectory(repository.getRunDirectory(id));
                 chooser.setTitle(Launcher.i18n("version.launch_script.save"));
                 chooser.getExtensionFilters().add(OperatingSystem.CURRENT_OS == OperatingSystem.WINDOWS
                         ? new FileChooser.ExtensionFilter(Launcher.i18n("extension.bat"), "*.bat")

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackFileSelectionPage.java
Patch:
@@ -66,6 +66,9 @@ public ModpackFileSelectionPage(WizardController controller, Profile profile, St
     }
 
     private CheckBoxTreeItem<String> getTreeItem(File file, String basePath) {
+        if (!file.exists())
+            return null;
+
         ModAdviser.ModSuggestion state = ModAdviser.ModSuggestion.SUGGESTED;
         if (basePath.length() > "minecraft/".length()) {
             state = adviser.advise(StringUtils.substringAfter(basePath, "minecraft/") + (file.isDirectory() ? "/" : ""), file.isDirectory());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/ZipEngine.java
Patch:
@@ -70,10 +70,10 @@ public void putDirectory(File sourceDir, BiFunction<String, Boolean, String> pat
      * modified pathName, null if you dont want this file zipped
      */
     private void putDirectoryImpl(File source, String basePath, BiFunction<String, Boolean, String> pathNameCallback) throws IOException {
-        File[] files;
+        File[] files = null;
         if (source.isDirectory())
             files = source.listFiles();
-        else
+        else if (source.isFile())
             files = new File[] { source };
 
         if (files == null)

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerController.java
Patch:
@@ -20,6 +20,7 @@
 import javafx.fxml.FXML;
 import javafx.scene.control.ScrollPane;
 import javafx.scene.layout.VBox;
+import org.jackhuang.hmcl.Launcher;
 import org.jackhuang.hmcl.download.MaintainTask;
 import org.jackhuang.hmcl.download.game.VersionJsonSaveTask;
 import org.jackhuang.hmcl.game.GameVersion;
@@ -89,7 +90,7 @@ private void onAdd() {
         Optional<String> gameVersion = GameVersion.minecraftVersion(profile.getRepository().getVersionJar(version));
 
         if (!gameVersion.isPresent())
-            Controllers.dialog("version.cannot_read");
+            Controllers.dialog(Launcher.i18n("version.cannot_read"));
         else
             Controllers.getDecorator().startWizard(new InstallerWizardProvider(profile, gameVersion.get(), version, forge, liteLoader, optiFine));
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LeftPaneController.java
Patch:
@@ -208,7 +208,7 @@ private void onRefreshedVersions(RefreshedVersionsEvent event) {
                                             .with(Task.of(Schedulers.javafx(), () -> {
                                                 Controllers.closeDialog();
                                                 checkAccount();
-                                            })).executor(),
+                                            })).executor(true),
                                     Launcher.i18n("modpack.installing"), "", null);
                             flag = false;
                         } catch (UnsupportedModpackException ignore) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/GameVersion.java
Patch:
@@ -116,7 +116,7 @@ public static Optional<String> minecraftVersion(File file) {
                     .getEntry("net/minecraft/client/Minecraft.class");
             if (minecraft != null)
                 return getVersionOfOldMinecraft(f, minecraft);
-            ZipArchiveEntry main = f.getEntry("net/minecraft/client/main/Launcher.class");
+            ZipArchiveEntry main = f.getEntry("net/minecraft/client/main/Main.class");
             ZipArchiveEntry minecraftServer = f.getEntry("net/minecraft/server/MinecraftServer.class");
             if ((main != null) && (minecraftServer != null))
                 return getVersionOfNewMinecraft(f, minecraftServer);

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -136,7 +136,7 @@ public static String i18n(String key, Object... formatArgs) {
     public static final File MINECRAFT_DIRECTORY = getWorkingDirectory("minecraft");
     public static final File HMCL_DIRECTORY = getWorkingDirectory("hmcl");
 
-    public static final String VERSION = "2.9";
+    public static final String VERSION = "@HELLO_MINECRAFT_LAUNCHER_VERSION_FOR_GRADLE_REPLACING@";
     public static final String NAME = "HMCL";
     public static final String TITLE = NAME + " " + VERSION;
     public static final ResourceBundle RESOURCE_BUNDLE = Settings.INSTANCE.getLocale().getResourceBundle();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -89,10 +89,10 @@ public VersionsPage(WizardController controller, String title, String gameVersio
         chkSnapshot.selectedProperty().addListener(listener);
         chkOld.selectedProperty().addListener(listener);
 
-        list.getSelectionModel().selectedItemProperty().addListener((a, b, newValue) -> {
-            if (newValue == null)
+        list.setOnMouseClicked(e -> {
+            if (list.getSelectionModel().getSelectedIndex() < 0)
                 return;
-            controller.getSettings().put(libraryId, newValue.getRemoteVersion());
+            controller.getSettings().put(libraryId, list.getSelectionModel().getSelectedItem().getRemoteVersion());
             callback.run();
         });
         refresh();

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -67,6 +67,8 @@ public static void main(String[] args) {
         Thread.setDefaultUncaughtExceptionHandler(CRASH_REPORTER);
 
         try {
+            Logging.start();
+
             // NetworkUtils.setUserAgentSupplier(() -> "Hello Minecraft! Launcher");
             Constants.UI_THREAD_SCHEDULER = Constants.JAVAFX_UI_THREAD_SCHEDULER;
             UPGRADER.parseArguments(VersionNumber.asVersion(VERSION), Arrays.asList(args));
@@ -134,7 +136,7 @@ public static String i18n(String key, Object... formatArgs) {
     public static final File MINECRAFT_DIRECTORY = getWorkingDirectory("minecraft");
     public static final File HMCL_DIRECTORY = getWorkingDirectory("hmcl");
 
-    public static final String VERSION = "@HELLO_MINECRAFT_LAUNCHER_VERSION_FOR_GRADLE_REPLACING@";
+    public static final String VERSION = "2.9";
     public static final String NAME = "HMCL";
     public static final String TITLE = NAME + " " + VERSION;
     public static final ResourceBundle RESOURCE_BUNDLE = Settings.INSTANCE.getLocale().getResourceBundle();

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -26,9 +26,8 @@ public final class Main {
 
     public static void main(String[] args) {
         String currentDirectory = new File("").getAbsolutePath();
-        Logging.LOG.info("Current directory: " + currentDirectory);
         if (currentDirectory.contains("!")) {
-            Logging.LOG.severe("Exclamation mark(!) is not allowed in the path where HMCL is in. Forcibly exit.");
+            System.err.println("Exclamation mark(!) is not allowed in the path where HMCL is in. Forcibly exit.");
 
             // No Chinese translation because both Swing and JavaFX cannot render Chinese character properly when exclamation mark exists in the path.
             String message = "Exclamation mark(!) is not allowed in the path where HMCL is in.\nThe path is " + currentDirectory;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hmcl.ui;
 
+import com.jfoenix.concurrency.JFXUtilities;
 import com.jfoenix.controls.JFXDialog;
 import javafx.scene.Node;
 import javafx.scene.Scene;

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -535,7 +535,7 @@ private void checkProfileMap() {
     }
 
     private void onProfileChanged() {
-        EventBus.EVENT_BUS.fireEvent(new ProfileChangedEvent(SETTINGS, getSelectedProfile()));
+        EventBus.EVENT_BUS.fireEvent(new ProfileChangedEvent(this, getSelectedProfile()));
         getSelectedProfile().getRepository().refreshVersionsAsync().start();
     }
 
@@ -548,11 +548,11 @@ private void profileNameChanged(ObservableValue<? extends String> observableValu
      * Invoked by loading GUI phase.
      */
     public void onProfileLoading() {
-        EventBus.EVENT_BUS.fireEvent(new ProfileLoadingEvent(SETTINGS));
+        EventBus.EVENT_BUS.fireEvent(new ProfileLoadingEvent(this, getProfiles()));
         onProfileChanged();
     }
 
     public void onAccountLoading() {
-        EventBus.EVENT_BUS.fireEvent(new AccountLoadingEvent(SETTINGS));
+        EventBus.EVENT_BUS.fireEvent(new AccountLoadingEvent(this, getAccounts()));
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Decorator.java
Patch:
@@ -45,6 +45,7 @@
 import javafx.stage.Screen;
 import javafx.stage.Stage;
 import javafx.stage.StageStyle;
+import org.jackhuang.hmcl.Launcher;
 import org.jackhuang.hmcl.setting.EnumBackgroundImage;
 import org.jackhuang.hmcl.setting.Settings;
 import org.jackhuang.hmcl.setting.Theme;
@@ -140,7 +141,7 @@ public Decorator(Stage primaryStage, Node mainPage, String title, boolean max, b
 
         FXUtils.loadFXML(this, "/assets/fxml/decorator.fxml");
 
-        onCloseButtonAction = new SimpleObjectProperty<>(this, "onCloseButtonAction", primaryStage::close);
+        onCloseButtonAction = new SimpleObjectProperty<>(this, "onCloseButtonAction", Launcher::stopApplication);
 
         primaryStage.initStyle(StageStyle.UNDECORATED);
         btnClose.setGraphic(close);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/TaskExecutorDialogPane.java
Patch:
@@ -57,7 +57,9 @@ public TaskExecutorDialogPane(Runnable cancel) {
 
     public void setExecutor(TaskExecutor executor) {
         this.executor = executor;
-        taskListPane.setExecutor(executor);
+
+        if (executor != null)
+            taskListPane.setExecutor(executor);
     }
 
     public StringProperty titleProperty() {

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -37,6 +37,7 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
     private static final HashMap<String, String> SOURCE = new HashMap<String, String>() {
         {
             put("javafx.fxml.LoadException", Launcher.i18n("crash.NoClassDefFound"));
+            put("Location is not set", Launcher.i18n("crash.NoClassDefFound"));
             put("UnsatisfiedLinkError", Launcher.i18n("crash.user_fault"));
             put("java.lang.NoClassDefFoundError", Launcher.i18n("crash.NoClassDefFound"));
             put("java.lang.VerifyError", Launcher.i18n("crash.NoClassDefFound"));

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -78,7 +78,7 @@ private void launch0(Profile profile, Account account, String selectedVersion, F
         VersionSetting setting = profile.getVersionSetting(selectedVersion);
         Optional<String> gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version));
 
-        executor = Task.of(Schedulers.javafx(), () -> Controllers.dialog(launchingStepsPane))
+        TaskExecutor executor = this.executor = Task.of(Schedulers.javafx(), () -> Controllers.dialog(launchingStepsPane))
                 .then(Task.of(Schedulers.javafx(), () -> emitStatus(LoadingState.DEPENDENCIES)))
                 .then(variables -> {
                     if (setting.isNotCheckGame())

File: HMCL/src/main/java/org/jackhuang/hmcl/Launcher.java
Patch:
@@ -86,6 +86,8 @@ public static void stopApplication() {
     }
 
     public static void stopWithoutPlatform() {
+        Logging.LOG.info("Stopping application without JavaFX Toolkit");
+
         JFXUtilities.runInFX(() -> {
             if (Controllers.getStage() == null)
                 return;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -93,6 +93,8 @@ public static LeftPaneController getLeftPaneController() {
     public static void initialize(Stage stage) {
         Controllers.stage = stage;
 
+        stage.setOnCloseRequest(e -> Launcher.stopApplication());
+
         decorator = new Decorator(stage, getMainPage(), Launcher.TITLE, false, true);
         decorator.showPage(null);
         leftPaneController = new LeftPaneController(decorator.getLeftPane());

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Decorator.java
Patch:
@@ -74,7 +74,7 @@ public final class Decorator extends StackPane implements TaskExecutorDialogWiza
     private static final SVGGlyph close = Lang.apply(new SVGGlyph(0, "CLOSE", "M810 274l-238 238 238 238-60 60-238-238-238 238-60-60 238-238-238-238 60-60 238 238 238-238z", Color.WHITE),
             glyph -> { glyph.setPrefSize(12, 12); glyph.setSize(12, 12); });
 
-    private final ObjectProperty<Runnable> onCloseButtonAction = new SimpleObjectProperty<>(Launcher::stopApplication);
+    private final ObjectProperty<Runnable> onCloseButtonAction;
     private final BooleanProperty customMaximize = new SimpleBooleanProperty(false);
 
     private final Stage primaryStage;
@@ -141,6 +141,8 @@ public Decorator(Stage primaryStage, Node mainPage, String title, boolean max, b
 
         FXUtils.loadFXML(this, "/assets/fxml/decorator.fxml");
 
+        onCloseButtonAction = new SimpleObjectProperty<>(this, "onCloseButtonAction", primaryStage::close);
+
         primaryStage.initStyle(StageStyle.UNDECORATED);
         btnClose.setGraphic(close);
         btnMin.setGraphic(minus);

File: HMCL/src/main/java/org/jackhuang/hmcl/util/CrashReporter.java
Patch:
@@ -45,6 +45,7 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("java.lang.ClassFormatError", Launcher.i18n("crash.NoClassDefFound"));
             put("java.lang.OutOfMemoryError", "FUCKING MEMORY LIMIT!");
             put("Trampoline", Launcher.i18n("launcher.update_java"));
+            put("com.sun.javafx.css.StyleManager.findMatchingStyles", Launcher.i18n("launcher.update_java"));
             put("NoSuchAlgorithmException", "Has your operating system been installed completely or is a ghost system?");
         }
     };

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallTypePage.java
Patch:
@@ -37,6 +37,8 @@ public InstallTypePage(WizardController controller) {
 
         FXUtils.loadFXML(this, "/assets/fxml/download/dltype.fxml");
         list.setOnMouseClicked(e -> {
+            if (list.getSelectionModel().getSelectedIndex() < 0)
+                return;
             controller.getSettings().put(INSTALL_TYPE, list.getSelectionModel().getSelectedIndex());
             controller.onNext();
         });

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -87,6 +87,8 @@ public static void stopApplication() {
 
     public static void stopWithoutPlatform() {
         JFXUtilities.runInFX(() -> {
+            if (Controllers.getStage() == null)
+                return;
             Controllers.getStage().close();
 
             Logging.LOG.info("Shutting down executor services.");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPage.java
Patch:
@@ -96,7 +96,7 @@ public VersionsPage(WizardController controller, String title, String gameVersio
         list.getSelectionModel().selectedItemProperty().addListener((a, b, newValue) -> {
             if (newValue == null)
                 return;
-            controller.getSettings().put(libraryId, newValue.getRemoteVersion().getSelfVersion());
+            controller.getSettings().put(libraryId, newValue.getRemoteVersion());
             callback.run();
         });
         refresh();

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineBMCLVersionList.java
Patch:
@@ -67,7 +67,7 @@ public void execute() {
                     if (StringUtils.isBlank(element.getGameVersion()))
                         continue;
                     VersionNumber.parseVersion(element.getGameVersion())
-                            .ifPresent(gameVersion -> versions.put(gameVersion, new RemoteVersion<>(gameVersion, version, mirror, null)));
+                            .ifPresent(gameVersion -> versions.put(gameVersion, new OptiFineRemoteVersion(gameVersion, version, () -> mirror)));
                 }
             }
         };

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/optifine/OptiFineRemoteVersion.java
Patch:
@@ -24,8 +24,8 @@
 public class OptiFineRemoteVersion extends RemoteVersion<Void> {
     private final Supplier<String> url;
 
-    public OptiFineRemoteVersion(String gameVersion, String selfVersion, Supplier<String> url, Void tag) {
-        super(gameVersion, selfVersion, "", tag);
+    public OptiFineRemoteVersion(String gameVersion, String selfVersion, Supplier<String> url) {
+        super(gameVersion, selfVersion, "", null);
 
         this.url = url;
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/VersionsPageItem.java
Patch:
@@ -30,6 +30,8 @@
 import org.jackhuang.hmcl.download.optifine.OptiFineRemoteVersion;
 import org.jackhuang.hmcl.ui.FXUtils;
 
+import java.util.Objects;
+
 /**
  * @author huangyuhui
  */
@@ -47,7 +49,7 @@ public final class VersionsPageItem extends StackPane {
     private StackPane imageViewContainer;
 
     public VersionsPageItem(RemoteVersion<?> remoteVersion) {
-        this.remoteVersion = remoteVersion;
+        this.remoteVersion = Objects.requireNonNull(remoteVersion);
 
         FXUtils.loadFXML(this, "/assets/fxml/download/versions-list-item.fxml");
         lblSelfVersion.setText(remoteVersion.getSelfVersion());

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -530,8 +530,8 @@ private void checkProfileMap() {
     }
 
     private void onProfileChanged() {
-        getSelectedProfile().getRepository().refreshVersionsAsync().subscribe(() ->
-                EventBus.EVENT_BUS.fireEvent(new ProfileChangedEvent(SETTINGS, getSelectedProfile())));
+        EventBus.EVENT_BUS.fireEvent(new ProfileChangedEvent(SETTINGS, getSelectedProfile()));
+        getSelectedProfile().getRepository().refreshVersionsAsync().start();
     }
 
     private void profileNameChanged(ObservableValue<? extends String> observableValue, String oldValue, String newValue) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/Log4jHandler.java
Patch:
@@ -71,7 +71,8 @@ public void run() {
         setName("log4j-handler");
 
         try {
-            reader.parse(new InputSource(inputStream));
+            InputSource inputSource = new InputSource(inputStream);
+            reader.parse(inputSource);
         } catch (InterruptedIOException e) {
             // Game has been interrupted.
             interrupted.set(true);
@@ -108,7 +109,7 @@ public Future<?> newLine(String log) {
                 if (broken)
                     System.out.println(line);
 
-                byte[] bytes = (line + OperatingSystem.LINE_SEPARATOR).getBytes(Charsets.UTF_8);
+                byte[] bytes = (line + OperatingSystem.LINE_SEPARATOR).getBytes(Constants.SYSTEM_CHARSET);
                 outputStream.write(bytes);
                 outputStream.flush();
             } catch (IOException e) {

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -530,8 +530,8 @@ private void checkProfileMap() {
     }
 
     private void onProfileChanged() {
-        getSelectedProfile().getRepository().refreshVersionsAsync().start();
-        EventBus.EVENT_BUS.fireEvent(new ProfileChangedEvent(SETTINGS, getSelectedProfile()));
+        getSelectedProfile().getRepository().refreshVersionsAsync().subscribe(() ->
+                EventBus.EVENT_BUS.fireEvent(new ProfileChangedEvent(SETTINGS, getSelectedProfile())));
     }
 
     private void profileNameChanged(ObservableValue<? extends String> observableValue, String oldValue, String newValue) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultGameBuilder.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hmcl.download;
 
 import org.jackhuang.hmcl.download.game.*;
+import org.jackhuang.hmcl.game.SimpleVersionProvider;
 import org.jackhuang.hmcl.game.Version;
 import org.jackhuang.hmcl.task.ParallelTask;
 import org.jackhuang.hmcl.task.Task;
@@ -51,7 +52,7 @@ public DownloadProvider getDownloadProvider() {
     public Task buildAsync() {
         return new VersionJsonDownloadTask(gameVersion, dependencyManager).then(variables -> {
             Version version = Constants.GSON.fromJson(variables.<String>get(VersionJsonDownloadTask.ID), Version.class);
-            version = version.setId(name).setJar(null);
+            version = version.setId(name).setJar(null).resolve(new SimpleVersionProvider());
             variables.set("version", version);
             Task result = new ParallelTask(
                     new GameAssetDownloadTask(dependencyManager, version),

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -143,6 +143,8 @@ public boolean renameVersion(String from, String to) {
     }
 
     public boolean removeVersionFromDisk(String id) {
+        if (!versions.containsKey(id))
+            return true;
         File file = getVersionRoot(id);
         if (!file.exists())
             return true;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -193,8 +193,7 @@ private void loadVersions() {
     private void loadVersions(Profile profile) {
         this.profile = profile;
         List<Node> children = new LinkedList<>();
-        List<Version> versions = new LinkedList<>(profile.getRepository().getVersions());
-        for (Version version : versions) {
+        for (Version version : profile.getRepository().getVersions()) {
             children.add(buildNode(profile, version.getId(), GameVersion.minecraftVersion(profile.getRepository().getVersionJar(version.getId())).orElse("Unknown")));
         }
         FXUtils.resetChildren(masonryPane, children);

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackExportTask.java
Patch:
@@ -85,7 +85,7 @@ public void execute() throws Exception {
                 return null;
             });
 
-            Version mv = repository.getVersion(version).resolve(repository);
+            Version mv = repository.getResolvedVersion(version);
             String gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version))
                     .orElseThrow(() ->  new IllegalStateException("Cannot parse the version of " + version));
             zip.putTextFile(Constants.GSON.toJson(mv.setJar(gameVersion)), "minecraft/pack.json"); // Making "jar" to gameVersion is to be compatible with old HMCL.

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerController.java
Patch:
@@ -53,7 +53,7 @@ private void initialize() {
     public void loadVersion(Profile profile, String versionId) {
         this.profile = profile;
         this.versionId = versionId;
-        this.version = profile.getRepository().getVersion(versionId).resolve(profile.getRepository());
+        this.version = profile.getRepository().getResolvedVersion(versionId);
 
         contentPane.getChildren().clear();
         forge = liteLoader = optiFine = null;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/VersionPage.java
Patch:
@@ -161,7 +161,7 @@ private void onManagement() {
                 deleteVersion(profile, version);
                 break;
             case 2: // redownload asset index
-                new GameAssetIndexDownloadTask(profile.getDependency(), profile.getRepository().getVersion(version).resolve(profile.getRepository())).start();
+                new GameAssetIndexDownloadTask(profile.getDependency(), profile.getRepository().getResolvedVersion(version)).start();
                 break;
             case 3: // delete libraries
                 FileUtils.deleteDirectoryQuietly(new File(profile.getRepository().getBaseDirectory(), "libraries"));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetDownloadTask.java
Patch:
@@ -55,7 +55,7 @@ public final class GameAssetDownloadTask extends Task {
      */
     public GameAssetDownloadTask(AbstractDependencyManager dependencyManager, Version version) {
         this.dependencyManager = dependencyManager;
-        this.version = version;
+        this.version = version.requireResolved();
         this.refreshTask = new GameAssetRefreshTask(dependencyManager, version);
         this.dependents.add(refreshTask);
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetIndexDownloadTask.java
Patch:
@@ -49,7 +49,7 @@ public final class GameAssetIndexDownloadTask extends Task {
      */
     public GameAssetIndexDownloadTask(AbstractDependencyManager dependencyManager, Version version) {
         this.dependencyManager = dependencyManager;
-        this.version = version;
+        this.version = version.requireResolved();
         setSignificance(TaskSignificance.MODERATE);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetRefreshTask.java
Patch:
@@ -54,7 +54,7 @@ public final class GameAssetRefreshTask extends TaskResult<Collection<Pair<File,
      */
     public GameAssetRefreshTask(AbstractDependencyManager dependencyManager, Version version) {
         this.dependencyManager = dependencyManager;
-        this.version = version;
+        this.version = version.requireResolved();
         this.assetIndexInfo = version.getAssetIndex();
         this.assetIndexFile = dependencyManager.getGameRepository().getIndexFile(version.getId(), assetIndexInfo.getId());
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameLibrariesTask.java
Patch:
@@ -48,7 +48,7 @@ public final class GameLibrariesTask extends Task {
      */
     public GameLibrariesTask(AbstractDependencyManager dependencyManager, Version version) {
         this.dependencyManager = dependencyManager;
-        this.version = version;
+        this.version = version.requireResolved();
         setSignificance(TaskSignificance.MODERATE);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameLoggingDownloadTask.java
Patch:
@@ -49,7 +49,7 @@ public final class GameLoggingDownloadTask extends Task {
      */
     public GameLoggingDownloadTask(DependencyManager dependencyManager, Version version) {
         this.dependencyManager = dependencyManager;
-        this.version = version;
+        this.version = version.requireResolved();
         setSignificance(TaskSignificance.MODERATE);
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/VersionJsonSaveTask.java
Patch:
@@ -44,7 +44,7 @@ public final class VersionJsonSaveTask extends Task {
      */
     public VersionJsonSaveTask(DefaultGameRepository repository, Version version) {
         this.repository = repository;
-        this.version = version;
+        this.version = version.requireResolved();
 
         setSignificance(TaskSignificance.MODERATE);
     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/ClassicVersion.java
Patch:
@@ -29,7 +29,7 @@
 public class ClassicVersion extends Version {
 
     public ClassicVersion() {
-        super("Classic", "${auth_player_name} ${auth_session} --workDir ${game_directory}",
+        super(true, "Classic", "${auth_player_name} ${auth_session} --workDir ${game_directory}",
                 null, "net.minecraft.client.Minecraft", null, null, null, null,
                 Arrays.asList(new ClassicLibrary("lwjgl"), new ClassicLibrary("jinput"), new ClassicLibrary("lwjgl_util")),
                 null, null, null, ReleaseType.UNKNOWN, new Date(), new Date(), 0);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/Launcher.java
Patch:
@@ -56,7 +56,7 @@ public Launcher(GameRepository repository, String versionId, AuthInfo authInfo,
         this.listener = listener;
         this.daemon = daemon;
 
-        version = repository.getVersion(versionId).resolve(repository);
+        version = repository.getResolvedVersion(versionId);
     }
 
     /**

File: HMCL/src/main/java/org/jackhuang/hmcl/game/LauncherHelper.java
Patch:
@@ -25,6 +25,7 @@
 import org.jackhuang.hmcl.auth.AuthenticationException;
 import org.jackhuang.hmcl.auth.ServerDisconnectException;
 import org.jackhuang.hmcl.download.DefaultDependencyManager;
+import org.jackhuang.hmcl.download.MaintainTask;
 import org.jackhuang.hmcl.launch.*;
 import org.jackhuang.hmcl.mod.CurseCompletionTask;
 import org.jackhuang.hmcl.setting.LauncherVisibility;
@@ -76,7 +77,7 @@ private void launch0(String selectedVersion, File scriptFile) {
         Profile profile = Settings.INSTANCE.getSelectedProfile();
         GameRepository repository = profile.getRepository();
         DefaultDependencyManager dependencyManager = profile.getDependency();
-        Version version = repository.getVersion(selectedVersion);
+        Version version = repository.getVersion(selectedVersion).resolve(repository);
         Account account = Settings.INSTANCE.getSelectedAccount();
         VersionSetting setting = profile.getVersionSetting(selectedVersion);
         Optional<String> gameVersion = GameVersion.minecraftVersion(repository.getVersionJar(version));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerController.java
Patch:
@@ -62,7 +62,7 @@ public void loadVersion(Profile profile, String versionId) {
             Consumer<InstallerItem> removeAction = x -> {
                 LinkedList<Library> newList = new LinkedList<>(version.getLibraries());
                 newList.remove(library);
-                new MaintainTask(profile.getRepository(), version.setLibraries(newList))
+                new MaintainTask(version.setLibraries(newList))
                         .then(variables -> new VersionJsonSaveTask(profile.getRepository(), variables.get(MaintainTask.ID)))
                         .with(profile.getRepository().refreshVersionsAsync())
                         .with(Task.of(Schedulers.javafx(), () -> loadVersion(this.profile, this.versionId)))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultDependencyManager.java
Patch:
@@ -84,17 +84,17 @@ public Task installLibraryAsync(String gameVersion, Version version, String libr
             case "forge":
                 return new ForgeInstallTask(this, gameVersion, version, libraryVersion)
                         .then(variables -> new LibrariesUniqueTask(variables.get("version")))
-                        .then(variables -> new MaintainTask(repository, variables.get("version")))
+                        .then(variables -> new MaintainTask(variables.get("version")))
                         .then(variables -> new VersionJsonSaveTask(repository, variables.get("version")));
             case "liteloader":
                 return new LiteLoaderInstallTask(this, gameVersion, version, libraryVersion)
                         .then(variables -> new LibrariesUniqueTask(variables.get("version")))
-                        .then(variables -> new MaintainTask(repository, variables.get("version")))
+                        .then(variables -> new MaintainTask(variables.get("version")))
                         .then(variables -> new VersionJsonSaveTask(repository, variables.get("version")));
             case "optifine":
                 return new OptiFineInstallTask(this, gameVersion, version, libraryVersion)
                         .then(variables -> new LibrariesUniqueTask(variables.get("version")))
-                        .then(variables -> new MaintainTask(repository, variables.get("version")))
+                        .then(variables -> new MaintainTask(variables.get("version")))
                         .then(variables -> new VersionJsonSaveTask(repository, variables.get("version")));
             default:
                 throw new IllegalArgumentException("Library id " + libraryId + " is unrecognized.");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -167,7 +167,7 @@ protected Version resolve(VersionProvider provider, Set<String> resolvedSoFar) t
                 jar == null ? parent.jar : jar,
                 assetIndex == null ? parent.assetIndex : assetIndex,
                 assets == null ? parent.assets : assets,
-                Lang.merge(parent.libraries, this.libraries),
+                Lang.merge(this.libraries, parent.libraries),
                 Lang.merge(parent.compatibilityRules, this.compatibilityRules),
                 downloads == null ? parent.downloads : downloads,
                 logging == null ? parent.logging : logging,

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/ModController.java
Patch:
@@ -164,7 +164,7 @@ private void onAdd() {
                 prompt.add(Main.i18n("mods.add.success", String.join(", ", succeeded)));
             if (!failed.isEmpty())
                 prompt.add(Main.i18n("mods.add.failed", String.join(", ", failed)));
-            Controllers.dialog(String.join("\n",  prompt), Main.i18n("mods.add"));
+            Controllers.dialog(String.join("\n", prompt), Main.i18n("mods.add"));
             loadMods(modManager, versionId);
         })).start();
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/NoneMultipleSelectionModel.java
Patch:
@@ -23,7 +23,7 @@
 
 public class NoneMultipleSelectionModel<T> extends MultipleSelectionModel<T> {
 
-	public NoneMultipleSelectionModel() {
+    public NoneMultipleSelectionModel() {
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/construct/RipplerContainer.java
Patch:
@@ -218,12 +218,12 @@ private static class StyleableProperties {
 
         private static final CssMetaData<RipplerContainer, Paint> RIPPLER_FILL = new CssMetaData<RipplerContainer, Paint>("-jfx-rippler-fill", StyleConverter.getPaintConverter(), Color.rgb(0, 200, 255)) {
             @Override
-			public boolean isSettable(RipplerContainer control) {
+            public boolean isSettable(RipplerContainer control) {
                 return control.ripplerFill == null || !control.ripplerFill.isBound();
             }
 
             @Override
-			public StyleableProperty<Paint> getStyleableProperty(RipplerContainer control) {
+            public StyleableProperty<Paint> getStyleableProperty(RipplerContainer control) {
                 return control.ripplerFillProperty();
             }
         };

File: HMCLCore/src/main/java/org/jackhuang/hmcl/launch/DefaultLauncher.java
Patch:
@@ -198,7 +198,7 @@ public Map<String, Boolean> getFeatures() {
     }
 
     private final Map<String, Supplier<Boolean>> forbiddens = Lang.mapOf(
-            new Pair<>("-Xincgc", () -> options.getJava().getParsedVersion() >= JavaVersion.JAVA_9)
+            new Pair<String, Supplier<Boolean>>("-Xincgc", () -> options.getJava().getParsedVersion() >= JavaVersion.JAVA_9)
     );
 
     protected Map<String, Supplier<Boolean>> getForbiddens() {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilAccount.java
Patch:
@@ -300,14 +300,14 @@ public Optional<ProfileTexture> getSkin(GameProfile profile) throws IOException,
 
         Property textureProperty;
 
-        if (getUserProperties().containsKey("textures"))
-            textureProperty = getUserProperties().get("textures");
+        if (profile.getProperties().containsKey("textures"))
+            textureProperty = profile.getProperties().get("textures");
         else {
             ProfileResponse response = GSON.fromJson(NetworkUtils.doGet(NetworkUtils.toURL(baseProfile + UUIDTypeAdapter.fromUUID(profile.getId()))), ProfileResponse.class);
             if (response.getProperties() == null) return Optional.empty();
             textureProperty = response.getProperties().get("textures");
             if (textureProperty == null) return Optional.empty();
-            getUserProperties().putAll(response.getProperties());
+            profile.getProperties().putAll(response.getProperties());
         }
 
         TextureResponse texture;

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SettingsPage.java
Patch:
@@ -139,6 +139,7 @@ public final class SettingsPage extends StackPane implements DecoratorPage {
         FXUtils.installTooltip(btnUpdate, 0, 5000, 0, new Tooltip(Main.i18n("update.tooltip")));
         checkUpdate();
 
+        // background
         backgroundItem.loadChildren(Collections.singletonList(
                 backgroundItem.createChildren(Main.i18n("launcher.background.default"), EnumBackgroundImage.DEFAULT)
         ));
@@ -156,6 +157,7 @@ public final class SettingsPage extends StackPane implements DecoratorPage {
             Settings.INSTANCE.setBackgroundImageType((EnumBackgroundImage) newValue.getUserData());
         });
 
+        // theme
         themeItem.loadChildren(Arrays.asList(
                 themeItem.createChildren(Main.i18n("color.blue"), Theme.BLUE),
                 themeItem.createChildren(Main.i18n("color.dark_blue"), Theme.DARK_BLUE),

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/SafeIntStringConverter.java
Patch:
@@ -25,19 +25,19 @@
 /**
  * @author huangyuhui
  */
-public final class SafeIntStringConverter extends StringConverter<Integer> {
+public final class SafeIntStringConverter extends StringConverter<Number> {
     public static final SafeIntStringConverter INSTANCE = new SafeIntStringConverter();
 
     private SafeIntStringConverter() {
     }
 
     @Override
-    public Integer fromString(String string) {
+    public Number fromString(String string) {
         return Optional.ofNullable(string).map(Lang::toIntOrNull).orElse(null);
     }
 
     @Override
-    public String toString(Integer object) {
+    public String toString(Number object) {
         return Optional.ofNullable(object).map(Object::toString).orElse("");
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/VersionPage.java
Patch:
@@ -92,7 +92,7 @@ public void load(String id, Profile profile) {
 
         title.set(Main.i18n("settings.game") + " - " + id);
 
-        versionSettingsController.loadVersionSetting(profile, id, profile.getVersionSetting(id));
+        versionSettingsController.loadVersionSetting(profile, id);
         modController.setParentTab(tabPane);
         modTab.setUserData(modController);
         modController.loadMods(profile.getModManager(), id);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/DefaultGameRepository.java
Patch:
@@ -211,7 +211,7 @@ protected void refreshVersionsImpl() {
                 if (EventBus.EVENT_BUS.fireEvent(new LoadedOneVersionEvent(this, resolved)) != Event.Result.DENY)
                     versions.put(version.getId(), version);
             } catch (VersionNotFoundException e) {
-                Logging.LOG.log(Level.WARNING, "Ignoring version {0} because it inherits from a nonexistent version.");
+                Logging.LOG.log(Level.WARNING, "Ignoring version {0} because it inherits from a nonexistent version.", version.getId());
             }
         }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Version.java
Patch:
@@ -143,11 +143,11 @@ public boolean install(String id) {
     /**
      * Resolve given version
      */
-    public Version resolve(VersionProvider provider) {
+    public Version resolve(VersionProvider provider) throws VersionNotFoundException {
         return resolve(provider, new HashSet<>());
     }
 
-    protected Version resolve(VersionProvider provider, Set<String> resolvedSoFar) {
+    protected Version resolve(VersionProvider provider, Set<String> resolvedSoFar) throws VersionNotFoundException {
         if (inheritsFrom == null)
             return this;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/VersionProvider.java
Patch:
@@ -39,5 +39,5 @@ public interface VersionProvider {
      * @param id the id of version
      * @return the version you want
      */
-    Version getVersion(String id);
+    Version getVersion(String id) throws VersionNotFoundException;
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -203,7 +203,7 @@ public void execute() throws Exception {
                     if (!FileUtils.makeDirectory(file.getAbsoluteFile().getParentFile()))
                         throw new IOException("Unable to make parent directory " + file);
                     try {
-                        FileUtils.cutFile(temp, file);
+                        FileUtils.moveFile(temp, file);
                     } catch (Exception e) {
                         throw new IOException("Unable to move temp file from " + temp + " to " + file, e);
                     }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/FileUtils.java
Patch:
@@ -236,7 +236,7 @@ public static void copyFile(File srcFile, File destFile)
         doCopyFile(srcFile, destFile);
     }
 
-    public static void cutFile(File srcFile, File destFile) throws IOException {
+    public static void moveFile(File srcFile, File destFile) throws IOException {
         copyFile(srcFile, destFile);
         srcFile.delete();
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Decorator.java
Patch:
@@ -149,7 +149,6 @@ public Decorator(Stage primaryStage, Node mainPage, String title, boolean max, b
                 btnMax.fire();
         });
 
-        drawerWrapper.getChildren().remove(dialog);
         dialog.setDialogContainer(drawerWrapper);
         dialog.setOnDialogClosed(e -> dialogShown = false);
         dialog.setOnDialogOpened(e -> dialogShown = true);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/game/GameAssetIndexDownloadTask.java
Patch:
@@ -62,7 +62,7 @@ public List<Task> getDependencies() {
     public void execute() throws Exception {
         AssetIndexInfo assetIndexInfo = version.getAssetIndex();
         File assetDir = dependencyManager.getGameRepository().getAssetDirectory(version.getId(), assetIndexInfo.getId());
-        if (FileUtils.makeDirectory(assetDir))
+        if (!FileUtils.makeDirectory(assetDir))
             throw new IOException("Cannot create directory: " + assetDir);
         File assetIndexFile = dependencyManager.getGameRepository().getIndexFile(version.getId(), assetIndexInfo.getId());
         dependencies.add(new FileDownloadTask(

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/Controllers.java
Patch:
@@ -123,7 +123,7 @@ public static void dialog(String text, String title, int type) {
     }
 
     public static void dialog(String text, String title, int type, Runnable onAccept) {
-        dialog(new MessageDialogPane(text, title, decorator.getDialog(), MessageBox.INFORMATION_MESSAGE, onAccept));
+        dialog(new MessageDialogPane(text, title, decorator.getDialog(), type, onAccept));
     }
 
     public static void confirmDialog(String text, String title, Runnable onAccept, Runnable onCacnel) {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LeftPaneController.java
Patch:
@@ -68,7 +68,7 @@ public LeftPaneController(AdvancedListBox leftPane) {
                     iconedItem.prefWidthProperty().bind(leftPane.widthProperty());
                     iconedItem.setOnMouseClicked(e -> Controllers.navigate(Controllers.getSettingsPage()));
                 }))
-                .startCategory(Main.i18n("profile"))
+                .startCategory(Main.i18n("profile").toUpperCase())
                 .add(profilePane);
 
         EventBus.EVENT_BUS.channel(ProfileLoadingEvent.class).register(this::onProfilesLoading);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/task/FileDownloadTask.java
Patch:
@@ -198,11 +198,11 @@ public void execute() throws Exception {
                     if (!FileUtils.makeDirectory(file.getAbsoluteFile().getParentFile()))
                         throw new IOException("Unable to make parent directory " + file);
                     if (!temp.renameTo(file))
-                        throw new IOException("Unable move temp file to " + file);
+                        throw new IOException("Unable to move temp file from " + temp + " to " + file);
                 }
 
                 if (downloaded != contentLength)
-                    throw new IllegalStateException("Unexptected file size: " + downloaded + ", expected: " + contentLength);
+                    throw new IllegalStateException("Unexpected file size: " + downloaded + ", expected: " + contentLength);
 
                 // Check hash code
                 if (hash != null) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/auth/yggdrasil/YggdrasilAccount.java
Patch:
@@ -265,8 +265,8 @@ public String toString() {
         return "YggdrasilAccount[username=" + getUsername() + "]";
     }
 
-    private static final String BASE_URL = "http://localhost:8080/authserver/"; //"https://authserver.mojang.com/";
-    private static final String BASE_PROFILE = "http://localhost:8080/sessionserver/session/minecraft/profile/"; //"https://sessionserver.mojang.com/session/minecraft/profile/";
+    private static final String BASE_URL = "https://authserver.mojang.com/";
+    private static final String BASE_PROFILE = "https://sessionserver.mojang.com/session/minecraft/profile/";
     private static final URL ROUTE_AUTHENTICATE = NetworkUtils.toURL(BASE_URL + "authenticate");
     private static final URL ROUTE_REFRESH = NetworkUtils.toURL(BASE_URL + "refresh");
     private static final URL ROUTE_VALIDATE = NetworkUtils.toURL(BASE_URL + "validate");

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/RemoteVersion.java
Patch:
@@ -27,7 +27,7 @@
  *
  * @author huangyuhui
  */
-public final class RemoteVersion<T> implements Comparable<RemoteVersion<T>> {
+public class RemoteVersion<T> implements Comparable<RemoteVersion<T>> {
 
     private final String gameVersion;
     private final String selfVersion;

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLModpackInstallTask.java
Patch:
@@ -19,7 +19,6 @@
 
 import com.google.gson.JsonParseException;
 import com.google.gson.reflect.TypeToken;
-import org.jackhuang.hmcl.download.DefaultDependencyManager;
 import org.jackhuang.hmcl.download.DependencyManager;
 import org.jackhuang.hmcl.download.game.VersionJsonSaveTask;
 import org.jackhuang.hmcl.mod.*;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/download/DefaultGameBuilder.java
Patch:
@@ -53,8 +53,8 @@ public DownloadProvider getDownloadProvider() {
     public Task buildAsync() {
         return new VersionJsonDownloadTask(gameVersion, dependencyManager).then(variables -> {
             Version version = Constants.GSON.fromJson(variables.<String>get(VersionJsonDownloadTask.ID), Version.class);
-            variables.set("version", version);
             version = version.setId(name).setJar(null);
+            variables.set("version", version);
             Task result = new ParallelTask(
                     new GameAssetDownloadTask(dependencyManager, version),
                     new GameLoggingDownloadTask(dependencyManager, version),

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/InstallerItem.java
Patch:
@@ -47,7 +47,8 @@ public InstallerItem(String artifact, String version, Consumer<InstallerItem> de
         lblInstallerVersion.setText(Main.i18n("archive.version") + ": " + version);
     }
 
-    public void onDelete() {
+    @FXML
+    private void onDelete() {
         deleteCallback.accept(this);
     }
 }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPage.java
Patch:
@@ -189,7 +189,8 @@ private void loadVersions(Profile profile) {
         FXUtils.resetChildren(masonryPane, children);
     }
 
-    public void onVersionManagement() {
+    @FXML
+    private void onVersionManagement() {
         versionPopup.hide();
         switch (versionList.getSelectionModel().getSelectedIndex()) {
             case 0:

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/VersionListItem.java
Patch:
@@ -50,7 +50,8 @@ public VersionListItem(String versionName, String gameVersion) {
         FXUtils.limitHeight(imageViewContainer, 32);
     }
 
-    public void onSettings() {
+    @FXML
+    private void onSettings() {
         handler.run();
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/download/InstallersPage.java
Patch:
@@ -128,7 +128,8 @@ public void cleanup(Map<String, Object> settings) {
         settings.remove(INSTALLER_TYPE);
     }
 
-    public void onInstall() {
+    @FXML
+    private void onInstall() {
         controller.getSettings().put("name", txtName.getText());
         controller.onFinish();
     }

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackFileSelectionPage.java
Patch:
@@ -137,7 +137,8 @@ public void cleanup(Map<String, Object> settings) {
         controller.getSettings().remove(MODPACK_FILE_SELECTION);
     }
 
-    public void onNext() {
+    @FXML
+    private void onNext() {
         LinkedList<String> list = new LinkedList<>();
         getFilesNeeded(rootNode, "minecraft", list);
         controller.getSettings().put(MODPACK_FILE_SELECTION, list);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/export/ModpackInfoPage.java
Patch:
@@ -69,7 +69,8 @@ private void checkValidation() {
         btnNext.setDisable(!txtModpackName.validate() || !txtModpackVersion.validate() || !txtModpackAuthor.validate());
     }
 
-    public void onNext() {
+    @FXML
+    private void onNext() {
         FileChooser fileChooser = new FileChooser();
         fileChooser.setTitle(Main.i18n("modpack.wizard.step.initialization.save"));
         fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(Main.i18n("modpack"), "*.zip"));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/game/Arguments.java
Patch:
@@ -92,7 +92,6 @@ public static List<String> parseArguments(List<Argument> arguments, Map<String,
 
     static {
         List<Argument> jvm = new LinkedList<>();
-        jvm.add(new RuledArgument(Collections.singletonList(new CompatibilityRule(CompatibilityRule.Action.ALLOW, new OSRestriction(OperatingSystem.OSX))), Collections.singletonList("-XstartOnFirstThread")));
         jvm.add(new RuledArgument(Collections.singletonList(new CompatibilityRule(CompatibilityRule.Action.ALLOW, new OSRestriction(OperatingSystem.WINDOWS))), Collections.singletonList("-XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump")));
         jvm.add(new RuledArgument(Collections.singletonList(new CompatibilityRule(CompatibilityRule.Action.ALLOW, new OSRestriction(OperatingSystem.WINDOWS, "^10\\."))), Arrays.asList("-Dos.name=Windows 10", "-Dos.version=10.0")));
         jvm.add(new StringArgument("-Djava.library.path=${natives_directory}"));

File: HMCL/src/main/java/org/jackhuang/hmcl/game/HMCLGameRepository.java
Patch:
@@ -131,6 +131,7 @@ private void loadVersionSetting(String id) {
                 initVersionSetting(id, versionSetting);
             } catch (Exception ex) {
                 // If [JsonParseException], [IOException] or [NullPointerException] happens, the json file is malformed and needed to be recreated.
+                initVersionSetting(id, new VersionSetting());
             }
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Profile.java
Patch:
@@ -64,6 +64,8 @@ public VersionSetting getGlobal() {
     }
 
     public void setGlobal(VersionSetting global) {
+        if (global == null)
+            global = new VersionSetting();
         globalProperty.set(global);
     }
 

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/VersionSetting.java
Patch:
@@ -310,7 +310,6 @@ public LaunchOptions createLaunchOptions(File gameDir) {
         x.setFullscreen(isFullscreen());
         x.setWrapper(getWrapper());
         x.setGameDir(gameDir);
-        x.setGameDirType(getGameDirType());
         x.setHeight(getHeight());
         x.setJavaArgs(getJavaArgs());
         x.setLaunchVersion(id);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainFrame.java
Patch:
@@ -394,6 +394,8 @@ private void initBorderColor() {
     }
 
     public void reloadColor(Theme t) {
+        if (isShowedMessage)
+            return;
         for (Map.Entry<String, String> entry : t.settings.entrySet()) {
             if (entry.getValue().startsWith("#"))
                 UIManager.put(entry.getKey(), GraphicsUtils.getWebColor(entry.getValue()));

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPagePanel.java
Patch:
@@ -402,7 +402,7 @@ private void btnImportModpackActionPerformed(java.awt.event.ActionEvent evt) {//
         fc.showOpenDialog(this);
         if (fc.getSelectedFile() == null)
             return;
-        String suggestedModpackId = JOptionPane.showInputDialog("Please enter your favourite game name", FileUtils.getBaseName(fc.getSelectedFile().getName()));
+        String suggestedModpackId = JOptionPane.showInputDialog(C.i18n("modpack.enter_name"), FileUtils.getBaseName(fc.getSelectedFile().getName()));
         TaskWindow.factory().append(ModpackManager.install(MainFrame.INSTANCE, fc.getSelectedFile(), Settings.getLastProfile().service(), suggestedModpackId)).execute();
         Settings.getLastProfile().service().version().refreshVersions();
     }//GEN-LAST:event_btnImportModpackActionPerformed

File: HMCL/src/main/java/org/jackhuang/hmcl/util/HMCLMinecraftService.java
Patch:
@@ -56,7 +56,7 @@ public class HMCLMinecraftService extends IMinecraftService {
     public HMCLMinecraftService(Profile p) {
         this.p = p;
         this.provider = new HMCLGameProvider(this);
-        provider.initializeMiencraft();
+        provider.initializeMinecraft();
         HMCLApi.EVENT_BUS.channel(RefreshingVersionsEvent.class).register(versionSettings::clear);
         HMCLApi.EVENT_BUS.channel(RefreshedVersionsEvent.class).registerFirst(() -> {
             if (!checkingModpack) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/download/MinecraftRemoteVersions.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.Collection;
 import org.jackhuang.hmcl.util.C;
 import org.jackhuang.hmcl.util.net.HTTPGetTask;
-import org.jackhuang.hmcl.util.net.NetUtils;
 import org.jackhuang.hmcl.util.task.Task;
 import org.jackhuang.hmcl.util.task.TaskWorker;
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/install/InstallerVersionList.java
Patch:
@@ -59,7 +59,7 @@ public abstract class InstallerVersionList {
      *
      * @return cached result.
      */
-    public List<InstallerVersion> getVersionsImpl(String mcVersion) {
+    private List<InstallerVersion> getVersionsImpl(String mcVersion) {
         if (versions == null || versionMap == null)
             return null;
         if (StrUtils.isBlank(mcVersion))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/install/forge/MinecraftForgeVersionList.java
Patch:
@@ -78,7 +78,6 @@ public void executeTask(boolean areDependTasksSucceeded) throws Exception {
                         MinecraftForgeVersion v = root.number.get(num);
                         InstallerVersion iv = new InstallerVersion(v.version, StrUtils.formatVersion(v.mcversion));
                         for (String[] f : v.files) {
-
                             String ver = v.mcversion + "-" + v.version;
                             if (!StrUtils.isBlank(v.branch))
                                 ver = ver + "-" + v.branch;
@@ -105,7 +104,7 @@ public void executeTask(boolean areDependTasksSucceeded) throws Exception {
                         versions.add(iv);
                     }
 
-                    versionMap.put(StrUtils.formatVersion(mcver), al);
+                    versionMap.put(mcver, al);
                 }
 
                 Collections.sort(versions, new InstallerVersionComparator());

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/launch/AbstractMinecraftLoader.java
Patch:
@@ -177,7 +177,7 @@ public List<String> makeLaunchingCommand() throws GameException {
             if (StrUtils.isNotBlank(options.getProxyUser()) && StrUtils.isNotBlank(options.getProxyPass())) {
                 res.add("--proxyUser");
                 res.add(options.getProxyUser());
-                res.add("-=proxyPass");
+                res.add("--proxyPass");
                 res.add(options.getProxyPass());
             }
         }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/launch/GameLauncher.java
Patch:
@@ -194,7 +194,7 @@ public File makeLauncher(String launcherName, List<String> str) throws IOExcepti
         boolean isWin = OS.os() == OS.WINDOWS;
         File f = new File(launcherName + (isWin ? ".bat" : ".sh"));
         if (!f.exists() && !f.createNewFile())
-            HMCLog.warn("Failed to create " + f);
+            throw new IOException("Script file " + f.getAbsolutePath() + " does not exist but cannot be created.");
         BufferedWriter writer;
         try (FileOutputStream fos = FileUtils.openOutputStream(f)) {
             writer = new BufferedWriter(new OutputStreamWriter(fos, Charsets.toCharset()));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/launch/MinecraftLoader.java
Patch:
@@ -65,7 +65,7 @@ protected void makeSelf(List<String> res) throws GameException {
         }
         File f = version.getJar(service.baseDirectory());
         if (!f.exists())
-            throw new GameException("Minecraft jar does not exists");
+            throw new GameException("Minecraft jar does not exist");
         library.append(f.getAbsolutePath()).append(File.pathSeparator);
         res.add("-cp");
         res.add(library.toString().substring(0, library.length() - File.pathSeparator.length()));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/service/IMinecraftProvider.java
Patch:
@@ -44,7 +44,7 @@ public IMinecraftProvider(T service) {
     /**
      * To download mod packs.
      */
-    public abstract void initializeMiencraft();
+    public abstract void initializeMinecraft();
 
     /**
      * Get the run directory of given version.

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/MinecraftVersionManager.java
Patch:
@@ -108,7 +108,7 @@ public synchronized void refreshVersions() {
                 if (ask) {
                     HMCLog.warn("Found not matched filenames version: " + id + ", json: " + jsons[0].getName());
                     if (MessageBox.show(String.format(C.i18n("launcher.versions_json_not_matched"), id, jsons[0].getName()), MessageBox.YES_NO_OPTION) == MessageBox.YES_OPTION)
-                        if (!jsons[0].renameTo(new File(jsons[0].getParent(), id + ".json")))
+                        if (!jsons[0].renameTo(jsonFile))
                             HMCLog.warn("Failed to rename version json " + jsons[0]);
                 }
                 if (!jsonFile.exists()) {
@@ -283,6 +283,7 @@ public MinecraftVersion getVersionById(String id) {
 
     @Override
     public boolean onLaunch(String id) {
+        // Fix bug in Minecraft 1.8
         File resourcePacks = new File(getRunDirectory(id), "resourcepacks");
         if (!FileUtils.makeDirectory(resourcePacks))
             HMCLog.warn("Failed to make resourcePacks: " + resourcePacks);
@@ -305,6 +306,6 @@ public void cleanFolder() {
     }
 
     @Override
-    public void initializeMiencraft() {
+    public void initializeMinecraft() {
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/task/TaskList.java
Patch:
@@ -103,7 +103,7 @@ private boolean processTasks(Collection<? extends Task> c) {
             }
             Invoker thread = new Invoker(t2, counter, bool);
             invokers.add(thread);
-            if (!EXECUTOR_SERVICE.isShutdown() && !EXECUTOR_SERVICE.isTerminated())
+            if (!EXECUTOR_SERVICE.isShutdown())
                 futures.put(thread, EXECUTOR_SERVICE.submit(thread));
         }
         try {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/auth/YggdrasilAuthenticator.java
Patch:
@@ -49,7 +49,7 @@ public YggdrasilAuthenticator(String clientToken) {
     public UserProfileProvider login(LoginInfo info) throws AuthenticationException {
         UserProfileProvider result = new UserProfileProvider();
         if (ua.canPlayOnline()) {
-            result.setUserName(info.username)
+            result.setUserName(ua.getSelectedProfile().name)
                     .setUserId(UUIDTypeAdapter.fromUUID(ua.getSelectedProfile().id));
         } else {
             String usr = info.username;

File: HMCLAPI/src/main/java/org/jackhuang/hmcl/api/game/IMinecraftLibrary.java
Patch:
@@ -37,8 +37,8 @@ public interface IMinecraftLibrary extends Cloneable {
     File getFilePath(File gameDir);
 
     String getName();
-
-    boolean isRequiredToUnzip();
+    
+    boolean isNative();
     
     String getDownloadURL(String downloadSource);
     

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/launch/MinecraftLoader.java
Patch:
@@ -46,7 +46,7 @@ protected void makeSelf(List<String> res) throws GameException {
         StringBuilder library = new StringBuilder("");
         ArrayList<MinecraftLibrary> opt = new ArrayList<>();
         for (MinecraftLibrary l : version.libraries)
-            if (l.allow() && !l.isRequiredToUnzip()) {
+            if (l.allow() && !l.isNative()) {
                 if (l.getName().toLowerCase(Locale.US).contains("optifine")) {
                     opt.add(l);
                     continue;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/AbstractMinecraftLibrary.java
Patch:
@@ -26,7 +26,7 @@
  */
 public abstract class AbstractMinecraftLibrary implements IMinecraftLibrary {
 
-    private String name;
+    private final String name;
 
     public AbstractMinecraftLibrary(String name) {
         this.name = name;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/MinecraftOldLibrary.java
Patch:
@@ -30,7 +30,7 @@ public MinecraftOldLibrary(String name) {
     }
 
     @Override
-    public boolean isRequiredToUnzip() {
+    public boolean isNative() {
         return false;
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/MinecraftVersionManager.java
Patch:
@@ -248,7 +248,7 @@ public DecompressLibraryJob getDecompressLibraries(MinecraftVersion v) throws Ga
         ArrayList<File> unzippings = new ArrayList<>();
         ArrayList<Extract> extractRules = new ArrayList<>();
         for (IMinecraftLibrary l : v.libraries)
-            if (l.isRequiredToUnzip() && v.isAllowedToUnpackNatives()) {
+            if (l.isNative() && v.isAllowedToUnpackNatives()) {
                 unzippings.add(getLibraryFile(v, l));
                 extractRules.add(l.getDecompressExtractRules());
             }

File: HMCL/src/main/java/org/jackhuang/hmcl/util/HMCLAssetService.java
Patch:
@@ -33,7 +33,7 @@ public HMCLAssetService(IMinecraftService service) {
     }
     
     private boolean useSelf(String assetId) {
-        return new File(service.baseDirectory(), "assets/indexes/" + assetId + ".json").exists() || ((HMCLMinecraftService) service).p.isNoCommon();
+        return new File(service.baseDirectory(), "assets/indexes/" + assetId + ".json").exists() || ((HMCLMinecraftService) service).getProfile().isNoCommon();
     }
 
     @Override

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/service/IMinecraftProvider.java
Patch:
@@ -33,11 +33,11 @@
  * org.jackhuang.hmcl.core.version.MinecraftVersionManager
  * @author huangyuhui
  */
-public abstract class IMinecraftProvider {
+public abstract class IMinecraftProvider<T extends IMinecraftService> {
 
-    protected IMinecraftService service;
+    protected T service;
 
-    public IMinecraftProvider(IMinecraftService service) {
+    public IMinecraftProvider(T service) {
         this.service = service;
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/MinecraftClassicVersion.java
Patch:
@@ -48,7 +48,7 @@ public Object clone() {
     }
 
     @Override
-    public MinecraftVersion resolve(IMinecraftProvider manager, Set<String> resolvedSoFar) {
+    public MinecraftVersion resolve(IMinecraftProvider<?> manager, Set<String> resolvedSoFar) {
         return this;
     }
 

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/MinecraftVersion.java
Patch:
@@ -122,11 +122,11 @@ public Object clone() {
         }
     }
 
-    public MinecraftVersion resolve(IMinecraftProvider provider) throws GameException {
+    public MinecraftVersion resolve(IMinecraftProvider<?> provider) throws GameException {
         return resolve(provider, new HashSet<>());
     }
 
-    protected MinecraftVersion resolve(IMinecraftProvider provider, Set<String> resolvedSoFar) throws GameException {
+    protected MinecraftVersion resolve(IMinecraftProvider<?> provider, Set<String> resolvedSoFar) throws GameException {
         if (inheritsFrom == null)
             return this;
         if (!resolvedSoFar.add(id))

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/MinecraftVersionManager.java
Patch:
@@ -50,15 +50,15 @@
  *
  * @author huangyuhui
  */
-public class MinecraftVersionManager extends IMinecraftProvider {
+public class MinecraftVersionManager<T extends IMinecraftService> extends IMinecraftProvider<T> {
 
     final Map<String, MinecraftVersion> versions = new TreeMap<>();
 
     /**
      *
      * @param p
      */
-    public MinecraftVersionManager(IMinecraftService p) {
+    public MinecraftVersionManager(T p) {
         super(p);
     }
 

File: HMCLaF/src/main/java/org/jackhuang/hmcl/laf/spinner/BESpinnerUI.java
Patch:
@@ -112,8 +112,6 @@ public enum Type {
          * @param type the type
          */
         public GlyphButton(Component parent, Type type) {
-//			XPStyle xp = getXP();
-//			skin = xp.getSkin(parent, part);
             this.type = type;
             setBorder(null);
             setContentAreaFilled(false);

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/MainPagePanel.java
Patch:
@@ -519,7 +519,7 @@ void loadVersions() {
         isLoading = false;
     }
 
-    final Consumer<LaunchingStateChangedEvent> launchingStateChanged = t -> SwingUtils.setEnabled(MainFrame.INSTANCE.getRootPane(), t.getValue() == LaunchingState.Done);
+    final Consumer<LaunchingStateChangedEvent> launchingStateChanged = t -> SwingUtilities.invokeLater(() -> SwingUtils.setEnabled(MainFrame.INSTANCE.getRootPane(), t.getValue() == LaunchingState.Done));
 
     void versionChanged(String selectedVersion) {
         isLoading = true;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/task/ParallelTask.java
Patch:
@@ -33,7 +33,9 @@ public ParallelTask() {
     }
 
     @Override
-    public void executeTask(boolean areDependTasksSucceeded) {
+    public void executeTask(boolean areDependTasksSucceeded) throws Exception {
+        if (!areDependTasksSucceeded)
+            throw new Exception("Tasks failed");
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LaunchingUIDaemon.java
Patch:
@@ -80,8 +80,10 @@ else if (state == 2)
                 LAUNCH_SCRIPT_FINISHER.accept(p);
         });
         HMCLApi.EVENT_BUS.channel(JavaProcessStoppedEvent.class).register(event -> {
+            GameLauncher launcher = ((GameLauncher) ((ProcessMonitor) event.getSource()).getTag());
+            HMCLApi.EVENT_BUS.fireChannel(new LaunchingStateChangedEvent(launcher, LaunchingState.Done));
             checkExit(unpackProcessMonitor(event.getSource()));
-                });
+        });
         HMCLApi.EVENT_BUS.channel(JavaProcessExitedAbnormallyEvent.class).register(event -> {
             ProcessMonitor monitor = (ProcessMonitor) event.getSource();
             int exitCode = event.getValue().getExitCode();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameSettingsPanel.java
Patch:
@@ -172,6 +172,8 @@ void initManagementMenu() {
                 if (newName != null)
                     if (Settings.getLastProfile().service().version().renameVersion(mcVersion, newName))
                         refreshVersions();
+                    else
+                        MessageBox.showLocalized("wizard.failed");
             }
         });
         ppmManage.add(itm);

File: HMCLaF/src/main/java/org/jackhuang/hmcl/laf/button/BEButtonUI.java
Patch:
@@ -267,7 +267,7 @@ else if (model.isRollover() || model.isPressed())
                         state = State.ROLLOVER;
                     else if (b instanceof JButton
                             && ((JButton) b).isDefaultButton())
-                        state = State.DEFAULT;
+                        state = State.NORMAL;
                 break;
             default:
                 state = State.NORMAL;

File: HMCLAPI/src/main/java/org/jackhuang/hmcl/api/IProcess.java
Patch:
@@ -39,6 +39,4 @@ public interface IProcess {
 
     void stop();
     
-    void waitForCommandLineCompletion();
-    
 }

File: HMCLaF/src/main/java/org/jackhuang/hmcl/laf/button/BEButtonUI.java
Patch:
@@ -267,7 +267,7 @@ else if (model.isRollover() || model.isPressed())
                         state = State.ROLLOVER;
                     else if (b instanceof JButton
                             && ((JButton) b).isDefaultButton())
-                        state = State.DEFAULTED;
+                        state = State.DEFAULT;
                 break;
             default:
                 state = State.NORMAL;

File: HMCLaF/src/main/java/org/jackhuang/hmcl/laf/utils/AnimationController.java
Patch:
@@ -98,7 +98,7 @@ private static void triggerAnimation(JComponent c,
         State oldState = controller.getState(c, part);
         if (oldState != newState) {
             controller.putState(c, part, newState);
-            if (newState == State.DEFAULTED)
+            if (newState == State.DEFAULT)
                 // it seems for DEFAULTED button state Vista does animation from
                 // HOT
                 oldState = State.ROLLOVER;
@@ -182,7 +182,7 @@ private synchronized void startAnimation(JComponent component,
             State endState,
             long millis) {
         boolean isForwardAndReverse = false;
-        if (endState == State.DEFAULTED)
+        if (endState == State.DEFAULT)
             isForwardAndReverse = true;
         Map<Part, AnimationState> map = animationStateMap.get(component);
         if (millis <= 0) {

File: HMCLaF/src/main/java/org/jackhuang/hmcl/laf/utils/TMSchema.java
Patch:
@@ -231,7 +231,7 @@ public static enum State {
         BULLETNORMAL,
         BULLETDISABLED,
         CLOSED,
-        DEFAULTED,
+        DEFAULT,
         DISABLED,
         DISABLEDHOT,
         DISABLEDPUSHED,
@@ -304,7 +304,7 @@ private static synchronized void initStates() {
                     });
 
             stateMap.put(Part.BP_PUSHBUTTON,
-                    new State[] { NORMAL, ROLLOVER, PRESSED, DISABLED, DEFAULTED });
+                    new State[] { NORMAL, ROLLOVER, PRESSED, DISABLED, DEFAULT });
 
             stateMap.put(Part.BP_RADIOBUTTON,
                     new State[] {

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LaunchingUIDaemon.java
Patch:
@@ -82,6 +82,7 @@ else if (state == 2)
         HMCLApi.EVENT_BUS.channel(JavaProcessStoppedEvent.class).register(event -> checkExit((LauncherVisibility) ((ProcessMonitor) event.getSource()).getTag()));
         HMCLApi.EVENT_BUS.channel(JavaProcessExitedAbnormallyEvent.class).register(event -> {
             int exitCode = event.getValue().getExitCode();
+            event.getValue().waitForCommandLineCompletion();
             HMCLog.err("The game exited abnormally, exit code: " + exitCode);
             String[] logs = event.getValue().getStdOutLines().toArray(new String[0]);
             String errorText = null;

File: HMCLAPI/src/main/java/org/jackhuang/hmcl/api/IProcess.java
Patch:
@@ -17,7 +17,6 @@
  */
 package org.jackhuang.hmcl.api;
 
-import java.util.ArrayList;
 import java.util.List;
 
 /**
@@ -34,10 +33,12 @@ public interface IProcess {
 
     List<String> getStartupCommands();
 
-    ArrayList<String> getStdOutLines();
+    List<String> getStdOutLines();
 
     boolean isRunning();
 
     void stop();
     
+    void waitForCommandLineCompletion();
+    
 }

File: HMCLaF/src/main/java/org/jackhuang/hmcl/laf/titlepane/BERootPaneUI.java
Patch:
@@ -49,7 +49,7 @@
 import javax.swing.plaf.basic.BasicRootPaneUI;
 
 import org.jackhuang.hmcl.laf.BeautyEyeLNFHelper;
-import org.jackhuang.hmcl.laf.WindowTranslucencyHelper;
+import org.jackhuang.hmcl.laf.utils.WindowTranslucencyHelper;
 
 /**
  * 窗体的UI实现.
@@ -315,7 +315,7 @@ private void installClientDecorations(JRootPane root) {
         //* 窗口透明了，那么如果你的程序其它地方需要窗口透明的话，自行.setWindowOpaque(..)
         //* 就行了，由开发者自先决定，此处就不承载过多的要求了
         if (!BeautyEyeLNFHelper.isFrameBorderOpaque()
-                && window != null) {
+                && window != null && WindowTranslucencyHelper.isTranslucencySupported()) {
             //** 20111222 by jb2011，让窗口全透明（用以实现窗口的透明边框效果）
 //			AWTUtilities.setWindowOpaque(window, false);
             // TODO BUG：1）目前可知，在jdk1.7.0_u6下，JDialog的半透明边框的透明度比原设计深一倍

File: HMCLaF/src/main/java/org/jackhuang/hmcl/laf/utils/WindowTranslucencyHelper.java
Patch:
@@ -9,7 +9,7 @@
  * WindowTranslucencyHelper.java at 2015-2-1 20:25:40, original version by Jack Jiang.
  * You can contact author with jb2011@163.com.
  */
-package org.jackhuang.hmcl.laf;
+package org.jackhuang.hmcl.laf.utils;
 
 import java.awt.Color;
 import java.awt.GraphicsDevice;

File: HMCL/src/main/java/org/jackhuang/hmcl/util/HMCLAssetService.java
Patch:
@@ -33,7 +33,7 @@ public HMCLAssetService(IMinecraftService service) {
     }
     
     private boolean useSelf(String assetId) {
-        return new File(service.baseDirectory(), "assets/indexes/" + assetId + ",json").exists() || ((HMCLMinecraftService) service).p.isNoCommon();
+        return new File(service.baseDirectory(), "assets/indexes/" + assetId + ".json").exists() || ((HMCLMinecraftService) service).p.isNoCommon();
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -94,9 +94,7 @@ public static String shortTitle() {
         return "HMCL" + ' ' + LAUNCHER_VERSION;
     }
 
-    //private static HelloMinecraftLookAndFeel LOOK_AND_FEEL;
-
-    private static final Logger LOGGER = Logger.getLogger(Main.class.getName());
+    public static final Logger LOGGER = Logger.getLogger(Main.class.getName());
 
     public static void main(String[] args) throws IOException {
         {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/net/FileDownloadTask.java
Patch:
@@ -212,6 +212,7 @@ else if (!tempFile.renameTo(tempFile)) // check file lock
                     ppl.onProgressProviderDone(this);
                 return;
             } catch (IOException | IllegalStateException e) {
+                filePath.delete();
                 setFailReason(new IOException(C.i18n("download.failed") + " " + url, e));
             } finally {
                 closeFiles();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LaunchingUIDaemon.java
Patch:
@@ -153,6 +153,8 @@ void makeLaunchScript(Profile profile) {
             case DecompressingNatives:
                 message = "launch.state.decompressing_natives";
                 break;
+            case Done:
+                return;
         }
         MainFrame.INSTANCE.showMessage(C.i18n(message));
     };

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/download/MinecraftDownloadService.java
Patch:
@@ -17,7 +17,6 @@
  */
 package org.jackhuang.hmcl.core.download;
 
-import org.jackhuang.hmcl.api.event.launch.DownloadLibraryJob;
 import org.jackhuang.hmcl.core.service.IMinecraftDownloadService;
 import com.google.gson.JsonSyntaxException;
 import java.io.File;

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/service/IMinecraftDownloadService.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.File;
 import java.util.List;
 import org.jackhuang.hmcl.core.GameException;
-import org.jackhuang.hmcl.api.event.launch.DownloadLibraryJob;
+import org.jackhuang.hmcl.core.download.DownloadLibraryJob;
 import org.jackhuang.hmcl.core.version.MinecraftVersion;
 import org.jackhuang.hmcl.util.task.Task;
 

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameSettingsPanel.java
Patch:
@@ -1015,7 +1015,7 @@ private void btnShowLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FI
 
     private void btnTestGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestGameActionPerformed
         LogWindow.INSTANCE.setVisible(true);
-        MainFrame.INSTANCE.daemon.runGame(Settings.getLastProfile());
+        MainFrame.INSTANCE.daemon.testGame(Settings.getLastProfile());
     }//GEN-LAST:event_btnTestGameActionPerformed
 
     private void btnExploreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExploreMouseClicked

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/LogWindowOutputStream.java
Patch:
@@ -44,7 +44,7 @@ public final void write(byte[] arr) {
 
     @Override
     public final void write(byte[] arr, int off, int len) {
-        append(new String(arr, off, len, Charsets.UTF_8));
+        append(new String(arr, off, len));
     }
 
     private void append(final String str) {
@@ -55,6 +55,6 @@ private void append(final String str) {
 
     @Override
     public final void write(int i) {
-        append(new String(new byte[] { (byte) i }, Charsets.UTF_8));
+        append(new String(new byte[] { (byte) i }));
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/download/MinecraftDownloadService.java
Patch:
@@ -56,9 +56,9 @@ public List<DownloadLibraryJob> getDownloadLibraries(MinecraftVersion mv) throws
             return downloadLibraries;
         MinecraftVersion v = mv.resolve(service.version());
         for (IMinecraftLibrary l : v.getLibraries())
-            if (l != null && l.allow() && l.getDownloadURL(service.getDownloadType().name()) != null) {
+            if (l != null && l.allow()) {
                 File ff = service.version().getLibraryFile(mv, l);
-                if (!ff.exists()) {
+                if (!ff.exists() && l.getDownloadURL(service.getDownloadType().name()) != null) {
                     String libURL = l.getDownloadURL(service.getDownloadType().name());
                     if (libURL != null)
                         downloadLibraries.add(new DownloadLibraryJob(l, libURL, ff));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/GameDownloadInfo.java
Patch:
@@ -19,6 +19,7 @@
 
 import com.google.gson.annotations.SerializedName;
 import org.jackhuang.hmcl.core.download.DownloadType;
+import org.jackhuang.hmcl.util.StrUtils;
 
 /**
  *
@@ -58,7 +59,7 @@ public String getUrl(DownloadType dt) {
      * @return the download url
      */
     public String getUrl(DownloadType dt, boolean allowSelf) {
-        if (url != null && allowSelf)
+        if (StrUtils.isNotBlank(url) && allowSelf)
             return dt.getProvider().getParsedDownloadURL(url);
         else
             return getCustomizedURL(dt);

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/LibraryDownloadInfo.java
Patch:
@@ -35,14 +35,12 @@ public class LibraryDownloadInfo extends GameDownloadInfo {
 
     @Override
     public String getUrl(DownloadType dt, boolean allowSelf) {
-        String myURL = (forgeURL == null ? dt.getProvider().getLibraryDownloadURL() : forgeURL);
+        String myURL = dt.getProvider().getParsedDownloadURL(IOUtils.addURLSeparator(forgeURL == null ? dt.getProvider().getLibraryDownloadURL() : forgeURL) + path.replace('\\', '/'));
         if (StrUtils.isNotBlank(url) && allowSelf)
             myURL = dt.getProvider().getParsedDownloadURL(url);
         if (!myURL.endsWith(".jar"))
             if (path == null)
                 return null;
-            else
-                myURL = IOUtils.addURLSeparator(myURL) + path.replace('\\', '/');
         return myURL;
     }
 }

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/version/MinecraftLibrary.java
Patch:
@@ -22,11 +22,9 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.HashMap;
-import org.jackhuang.hmcl.api.HMCLApi;
 import org.jackhuang.hmcl.util.sys.OS;
 import org.jackhuang.hmcl.util.sys.Platform;
 import org.jackhuang.hmcl.util.StrUtils;
-import org.jackhuang.hmcl.api.Wrapper;
 
 /**
  *

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/sys/JavaProcess.java
Patch:
@@ -20,13 +20,15 @@
 import org.jackhuang.hmcl.api.IProcess;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.HashSet;
 import java.util.List;
 
 /**
  *
  * @author huangyuhui
  */
 public class JavaProcess implements IProcess {
+    public static HashSet<Process> processes = new HashSet<>();
 
     private final List<String> commands;
     private final Process process;
@@ -35,7 +37,7 @@ public class JavaProcess implements IProcess {
     public JavaProcess(List<String> commands, Process process) {
         this.commands = commands;
         this.process = process;
-        ProcessManager.registerProcess(this);
+        processes.add(process);
     }
 
     public JavaProcess(String[] commands, Process process) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/util/sys/ProcessThread.java
Patch:
@@ -66,7 +66,7 @@ public void run() {
                 System.out.println("MC: " + line);
                 p.getStdOutLines().add(line);
             }
-            ProcessManager.onProcessStopped(p);
+            JavaProcess.processes.remove(p.getRawProcess());
             stopEvent.fire(new SimpleEvent<>(this, p));
         } catch (IOException e) {
             HMCLog.err("An error occured when reading process stdout/stderr.", e);

File: HMCL/src/main/java/org/jackhuang/hmcl/Main.java
Patch:
@@ -141,7 +141,7 @@ public static void main(String[] args) throws IOException {
             Thread.setDefaultUncaughtExceptionHandler(new CrashReporter(true));
 
             try {
-                File file = new File("hmcl.log");
+                File file = new File("hmcl.log").getAbsoluteFile();
                 if (!file.exists() && !file.createNewFile())
                     LOGGER.log(Level.WARNING, "Failed to create log file {0}", file);
                 Configuration.DEFAULT.appenders.add(new ConsoleAppender("File", new DefaultLayout(), true, new FileOutputStream(file), true));

File: HMCL/src/main/java/org/jackhuang/hmcl/setting/Settings.java
Patch:
@@ -44,7 +44,7 @@ public final class Settings {
     public static final String DEFAULT_PROFILE = "Default";
     public static final String HOME_PROFILE = "Home";
 
-    public static final File SETTINGS_FILE = new File("hmcl.json");
+    public static final File SETTINGS_FILE = new File("hmcl.json").getAbsoluteFile();
 
     private static final Config SETTINGS;
     public static final UpdateChecker UPDATE_CHECKER = new UpdateChecker(HMCLApi.HMCL_VERSION, "hmcl");

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/GameSettingsPanel.java
Patch:
@@ -988,7 +988,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
     }// </editor-fold>//GEN-END:initComponents
 
     private void btnIncludeMinecraftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncludeMinecraftActionPerformed
-        JSystemFileChooser fc = new JSystemFileChooser(new File("."));
+        JSystemFileChooser fc = new JSystemFileChooser(new File("").getAbsoluteFile());
         fc.setFileSelectionMode(JSystemFileChooser.DIRECTORIES_ONLY);
         if (fc.showOpenDialog(this) == JSystemFileChooser.APPROVE_OPTION) {
             File newGameDir = fc.getSelectedFile();

File: HMCL/src/main/java/org/jackhuang/hmcl/ui/modpack/ModpackWizard.java
Patch:
@@ -121,13 +121,13 @@ public void start(Map settings, ResultProgressHandle progress) {
                                     s.setDownloadType(Settings.getInstance().getDownloadType());
                                     engine.putTextFile(C.GSON.toJson(s), "hmcl.json");
                                     engine.putFile(modpack, "modpack.zip");
-                                    File bg = new File("bg");
+                                    File bg = new File("bg").getAbsoluteFile();
                                     if (bg.isDirectory())
                                         engine.putDirectory(bg);
-                                    bg = new File("background.png");
+                                    bg = new File("background.png").getAbsoluteFile();
                                     if (bg.isFile())
                                         engine.putFile(bg, "background.png");
-                                    bg = new File("background.jpg");
+                                    bg = new File("background.jpg").getAbsoluteFile();
                                     if (bg.isFile())
                                         engine.putFile(bg, "background.jpg");
                                     for (URL u : Utils.getURL())

File: HMCL/src/main/java/org/jackhuang/hmcl/util/HMCLMinecraftService.java
Patch:
@@ -67,7 +67,7 @@ public HMCLMinecraftService(Profile p) {
             if (!checkingModpack) {
                 checkingModpack = true;
                 if (version().getVersionCount() == 0) {
-                    File modpack = new File("modpack.zip");
+                    File modpack = new File("modpack.zip").getAbsoluteFile();
                     if (modpack.exists())
                         SwingUtilities.invokeLater(() -> {
                             if (TaskWindow.factory().execute(ModpackManager.install(MainFrame.INSTANCE, modpack, this, null)))

File: HMCL/src/main/java/org/jackhuang/hmcl/util/upgrade/AppDataUpgrader.java
Patch:
@@ -109,7 +109,7 @@ public void accept(SimpleEvent<VersionNumber> event) {
                         if (map.containsKey("packsha1"))
                             hash = map.get("packsha1");
                         if (TaskWindow.factory().append(new AppDataUpgraderTask(map.get("pack"), version.version, hash)).execute()) {
-                            new ProcessBuilder(new String[] { IOUtils.getJavaDir(), "-jar", AppDataUpgraderTask.getSelf(version.version).getAbsolutePath() }).directory(new File(".")).start();
+                            new ProcessBuilder(new String[] { IOUtils.getJavaDir(), "-jar", AppDataUpgraderTask.getSelf(version.version).getAbsolutePath() }).directory(new File("").getAbsoluteFile()).start();
                             System.exit(0);
                         }
                     } catch (IOException ex) {

File: HMCL/src/main/java/org/jackhuang/hmcl/util/upgrade/NewFileUpgrader.java
Patch:
@@ -50,7 +50,7 @@ public void accept(SimpleEvent<VersionNumber> event) {
         File newf = new File(FileUtils.getName(str));
         if (TaskWindow.factory().append(new FileDownloadTask(str, newf)).execute()) {
             try {
-                new ProcessBuilder(new String[] { newf.getCanonicalPath(), "--removeOldLauncher", IOUtils.getRealPath() }).directory(new File(".")).start();
+                new ProcessBuilder(new String[] { newf.getCanonicalPath(), "--removeOldLauncher", IOUtils.getRealPath() }).directory(new File("").getAbsoluteFile()).start();
             } catch (IOException ex) {
                 HMCLog.err("Failed to start new app", ex);
             }

File: HMCLAPI/src/main/java/org/jackhuang/hmcl/api/PluginManager.java
Patch:
@@ -37,7 +37,7 @@
  */
 public class PluginManager {
 
-    private static final File PLUGINS_FILE = new File("plugins/");
+    private static final File PLUGINS_FILE = new File("plugins").getAbsoluteFile();
     private static final ArrayList<IPlugin> PLUGINS = new ArrayList<>();
 
     public static void getPlugin(Class<?> cls) {

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/install/MinecraftInstallerService.java
Patch:
@@ -56,7 +56,7 @@ public Task download(String installId, InstallerVersion v, InstallerType type) {
 
     @Override
     public Task downloadForge(String installId, InstallerVersion v) {
-        File filepath = new File("forge-installer.jar");
+        File filepath = new File("forge-installer.jar").getAbsoluteFile();
         if (v.installer == null)
             return null;
         else
@@ -67,7 +67,7 @@ public Task downloadForge(String installId, InstallerVersion v) {
 
     @Override
     public Task downloadOptiFine(String installId, InstallerVersion v) {
-        File filepath = new File("optifine-installer.jar");
+        File filepath = new File("optifine-installer.jar").getAbsoluteFile();
         if (v.installer == null)
             return null;
         OptiFineDownloadFormatter task = new OptiFineDownloadFormatter(v.installer);
@@ -80,7 +80,7 @@ public Task downloadOptiFine(String installId, InstallerVersion v) {
     public Task downloadLiteLoader(String installId, InstallerVersion v) {
         if (!(v instanceof LiteLoaderInstallerVersion))
             throw new Error("Download lite loader but the version is not ll's.");
-        File filepath = new File("liteloader-universal.jar");
+        File filepath = new File("liteloader-universal.jar").getAbsoluteFile();
         FileDownloadTask task = (FileDownloadTask) new FileDownloadTask(v.universal, filepath).setTag("LiteLoader");
         return task.with(new LiteLoaderInstaller(service, installId, (LiteLoaderInstallerVersion) v).registerPreviousResult(task))
             .with(new DeleteFileTask(filepath));

File: HMCLCore/src/main/java/org/jackhuang/hmcl/core/launch/AbstractMinecraftLoader.java
Patch:
@@ -129,7 +129,7 @@ else if (jv.getParsedVersion() >= JdkVersion.JAVA_18)
             res.add(a);
         }
 
-        res.add("-Djava.library.path=" + service.version().getDecompressNativesToLocation(version).getPath());
+        res.add("-Djava.library.path=" + service.version().getDecompressNativesToLocation(version).getAbsolutePath());
         res.add("-Dfml.ignoreInvalidMinecraftCertificates=true");
         res.add("-Dfml.ignorePatchDiscrepancies=true");
 

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftVersionManager.java
Patch:
@@ -122,7 +122,7 @@ public synchronized void refreshVersions() {
                 } catch (JsonSyntaxException | IOException e) {
                     HMCLog.warn("Found wrong format json, try to fix it.", e);
                     if (MessageBox.show(C.i18n("launcher.versions_json_not_formatted", id), MessageBox.YES_NO_OPTION) == MessageBox.YES_OPTION) {
-                        service.download().downloadMinecraftVersionJson(id);
+                        TaskWindow.factory().execute(service.download().downloadMinecraftVersionJson(id));
                         try {
                             mcVersion = C.GSON.fromJson(FileUtils.read(jsonFile), MinecraftVersion.class);
                             if (mcVersion == null)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -103,7 +103,6 @@ public static String shortTitle() {
 
     private static final Logger LOGGER = Logger.getLogger(Main.class.getName());
 
-    @SuppressWarnings({ "CallToPrintStackTrace", "UseSpecificCatch" })
     public static void main(String[] args) throws IOException {
         {
             PluginManager.getPlugin(DefaultPlugin.class);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/DraggableFrame.java
Patch:
@@ -32,7 +32,6 @@ public class DraggableFrame extends JFrame
     private int dragGripX;
     private int dragGripY;
 
-    @SuppressWarnings("LeakingThisInConstructor")
     public DraggableFrame() {
         addMouseListener(this);
         addMouseMotionListener(this);

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/ui/MainWindow.java
Patch:
@@ -3528,7 +3528,6 @@ private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST
         Server.getInstance().sendCommand("save-all");
     }//GEN-LAST:event_btnSaveActionPerformed
 
-    @SuppressWarnings("UseOfObsoleteCollectionType")
     private void btnSaveExtModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveExtModActionPerformed
         ArrayList<String> arrayList = new ArrayList<>();
         Vector strings = ((DefaultTableModel) lstExternalMods.getModel()).getDataVector();
@@ -3541,7 +3540,6 @@ private void btnSaveExtModActionPerformed(java.awt.event.ActionEvent evt) {//GEN
         SettingsManager.save();
     }//GEN-LAST:event_btnSaveExtModActionPerformed
 
-    @SuppressWarnings("UseOfObsoleteCollectionType")
     private void btnSavePluginsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePluginsActionPerformed
         ArrayList<String> arrayList = new ArrayList<>();
         Vector strings = ((DefaultTableModel) lstCoreMods.getModel()).getDataVector();

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/func/BiFunction.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Hello Minecraft!.
  * Copyright (C) 2013  huangyuhui <huanghongxun2008@126.com>
- *
+ * 
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -22,6 +22,6 @@
  * @author huangyuhui
  */
 public interface BiFunction<A, B, C> {
-
+    
     C apply(A a, B b);
 }

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/JavaProcessMonitor.java
Patch:
@@ -20,7 +20,6 @@
 import java.util.Arrays;
 import java.util.HashSet;
 import org.jackhuang.hellominecraft.util.CollectionUtils;
-import org.jackhuang.hellominecraft.api.EventHandler;
 import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.api.event.process.JVMLaunchFailedEvent;
 import org.jackhuang.hellominecraft.api.event.process.JavaProcessExitedAbnormallyEvent;
@@ -57,7 +56,6 @@ public void setTag(Object tag) {
         this.tag = tag;
     }
     
-
     public void start() {
         HMCAPI.EVENT_BUS.fireChannel(new JavaProcessStartingEvent(this, p));
         ProcessThread a = new ProcessThread(p);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Config.java
Patch:
@@ -222,7 +222,7 @@ public Config() {
         theme = 4;
         decorated = OS.os() == OS.LINUX;
         auth = new HashMap<>();
-        commonpath = MCUtils.getWorkingDirectory("hmcl").getAbsolutePath();
+        commonpath = MCUtils.getLocation().getAbsolutePath();
     }
 
     public DownloadType getDownloadSource() {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Settings.java
Patch:
@@ -161,7 +161,7 @@ static void onProfileChanged() {
         Profile p = getLastProfile();
         if (p == null)
             throw new Error("No profiles here, it should not happen");
-        HMCAPI.EVENT_BUS.fireChannel(new ProfileChangedEvent(SETTINGS, p.getName()));
+        HMCAPI.EVENT_BUS.fireChannel(new ProfileChangedEvent(SETTINGS, p));
         p.onSelected();
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameSettingsPanel.java
Patch:
@@ -1492,7 +1492,7 @@ public void versionChanged(String version) {
     }
 
     final Consumer<ProfileChangedEvent> onSelectedProfilesChanged = event -> {
-        Profile t = Settings.getProfile(event.getValue());
+        Profile t = event.getValue();
         t.propertyChanged.register(e -> {
             if ("selectedMinecraftVersion".equals(e.getPropertyName()))
                 versionChanged(e.getNewValue());

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainPagePanel.java
Patch:
@@ -530,7 +530,7 @@ void versionChanged(String selectedVersion) {
     }
 
     final Consumer<ProfileChangedEvent> onSelectedProfilesChanged = event -> {
-        Profile t = Settings.getProfile(event.getValue());
+        Profile t = event.getValue();
         t.propertyChanged.register(e -> {
             if ("selectedMinecraftVersion".equals(e.getPropertyName()))
                 versionChanged(e.getNewValue());

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/DownloadType.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.core.download;
 
-import org.jackhuang.hellominecraft.api.HMCLAPI;
+import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.launcher.api.event.config.DownloadTypeChangedEvent;
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.task.TaskWindow;
@@ -62,6 +62,6 @@ public static void setSuggestedDownloadType(DownloadType suggestedDownloadType)
     }
 
     static {
-        HMCLAPI.EVENT_BUS.channel(DownloadTypeChangedEvent.class).register(t -> setSuggestedDownloadType(t.getValue()));
+        HMCAPI.EVENT_BUS.channel(DownloadTypeChangedEvent.class).register(t -> setSuggestedDownloadType(t.getValue()));
     }
 }

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/launch/DefaultGameLauncher.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.IOException;
 import java.util.HashSet;
 import java.util.List;
-import org.jackhuang.hellominecraft.api.HMCLAPI;
+import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.api.ResultedSimpleEvent;
 import org.jackhuang.hellominecraft.launcher.api.event.launch.DecompressLibrariesEvent;
 import org.jackhuang.hellominecraft.launcher.api.event.launch.DownloadLibrariesEvent;
@@ -44,7 +44,7 @@ public DefaultGameLauncher(LaunchOptions options, IMinecraftService service, Log
     }
 
     private void register() {
-        HMCLAPI.EVENT_BUS.channel(DownloadLibrariesEvent.class).register(t -> {
+        HMCAPI.EVENT_BUS.channel(DownloadLibrariesEvent.class).register(t -> {
             ResultedSimpleEvent<List<DownloadLibraryJob>> event = (ResultedSimpleEvent) t;
             final TaskWindow.TaskWindowFactory dw = TaskWindow.factory();
             ParallelTask parallelTask = new ParallelTask();
@@ -63,7 +63,7 @@ private void register() {
                 flag = true;
             t.setResult(flag);
         });
-        HMCLAPI.EVENT_BUS.channel(DecompressLibrariesEvent.class).register(t -> {
+        HMCAPI.EVENT_BUS.channel(DecompressLibrariesEvent.class).register(t -> {
             if (t.getValue() == null) {
                 t.setResult(false);
                 return;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftLibrary.java
Patch:
@@ -21,7 +21,7 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.HashMap;
-import org.jackhuang.hellominecraft.api.HMCLAPI;
+import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.launcher.api.event.version.MinecraftLibraryPathEvent;
 import org.jackhuang.hellominecraft.util.sys.OS;
 import org.jackhuang.hellominecraft.util.sys.Platform;
@@ -108,7 +108,7 @@ public File getFilePath(File gameDir) {
         if (info == null)
             return null;
         MinecraftLibraryPathEvent event = new MinecraftLibraryPathEvent(this, "libraries/" + info.path, new Wrapper<>(new File(gameDir, "libraries/" + info.path)));
-        HMCLAPI.EVENT_BUS.fireChannel(event);
+        HMCAPI.EVENT_BUS.fireChannel(event);
         return event.getFile().getValue();
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Settings.java
Patch:
@@ -28,7 +28,7 @@
 import org.jackhuang.hellominecraft.launcher.core.MCUtils;
 import org.jackhuang.hellominecraft.launcher.core.download.DownloadType;
 import org.jackhuang.hellominecraft.util.CollectionUtils;
-import org.jackhuang.hellominecraft.api.HMCLAPI;
+import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.launcher.api.event.config.ProfileChangedEvent;
 import org.jackhuang.hellominecraft.launcher.api.event.config.ProfileLoadingEvent;
 import org.jackhuang.hellominecraft.util.sys.FileUtils;
@@ -161,12 +161,12 @@ static void onProfileChanged() {
         Profile p = getLastProfile();
         if (p == null)
             throw new Error("No profiles here, it should not happen");
-        HMCLAPI.EVENT_BUS.fireChannel(new ProfileChangedEvent(SETTINGS, p.getName()));
+        HMCAPI.EVENT_BUS.fireChannel(new ProfileChangedEvent(SETTINGS, p.getName()));
         p.onSelected();
     }
 
     public static void onProfileLoading() {
-        HMCLAPI.EVENT_BUS.fireChannel(new ProfileLoadingEvent(SETTINGS));
+        HMCAPI.EVENT_BUS.fireChannel(new ProfileLoadingEvent(SETTINGS));
         onProfileChanged();
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainFrame.java
Patch:
@@ -51,7 +51,7 @@
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 import javax.swing.SwingUtilities;
-import org.jackhuang.hellominecraft.api.HMCLAPI;
+import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.launcher.Main;
 import org.jackhuang.hellominecraft.launcher.api.PluginManager;
 import org.jackhuang.hellominecraft.launcher.api.event.config.ThemeChangedEvent;
@@ -159,7 +159,7 @@ public void windowDeactivated(WindowEvent e) {
             }
         ((JPanel) getContentPane()).setOpaque(true);
 
-        HMCLAPI.EVENT_BUS.channel(ThemeChangedEvent.class).register(x -> reloadColor(x.getValue()));
+        HMCAPI.EVENT_BUS.channel(ThemeChangedEvent.class).register(x -> reloadColor(x.getValue()));
 
         SwingUtilities.invokeLater(() -> selectTab("main"));
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/HMCLGameProvider.java
Patch:
@@ -18,7 +18,7 @@
 package org.jackhuang.hellominecraft.launcher.util;
 
 import java.io.File;
-import org.jackhuang.hellominecraft.api.HMCLAPI;
+import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.launcher.api.event.version.MinecraftLibraryPathEvent;
 import org.jackhuang.hellominecraft.launcher.core.version.GameDirType;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersionManager;
@@ -34,7 +34,7 @@ public class HMCLGameProvider extends MinecraftVersionManager {
     public HMCLGameProvider(HMCLMinecraftService p) {
         super(p);
         
-        HMCLAPI.EVENT_BUS.channel(MinecraftLibraryPathEvent.class).register(t -> {
+        HMCAPI.EVENT_BUS.channel(MinecraftLibraryPathEvent.class).register(t -> {
             if (!t.getFile().getValue().exists())
                 t.getFile().setValue(new File(Settings.getInstance().getCommonpath(), t.getLocation()));
         });

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/api/HMCAPI.java
Patch:
@@ -21,7 +21,7 @@
  *
  * @author huang
  */
-public class HMCLAPI {
+public class HMCAPI {
 
     /**
      * Events.

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/UpdateChecker.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.IOException;
 import org.jackhuang.hellominecraft.util.log.HMCLog;
 import java.util.Map;
-import org.jackhuang.hellominecraft.api.HMCLAPI;
+import org.jackhuang.hellominecraft.api.HMCAPI;
 import org.jackhuang.hellominecraft.api.SimpleEvent;
 import org.jackhuang.hellominecraft.api.event.OutOfDateEvent;
 
@@ -98,7 +98,7 @@ protected void work() throws Exception {
     @Override
     public void checkOutdate() {
         if (outOfDate)
-            if (HMCLAPI.EVENT_BUS.fireChannelResulted(new OutOfDateEvent(this, getNewVersion())))
+            if (HMCAPI.EVENT_BUS.fireChannelResulted(new OutOfDateEvent(this, getNewVersion())))
                 upgrade.fire(new SimpleEvent<>(this, getNewVersion()));
     }
 }

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/api/event/launch/DownloadLibraryJob.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.core.download;
+package org.jackhuang.hellominecraft.launcher.api.event.launch;
 
 import java.io.File;
 import org.jackhuang.hellominecraft.launcher.core.version.IMinecraftLibrary;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/GameException.java
Patch:
@@ -18,7 +18,7 @@
 package org.jackhuang.hellominecraft.launcher.core;
 
 /**
- *
+ * Thrown if we have some problem generating launch command.
  * @author huangyuhui
  */
 public class GameException extends Exception {

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/auth/IAuthenticator.java
Patch:
@@ -33,7 +33,7 @@ public abstract class IAuthenticator {
     public static final List<IAuthenticator> LOGINS = new ArrayList<>();
 
     static {
-        PluginManager.plugin().onRegisterAuthenticators(LOGINS::add);
+        PluginManager.fireRegisterAuthenticators(LOGINS::add);
     }
 
     protected String clientToken, username, password;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftDownloadService.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.core.download;
 
+import org.jackhuang.hellominecraft.launcher.api.event.launch.DownloadLibraryJob;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftDownloadService;
 import com.google.gson.JsonSyntaxException;
 import java.io.File;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/launch/LibraryDownloadTask.java
Patch:
@@ -18,7 +18,7 @@
 package org.jackhuang.hellominecraft.launcher.core.launch;
 
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.launcher.core.download.DownloadLibraryJob;
+import org.jackhuang.hellominecraft.launcher.api.event.launch.DownloadLibraryJob;
 import org.jackhuang.hellominecraft.util.net.FileDownloadTask;
 
 /**

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftDownloadService.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.File;
 import java.util.List;
 import org.jackhuang.hellominecraft.launcher.core.GameException;
-import org.jackhuang.hellominecraft.launcher.core.download.DownloadLibraryJob;
+import org.jackhuang.hellominecraft.launcher.api.event.launch.DownloadLibraryJob;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;
 import org.jackhuang.hellominecraft.util.task.Task;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameDownloadPanel.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.ui;
 
+import org.jackhuang.hellominecraft.util.ui.Page;
 import javax.swing.table.DefaultTableModel;
 import org.jackhuang.hellominecraft.launcher.core.download.MinecraftRemoteVersions;
 import org.jackhuang.hellominecraft.launcher.setting.Settings;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/InstallerPanel.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.ui;
 
+import org.jackhuang.hellominecraft.util.ui.Page;
 import java.util.List;
 import javax.swing.SwingUtilities;
 import javax.swing.table.DefaultTableModel;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/LauncherSettingsPanel.java
Patch:
@@ -45,6 +45,8 @@ public LauncherSettingsPanel() {
 
     void initGui() {
         initComponents();
+        
+        animationEnabled = Settings.getInstance().isEnableAnimation();
 
         DefaultComboBoxModel<String> d = new DefaultComboBoxModel<>();
         for (DownloadType type : DownloadType.values())

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/NewTabPane.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.ui;
 
+import org.jackhuang.hellominecraft.util.ui.Selectable;
 import javax.swing.JTabbedPane;
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/RepaintPage.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.ui;
 
+import org.jackhuang.hellominecraft.util.ui.Page;
 import org.jackhuang.hellominecraft.util.ui.IRepaint;
 import java.awt.Rectangle;
 import java.awt.Window;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/upgrade/NewFileUpgrader.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import org.jackhuang.hellominecraft.api.SimpleEvent;
 import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.task.TaskWindow;
 import org.jackhuang.hellominecraft.util.net.FileDownloadTask;
@@ -45,7 +46,7 @@ public boolean parseArguments(VersionNumber nowVersion, String[] args) {
     }
 
     @Override
-    public boolean call(Object sender, VersionNumber number) {
+    public void accept(SimpleEvent<VersionNumber> event) {
         String str = requestDownloadLink();
         File newf = new File(FileUtils.getName(str));
         if (TaskWindow.factory().append(new FileDownloadTask(str, newf)).execute()) {
@@ -56,7 +57,6 @@ public boolean call(Object sender, VersionNumber number) {
             }
             System.exit(0);
         }
-        return true;
     }
 
     private String requestDownloadLink() {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/ui/MainWindow.java
Patch:
@@ -87,7 +87,7 @@
 import org.jackhuang.hellominecraft.util.ui.SwingUtils;
 import org.jackhuang.hellominecraft.svrmgr.util.version.MinecraftRemoteVersion;
 import org.jackhuang.hellominecraft.lookandfeel.ConstomButton;
-import org.jackhuang.hellominecraft.util.Event;
+import org.jackhuang.hellominecraft.api.Event;
 import org.jackhuang.hellominecraft.util.StrUtils;
 
 /**

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/WaitForThread.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hellominecraft.svrmgr.util;
 
-import org.jackhuang.hellominecraft.util.EventHandler;
+import org.jackhuang.hellominecraft.api.EventHandler;
 import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
@@ -37,10 +37,10 @@ public WaitForThread(Process p) {
     public void run() {
         try {
             int exitCode = p.waitFor();
-            event.execute(exitCode);
+            event.fire(exitCode);
         } catch (InterruptedException ex) {
             HMCLog.err("Game has been interrupted.", ex);
-            event.execute(-1);
+            event.fire(-1);
         }
     }
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/func/Consumer.java
Patch:
@@ -17,11 +17,13 @@
  */
 package org.jackhuang.hellominecraft.util.func;
 
+import java.util.EventListener;
+
 /**
  *
  * @author huangyuhui
  */
-public interface Consumer<T> {
+public interface Consumer<T> extends EventListener {
 
     void accept(T t);
 }

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/Selectable.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.ui;
+package org.jackhuang.hellominecraft.util.ui;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/version/LibraryDownloadInfo.java
Patch:
@@ -37,7 +37,7 @@ public class LibraryDownloadInfo extends GameDownloadInfo {
     public String getUrl(DownloadType dt, boolean allowSelf) {
         String myURL = (forgeURL == null ? dt.getProvider().getLibraryDownloadURL() : forgeURL);
         if (StrUtils.isNotBlank(url) && allowSelf)
-            myURL = url;
+            myURL = dt.getProvider().getParsedDownloadURL(url);
         if (!myURL.endsWith(".jar"))
             if (path == null)
                 return null;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/VersionSetting.java
Patch:
@@ -90,8 +90,7 @@ public class VersionSetting {
     public transient final EventHandler<String> propertyChanged = new EventHandler<>(this);
 
     public VersionSetting() {
-        fullscreen = false;
-        usesGlobal = true;
+        fullscreen = usesGlobal = false;
         launcherVisibility = 1;
         gameDirType = 0;
         javaDir = java = minecraftArgs = serverIp = precalledCommand = wrapper = "";

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/install/forge/ForgeInstaller.java
Patch:
@@ -79,7 +79,7 @@ public void executeTask(boolean areDependTasksSucceeded) throws Exception {
             InputStream is = zipFile.getInputStream(entry);
             MinecraftLibrary forge = new MinecraftLibrary(profile.install.getPath());
             File file = new File(gameDir, "libraries/" + forge.getDownloadInfo().path);
-            if (!FileUtils.makeDirectory(file))
+            if (!FileUtils.makeDirectory(file.getParentFile()))
                 HMCLog.warn("Failed to make library directory " + file.getParent());
             try (FileOutputStream fos = FileUtils.openOutputStream(file)) {
                 IOUtils.copyStream(is, fos);

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/MojangDownloadProvider.java
Patch:
@@ -80,7 +80,7 @@ else if (str.contains("scala-swing") || str.contains("scala-xml") || str.contain
             return str.replace("http://files.minecraftforge.net/maven", "http://ftb.cursecdn.com/FTB2/maven/");
         else if (str.contains("typesafe") || str.contains("scala"))
             if (SupportedLocales.NOW_LOCALE.self == Locale.CHINA)
-                return str.replace("http://files.minecraftforge.net/maven", "http://maven.oschina.net/content/groups/public");
+                return str.replace("http://files.minecraftforge.net/maven", "http://ftb.cursecdn.com/FTB2/maven/");
             else
                 return str.replace("http://files.minecraftforge.net/maven", "http://repo1.maven.org/maven2");
         else

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Settings.java
Patch:
@@ -32,6 +32,7 @@
 import org.jackhuang.hellominecraft.util.sys.FileUtils;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.UpdateChecker;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  *
@@ -70,7 +71,7 @@ private static Config initSettings() {
         Config c = new Config();
         if (SETTINGS_FILE.exists())
             try {
-                String str = FileUtils.read(SETTINGS_FILE);
+                String str = FileUtils.read(SETTINGS_FILE, IOUtils.DEFAULT_CHARSET);
                 if (str == null || str.trim().equals(""))
                     HMCLog.log("Settings file is empty, use the default settings.");
                 else {
@@ -92,7 +93,7 @@ private static Config initSettings() {
 
     public static void save() {
         try {
-            FileUtils.write(SETTINGS_FILE, C.GSON.toJson(SETTINGS));
+            FileUtils.write(SETTINGS_FILE, C.GSON.toJson(SETTINGS), IOUtils.DEFAULT_CHARSET);
         } catch (IOException ex) {
             HMCLog.err("Failed to save config", ex);
         }

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/api/PluginManager.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.api;
 
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/MCUtils.java
Patch:
@@ -19,8 +19,8 @@
 
 import java.io.File;
 import java.io.IOException;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
-import org.jackhuang.hellominecraft.util.system.OS;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
+import org.jackhuang.hellominecraft.util.sys.OS;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/auth/yggdrasil/PropertyMap.java
Patch:
@@ -31,7 +31,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 public class PropertyMap extends HashMap<String, Property> {
 

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/DownloadType.java
Patch:
@@ -18,7 +18,7 @@
 package org.jackhuang.hellominecraft.launcher.core.download;
 
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
+import org.jackhuang.hellominecraft.util.task.TaskWindow;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftRemoteVersions.java
Patch:
@@ -20,7 +20,7 @@
 import com.google.gson.annotations.SerializedName;
 import java.util.ArrayList;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.NetUtils;
+import org.jackhuang.hellominecraft.util.net.NetUtils;
 import org.jackhuang.hellominecraft.util.AbstractSwingWorker;
 
 /**

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/install/InstallerVersionList.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Map;
 import java.util.Objects;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.tasks.Task;
+import org.jackhuang.hellominecraft.util.task.Task;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/install/forge/MinecraftForgeVersionList.java
Patch:
@@ -28,9 +28,9 @@
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerVersionList;
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerVersionNewerComparator;
-import org.jackhuang.hellominecraft.util.tasks.Task;
-import org.jackhuang.hellominecraft.util.tasks.TaskInfo;
-import org.jackhuang.hellominecraft.util.tasks.download.HTTPGetTask;
+import org.jackhuang.hellominecraft.util.task.Task;
+import org.jackhuang.hellominecraft.util.task.TaskInfo;
+import org.jackhuang.hellominecraft.util.net.HTTPGetTask;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/install/liteloader/LiteLoaderVersionList.java
Patch:
@@ -28,9 +28,9 @@
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerVersionList;
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerVersionNewerComparator;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.tasks.Task;
-import org.jackhuang.hellominecraft.util.tasks.TaskInfo;
-import org.jackhuang.hellominecraft.util.tasks.download.HTTPGetTask;
+import org.jackhuang.hellominecraft.util.task.Task;
+import org.jackhuang.hellominecraft.util.task.TaskInfo;
+import org.jackhuang.hellominecraft.util.net.HTTPGetTask;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/install/optifine/bmcl/OptiFineBMCLVersionList.java
Patch:
@@ -31,9 +31,9 @@
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerVersionList;
 import org.jackhuang.hellominecraft.launcher.core.install.optifine.OptiFineVersion;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.tasks.Task;
-import org.jackhuang.hellominecraft.util.tasks.TaskInfo;
-import org.jackhuang.hellominecraft.util.tasks.download.HTTPGetTask;
+import org.jackhuang.hellominecraft.util.task.Task;
+import org.jackhuang.hellominecraft.util.task.TaskInfo;
+import org.jackhuang.hellominecraft.util.net.HTTPGetTask;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/install/optifine/vanilla/OptiFineDownloadFormatter.java
Patch:
@@ -20,9 +20,9 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.tasks.Task;
-import org.jackhuang.hellominecraft.util.tasks.comm.PreviousResult;
-import org.jackhuang.hellominecraft.util.NetUtils;
+import org.jackhuang.hellominecraft.util.task.Task;
+import org.jackhuang.hellominecraft.util.task.comm.PreviousResult;
+import org.jackhuang.hellominecraft.util.net.NetUtils;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/install/optifine/vanilla/OptiFineVersionList.java
Patch:
@@ -35,9 +35,9 @@
 import org.jackhuang.hellominecraft.util.ArrayUtils;
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.tasks.Task;
-import org.jackhuang.hellominecraft.util.tasks.TaskInfo;
-import org.jackhuang.hellominecraft.util.tasks.download.HTTPGetTask;
+import org.jackhuang.hellominecraft.util.task.Task;
+import org.jackhuang.hellominecraft.util.task.TaskInfo;
+import org.jackhuang.hellominecraft.util.net.HTTPGetTask;
 import org.w3c.dom.DOMException;
 import org.w3c.dom.Document;
 import org.w3c.dom.Element;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/launch/LaunchOptions.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.File;
 import org.jackhuang.hellominecraft.launcher.core.version.GameDirType;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.system.JdkVersion;
+import org.jackhuang.hellominecraft.util.sys.JdkVersion;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/launch/LibraryDownloadTask.java
Patch:
@@ -19,7 +19,7 @@
 
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.launcher.core.download.DownloadLibraryJob;
-import org.jackhuang.hellominecraft.util.tasks.download.FileDownloadTask;
+import org.jackhuang.hellominecraft.util.net.FileDownloadTask;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/launch/MinecraftLoader.java
Patch:
@@ -23,9 +23,9 @@
 import java.util.List;
 import java.util.Locale;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
-import org.jackhuang.hellominecraft.util.system.OS;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.OS;
 import org.jackhuang.hellominecraft.launcher.core.GameException;
 import org.jackhuang.hellominecraft.launcher.core.auth.UserProfileProvider;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftLibrary;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/mod/MinecraftModService.java
Patch:
@@ -24,10 +24,10 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftModService;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/mod/ModInfo.java
Patch:
@@ -30,9 +30,9 @@
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftAssetService.java
Patch:
@@ -21,7 +21,7 @@
 import java.io.IOException;
 import org.jackhuang.hellominecraft.launcher.core.GameException;
 import org.jackhuang.hellominecraft.launcher.core.version.AssetIndexDownloadInfo;
-import org.jackhuang.hellominecraft.util.tasks.Task;
+import org.jackhuang.hellominecraft.util.task.Task;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftDownloadService.java
Patch:
@@ -22,7 +22,7 @@
 import org.jackhuang.hellominecraft.launcher.core.GameException;
 import org.jackhuang.hellominecraft.launcher.core.download.DownloadLibraryJob;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;
-import org.jackhuang.hellominecraft.util.tasks.Task;
+import org.jackhuang.hellominecraft.util.task.Task;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftInstallerService.java
Patch:
@@ -19,7 +19,7 @@
 
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerType;
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerVersionList;
-import org.jackhuang.hellominecraft.util.tasks.Task;
+import org.jackhuang.hellominecraft.util.task.Task;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/version/LibraryDownloadInfo.java
Patch:
@@ -20,7 +20,7 @@
 import com.google.gson.annotations.SerializedName;
 import org.jackhuang.hellominecraft.launcher.core.download.DownloadType;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  *

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftLibrary.java
Patch:
@@ -21,8 +21,8 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.HashMap;
-import org.jackhuang.hellominecraft.util.system.OS;
-import org.jackhuang.hellominecraft.util.system.Platform;
+import org.jackhuang.hellominecraft.util.sys.OS;
+import org.jackhuang.hellominecraft.util.sys.Platform;
 import org.jackhuang.hellominecraft.util.StrUtils;
 
 /**

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/version/OSRestriction.java
Patch:
@@ -19,7 +19,7 @@
 
 import com.google.gson.annotations.SerializedName;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.system.OS;
+import org.jackhuang.hellominecraft.util.sys.OS;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Config.java
Patch:
@@ -28,8 +28,8 @@
 import org.jackhuang.hellominecraft.launcher.core.auth.IAuthenticator;
 import org.jackhuang.hellominecraft.lookandfeel.Theme;
 import org.jackhuang.hellominecraft.util.EventHandler;
-import org.jackhuang.hellominecraft.util.system.JdkVersion;
-import org.jackhuang.hellominecraft.util.system.OS;
+import org.jackhuang.hellominecraft.util.sys.JdkVersion;
+import org.jackhuang.hellominecraft.util.sys.OS;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Profile.java
Patch:
@@ -24,10 +24,10 @@
 import org.jackhuang.hellominecraft.launcher.core.MCUtils;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.util.EventHandler;
-import org.jackhuang.hellominecraft.util.system.OS;
+import org.jackhuang.hellominecraft.util.sys.OS;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Settings.java
Patch:
@@ -23,13 +23,13 @@
 import java.util.Collection;
 import java.util.Map;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.launcher.Main;
 import org.jackhuang.hellominecraft.launcher.core.MCUtils;
 import org.jackhuang.hellominecraft.launcher.core.download.DownloadType;
 import org.jackhuang.hellominecraft.util.CollectionUtils;
 import org.jackhuang.hellominecraft.util.EventHandler;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.UpdateChecker;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameDownloadPanel.java
Patch:
@@ -23,7 +23,7 @@
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
+import org.jackhuang.hellominecraft.util.task.TaskWindow;
 import org.jackhuang.hellominecraft.util.ui.SwingUtils;
 
 /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/InstallerPanel.java
Patch:
@@ -24,11 +24,11 @@
 import org.jackhuang.hellominecraft.launcher.setting.Settings;
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerType;
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerVersionList;
-import org.jackhuang.hellominecraft.util.tasks.TaskRunnable;
-import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
+import org.jackhuang.hellominecraft.util.task.TaskRunnable;
+import org.jackhuang.hellominecraft.util.task.TaskWindow;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.tasks.Task;
+import org.jackhuang.hellominecraft.util.task.Task;
 import org.jackhuang.hellominecraft.util.ui.SwingUtils;
 
 /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/LauncherSettingsPanel.java
Patch:
@@ -21,10 +21,10 @@
 import javax.swing.DefaultComboBoxModel;
 import javax.swing.filechooser.FileNameExtensionFilter;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.launcher.setting.Settings;
 import org.jackhuang.hellominecraft.launcher.core.download.DownloadType;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.lang.SupportedLocales;
 import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/RepaintPage.java
Patch:
@@ -17,6 +17,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.ui;
 
+import org.jackhuang.hellominecraft.util.ui.IRepaint;
 import java.awt.Rectangle;
 import java.awt.Window;
 import java.util.Arrays;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackDescriptionPanel.java
Patch:
@@ -25,7 +25,7 @@
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.ui.WebPage;
+import org.jackhuang.hellominecraft.util.net.WebPage;
 import org.jackhuang.hellominecraft.util.ui.wizard.spi.WizardController;
 import org.markdown4j.Markdown4jProcessor;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackFileSelectionPanel.java
Patch:
@@ -26,7 +26,7 @@
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.Pair;
 import org.jackhuang.hellominecraft.util.func.BiFunction;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
 import org.jackhuang.hellominecraft.util.ui.checktree.CheckBoxTreeCellRenderer;
 import org.jackhuang.hellominecraft.util.ui.checktree.CheckBoxTreeNode;
 import org.jackhuang.hellominecraft.util.ui.checktree.CheckBoxTreeNodeSelectionListener;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -26,13 +26,13 @@
 import java.util.logging.Logger;
 import javax.swing.SwingUtilities;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import static org.jackhuang.hellominecraft.launcher.Main.LAUNCHER_VERSION;
 import org.jackhuang.hellominecraft.launcher.setting.Settings;
-import org.jackhuang.hellominecraft.util.NetUtils;
+import org.jackhuang.hellominecraft.util.net.NetUtils;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.system.OS;
+import org.jackhuang.hellominecraft.util.sys.OS;
 import org.jackhuang.hellominecraft.util.ui.LogWindow;
 
 /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/FileNameFilter.java
Patch:
@@ -19,7 +19,7 @@
 
 import java.io.File;
 import javax.swing.filechooser.FileFilter;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/HMCLGameLauncher.java
Patch:
@@ -31,7 +31,7 @@
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.EventHandler;
 import org.jackhuang.hellominecraft.util.func.Consumer;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/HMCLMinecraftService.java
Patch:
@@ -36,9 +36,9 @@
 import org.jackhuang.hellominecraft.launcher.setting.VersionSetting;
 import org.jackhuang.hellominecraft.launcher.ui.MainFrame;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
-import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
+import org.jackhuang.hellominecraft.util.task.TaskWindow;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/MinecraftCrashAdvicer.java
Patch:
@@ -43,7 +43,7 @@ else if (trace.contains("concurrentmodificationexception"))
             return C.i18n("crash.advice.ConcurrentModificationException");
         else if (trace.contains("securityexception"))
             return C.i18n("crash.advice.SecurityException");
-        else if (trace.contains("nosuchfieldexception") || trace.contains("nosuchfielderror"))
+        else if (trace.contains("nosuchfieldexception") || trace.contains("nosuchmethodexception") || trace.contains("nosuchfielderror") || trace.contains("nosuchmethoderror"))
             return C.i18n("crash.advice.NoSuchFieldError");
         else if (trace.contains("outofmemory") || trace.contains("out of memory"))
             return C.i18n("crash.advice.OutOfMemoryError");

File: HMCLaF/src/main/java/org/jackhuang/hellominecraft/lookandfeel/HelloMinecraftLookAndFeel.java
Patch:
@@ -23,8 +23,8 @@
 import java.util.Map;
 import javax.swing.UIDefaults;
 import javax.swing.plaf.synth.SynthLookAndFeel;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/Main.java
Patch:
@@ -21,7 +21,7 @@
 import java.text.ParseException;
 import javax.swing.UIManager;
 import javax.swing.UnsupportedLookAndFeelException;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.ui.LogWindow;
 import org.jackhuang.hellominecraft.svrmgr.setting.SettingsManager;
 import org.jackhuang.hellominecraft.util.UpdateChecker;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/install/bukkit/BukkitFormatThread.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.func.Consumer;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/install/cauldron/ForgeFormatThread.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.List;
 import java.util.Map;
 import org.jackhuang.hellominecraft.util.func.Consumer;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/plugin/PluginManager.java
Patch:
@@ -27,7 +27,7 @@
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 import org.ho.yaml.Yaml;
-import org.jackhuang.hellominecraft.util.NetUtils;
+import org.jackhuang.hellominecraft.util.net.NetUtils;
 import org.jackhuang.hellominecraft.util.StrUtils;
 
 /**

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/Server.java
Patch:
@@ -34,8 +34,8 @@
 import java.util.logging.Logger;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.Pair;
 import org.jackhuang.hellominecraft.util.StrUtils;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/ServerChecker.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.util.zip.ZipFile;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedule/AutoExecuteSchedule.java
Patch:
@@ -19,7 +19,7 @@
 
 import java.io.IOException;
 import java.util.TimerTask;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.svrmgr.server.Server;
 import org.jackhuang.hellominecraft.svrmgr.setting.Schedule;
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/setting/PlayerList.java
Patch:
@@ -22,8 +22,8 @@
 import java.io.IOException;
 import java.util.HashSet;
 import java.util.UUID;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.svrmgr.setting.PlayerList.BasePlayer;
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/setting/ServerProperties.java
Patch:
@@ -25,9 +25,9 @@
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.Properties;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/setting/SettingsManager.java
Patch:
@@ -24,8 +24,8 @@
 import com.google.gson.Gson;
 import java.io.File;
 import java.io.IOException;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.FileUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.FileUtils;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/ui/PluginInfoDialog.java
Patch:
@@ -19,8 +19,8 @@
 
 import java.io.File;
 import javax.swing.table.DefaultTableModel;
-import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
-import org.jackhuang.hellominecraft.util.tasks.download.FileDownloadTask;
+import org.jackhuang.hellominecraft.util.task.TaskWindow;
+import org.jackhuang.hellominecraft.util.net.FileDownloadTask;
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.svrmgr.plugin.PluginInfo;
 import org.jackhuang.hellominecraft.svrmgr.plugin.PluginVersion;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/IPGet.java
Patch:
@@ -19,8 +19,8 @@
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.NetUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.net.NetUtils;
 import org.jackhuang.hellominecraft.util.func.Consumer;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/ModType.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  * 判断mod类型

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/MonitorServiceImpl.java
Patch:
@@ -26,8 +26,8 @@
 import java.util.StringTokenizer;
 import com.sun.management.OperatingSystemMXBean;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/MonitorThread.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.InputStreamReader;
 import java.util.ArrayList;
 import org.jackhuang.hellominecraft.util.code.Charsets;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/Utilities.java
Patch:
@@ -19,7 +19,7 @@
 
 import java.io.File;
 import org.jackhuang.hellominecraft.svrmgr.setting.SettingsManager;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/WaitForThread.java
Patch:
@@ -18,7 +18,7 @@
 package org.jackhuang.hellominecraft.svrmgr.util;
 
 import org.jackhuang.hellominecraft.util.EventHandler;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/MinecraftVersionRequest.java
Patch:
@@ -22,8 +22,8 @@
 import java.io.Serializable;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  * @author huangyuhui

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/UpdateChecker.java
Patch:
@@ -17,9 +17,10 @@
  */
 package org.jackhuang.hellominecraft.util;
 
+import org.jackhuang.hellominecraft.util.net.NetUtils;
 import com.google.gson.JsonSyntaxException;
 import java.io.IOException;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import java.util.Map;
 
 /**

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/VersionNumber.java
Patch:
@@ -17,7 +17,7 @@
  */
 package org.jackhuang.hellominecraft.util;
 
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/code/Charsets.java
Patch:
@@ -19,7 +19,7 @@
 
 import java.nio.charset.Charset;
 import java.nio.charset.UnsupportedCharsetException;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 public final class Charsets {
     

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/AppenderControl.java
Patch:
@@ -15,9 +15,9 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging;
+package org.jackhuang.hellominecraft.util.log;
 
-import org.jackhuang.hellominecraft.util.logging.appender.IAppender;
+import org.jackhuang.hellominecraft.util.log.appender.IAppender;
 
 public class AppenderControl {
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/HMCLog.java
Patch:
@@ -15,9 +15,9 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging;
+package org.jackhuang.hellominecraft.util.log;
 
-import org.jackhuang.hellominecraft.util.logging.logger.Logger;
+import org.jackhuang.hellominecraft.util.log.logger.Logger;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/Level.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging;
+package org.jackhuang.hellominecraft.util.log;
 
 import java.awt.Color;
 import java.util.regex.Matcher;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/LogEvent.java
Patch:
@@ -15,9 +15,9 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging;
+package org.jackhuang.hellominecraft.util.log;
 
-import org.jackhuang.hellominecraft.util.logging.message.IMessage;
+import org.jackhuang.hellominecraft.util.log.message.IMessage;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/LoggingException.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging;
+package org.jackhuang.hellominecraft.util.log;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/appender/AbstractAppender.java
Patch:
@@ -15,10 +15,10 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.appender;
+package org.jackhuang.hellominecraft.util.log.appender;
 
 import java.io.Serializable;
-import org.jackhuang.hellominecraft.util.logging.layout.ILayout;
+import org.jackhuang.hellominecraft.util.log.layout.ILayout;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/appender/ConsoleAppender.java
Patch:
@@ -15,12 +15,12 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.appender;
+package org.jackhuang.hellominecraft.util.log.appender;
 
 import java.io.IOException;
 import java.io.OutputStream;
 import java.io.Serializable;
-import org.jackhuang.hellominecraft.util.logging.layout.ILayout;
+import org.jackhuang.hellominecraft.util.log.layout.ILayout;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/appender/IAppender.java
Patch:
@@ -15,11 +15,11 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.appender;
+package org.jackhuang.hellominecraft.util.log.appender;
 
 import java.io.Serializable;
-import org.jackhuang.hellominecraft.util.logging.LogEvent;
-import org.jackhuang.hellominecraft.util.logging.layout.ILayout;
+import org.jackhuang.hellominecraft.util.log.LogEvent;
+import org.jackhuang.hellominecraft.util.log.layout.ILayout;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/layout/AbstractStringLayout.java
Patch:
@@ -15,9 +15,9 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.layout;
+package org.jackhuang.hellominecraft.util.log.layout;
 
-import org.jackhuang.hellominecraft.util.logging.LogEvent;
+import org.jackhuang.hellominecraft.util.log.LogEvent;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/layout/DefaultLayout.java
Patch:
@@ -15,11 +15,11 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.layout;
+package org.jackhuang.hellominecraft.util.log.layout;
 
 import java.text.SimpleDateFormat;
 import java.util.Date;
-import org.jackhuang.hellominecraft.util.logging.LogEvent;
+import org.jackhuang.hellominecraft.util.log.LogEvent;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/layout/ILayout.java
Patch:
@@ -15,10 +15,10 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.layout;
+package org.jackhuang.hellominecraft.util.log.layout;
 
 import java.io.Serializable;
-import org.jackhuang.hellominecraft.util.logging.LogEvent;
+import org.jackhuang.hellominecraft.util.log.LogEvent;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/logger/ILogger.java
Patch:
@@ -15,10 +15,10 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.logger;
+package org.jackhuang.hellominecraft.util.log.logger;
 
-import org.jackhuang.hellominecraft.util.logging.Level;
-import org.jackhuang.hellominecraft.util.logging.message.IMessage;
+import org.jackhuang.hellominecraft.util.log.Level;
+import org.jackhuang.hellominecraft.util.log.message.IMessage;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/AbstractMessageFactory.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/IMessage.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 import java.io.Serializable;
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/IMessageFactory.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/ObjectMessage.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 public class ObjectMessage
     implements IMessage {

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/ParameterizedMessage.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 import java.text.SimpleDateFormat;
 import java.util.Arrays;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/ParameterizedMessageFactory.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/SimpleMessage.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/log/message/StringFormattedMessage.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.logging.message;
+package org.jackhuang.hellominecraft.util.log.message;
 
 import java.util.Arrays;
 import java.util.IllegalFormatException;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/net/NetUtils.java
Patch:
@@ -15,9 +15,9 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util;
+package org.jackhuang.hellominecraft.util.net;
 
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -27,7 +27,7 @@
 import java.net.URL;
 import java.util.Map;
 import org.jackhuang.hellominecraft.util.code.Charsets;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/net/WebPage.java
Patch:
@@ -15,11 +15,12 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.ui;
+package org.jackhuang.hellominecraft.util.net;
 
 import javax.swing.JScrollPane;
 import javax.swing.event.HyperlinkEvent;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.ui.SwingUtils;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/CompressingUtils.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/FileUtils.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.io.File;
 import java.io.FileFilter;
@@ -29,7 +29,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/IOUtils.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayOutputStream;
@@ -38,7 +38,7 @@
 import java.util.List;
 import org.jackhuang.hellominecraft.util.func.Consumer;
 import org.jackhuang.hellominecraft.util.func.Function;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/Java.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.io.File;
 import java.io.IOException;
@@ -25,7 +25,7 @@
 import java.util.List;
 import java.util.Map;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/JavaProcess.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.util.ArrayList;
 import java.util.Arrays;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/JavaProcessMonitor.java
Patch:
@@ -15,15 +15,15 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.util.Arrays;
 import java.util.HashSet;
 import org.jackhuang.hellominecraft.util.CollectionUtils;
 import org.jackhuang.hellominecraft.util.EventHandler;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.logging.Level;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.log.Level;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/JdkVersion.java
Patch:
@@ -15,13 +15,13 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.io.File;
 import java.io.IOException;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.StrUtils;
 
 /**

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/OS.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import com.sun.management.OperatingSystemMXBean;
 import java.io.BufferedReader;
@@ -26,7 +26,7 @@
 import java.util.Locale;
 import java.util.StringTokenizer;
 import org.jackhuang.hellominecraft.util.code.Charsets;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  * @author huangyuhui

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/Platform.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/ProcessManager.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.util.HashSet;
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/ProcessThread.java
Patch:
@@ -15,13 +15,13 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.EventHandler;
 import org.jackhuang.hellominecraft.util.code.Charsets;
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/sys/ZipEngine.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.system;
+package org.jackhuang.hellominecraft.util.sys;
 
 import java.io.BufferedOutputStream;
 import java.io.ByteArrayInputStream;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/DeleteFileTask.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 import java.io.File;
 import java.io.IOException;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/DoingDoneListener.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 import java.util.Collection;
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/DoubleTask.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 import java.util.Arrays;
 import java.util.Collection;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/NoShownTaskException.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/ParallelTask.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 import java.util.Collection;
 import java.util.HashSet;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/ProgressProviderListener.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/Task.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 import java.util.Collection;
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/TaskInfo.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/TaskList.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 import java.util.ArrayList;
 import java.util.Collection;
@@ -30,7 +30,7 @@
 import java.util.concurrent.Future;
 import java.util.concurrent.atomic.AtomicBoolean;
 import org.jackhuang.hellominecraft.util.EventHandler;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/TaskRunnable.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/TaskWindow.java
Patch:
@@ -15,15 +15,15 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks;
+package org.jackhuang.hellominecraft.util.task;
 
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.LinkedList;
 import javax.swing.SwingUtilities;
 import javax.swing.table.TableColumn;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.util.ui.SwingUtils;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/comm/PreviousResult.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks.comm;
+package org.jackhuang.hellominecraft.util.task.comm;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/task/comm/PreviousResultRegistrar.java
Patch:
@@ -15,9 +15,9 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.util.tasks.comm;
+package org.jackhuang.hellominecraft.util.task.comm;
 
-import org.jackhuang.hellominecraft.util.tasks.Task;
+import org.jackhuang.hellominecraft.util.task.Task;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/GaussionPanel.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.ui;
+package org.jackhuang.hellominecraft.util.ui;
 
 import java.awt.AlphaComposite;
 import java.awt.Graphics;
@@ -26,13 +26,12 @@
 import java.util.ArrayList;
 import java.util.List;
 import javax.swing.JPanel;
-import org.jackhuang.hellominecraft.util.ui.StackBlurFilter;
 
 /**
  * This component will allow some area blured to provide better UI.
  * @author huangyuhui
  */
-public class GaussionPage extends Page {
+public class GaussionPanel extends JPanel {
 
     private transient BufferedImage aeroBuffer;
     private transient Image backgroundImage;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/IRepaint.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.ui;
+package org.jackhuang.hellominecraft.util.ui;
 
 import java.awt.Rectangle;
 import java.awt.Window;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/LogWindow.java
Patch:
@@ -23,8 +23,8 @@
 import javax.swing.text.SimpleAttributeSet;
 import javax.swing.text.StyleConstants;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.logging.Level;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
+import org.jackhuang.hellominecraft.util.log.Level;
 import org.jackhuang.hellominecraft.util.func.NonFunction;
 import org.jackhuang.hellominecraft.util.DoubleOutputStream;
 import org.jackhuang.hellominecraft.util.Utils;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/LogWindowOutputStream.java
Patch:
@@ -21,7 +21,7 @@
 import java.util.Objects;
 import javax.swing.SwingUtilities;
 import org.jackhuang.hellominecraft.util.code.Charsets;
-import org.jackhuang.hellominecraft.util.logging.Level;
+import org.jackhuang.hellominecraft.util.log.Level;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/MyRepaintManager.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.ui;
+package org.jackhuang.hellominecraft.util.ui;
 
 import java.awt.Container;
 import java.awt.Rectangle;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/SwingUtils.java
Patch:
@@ -43,12 +43,12 @@
 import javax.swing.SwingUtilities;
 import javax.swing.table.DefaultTableModel;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.util.Utils;
 import org.jackhuang.hellominecraft.util.func.NonFunction;
-import org.jackhuang.hellominecraft.util.system.OS;
+import org.jackhuang.hellominecraft.util.sys.OS;
 
 /**
  *

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/WideComboBox.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.ui;
+package org.jackhuang.hellominecraft.util.ui;
 
 import java.awt.Dimension;
 import javax.swing.JComboBox;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/wizard/api/displayer/NavProgress.java
Patch:
@@ -8,7 +8,7 @@
 import javax.swing.JProgressBar;
 import javax.swing.border.EmptyBorder;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.ui.wizard.spi.ResultProgressHandle;
 import org.jackhuang.hellominecraft.util.ui.wizard.spi.Summary;
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/wizard/api/displayer/WizardDisplayerImpl.java
Patch:
@@ -50,7 +50,7 @@
 import javax.swing.border.CompoundBorder;
 import javax.swing.border.EmptyBorder;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.ui.wizard.api.WizardDisplayer;
 import org.jackhuang.hellominecraft.util.ui.wizard.api.WizardResultReceiver;
 import org.jackhuang.hellominecraft.util.ui.wizard.modules.InstructionsPanelImpl;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/wizard/modules/InstructionsPanelImpl.java
Patch:
@@ -44,7 +44,7 @@
 import javax.swing.JEditorPane;
 import javax.swing.UIManager;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
+import org.jackhuang.hellominecraft.util.log.HMCLog;
 import org.jackhuang.hellominecraft.util.ui.wizard.api.displayer.InstructionsPanel;
 import org.jackhuang.hellominecraft.util.ui.wizard.spi.Wizard;
 import org.jackhuang.hellominecraft.util.ui.wizard.spi.WizardObserver;

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/wizard/spi/SimpleWizardInfo.java
Patch:
@@ -31,7 +31,7 @@
 import javax.swing.JTextArea;
 import org.jackhuang.hellominecraft.util.ArrayUtils;
 import org.jackhuang.hellominecraft.util.code.Charsets;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
+import org.jackhuang.hellominecraft.util.sys.IOUtils;
 
 /**
  * Provides information about a simple wizard. Wraps a

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/tasks/TaskList.java
Patch:
@@ -85,7 +85,7 @@ public void run() {
 
     }
 
-    ExecutorService EXECUTOR_SERVICE = Executors.newFixedThreadPool(64);
+    ExecutorService EXECUTOR_SERVICE = Executors.newFixedThreadPool(8);
     HashMap<Invoker, Future<?>> futures = new HashMap<>();
     HashSet<Invoker> invokers = new HashSet<>();
 

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/MojangDownloadProvider.java
Patch:
@@ -64,7 +64,7 @@ public String getVersionsListDownloadURL() {
 
     @Override
     public String getAssetsDownloadURL() {
-        return "https://resources.download.minecraft.net/";
+        return "http://resources.download.minecraft.net/";
     }
 
     @Override

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftModService.java
Patch:
@@ -37,5 +37,5 @@ public IMinecraftModService(IMinecraftService service) {
 
     public abstract boolean addMod(String id, File f);
 
-    public abstract void removeMod(String id, Object[] mods);
+    public abstract boolean removeMod(String id, Object[] mods);
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -132,7 +132,7 @@ void showMessage(String s) {
     private static final HashSet<String> THROWABLE_SET = new HashSet<>();
 
     void reportToServer(final String text, String stacktrace) {
-        if (THROWABLE_SET.contains(stacktrace) || stacktrace.contains("Font"))
+        if (THROWABLE_SET.contains(stacktrace) || stacktrace.contains("Font") || stacktrace.contains("InternalError"))
             return;
         THROWABLE_SET.add(stacktrace);
         Thread t = new Thread(() -> {

File: HMCLaF/src/main/java/org/jackhuang/hellominecraft/lookandfeel/Theme.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.util.HashMap;
 import java.util.Map;
+import java.util.Objects;
 import org.jackhuang.hellominecraft.util.C;
 
 /**
@@ -85,9 +86,7 @@ public enum Theme {
     public final Map<String, String> settings;
 
     private Theme(String localizedName, Map<String, String> settings) {
-        if (settings == null)
-            throw new NullPointerException("Theme settings map should not be null.");
         this.localizedName = localizedName;
-        this.settings = settings;
+        this.settings = Objects.requireNonNull(settings, "Theme settings map may not be null.");
     }
 }

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/ui/wizard/spi/WizardBranchController.java
Patch:
@@ -16,6 +16,7 @@ and Distribution License (the License). You may not use this file except in
 package org.jackhuang.hellominecraft.util.ui.wizard.spi;
 
 import java.util.Map;
+import java.util.Objects;
 
 /**
  * Extend this class to create wizards which have branch points in them -
@@ -93,9 +94,7 @@ protected WizardBranchController(WizardPage onlyPage) {
      * for the initial panes of the wizard.
      */
     WizardBranchController(SimpleWizardInfo base) {
-        if (base == null)
-            throw new NullPointerException("No base");
-        this.base = base;
+        this.base = Objects.requireNonNull(base, "No base");
     }
 
     /**

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftAssetService.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import org.jackhuang.hellominecraft.launcher.core.GameException;
 import org.jackhuang.hellominecraft.launcher.core.version.AssetIndexDownloadInfo;
 import org.jackhuang.hellominecraft.util.tasks.Task;
 
@@ -32,7 +33,7 @@ public IMinecraftAssetService(IMinecraftService service) {
         super(service);
     }
 
-    public abstract Task downloadAssets(String mcVersion);
+    public abstract Task downloadAssets(String mcVersion) throws GameException;
 
     public abstract File getAssets();
 
@@ -43,7 +44,7 @@ public IMinecraftAssetService(IMinecraftService service) {
      *
      * @return Is the action successful?
      */
-    public abstract boolean refreshAssetsIndex(String a);
+    public abstract boolean refreshAssetsIndex(String a) throws GameException;
 
     public abstract boolean downloadMinecraftAssetsIndexAsync(AssetIndexDownloadInfo assetsId);
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/util/WaitForThread.java
Patch:
@@ -17,9 +17,8 @@
  */
 package org.jackhuang.hellominecraft.svrmgr.util;
 
-import java.util.logging.Level;
-import java.util.logging.Logger;
 import org.jackhuang.hellominecraft.util.EventHandler;
+import org.jackhuang.hellominecraft.util.logging.HMCLog;
 
 /**
  *
@@ -40,7 +39,7 @@ public void run() {
             int exitCode = p.waitFor();
             event.execute(exitCode);
         } catch (InterruptedException ex) {
-            Logger.getLogger(WaitForThread.class.getName()).log(Level.SEVERE, null, ex);
+            HMCLog.err("Game has been interrupted.", ex);
             event.execute(-1);
         }
     }

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/tasks/TaskList.java
Patch:
@@ -112,9 +112,10 @@ private boolean processTasks(Collection<? extends Task> c) {
         }
         try {
             counter.await();
-        } catch (InterruptedException ignore) {
+            return bool.get();
+        } catch (InterruptedException ignore) { // this task is canceled, so failed.
+            return false;
         }
-        return bool.get();
     }
 
     private boolean executeTask(Task t) {

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/DynamicDownloadProvider.java
Patch:
@@ -118,7 +118,7 @@ public String getParsedDownloadURL(String str) {
 		if (StrUtils.isNotBlank(launcherMetaAddr)) {
 			str = str.replace("https://launchermeta.mojang.com", launcherMetaAddr);
 		}
-		if (StrUtils.isNotBlank(launcherMetaAddr)) {
+		if (StrUtils.isNotBlank(launcherAddr)) {
 			str = str.replace("https://launcher.mojang.com", launcherAddr);
 		}
 		return super.getParsedDownloadURL(str);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Config.java
Patch:
@@ -67,7 +67,7 @@ public final class Config implements Cloneable {
     private String localization;
     @SerializedName("logintype")
     private int logintype;
-    @SerializedName("downloadtype")
+    @SerializedName("downloadSourcetype")
     private int downloadtype;
     @SerializedName("configurations")
     private TreeMap<String, Profile> configurations;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/download/DynamicDownloadProvider.java
Patch:
@@ -30,13 +30,13 @@
  */
 public class DynamicDownloadProvider extends MojangDownloadProvider {
 
-	private static final String PROVIDER_ADDR = "http://localhost/provider.php";
+	private static final String PROVIDER_ADDR = "http://client.api.mcgogogo.com:81/provider.php";
 
 	private volatile static DynamicDownloadProvider instance;
 
 	private String librariesAddr = null;
 	private String assetsAddr = null;
-	private String name = "MCHost";
+	private String name = "精灵";
 
 	public void setName(String name) {
 		this.name = name;

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/auth/yggdrasil/YggdrasilAuthentication.java
Patch:
@@ -148,7 +148,7 @@ private void loggedIn(URL url, Object input) throws AuthenticationException {
 
             if (StrUtils.isNotBlank(response.error)) {
                 HMCLog.err("Failed to log in, the auth server returned an error: " + response.error + ", message: " + response.errorMessage + ", cause: " + response.cause);
-                if (response.errorMessage.contains("Invalid token"))
+                if (response.errorMessage != null && response.errorMessage.contains("Invalid token"))
                     response.errorMessage = C.i18n("login.invalid_token");
                 throw new AuthenticationException("Request error: " + response.errorMessage);
             }

File: HMCL/src/core/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftVersion.java
Patch:
@@ -145,7 +145,7 @@ protected MinecraftVersion resolve(IMinecraftProvider provider, Set<String> reso
             this.assets != null ? this.assets : parent.assets,
             this.jar != null ? this.jar : parent.jar,
             null, this.runDir, parent.minimumLauncherVersion,
-            this.libraries != null ? ArrayUtils.merge(parent.libraries, this.libraries) : parent.libraries, this.hidden,
+            this.libraries != null ? ArrayUtils.merge(this.libraries, parent.libraries) : parent.libraries, this.hidden,
             this.downloads != null ? this.downloads : parent.downloads,
             this.assetIndex != null ? this.assetIndex : parent.assetIndex);
 

File: HMCUtils/src/main/java/org/jackhuang/hellominecraft/util/system/ZipEngine.java
Patch:
@@ -121,11 +121,9 @@ public void putFile(File file, String pathName) throws IOException {
     }
 
     public void putStream(InputStream is, String pathName) throws IOException {
-        int length;
         try (BufferedInputStream bis = new BufferedInputStream(is)) {
             put(new ZipEntry(pathName));
-            while ((length = bis.read(buf)) > 0)
-                zos.write(buf, 0, length);
+            IOUtils.copyStream(bis, zos, buf);
         }
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/optifine/OptiFineInstaller.java
Patch:
@@ -72,7 +72,8 @@ public void executeTask() throws Exception {
                     mv.mainClass = "net.minecraft.launchwrapper.Launch";
                     mv.libraries.add(1, new MinecraftLibrary("net.minecraft:launchwrapper:1.7"));
                 }
-                mv.minecraftArguments += " --tweakClass optifine.OptiFineTweaker";
+                if (!mv.minecraftArguments.contains("FMLTweaker"))
+                    mv.minecraftArguments += " --tweakClass optifine.OptiFineTweaker";
             }
         }
         File loc = new File(service.baseDirectory(), "versions/" + mv.id);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/GameLauncher.java
Patch:
@@ -120,7 +120,7 @@ public IMinecraftLoader makeLaunchCommand() throws AuthenticationException, Game
      *
      * @throws IOException failed creating process
      */
-    public void launch(List str) throws IOException {
+    public void launch(List<String> str) throws IOException {
         if (!service.version().onLaunch(options.getLaunchVersion()))
             return;
         if (StrUtils.isNotBlank(options.getPrecalledCommand())) {
@@ -133,6 +133,7 @@ public void launch(List str) throws IOException {
             }
         }
         HMCLog.log("Starting process");
+        HMCLog.log(str.toString());
         ProcessBuilder builder = new ProcessBuilder(str);
         if (options.getLaunchVersion() == null || service.baseDirectory() == null)
             throw new Error("Fucking bug!");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftVersion.java
Patch:
@@ -121,7 +121,7 @@ protected MinecraftVersion resolve(IMinecraftProvider provider, Set<String> reso
             this.assets != null ? this.assets : parent.assets,
             this.jar != null ? this.jar : parent.jar,
             null, this.runDir, parent.minimumLauncherVersion,
-            this.libraries != null ? ArrayUtils.merge(this.libraries, parent.libraries) : parent.libraries, this.hidden,
+            this.libraries != null ? ArrayUtils.merge(parent.libraries, this.libraries) : parent.libraries, this.hidden,
             this.downloads != null ? this.downloads : parent.downloads,
             this.assetIndex != null ? this.assetIndex : parent.assetIndex);
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/asset/AssetsMojangLoader.java
Patch:
@@ -66,7 +66,7 @@ public Collection<Task> getDependTasks() {
             public void executeTask() throws Throwable {
                 if (!areDependTasksSucceeded)
                     throw new IllegalStateException("Failed to get asset index");
-                String result = FileUtils.readFileToString(f);
+                String result = FileUtils.read(f);
                 if (StrUtils.isBlank(result))
                     throw new IllegalStateException("Index json is empty, please redownload it!");
                 AssetsIndex o = C.GSON.fromJson(result, AssetsIndex.class);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftDownloadService.java
Patch:
@@ -85,7 +85,7 @@ public void executeTask() throws Throwable {
                 if (mvj.exists() && !mvj.delete())
                     HMCLog.warn("Failed to delete " + mvj);
                 try {
-                    MinecraftVersion mv = C.GSON.fromJson(FileUtils.readFileToStringQuietly(new File(vpath, id + ".json")), MinecraftVersion.class);
+                    MinecraftVersion mv = C.GSON.fromJson(FileUtils.readQuietly(new File(vpath, id + ".json")), MinecraftVersion.class);
                     if (mv == null)
                         throw new JsonSyntaxException("incorrect version");
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/MinecraftInstallerService.java
Patch:
@@ -57,7 +57,7 @@ public Task download(String installId, InstallerVersion v, InstallerType type) {
 
     @Override
     public Task downloadForge(String installId, InstallerVersion v) {
-        File filepath = IOUtils.tryGetCanonicalFile(IOUtils.currentDirWithSeparator() + "forge-installer.jar");
+        File filepath = IOUtils.tryGetCanonicalFile("forge-installer.jar");
         if (v.installer == null)
             return null;
         else
@@ -68,7 +68,7 @@ public Task downloadForge(String installId, InstallerVersion v) {
 
     @Override
     public Task downloadOptiFine(String installId, InstallerVersion v) {
-        File filepath = IOUtils.tryGetCanonicalFile(IOUtils.currentDirWithSeparator() + "optifine-installer.jar");
+        File filepath = IOUtils.tryGetCanonicalFile("optifine-installer.jar");
         if (v.installer == null)
             return null;
         OptiFineDownloadFormatter task = new OptiFineDownloadFormatter(v.installer);
@@ -79,7 +79,7 @@ public Task downloadOptiFine(String installId, InstallerVersion v) {
 
     @Override
     public Task downloadLiteLoader(String installId, InstallerVersion v) {
-        File filepath = IOUtils.tryGetCanonicalFile(IOUtils.currentDirWithSeparator() + "liteloader-universal.jar");
+        File filepath = IOUtils.tryGetCanonicalFile("liteloader-universal.jar");
         FileDownloadTask task = (FileDownloadTask) new FileDownloadTask(v.universal, filepath).setTag("LiteLoader");
         return task.after(new LiteLoaderInstaller(service, installId, (LiteLoaderVersionList.LiteLoaderInstallerVersion) v).registerPreviousResult(task))
             .after(new DeleteFileTask(filepath));

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/PackMinecraftInstaller.java
Patch:
@@ -23,7 +23,6 @@
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.util.system.Compressor;
 import org.jackhuang.hellominecraft.util.system.FileUtils;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
 
 /**
  *
@@ -40,7 +39,7 @@ public PackMinecraftInstaller(ArrayList<String> src, File dest) {
     }
 
     public void install() throws IOException {
-        File file = new File(IOUtils.currentDir(), "HMCL-MERGE-TEMP");
+        File file = new File("HMCL-MERGE-TEMP");
         if (!file.exists() && !file.mkdirs())
             HMCLog.warn("Failed to make directories: " + file);
         for (String src1 : src)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/optifine/OptiFineInstaller.java
Patch:
@@ -79,7 +79,7 @@ public void executeTask() throws Exception {
         if (!loc.exists() && loc.mkdirs())
             HMCLog.warn("Failed to make directories: " + loc);
         File json = new File(loc, mv.id + ".json");
-        FileUtils.writeStringToFile(json, C.GSON.toJson(mv, MinecraftVersion.class));
+        FileUtils.write(json, C.GSON.toJson(mv, MinecraftVersion.class));
 
         service.version().refreshVersions();
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/AbstractMinecraftLoader.java
Patch:
@@ -29,7 +29,6 @@
 import org.jackhuang.hellominecraft.util.system.OS;
 import org.jackhuang.hellominecraft.util.system.Platform;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.Utils;
 import org.jackhuang.hellominecraft.launcher.core.GameException;
 import org.jackhuang.hellominecraft.launcher.core.auth.UserProfileProvider;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/GameLauncher.java
Patch:
@@ -121,7 +121,7 @@ public IMinecraftLoader makeLaunchCommand() throws AuthenticationException, Game
      * @throws IOException failed creating process
      */
     public void launch(List str) throws IOException {
-        if (!service.version().onLaunch())
+        if (!service.version().onLaunch(options.getLaunchVersion()))
             return;
         if (StrUtils.isNotBlank(options.getPrecalledCommand())) {
             Process p = Runtime.getRuntime().exec(options.getPrecalledCommand());
@@ -155,7 +155,7 @@ public void launch(List str) throws IOException {
      */
     public File makeLauncher(String launcherName, List str) throws IOException {
         HMCLog.log("Making shell launcher...");
-        service.version().onLaunch();
+        service.version().onLaunch(options.getLaunchVersion());
         boolean isWin = OS.os() == OS.WINDOWS;
         File f = new File(launcherName + (isWin ? ".bat" : ".sh"));
         if (!f.exists() && !f.createNewFile())

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/ModpackManager.java
Patch:
@@ -164,13 +164,13 @@ else if (newFile.isFile())
                         HMCLog.warn("Failed to rename incorrect json " + oldFile + " to " + nowFile);
 
                     File json = new File(nowFile, "pack.json");
-                    MinecraftVersion mv = C.GSON.fromJson(FileUtils.readFileToString(json), MinecraftVersion.class);
+                    MinecraftVersion mv = C.GSON.fromJson(FileUtils.read(json), MinecraftVersion.class);
                     if (mv.jar == null)
                         throw new FileNotFoundException(C.i18n("modpack.incorrect_format.no_jar"));
 
                     c.add(service.download().downloadMinecraftJar(mv, new File(nowFile, id + ".jar")));
                     mv.jar = null;
-                    FileUtils.writeStringToFile(json, C.GSON.toJson(mv));
+                    FileUtils.write(json, C.GSON.toJson(mv));
                     if (!json.renameTo(new File(nowFile, id + ".json")))
                         HMCLog.warn("Failed to rename pack.json to new id");
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Profile.java
Patch:
@@ -46,7 +46,7 @@ public Profile() {
     }
 
     public Profile(String name) {
-        this(name, new File(IOUtils.currentDir(), ".minecraft").getPath());
+        this(name, new File(".minecraft").getPath());
     }
 
     public Profile(String name, String gameDir) {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Settings.java
Patch:
@@ -30,7 +30,6 @@
 import org.jackhuang.hellominecraft.util.CollectionUtils;
 import org.jackhuang.hellominecraft.util.EventHandler;
 import org.jackhuang.hellominecraft.util.system.FileUtils;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.UpdateChecker;
 
@@ -43,7 +42,7 @@ public final class Settings {
     public static final String DEFAULT_PROFILE = "Default";
     public static final String HOME_PROFILE = "Home";
 
-    public static final File SETTINGS_FILE = new File(IOUtils.currentDir(), "hmcl.json");
+    public static final File SETTINGS_FILE = new File("hmcl.json");
 
     private static final Config SETTINGS;
     public static final UpdateChecker UPDATE_CHECKER = new UpdateChecker(Main.getVersionNumber(), "hmcl");
@@ -71,7 +70,7 @@ private static Config initSettings() {
         Config c = new Config();
         if (SETTINGS_FILE.exists())
             try {
-                String str = FileUtils.readFileToString(SETTINGS_FILE);
+                String str = FileUtils.read(SETTINGS_FILE);
                 if (str == null || str.trim().equals(""))
                     HMCLog.log("Settings file is empty, use the default settings.");
                 else {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameSettingsPanel.java
Patch:
@@ -61,7 +61,6 @@
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.util.func.Consumer;
 import org.jackhuang.hellominecraft.util.system.FileUtils;
-import org.jackhuang.hellominecraft.util.system.IOUtils;
 import org.jackhuang.hellominecraft.util.ui.SwingUtils;
 import org.jackhuang.hellominecraft.util.system.Java;
 import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
@@ -1095,7 +1094,7 @@ private void btnMakeLaunchScriptActionPerformed(java.awt.event.ActionEvent evt)
     }//GEN-LAST:event_btnMakeLaunchScriptActionPerformed
 
     private void btnIncludeMinecraftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncludeMinecraftActionPerformed
-        JFileChooser fc = new JFileChooser(IOUtils.currentDir());
+        JFileChooser fc = new JFileChooser(new File("."));
         fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
         if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
             File newGameDir = fc.getSelectedFile();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/LaunchingUIDaemon.java
Patch:
@@ -109,7 +109,7 @@ void makeLaunchScript(Profile profile) {
                 }
                 String msg = C.i18n("launch.exited_abnormally") + " exit code: " + t;
                 if (errorText != null)
-                    msg += ", advice: " + MinecraftCrashAdvicer.getAdvice(FileUtils.readFileToStringQuietly(new File(errorText)));
+                    msg += ", advice: " + MinecraftCrashAdvicer.getAdvice(FileUtils.readQuietly(new File(errorText)));
                 MessageBox.Show(msg);
                 WebFrame f = new WebFrame(logs);
                 f.setModal(true);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/HMCLMinecraftService.java
Patch:
@@ -91,7 +91,7 @@ private void loadVersionSetting(String id) {
         VersionSetting vs = null;
         File f = new File(provider.versionRoot(id), "hmclversion.cfg");
         if (f.exists()) {
-            String s = FileUtils.readFileToStringQuietly(f);
+            String s = FileUtils.readQuietly(f);
             if (s != null)
                 try {
                     vs = C.GSON.fromJson(s, VersionSetting.class);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/upgrade/AppDataUpgrader.java
Patch:
@@ -81,7 +81,7 @@ public boolean parseArguments(VersionNumber nowVersion, String[] args) {
             try {
                 File f = AppDataUpgraderTask.HMCL_VER_FILE;
                 if (f.exists()) {
-                    Map<String, String> m = C.GSON.fromJson(FileUtils.readFileToString(f), Map.class);
+                    Map<String, String> m = C.GSON.fromJson(FileUtils.read(f), Map.class);
                     String s = m.get("ver");
                     if (s != null && VersionNumber.check(s).compareTo(nowVersion) > 0) {
                         String j = m.get("loc");
@@ -179,7 +179,7 @@ public void executeTask() throws Exception {
             json.put("ver", newestVersion);
             json.put("loc", f.getAbsolutePath());
             String result = C.GSON.toJson(json);
-            FileUtils.writeStringToFile(HMCL_VER_FILE, result);
+            FileUtils.write(HMCL_VER_FILE, result);
         }
 
         @Override

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/system/OS.java
Patch:
@@ -109,7 +109,7 @@ else if (str.equalsIgnoreCase("SwapFree:"))
     }
 
     public static String getLinuxReleaseVersion() throws IOException {
-        return FileUtils.readFileToString(new File("/etc/issue"));
+        return FileUtils.read(new File("/etc/issue"));
     }
 
     public static String getSystemVersion() {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/setting/PlayerList.java
Patch:
@@ -90,7 +90,7 @@ public void initByBoth(File txt, File json) {
         op = null;
         if (txt.exists())
             try {
-                initByText(FileUtils.readFileToStringIgnoreFileNotFound(txt));
+                initByText(FileUtils.readIgnoreFileNotFound(txt));
                 if (op != null)
                     player.addAll(op);
             } catch (IOException e) {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainPagePanel.java
Patch:
@@ -354,7 +354,7 @@ private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIR
         if (l.isLoggedIn())
             l.logOut();
         cl.first(pnlPassword);
-        pnlPassword.repaint();
+        SwingUtilities.invokeLater(this::repaint);
     }//GEN-LAST:event_btnLogoutActionPerformed
 
     private void txtPlayerNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlayerNameKeyPressed

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/LibraryDownloadInfo.java
Patch:
@@ -19,6 +19,7 @@
 
 import org.jackhuang.hellominecraft.launcher.core.download.DownloadType;
 import org.jackhuang.hellominecraft.util.StrUtils;
+import org.jackhuang.hellominecraft.util.system.IOUtils;
 
 /**
  *
@@ -38,7 +39,7 @@ public String getUrl(DownloadType dt, boolean allowSelf) {
             if (path == null)
                 return null;
             else
-                myURL += path.replace('\\', '/');
+                myURL = IOUtils.addURLSeparator(myURL) + path.replace('\\', '/');
         return myURL;
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/IAuthenticator.java
Patch:
@@ -96,7 +96,8 @@ public Map onSaveSettings() {
     public void onLoadSettings(Map m) {
         if (m == null)
             return;
-        username = (String) m.get("IAuthenticator_UserName");
+        Object o = m.get("IAuthenticator_UserName");
+        username = o instanceof String ? (String) o : "";
     }
 
     public String getUserName() {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MojangDownloadProvider.java
Patch:
@@ -64,7 +64,7 @@ public String getVersionsListDownloadURL() {
 
     @Override
     public String getAssetsDownloadURL() {
-        return "http://resources.download.minecraft.net/";
+        return "https://resources.download.minecraft.net/";
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainFrame.java
Patch:
@@ -52,10 +52,10 @@
 import org.jackhuang.hellominecraft.lookandfeel.Theme;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
-import org.jackhuang.hellominecraft.util.Utils;
 import org.jackhuang.hellominecraft.util.ui.DropShadowBorder;
 import org.jackhuang.hellominecraft.util.ui.TintablePanel;
 import org.jackhuang.hellominecraft.util.ui.BasicColors;
+import org.jackhuang.hellominecraft.util.ui.SwingUtils;
 
 /**
  *
@@ -168,7 +168,7 @@ private void initComponents() {
 
         ImageIcon headerIcon = Main.getIcon("icon.png");
         this.setIconImage(headerIcon.getImage());
-        headerIcon = Utils.scaleImage(headerIcon, 16, 16);
+        headerIcon = SwingUtils.scaleImage(headerIcon, 16, 16);
         JLabel headerLabel = new JLabel(headerIcon);
         headerLabel.setBorder(BorderFactory.createEmptyBorder(0, 8, 0, 0));
         header.add(headerLabel);
@@ -318,7 +318,7 @@ protected void minimizeWindow() {
     ImageIcon background;
 
     public void loadBackground() {
-        background = Utils.searchBackgroundImage(Main.getIcon(Settings.getInstance().getTheme().settings.get("Customized.MainFrame.background_image")), Settings.getInstance().getBgpath(), 800, 480);
+        background = SwingUtils.searchBackgroundImage(Main.getIcon(Settings.getInstance().getTheme().settings.get("Customized.MainFrame.background_image")), Settings.getInstance().getBgpath(), 800, 480);
         if (background != null)
             if (backgroundLabel == null) {
                 backgroundLabel = new JLabel(background);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftRemoteVersion.java
Patch:
@@ -29,6 +29,6 @@ public class MinecraftRemoteVersion {
     public String getUrl(DownloadType type) {
         if (url == null)
             return type.getProvider().getVersionsDownloadURL() + id + "/" + id + ".json";
-        return url;
+        return type.getProvider().getParsedDownloadURL(url);
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/CurseDownloadProvider.java
Patch:
@@ -25,7 +25,7 @@ public class CurseDownloadProvider extends MojangDownloadProvider {
 
     @Override
     public String getParsedDownloadURL(String str) {
-        return str == null ? null : str.replace("http://files.minecraftforge.net/maven", "http://ftb.cursecdn.com/FTB2/maven/");
+        return str == null ? null : str.replace("http://files.minecraftforge.net/maven", "http://ftb.cursecdn.com/FTB2/maven");
     }
 
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/LibraryDownloadInfo.java
Patch:
@@ -31,7 +31,7 @@ public class LibraryDownloadInfo extends GameDownloadInfo {
 
     @Override
     public String getUrl(DownloadType dt, boolean allowSelf) {
-        String myURL = (forgeURL == null ? dt.getProvider().getLibraryDownloadURL() : forgeURL) + "/";
+        String myURL = (forgeURL == null ? dt.getProvider().getLibraryDownloadURL() : forgeURL);
         if (StrUtils.isNotBlank(url) && allowSelf)
             myURL = url;
         if (!myURL.endsWith(".jar"))

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/system/ZipEngine.java
Patch:
@@ -88,6 +88,8 @@ private void putDirectoryImpl(File source, String basePath, BiFunction<String, B
             files = new File[1];
             files[0] = source;
         }
+        if (files == null)
+            return;
         String pathName;//存相对路径(相对于待压缩的根目录)
         for (File file : files)
             if (file.isDirectory()) {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/TaskList.java
Patch:
@@ -101,6 +101,8 @@ private boolean processTasks(Collection<? extends Task> c) {
         AtomicBoolean bool = new AtomicBoolean(true);
         CountDownLatch counter = new CountDownLatch(c.size());
         for (Task t2 : c) {
+            if (t2 == null)
+                continue;
             t2.setParallelExecuting(true);
             Invoker thread = new Invoker(t2, counter, bool);
             invokers.add(thread);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/TaskWindow.java
Patch:
@@ -216,8 +216,8 @@ public void setProgress(Task task, int progress, int max) {
             if (idx == -1)
                 return;
             int pgs = progress * 100 / max;
-            if (progresses.contains(idx) && progresses.get(idx) != pgs && lstDownload.getRowCount() > idx) {
-                SwingUtils.setValueAt(lstDownload, pgs + "%", idx, 1);
+            if (progresses.size() > idx && progresses.get(idx) != pgs && lstDownload.getRowCount() > idx) {
+                SwingUtils.setValueAt(lstDownload, pgs < 0 ? "???" : pgs + "%", idx, 1);
                 progresses.set(idx, pgs);
             }
         });
@@ -242,7 +242,7 @@ public void onDoing(Task task, Collection<Task> taskCollection) {
             if (taskList == null)
                 return;
             tasks.add(task);
-            progresses.add(0);
+            progresses.add(-1);
             SwingUtils.appendLast(lstDownload, task.getInfo(), "0%");
             SwingUtils.moveEnd(srlDownload);
         });

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/download/FileDownloadTask.java
Patch:
@@ -130,6 +130,8 @@ public void executeTask() throws Throwable {
             if (!shouldContinue)
                 break;
             try {
+                if (ppl != null)
+                    ppl.setProgress(this, -1, 1);
 
                 // Open connection to URL.
                 HttpURLConnection connection

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -47,8 +47,8 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
         {
             put("MessageBox", "");
             put("AWTError", "");
-            put("JFileChooser", "Has your operating system been installed completely or is a ghost system? ");
-            put("Jce", "Has your operating system been installed completely or is a ghost system? ");
+            put("JFileChooser", "Has your operating system been installed completely or is a ghost system?");
+            put("Jce", "Has your operating system been installed completely or is a ghost system?");
             put("couldn't create component peer", "Fucking computer!");
             put("sun.awt.shell.Win32ShellFolder2", "crash.user_fault");
             put("UnsatisfiedLinkError", "crash.user_fault");
@@ -60,6 +60,7 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("java.lang.ClassFormatError", "crash.NoClassDefFound");
             put("java.lang.OutOfMemoryError", "FUCKING MEMORY LIMIT!");
             put("Trampoline", "ui.message.update_java");
+            put("NoSuchAlgorithmException", "Has your operating system been installed completely or is a ghost system?");
         }
     };
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameSettingsPanel.java
Patch:
@@ -103,8 +103,10 @@ void initGui() {
         initExternalModsTable();
         initTabs();
 
+        isLoading = true;
         for (Java j : Java.JAVA)
             cboJava.addItem(j.getLocalizedName());
+        isLoading = false;
 
         Settings.profileLoadingEvent.register(onLoadingProfiles);
         Settings.profileChangedEvent.register(onSelectedProfilesChanged);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/asset/MinecraftAssetService.java
Patch:
@@ -56,7 +56,8 @@ public Task downloadAssets(final String mcVersion) {
     }
 
     public Task downloadAssets(final MinecraftVersion mv) {
-        Utils.requireNonNull(mv);
+        if (mv == null)
+            return null;
         return new TaskInfo("Download Assets") {
             Collection<Task> afters = new HashSet<>();
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftDownloadService.java
Patch:
@@ -55,7 +55,7 @@ public List<DownloadLibraryJob> getDownloadLibraries(MinecraftVersion mv) throws
             return downloadLibraries;
         MinecraftVersion v = mv.resolve(service.version());
         for (IMinecraftLibrary l : v.getLibraries())
-            if (l != null && l.allow()) {
+            if (l != null && l.allow() && l.getDownloadInfo() != null) {
                 File ff = l.getFilePath(service.baseDirectory());
                 if (!ff.exists()) {
                     String libURL = l.getDownloadInfo().getUrl(service.getDownloadType());

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -48,7 +48,7 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("MessageBox", "");
             put("AWTError", "");
             put("JFileChooser", "Has your operating system been installed completely or is a ghost system? ");
-            put("JceSecurity", "Has your operating system been installed completely or is a ghost system? ");
+            put("Jce", "Has your operating system been installed completely or is a ghost system? ");
             put("couldn't create component peer", "Fucking computer!");
             put("sun.awt.shell.Win32ShellFolder2", "crash.user_fault");
             put("UnsatisfiedLinkError", "crash.user_fault");

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/TaskWindow.java
Patch:
@@ -322,7 +322,8 @@ public static class TaskWindowFactory {
         boolean flag;
 
         public TaskWindowFactory append(Task t) {
-            ll.add(t);
+            if (t != null)
+                ll.add(t);
             return this;
         }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Profile.java
Patch:
@@ -46,7 +46,7 @@ public Profile() {
     }
 
     public Profile(String name) {
-        this(name, IOUtils.currentDir().getPath());
+        this(name, new File(IOUtils.currentDir(), ".minecraft").getPath());
     }
 
     public Profile(String name, String gameDir) {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameSettingsPanel.java
Patch:
@@ -949,8 +949,7 @@ private void btnNewProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN
     private void btnRemoveProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProfileActionPerformed
         if (MessageBox.Show(C.i18n("ui.message.sure_remove", Settings.getLastProfile().getName()), MessageBox.YES_NO_OPTION) == MessageBox.NO_OPTION)
             return;
-        if (Settings.delProfile(Settings.getLastProfile()))
-            loadProfiles();
+        Settings.delProfile(Settings.getLastProfile());
     }//GEN-LAST:event_btnRemoveProfileActionPerformed
 
     private void cboVersionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboVersionsItemStateChanged

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/system/ZipEngine.java
Patch:
@@ -93,16 +93,18 @@ private void putDirectoryImpl(File source, String basePath, BiFunction<String, B
             if (file.isDirectory()) {
                 pathName = file.getPath().substring(basePath.length() + 1)
                            + "/";
+                pathName = pathName.replace('\\', '/');
                 if (pathNameCallback != null)
                     pathName = pathNameCallback.apply(pathName, true);
                 if (pathName == null)
                     continue;
                 zos.putNextEntry(new ZipEntry(pathName));
                 putDirectoryImpl(file, basePath, pathNameCallback);
             } else {
-                if (".DS_Store".equals(file.getName())) // For mac computers.
+                if (".DS_Store".equals(file.getName())) // For Mac computers.
                     continue;
                 pathName = file.getPath().substring(basePath.length() + 1);
+                pathName = pathName.replace('\\', '/');
                 if (pathNameCallback != null)
                     pathName = pathNameCallback.apply(pathName, false);
                 if (pathName == null)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/asset/AssetsMojangLoader.java
Patch:
@@ -32,6 +32,7 @@
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.launcher.core.download.IDownloadProvider;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;
+import org.jackhuang.hellominecraft.util.Utils;
 import org.jackhuang.hellominecraft.util.VersionNumber;
 import org.jackhuang.hellominecraft.util.tasks.TaskInfo;
 
@@ -47,8 +48,7 @@ public AssetsMojangLoader(String name) {
 
     @Override
     public Task getList(final MinecraftVersion mv, final IMinecraftAssetService mp) {
-        if (mv == null)
-            throw new IllegalArgumentException("AssetsMojangLoader: null argument: MinecraftVersion");
+        Utils.requireNonNull(mv);
         String assetsId = mv.getAssetsIndex().getId();
         File assets = mp.getAssets();
         HMCLog.log("Gathering asset index: " + assetsId);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/asset/MinecraftAssetService.java
Patch:
@@ -30,6 +30,7 @@
 import org.jackhuang.hellominecraft.launcher.core.version.AssetIndexDownloadInfo;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;
 import org.jackhuang.hellominecraft.util.MessageBox;
+import org.jackhuang.hellominecraft.util.Utils;
 import org.jackhuang.hellominecraft.util.func.Function;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.util.tasks.Task;
@@ -55,6 +56,7 @@ public Task downloadAssets(final String mcVersion) {
     }
 
     public Task downloadAssets(final MinecraftVersion mv) {
+        Utils.requireNonNull(mv);
         return new TaskInfo("Download Assets") {
             Collection<Task> afters = new HashSet<>();
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/CurseDownloadProvider.java
Patch:
@@ -24,7 +24,7 @@
 public class CurseDownloadProvider extends MojangDownloadProvider {
 
     @Override
-    public String getParsedLibraryDownloadURL(String str) {
+    public String getParsedDownloadURL(String str) {
         return str == null ? null : str.replace("http://files.minecraftforge.net/maven", "http://ftb.cursecdn.com/FTB2/maven/");
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MojangDownloadProvider.java
Patch:
@@ -73,7 +73,7 @@ public boolean isAllowedToUseSelfURL() {
     }
 
     @Override
-    public String getParsedLibraryDownloadURL(String str) {
+    public String getParsedDownloadURL(String str) {
         if (str == null)
             return null;
         else if (str.contains("scala-swing") || str.contains("scala-xml") || str.contains("scala-parser-combinators"))
@@ -86,5 +86,4 @@ else if (str.contains("typesafe") || str.contains("scala"))
         else
             return str;
     }
-
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/RapidDataDownloadProvider.java
Patch:
@@ -49,7 +49,7 @@ public String getVersionsListDownloadURL() {
     }
 
     @Override
-    public String getParsedLibraryDownloadURL(String str) {
+    public String getParsedDownloadURL(String str) {
         return str == null ? null : str.replace("http://files.minecraftforge.net/maven", "http://mirrors.rapiddata.org/forge/maven");
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/MinecraftInstallerService.java
Patch:
@@ -64,7 +64,7 @@ public void executeTask() {
                 File filepath = IOUtils.tryGetCanonicalFile(IOUtils.currentDirWithSeparator() + "forge-installer.jar");
                 if (v.installer != null)
                     TaskWindow.factory()
-                        .append(new FileDownloadTask(service.getDownloadType().getProvider().getParsedLibraryDownloadURL(v.installer), filepath).setTag("forge"))
+                        .append(new FileDownloadTask(service.getDownloadType().getProvider().getParsedDownloadURL(v.installer), filepath).setTag("forge"))
                         .append(new ForgeInstaller(service, filepath))
                         .create();
             }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/forge/MinecraftForgeVersionList.java
Patch:
@@ -51,7 +51,7 @@ public static MinecraftForgeVersionList getInstance() {
     public void refreshList(String[] needed) throws Exception {
         if (root != null)
             return;
-        String s = NetUtils.get(DownloadType.getSuggestedDownloadType().getProvider().getParsedLibraryDownloadURL(C.URL_FORGE_LIST));
+        String s = NetUtils.get(DownloadType.getSuggestedDownloadType().getProvider().getParsedDownloadURL(C.URL_FORGE_LIST));
 
         root = C.GSON.fromJson(s, MinecraftForgeVersionRoot.class);
 
@@ -70,7 +70,7 @@ public void refreshList(String[] needed) throws Exception {
                     if (!StrUtils.isBlank(v.branch))
                         ver = ver + "-" + v.branch;
                     String filename = root.artifact + "-" + ver + "-" + f[1] + "." + f[0];
-                    String url = DownloadType.getSuggestedDownloadType().getProvider().getParsedLibraryDownloadURL(root.webpath + ver + "/" + filename);
+                    String url = DownloadType.getSuggestedDownloadType().getProvider().getParsedDownloadURL(root.webpath + ver + "/" + filename);
                     switch (f[1]) {
                     case "installer":
                         iv.installer = url;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/ModpackManager.java
Patch:
@@ -168,7 +168,7 @@ else if (newFile.isFile())
                     if (mv.jar == null)
                         throw new FileNotFoundException(C.i18n("modpack.incorrect_format.no_jar"));
 
-                    c.add(service.download().downloadMinecraftJarTo(mv, new File(nowFile, id + ".jar")));
+                    c.add(service.download().downloadMinecraftJar(mv, new File(nowFile, id + ".jar")));
                     mv.jar = null;
                     FileUtils.writeStringToFile(json, C.GSON.toJson(mv));
                     if (!json.renameTo(new File(nowFile, id + ".json")))

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/ModpackManager.java
Patch:
@@ -31,6 +31,7 @@
 import java.util.Map;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.zip.ZipFile;
+import javax.swing.JFrame;
 import javax.swing.JOptionPane;
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
@@ -80,7 +81,7 @@ public final class ModpackManager {
      * @return The installing Task, may take long time, please consider
      *         TaskWindow.
      */
-    public static Task install(final File input, final IMinecraftService service, final String idFUCK) {
+    public static Task install(JFrame parFrame, final File input, final IMinecraftService service, final String idFUCK) {
         return new Task() {
             Collection<Task> c = new ArrayList<>();
 
@@ -110,7 +111,7 @@ public void executeTask() throws Throwable {
                 msgs[0] = C.i18n("modpack.task.install");
                 msgs[1] = new WebPage(description);
                 ((WebPage) msgs[1]).setPreferredSize(new Dimension(800, 350));
-                int result = JOptionPane.showOptionDialog(null, msgs, (String) msgs[0], JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
+                int result = JOptionPane.showOptionDialog(parFrame, msgs, (String) msgs[0], JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                 if (result == JOptionPane.NO_OPTION)
                     throw new NoShownTaskException("Operation was canceled by user.");
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainPagePanel.java
Patch:
@@ -37,6 +37,7 @@
 import org.jackhuang.hellominecraft.launcher.core.mod.ModpackManager;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
 import org.jackhuang.hellominecraft.launcher.ui.modpack.ModpackWizard;
+import org.jackhuang.hellominecraft.launcher.util.HMCLMinecraftService;
 import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;
 import org.jackhuang.hellominecraft.util.Event;
 import org.jackhuang.hellominecraft.lookandfeel.comp.ConstomButton;
@@ -382,7 +383,7 @@ private void btnImportModpackActionPerformed(java.awt.event.ActionEvent evt) {//
         if (fc.getSelectedFile() == null)
             return;
         String suggestedModpackId = JOptionPane.showInputDialog("Please enter your favourite game name", FileUtils.getBaseName(fc.getSelectedFile().getName()));
-        TaskWindow.factory().append(ModpackManager.install(fc.getSelectedFile(), Settings.getLastProfile().service(), suggestedModpackId)).create();
+        TaskWindow.factory().append(ModpackManager.install(MainFrame.INSTANCE, fc.getSelectedFile(), Settings.getLastProfile().service(), suggestedModpackId)).create();
         Settings.getLastProfile().service().version().refreshVersions();
     }//GEN-LAST:event_btnImportModpackActionPerformed
 
@@ -489,7 +490,7 @@ void loadVersions() {
         cboVersions.removeAllItems();
         String selVersion = Settings.getLastProfile().getSelectedVersion();
         if (Settings.getLastProfile().service().version().getVersions().isEmpty()) {
-            if (!showedNoVersion) {
+            if (!showedNoVersion && ((HMCLMinecraftService) Settings.getLastProfile().service()).checkedModpack) {
                 showedNoVersion = true;
                 SwingUtilities.invokeLater(() -> {
                     if (MessageBox.Show(C.i18n("mainwindow.no_version"), MessageBox.YES_NO_OPTION) == MessageBox.YES_OPTION)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/ModpackManager.java
Patch:
@@ -46,6 +46,7 @@
 import org.jackhuang.hellominecraft.util.tasks.Task;
 import org.jackhuang.hellominecraft.util.ui.WebPage;
 import org.jackhuang.hellominecraft.util.MinecraftVersionRequest;
+import org.jackhuang.hellominecraft.util.tasks.NoShownTaskException;
 
 /**
  * A mod pack(*.zip) includes these things:
@@ -111,7 +112,7 @@ public void executeTask() throws Throwable {
                 ((WebPage) msgs[1]).setPreferredSize(new Dimension(800, 350));
                 int result = JOptionPane.showOptionDialog(null, msgs, (String) msgs[0], JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                 if (result == JOptionPane.NO_OPTION)
-                    return;
+                    throw new NoShownTaskException("Operation was canceled by user.");
 
                 File versions = new File(service.baseDirectory(), "versions");
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/Main.java
Patch:
@@ -40,7 +40,7 @@ public class Main {
 
     public static String launcherName = "Hello Minecraft! Server Manager";
     public static final String PUBLISH_URL = "http://www.mcbbs.net/thread-171239-1-1.html";
-    public static final byte VERSION_FIRST = 0, VERSION_SECOND = 8, VERSION_THIRD = 6;
+    public static final byte VERSION_FIRST = 0, VERSION_SECOND = 8, VERSION_THIRD = 7;
     public static final UpdateChecker UPDATE_CHECKER = new UpdateChecker(new VersionNumber(VERSION_FIRST, VERSION_SECOND, VERSION_THIRD), "hmcsm");
 
     public static String makeTitle() {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MojangDownloadProvider.java
Patch:
@@ -76,6 +76,8 @@ public boolean isAllowedToUseSelfURL() {
     public String getParsedLibraryDownloadURL(String str) {
         if (str == null)
             return null;
+        else if (str.contains("scala-swing") || str.contains("scala-xml") || str.contains("scala-parser-combinators"))
+            return str.replace("http://files.minecraftforge.net/maven", "http://ftb.cursecdn.com/FTB2/maven/");
         else if (str.contains("typesafe") || str.contains("scala"))
             if (SupportedLocales.NOW_LOCALE.self == Locale.CHINA)
                 return str.replace("http://files.minecraftforge.net/maven", "http://maven.oschina.net/content/groups/public");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/MinecraftCrashAdvicer.java
Patch:
@@ -32,6 +32,8 @@ public static String getAdvice(String trace) {
     }
 
     public static String getAdvice(String trace, boolean selfCrash) {
+        if (trace == null)
+            return C.i18n("crash.advice.no");
         trace = trace.toLowerCase(SupportedLocales.NOW_LOCALE.self);
         if (trace.contains("pixel format not accelerated"))
             return C.i18n("crash.advice.LWJGLException");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftVersionManager.java
Patch:
@@ -31,9 +31,7 @@
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
 import org.jackhuang.hellominecraft.util.system.FileUtils;
 import org.jackhuang.hellominecraft.launcher.core.MCUtils;
-import org.jackhuang.hellominecraft.util.tasks.DecompressTask;
 import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
-import org.jackhuang.hellominecraft.util.tasks.download.FileDownloadTask;
 import org.jackhuang.hellominecraft.util.system.IOUtils;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/LaunchingUIDaemon.java
Patch:
@@ -124,8 +124,10 @@ void makeLaunchScript(Profile profile) {
     };
 
     private static void checkExit(LauncherVisibility v) {
-        if (v != LauncherVisibility.KEEP && !LogWindow.INSTANCE.isVisible())
+        if (v != LauncherVisibility.KEEP && !LogWindow.INSTANCE.isVisible()) {
+            HMCLog.log("Launcher will exit now.");
             System.exit(0);
+        }
     }
 
     private static final Event<List<String>> LAUNCH_SCRIPT_FINISHER = (sender, str) -> {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -48,7 +48,7 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("MessageBox", "");
             put("AWTError", "");
             put("JFileChooser", "Has your operating system been installed completely or is a ghost system? ");
-            put("JceSecurityManager", "Has your operating system been installed completely or is a ghost system? ");
+            put("JceSecurity", "Has your operating system been installed completely or is a ghost system? ");
             put("couldn't create component peer", "Fucking computer!");
             put("sun.awt.shell.Win32ShellFolder2", "crash.user_fault");
             put("UnsatisfiedLinkError", "crash.user_fault");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/asset/IAssetsHandler.java
Patch:
@@ -74,7 +74,7 @@ public String getName() {
      * @param mp Asset Service
      * @param x  finished event
      */
-    public abstract OverridableSwingWorker<String[]> getList(MinecraftVersion mv, IMinecraftAssetService mp);
+    public abstract Task getList(MinecraftVersion mv, IMinecraftAssetService mp);
 
     /**
      * Will be invoked when the user invoked "Download all assets".

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftAssetService.java
Patch:
@@ -47,7 +47,7 @@ public IMinecraftAssetService(IMinecraftService service) {
 
     public abstract boolean downloadMinecraftAssetsIndexAsync(AssetIndexDownloadInfo assetsId);
 
-    public abstract boolean downloadMinecraftAssetsIndex(AssetIndexDownloadInfo assetsId);
+    public abstract Task downloadMinecraftAssetsIndex(AssetIndexDownloadInfo assetsId);
 
     public abstract File getAssetObject(String assetVersion, String name) throws IOException;
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Profile.java
Patch:
@@ -54,7 +54,7 @@ public Profile(String name, Profile v) {
         this();
         if (v == null)
             return;
-        name = v.name;
+        this.name = name;
         gameDir = v.gameDir;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameSettingsPanel.java
Patch:
@@ -64,6 +64,7 @@
 import org.jackhuang.hellominecraft.util.system.IOUtils;
 import org.jackhuang.hellominecraft.util.ui.SwingUtils;
 import org.jackhuang.hellominecraft.util.system.Java;
+import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
 import org.jackhuang.hellominecraft.util.ui.LogWindow;
 
 /**
@@ -975,7 +976,7 @@ private void btnModifyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:e
 
     private void btnDownloadAllAssetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadAllAssetsActionPerformed
         if (mcVersion != null)
-            Settings.getLastProfile().service().asset().downloadAssets(mcVersion).run();
+            TaskWindow.execute(Settings.getLastProfile().service().asset().downloadAssets(mcVersion));
     }//GEN-LAST:event_btnDownloadAllAssetsActionPerformed
 
     private void txtGameDirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGameDirFocusLost

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftAssetService.java
Patch:
@@ -45,6 +45,8 @@ public IMinecraftAssetService(IMinecraftService service) {
      */
     public abstract boolean refreshAssetsIndex(String a);
 
+    public abstract boolean downloadMinecraftAssetsIndexAsync(AssetIndexDownloadInfo assetsId);
+
     public abstract boolean downloadMinecraftAssetsIndex(AssetIndexDownloadInfo assetsId);
 
     public abstract File getAssetObject(String assetVersion, String name) throws IOException;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -49,6 +49,7 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("AWTError", "");
             put("JFileChooser", "Has your operating system been installed completely or is a ghost system? ");
             put("JceSecurityManager", "Has your operating system been installed completely or is a ghost system? ");
+            put("couldn't create component peer", "Fucking computer!");
             put("sun.awt.shell.Win32ShellFolder2", "crash.user_fault");
             put("UnsatisfiedLinkError", "crash.user_fault");
             put("java.awt.HeadlessException", "crash.headless");

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/TaskList.java
Patch:
@@ -176,7 +176,7 @@ public void abort() {
         while (!in.isEmpty())
             synchronized (in) {
                 Invoker it = in.iterator().next();
-                if (!it.task.abort())
+                if (!it.task.abort() && futures.get(it) != null)
                     futures.get(it).cancel(true);
                 in.remove(it);
             }

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/download/FileDownloadTask.java
Patch:
@@ -118,16 +118,15 @@ public void executeTask() throws Throwable {
             this.url = IOUtils.parseURL(p.getResult());
 
         for (int repeat = 0; repeat < 6; repeat++) {
-            if (repeat > 0) {
-                HMCLog.warn("Failed to download, repeat: " + repeat);
+            if (repeat > 0)
                 if (failedCallbackReturnsNewURL != null) {
                     URL tmp = IOUtils.parseURL(failedCallbackReturnsNewURL.apply(repeat));
                     if (tmp != null) {
                         url = tmp;
                         HMCLog.warn("Switch to: " + url);
                     }
                 }
-            }
+            HMCLog.log("Downloading: " + url + ", to: " + filePath);
             if (!shouldContinue)
                 break;
             try {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/AbstractMinecraftLoader.java
Patch:
@@ -83,10 +83,9 @@ public void makeHeadCommand(List<String> res) {
                 if (jv != null && jv.getParsedVersion() >= JdkVersion.JAVA_17)
                     res.add("-XX:+UseG1GC");
                 else
-                    res.add("-XX:+UseConcMarkSweepGC");
+                    res.add("-Xincgc");
                 res.add("-XX:-UseAdaptiveSizePolicy");
                 res.add("-XX:-OmitStackTraceInFastThrow");
-                res.add("-Xincgc");
 
                 res.add("-Xmn128m");
             }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/LaunchingUIDaemon.java
Patch:
@@ -97,6 +97,7 @@ void makeLaunchScript(Profile profile) {
                 HMCLog.err("The game exited abnormally, exit code: " + t);
                 MessageBox.Show(C.i18n("launch.exited_abnormally") + " exit code: " + t);
                 WebFrame f = new WebFrame(jpm.getJavaProcess().getStdOutLines().toArray(new String[0]));
+                f.setModal(true);
                 f.setTitle("Game output");
                 f.setVisible(true);
                 checkExit((LauncherVisibility) obj.getTag());
@@ -105,6 +106,7 @@ void makeLaunchScript(Profile profile) {
                 HMCLog.err("Cannot create jvm, exit code: " + t);
                 MessageBox.Show(C.i18n("launch.cannot_create_jvm") + " exit code: " + t);
                 WebFrame f = new WebFrame(jpm.getJavaProcess().getStdOutLines().toArray(new String[0]));
+                f.setModal(true);
                 f.setTitle("Game output");
                 f.setVisible(true);
                 checkExit((LauncherVisibility) obj.getTag());

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/AbstractMinecraftLoader.java
Patch:
@@ -80,7 +80,7 @@ public void makeHeadCommand(List<String> res) {
             if (jv == null || !jv.isEarlyAccess()) {
                 if (OS.os() == OS.WINDOWS)
                     res.add("-XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump");
-                if (jv != null && jv.getParsedVersion() > JdkVersion.JAVA_17)
+                if (jv != null && jv.getParsedVersion() >= JdkVersion.JAVA_17)
                     res.add("-XX:+UseG1GC");
                 else
                     res.add("-XX:+UseConcMarkSweepGC");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/VersionSetting.java
Patch:
@@ -117,7 +117,7 @@ public int getJavaIndexInAllJavas() {
             java = "Custom";
         int idx = Java.JAVA.indexOf(new Java(java, null));
         if (idx == -1) {
-            java = "Default";
+            java = Java.suggestedJava().getName();
             idx = 0;
         }
         return idx;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/system/IOUtils.java
Patch:
@@ -126,7 +126,7 @@ public static String getRealPath() {
 
     public static boolean isAbsolutePath(String path) {
         if (path == null)
-            return false;
+            return true;
         return path.startsWith("/") || path.indexOf(":") > 0;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftVersion.java
Patch:
@@ -73,8 +73,9 @@ public MinecraftVersion(String minecraftArguments, String mainClass, String time
             this.libraries = new ArrayList<>();
         else {
             this.libraries = new ArrayList<>(libraries.size());
-            for (IMinecraftLibrary library : libraries)
-                this.libraries.add((MinecraftLibrary) library.clone());
+            for (MinecraftLibrary library : libraries)
+                if (library != null)
+                    this.libraries.add((MinecraftLibrary) library.clone());
         }
         if (downloads == null)
             this.downloads = null;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -58,6 +58,7 @@ public class CrashReporter implements Thread.UncaughtExceptionHandler {
             put("java.lang.IncompatibleClassChangeError", "crash.NoClassDefFound");
             put("java.lang.ClassFormatError", "crash.NoClassDefFound");
             put("java.lang.OutOfMemoryError", "FUCKING MEMORY LIMIT!");
+            put("Trampoline", "ui.message.update_java");
         }
     };
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/system/IOUtils.java
Patch:
@@ -125,6 +125,8 @@ public static String getRealPath() {
     }
 
     public static boolean isAbsolutePath(String path) {
+        if (path == null)
+            return false;
         return path.startsWith("/") || path.indexOf(":") > 0;
     }
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/TaskList.java
Patch:
@@ -95,7 +95,8 @@ private void processTasks(Collection<? extends Task> c) {
             t2.setParallelExecuting(true);
             Invoker thread = new Invoker(t2, runningThread);
             runningThread.add(thread);
-            EXECUTOR_SERVICE.execute(thread);
+            if (!EXECUTOR_SERVICE.isTerminated())
+                EXECUTOR_SERVICE.execute(thread);
         }
         while (!runningThread.isEmpty())
             try {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/download/FileDownloadTask.java
Patch:
@@ -154,6 +154,8 @@ public void executeTask() throws Throwable {
                 File tempFile = new File(filePath.getAbsolutePath() + ".hmd");
                 if (!tempFile.exists())
                     tempFile.createNewFile();
+                else if (!tempFile.renameTo(tempFile)) // check file lock
+                    throw new RuntimeException("The temp file is locked, maybe there is an application using the file?");
 
                 // Open file and seek to the end of it.
                 file = new RandomAccessFile(tempFile, "rw");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/AbstractMinecraftLoader.java
Patch:
@@ -81,7 +81,6 @@ public void makeHeadCommand(List<String> res) {
                 if (OS.os() == OS.WINDOWS)
                     res.add("-XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump");
                 res.add("-XX:+UseConcMarkSweepGC");
-                res.add("-XX:+CMSIncrementalMode");
                 res.add("-XX:-UseAdaptiveSizePolicy");
                 res.add("-XX:-OmitStackTraceInFastThrow");
                 res.add("-Xincgc");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameDownloadPanel.java
Patch:
@@ -130,8 +130,8 @@ void downloadMinecraft() {
     boolean refreshedDownloads = false;
 
     @Override
-    public void onSelected() {
-        super.onSelected();
+    public void onSelect() {
+        super.onSelect();
         if (!refreshedDownloads) {
             refreshedDownloads = true;
             refreshDownloads();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/InstallerPanel.java
Patch:
@@ -160,7 +160,7 @@ public void loadVersions() {
     boolean refreshed = false;
 
     @Override
-    public void onSelected() {
+    public void onSelect() {
         if (!refreshed) {
             refreshVersions();
             refreshed = true;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftDownloadService.java
Patch:
@@ -172,7 +172,7 @@ public DownloadTypeSwitcher(String suffix) {
 
         @Override
         public String apply(Integer t) {
-            return DownloadType.values()[t / 3].getProvider().getVersionsDownloadURL() + suffix;
+            return DownloadType.values()[t / 2].getProvider().getVersionsDownloadURL() + suffix;
         }
 
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -123,7 +123,7 @@ public static void main(String[] args) throws IOException {
                 return;
 
             System.setProperty("sun.java2d.noddraw", "true");
-            System.setProperty("sun.java2d.apiaware", "false");
+            System.setProperty("sun.java2d.dpiaware", "false");
             Thread.setDefaultUncaughtExceptionHandler(new CrashReporter(true));
 
             try {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackInitializationPanel.java
Patch:
@@ -206,7 +206,7 @@ private void chkIncludeLauncherItemStateChanged(java.awt.event.ItemEvent evt) {/
         wizardData.put(KEY_INCLUDING_LAUNCHER, chkIncludeLauncher.isSelected());
     }//GEN-LAST:event_chkIncludeLauncherItemStateChanged
 
-    static final Pattern PATTERN = Pattern.compile("[-a-zA-Z0-9_\\.\u4E00-\u9FA5]+$");
+    static final Pattern PATTERN = Pattern.compile("[-a-zA-Z0-9_\\.\\(\\)\\[\\]\\{\\}\\<\\>\"\'\u4E00-\u9FA5]+$");
 
     void checkProblem() {
         controller.setProblem(null);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackWizard.java
Patch:
@@ -37,7 +37,6 @@
 import org.jackhuang.hellominecraft.util.Pair;
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.util.Utils;
-import org.jackhuang.hellominecraft.util.func.CallbackIO;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.util.system.ZipEngine;
 import org.jackhuang.hellominecraft.util.ui.WebPage;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/ui/wizard/api/displayer/WizardDisplayerImpl.java
Patch:
@@ -460,6 +460,7 @@ public void run() {
             }
         };
         Thread runner = new Thread(run, "Wizard Background Result Thread " + r);
+        runner.setDaemon(true);
         runner.start();
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackInitializationPanel.java
Patch:
@@ -206,7 +206,7 @@ private void chkIncludeLauncherItemStateChanged(java.awt.event.ItemEvent evt) {/
         wizardData.put(KEY_INCLUDING_LAUNCHER, chkIncludeLauncher.isSelected());
     }//GEN-LAST:event_chkIncludeLauncherItemStateChanged
 
-    static final Pattern PATTERN = Pattern.compile("[a-zA-Z0-9_u4e00-u9fa5]+$");
+    static final Pattern PATTERN = Pattern.compile("[-a-zA-Z0-9_\\.\u4E00-\u9FA5]+$");
 
     void checkProblem() {
         controller.setProblem(null);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackInitializationPanel.java
Patch:
@@ -206,7 +206,7 @@ private void chkIncludeLauncherItemStateChanged(java.awt.event.ItemEvent evt) {/
         wizardData.put(KEY_INCLUDING_LAUNCHER, chkIncludeLauncher.isSelected());
     }//GEN-LAST:event_chkIncludeLauncherItemStateChanged
 
-    static final Pattern PATTERN = Pattern.compile("[a-zA-Z0-9_u4e00-u9fa5]+$");
+    static final Pattern PATTERN = Pattern.compile("[-a-zA-Z0-9_\\.\u4E00-\u9FA5]+$");
 
     void checkProblem() {
         controller.setProblem(null);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MojangDownloadProvider.java
Patch:
@@ -76,7 +76,7 @@ public boolean isAllowedToUseSelfURL() {
     public String getParsedLibraryDownloadURL(String str) {
         if (str == null)
             return null;
-        else if (str.contains("forge"))
+        else if (str.contains("typesafe") || str.contains("scala"))
             if (SupportedLocales.NOW_LOCALE.self == Locale.CHINA)
                 return str.replace("http://files.minecraftforge.net/maven", "http://maven.oschina.net/content/groups/public");
             else

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftDownloadService.java
Patch:
@@ -65,7 +65,7 @@ public List<DownloadLibraryJob> getDownloadLibraries(MinecraftVersion mv) throws
                         String libURL = service.getDownloadType().getProvider().getLibraryDownloadURL() + "/";
                         libURL = service.getDownloadType().getProvider().getParsedLibraryDownloadURL(l.getDownloadURL(libURL, service.getDownloadType()));
                         if (libURL != null)
-                            downloadLibraries.add(new DownloadLibraryJob(l.name, libURL, ff));
+                            downloadLibraries.add(new DownloadLibraryJob(l, libURL, ff));
                     }
                 }
             }
@@ -100,7 +100,7 @@ public void onDone(Task k, Collection<Task> taskCollection) {
                     return;
                 }
                 String jarURL = vurl + id + ".jar", hash = null;
-                if (mv != null && mv.downloads != null && service.getDownloadType().getProvider().isAllowedToUseSelfURL()) {
+                if (mv.downloads != null && service.getDownloadType().getProvider().isAllowedToUseSelfURL()) {
                     GameDownloadInfo gdi = mv.downloads.get("client");
                     if (gdi != null) {
                         if (gdi.url != null)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/DefaultGameLauncher.java
Patch:
@@ -43,9 +43,9 @@ private void register() {
             ParallelTask parallelTask = new ParallelTask();
             HashSet<String> names = new HashSet<>();
             for (DownloadLibraryJob s : t) {
-                if (names.contains(s.name))
+                if (names.contains(s.lib.name))
                     continue;
-                names.add(s.name);
+                names.add(s.lib.name);
                 parallelTask.addDependsTask(new LibraryDownloadTask(s));
             }
             dw.append(parallelTask);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/GameLauncher.java
Patch:
@@ -128,7 +128,7 @@ public void launch(List str) throws IOException {
         ProcessBuilder builder = new ProcessBuilder(str);
         if (options.getLaunchVersion() == null || service.baseDirectory() == null)
             throw new Error("Fucking bug!");
-        builder.directory(service.version().getRunDirectory(options.getLaunchVersion()))
+        builder.redirectErrorStream(true).directory(service.version().getRunDirectory(options.getLaunchVersion()))
             .environment().put("APPDATA", service.baseDirectory().getAbsolutePath());
         JavaProcess jp = new JavaProcess(str, builder.start(), PROCESS_MANAGER);
         HMCLog.log("The game process have been started");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftLibrary.java
Patch:
@@ -40,7 +40,7 @@ public MinecraftLibrary(String name) {
         super(name);
     }
 
-    public MinecraftLibrary(ArrayList<Rules> rules, String url, Natives natives, String name, Extract extract) {
+    public MinecraftLibrary(ArrayList<Rules> rules, String url, Natives natives, String name, Extract extract, LibraryDownloadInfo downloads) {
         super(name);
         this.rules = rules == null ? null : (ArrayList<Rules>) rules.clone();
         this.url = url;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/VersionSetting.java
Patch:
@@ -60,7 +60,8 @@ public class VersionSetting {
 
     public VersionSetting() {
         debug = fullscreen = canceledWrapper = false;
-        launcherVisibility = gameDirType = 0;
+        launcherVisibility = 1;
+        gameDirType = 0;
         javaDir = java = minecraftArgs = serverIp = precalledCommand = "";
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainFrame.java
Patch:
@@ -48,7 +48,7 @@
 import org.jackhuang.hellominecraft.launcher.Main;
 import org.jackhuang.hellominecraft.launcher.setting.Settings;
 import org.jackhuang.hellominecraft.launcher.core.auth.IAuthenticator;
-import org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils;
+import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;
 import org.jackhuang.hellominecraft.lookandfeel.Theme;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainPagePanel.java
Patch:
@@ -37,7 +37,7 @@
 import org.jackhuang.hellominecraft.launcher.core.mod.ModpackManager;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
 import org.jackhuang.hellominecraft.launcher.ui.modpack.ModpackWizard;
-import org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils;
+import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;
 import org.jackhuang.hellominecraft.util.Event;
 import org.jackhuang.hellominecraft.lookandfeel.comp.ConstomButton;
 import org.jackhuang.hellominecraft.util.func.Consumer;

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/comp/ConstomButton.java
Patch:
@@ -17,7 +17,7 @@
 package org.jackhuang.hellominecraft.lookandfeel.comp;
 
 import java.awt.Color;
-import org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils;
+import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;
 
 /**
  *

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/painter/ButtonPainter.java
Patch:
@@ -30,7 +30,7 @@
 import javax.swing.plaf.synth.SynthConstants;
 import javax.swing.plaf.synth.SynthContext;
 import javax.swing.plaf.synth.SynthPainter;
-import org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils;
+import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;
 import org.jackhuang.hellominecraft.lookandfeel.comp.ConstomButton;
 
 /**

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/painter/ProgressPainter.java
Patch:
@@ -20,7 +20,7 @@
  */
 package org.jackhuang.hellominecraft.lookandfeel.painter;
 
-import org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils;
+import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;
 
 import javax.swing.plaf.synth.SynthContext;
 import javax.swing.plaf.synth.SynthPainter;

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/painter/TextFieldPainter.java
Patch:
@@ -25,7 +25,7 @@
 import java.awt.Color;
 import java.awt.Graphics;
 import javax.swing.plaf.synth.SynthConstants;
-import org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils;
+import org.jackhuang.hellominecraft.util.ui.GraphicsUtils;
 
 /**
  * TextFieldPainter

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/ui/ComboBoxUI.java
Patch:
@@ -1,6 +1,6 @@
 package org.jackhuang.hellominecraft.lookandfeel.ui;
 
-import static org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils.loadImage;
+import static org.jackhuang.hellominecraft.util.ui.GraphicsUtils.loadImage;
 
 import javax.swing.plaf.ComponentUI;
 import javax.swing.plaf.basic.BasicComboBoxUI;

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/ui/ScrollBarUI.java
Patch:
@@ -4,7 +4,7 @@
  */
 package org.jackhuang.hellominecraft.lookandfeel.ui;
 
-import static org.jackhuang.hellominecraft.lookandfeel.GraphicsUtils.loadImage;
+import static org.jackhuang.hellominecraft.util.ui.GraphicsUtils.loadImage;
 
 import javax.swing.JButton;
 import javax.swing.JComponent;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftProvider.java
Patch:
@@ -24,6 +24,7 @@
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;
 import org.jackhuang.hellominecraft.util.EventHandler;
 import org.jackhuang.hellominecraft.util.func.Consumer;
+import org.jackhuang.hellominecraft.util.func.Predicate;
 
 /**
  * Provide everything of the Minecraft of a Profile.
@@ -117,7 +118,7 @@ public File getRunDirectory(String id, String subFolder) {
      *
      * @return the version
      */
-    public abstract MinecraftVersion getOneVersion();
+    public abstract MinecraftVersion getOneVersion(Predicate<MinecraftVersion> p);
 
     /**
      * All Minecraft version in this profile.

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Profile.java
Patch:
@@ -86,9 +86,9 @@ public String getSettingsSelectedMinecraftVersion() {
 
     public String getSelectedVersion() {
         String v = selectedMinecraftVersion;
-        if (StrUtils.isBlank(v) || service().version().getVersionById(v) == null) {
+        if (StrUtils.isBlank(v) || service().version().getVersionById(v) == null || service().version().getVersionById(v).hidden) {
             if (service().version().getVersionCount() > 0)
-                v = service().version().getOneVersion().id;
+                v = service().version().getOneVersion(t -> !t.hidden).id;
             if (StrUtils.isNotBlank(v))
                 setSelectedMinecraftVersion(v);
         }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameSettingsPanel.java
Patch:
@@ -1005,12 +1005,13 @@ private void btnChoosingJavaDirActionPerformed(java.awt.event.ActionEvent evt) {
     }//GEN-LAST:event_btnChoosingJavaDirActionPerformed
 
     private void cboJavaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboJavaItemStateChanged
-        if (isLoading || evt.getStateChange() != ItemEvent.SELECTED || cboJava.getSelectedIndex() < 0 || StrUtils.isBlank((String) cboJava.getSelectedItem()))
+        if (evt.getStateChange() != ItemEvent.SELECTED || cboJava.getSelectedIndex() < 0 || StrUtils.isBlank((String) cboJava.getSelectedItem()))
             return;
         int idx = cboJava.getSelectedIndex();
         if (idx != -1) {
             Java j = Java.JAVA.get(idx);
-            Settings.getLastProfile().getSelectedVersionSetting().setJava(j);
+            if (!isLoading)
+                Settings.getLastProfile().getSelectedVersionSetting().setJava(j);
             txtJavaDir.setEnabled(idx == 1);
             txtJavaDir.setText(j.getHome() == null ? Settings.getLastProfile().getSelectedVersionSetting().getSettingsJavaDir() : j.getJava());
         }
@@ -1187,7 +1188,6 @@ void prepareVersionSetting(VersionSetting profile) {
         cboRunDirectory.setSelectedIndex(profile.getGameDirType().ordinal());
         cboJava.setSelectedIndex(profile.getJavaIndexInAllJavas());
         isLoading = false;
-        cboJavaItemStateChanged(new ItemEvent(cboJava, 0, cboJava.getSelectedItem(), ItemEvent.SELECTED));
     }
 
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -168,8 +168,6 @@ protected PasswordAuthentication getPasswordAuthentication() {
                         }
                     });
             }
-            if (true)
-                throw new IOException("???");
 
             try {
                 PluginManager.plugin().showUI();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/ModpackManager.java
Patch:
@@ -99,7 +99,7 @@ else if (newFile.isFile())
                 String description = C.i18n("modpack.install.will_install");
 
                 try (ZipFile zip = new ZipFile(input)) {
-                    HashMap map = C.GSON.fromJson(new InputStreamReader(zip.getInputStream(zip.getEntry("modpack.json"))), HashMap.class);
+                    HashMap map = C.GSON.fromJson(new InputStreamReader(zip.getInputStream(zip.getEntry("modpack.json")), "UTF-8"), HashMap.class);
                     if (map != null) {
                         if (id == null)
                             if (map.containsKey("name") && map.get("name") instanceof String)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -119,7 +119,6 @@ public static String shortTitle() {
     public static void main(String[] args) throws IOException {
         {
             //PluginManager.getServerPlugin();
-
             if (IUpgrader.NOW_UPGRADER.parseArguments(getVersionNumber(), args))
                 return;
 
@@ -169,6 +168,8 @@ protected PasswordAuthentication getPasswordAuthentication() {
                         }
                     });
             }
+            if (true)
+                throw new IOException("???");
 
             try {
                 PluginManager.plugin().showUI();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/YggdrasilAuthenticator.java
Patch:
@@ -78,6 +78,8 @@ public UserProfileProvider login(LoginInfo info) throws AuthenticationException
                     username = JOptionPane.showInputDialog(C.i18n("login.no_charactor"));
             else
                 username = selectedProfile.name;
+            if (username == null)
+                throw new AuthenticationException("No player");
             result.setUserName(username);
             result.setUserId(selectedProfile == null ? OfflineAuthenticator.getUUIDFromUserName(username) : UUIDTypeAdapter.fromUUID(selectedProfile.id));
         }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/MinecraftDownloadService.java
Patch:
@@ -22,7 +22,6 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Collection;
-import java.util.HashSet;
 import java.util.List;
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
@@ -93,13 +92,15 @@ public void onDone(Task k, Collection<Task> taskCollection) {
                 MinecraftVersion mv;
                 try {
                     mv = C.GSON.fromJson(FileUtils.readFileToStringQuietly(mvt), MinecraftVersion.class);
+                    if (mv == null)
+                        throw new JsonSyntaxException("incorrect version");
                 } catch (JsonSyntaxException ex) {
                     HMCLog.err("Failed to parse minecraft version json.", ex);
                     onFailed(k);
                     return;
                 }
                 String jarURL = vurl + id + ".jar", hash = null;
-                if (service.getDownloadType().getProvider().isAllowedToUseSelfURL() && mv.downloads != null) {
+                if (mv != null && mv.downloads != null && service.getDownloadType().getProvider().isAllowedToUseSelfURL()) {
                     GameDownloadInfo gdi = mv.downloads.get("client");
                     if (gdi != null) {
                         if (gdi.url != null)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/MinecraftModService.java
Patch:
@@ -77,6 +77,8 @@ public boolean addMod(String id, File f) {
         try {
             if (!ModInfo.isFileMod(f))
                 return false;
+            if (!modCache.containsKey(id))
+                recacheMods(id);
             File modsFolder = service.version().getRunDirectory(id, "mods");
             if (!modsFolder.exists() && !modsFolder.mkdirs())
                 HMCLog.warn("Failed to make directories: " + modsFolder);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainPagePanel.java
Patch:
@@ -504,8 +504,10 @@ void loadVersions() {
     final Consumer<String> versionChanged = this::versionChanged;
 
     void versionChanged(String selectedVersion) {
+        isLoading = true;
         ((DefaultComboBoxModel) cboVersions.getModel()).setSelectedItem(selectedVersion);
         cboVersions.setToolTipText(selectedVersion);
+        isLoading = false;
     }
 
     final Consumer<Profile> onSelectedProfilesChanged = t -> {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/download/IDownloadProvider.java
Patch:
@@ -32,7 +32,7 @@ public InstallerVersionList getInstallerByType(InstallerType type) {
             return getForgeInstaller();
         case LiteLoader:
             return getLiteLoaderInstaller();
-        case Optifine:
+        case OptiFine:
             return getOptiFineInstaller();
         default:
             return null;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/InstallerType.java
Patch:
@@ -22,7 +22,7 @@
  * @author huangyuhui
  */
 public enum InstallerType {
-    Forge("forge"), Optifine("optifine"), LiteLoader("liteloader");
+    Forge("forge"), OptiFine("optifine"), LiteLoader("liteloader");
 
     public final String id;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/MinecraftInstallerService.java
Patch:
@@ -47,8 +47,8 @@ public Task download(String installId, InstallerVersion v, InstallerType type) {
         switch (type) {
         case Forge:
             return downloadForge(installId, v);
-        case Optifine:
-            return downloadOptifine(installId, v);
+        case OptiFine:
+            return downloadOptiFine(installId, v);
         case LiteLoader:
             return downloadLiteLoader(installId, v);
         default:
@@ -72,7 +72,7 @@ public void executeTask() {
     }
 
     @Override
-    public Task downloadOptifine(String installId, InstallerVersion v) {
+    public Task downloadOptiFine(String installId, InstallerVersion v) {
         return new TaskInfo("OptiFine Downloader") {
             @Override
             public void executeTask() {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/optifine/OptiFineInstaller.java
Patch:
@@ -86,7 +86,7 @@ public void executeTask() throws Exception {
 
     @Override
     public String getInfo() {
-        return "Optifine Installer";
+        return "OptiFine Installer";
     }
 
     ArrayList<PreviousResult<File>> pre = new ArrayList();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftInstallerService.java
Patch:
@@ -35,7 +35,7 @@ public IMinecraftInstallerService(IMinecraftService service) {
 
     public abstract Task downloadForge(String installId, InstallerVersionList.InstallerVersion v);
 
-    public abstract Task downloadOptifine(String installId, InstallerVersionList.InstallerVersion v);
+    public abstract Task downloadOptiFine(String installId, InstallerVersionList.InstallerVersion v);
 
     public abstract Task downloadLiteLoader(String installId, InstallerVersionList.InstallerVersion v);
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/AnimatedPanel.java
Patch:
@@ -51,8 +51,10 @@ public AnimatedPanel() {
 
     Timer timer;
 
+    boolean animationEnabled = true;
+
     public void animate() {
-        if (Settings.getInstance().isEnableAnimation()) {
+        if (Settings.getInstance().isEnableAnimation() && animationEnabled) {
             offsetX = 0;
             timer.start();
         }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameDownloadPanel.java
Patch:
@@ -108,7 +108,7 @@ public void refreshDownloads() {
         Settings.getLastProfile().service().download().getRemoteVersions()
             .reg((ver) -> model.addRow(new Object[] { ver.id, ver.time,
                                                       StrUtils.equalsOne(ver.type, "old_beta", "old_alpha", "release", "snapshot") ? C.i18n("versions." + ver.type) : ver.type }))
-            .regDone(lstDownloads::updateUI).execute();
+            .regDone(lstDownloads::requestFocus).execute();
         /*(e) -> {
                            MessageBox.Show("Failed to refresh download: " + e.getLocalizedMessage());
                            HMCLog.err("Failed to refresh download.", e);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainPagePanel.java
Patch:
@@ -87,6 +87,8 @@ public MainPagePanel() {
         MainFrame.INSTANCE.daemon.customizedSuccessEvent = this::prepareAuths;
 
         prepareAuths();
+
+        animationEnabled = false;
     }
 
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/IAuthenticator.java
Patch:
@@ -88,7 +88,7 @@ public void setRememberMe(boolean is) {
     public abstract void logOut();
 
     public Map onSaveSettings() {
-        HashMap m = new HashMap();
+        HashMap<String, String> m = new HashMap<>();
         m.put("IAuthenticator_UserName", username);
         return m;
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/OfflineAuthenticator.java
Patch:
@@ -48,7 +48,7 @@ public void onLoadSettings(Map m) {
     @Override
     public Map onSaveSettings() {
         Map m = super.onSaveSettings();
-        m.put("uuidMap", m);
+        m.put("uuidMap", uuidMap);
         return m;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Config.java
Patch:
@@ -93,6 +93,8 @@ public void setEnableShadow(boolean enableShadow) {
     }
 
     public String getLast() {
+        if (last == null)
+            last = Settings.DEFAULT_PROFILE;
         return last;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/InstallerPanel.java
Patch:
@@ -139,7 +139,7 @@ synchronized void downloadSelectedRow() {
             MessageBox.Show(C.i18n("install.not_refreshed"));
             return;
         }
-        gsp.getProfile().service().install().download(gsp.getProfile().getSelectedVersion(), getVersion(idx), id).after(new TaskRunnable(this::refreshVersions)).run();
+        Settings.getLastProfile().service().install().download(Settings.getLastProfile().getSelectedVersion(), getVersion(idx), id).after(new TaskRunnable(this::refreshVersions)).run();
     }
 
     public void loadVersions() {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/AbstractMinecraftLoader.java
Patch:
@@ -50,6 +50,8 @@ public abstract class AbstractMinecraftLoader implements IMinecraftLoader {
     protected final MinecraftVersion version;
 
     public AbstractMinecraftLoader(LaunchOptions options, IMinecraftService service, String versionId, UserProfileProvider lr) throws GameException {
+        if (service.version().getVersionById(versionId) == null)
+            throw new GameException("No version: " + versionId);
         this.lr = lr;
 
         this.options = options;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainFrame.java
Patch:
@@ -275,6 +275,7 @@ public void selectTab(String tabName) {
                 if (tabContent[i] == null) {
                     try {
                         tabContent[i] = tabClasses.get(i).newInstance();
+                        tabContent[i].onCreated();
                     } catch (Exception mustnothappen) {
                         throw new Error(mustnothappen);
                     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/MainPagePanel.java
Patch:
@@ -418,8 +418,8 @@ public Profile getProfile() {
     }
 
     @Override
-    public void onSelected() {
-        super.onSelected();
+    public void onCreated() {
+        super.onCreated();
         Settings.onProfileLoading();
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/Selectable.java
Patch:
@@ -23,6 +23,8 @@
  */
 public interface Selectable {
 
+    void onCreated();
+
     void onSelected();
 
     boolean isSelected();

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/UpdateChecker.java
Patch:
@@ -44,7 +44,6 @@ public OverridableSwingWorker<VersionNumber> process(final boolean showMessage)
         return new OverridableSwingWorker() {
             @Override
             protected void work() throws Exception {
-
                 if (value == null) {
                     versionString = NetUtils.get("http://huangyuhui.duapp.com/info.php?type=" + type);
                     value = VersionNumber.check(versionString);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/tasks/download/FileDownloadTask.java
Patch:
@@ -177,6 +177,8 @@ public void executeTask() throws Throwable {
                         lastTime = now;
                     }
                 }
+                if (downloaded != contentLength)
+                    throw new IllegalStateException("Unexptected file size: " + downloaded + ", expected: " + contentLength);
                 closeFiles();
                 if (aborted)
                     tempFile.delete();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftProvider.java
Patch:
@@ -149,7 +149,7 @@ public File getRunDirectory(String id, String subFolder) {
      */
     public abstract void refreshVersions();
 
-    public final EventHandler<Void> onRefreshingVersions = new EventHandler<>(this),
+    public final EventHandler<IMinecraftService> onRefreshingVersions = new EventHandler<>(this),
         onRefreshedVersions = new EventHandler<>(this);
     public final EventHandler<String> onLoadedVersion = new EventHandler<>(this);
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftVersionManager.java
Patch:
@@ -68,7 +68,7 @@ public int getVersionCount() {
 
     @Override
     public void refreshVersions() {
-        onRefreshingVersions.execute(null);
+        onRefreshingVersions.execute(service);
 
         try {
             MCUtils.tryWriteProfile(service.baseDirectory());
@@ -146,7 +146,7 @@ public void refreshVersions() {
                     HMCLog.warn("Ignoring: " + dir + ", the json of this Minecraft is malformed.", e);
                 }
             }
-        onRefreshedVersions.execute(null);
+        onRefreshedVersions.execute(service);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Config.java
Patch:
@@ -98,6 +98,7 @@ public String getLast() {
 
     public void setLast(String last) {
         this.last = last;
+        Settings.onProfileChanged();
         Settings.save();
     }
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/lang/SupportedLocales.java
Patch:
@@ -53,7 +53,7 @@ public String showString() {
 
     public String translate(String key, Object... format) {
         try {
-            return bundle.localize(key);
+            return String.format(bundle.localize(key), format);
         } catch (Exception ex) {
             ex.printStackTrace();
             return key;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/Rules.java
Patch:
@@ -36,7 +36,7 @@ public Rules(String action, OSRestriction os) {
     }
 
     public String action() {
-        return os != null && os.isCurrentOS() ? action : null;
+        return os == null || os != null && os.isCurrentOS() ? action : null;
     }
 
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/api/PluginManager.java
Patch:
@@ -18,7 +18,7 @@
 package org.jackhuang.hellominecraft.launcher.api;
 
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.launcher.setting.DefaultPlugin;
+import org.jackhuang.hellominecraft.launcher.util.DefaultPlugin;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/MinecraftModService.java
Patch:
@@ -28,7 +28,6 @@
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftModService;
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
-import org.jackhuang.hellominecraft.launcher.core.ModInfo;
 import org.jackhuang.hellominecraft.util.code.DigestUtils;
 import org.jackhuang.hellominecraft.util.system.FileUtils;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/mod/ModInfo.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.core;
+package org.jackhuang.hellominecraft.launcher.core.mod;
 
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.reflect.TypeToken;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/service/IMinecraftModService.java
Patch:
@@ -19,7 +19,7 @@
 
 import java.io.File;
 import java.util.List;
-import org.jackhuang.hellominecraft.launcher.core.ModInfo;
+import org.jackhuang.hellominecraft.launcher.core.mod.ModInfo;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Profile.java
Patch:
@@ -17,6 +17,8 @@
  */
 package org.jackhuang.hellominecraft.launcher.setting;
 
+import org.jackhuang.hellominecraft.launcher.util.HMCLGameLauncher;
+import org.jackhuang.hellominecraft.launcher.util.DefaultMinecraftService;
 import java.io.File;
 import org.jackhuang.hellominecraft.launcher.api.PluginManager;
 import org.jackhuang.hellominecraft.launcher.core.MCUtils;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/VersionSetting.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.File;
 import java.io.IOException;
 import org.jackhuang.hellominecraft.launcher.Main;
-import org.jackhuang.hellominecraft.launcher.core.LauncherVisibility;
+import org.jackhuang.hellominecraft.launcher.util.LauncherVisibility;
 import org.jackhuang.hellominecraft.launcher.core.launch.LaunchOptions;
 import org.jackhuang.hellominecraft.launcher.core.version.GameDirType;
 import org.jackhuang.hellominecraft.util.C;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameSettingsPanel.java
Patch:
@@ -43,15 +43,15 @@
 import javax.swing.table.DefaultTableModel;
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.launcher.core.LauncherVisibility;
+import org.jackhuang.hellominecraft.launcher.util.LauncherVisibility;
 import org.jackhuang.hellominecraft.launcher.setting.Profile;
 import org.jackhuang.hellominecraft.launcher.setting.Settings;
 import org.jackhuang.hellominecraft.launcher.util.FileNameFilter;
-import org.jackhuang.hellominecraft.launcher.core.ModInfo;
+import org.jackhuang.hellominecraft.launcher.core.mod.ModInfo;
 import org.jackhuang.hellominecraft.launcher.core.install.InstallerType;
 import org.jackhuang.hellominecraft.launcher.core.version.GameDirType;
 import org.jackhuang.hellominecraft.launcher.core.version.MinecraftVersion;
-import org.jackhuang.hellominecraft.launcher.setting.DefaultMinecraftService;
+import org.jackhuang.hellominecraft.launcher.util.DefaultMinecraftService;
 import org.jackhuang.hellominecraft.launcher.setting.VersionSetting;
 import org.jackhuang.hellominecraft.util.Event;
 import org.jackhuang.hellominecraft.util.MessageBox;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/LaunchingUIDaemon.java
Patch:
@@ -20,7 +20,7 @@
 import java.io.IOException;
 import java.util.List;
 import javax.swing.JOptionPane;
-import org.jackhuang.hellominecraft.launcher.core.LauncherVisibility;
+import org.jackhuang.hellominecraft.launcher.util.LauncherVisibility;
 import org.jackhuang.hellominecraft.launcher.core.launch.GameLauncher;
 import org.jackhuang.hellominecraft.launcher.setting.Profile;
 import org.jackhuang.hellominecraft.launcher.setting.Settings;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/DefaultMinecraftService.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.setting;
+package org.jackhuang.hellominecraft.launcher.util;
 
 import java.io.File;
 import java.util.HashMap;
@@ -36,6 +36,8 @@
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
 import org.jackhuang.hellominecraft.launcher.core.mod.MinecraftModService;
 import org.jackhuang.hellominecraft.launcher.core.mod.ModpackManager;
+import org.jackhuang.hellominecraft.launcher.setting.Profile;
+import org.jackhuang.hellominecraft.launcher.setting.VersionSetting;
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.system.FileUtils;
 import org.jackhuang.hellominecraft.util.tasks.TaskWindow;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/DefaultPlugin.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.setting;
+package org.jackhuang.hellominecraft.launcher.util;
 
 import org.jackhuang.hellominecraft.launcher.core.service.IMinecraftService;
 import org.jackhuang.hellominecraft.launcher.api.IPlugin;
@@ -25,6 +25,8 @@
 import org.jackhuang.hellominecraft.launcher.core.auth.UserProfileProvider;
 import org.jackhuang.hellominecraft.launcher.core.auth.YggdrasilAuthenticator;
 import org.jackhuang.hellominecraft.launcher.core.launch.LaunchOptions;
+import org.jackhuang.hellominecraft.launcher.setting.Profile;
+import org.jackhuang.hellominecraft.launcher.setting.Settings;
 import org.jackhuang.hellominecraft.launcher.ui.MainFrame;
 import org.jackhuang.hellominecraft.util.EventHandler;
 import org.jackhuang.hellominecraft.util.func.Consumer;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/HMCLGameLauncher.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.setting;
+package org.jackhuang.hellominecraft.launcher.util;
 
 import java.io.File;
 import org.jackhuang.hellominecraft.launcher.api.PluginManager;
@@ -26,6 +26,8 @@
 import org.jackhuang.hellominecraft.launcher.core.launch.DefaultGameLauncher;
 import org.jackhuang.hellominecraft.launcher.core.launch.GameLauncher;
 import org.jackhuang.hellominecraft.launcher.core.launch.LaunchOptions;
+import org.jackhuang.hellominecraft.launcher.setting.Profile;
+import org.jackhuang.hellominecraft.launcher.setting.Settings;
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.func.Consumer;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/HMCLGameProvider.java
Patch:
@@ -15,7 +15,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see {http://www.gnu.org/licenses/}.
  */
-package org.jackhuang.hellominecraft.launcher.setting;
+package org.jackhuang.hellominecraft.launcher.util;
 
 import java.io.File;
 import org.jackhuang.hellominecraft.launcher.core.version.GameDirType;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/DefaultGameLauncher.java
Patch:
@@ -28,7 +28,6 @@
 import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
 import org.jackhuang.hellominecraft.util.system.Compressor;
 import org.jackhuang.hellominecraft.util.MessageBox;
-import org.jackhuang.hellominecraft.util.StrUtils;
 
 public class DefaultGameLauncher extends GameLauncher {
 
@@ -56,8 +55,7 @@ private void register() {
                 return false;
             for (int i = 0; i < value.decompressFiles.length; i++)
                 try {
-                    String[] rules = value.extractRules[i];
-                    Compressor.unzip(value.decompressFiles[i], value.getDecompressTo(), t -> !StrUtils.startsWithOne(rules, t), false);
+                    Compressor.unzip(value.decompressFiles[i], value.getDecompressTo(), value.extractRules[i]::allow, false);
                 } catch (IOException ex) {
                     HMCLog.err("Unable to decompress library file: " + value.decompressFiles[i] + " to " + value.getDecompressTo(), ex);
                 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/DecompressLibraryJob.java
Patch:
@@ -26,10 +26,10 @@
 public class DecompressLibraryJob {
 
     public File[] decompressFiles;
-    public String[][] extractRules;
+    public Extract[] extractRules;
     private File decompressTo;
 
-    public DecompressLibraryJob(File[] decompressFiles, String[][] extractRules, File decompressTo) {
+    public DecompressLibraryJob(File[] decompressFiles, Extract[] extractRules, File decompressTo) {
         this.decompressFiles = decompressFiles.clone();
         this.extractRules = extractRules.clone();
         this.decompressTo = decompressTo;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/IMinecraftLibrary.java
Patch:
@@ -34,7 +34,7 @@ public IMinecraftLibrary(String name) {
 
     public abstract boolean isRequiredToUnzip();
 
-    public abstract String[] getDecompressExtractRules();
+    public abstract Extract getDecompressExtractRules();
 
     public abstract void init();
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftVersionManager.java
Patch:
@@ -220,15 +220,15 @@ public DecompressLibraryJob getDecompressLibraries(MinecraftVersion v) throws Ga
         if (v.libraries == null)
             throw new GameException("Wrong format: minecraft.json");
         ArrayList<File> unzippings = new ArrayList<>();
-        ArrayList<String[]> extractRules = new ArrayList<>();
+        ArrayList<Extract> extractRules = new ArrayList<>();
         for (IMinecraftLibrary l : v.libraries) {
             l.init();
             if (l.isRequiredToUnzip() && v.isAllowedToUnpackNatives()) {
                 unzippings.add(IOUtils.tryGetCanonicalFile(l.getFilePath(service.baseDirectory())));
                 extractRules.add(l.getDecompressExtractRules());
             }
         }
-        return new DecompressLibraryJob(unzippings.toArray(new File[unzippings.size()]), extractRules.toArray(new String[extractRules.size()][]), getDecompressNativesToLocation(v));
+        return new DecompressLibraryJob(unzippings.toArray(new File[unzippings.size()]), extractRules.toArray(new Extract[extractRules.size()]), getDecompressNativesToLocation(v));
     }
 
     @Override

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/lang/Localization.java
Patch:
@@ -48,7 +48,7 @@ private Localization(Locale locale) {
 
         this.lang = new HashMap<>();
         try {
-            String[] strings = IOUtils.readFully(is).toString().split("\n");
+            String[] strings = IOUtils.readFully(is).toString("UTF-8").split("\n");
             for (String s : strings)
                 if (!s.isEmpty() && s.charAt(0) != 35) {
                     int i = s.indexOf("=");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Launcher.java
Patch:
@@ -27,7 +27,6 @@
 import java.net.URLClassLoader;
 import java.util.ArrayList;
 import java.util.logging.Level;
-import java.util.logging.LogManager;
 import java.util.logging.Logger;
 import javax.swing.SwingUtilities;
 import org.jackhuang.hellominecraft.util.C;
@@ -47,7 +46,7 @@
  */
 public final class Launcher {
 
-    static final Logger LOGGER = LogManager.getLogManager().getLogger(Launcher.class.getName());
+    static final Logger LOGGER = Logger.getLogger(Launcher.class.getName());
 
     static String classPath = "", proxyHost = "", proxyPort = "", proxyUsername = "", proxyPassword = "";
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/MinecraftLoader.java
Patch:
@@ -71,7 +71,7 @@ protected void makeSelf(List<String> res) throws GameException {
 
         if (!checkAssetsExist())
             if (MessageBox.Show(C.i18n("assets.no_assets"), MessageBox.YES_NO_OPTION) == MessageBox.YES_OPTION) {
-                IAssetsHandler.ASSETS_HANDLER.getList(version, service.asset()).execute();
+                IAssetsHandler.ASSETS_HANDLER.getList(version, service.asset()).run();
                 TaskWindow.getInstance().addTask(IAssetsHandler.ASSETS_HANDLER.getDownloadTask(service.getDownloadType().getProvider())).start();
             }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/CrashReporter.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.logging.Level;
-import java.util.logging.LogManager;
 import java.util.logging.Logger;
 import javax.swing.SwingUtilities;
 import org.jackhuang.hellominecraft.util.C;
@@ -42,7 +41,7 @@
  */
 public class CrashReporter implements Thread.UncaughtExceptionHandler {
 
-    private static final Logger LOGGER = LogManager.getLogManager().getLogger(CrashReporter.class.getName());
+    private static final Logger LOGGER = Logger.getLogger(CrashReporter.class.getName());
 
     boolean enableLogger = false;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/MCUtils.java
Patch:
@@ -80,11 +80,11 @@ public static File getInitGameDir() {
         return gameDir;
     }
 
-    public static String profile = "{\"selectedProfile\": \"(Default)\",\"profiles\": {\"(Default)\": {\"name\": \"(Default)\"}},\"clientToken\": \"88888888-8888-8888-8888-888888888888\"}";
+    public static final String PROFILE = "{\"selectedProfile\": \"(Default)\",\"profiles\": {\"(Default)\": {\"name\": \"(Default)\"}},\"clientToken\": \"88888888-8888-8888-8888-888888888888\"}";
 
     public static void tryWriteProfile(File gameDir) throws IOException {
         File file = new File(gameDir, "launcher_profiles.json");
         if (!file.exists())
-            FileUtils.writeStringToFile(file, profile);
+            FileUtils.writeStringToFile(file, PROFILE);
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/ModInfo.java
Patch:
@@ -109,7 +109,7 @@ public static boolean isFileMod(File file) {
     private static ModInfo getForgeModInfo(File f, ZipFile jar, ZipEntry entry) throws IOException {
         ModInfo i = new ModInfo();
         i.location = f;
-        List<ModInfo> m = C.GSON.fromJson(new InputStreamReader(jar.getInputStream(entry)), TYPE);
+        List<ModInfo> m = C.GSON.fromJson(new InputStreamReader(jar.getInputStream(entry), "UTF-8"), TYPE);
         if (m != null && m.size() > 0) {
             i = m.get(0);
             i.location = f;
@@ -118,7 +118,7 @@ private static ModInfo getForgeModInfo(File f, ZipFile jar, ZipEntry entry) thro
     }
 
     private static ModInfo getLiteLoaderModInfo(File f, ZipFile jar, ZipEntry entry) throws IOException {
-        ModInfo m = C.GSON.fromJson(new InputStreamReader(jar.getInputStream(entry)), ModInfo.class);
+        ModInfo m = C.GSON.fromJson(new InputStreamReader(jar.getInputStream(entry), "UTF-8"), ModInfo.class);
         if (m == null)
             m = new ModInfo();
         m.location = f;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/OfflineAuthenticator.java
Patch:
@@ -98,7 +98,7 @@ public UserProfileProvider loginBySettings() {
     }
 
     @Override
-    public void logout() {
+    public void logOut() {
     }
 
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/SkinmeAuthenticator.java
Patch:
@@ -20,6 +20,7 @@
 import org.jackhuang.hellominecraft.util.C;
 import org.jackhuang.hellominecraft.util.code.DigestUtils;
 import org.jackhuang.hellominecraft.util.NetUtils;
+import org.jackhuang.hellominecraft.util.lang.SupportedLocales;
 import org.jackhuang.hellominecraft.util.ui.Selector;
 
 /**
@@ -47,7 +48,7 @@ public UserProfileProvider login(LoginInfo info) throws AuthenticationException
         if (info.username == null || !info.username.contains("@"))
             throw new AuthenticationException(C.i18n("login.not_email"));
         try {
-            String usr = info.username.toLowerCase();
+            String usr = info.username.toLowerCase(SupportedLocales.NOW_LOCALE.self);
             String pwd = info.password;
 
             String str = DigestUtils.sha1Hex(usr);
@@ -120,7 +121,7 @@ public UserProfileProvider loginBySettings() {
     }
 
     @Override
-    public void logout() {
+    public void logOut() {
 
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/YggdrasilAuthenticator.java
Patch:
@@ -57,7 +57,7 @@ public UserProfileProvider login(LoginInfo info) throws AuthenticationException
 
             if (!ua.isLoggedIn())
                 ua.setPassword(pwd);
-            ua.setUsername(usr);
+            ua.setUserName(usr);
             ua.logIn();
             if (!ua.isLoggedIn())
                 throw new AuthenticationException(C.i18n("login.wrong_password"));
@@ -136,7 +136,7 @@ public UserProfileProvider loginBySettings() throws AuthenticationException {
     }
 
     @Override
-    public void logout() {
+    public void logOut() {
         ua.logOut();
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/yggdrasil/GameProfile.java
Patch:
@@ -73,6 +73,8 @@ public static class GameProfileSerializer implements JsonSerializer<GameProfile>
 
         @Override
         public GameProfile deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
+            if (!(json instanceof JsonObject))
+                throw new JsonParseException("The json element is not a JsonObject.");
             JsonObject object = (JsonObject) json;
             UUID id = object.has("id") ? (UUID) context.deserialize(object.get("id"), UUID.class) : null;
             String name = object.has("name") ? object.getAsJsonPrimitive("name").getAsString() : null;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/yggdrasil/PropertyMap.java
Patch:
@@ -35,6 +35,8 @@
 
 public class PropertyMap extends HashMap<String, Property> {
 
+    private static final long serialVersionUID = 362498820763181265L;
+
     public List<Map<String, String>> list() {
         List<Map<String, String>> properties = new ArrayList<>();
         for (Property profileProperty : values()) {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/MinecraftInstallerService.java
Patch:
@@ -65,7 +65,7 @@ public void executeTask() {
                 if (v.installer != null)
                     TaskWindow.getInstance()
                         .addTask(new FileDownloadTask(service.getDownloadType().getProvider().getParsedLibraryDownloadURL(v.installer), filepath).setTag("forge"))
-                        .addTask(new ForgeInstaller(service, filepath, v))
+                        .addTask(new ForgeInstaller(service, filepath))
                         .start();
             }
         };

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/PackMinecraftInstaller.java
Patch:
@@ -20,6 +20,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
+import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.util.system.Compressor;
 import org.jackhuang.hellominecraft.util.system.FileUtils;
 import org.jackhuang.hellominecraft.util.system.IOUtils;
@@ -40,7 +41,8 @@ public PackMinecraftInstaller(ArrayList<String> src, File dest) {
 
     public void install() throws IOException {
         File file = new File(IOUtils.currentDir(), "HMCL-MERGE-TEMP");
-        file.mkdirs();
+        if (!file.exists() && !file.mkdirs())
+            HMCLog.warn("Failed to make directories: " + file);
         for (String src1 : src)
             Compressor.unzip(new File(src1), file);
         Compressor.zip(file.getAbsolutePath(), dest.getAbsolutePath());

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/forge/MinecraftForgeVersionList.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class MinecraftForgeVersionList extends InstallerVersionList {
 
-    private static MinecraftForgeVersionList instance;
+    private static volatile MinecraftForgeVersionList instance;
 
     public static MinecraftForgeVersionList getInstance() {
         if (instance == null)
@@ -81,6 +81,8 @@ public void refreshList(String[] needed) throws Exception {
                     case "changelog":
                         iv.changelog = url;
                         break;
+                    default:
+                        break;
                     }
                 }
                 if (StrUtils.isBlank(iv.installer) || StrUtils.isBlank(iv.universal))

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/liteloader/LiteLoaderInstaller.java
Patch:
@@ -75,7 +75,8 @@ public void executeTask() throws Exception {
         mv.mainClass = "net.minecraft.launchwrapper.Launch";
         mv.minecraftArguments += " --tweakClass " + version.tweakClass;
         File folder = new File(service.baseDirectory(), "versions/" + mv.id);
-        folder.mkdirs();
+        if (!folder.exists() && folder.mkdirs())
+            HMCLog.warn("Failed to create new liteloader version " + folder);
         File json = new File(folder, mv.id + ".json");
         HMCLog.log("Creating new version profile..." + mv.id + ".json");
         FileUtils.write(json, C.GSON.toJson(mv));

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/liteloader/LiteLoaderVersionList.java
Patch:
@@ -110,6 +110,7 @@ public static class LiteLoaderInstallerVersion extends InstallerVersion {
         public LiteLoaderInstallerVersion(String selfVersion, String mcVersion) {
             super(selfVersion, mcVersion);
         }
+
     }
 
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/DefaultGameLauncher.java
Patch:
@@ -57,9 +57,9 @@ private void register() {
             for (int i = 0; i < value.decompressFiles.length; i++)
                 try {
                     String[] rules = value.extractRules[i];
-                    Compressor.unzip(value.decompressFiles[i], value.decompressTo, t -> !StrUtils.startsWithOne(rules, t), false);
+                    Compressor.unzip(value.decompressFiles[i], value.getDecompressTo(), t -> !StrUtils.startsWithOne(rules, t), false);
                 } catch (IOException ex) {
-                    HMCLog.err("Unable to decompress library file: " + value.decompressFiles[i] + " to " + value.decompressTo, ex);
+                    HMCLog.err("Unable to decompress library file: " + value.decompressFiles[i] + " to " + value.getDecompressTo(), ex);
                 }
             return true;
         });

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/GameLauncher.java
Patch:
@@ -84,7 +84,7 @@ public IMinecraftLoader makeLaunchCommand() throws AuthenticationException, Game
             result = login.loginBySettings();
         if (result == null)
             throw new AuthenticationException("Result can not be null.");
-        PluginManager.NOW_PLUGIN.onProcessingLoginResult(result);
+        PluginManager.plugin().onProcessingLoginResult(result);
 
         loader = service.launch(options, result);
 
@@ -150,8 +150,8 @@ public File makeLauncher(String launcherName, List str) throws IOException {
         service.version().onLaunch();
         boolean isWin = OS.os() == OS.WINDOWS;
         File f = new File(launcherName + (isWin ? ".bat" : ".sh"));
-        if (!f.exists())
-            f.createNewFile();
+        if (!f.exists() && !f.createNewFile())
+            HMCLog.warn("Failed to create " + f);
         BufferedWriter writer;
         try {
             writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(f), System.getProperty("sun.jnu.encoding", "UTF-8")));

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/MinecraftOldLibrary.java
Patch:
@@ -51,7 +51,7 @@ public File getFilePath(File gameDir) {
 
     @Override
     public Object clone() {
-        return new MinecraftOldLibrary(name);
+        return super.clone();
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Config.java
Patch:
@@ -177,6 +177,7 @@ public void setAuthenticatorConfig(String authId, Map map) {
     @SerializedName("configurations")
     private TreeMap<String, Profile> configurations;
     @SerializedName("auth")
+    @SuppressWarnings("FieldMayBeFinal")
     private Map<String, Map> auth;
 
     public Config() {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/DefaultMinecraftService.java
Patch:
@@ -44,7 +44,6 @@
  */
 public class DefaultMinecraftService extends IMinecraftService {
 
-    File base;
     Profile p;
     final Map<String, VersionSetting> versionSettings = new HashMap<>();
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/DefaultPlugin.java
Patch:
@@ -35,9 +35,9 @@
  */
 public class DefaultPlugin implements IPlugin {
 
-    protected static YggdrasilAuthenticator YGGDRASIL_LOGIN;
-    protected static OfflineAuthenticator OFFLINE_LOGIN;
-    protected static SkinmeAuthenticator SKINME_LOGIN;
+    YggdrasilAuthenticator YGGDRASIL_LOGIN = null;
+    OfflineAuthenticator OFFLINE_LOGIN = null;
+    SkinmeAuthenticator SKINME_LOGIN = null;
 
     @Override
     public IMinecraftService provideMinecraftService(Profile profile) {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/HMCLGameLauncher.java
Patch:
@@ -62,14 +62,14 @@ public void genLaunchCode(final Consumer<GameLauncher> listener, final Consumer<
         }
 
         final IAuthenticator l = IAuthenticator.LOGINS.get(Settings.getInstance().getLoginType());
-        final LoginInfo li = new LoginInfo(l.getUsername(), l.isLoggedIn() || !l.hasPassword() ? null : passwordIfNeeded);
+        final LoginInfo li = new LoginInfo(l.getUserName(), l.isLoggedIn() || !l.hasPassword() ? null : passwordIfNeeded);
         new Thread() {
             @Override
             public void run() {
                 Thread.currentThread().setName("Game Launcher");
                 try {
                     LaunchOptions options = profile.getSelectedVersionSetting().createLaunchOptions(profile.getCanonicalGameDirFile());
-                    PluginManager.NOW_PLUGIN.onProcessingLaunchOptions(options);
+                    PluginManager.plugin().onProcessingLaunchOptions(options);
                     DefaultGameLauncher gl = new DefaultGameLauncher(options, profile.service(), li, l);
                     gl.setTag(profile.getSelectedVersionSetting().getLauncherVisibility());
                     gl.successEvent.register(() -> isLaunching = false);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/setting/Profile.java
Patch:
@@ -57,7 +57,7 @@ public Profile(Profile v) {
 
     public IMinecraftService service() {
         if (service == null)
-            service = PluginManager.NOW_PLUGIN.provideMinecraftService(this);
+            service = PluginManager.plugin().provideMinecraftService(this);
         return service;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameDownloadPanel.java
Patch:
@@ -27,7 +27,7 @@
  *
  * @author huangyuhui
  */
-public class GameDownloadPanel extends AnimatedPanel implements Selectable {
+public class GameDownloadPanel extends AnimatedPanel {
 
     GameSettingsPanel gsp;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackFileSelectionPanel.java
Patch:
@@ -35,9 +35,9 @@
  */
 public class ModpackFileSelectionPanel extends javax.swing.JPanel {
 
-    private final WizardController controller;
+    private transient final WizardController controller;
     private final Map wizardData;
-    private final BiFunction<String, Boolean, Integer> blackList;
+    private transient final BiFunction<String, Boolean, Integer> blackList;
     private final Set<String> bannedFiles = new HashSet<>();
 
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/modpack/ModpackInitializationPanel.java
Patch:
@@ -33,7 +33,7 @@ public class ModpackInitializationPanel extends javax.swing.JPanel {
     public static final String KEY_GAME_VERSION = "gameVersion";
     public static final String KEY_MODPACK_LOCATION = "modpackLocation";
 
-    private final WizardController controller;
+    private final transient WizardController controller;
     private final Map wizardData;
 
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/MinecraftCrashAdvicer.java
Patch:
@@ -18,6 +18,7 @@
 package org.jackhuang.hellominecraft.launcher.util;
 
 import org.jackhuang.hellominecraft.util.C;
+import org.jackhuang.hellominecraft.util.lang.SupportedLocales;
 
 /**
  * Give the advice to solve the Minecraft crashing.
@@ -31,7 +32,7 @@ public static String getAdvice(String trace) {
     }
 
     public static String getAdvice(String trace, boolean selfCrash) {
-        trace = trace.toLowerCase();
+        trace = trace.toLowerCase(SupportedLocales.NOW_LOCALE.self);
         if (trace.contains("pixel format not accelerated"))
             return C.i18n("crash.advice.LWJGLException");
         else if (trace.contains("unsupportedclassversionrrror"))

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/version/MinecraftVersionRequest.java
Patch:
@@ -19,6 +19,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.io.Serializable;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 import org.jackhuang.hellominecraft.util.C;
@@ -29,7 +30,7 @@
 /**
  * @author huangyuhui
  */
-public class MinecraftVersionRequest {
+public class MinecraftVersionRequest implements Serializable {
 
     public static final int UNKOWN = 0, INVALID = 1, INVALID_JAR = 2,
         MODIFIED = 3, OK = 4, NOT_FOUND = 5, UNREADABLE = 6, NOT_FILE = 7;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/asset/AssetsIndex.java
Patch:
@@ -29,8 +29,8 @@
 public class AssetsIndex {
 
     public static final String DEFAULT_ASSET_NAME = "legacy";
-    private Map<String, AssetsObject> objects;
-    private boolean virtual;
+    public Map<String, AssetsObject> objects;
+    public boolean virtual;
 
     public AssetsIndex() {
         this.objects = new LinkedHashMap();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/asset/IAssetsHandler.java
Patch:
@@ -97,7 +97,7 @@ public AssetsTask(String url) {
 
         @Override
         public void executeTask() {
-            if (assetsDownloadURLs == null)
+            if (assetsDownloadURLs == null || assetsLocalNames == null)
                 throw new IllegalStateException(C.i18n("assets.not_refreshed"));
             int max = assetsDownloadURLs.size();
             al = new ArrayList<>();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/liteloader/LiteLoaderVersionList.java
Patch:
@@ -37,7 +37,7 @@
  */
 public class LiteLoaderVersionList extends InstallerVersionList {
 
-    private static LiteLoaderVersionList instance;
+    private static volatile LiteLoaderVersionList instance = null;
 
     public static LiteLoaderVersionList getInstance() {
         if (instance == null)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/launch/GameLauncher.java
Patch:
@@ -118,7 +118,7 @@ public void launch(List str) throws IOException {
         if (StrUtils.isNotBlank(options.getPrecalledCommand())) {
             Process p = Runtime.getRuntime().exec(options.getPrecalledCommand());
             try {
-                if (p != null && p.isAlive())
+                if (p.isAlive())
                     p.waitFor();
             } catch (InterruptedException ex) {
                 HMCLog.warn("Failed to invoke precalled command", ex);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/version/IMinecraftLibrary.java
Patch:
@@ -59,5 +59,7 @@ public int hashCode() {
     }
 
     @Override
-    public abstract Object clone();
+    public Object clone() throws CloneNotSupportedException {
+        return super.clone();
+    }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/GameDownloadPanel.java
Patch:
@@ -19,7 +19,6 @@
 
 import javax.swing.table.DefaultTableModel;
 import org.jackhuang.hellominecraft.util.C;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.util.MessageBox;
 import org.jackhuang.hellominecraft.util.StrUtils;
 import org.jackhuang.hellominecraft.util.ui.SwingUtils;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/upgrade/AppDataUpgrader.java
Patch:
@@ -84,7 +84,7 @@ public boolean parseArguments(VersionNumber nowVersion, String[] args) {
                     }
                 }
             } catch (Throwable t) {
-                t.printStackTrace();
+                HMCLog.err("Failed to execute newer version application", t);
             }
         return false;
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/upgrade/IUpgrader.java
Patch:
@@ -18,8 +18,6 @@
 package org.jackhuang.hellominecraft.launcher.util.upgrade;
 
 import org.jackhuang.hellominecraft.util.Event;
-import org.jackhuang.hellominecraft.util.Event;
-import org.jackhuang.hellominecraft.util.VersionNumber;
 import org.jackhuang.hellominecraft.util.VersionNumber;
 
 /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/util/upgrade/NewFileUpgrader.java
Patch:
@@ -19,8 +19,6 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.util.logging.Level;
-import java.util.logging.Logger;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.util.tasks.TaskWindow;
 import org.jackhuang.hellominecraft.util.tasks.download.FileDownloadTask;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/C.java
Patch:
@@ -18,10 +18,8 @@
 package org.jackhuang.hellominecraft.util;
 
 import org.jackhuang.hellominecraft.util.lang.SupportedLocales;
-import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import java.util.ResourceBundle;
 
 /**
  *

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/Pair.java
Patch:
@@ -72,9 +72,7 @@ public boolean equals(Object obj) {
         final Pair<?, ?> other = (Pair<?, ?>) obj;
         if (!Objects.equals(this.key, other.key))
             return false;
-        if (!Objects.equals(this.value, other.value))
-            return false;
-        return true;
+        return Objects.equals(this.value, other.value);
     }
 
 }

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/logging/logger/Logger.java
Patch:
@@ -51,7 +51,7 @@ public synchronized void setLevel(Level level) {
             this.config = new PrivateConfig(this.config, level);
     }
 
-    public Level getLevel() {
+    public synchronized Level getLevel() {
         return this.config.level;
     }
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/system/OS.java
Patch:
@@ -26,7 +26,6 @@
 import java.lang.management.ManagementFactory;
 import java.util.StringTokenizer;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
-import org.jackhuang.hellominecraft.util.StrUtils;
 
 /**
  * @author huangyuhui
@@ -85,7 +84,7 @@ public static long[] memoryInfoForLinux() throws IOException {
         BufferedReader br = new BufferedReader(new InputStreamReader(
             new FileInputStream(file)));
         long[] result = new long[4];
-        String str = null;
+        String str;
         StringTokenizer token;
         while ((str = br.readLine()) != null) {
             token = new StringTokenizer(str);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/ui/LogWindowOutputStream.java
Patch:
@@ -21,7 +21,6 @@
 import java.util.Timer;
 import javax.swing.SwingUtilities;
 import org.jackhuang.hellominecraft.util.logging.Level;
-import org.jackhuang.hellominecraft.util.ui.LogWindow;
 
 /**
  *

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/ui/checktree/CheckBoxTreeLabel.java
Patch:
@@ -21,9 +21,7 @@
 import java.awt.Dimension;
 import java.awt.Graphics;
 
-import javax.swing.Icon;
 import javax.swing.JLabel;
-import javax.swing.UIManager;
 import javax.swing.plaf.ColorUIResource;
 
 public class CheckBoxTreeLabel extends JLabel {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/ui/wizard/spi/WizardPanelNavResult.java
Patch:
@@ -54,9 +54,7 @@ public boolean isDeferredComputation() {
         }
 
         public boolean equals(Object o) {
-            if (o instanceof WPNRimmediate && ((WPNRimmediate) o).value == value)
-                return true;
-            return false;
+            return o instanceof WPNRimmediate && ((WPNRimmediate) o).value == value;
         }
 
         public int hashCode() {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/install/cauldron/ForgeVersion.java
Patch:
@@ -17,6 +17,8 @@
  */
 package org.jackhuang.hellominecraft.svrmgr.install.cauldron;
 
+import java.util.Arrays;
+
 /**
  *
  * @author huangyuhui
@@ -29,6 +31,6 @@ public class ForgeVersion {
 
     @Override
     public String toString() {
-        return "ForgeVersion{" + "vername=" + vername + ", ver=" + ver + ", mcver=" + mcver + ", releasetime=" + releasetime + ", changelog=" + changelog + ", installer=" + installer + ", javadoc=" + javadoc + ", src=" + src + ", universal=" + universal + ", userdev=" + userdev + ", typeint=" + typeint + '}';
+        return "ForgeVersion{" + "vername=" + vername + ", ver=" + ver + ", mcver=" + mcver + ", releasetime=" + releasetime + ", changelog=" + changelog + ", installer=" + Arrays.toString(installer) + ", javadoc=" + Arrays.toString(javadoc) + ", src=" + Arrays.toString(src) + ", universal=" + universal + ", userdev=" + userdev + ", typeint=" + typeint + '}';
     }
 }

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/ServerChecker.java
Patch:
@@ -38,9 +38,7 @@ public static boolean isServerJar(File f) {
         }
         if (file.getEntry("org/bukkit/craftbukkit/Main.class") != null)
             return true;
-        if (file.getEntry("net/minecraft/server/MinecraftServer.class") != null)
-            return true;
-        return false;
+        return file.getEntry("net/minecraft/server/MinecraftServer.class") != null;
     }
 
 }

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/HelloMinecraftLookAndFeel.java
Patch:
@@ -18,11 +18,9 @@
 
 import java.awt.Color;
 import java.io.ByteArrayInputStream;
-import java.io.IOException;
 import java.text.ParseException;
 import java.util.Map;
 import javax.swing.UIDefaults;
-import javax.swing.UIManager;
 import javax.swing.plaf.synth.SynthLookAndFeel;
 import org.jackhuang.hellominecraft.util.logging.HMCLog;
 import org.jackhuang.hellominecraft.util.NetUtils;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/auth/YggdrasilAuthenticator.java
Patch:
@@ -71,6 +71,8 @@ public UserProfileProvider login(LoginInfo info) throws AuthenticationException
                         names[i] = profiles[i].name;
                     Selector s = new Selector(null, names, C.i18n("login.choose_charactor"));
                     s.setVisible(true);
+                    if (s.sel == Selector.FAILED_TO_SELECT)
+                        throw new AuthenticationException("No selection");
                     selectedProfile = profiles[s.sel];
                     username = names[s.sel];
                 } else

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/core/install/liteloader/LiteLoaderVersionList.java
Patch:
@@ -63,6 +63,8 @@ public void refreshList(String[] needed) throws Exception {
         for (Map.Entry<String, LiteLoaderMCVersions> arr : root.versions.entrySet()) {
             ArrayList<InstallerVersion> al = new ArrayList<>();
             LiteLoaderMCVersions mcv = arr.getValue();
+            if (mcv == null || mcv.artefacts == null || mcv.artefacts.get("com.mumfrey:liteloader") == null)
+                continue;
             for (Map.Entry<String, LiteLoaderVersion> entry : mcv.artefacts.get("com.mumfrey:liteloader").entrySet()) {
                 if ("latest".equals(entry.getKey()))
                     continue;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/ui/InstallerPanel.java
Patch:
@@ -95,9 +95,9 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         .addGroup(layout.createSequentialGroup()
             .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
             .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
-            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-                .addComponent(btnInstall, javax.swing.GroupLayout.Alignment.TRAILING)
-                .addComponent(btnRefresh, javax.swing.GroupLayout.Alignment.TRAILING)))
+            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
+                .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
+                .addComponent(btnInstall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
     );
     layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/util/version/MinecraftVersionRequest.java
Patch:
@@ -139,7 +139,9 @@ private static MinecraftVersionRequest getVersionOfNewMinecraft(ZipFile file, Zi
                 return r;
             }
             int k = i;
-            while (tmp[k] >= 48 && tmp[k] <= 57 || tmp[k] == 46)
+            if (tmp[i + 1] >= (int) 'a' && tmp[i + 1] <= (int) 'z')
+                i++;
+            while (tmp[k] >= 48 && tmp[k] <= 57 || tmp[k] == (int) '.' || tmp[k] == (int) 'w')
                 k--;
             k++;
             r.version = new String(tmp, k, i - k + 1);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/modpack/ModpackWizard.java
Patch:
@@ -77,7 +77,7 @@ public void start(Map settings, ResultProgressHandle progress) {
                                                   service.version(),
                                                   (String) settings.get(ModpackInitializationPanel.KEY_GAME_VERSION),
                                                   blackList);
-                            progress.finished(Summary.create(C.i18n("modpack.export_finished") + ": " + loc.getAbsolutePath(), null));
+                            progress.finished(new Summary(C.i18n("modpack.export_finished") + ": " + loc.getAbsolutePath(), null));
                         } catch (IOException | GameException ex) {
                             HMCLog.err("Failed to export modpack", ex);
                             progress.failed(C.i18n("modpack.export_error") + ": " + ex.getClass().getName() + ", " + ex.getLocalizedMessage(), true);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/views/LogWindow.java
Patch:
@@ -259,7 +259,7 @@ public void warning(String status) {
         log(status, Level.WARN);
     }
 
-    public void log(String status, Level c) {
+    public synchronized void log(String status, Level c) {
         status = status.replace("\t", "    ");
         Document d = txtLog.getStyledDocument();
         SimpleAttributeSet sas = new SimpleAttributeSet();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/MinecraftLoader.java
Patch:
@@ -48,7 +48,7 @@ public class MinecraftLoader extends AbstractMinecraftLoader {
     DownloadType dt;
     String text;
 
-    public MinecraftLoader(Profile ver, IMinecraftProvider provider, UserProfileProvider lr) throws IllegalStateException {
+    public MinecraftLoader(Profile ver, IMinecraftProvider provider, UserProfileProvider lr) throws GameException {
         super(ver, provider, lr);
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersion.java
Patch:
@@ -22,6 +22,8 @@
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
+import org.jackhuang.hellominecraft.C;
+import org.jackhuang.hellominecraft.launcher.launch.GameException;
 import org.jackhuang.hellominecraft.launcher.launch.IMinecraftProvider;
 import org.jackhuang.hellominecraft.launcher.utils.assets.AssetsIndex;
 import org.jackhuang.hellominecraft.utils.ArrayUtils;
@@ -78,7 +80,7 @@ protected MinecraftVersion resolve(IMinecraftProvider manager, Set<String> resol
         if (inheritsFrom == null)
             return this;
         if (!resolvedSoFar.add(id))
-            throw new IllegalStateException("Circular dependency detected.");
+            throw new GameException(C.i18n("launch.circular_dependency_versions"));
 
         MinecraftVersion parent = manager.getVersionById(inheritsFrom);
         if (parent == null) {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersionManager.java
Patch:
@@ -26,6 +26,7 @@
 import java.util.TreeMap;
 import org.jackhuang.hellominecraft.C;
 import org.jackhuang.hellominecraft.HMCLog;
+import org.jackhuang.hellominecraft.launcher.launch.GameException;
 import org.jackhuang.hellominecraft.launcher.launch.GameLauncher;
 import org.jackhuang.hellominecraft.launcher.launch.IMinecraftAssetService;
 import org.jackhuang.hellominecraft.launcher.launch.IMinecraftDownloadService;
@@ -211,7 +212,7 @@ public void open(String mv, String name) {
     @Override
     public GameLauncher.DecompressLibraryJob getDecompressLibraries(MinecraftVersion v) {
         if (v.libraries == null)
-            throw new IllegalStateException("Wrong format: minecraft.json");
+            throw new GameException("Wrong format: minecraft.json");
         ArrayList<File> unzippings = new ArrayList<>();
         ArrayList<String[]> extractRules = new ArrayList<>();
         for (IMinecraftLibrary l : v.libraries) {
@@ -236,7 +237,7 @@ public File getMinecraftJar() {
 
     @Override
     public IMinecraftLoader provideMinecraftLoader(UserProfileProvider p)
-        throws IllegalStateException {
+        throws GameException {
         return new MinecraftLoader(profile, this, p);
     }
 

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/Theme.java
Patch:
@@ -79,6 +79,8 @@ public enum Theme {
     public final Map<String, String> settings;
 
     private Theme(String localizedName, Map<String, String> settings) {
+        if (settings == null)
+            throw new NullPointerException("Theme settings map should not be null.");
         this.localizedName = localizedName;
         this.settings = settings;
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/GameSettingsPanel.java
Patch:
@@ -1120,7 +1120,9 @@ private void loadProfiles() {
 
         isLoading = false;
         if (index < cboProfiles.getItemCount()) {
+            isLoading = true;
             cboProfiles.setSelectedIndex(index);
+            isLoading = false;
             prepare(getProfile());
         }
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/CrashReporter.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Hello Minecraft! Launcher.
  * Copyright (C) 2013  huangyuhui <huanghongxun2008@126.com>
- * 
+ *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -30,6 +30,7 @@
 import org.jackhuang.hellominecraft.utils.NetUtils;
 import org.jackhuang.hellominecraft.utils.MessageBox;
 import org.jackhuang.hellominecraft.utils.StrUtils;
+import org.jackhuang.hellominecraft.utils.system.OS;
 import org.jackhuang.hellominecraft.views.LogWindow;
 
 /**
@@ -96,7 +97,7 @@ public void uncaughtException(Thread t, Throwable e) {
             text += "\n  Content: \n    ";
             text += s + "\n\n";
             text += "-- System Details --\n";
-            text += "  Operating System: " + System.getProperty("os.name") + " (" + System.getProperty("os.arch") + ") version " + System.getProperty("os.version") + "\n";
+            text += "  Operating System: " + OS.getSystemVersion() + "\n";
             text += "  Java Version: " + System.getProperty("java.version") + ", " + System.getProperty("java.vendor") + "\n";
             text += "  Java VM Version: " + System.getProperty("java.vm.name") + " (" + System.getProperty("java.vm.info") + "), " + System.getProperty("java.vm.vendor") + "\n";
             if (enableLogger)

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/MinecraftForgeVersionList.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Hello Minecraft! Launcher.
  * Copyright (C) 2013  huangyuhui <huanghongxun2008@126.com>
- * 
+ *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -97,7 +97,7 @@ public void refreshList(String[] needed) throws Exception {
     }
 
     @Override
-    public List<InstallerVersion> getVersions(String mcVersion) {
+    public List<InstallerVersion> getVersionsImpl(String mcVersion) {
         if (versions == null || versionMap == null)
             return null;
         if (StrUtils.isBlank(mcVersion))

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/liteloader/LiteLoaderVersionList.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Hello Minecraft! Launcher.
  * Copyright (C) 2013  huangyuhui <huanghongxun2008@126.com>
- * 
+ *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -83,7 +83,7 @@ public void refreshList(String[] needed) throws Exception {
     }
 
     @Override
-    public List<InstallerVersion> getVersions(String mcVersion) {
+    public List<InstallerVersion> getVersionsImpl(String mcVersion) {
         if (versions == null || versionMap == null)
             return null;
         if (StrUtils.isBlank(mcVersion))

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/bmcl/OptiFineBMCLVersionList.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Hello Minecraft! Launcher.
  * Copyright (C) 2013  huangyuhui <huanghongxun2008@126.com>
- * 
+ *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -60,7 +60,7 @@ public void refreshList(String[] needed) throws Exception {
         if (s == null)
             return;
         root = C.gson.fromJson(s, new TypeToken<ArrayList<OptiFineVersion>>() {
-                               }.getType());
+        }.getType());
         for (OptiFineVersion v : root) {
             v.mirror = v.mirror.replace("http://optifine.net/http://optifine.net/", "http://optifine.net/");
 
@@ -83,7 +83,7 @@ public void refreshList(String[] needed) throws Exception {
     }
 
     @Override
-    public List<InstallerVersion> getVersions(String mcVersion) {
+    public List<InstallerVersion> getVersionsImpl(String mcVersion) {
         if (versions == null || versionMap == null)
             return null;
         if (StrUtils.isBlank(mcVersion))

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/IMinecraftModService.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * Hello Minecraft! Launcher.
  * Copyright (C) 2013  huangyuhui
- * 
+ *
  * This program is free software: you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
@@ -38,5 +38,5 @@ public IMinecraftModService(Profile profile) {
 
     public abstract boolean addMod(File f);
 
-    public abstract void removeMod(int[] index);
+    public abstract void removeMod(Object[] mods);
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/MainFrame.java
Patch:
@@ -139,7 +139,7 @@ public void windowDeactivated(WindowEvent e) {
 
         if (enableShadow)
             try {
-                //setBackground(new Color(0, 0, 0, 0));
+                setBackground(new Color(0, 0, 0, 0));
                 getRootPane().setBorder(border = new DropShadowBorder(borderColor, 4));
             } catch (Throwable ex) {
                 HMCLog.err("Failed to set window transparent.", ex);

File: HMCLAPI/src/main/java/rx/operators/OperationSubscribeOn.java
Patch:
@@ -19,17 +19,16 @@
 import rx.Observer;
 import rx.Scheduler;
 import rx.Subscription;
-import rx.util.functions.Action0;
 import rx.util.functions.Func1;
 
-
 public class OperationSubscribeOn {
 
     public static <T> Func1<Observer<T>, Subscription> subscribeOn(Observable<T> source, Scheduler scheduler) {
         return new SubscribeOn<>(source, scheduler);
     }
 
     private static class SubscribeOn<T> implements Func1<Observer<T>, Subscription> {
+
         private final Observable<T> source;
         private final Scheduler scheduler;
 
@@ -45,6 +44,7 @@ public Subscription call(final Observer<T> observer) {
     }
 
     private static class ScheduledSubscription implements Subscription {
+
         private final Subscription underlying;
         private final Scheduler scheduler;
 
@@ -59,4 +59,4 @@ public void unsubscribe() {
         }
     }
 
-}
\ No newline at end of file
+}

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -121,7 +121,6 @@ public static void main(String[] args) {
                 return;
 
             System.setProperty("sun.java2d.noddraw", "true");
-
             Thread.setDefaultUncaughtExceptionHandler(new CrashReporter(true));
 
             try {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/Main.java
Patch:
@@ -21,7 +21,6 @@
 import java.io.PrintWriter;
 import java.io.StringWriter;
 import java.text.ParseException;
-import javax.swing.SwingUtilities;
 import javax.swing.UIManager;
 import javax.swing.UnsupportedLookAndFeelException;
 import org.jackhuang.hellominecraft.HMCLog;
@@ -58,8 +57,7 @@ public static void main(String[] args) {
             } catch (ParseException | UnsupportedLookAndFeelException ex) {
                 HMCLog.warn("Failed to set look and feel", ex);
             }
-            UPDATE_CHECKER.outdated.register(new AppDataUpgrader());
-            UPDATE_CHECKER.process(false).subscribeOn(Schedulers.newThread()).subscribe(t -> MessageBox.Show("发现更新！"));
+            UPDATE_CHECKER.process(false).subscribeOn(Schedulers.newThread()).subscribe(t -> MessageBox.Show("发现更新！" + t.version));
             new MainWindow().setVisible(true);
         } catch (Throwable t) {
             HMCLog.err("There's something wrong when running server holder.", t);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/IMinecraftProvider.java
Patch:
@@ -85,7 +85,6 @@ public File getRunDirectory(String id, String subFolder) {
      *
      * @see org.jackhuang.hellominecraft.launcher.launch.IMinecraftLoader
      * @param p    player informations, including username & auth_token
-     * @param type where to download
      *
      * @return what you want
      *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Settings.java
Patch:
@@ -119,6 +119,7 @@ public static void save() {
     }
 
     public static Profile getProfile(String name) {
+        if (name == null) return getProfiles().get("Default");
         return getProfiles().get(name);
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/CrashReporter.java
Patch:
@@ -62,7 +62,7 @@ public boolean checkThrowable(Throwable e) {
                 t.printStackTrace();
             }
             return false;
-        } else if (s.contains("java.lang.NoClassDefFoundError") || s.contains("java.lang.IncompatibleClassChangeError") || s.contains("java.lang.ClassFormatError")) {
+        } else if (s.contains("java.lang.NoClassDefFoundError") || s.contains("java.lang.VerifyError") || s.contains("java.lang.NoSuchMethodError") || s.contains("java.lang.IncompatibleClassChangeError") || s.contains("java.lang.ClassFormatError")) {
             System.out.println(C.i18n("crash.NoClassDefFound"));
             try {
                 MessageBox.Show(C.i18n("crash.NoClassDefFound"));
@@ -98,7 +98,7 @@ public void uncaughtException(Thread t, Throwable e) {
             else
                 System.out.println(text);
 
-            if (checkThrowable(e)) {
+            if (checkThrowable(e) && !System.getProperty("java.vm.name").contains("OpenJDK")) {
                 SwingUtilities.invokeLater(() -> LogWindow.INSTANCE.showAsCrashWindow(UpdateChecker.OUT_DATED));
                 if (!UpdateChecker.OUT_DATED)
                     reportToServer(text, s);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersionManager.java
Patch:
@@ -207,7 +207,9 @@ public void open(String mv, String name) {
 
     @Override
     public GameLauncher.DecompressLibraryJob getDecompressLibraries() {
-        MinecraftVersion v = profile.getSelectedMinecraftVersion().resolve(this);
+        MinecraftVersion v = getSelectedMinecraftVersion();
+        if (v == null) return null;
+        v = v.resolve(this);
         if (v.libraries == null)
             return null;
         ArrayList<File> unzippings = new ArrayList<>();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/MainFrame.java
Patch:
@@ -293,7 +293,7 @@ public void loadBackground() {
                 backgroundLabel.setIcon(background);
             centralPanel.add(backgroundLabel, -1);
         } else
-            HMCLog.warn("No Background Image, the background will be white!");
+            HMCLog.warn("No Background Image, the background will be empty!");
     }
 
     public JPanel getTitleBar() {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/HMCLog.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class HMCLog {
 
-    public static Logger logger = new Logger("HMC");
+    public static Logger logger = new Logger("Hello Minecraft!");
 
     public static void log(String message) {
         logger.info(message);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/NetUtils.java
Patch:
@@ -30,7 +30,6 @@
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import rx.Observable;
-import rx.subscriptions.Subscriptions;
 
 /**
  *
@@ -160,13 +159,12 @@ public static URL concatenateURL(URL url, String query) {
     }
     
     public static Observable<String> getRx(String url) {
-        return Observable.create(t1 -> {
+        return Observable.createWithEmptySubscription(t1 -> {
             try {
                 t1.onNext(get(url));
             } catch(Exception e) {
                 t1.onError(e);
             }
-            return Subscriptions.empty();
         });
     }
 }

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/Utils.java
Patch:
@@ -93,9 +93,10 @@ public static ImageIcon scaleImage(ImageIcon i, int x, int y) {
         return new ImageIcon(i.getImage().getScaledInstance(x, y, Image.SCALE_SMOOTH));
     }
 
-    public static ImageIcon searchBackgroundImage(ImageIcon background, String bgpath, int width, int height) {
+    public static ImageIcon searchBackgroundImage(ImageIcon init, String bgpath, int width, int height) {
         Random r = new Random();
         boolean loaded = false;
+        ImageIcon background = init;
 
         // bgpath
         if (StrUtils.isNotBlank(bgpath) && !loaded) {
@@ -142,6 +143,7 @@ public static ImageIcon searchBackgroundImage(ImageIcon background, String bgpat
             }
         }
 
+        if (background == null) return init;
         return background;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/vanilla/MinecraftForgeVersionList.java
Patch:
@@ -49,9 +49,9 @@ public static MinecraftForgeVersionList getInstance() {
 
     @Override
     public void refreshList(String[] needed) throws Exception {
-        String s = NetUtils.get(Settings.getInstance().getDownloadSource().getProvider().getParsedLibraryDownloadURL(C.URL_FORGE_LIST));
         if (root != null)
             return;
+        String s = NetUtils.get(Settings.getInstance().getDownloadSource().getProvider().getParsedLibraryDownloadURL(C.URL_FORGE_LIST));
 
         root = C.gson.fromJson(s, MinecraftForgeVersionRoot.class);
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/MainPagePanel.java
Patch:
@@ -386,7 +386,7 @@ void genLaunchCode(final Consumer<GameLauncher> listener) {
         }
         final IAuthenticator l = IAuthenticator.LOGINS.get(index);
         final LoginInfo li = new LoginInfo(Settings.getInstance().getUsername(), l.isLoggedIn() || l.isHidePasswordBox() ? null : new String(txtPassword.getPassword()));
-        Thread t = new Thread() {
+        new Thread() {
             @Override
             public void run() {
                 Thread.currentThread().setName("Game Launcher");
@@ -405,8 +405,7 @@ public void run() {
                 listener.accept(gl);
                 gl.makeLaunchCommand();
             }
-        };
-        t.start();
+        }.start();
     }
     //</editor-fold>
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/TaskWindow.java
Patch:
@@ -219,8 +219,8 @@ public void setProgress(Task task, int progress, int max) {
 
     @Override
     public void run() {
+        SwingUtilities.invokeLater(this::dispose);
         suc = true;
-        this.dispose();
         HMCLog.log("Tasks are finished.");
     }
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/CollectionUtils.java
Patch:
@@ -31,7 +31,7 @@ public final class CollectionUtils {
 
     public static <T> ArrayList<T> map(Collection<T> coll, Predicate<T> p) {
         ArrayList<T> newColl = new ArrayList<>();
-        Observable.from(coll).filter(p).subscribe(newColl::add);
+        Observable.from(coll).filter(t -> p.apply(t)).subscribe(t -> newColl.add(t));
         return newColl;
     }
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/SwingUtils.java
Patch:
@@ -161,7 +161,7 @@ public static String getParsedJPanelText(JLabel jLabel1, String longString) {
         char[] chars = longString.toCharArray();
         FontMetrics fontMetrics = jLabel1.getFontMetrics(jLabel1.getFont());
         for (int beginIndex = 0, limit = 1;; limit++) {
-            if (beginIndex + limit >= chars.length)
+            if (beginIndex + limit > chars.length)
                 break;
             if (fontMetrics.charsWidth(chars, beginIndex, limit) < jLabel1.getWidth()) {
                 if (beginIndex + limit < chars.length)

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/FileDownloadTask.java
Patch:
@@ -131,7 +131,7 @@ public boolean executeTask() {
                     tempFile.createNewFile();
 
                 // Open file and seek to the end of it.
-                file = new RandomAccessFile(tempFile, "rwd");
+                file = new RandomAccessFile(tempFile, "rw");
 
                 stream = connection.getInputStream();
                 int lastDownloaded = 0;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Launcher.java
Patch:
@@ -124,16 +124,16 @@ else if (s.equals("-debug"))
             final String advice = MinecraftCrashAdvicer.getAdvice(trace);
             MessageBox.Show(C.i18n("crash.minecraft") + ": " + advice);
 
-            LogWindow.instance.setExit(TrueFunction.instance);
             System.err.println(C.i18n("crash.minecraft"));
             System.err.println(advice);
             System.err.println(trace);
+            LogWindow.instance.setExit(TrueFunction.instance);
             LogWindow.instance.setVisible(true);
             flag = 1;
         }
 
         println("*** Game Exited ***");
-        System.exit(flag);
+        Utils.shutdownForcely(1);
     }
     
     static Object getShutdownHaltLock() {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -102,7 +102,7 @@ public X509Certificate[] getAcceptedIssuers() {
     }
 
     public static String launcherName = "Hello Minecraft! Launcher";
-    public static byte firstVer = 2, secondVer = 3, thirdVer = 5, forthVer = 4;
+    public static byte firstVer = 2, secondVer = 3, thirdVer = 5, forthVer = 5;
     public static int minimumLauncherVersion = 16;
 
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/YggdrasilAuthenticator.java
Patch:
@@ -25,7 +25,7 @@
 import org.jackhuang.hellominecraft.utils.ArrayUtils;
 import org.jackhuang.hellominecraft.views.Selector;
 import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.GameProfile;
-import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.properties.PropertyMap;
+import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.PropertyMap;
 import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.YggdrasilAuthentication;
 import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.UUIDTypeAdapter;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/yggdrasil/GameProfile.java
Patch:
@@ -8,7 +8,6 @@
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import java.lang.reflect.Type;
-import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.properties.PropertyMap;
 import java.util.UUID;
 import org.jackhuang.hellominecraft.utils.StrUtils;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/yggdrasil/Response.java
Patch:
@@ -1,11 +1,10 @@
-package org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.response;
+package org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil;
 
 import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.GameProfile;
 
 public class Response {
 
-    public String accessToken;
-    public String clientToken;
+    public String accessToken, clientToken;
     public GameProfile selectedProfile;
     public GameProfile[] availableProfiles;
     public User user;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/yggdrasil/UUIDTypeAdapter.java
Patch:
@@ -9,8 +9,7 @@
 public class UUIDTypeAdapter extends TypeAdapter<UUID> {
 
     @Override
-    public void write(JsonWriter out, UUID value)
-    throws IOException {
+    public void write(JsonWriter out, UUID value) throws IOException {
         out.value(fromUUID(value));
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/yggdrasil/User.java
Patch:
@@ -1,6 +1,4 @@
-package org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.response;
-
-import org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil.properties.PropertyMap;
+package org.jackhuang.hellominecraft.launcher.utils.auth.yggdrasil;
 
 public class User {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersionManager.java
Patch:
@@ -245,6 +245,7 @@ public List<ModInfo> listMods() {
     @Override
     public List<GameLauncher.DownloadLibraryJob> getDownloadLibraries(DownloadType downloadType) {
         ArrayList<DownloadLibraryJob> downloadLibraries = new ArrayList<>();
+        if(profile.getSelectedMinecraftVersion() == null) return downloadLibraries;
         MinecraftVersion v = profile.getSelectedMinecraftVersion().resolve(this, Settings.getInstance().getDownloadSource());
         if (v.libraries != null)
             for (IMinecraftLibrary l : v.libraries) {
@@ -296,7 +297,7 @@ public GameLauncher.DecompressLibraryJob getDecompressLibraries() {
     @Override
     public File getDecompressNativesToLocation() {
         MinecraftVersion v = profile.getSelectedMinecraftVersion();
-        return v.getNatives(profile.getCanonicalGameDirFile());
+        return v == null ? null : v.getNatives(profile.getCanonicalGameDirFile());
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/GameSettingsPanel.java
Patch:
@@ -569,7 +569,7 @@ public void focusLost(java.awt.event.FocusEvent evt) {
             }
         });
 
-        chkCancelWrapper.setText("取消包裹启动器（出现奇怪问题时可尝试使用,与调试模式冲突）");
+        chkCancelWrapper.setText(bundle.getString("advancedsettings.cancel_wrapper_launcher")); // NOI18N
         chkCancelWrapper.addFocusListener(new java.awt.event.FocusAdapter() {
             public void focusLost(java.awt.event.FocusEvent evt) {
                 chkCancelWrapperFocusLost(evt);
@@ -716,7 +716,7 @@ public void mouseClicked(java.awt.event.MouseEvent evt) {
                         .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                         .addComponent(btnRemoveMod)
                         .addGap(0, 0, Short.MAX_VALUE))
-                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
+                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
                 .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                 .addComponent(lblModInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                 .addContainerGap())
@@ -1079,7 +1079,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
         }
     });
 
-    btnCleanGame.setText("清理游戏文件");
+    btnCleanGame.setText(bundle.getString("setupwindow.clean")); // NOI18N
     btnCleanGame.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
             btnCleanGameActionPerformed(evt);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/MainPagePanel.java
Patch:
@@ -349,7 +349,7 @@ private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:eve
 
     // <editor-fold defaultstate="collapsed" desc="Game Launch">
     void genLaunchCode(final Consumer<GameLauncher> listener) {
-        if (isLaunching) return;
+        if (isLaunching || getCurrentProfile() == null) return;
         isLaunching = true;
         HMCLog.log("Start generating launching command...");
         File file = getCurrentProfile().getCanonicalGameDirFile();

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/Utils.java
Patch:
@@ -30,7 +30,6 @@
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.net.URI;
-import java.net.URISyntaxException;
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.net.URLDecoder;
@@ -93,7 +92,7 @@ public static boolean openLink(String url) {
         try {
             Desktop.getDesktop().browse(new URI(url));
             return true;
-        } catch (URISyntaxException | IOException ex) {
+        } catch (Exception ex) {
             HMCLog.warn("Failed to open link:" + url, ex);
             return false;
         }
@@ -166,7 +165,8 @@ public static ImageIcon searchBackgroundImage(ImageIcon background, String bgpat
     }
 
     /**
-     * In order to fight against the permission manager.
+     * In order to fight against the permission manager by Minecraft Forge.
+     * @param status exit code
      */
     public static void shutdownForcely(int status) {
         try {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/FileUtils.java
Patch:
@@ -435,6 +435,7 @@ public static FileOutputStream openOutputStream(File file, boolean append)
     public static File[] searchSuffix(File dir, String suffix) {
         ArrayList<File> al = new ArrayList();
         File[] files = dir.listFiles();
+        if (files == null) return new File[0];
         for (File f : files)
             if (f.getName().endsWith(suffix)) al.add(f);
         return al.toArray(new File[0]);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/JdkVersion.java
Patch:
@@ -57,12 +57,14 @@ public int getParsedVersion() {
     public boolean equals(Object obj) {
         if (!(obj instanceof JdkVersion)) return false;
         JdkVersion b = (JdkVersion) obj;
+        if(b.location == null || location == null)
+            return b.location == location;
         return new File(b.location).equals(new File(location));
     }
 
     @Override
     public int hashCode() {
-        return new File(location).hashCode();
+        return location == null ? 0 : new File(location).hashCode();
     }
 
     public JdkVersion(String location) {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/MessageBox.java
Patch:
@@ -24,7 +24,7 @@
  */
 public class MessageBox {
 
-    private static String Title = C.i18n("message.info");
+    private static final String TITLE = C.i18n("message.info");
     /**
      * Buttons: OK
      */
@@ -110,7 +110,7 @@ public static int Show(String Msg, String Title, int Option) {
      * @return User Operation
      */
     public static int Show(String Msg, int Option) {
-        return Show(Msg, Title, Option);
+        return Show(Msg, TITLE, Option);
     }
 
     /**
@@ -120,6 +120,6 @@ public static int Show(String Msg, int Option) {
      * @return User Operation
      */
     public static int Show(String Msg) {
-        return Show(Msg, Title, INFORMATION_MESSAGE);
+        return Show(Msg, TITLE, INFORMATION_MESSAGE);
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Launcher.java
Patch:
@@ -50,7 +50,7 @@ public static void main(String[] args) {
         Thread.currentThread().setName("launcher");
         println("*** " + Main.makeTitle() + " ***");
 
-        LogWindow.instance.setTerminateGame(Utils::shutdownForcely);
+        LogWindow.instance.setTerminateGame(() -> Utils.shutdownForcely(1));
 
         boolean showInfo = false;
         String classPath = "";
@@ -75,6 +75,7 @@ public static void main(String[] args) {
                 if (!logFile.exists()) logFile.createNewFile();
                 FileOutputStream tc = new FileOutputStream(logFile);
                 DoubleOutputStream out = new DoubleOutputStream(tc, System.out);
+                Launcher l = new Launcher();
                 System.setOut(new LauncherPrintStream(out));
                 DoubleOutputStream err = new DoubleOutputStream(tc, System.err);
                 System.setErr(new LauncherPrintStream(err));
@@ -132,5 +133,6 @@ public static void main(String[] args) {
         }
 
         println("*** Game Exited ***");
+        System.exit(1);
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/GameSettingsPanel.java
Patch:
@@ -28,6 +28,7 @@
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.awt.event.ItemEvent;
+import java.awt.event.KeyEvent;
 import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
@@ -1439,7 +1440,8 @@ private void btnRemoveModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-
     }//GEN-LAST:event_btnRemoveModActionPerformed
 
     private void lstExternalModsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lstExternalModsKeyPressed
-        btnRemoveModActionPerformed(null);
+        if(evt.getKeyCode() == KeyEvent.VK_DELETE)
+            btnRemoveModActionPerformed(null);
     }//GEN-LAST:event_lstExternalModsKeyPressed
 
     private void lblModInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModInfoMouseClicked

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/LauncherPrintStream.java
Patch:
@@ -41,7 +41,8 @@ public final void println(String paramString) {
             a1.accept(paramString);
     }
 
-    public final void addPrintListener(Consumer<String> paraml) {
+    public final LauncherPrintStream addPrintListener(Consumer<String> paraml) {
         this.printListeners.add(paraml);
+        return this;
     }
 }

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/Utils.java
Patch:
@@ -168,12 +168,12 @@ public static ImageIcon searchBackgroundImage(ImageIcon background, String bgpat
     /**
      * In order to fight against the permission manager.
      */
-    public static void shutdownForcely() {
+    public static void shutdownForcely(int status) {
         try {
             Class z = Class.forName("java.lang.Shutdown");
             Method exit = z.getDeclaredMethod("exit", int.class);
             exit.setAccessible(true);
-            exit.invoke(z, 0);
+            exit.invoke(z, status);
         } catch (ClassNotFoundException | NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {
             MessageBox.Show(C.i18n("launcher.exit_failed"));
             e.printStackTrace();

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/FalseFunction.java
Patch:
@@ -23,7 +23,7 @@
 public class FalseFunction implements NonFunction<Boolean> {
 
     @Override
-    public Boolean onDone() {
+    public Boolean apply() {
         return Boolean.FALSE;
     }
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/NonFunction.java
Patch:
@@ -22,5 +22,5 @@
  */
 public interface NonFunction<T> {
 
-    T onDone();
+    T apply();
 }

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/TrueFunction.java
Patch:
@@ -27,7 +27,7 @@ public class TrueFunction implements NonFunction<Boolean> {
     private TrueFunction(){}
     
     @Override
-    public Boolean onDone() {
+    public Boolean apply() {
         return Boolean.TRUE;
     }
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/JavaProcessMonitor.java
Patch:
@@ -40,6 +40,9 @@ public JavaProcessMonitor(JavaProcess p) {
 
     public void start() {
         Event<JavaProcess> event = (sender2, t) -> {
+            if(t.getExitCode() != 0) {
+                MessageBox.Show(C.i18n("launch.exited_abnormally"));
+            }
             processThreadStopped((ProcessThread) sender2, false);
             return true;
         };

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/views/LogWindow.java
Patch:
@@ -204,7 +204,8 @@ private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRS
     }//GEN-LAST:event_btnClearActionPerformed
 
     private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
-        if (listener != null && listener.onDone()) Utils.shutdownForcely();
+        if (listener != null && listener.apply() && terminateGameListener != null)
+            terminateGameListener.run();
     }//GEN-LAST:event_formWindowClosed
 
     private void btnCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyActionPerformed

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/DefaultGameLauncher.java
Patch:
@@ -43,10 +43,9 @@ public DefaultGameLauncher(Profile version, LoginInfo info, IAuthenticator lg, D
 
     private void register() {
         downloadLibrariesEvent.register((sender, t) -> {
-            final TaskWindow dw = TaskWindow.getInstance();
+            final TaskWindow.TaskWindowFactory dw = TaskWindow.getInstance();
             ParallelTask parallelTask = new ParallelTask();
             for (DownloadLibraryJob s : t)
-                //parallelTask.addDependsTask(new FileDownloadTask(s.url, s.path).setTag(s.name));
                 parallelTask.addDependsTask(new LibraryDownloadTask(s));
             dw.addTask(parallelTask);
             boolean flag = true;

File: HMCL/src/main/java/org/jackhuang/mojang/authlib/Agent.java
Patch:
@@ -3,7 +3,6 @@
 public class Agent {
 
     public static final Agent MINECRAFT = new Agent("Minecraft", 1);
-    public static final Agent SCROLLS = new Agent("Scrolls", 1);
     private final String name;
     private final int version;
 

File: HMCL/src/main/java/org/jackhuang/mojang/authlib/HttpAuthenticationService.java
Patch:
@@ -14,7 +14,7 @@
 import org.jackhuang.hellominecraft.utils.NetUtils;
 import org.jackhuang.hellominecraft.utils.Utils;
 
-public abstract class HttpAuthenticationService extends BaseAuthenticationService {
+public abstract class HttpAuthenticationService implements AuthenticationService {
 
     private static final Logger LOGGER = new Logger("HttpAuthenticationService");
     private final Proxy proxy;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -100,7 +100,7 @@ public X509Certificate[] getAcceptedIssuers() {
     }
 
     public static String launcherName = "Hello Minecraft! Launcher";
-    public static byte firstVer = 2, secondVer = 3, thirdVer = 5, forthVer = 0;
+    public static byte firstVer = 2, secondVer = 3, thirdVer = 5, forthVer = 1;
     public static int minimumLauncherVersion = 16;
 
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/OfflineAuthenticator.java
Patch:
@@ -38,15 +38,15 @@ public UserProfileProvider login(LoginInfo info) {
         String uuid = getUUIDFromUserName(info.username);
         result.setSession(uuid);
         result.setUserId(uuid);
-        result.setAccessToken("0");
+        result.setAccessToken(uuid);
         result.setUserType("Legacy");
         result.setErrorReason(C.i18n("login.no_Player007"));
         return result;
     }
 
     public static String getUUIDFromUserName(String str) {
-        String md5 = DigestUtils.md5Hex(str);
-        return md5.substring(0, 8) + '-' + md5.substring(8, 12) + '-' + md5.substring(12, 16) + '-' + md5.substring(16, 21) + md5.substring(21);
+        return DigestUtils.md5Hex(str);
+        //return md5.substring(0, 8) + '-' + md5.substring(8, 12) + '-' + md5.substring(12, 16) + '-' + md5.substring(16, 21) + md5.substring(21);
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsMojangLoader.java
Patch:
@@ -20,7 +20,6 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Map;
-import java.util.concurrent.ThreadPoolExecutor;
 import org.jackhuang.hellominecraft.C;
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.launcher.settings.Settings;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/IAssetsHandler.java
Patch:
@@ -109,7 +109,6 @@ protected class AssetsTask extends Task {
 
         ArrayList<Task> al;
         String u;
-        int progress, max;
 
         public AssetsTask(String url) {
             this.u = url;
@@ -121,8 +120,7 @@ public boolean executeTask() {
                 setFailReason(new RuntimeException(C.i18n("assets.not_refreshed")));
                 return false;
             }
-            progress = 0;
-            max = assetsDownloadURLs.size();
+            int max = assetsDownloadURLs.size();
             al = new ArrayList<>();
             int hasDownloaded = 0;
             for (int i = 0; i < max; i++) {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/GameSettingsPanel.java
Patch:
@@ -1187,7 +1187,7 @@ private void btnInstallLiteLoaderActionPerformed(java.awt.event.ActionEvent evt)
         TaskWindow.getInstance()
                 .addTask(task).addTask(new LiteLoaderInstaller(profile, (LiteLoaderInstallerVersion) v).registerPreviousResult(task))
                 .start();
-            refreshVersions();
+        refreshVersions();
     }//GEN-LAST:event_btnInstallLiteLoaderActionPerformed
 
     private void btnRefreshLiteLoaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshLiteLoaderActionPerformed
@@ -1371,7 +1371,7 @@ boolean addMod(File f) {
         try {
             if (!ModInfo.isFileMod(f) || mods == null) return false;
             File newf = profile.getFolder("mods");
-            if(newf == null) return false;
+            if (newf == null) return false;
             newf.mkdirs();
             newf = new File(newf, f.getName());
             FileUtils.copyFile(f, newf);
@@ -1724,6 +1724,7 @@ public void versionChanged(Profile profile, String version) {
 
         reloadMods();
 
+        if (profile == null || version == null) return;
         MinecraftVersion v = profile.getMinecraftProvider().getVersionById(version);
         if (v != null)
             for (IAssetsHandler ph : IAssetsHandler.getAssetsHandlers())

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/SwingUtils.java
Patch:
@@ -19,7 +19,6 @@
 import java.awt.FontMetrics;
 import java.net.URI;
 import javax.swing.DefaultListModel;
-import javax.swing.JFileChooser;
 import javax.swing.JLabel;
 import javax.swing.JList;
 import javax.swing.JScrollBar;
@@ -153,11 +152,12 @@ public static void removeRow(JTable table, int row) {
     }
 
     public static String getParsedJPanelText(JLabel jLabel1, String longString) {
-        if(StrUtils.isBlank(longString)) return longString;
+        if (StrUtils.isBlank(longString)) return longString;
         StringBuilder builder = new StringBuilder();
         char[] chars = longString.toCharArray();
         FontMetrics fontMetrics = jLabel1.getFontMetrics(jLabel1.getFont());
         for (int beginIndex = 0, limit = 1;; limit++) {
+            if (beginIndex + limit >= chars.length) break;
             if (fontMetrics.charsWidth(chars, beginIndex, limit) < jLabel1.getWidth()) {
                 if (beginIndex + limit < chars.length)
                     continue;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -54,7 +54,7 @@
 public final class Main implements NonConsumer {
 
     public static String launcherName = "Hello Minecraft! Launcher";
-    public static byte firstVer = 2, secondVer = 3, thirdVer = 4;
+    public static byte firstVer = 2, secondVer = 3, thirdVer = 4, forthVer = 10;
     public static int minimumLauncherVersion = 16;
 
     /**
@@ -115,7 +115,7 @@ protected PasswordAuthentication getPasswordAuthentication() {
                         }
                     });
             }
-
+            
             MainFrame.showMainFrame(Settings.isFirstLoad());
         }
     }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/DefaultGameLauncher.java
Patch:
@@ -26,7 +26,6 @@
 import org.jackhuang.hellominecraft.launcher.settings.Profile;
 import org.jackhuang.hellominecraft.tasks.ParallelTask;
 import org.jackhuang.hellominecraft.tasks.TaskWindow;
-import org.jackhuang.hellominecraft.tasks.download.FileDownloadTask;
 import org.jackhuang.hellominecraft.utils.system.Compressor;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 
@@ -46,10 +45,9 @@ private void register() {
         downloadLibrariesEvent.register((sender, t) -> {
             final TaskWindow dw = TaskWindow.getInstance();
             ParallelTask parallelTask = new ParallelTask();
-            for (DownloadLibraryJob s : t) {
+            for (DownloadLibraryJob s : t)
                 //parallelTask.addDependsTask(new FileDownloadTask(s.url, s.path).setTag(s.name));
                 parallelTask.addDependsTask(new LibraryDownloadTask(s));
-            }
             dw.addTask(parallelTask);
             boolean flag = true;
             if (t.size() > 0) flag = dw.start();
@@ -58,6 +56,7 @@ private void register() {
             return flag;
         });
         decompressNativesEvent.register((sender, value) -> {
+            if (value == null) return false;
             for (int i = 0; i < value.decompressFiles.length; i++)
                 try {
                     Compressor.unzip(value.decompressFiles[i], value.decompressTo, value.extractRules[i]);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/FileNameFilter.java
Patch:
@@ -18,6 +18,7 @@
 
 import java.io.File;
 import javax.swing.filechooser.FileFilter;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
 
 /**
  *
@@ -33,7 +34,7 @@ public FileNameFilter(String acceptedName) {
 
     @Override
     public boolean accept(File f) {
-        return f.isDirectory() || f.getName().equals(acceptedName);
+        return f.isDirectory() || f.getName().equals(acceptedName) && !FileUtils.getExtension(f.getName()).equals("lnk");
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersionManager.java
Patch:
@@ -21,7 +21,6 @@
 import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
@@ -283,6 +282,7 @@ public File getAssets() {
     @Override
     public GameLauncher.DecompressLibraryJob getDecompressLibraries() {
         MinecraftVersion v = profile.getSelectedMinecraftVersion().resolve(this, Settings.getInstance().getDownloadSource());
+        if (v.libraries == null) return null;
         ArrayList<File> unzippings = new ArrayList<>();
         ArrayList<String[]> extractRules = new ArrayList<>();
         for (IMinecraftLibrary l : v.libraries) {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/SwingUtils.java
Patch:
@@ -19,6 +19,7 @@
 import java.awt.FontMetrics;
 import java.net.URI;
 import javax.swing.DefaultListModel;
+import javax.swing.JFileChooser;
 import javax.swing.JLabel;
 import javax.swing.JList;
 import javax.swing.JScrollBar;
@@ -169,5 +170,4 @@ public static String getParsedJPanelText(JLabel jLabel1, String longString) {
         }
         return builder.toString();
     }
-
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/MinecraftLoader.java
Patch:
@@ -16,6 +16,7 @@
  */
 package org.jackhuang.hellominecraft.launcher.launch;
 
+import com.google.gson.JsonSyntaxException;
 import java.io.File;
 import java.io.IOException;
 import java.util.List;
@@ -146,7 +147,7 @@ private File reconstructAssets() {
                 // If the scale new format existent file is lower then 0.1, use the old format.
                 if (cnt * 10 < tot) return assetsDir;
             }
-        } catch (IOException e) {
+        } catch (IOException | JsonSyntaxException e) {
             HMCLog.warn("Failed to create virutal assets.", e);
         }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Profile.java
Patch:
@@ -172,6 +172,7 @@ public void setJava(Java java) {
     }
 
     public File getFolder(String folder) {
+        if (getSelectedMinecraftVersion() == null) return new File(getCanonicalGameDirFile(), folder);
         return new File(getMinecraftProvider().getRunDirectory(getSelectedMinecraftVersion().id), folder);
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Settings.java
Patch:
@@ -24,7 +24,6 @@
 import java.util.Collections;
 import java.util.List;
 import java.util.Map;
-import java.util.Objects;
 import org.jackhuang.hellominecraft.C;
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.launcher.Main;
@@ -77,6 +76,8 @@ public static boolean isFirstLoad() {
         temp.add(new Java("Custom", null));
         if (OS.os() == OS.WINDOWS)
             temp.addAll(Java.queryAllJavaHomeInWindowsByReg());
+        if (OS.os() == OS.OSX)
+            temp.addAll(Java.queryAllJDKInMac());
         JAVA = Collections.unmodifiableList(temp);
     }
 
@@ -124,7 +125,6 @@ public static Map<String, Profile> getVersions() {
     }
 
     public static void setVersion(Profile ver) {
-        Objects.requireNonNull(ver);
         getVersions().put(ver.getName(), ver);
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/download/IDownloadProvider.java
Patch:
@@ -41,6 +41,8 @@ public interface IDownloadProvider {
     String getVersionsListDownloadURL();
 
     String getAssetsDownloadURL();
+    
+    String getParsedLibraryDownloadURL(String str);
 
     boolean isAllowedToUseSelfURL();
 }

File: HMCL/src/main/java/org/jackhuang/mojang/authlib/BaseUserAuthentication.java
Patch:
@@ -4,7 +4,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Objects;
 import org.jackhuang.hellominecraft.logging.logger.Logger;
 import org.jackhuang.hellominecraft.utils.StrUtils;
 import org.jackhuang.mojang.authlib.properties.Property;
@@ -30,7 +29,6 @@ public abstract class BaseUserAuthentication
     private UserType userType;
 
     protected BaseUserAuthentication(AuthenticationService authenticationService) {
-	Objects.requireNonNull(authenticationService);
 	this.authenticationService = authenticationService;
     }
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/FileDownloadTask.java
Patch:
@@ -228,7 +228,7 @@ public boolean abort() {
 
     @Override
     public String getInfo() {
-        return C.i18n("download") + ": " + url + " " + filePath;
+        return C.i18n("download") + ": " + url;
     }
 
     @Override

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/UpdateChecker.java
Patch:
@@ -21,6 +21,7 @@
 import org.jackhuang.hellominecraft.C;
 import org.jackhuang.hellominecraft.utils.functions.NonConsumer;
 import org.jackhuang.hellominecraft.HMCLog;
+import org.jackhuang.hellominecraft.utils.system.OS;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersionManager.java
Patch:
@@ -21,6 +21,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.LinkedList;
@@ -222,6 +223,7 @@ public File getRunDirectory(String id) {
 
     @Override
     public List<ModInfo> listMods() {
+        if (profile.getSelectedMinecraftVersion() == null) return Arrays.asList();
         File modsFolder = new File(getRunDirectory(profile.getSelectedMinecraftVersion().id), "mods");
         ArrayList<ModInfo> mods = new ArrayList<>();
         Queue<File> queue = new LinkedList<>();
@@ -235,9 +237,8 @@ public List<ModInfo> listMods() {
                         ModInfo m = ModInfo.readModInfo(f);
                         if (m != null)
                             mods.add(m);
-                    } else if(f.isDirectory()) {
+                    } else if (f.isDirectory())
                         queue.add(f);
-                    }
         }
         Collections.sort(mods);
         return mods;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/NetUtils.java
Patch:
@@ -123,8 +123,6 @@ public static String post(String url, Map<String, String> params) {
             }
             sb = new StringBuilder(sb.substring(0, sb.length() - 1));
         }
-        System.out.println("send_url:" + url);
-        System.out.println("send_data:" + sb.toString());
         try {
             u = new URL(url);
             con = (HttpURLConnection) u.openConnection();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Profile.java
Patch:
@@ -61,10 +61,8 @@ public Profile(String name) {
         this.name = name;
         gameDir = MCUtils.getInitGameDir().getPath();
         debug = fullscreen = canceledWrapper = false;
-        javaDir = "";
-        java = "Default";
         launcherVisibility = gameDirType = 0;
-        minecraftArgs = serverIp = "";
+        javaDir = java = minecraftArgs = serverIp = "";
     }
 
     public Profile(Profile v) {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/TaskWindow.java
Patch:
@@ -262,7 +262,7 @@ public void onDone(Task task) {
     @Override
     public void onFailed(Task task) {
         SwingUtilities.invokeLater(() -> {
-            failReasons.add(task.getInfo() + ": " + (null == task.getFailReason() ? "No exception" : task.getFailReason().getClass().toString() + ": " + task.getFailReason().getLocalizedMessage()));
+            failReasons.add(task.getInfo() + ": " + (null == task.getFailReason() ? "No exception" : task.getFailReason().getLocalizedMessage()));
             pgsTotal.setMaximum(taskList.taskCount());
             pgsTotal.setValue(pgsTotal.getValue() + 1);
             int idx = tasks.indexOf(task);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/LibraryDownloadTask.java
Patch:
@@ -79,7 +79,7 @@ public boolean executeTask() {
 
     InputStream stream;
     RandomAccessFile file;
-    boolean shouldContinue = true, aborted = false;
+    boolean shouldContinue = true;
     int size = -1;
 
     boolean download(URL url, File filePath) {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/HTTPGetTask.java
Patch:
@@ -81,6 +81,7 @@ public boolean executeTask() {
     @Override
     public boolean abort() {
         shouldContinue = false;
+        aborted = true;
         return true;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/ForgeInstaller.java
Patch:
@@ -81,9 +81,9 @@ public boolean executeTask() {
             FileUtils.copyFile(new File(from, profile.install.minecraft + ".jar"),
                     new File(to, profile.install.target + ".jar"));
             HMCLog.log("Creating new version profile..." + profile.install.target + ".json");
-            for (MinecraftLibrary library : profile.versionInfo.libraries)
+            /*for (MinecraftLibrary library : profile.versionInfo.libraries)
                 if (library.name.startsWith("net.minecraftforge:forge:"))
-                    library.url = installerVersion.universal;
+                    library.url = installerVersion.universal;*/
             FileUtils.write(new File(to, profile.install.target + ".json"), C.gsonPrettyPrinting.toJson(profile.versionInfo));
 
             HMCLog.log("Extracting universal forge pack..." + profile.install.filePath);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/liteloader/LiteLoaderInstaller.java
Patch:
@@ -65,7 +65,7 @@ public boolean executeTask() {
             mv.libraries = new ArrayList(Arrays.asList(version.libraries));
 
             MinecraftLibrary ml = new MinecraftLibrary("com.mumfrey:liteloader:" + version.selfVersion);
-            ml.url = "http://dl.liteloader.com/versions/com/mumfrey/liteloader/" + version.mcVersion + "/liteloader-" + version.selfVersion + ".jar";
+            //ml.url = "http://dl.liteloader.com/versions/com/mumfrey/liteloader/" + version.mcVersion + "/liteloader-" + version.selfVersion + ".jar";
             mv.libraries.add(0, ml);
             FileUtils.copyFile(installer, new File(profile.getCanonicalGameDir(), "libraries/com/mumfrey/liteloader/" + version.selfVersion + "/liteloader-" + version.selfVersion + ".jar"));
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/ForgeInstaller.java
Patch:
@@ -42,7 +42,6 @@
  */
 public class ForgeInstaller extends Task {
 
-    private final Gson gson = new Gson();
     public File gameDir;
     public File forgeInstaller;
     public IMinecraftProvider mp;
@@ -61,7 +60,7 @@ public boolean executeTask() {
             ZipFile zipFile = new ZipFile(forgeInstaller);
             ZipEntry entry = zipFile.getEntry("install_profile.json");
             String content = NetUtils.getStreamContent(zipFile.getInputStream(entry));
-            InstallProfile profile = gson.fromJson(content, InstallProfile.class);
+            InstallProfile profile = C.gsonPrettyPrinting.fromJson(content, InstallProfile.class);
 
             File from = new File(gameDir, "versions" + File.separator + profile.install.minecraft);
             if (!from.exists()) {
@@ -80,7 +79,7 @@ public boolean executeTask() {
             FileUtils.copyFile(new File(from, profile.install.minecraft + ".jar"),
                     new File(to, profile.install.target + ".jar"));
             HMCLog.log("Creating new version profile..." + profile.install.target + ".json");
-            FileUtils.write(new File(to, profile.install.target + ".json"), gson.toJson(profile.versionInfo));
+            FileUtils.write(new File(to, profile.install.target + ".json"), C.gsonPrettyPrinting.toJson(profile.versionInfo));
 
             HMCLog.log("Extracting universal forge pack..." + profile.install.filePath);
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/vanilla/MinecraftForgeVersionList.java
Patch:
@@ -67,7 +67,7 @@ public void refreshList(String[] needed) throws Exception {
                     if (!StrUtils.isBlank(v.branch))
                         ver = ver + "-" + v.branch;
                     String filename = root.artifact + "-" + ver + "-" + f[1] + "." + f[0];
-                    String url = root.webpath + "/" + ver + "/" + filename;
+                    String url = root.webpath + ver + "/" + filename;
                     switch (f[1]) {
                         case "installer":
                             iv.installer = url;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersionManager.java
Patch:
@@ -180,7 +180,9 @@ public boolean renameVersion(String from, String to) {
             File toJson = new File(toDir, to + ".json");
             File toJar = new File(toDir, to + ".jar");
             new File(toDir, from + ".json").renameTo(toJson);
-            new File(toDir, from + ".jar").renameTo(toJar);
+            File newJar = new File(toDir, from + ".jar");
+            if (newJar.exists())
+                newJar.renameTo(toJar);
             return true;
         } catch (IOException | JsonSyntaxException e) {
             HMCLog.warn("Failed to rename " + from + " to " + to + ", the json of this Minecraft is malformed.", e);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/MinecraftLoader.java
Patch:
@@ -129,10 +129,11 @@ private File reconstructAssets() {
         try {
             AssetsIndex index = (AssetsIndex) C.gson.fromJson(FileUtils.readFileToString(indexFile, "UTF-8"), AssetsIndex.class);
 
+            if (index == null) return assetsDir;
             if (index.isVirtual()) {
+                int cnt = 0;
                 HMCLog.log("Reconstructing virtual assets folder at " + virtualRoot);
                 int tot = index.getFileMap().entrySet().size();
-                int cnt = 0;
                 for (Map.Entry entry : index.getFileMap().entrySet()) {
                     File target = new File(virtualRoot, (String) entry.getKey());
                     File original = new File(new File(objectDir, ((AssetsObject) entry.getValue()).getHash().substring(0, 2)), ((AssetsObject) entry.getValue()).getHash());

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/GameLauncher.java
Patch:
@@ -126,7 +126,7 @@ public void launch(List str) {
             provider.onLaunch();
             ProcessBuilder builder = new ProcessBuilder(str);
             builder.directory(provider.getRunDirectory(get.getSelectedMinecraftVersion().id))
-                    .environment().put("APPDATA", get.getCanonicalGameDirFile().getParent());
+                    .environment().put("APPDATA", get.getCanonicalGameDirFile().getPath());
             JavaProcess jp = new JavaProcess(str, builder.start(), PROCESS_MANAGER);
             launchEvent.execute(jp);
         } catch (IOException e) {
@@ -158,7 +158,7 @@ public File makeLauncher(String launcherName, List str) throws IOException {
         if (isWin) {
             writer.write("@echo off");
             writer.newLine();
-            String appdata = IOUtils.tryGetCanonicalFilePath(get.getCanonicalGameDirFile().getParentFile());
+            String appdata = IOUtils.tryGetCanonicalFilePath(get.getCanonicalGameDirFile());
             if (appdata != null) {
                 writer.write("set appdata=" + appdata);
                 writer.newLine();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Launcher.java
Patch:
@@ -38,7 +38,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class Launcher {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -47,7 +47,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class Main implements NonConsumer {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/MinecraftLoader.java
Patch:
@@ -37,9 +37,9 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
-public class MinecraftLoader extends IMinecraftLoader {
+public class MinecraftLoader extends AbstractMinecraftLoader {
 
     private MinecraftVersion version;
     String text;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Config.java
Patch:
@@ -28,7 +28,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class Config {
     @SerializedName("last")

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Profile.java
Patch:
@@ -28,7 +28,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class Profile {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Settings.java
Patch:
@@ -35,7 +35,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class Settings {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/CrashReporter.java
Patch:
@@ -29,7 +29,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class CrashReporter implements Thread.UncaughtExceptionHandler {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsIndex.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AssetsIndex {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsLoader.java
Patch:
@@ -33,7 +33,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AssetsLoader extends Thread {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsLoaderListener.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface AssetsLoaderListener {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsMojangLoader.java
Patch:
@@ -34,7 +34,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AssetsMojangLoader extends IAssetsHandler {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsMojangOldLoader.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AssetsMojangOldLoader extends IAssetsHandler {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsObject.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AssetsObject {
     private String hash;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/Contents.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Contents {
     

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/IAssetsHandler.java
Patch:
@@ -37,7 +37,7 @@
 /**
  * Assets
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class IAssetsHandler {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/BestLogin.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class BestLogin extends IAuthenticator {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/IAuthenticator.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Login interface
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class IAuthenticator {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/LoginInfo.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class LoginInfo {
     public String username, password;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/OfflineAuthenticator.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class OfflineAuthenticator extends IAuthenticator {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/SkinmeAuthenticator.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class SkinmeAuthenticator extends IAuthenticator {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/UserProfileProvider.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class UserProfileProvider {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/YggdrasilAuthenticator.java
Patch:
@@ -35,7 +35,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class YggdrasilAuthenticator extends IAuthenticator {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/download/DownloadType.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public enum DownloadType {
     Mojang(C.i18n("download.mojang"), new MojangDownloadProvider()),

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/InstallProfile.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class InstallProfile {
     @SerializedName("install")

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/InstallerVersionList.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class InstallerVersionList implements Consumer<String[]> {
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/InstallerVersionNewerComparator.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class InstallerVersionNewerComparator implements Comparator<InstallerVersion> {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/PackMinecraftInstaller.java
Patch:
@@ -25,7 +25,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class PackMinecraftInstaller {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/ForgeInstaller.java
Patch:
@@ -38,7 +38,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ForgeInstaller extends Task {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/ForgeOldInstaller.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ForgeOldInstaller {
     

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/Install.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Install {
     public String profileName;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/bmcl/ForgeBMCLVersionList.java
Patch:
@@ -32,7 +32,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ForgeBMCLVersionList extends InstallerVersionList {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/bmcl/ForgeVersion.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ForgeVersion {
     public String time, minecraft, version, _id, __v;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/vanilla/MinecraftForgeVersionList.java
Patch:
@@ -29,7 +29,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftForgeVersionList extends InstallerVersionList {
     private static MinecraftForgeVersionList instance;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/vanilla/MinecraftForgeVersionRoot.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftForgeVersionRoot {
     public String artifact, webpath, adfly, homepage, name;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/liteloader/LiteLoaderInstaller.java
Patch:
@@ -31,7 +31,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LiteLoaderInstaller extends Task implements PreviousResultRegistrator<File> {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/liteloader/LiteLoaderVersionList.java
Patch:
@@ -32,7 +32,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LiteLoaderVersionList extends InstallerVersionList {
     private static LiteLoaderVersionList instance;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/liteloader/LiteLoaderVersionsRoot.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LiteLoaderVersionsRoot {
     public Map<String, LiteLoaderMCVersions> versions;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/OptiFineInstaller.java
Patch:
@@ -31,7 +31,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class OptiFineInstaller extends Task implements PreviousResultRegistrator<File>  {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/OptiFineVersion.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class OptiFineVersion {
     public String dl, ver, date, mirror, mcver;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/bmcl/OptiFineBMCLVersionList.java
Patch:
@@ -33,7 +33,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class OptiFineBMCLVersionList extends InstallerVersionList {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/vanilla/OptiFineDownloadFormatter.java
Patch:
@@ -25,7 +25,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class OptiFineDownloadFormatter extends Task implements PreviousResult<String> {
     String url, result;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/vanilla/OptiFineVersionList.java
Patch:
@@ -41,7 +41,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class OptiFineVersionList extends InstallerVersionList {
     private static OptiFineVersionList instance;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/IMinecraftLibrary.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class IMinecraftLibrary implements Cloneable {
     

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftClassicVersion.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftClassicVersion extends MinecraftVersion {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftLibrary.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftLibrary extends IMinecraftLibrary {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftOldLibrary.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftOldLibrary extends MinecraftLibrary {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersion.java
Patch:
@@ -28,7 +28,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftVersion implements Cloneable, Comparable<MinecraftVersion> {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/MinecraftVersionManager.java
Patch:
@@ -45,7 +45,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class MinecraftVersionManager extends IMinecraftProvider {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/Natives.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Natives implements Cloneable {
     public String windows, osx, linux;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/OS.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class OS {
     public String version, name;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/version/Rules.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Rules {
     public String action;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/DraggableFrame.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class DraggableFrame extends JFrame
         implements MouseListener, MouseMotionListener {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/GameSettingsPanel.java
Patch:
@@ -66,7 +66,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class GameSettingsPanel extends javax.swing.JPanel {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/HeaderTab.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class HeaderTab extends JLabel
         implements MouseListener {

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/LauncherSettingsPanel.java
Patch:
@@ -28,7 +28,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LauncherSettingsPanel extends javax.swing.JPanel {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/MainFrame.java
Patch:
@@ -48,7 +48,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class MainFrame extends DraggableFrame {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/MainPagePanel.java
Patch:
@@ -45,7 +45,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MainPagePanel extends javax.swing.JPanel {
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/NewProfileWindow.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class NewProfileWindow extends javax.swing.JDialog {
 

File: HMCL/src/main/java/org/jackhuang/mojang/util/LegacyPropertyMapSerializer.java
Patch:
@@ -16,7 +16,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LegacyPropertyMapSerializer
 	implements JsonSerializer<PropertyMap> {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/C.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class C {
     public static final Gson gsonPrettyPrinting = new GsonBuilder().setPrettyPrinting().create();

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/HMCLog.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class HMCLog {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/Configuration.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 
 public class Configuration {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/Level.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public enum Level {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/LogEvent.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LogEvent {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/LoggingException.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LoggingException extends RuntimeException {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/appender/AbstractAppender.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class AbstractAppender implements IAppender {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/appender/ConsoleAppender.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ConsoleAppender extends OutputStreamAppender {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/appender/IAppender.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface IAppender {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/appender/OutputStreamAppender.java
Patch:
@@ -28,7 +28,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class OutputStreamAppender extends AbstractAppender {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/layout/AbstractStringLayout.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class AbstractStringLayout implements ILayout<String> {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/layout/DefaultLayout.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class DefaultLayout extends AbstractStringLayout {
     private static final SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/layout/ILayout.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  * @param <T>
  */
 public interface ILayout<T extends Serializable> {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/logger/ILogger.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface ILogger {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/message/AbstractMessageFactory.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class AbstractMessageFactory
 	implements IMessageFactory {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/message/IMessage.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface IMessage extends Serializable {
     String getFormattedMessage();

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/message/IMessageFactory.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract interface IMessageFactory {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/message/ParameterizedMessage.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ParameterizedMessage
         implements IMessage {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/message/ParameterizedMessageFactory.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class ParameterizedMessageFactory extends AbstractMessageFactory {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/logging/message/SimpleMessage.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class SimpleMessage
 	implements IMessage {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/DoingDoneListener.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface DoingDoneListener<K> {
     /**

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/ProgressProvider.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class ProgressProvider {
     protected ProgressProviderListener ppl;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/ProgressProviderListener.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface ProgressProviderListener {
     void setProgress(int prog, int max);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/Task.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class Task extends ProgressProvider {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/TaskInfo.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class TaskInfo extends Task {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/TaskList.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class TaskList extends Thread {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/TaskRunnable.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class TaskRunnable extends TaskInfo {
     private final Runnable r;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/TaskRunnableArg1.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  * @param <T> Runnable&lt;T&gt;
  */
 public class TaskRunnableArg1<T> extends TaskInfo implements PreviousResultRegistrator<T> {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/TaskWindow.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class TaskWindow extends javax.swing.JDialog
         implements ProgressProviderListener, NonConsumer, DoingDoneListener<Task> {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/communication/PreviousResult.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  * @param <T> Task result type
  */
 public interface PreviousResult<T> {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/communication/PreviousResultRegistrator.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  * @param <T> Previous task result type
  */
 public interface PreviousResultRegistrator<T> {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/ContentGetAndShowTask.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ContentGetAndShowTask extends HTTPGetTask implements Event<String> {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/DownloadListener.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface DownloadListener extends ProgressProviderListener {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/FileDownloadTask.java
Patch:
@@ -38,7 +38,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 // This class downloads a file from a URL.
 public class FileDownloadTask extends Task implements PreviousResult<File>, PreviousResultRegistrator<String> {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/HTTPGetTask.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class HTTPGetTask extends TaskInfo implements PreviousResult<String> {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/NetException.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class NetException extends RuntimeException {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/ArrayUtils.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ArrayUtils {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/CollectionUtils.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class CollectionUtils {
     public static <T> void forEach(Collection<T> coll, Consumer<T> p) {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/DoubleOutputStream.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class DoubleOutputStream extends OutputStream {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/LauncherPrintStream.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LauncherPrintStream extends PrintStream {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/Pair.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  * @param <K> K Type
  * @param <V> V Type
  */

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/ReflectUtils.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ReflectUtils {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/TextComponentOutputStream.java
Patch:
@@ -22,7 +22,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class TextComponentOutputStream extends OutputStream {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/UpdateChecker.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class UpdateChecker extends Thread {
     public static boolean OUT_DATED = false;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/Utils.java
Patch:
@@ -41,7 +41,7 @@
 import org.jackhuang.hellominecraft.HMCLog;
 
 /**
- * @author hyh
+ * @author huangyuhui
  */
 public final class Utils {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/VersionNumber.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class VersionNumber implements Comparable<VersionNumber> {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/code/Base64.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Base64 {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/code/DigestUtils.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class DigestUtils {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/BiConsumer.java
Patch:
@@ -17,7 +17,7 @@
 package org.jackhuang.hellominecraft.utils.functions;
 
 /**
- * @author hyh
+ * @author huangyuhui
  */
 public interface BiConsumer<V, V2> {
     void onDone(V value, V2 value2);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/FalseFunction.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class FalseFunction implements NonFunction<Boolean> {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/NonConsumer.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface NonConsumer {
     void onDone();

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/NonFunction.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface NonFunction<T> {
     T onDone();

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/Predicate.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface Predicate<T> {
     boolean apply(T t);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/TriConsumer.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface TriConsumer<V1, V2, V3> {
     void onDone(V1 v1, V2 v2, V3 v3);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/functions/TrueFunction.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class TrueFunction implements NonFunction<Boolean> {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/Compressor.java
Patch:
@@ -31,7 +31,7 @@
 /**
  * 文件压缩/解压类
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Compressor {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/FileUtils.java
Patch:
@@ -31,7 +31,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class FileUtils {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/JavaProcess.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class JavaProcess {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/JdkVersion.java
Patch:
@@ -16,7 +16,6 @@
  */
 package org.jackhuang.hellominecraft.utils.system;
 
-import org.jackhuang.hellominecraft.utils.system.Platform;
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.IOException;
@@ -29,7 +28,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class JdkVersion {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/MessageBox.java
Patch:
@@ -20,7 +20,7 @@
 import org.jackhuang.hellominecraft.C;
   
 /**  
- * @author hyh  
+ * @author huangyuhui  
  */  
 public class MessageBox   
 {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/OS.java
Patch:
@@ -21,7 +21,7 @@
 import org.jackhuang.hellominecraft.HMCLog;
 
 /**
- * @author hyh
+ * @author huangyuhui
  */
 public enum OS {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/ProcessThread.java
Patch:
@@ -25,7 +25,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ProcessThread extends Thread {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/version/MinecraftRemoteLatestVersion.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftRemoteLatestVersion {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/version/MinecraftRemoteVersion.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftRemoteVersion {
 

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/version/MinecraftRemoteVersions.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftRemoteVersions {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/version/MinecraftVersionRequest.java
Patch:
@@ -19,7 +19,7 @@
 import org.jackhuang.hellominecraft.C;
 
 /**
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftVersionRequest {
     public static final int Unkown = 0, Invaild = 1, InvaildJar = 2,

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/views/BasicColors.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class BasicColors {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/views/LogWindow.java
Patch:
@@ -27,7 +27,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class LogWindow extends javax.swing.JFrame {
     

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/views/Selector.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  * The frame given to choose things.
- * @author hyh
+ * @author huangyuhui
  */
 public class Selector extends javax.swing.JDialog {
     String[] selList;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/Main.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Main {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/cbplugins/BukkitPlugin.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class BukkitPlugin {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/cbplugins/Category.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Category {
     public double count;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/cbplugins/PluginInfo.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class PluginInfo {
     public String website, dbo_page, description, slug, plugin_name,

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/cbplugins/PluginInformation.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class PluginInformation {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/cbplugins/PluginManager.java
Patch:
@@ -19,7 +19,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class PluginManager {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/cbplugins/PluginVersion.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class PluginVersion {
     public long date;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/bukkit/BukkitFormatThread.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class BukkitFormatThread extends Thread {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/bukkit/BukkitVersion.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class BukkitVersion {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/ForgeFormatThread.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ForgeFormatThread extends Thread {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/ForgeInstaller.java
Patch:
@@ -37,7 +37,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ForgeInstaller {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/ForgeVersion.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ForgeVersion {
     public String vername, ver, mcver, releasetime, changelog;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/Install.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Install {
     public String profileName, target, path, version, filePath, welcome, minecraft, mirrorList, logo;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/InstallProfile.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class InstallProfile {
     public Install install;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/MinecraftLibrary.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftLibrary {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/MinecraftVersion.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MinecraftVersion {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/ScheduleTranslator.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ScheduleTranslator {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/Server.java
Patch:
@@ -38,7 +38,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Server implements Event<Integer>, MonitorThread.MonitorThreadListener,
 	ActionListener {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/ServerChecker.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ServerChecker {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/backups/BackupManager.java
Patch:
@@ -16,7 +16,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class BackupManager {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/download/ServerDownloadPackage.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ServerDownloadPackage {
     public String mcversion, version, forgeversion, majorversion, file;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedules/AutoBackupSchedule.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AutoBackupSchedule extends TimerTask {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedules/AutoBroadcastSchedule.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AutoBroadcastSchedule extends TimerTask {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedules/AutoExecuteSchedule.java
Patch:
@@ -12,7 +12,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AutoExecuteSchedule extends TimerTask {
     Schedule main;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedules/AutoRestartSchedule.java
Patch:
@@ -9,7 +9,7 @@
 import org.jackhuang.hellominecraft.svrmgr.settings.Schedule;
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AutoRestartSchedule extends TimerTask {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedules/AutoSaveSchedule.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AutoSaveSchedule extends TimerTask {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedules/AutoSchedule.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public abstract class AutoSchedule extends TimerTask {
     Schedule main;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/schedules/AutoSendCommandSchedule.java
Patch:
@@ -9,7 +9,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class AutoSendCommandSchedule extends AutoSchedule {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/BannedPlayers.java
Patch:
@@ -11,7 +11,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class BannedPlayers extends PlayerList<BannedPlayers.BannedPlayer> {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/Op.java
Patch:
@@ -7,7 +7,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Op extends PlayerList<Op.Operator> {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/PlayerList.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  * @param <T> Player type.
  */
 public abstract class PlayerList<T extends BasePlayer> {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/Schedule.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Schedule {
     public static final int 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/Settings.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Settings {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/SettingsManager.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 import com.google.gson.Gson;
 import java.io.File;
@@ -17,7 +17,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class SettingsManager {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/WhiteList.java
Patch:
@@ -8,7 +8,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class WhiteList extends PlayerList<WhiteList.WhiteListPlayer> {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/threads/MonitorThread.java
Patch:
@@ -14,7 +14,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MonitorThread extends Thread {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/utils/IMonitorService.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface IMonitorService {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/utils/IPGet.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class IPGet extends Thread {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/utils/ModType.java
Patch:
@@ -13,7 +13,7 @@
 
 /**
  * 判断mod类型
- * @author hyh
+ * @author huangyuhui
  */
 public class ModType {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/utils/MonitorInfoBean.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class MonitorInfoBean {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/utils/Utilities.java
Patch:
@@ -10,7 +10,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class Utilities {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/views/CommandsWindow.java
Patch:
@@ -6,7 +6,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class CommandsWindow extends javax.swing.JDialog {
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/views/InputDialog.java
Patch:
@@ -16,7 +16,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class InputDialog extends javax.swing.JDialog {
     

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/views/MainWindow.java
Patch:
@@ -79,7 +79,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public final class MainWindow extends javax.swing.JFrame
         implements MonitorThread.MonitorThreadListener, Event<Integer> {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/views/PluginInfoDialog.java
Patch:
@@ -15,7 +15,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class PluginInfoDialog extends javax.swing.JDialog {
 

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/HelloMinecraftLookAndFeel.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class HelloMinecraftLookAndFeel extends SynthLookAndFeel {
 

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/components/ConstomButton.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public class ConstomButton extends javax.swing.JButton {
     public Color normalFg = GraphicsUtils.getWebColorWithAlpha("DDDDDD3F"), normalBg = GraphicsUtils.getWebColorWithAlpha("DDDDDD3F"),

File: MetroLookAndFeel/src/main/java/org/jackhuang/hellominecraft/lookandfeel/components/IConstomable.java
Patch:
@@ -18,7 +18,7 @@
 
 /**
  *
- * @author hyh
+ * @author huangyuhui
  */
 public interface IConstomable {
     boolean constomBackground();

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Launcher.java
Patch:
@@ -18,8 +18,6 @@
 
 import java.io.File;
 import java.io.FileOutputStream;
-import java.io.PrintWriter;
-import java.io.StringWriter;
 import java.lang.reflect.Method;
 import java.net.URL;
 import java.net.URLClassLoader;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Main.java
Patch:
@@ -34,7 +34,7 @@
 import org.jackhuang.hellominecraft.utils.functions.NonConsumer;
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.launcher.launch.GameLauncher;
-import org.jackhuang.hellominecraft.launcher.utils.CrashReport;
+import org.jackhuang.hellominecraft.launcher.utils.CrashReporter;
 import org.jackhuang.hellominecraft.logging.Configuration;
 import org.jackhuang.hellominecraft.logging.appender.ConsoleAppender;
 import org.jackhuang.hellominecraft.logging.layout.DefaultLayout;
@@ -77,7 +77,7 @@ public static String makeTitle() {
 
     public static void main(String[] args) {
         {
-            Thread.setDefaultUncaughtExceptionHandler(new CrashReport(true));
+            Thread.setDefaultUncaughtExceptionHandler(new CrashReporter(true));
 
             try {
                 File file = new File("hmcl.log");

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/GameLauncher.java
Patch:
@@ -30,8 +30,8 @@
 import org.jackhuang.hellominecraft.launcher.utils.auth.UserProfileProvider;
 import org.jackhuang.hellominecraft.launcher.utils.download.DownloadType;
 import org.jackhuang.hellominecraft.launcher.settings.Profile;
-import org.jackhuang.hellominecraft.utils.FileUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.system.JavaProcess;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 import org.jackhuang.hellominecraft.utils.system.OS;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/MinecraftLoader.java
Patch:
@@ -24,15 +24,15 @@
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.launcher.utils.auth.UserProfileProvider;
 import org.jackhuang.hellominecraft.launcher.settings.Profile;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.launcher.utils.MCUtils;
 import org.jackhuang.hellominecraft.launcher.utils.assets.AssetsIndex;
 import org.jackhuang.hellominecraft.launcher.utils.assets.AssetsObject;
 import org.jackhuang.hellominecraft.launcher.utils.download.DownloadType;
 import org.jackhuang.hellominecraft.utils.system.OS;
 import org.jackhuang.hellominecraft.launcher.version.MinecraftLibrary;
 import org.jackhuang.hellominecraft.launcher.version.MinecraftVersion;
-import org.jackhuang.hellominecraft.utils.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 
 /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Profile.java
Patch:
@@ -18,7 +18,7 @@
 
 import java.io.File;
 import org.jackhuang.hellominecraft.launcher.launch.IMinecraftProvider;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.launcher.utils.MCUtils;
 import org.jackhuang.hellominecraft.launcher.version.GameDirType;
 import org.jackhuang.hellominecraft.utils.StrUtils;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/settings/Settings.java
Patch:
@@ -26,8 +26,8 @@
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.launcher.Main;
 import org.jackhuang.hellominecraft.utils.CollectionUtils;
-import org.jackhuang.hellominecraft.utils.FileUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 import org.jackhuang.hellominecraft.utils.StrUtils;
 import org.jackhuang.hellominecraft.utils.UpdateChecker;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/CrashReporter.java
Patch:
@@ -31,11 +31,11 @@
  *
  * @author hyh
  */
-public class CrashReport implements Thread.UncaughtExceptionHandler {
+public class CrashReporter implements Thread.UncaughtExceptionHandler {
 
     boolean enableLogger = false;
 
-    public CrashReport(boolean enableLogger) {
+    public CrashReporter(boolean enableLogger) {
         this.enableLogger = enableLogger;
     }
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/MCUtils.java
Patch:
@@ -31,8 +31,8 @@
 import org.jackhuang.hellominecraft.tasks.TaskWindow;
 import org.jackhuang.hellominecraft.tasks.download.FileDownloadTask;
 import org.jackhuang.hellominecraft.utils.ArrayUtils;
-import org.jackhuang.hellominecraft.utils.FileUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.version.MinecraftVersionRequest;
 import org.jackhuang.hellominecraft.utils.NetUtils;
 import org.jackhuang.hellominecraft.utils.system.OS;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/AssetsMojangLoader.java
Patch:
@@ -24,8 +24,8 @@
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.launcher.settings.Settings;
 import org.jackhuang.hellominecraft.tasks.Task;
-import org.jackhuang.hellominecraft.utils.FileUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.StrUtils;
 import org.jackhuang.hellominecraft.launcher.utils.MCUtils;
 import org.jackhuang.hellominecraft.launcher.utils.download.IDownloadProvider;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/assets/IAssetsHandler.java
Patch:
@@ -31,7 +31,7 @@
 import org.jackhuang.hellominecraft.tasks.download.FileDownloadTask;
 import org.jackhuang.hellominecraft.utils.functions.Consumer;
 import org.jackhuang.hellominecraft.utils.code.DigestUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.NetUtils;
 
 /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/PackMinecraftInstaller.java
Patch:
@@ -20,8 +20,8 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import org.jackhuang.hellominecraft.utils.system.Compressor;
-import org.jackhuang.hellominecraft.utils.FileUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/forge/ForgeInstaller.java
Patch:
@@ -31,7 +31,7 @@
 import org.jackhuang.hellominecraft.launcher.launch.IMinecraftProvider;
 import org.jackhuang.hellominecraft.launcher.settings.Settings;
 import org.jackhuang.hellominecraft.tasks.Task;
-import org.jackhuang.hellominecraft.utils.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
 import org.jackhuang.hellominecraft.utils.NetUtils;
 import org.jackhuang.hellominecraft.launcher.version.MinecraftLibrary;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/liteloader/LiteLoaderInstaller.java
Patch:
@@ -25,7 +25,7 @@
 import org.jackhuang.hellominecraft.tasks.communication.PreviousResult;
 import org.jackhuang.hellominecraft.tasks.communication.PreviousResultRegistrator;
 import org.jackhuang.hellominecraft.launcher.settings.Profile;
-import org.jackhuang.hellominecraft.utils.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
 import org.jackhuang.hellominecraft.launcher.version.MinecraftLibrary;
 import org.jackhuang.hellominecraft.launcher.version.MinecraftVersion;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/OptiFineInstaller.java
Patch:
@@ -25,7 +25,7 @@
 import org.jackhuang.hellominecraft.tasks.Task;
 import org.jackhuang.hellominecraft.tasks.communication.PreviousResult;
 import org.jackhuang.hellominecraft.tasks.communication.PreviousResultRegistrator;
-import org.jackhuang.hellominecraft.utils.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
 import org.jackhuang.hellominecraft.launcher.version.MinecraftLibrary;
 import org.jackhuang.hellominecraft.launcher.version.MinecraftVersion;
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/GameSettingsPanel.java
Patch:
@@ -54,7 +54,7 @@
 import org.jackhuang.hellominecraft.tasks.communication.DefaultPreviousResult;
 import org.jackhuang.hellominecraft.tasks.download.FileDownloadTask;
 import org.jackhuang.hellominecraft.tasks.download.HTTPGetTask;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 import org.jackhuang.hellominecraft.version.MinecraftVersionRequest;
 import org.jackhuang.hellominecraft.utils.system.OS;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/views/LauncherSettingsPanel.java
Patch:
@@ -23,7 +23,7 @@
 import org.jackhuang.hellominecraft.C;
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.launcher.settings.Settings;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 
 /**

File: HMCL/src/main/java/org/jackhuang/mojang/authlib/HttpAuthenticationService.java
Patch:
@@ -11,7 +11,7 @@
 import java.util.Map;
 import java.util.Objects;
 import org.jackhuang.hellominecraft.logging.logger.Logger;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.NetUtils;
 
 public abstract class HttpAuthenticationService extends BaseAuthenticationService {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/tasks/download/FileDownloadTask.java
Patch:
@@ -34,7 +34,7 @@
 import org.jackhuang.hellominecraft.tasks.Task;
 import org.jackhuang.hellominecraft.tasks.communication.PreviousResult;
 import org.jackhuang.hellominecraft.tasks.communication.PreviousResultRegistrator;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 
 /**
  *

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/Compressor.java
Patch:
@@ -26,7 +26,6 @@
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 import java.util.zip.ZipOutputStream;
-import org.jackhuang.hellominecraft.utils.IOUtils;
 import org.jackhuang.hellominecraft.utils.StrUtils;
 
 /**

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/FileUtils.java
Patch:
@@ -14,7 +14,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.
  */
-package org.jackhuang.hellominecraft.utils;
+package org.jackhuang.hellominecraft.utils.system;
 
 import java.io.File;
 import java.io.FileFilter;
@@ -27,6 +27,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import org.jackhuang.hellominecraft.HMCLog;
+import org.jackhuang.hellominecraft.utils.NetUtils;
 
 /**
  *

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/IOUtils.java
Patch:
@@ -14,7 +14,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.
  */
-package org.jackhuang.hellominecraft.utils;
+package org.jackhuang.hellominecraft.utils.system;
 
 import org.jackhuang.hellominecraft.utils.system.OS;
 import java.io.ByteArrayOutputStream;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/system/JdkVersion.java
Patch:
@@ -25,7 +25,6 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import org.jackhuang.hellominecraft.HMCLog;
-import org.jackhuang.hellominecraft.utils.FileUtils;
 import org.jackhuang.hellominecraft.utils.StrUtils;
 
 /**

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/views/LogWindow.java
Patch:
@@ -76,7 +76,8 @@ private void initComponents() {
         btnGitHub = new javax.swing.JButton();
 
         setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
-        setTitle("Log");
+        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jackhuang/hellominecraft/launcher/I18N"); // NOI18N
+        setTitle(bundle.getString("logwindow.title")); // NOI18N
         addWindowListener(new java.awt.event.WindowAdapter() {
             public void windowClosed(java.awt.event.WindowEvent evt) {
                 formWindowClosed(evt);
@@ -88,7 +89,6 @@ public void windowClosed(java.awt.event.WindowEvent evt) {
         txtLog.setRows(5);
         jScrollPane1.setViewportView(txtLog);
 
-        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jackhuang/hellominecraft/launcher/I18N"); // NOI18N
         btnClear.setText(bundle.getString("ui.button.clear")); // NOI18N
         btnClear.addActionListener(new java.awt.event.ActionListener() {
             public void actionPerformed(java.awt.event.ActionEvent evt) {

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/installer/cauldron/ForgeInstaller.java
Patch:
@@ -26,8 +26,8 @@
 import javax.swing.JOptionPane;
 import org.jackhuang.hellominecraft.HMCLog;
 import org.jackhuang.hellominecraft.utils.code.DigestUtils;
-import org.jackhuang.hellominecraft.utils.FileUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 import org.jackhuang.hellominecraft.utils.NetUtils;
 import org.jackhuang.hellominecraft.utils.StrUtils;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/server/Server.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 import org.jackhuang.hellominecraft.HMCLog;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 import org.jackhuang.hellominecraft.utils.Pair;
 import org.jackhuang.hellominecraft.utils.StrUtils;

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/PlayerList.java
Patch:
@@ -11,7 +11,7 @@
 import java.util.HashSet;
 import java.util.UUID;
 import org.jackhuang.hellominecraft.HMCLog;
-import org.jackhuang.hellominecraft.utils.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
 import org.jackhuang.hellominecraft.utils.StrUtils;
 import org.jackhuang.hellominecraft.svrmgr.settings.PlayerList.BasePlayer;
 

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/settings/SettingsManager.java
Patch:
@@ -12,8 +12,8 @@
 import java.io.File;
 import java.io.IOException;
 import org.jackhuang.hellominecraft.HMCLog;
-import org.jackhuang.hellominecraft.utils.FileUtils;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 
 /**
  *

File: HMCSM/src/main/java/org/jackhuang/hellominecraft/svrmgr/views/MainWindow.java
Patch:
@@ -39,9 +39,9 @@
 import org.jackhuang.hellominecraft.tasks.TaskWindow;
 import org.jackhuang.hellominecraft.tasks.download.FileDownloadTask;
 import org.jackhuang.hellominecraft.tasks.download.HTTPGetTask;
-import org.jackhuang.hellominecraft.utils.FileUtils;
+import org.jackhuang.hellominecraft.utils.system.FileUtils;
 import org.jackhuang.hellominecraft.svrmgr.utils.IMonitorService;
-import org.jackhuang.hellominecraft.utils.IOUtils;
+import org.jackhuang.hellominecraft.utils.system.IOUtils;
 import org.jackhuang.hellominecraft.utils.system.MessageBox;
 import org.jackhuang.hellominecraft.svrmgr.utils.ModType;
 import org.jackhuang.hellominecraft.svrmgr.utils.MonitorInfoBean;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/IMinecraftLoader.java
Patch:
@@ -80,7 +80,6 @@ public void makeHeadCommand(List<String> res) {
             res.addAll(Arrays.asList(StrUtils.tokenize(v.getJavaArgs())));
 
         if (!v.isNoJVMArgs() && !(jv != null && jv.isEarlyAccess())) {
-            //res.add("-Xincgc");
             res.add("-XX:+UseConcMarkSweepGC");
             res.add("-XX:+CMSIncrementalMode");
             res.add("-XX:-UseAdaptiveSizePolicy");
@@ -107,14 +106,14 @@ public void makeHeadCommand(List<String> res) {
         }
 
         if (!StrUtils.isBlank(v.getPermSize()) && !v.isNoJVMArgs())
-            if (jv != null && jv.getVersion() != null && (jv.getVersion().startsWith("1.8") || jv.getVersion().startsWith("1.9")));
+            if (jv != null && jv.getParsedVersion() >= JdkVersion.JAVA_18);
             else res.add("-XX:MaxPermSize=" + v.getPermSize() + "m");
 
         if (!v.isNoJVMArgs()) appendJVMArgs(res);
 
         HMCLog.log("On making java.library.path.");
 
-        res.add("-Djava.library.path=" + provider.getDecompressNativesToLocation().getPath());//v.getSelectedMinecraftVersion().getNatives(v.getCanonicalGameDirFile()));
+        res.add("-Djava.library.path=" + provider.getDecompressNativesToLocation().getPath());
         res.add("-Dfml.ignoreInvalidMinecraftCertificates=true");
         res.add("-Dfml.ignorePatchDiscrepancies=true");
 

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/auth/OfflineAuthenticator.java
Patch:
@@ -38,12 +38,12 @@ public UserProfileProvider login(LoginInfo info) {
         String uuid = getUUIDFromUserName(info.username);
         result.setSession(uuid);
         result.setUserId(uuid);
-        result.setAccessToken("${auth_access_token}");
+        result.setAccessToken("0");
         result.setUserType("Legacy");
         result.setErrorReason(C.i18n("login.no_Player007"));
         return result;
     }
-    
+
     public static String getUUIDFromUserName(String str) {
         String md5 = DigestUtils.md5Hex(str);
         return md5.substring(0, 8) + '-' + md5.substring(8, 12) + '-' + md5.substring(12, 16) + '-' + md5.substring(16, 21) + md5.substring(21);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Launcher.java
Patch:
@@ -105,7 +105,7 @@ public static void main(String[] args) {
             return;
         }
 
-        if (!JdkVersion.isJava64Bit() && Platform.getPlatform() == Platform.BIT_32)
+        if (!JdkVersion.isJava64Bit() && Platform.getPlatform() == Platform.BIT_64)
             MessageBox.Show(C.i18n("advice.os64butjdk32"));
 
         Method minecraftMain;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/settings/Config.java
Patch:
@@ -44,7 +44,7 @@ public final class Config {
     private boolean enableShadow;
     @SerializedName("theme")
     private int theme;
-    
+    @SerializedName("java")
     private List<JdkVersion> java;
 
     public List<JdkVersion> getJava() {

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/OS.java
Patch:
@@ -62,7 +62,7 @@ public static long getTotalPhysicalMemory() {
             OperatingSystemMXBean o = (OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();
             return o.getTotalPhysicalMemorySize();
         } catch(Throwable t) {
-            HMCLog.warn("Failed to get total physical memory size", t);
+            HMCLog.warn("Failed to get total physical memory size");
             return -1;
         }
     }

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/Platform.java
Patch:
@@ -50,7 +50,6 @@ public String getBit() {
     public abstract String getBit();
     
     public static Platform getPlatform() {
-	String arch = System.getProperty("os.arch");
-	return arch.contains("64") ? Platform.BIT_64 : Platform.BIT_32;
+	return System.getProperty("os.arch").contains("64") ? BIT_64 : BIT_32;
     }
 }

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/IMinecraftLoader.java
Patch:
@@ -88,12 +88,12 @@ public void makeHeadCommand(List<String> res) {
             res.add("-Xmn128m");
         }
 
-        if (jv != null && jv.platform == Platform.BIT_32 && Platform.getPlatform() == Platform.BIT_64)
+        if (jv != null && jv.getPlatform() == Platform.BIT_32 && Platform.getPlatform() == Platform.BIT_64)
             MessageBox.Show(C.i18n("advice.os64butjdk32"));
 
         if (!StrUtils.isBlank(v.getMaxMemory())) {
             int mem = MathUtils.parseMemory(v.getMaxMemory(), 2147483647);
-            if (jv != null && jv.platform == Platform.BIT_32 && mem > 1024)
+            if (jv != null && jv.getPlatform() == Platform.BIT_32 && mem > 1024)
                 MessageBox.Show(C.i18n("launch.too_big_memory_alloc_64bit"));
             else {
                 long a = OS.getTotalPhysicalMemory() / 1024 / 1024;
@@ -107,7 +107,7 @@ public void makeHeadCommand(List<String> res) {
         }
 
         if (!StrUtils.isBlank(v.getPermSize()) && !v.isNoJVMArgs())
-            if (jv != null && jv.ver != null && (jv.ver.startsWith("1.8") || jv.ver.startsWith("1.9")));
+            if (jv != null && jv.getVersion() != null && (jv.getVersion().startsWith("1.8") || jv.getVersion().startsWith("1.9")));
             else res.add("-XX:MaxPermSize=" + v.getPermSize() + "m");
 
         if (!v.isNoJVMArgs()) appendJVMArgs(res);

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/installers/optifine/vanilla/OptiFineDownloadFormatter.java
Patch:
@@ -18,6 +18,7 @@
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+import org.jackhuang.hellominecraft.C;
 import org.jackhuang.hellominecraft.tasks.Task;
 import org.jackhuang.hellominecraft.tasks.communication.PreviousResult;
 import org.jackhuang.hellominecraft.utils.NetUtils;
@@ -50,7 +51,7 @@ public boolean executeTask() {
 
     @Override
     public String getInfo() {
-        return "Get OptiFine Download Link.";
+        return C.i18n("install.optifine.get_download_link");
     }
 
     @Override

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/settings/Settings.java
Patch:
@@ -86,7 +86,7 @@ private static Config initSettings() {
                     System.exit(1);
                 }
             }
-            isFirstLoad = StrUtils.isBlank(settings.getUsername());
+            isFirstLoad = StrUtils.isBlank(c.getUsername());
         } else {
             HMCLog.log("No settings file here, may be first loading.");
             isFirstLoad = true;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/Launcher.java
Patch:
@@ -36,6 +36,7 @@
 import org.jackhuang.hellominecraft.utils.LauncherPrintStream;
 import org.jackhuang.hellominecraft.utils.MessageBox;
 import org.jackhuang.hellominecraft.utils.OS;
+import org.jackhuang.hellominecraft.utils.Platform;
 import org.jackhuang.hellominecraft.utils.Utils;
 
 /**
@@ -105,7 +106,7 @@ public static void main(String[] args) {
             return;
         }
 
-        if (!JdkVersion.isJava64Bit() && OS.is64Bit())
+        if (!JdkVersion.isJava64Bit() && OS.getPlatform() == Platform.BIT_32)
             MessageBox.Show(C.i18n("advice.os64butjdk32"));
 
         Method minecraftMain;

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/BaseLauncherProfile.java
Patch:
@@ -14,10 +14,11 @@
  * You should have received a copy of the GNU General Public License
  * along with this program.
  */
-package org.jackhuang.hellominecraft.utils;
+package org.jackhuang.hellominecraft.launcher.utils;
 
 import java.io.File;
 import java.io.IOException;
+import org.jackhuang.hellominecraft.utils.FileUtils;
 
 /**
  *

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/utils/version/MinecraftVersionManager.java
Patch:
@@ -32,7 +32,7 @@
 import org.jackhuang.hellominecraft.launcher.launch.IMinecraftLoader;
 import org.jackhuang.hellominecraft.launcher.launch.IMinecraftProvider;
 import org.jackhuang.hellominecraft.launcher.launch.MinecraftLoader;
-import org.jackhuang.hellominecraft.utils.BaseLauncherProfile;
+import org.jackhuang.hellominecraft.launcher.utils.BaseLauncherProfile;
 import org.jackhuang.hellominecraft.utils.FileUtils;
 import org.jackhuang.hellominecraft.launcher.utils.MCUtils;
 import org.jackhuang.hellominecraft.launcher.utils.auth.UserProfileProvider;

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/utils/OS.java
Patch:
@@ -54,9 +54,9 @@ public static OS os() {
         return OS.UNKOWN;
     }
     
-    public static boolean is64Bit() {
+    public static Platform getPlatform() {
 	String arch = System.getProperty("os.arch");
-	return arch.contains("64");
+	return arch.contains("64") ? Platform.BIT_64 : Platform.BIT_32;
     }
     
     /**

File: HMCL/src/main/java/org/jackhuang/hellominecraft/launcher/launch/DefaultGameLauncher.java
Patch:
@@ -46,8 +46,7 @@ private void register() {
         downloadLibrariesEvent.register((sender, t) -> {
             final TaskWindow dw = TaskWindow.getInstance();
             ParallelTask parallelTask = new ParallelTask();
-            for (DownloadLibraryJob o : t) {
-                final DownloadLibraryJob s = (DownloadLibraryJob) o;
+            for (DownloadLibraryJob s : t) {
                 parallelTask.addDependsTask(new FileDownloadTask(s.url, s.path).setTag(s.name));
             }
             dw.addTask(parallelTask);

File: HMCLAPI/src/main/java/org/jackhuang/hellominecraft/C.java
Patch:
@@ -34,6 +34,7 @@ public final class C {
     
     public static final String URL_PUBLISH = "http://www.mcbbs.net/thread-142335-1-1.html";
     public static final String URL_TIEBA = "http://tieba.baidu.com/f?kw=hellominecraftlauncher";
+    public static final String URL_GITHUB = "https://github.com/huanghongxun/HMCL/issues";
     public static final String URL_MINECRAFTFORUM = "http://www.minecraftforum.net/forums/mapping-and-modding/minecraft-tools/1265720-hello-minecraft-launcher-1-9-3-mc-1-7-4-auto";
     
     public static final String FILE_MINECRAFT_VERSIONS = "versions";

