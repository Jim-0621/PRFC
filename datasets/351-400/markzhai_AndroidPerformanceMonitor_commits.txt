File: blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
Patch:
@@ -124,7 +124,7 @@ static String getPath() {
                 && Environment.getExternalStorageDirectory().canWrite()) {
             return Environment.getExternalStorageDirectory().getPath() + logPath;
         }
-        return Environment.getDataDirectory().getAbsolutePath() + BlockCanaryInternals.getContext().providePath();
+        return getContext().provideContext().getFilesDir() + BlockCanaryInternals.getContext().providePath();
     }
 
     static File detectedBlockDirectory() {

File: blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
Patch:
@@ -124,7 +124,7 @@ static String getPath() {
                 && Environment.getExternalStorageDirectory().canWrite()) {
             return Environment.getExternalStorageDirectory().getPath() + logPath;
         }
-        return Environment.getDataDirectory().getAbsolutePath() + BlockCanaryInternals.getContext().providePath();
+        return getContext().provideContext().getFilesDir() + BlockCanaryInternals.getContext().providePath();
     }
 
     static File detectedBlockDirectory() {

File: blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/BlockCanaryInternals.java
Patch:
@@ -69,7 +69,7 @@ public void onBlockEvent(long realTimeStart, long realTimeEnd,
                     }
                 }
             }
-        }, getContext().provideBlockThreshold()));
+        }, getContext().provideBlockThreshold(), getContext().stopWhenDebugging()));
 
         LogWriter.cleanObsolete();
     }

File: blockcanary-analyzer/src/main/java/com/github/moduth/blockcanary/internal/BlockInfo.java
Patch:
@@ -118,7 +118,7 @@ public class BlockInfo {
         }
     }
 
-    protected BlockInfo() {
+    private BlockInfo() {
     }
 
     public static BlockInfo newInstance() {

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/BlockCanaryUtils.java
Patch:
@@ -17,7 +17,9 @@ final class BlockCanaryUtils {
     static {
         WHITE_LIST.addAll(BlockCanaryInternals.getContext().provideWhiteList());
 
-        CONCERN_LIST.addAll(BlockCanaryInternals.getContext().concernPackages());
+        if (BlockCanaryInternals.getContext().concernPackages() != null) {
+            CONCERN_LIST.addAll(BlockCanaryInternals.getContext().concernPackages());
+        }
         if (CONCERN_LIST.isEmpty()) {
             CONCERN_LIST.add(ProcessUtils.myProcessName());
         }

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayActivity.java
Patch:
@@ -302,7 +302,7 @@ private BlockInfo getBlock(String startTime) {
             return null;
         }
         for (BlockInfo blockInfo : mBlockInfoEntries) {
-            if (blockInfo.timeStart.equals(startTime)) {
+            if (blockInfo.timeStart != null && startTime.equals(blockInfo.timeStart)) {
                 return blockInfo;
             }
         }

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java
Patch:
@@ -25,6 +25,7 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.Looper;
+import android.text.TextUtils;
 import android.text.format.DateUtils;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -304,7 +305,7 @@ public void onClick(View v) {
     }
 
     private Block getBlock(String startTime) {
-        if (mBlockEntries == null) {
+        if (mBlockEntries == null || TextUtils.isEmpty(startTime)) {
             return null;
         }
         for (Block block : mBlockEntries) {

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/BlockDetailAdapter.java
Patch:
@@ -22,12 +22,10 @@
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
 import android.widget.TextView;
-
 import com.github.moduth.blockcanary.BlockCanaryCore;
-import com.github.moduth.blockcanary.ui.R;
+import com.github.moduth.blockcanary.R;
 import com.github.moduth.blockcanary.log.Block;
 import com.github.moduth.blockcanary.log.ProcessUtils;
-
 import java.util.Arrays;
 
 final class BlockDetailAdapter extends BaseAdapter {

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java
Patch:
@@ -38,11 +38,10 @@
 import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.TextView;
-
 import com.github.moduth.blockcanary.LogWriter;
+import com.github.moduth.blockcanary.R;
 import com.github.moduth.blockcanary.log.Block;
 import com.github.moduth.blockcanary.log.BlockCanaryInternals;
-
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Collections;

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
Patch:
@@ -6,9 +6,8 @@
 import android.app.PendingIntent;
 import android.content.Context;
 import android.content.Intent;
-
 import com.github.moduth.blockcanary.OnBlockEventInterceptor;
-import com.github.moduth.blockcanary.ui.R;
+import com.github.moduth.blockcanary.R;
 
 import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
 import static android.os.Build.VERSION.SDK_INT;

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/BlockDetailAdapter.java
Patch:
@@ -22,12 +22,10 @@
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
 import android.widget.TextView;
-
 import com.github.moduth.blockcanary.BlockCanaryCore;
-import com.github.moduth.blockcanary.ui.R;
+import com.github.moduth.blockcanary.R;
 import com.github.moduth.blockcanary.log.Block;
 import com.github.moduth.blockcanary.log.ProcessUtils;
-
 import java.util.Arrays;
 
 final class BlockDetailAdapter extends BaseAdapter {

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java
Patch:
@@ -38,11 +38,10 @@
 import android.widget.ListAdapter;
 import android.widget.ListView;
 import android.widget.TextView;
-
 import com.github.moduth.blockcanary.LogWriter;
+import com.github.moduth.blockcanary.R;
 import com.github.moduth.blockcanary.log.Block;
 import com.github.moduth.blockcanary.log.BlockCanaryInternals;
-
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Collections;

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
Patch:
@@ -6,9 +6,8 @@
 import android.app.PendingIntent;
 import android.content.Context;
 import android.content.Intent;
-
 import com.github.moduth.blockcanary.OnBlockEventInterceptor;
-import com.github.moduth.blockcanary.ui.R;
+import com.github.moduth.blockcanary.R;
 
 import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
 import static android.os.Build.VERSION.SDK_INT;

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
Patch:
@@ -134,7 +134,7 @@ public boolean zipLogFile(File[] src, File dest) {
      */
     @Override
     public void uploadLogFile(File zippedFile) {
-
+        throw new UnsupportedOperationException();
     }
 
     /**

File: blockcanary-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanaryContext.java
Patch:
@@ -76,7 +76,7 @@ public boolean zipLogFile(File[] src, File dest) {
     }
 
     public void uploadLogFile(File zippedFile) {
-
+        throw new UnsupportedOperationException();
     }
 
     @Override

File: blockcanary-android/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
Patch:
@@ -25,7 +25,7 @@
  *
  * @author markzhai on 2015/9/25.
  */
-public class BlockCanary {
+public final class BlockCanary {
 
     private static final String TAG = "BlockCanary";
 

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/Block.java
Patch:
@@ -32,7 +32,7 @@
 /**
  * @author markzhai on 15/9/27.
  */
-public class Block {
+public final class Block {
 
     private static final String TAG = "Block";
 

File: blockcanary-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
Patch:
@@ -18,7 +18,7 @@
 /**
  * No-op implementation.
  */
-public class BlockCanary {
+public final class BlockCanary {
 
     private static BlockCanary sInstance = null;
 

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/BlockCanaryCore.java
Patch:
@@ -50,7 +50,7 @@ public void onBlockEvent(long realTimeStart, long realTimeEnd,
                 ArrayList<String> threadStackEntries = threadStackSampler
                         .getThreadStackEntries(realTimeStart, realTimeEnd);
                 // Log.d("BlockCanary", "threadStackEntries: " + threadStackEntries.size());
-                if (threadStackEntries.size() > 0) {
+                if (!threadStackEntries.isEmpty()) {
                     Block block = Block.newInstance()
                             .setMainThreadTimeCost(realTimeStart, realTimeEnd, threadTimeStart, threadTimeEnd)
                             .setCpuBusyFlag(cpuSampler.isCpuBusy(realTimeStart, realTimeEnd))

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/ProcessUtils.java
Patch:
@@ -46,7 +46,7 @@ private static String obtainProcessName(Context context) {
         final int pid = android.os.Process.myPid();
         ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
         List<ActivityManager.RunningAppProcessInfo> listTaskInfo = am.getRunningAppProcesses();
-        if (listTaskInfo != null && listTaskInfo.size() > 0) {
+        if (listTaskInfo != null && !listTaskInfo.isEmpty()) {
             for (ActivityManager.RunningAppProcessInfo info : listTaskInfo) {
                 if (info != null && info.pid == pid) {
                     return info.processName;

File: blockcanary-ui/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java
Patch:
@@ -262,7 +262,7 @@ public void onClick(View v) {
                 }
             });
         }
-        mActionButton.setVisibility(mBlockEntries.size() == 0 ? GONE : VISIBLE);
+        mActionButton.setVisibility(mBlockEntries.isEmpty() ? GONE : VISIBLE);
     }
 
     private void renderBlockDetail(final Block block) {

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/UploadMonitorLog.java
Patch:
@@ -36,7 +36,7 @@ private UploadMonitorLog() {
     }
 
     private static File zipFile() {
-        String timeString = System.currentTimeMillis() + "";
+        String timeString = Long.toString(System.currentTimeMillis());
         try {
             timeString = FORMAT.format(new Date());
         } catch (Throwable e) {

File: blockcanary-ui/src/main/java/com/github/moduth/blockcanary/ui/BlockDetailAdapter.java
Patch:
@@ -37,6 +37,7 @@ final class BlockDetailAdapter extends BaseAdapter {
 
     private boolean[] mFoldings = new boolean[0];
 
+    private String mStackFoldPrefix = null;
     private Block mBlock;
 
     private static final int POSITION_BASIC = 1;
@@ -190,8 +191,6 @@ private static <T extends View> T findById(View view, int id) {
         return (T) view.findViewById(id);
     }
 
-    private String mStackFoldPrefix = null;
-
     private String getStackFoldPrefix() {
         if (mStackFoldPrefix == null) {
             String prefix = BlockCanaryCore.getContext().getStackFoldPrefix();

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/LogWriter.java
Patch:
@@ -35,7 +35,7 @@ public class LogWriter {
     private static final Object SAVE_DELETE_LOCK = new Object();
     private static final SimpleDateFormat FILE_NAME_FORMATTER = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss.SSS");
     private static final SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-    private static final long OBSOLETE_DURATION = 2 * 24 * 3600 * 1000;
+    private static final long OBSOLETE_DURATION = 2 * 24 * 3600 * 1000L;
 
     /**
      * Save log to file

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/ProcessUtils.java
Patch:
@@ -33,7 +33,8 @@ public static String myProcessName() {
             if (sProcessName != null) {
                 return sProcessName;
             }
-            return sProcessName = obtainProcessName(BlockCanaryCore.getContext().getContext());
+            sProcessName = obtainProcessName(BlockCanaryCore.getContext().getContext());
+            return sProcessName;
         }
     }
 

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/LogWriter.java
Patch:
@@ -35,7 +35,7 @@ public class LogWriter {
     private static final Object SAVE_DELETE_LOCK = new Object();
     private static final SimpleDateFormat FILE_NAME_FORMATTER = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss.SSS");
     private static final SimpleDateFormat TIME_FORMATTER = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-    private static final long OBSOLETE_DURATION = 2 * 24 * 3600 * 1000;
+    private static final long OBSOLETE_DURATION = 2 * 24 * 3600 * 1000L;
 
     /**
      * Save log to file

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/log/ProcessUtils.java
Patch:
@@ -33,7 +33,8 @@ public static String myProcessName() {
             if (sProcessName != null) {
                 return sProcessName;
             }
-            return sProcessName = obtainProcessName(BlockCanaryCore.getContext().getContext());
+            sProcessName = obtainProcessName(BlockCanaryCore.getContext().getContext());
+            return sProcessName;
         }
     }
 

File: blockcanary-core/src/main/java/com/github/moduth/blockcanary/LogWriter.java
Patch:
@@ -95,7 +95,7 @@ private static String saveLogToSDCard(String logFileName, String str) {
         String path = "";
         BufferedWriter writer = null;
         try {
-            File file = BlockCanaryInternals.detectedLeakDirectory();
+            File file = BlockCanaryInternals.detectedBlockDirectory();
             long time = System.currentTimeMillis();
             path = file.getAbsolutePath() + "/" + logFileName + "-" + FILE_NAME_FORMATTER.format(time) + ".txt";
             OutputStreamWriter out = new OutputStreamWriter(new FileOutputStream(path, true), "UTF-8");

File: blockcanary-ui/src/main/java/com/github/moduth/blockcanary/ui/BlockDetailAdapter.java
Patch:
@@ -24,7 +24,7 @@
 import android.widget.TextView;
 
 import com.github.moduth.blockcanary.BlockCanaryCore;
-import com.github.moduth.blockcanary.R;
+import com.github.moduth.blockcanary.ui.R;
 import com.github.moduth.blockcanary.log.Block;
 import com.github.moduth.blockcanary.log.ProcessUtils;
 

File: blockcanary-ui/src/main/java/com/github/moduth/blockcanary/ui/DisplayBlockActivity.java
Patch:
@@ -39,7 +39,7 @@
 import android.widget.ListView;
 import android.widget.TextView;
 
-import com.github.moduth.blockcanary.R;
+import com.github.moduth.blockcanary.ui.R;
 import com.github.moduth.blockcanary.log.Block;
 import com.github.moduth.blockcanary.log.BlockCanaryInternals;
 import com.github.moduth.blockcanary.LogWriter;

File: blockcanary-ui/src/main/java/com/github/moduth/blockcanary/ui/Notifier.java
Patch:
@@ -8,7 +8,7 @@
 import android.content.Intent;
 
 import com.github.moduth.blockcanary.OnBlockEventInterceptor;
-import com.github.moduth.blockcanary.R;
+import com.github.moduth.blockcanary.ui.R;
 
 import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
 import static android.os.Build.VERSION.SDK_INT;

File: library/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
Patch:
@@ -174,7 +174,7 @@ private void notify(String contentTitle, String contentText, PendingIntent pendi
             notification.icon = R.drawable.block_canary_notification;
             notification.when = System.currentTimeMillis();
             notification.flags |= Notification.FLAG_AUTO_CANCEL;
-            notification.defaults=Notification.DEFAULT_SOUND;// add sound by chiahaolu
+            notification.defaults = Notification.DEFAULT_SOUND;// add sound by chiahaolu
             notification.setLatestEventInfo(BlockCanaryContext.get().getContext(), contentTitle, contentText, pendingIntent);
         } else {
             Notification.Builder builder = new Notification.Builder(BlockCanaryContext.get().getContext())

File: library/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
Patch:
@@ -175,8 +175,7 @@ private void notify(String contentTitle, String contentText, PendingIntent pendi
             notification.when = System.currentTimeMillis();
             notification.flags |= Notification.FLAG_AUTO_CANCEL;
             notification.defaults=Notification.DEFAULT_SOUND;// add sound by chiahaolu
-            // TODO SUPPORT
-            //notification.setLatestEventInfo(BlockCanaryContext.get().getContext(), contentTitle, contentText, pendingIntent);
+            notification.setLatestEventInfo(BlockCanaryContext.get().getContext(), contentTitle, contentText, pendingIntent);
         } else {
             Notification.Builder builder = new Notification.Builder(BlockCanaryContext.get().getContext())
                     .setSmallIcon(R.drawable.block_canary_notification)

File: library/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
Patch:
@@ -175,8 +175,7 @@ private void notify(String contentTitle, String contentText, PendingIntent pendi
             notification.when = System.currentTimeMillis();
             notification.flags |= Notification.FLAG_AUTO_CANCEL;
             notification.defaults=Notification.DEFAULT_SOUND;// add sound by chiahaolu
-            // TODO SUPPORT
-            //notification.setLatestEventInfo(BlockCanaryContext.get().getContext(), contentTitle, contentText, pendingIntent);
+            notification.setLatestEventInfo(BlockCanaryContext.get().getContext(), contentTitle, contentText, pendingIntent);
         } else {
             Notification.Builder builder = new Notification.Builder(BlockCanaryContext.get().getContext())
                     .setSmallIcon(R.drawable.block_canary_notification)

File: library-no-op/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
Patch:
@@ -43,19 +43,19 @@ public static BlockCanary get() {
     /**
      * 开始主进程的主线程监控
      */
-    public void startMainLooperMonitor() {
+    public void start() {
     }
 
     /**
      * 停止主进程的主线程监控
      */
-    public void stopMainLooperMonitor() {
+    public void stop() {
     }
 
     /**
      * 上传监控log文件
      */
-    public void uploadMonitorLogFile() {
+    public void upload() {
     }
 
     /**

File: library/src/main/java/com/github/moduth/blockcanary/BlockCanary.java
Patch:
@@ -150,7 +150,7 @@ public void stop() {
     /**
      * 上传监控log文件
      */
-    public void uploadMonitorLogFile() {
+    public void upload() {
         UploadMonitorLog.forceZipLogAndUpload();
     }
 

