File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/MainList.java
Patch:
@@ -70,7 +70,6 @@ public void initList() {
         data.put("Debug Stagger Load More", StaggerLoadMoreActivity.class);
         data.put("Debug Swipe List", SwipeListViewExampleActivity.class);
         data.put("Debug expandable", TestExpandableRV.class);
-        data.put("Debug dragging", DragActivity.class);
         data.put("Debug multi view types", MultiViewTypesActivity.class);
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/SimpleAdapter.java
Patch:
@@ -74,7 +74,7 @@ public RecyclerView.ViewHolder newFooterHolder(View view) {
 
     @Override
     public RecyclerView.ViewHolder newHeaderHolder(View view) {
-        return null;
+        return  new UltimateRecyclerviewViewHolder<>(view);
     }
 
     @Override
@@ -216,7 +216,8 @@ public void onItemClear() {
     public String getItem(int position) {
         if (customHeaderView != null)
             position--;
-        if (position < stringList.size())
+        URLogs.d("position----"+position);
+        if (position>=0&& position < stringList.size())
             return stringList.get(position);
         else return "";
     }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/admobdemo/TestAdMobClassicActivity.java
Patch:
@@ -42,7 +42,7 @@ public class TestAdMobClassicActivity extends AppCompatActivity {
     private AdView createadmob() {
         AdView mAdView = new AdView(this);
         mAdView.setAdSize(AdSize.MEDIUM_RECTANGLE);
-        mAdView.setAdUnitId("/1015938/Hypebeast_App_320x50");
+        mAdView.setAdUnitId("ca-app-pub-3940256099942544/6300978111");
         mAdView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
         // Create an ad request.
         AdRequest.Builder adRequestBuilder = new AdRequest.Builder();
@@ -130,7 +130,7 @@ public void onClick(View v) {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
+        setContentView(R.layout.activity_loadmore);
         toolbar = (Toolbar) findViewById(R.id.tool_bar);
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);
@@ -171,7 +171,6 @@ public int getScreenHeight() {
         return findViewById(android.R.id.content).getHeight();
     }
 
-    //
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         // Inflate the menu; this adds items to the action bar if it is present.

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/admobdemo/TestAdvancedAdmobActivity.java
Patch:
@@ -130,7 +130,7 @@ private RelativeLayout createadmob() {
         adSize = AdSize.MEDIUM_RECTANGLE;
         final AdView mAdView = new AdView(this);
         mAdView.setAdSize(adSize);
-        mAdView.setAdUnitId("/1015938/Hypebeast_App_320x50");
+        mAdView.setAdUnitId("ca-app-pub-3940256099942544/6300978111");
         // Create an ad request.
         AdRequest.Builder adRequestBuilder = new AdRequest.Builder();
         if (admob_test_mode)
@@ -177,7 +177,7 @@ private BiAdAdapterSwitcher imple_switch_view(final UltimateRecyclerView rv) {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
+        setContentView(R.layout.activity_loadmore);
         toolbar = (Toolbar) findViewById(R.id.tool_bar);
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/expandemo/TestExpandableRV.java
Patch:
@@ -69,7 +69,7 @@ private void addExpandableFeatures() {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
+        setContentView(R.layout.activity_loadmore);
         toolbar = (Toolbar) findViewById(R.id.tool_bar);
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/MainWatcher.java
Patch:
@@ -9,8 +9,9 @@
  * Created by hesk on 2/10/15.
  */
 public class MainWatcher extends Application {
-    @Override public void onCreate() {
+    @Override
+    public void onCreate() {
         super.onCreate();
-        CrashWoodpecker.fly().to(this);
+        //CrashWoodpecker.fly().to(this);
     }
 }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/multiitemdemo/MultiViewTypesActivity.java
Patch:
@@ -34,7 +34,7 @@ public class MultiViewTypesActivity extends AppCompatActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
+        setContentView(R.layout.activity_loadmore);
 
         toolbar = (Toolbar) findViewById(R.id.tool_bar);
         setSupportActionBar(toolbar);

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/loadmoredemo/DebugNoHeaderLoadMoreActivity.java
Patch:
@@ -35,7 +35,8 @@ protected void onFireRefresh() {
         // simpleRecyclerViewAdapter.insertLast(moreNum++ + "  Refresh things");
         ultimateRecyclerView.setRefreshing(false);
         //   ultimateRecyclerView.scrollBy(0, -50);
-        linearLayoutManager.scrollToPosition(0);
+        //  linearLayoutManager.scrollToPosition(0);
+        ultimateRecyclerView.scrollVerticallyTo(0);
         //ultimateRecyclerView.setAdapter(simpleRecyclerViewAdapter);
         //simpleRecyclerViewAdapter.notifyDataSetChanged();
         simpleRecyclerViewAdapter.removeAll();

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/griddemo/GridLayoutRVTest.java
Patch:
@@ -77,8 +77,9 @@ public void run() {
             }
         });
 
-        listuv.enableLoadmore();
+        // listuv.enableLoadmore();
         //    listuv.disableLoadmore();
+        listuv.setLoadMoreView(R.layout.custom_bottom_progressbar);
         harn_controls();
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/CircularImageView.java
Patch:
@@ -383,7 +383,7 @@ private int measureHeight(int measureSpecHeight) {
 
 	// TODO: Update shadow layers based on border/selector state and visibility.
 	private void updateShadow() {
-		float radius = shadowEnabled ? shadowRadius : 0;
+		final float radius = shadowEnabled ? shadowRadius : 0;
 		//paint.setShadowLayer(radius, shadowDx, shadowDy, shadowColor);
 		paintBorder.setShadowLayer(radius, shadowDx, shadowDy, shadowColor);
 		paintSelectorBorder.setShadowLayer(radius, shadowDx, shadowDy, shadowColor);
@@ -423,7 +423,7 @@ else if (drawable instanceof BitmapDrawable) {  // Use the getBitmap() method in
 	}
 
 	// TODO TEST REMOVE
-	public void setIconModeEnabled(boolean e) {}
+	public void setIconModeEnabled(final boolean e) {}
 
 	/**
 	 * Re-initializes the shader texture used to fill in

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/multiitemdemo/Sample1Binder.java
Patch:
@@ -1,15 +1,13 @@
-package com.marshalchen.ultimaterecyclerview.demo.modules;
+package com.marshalchen.ultimaterecyclerview.demo.multiitemdemo;
 
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
-import com.marshalchen.ultimaterecyclerview.URLogs;
 import com.marshalchen.ultimaterecyclerview.UltimateDifferentViewTypeAdapter;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerviewViewHolder;
-import com.marshalchen.ultimaterecyclerview.UltimateViewAdapter;
 import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.multiViewTypes.DataBinder;
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/multiitemdemo/Sample2Binder.java
Patch:
@@ -1,6 +1,5 @@
-package com.marshalchen.ultimaterecyclerview.demo.modules;
+package com.marshalchen.ultimaterecyclerview.demo.multiitemdemo;
 
-import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/scrollableobservable/BaseActivity.java
Patch:
@@ -26,7 +26,7 @@
 import android.widget.ListView;
 
 import com.marshalchen.ultimaterecyclerview.demo.R;
-import com.marshalchen.ultimaterecyclerview.demo.basicdemo.SimpleAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.basicdemo.sectionZeroAdapter;
 
 import java.util.ArrayList;
 
@@ -103,7 +103,7 @@ protected void setDummyDataFew(RecyclerView recyclerView) {
     }*/
 
     protected void setDummyData(RecyclerView recyclerView, int num) {
-        recyclerView.setAdapter(new SimpleAdapter(getDummyData(num)));
+        recyclerView.setAdapter(new sectionZeroAdapter(getDummyData(num)));
     }
 
     protected void setDummyData(RecyclerView recyclerView) {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/scrollableobservable/BaseFragment.java
Patch:
@@ -28,7 +28,7 @@
 
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
 import com.marshalchen.ultimaterecyclerview.demo.R;
-import com.marshalchen.ultimaterecyclerview.demo.basicdemo.SimpleAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.basicdemo.sectionZeroAdapter;
 
 import java.util.ArrayList;
 
@@ -75,11 +75,11 @@ protected void setDummyData(GridView gridView) {
     }
 
     protected void setDummyData(RecyclerView recyclerView) {
-        recyclerView.setAdapter(new SimpleAdapter(getDummyData()));
+        recyclerView.setAdapter(new sectionZeroAdapter(getDummyData()));
     }
 
     protected void setDummyData(UltimateRecyclerView recyclerView) {
-        recyclerView.setAdapter(new SimpleAdapter(getDummyData()));
+        recyclerView.setAdapter(new sectionZeroAdapter(getDummyData()));
     }
 
   /*  protected void setDummyDataWithHeader(RecyclerView recyclerView, View headerView) {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/ItemTouchListenerAdapter.java
Patch:
@@ -21,6 +21,8 @@
 import android.view.MotionEvent;
 import android.view.View;
 
+import com.marshalchen.ultimaterecyclerview.quickAdapter.AdmobAdapter;
+
 /**
  * As RecyclerView does not have standard way to add click listeners to the items,
  * this RecyclerView.OnItemTouchListener intercepts touch events and translates them to simple

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/expanx/Util/DataUtil.java
Patch:
@@ -33,7 +33,7 @@ public static List<SmartItem> getSmallList(final String[] list) {
     }
 
     /**
-     * 根据路径获取子目录或文件
+     *
      *
      * @param path      path
      * @param treeDepth treedepth

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/ui/swipe/SwipeableRecyclerViewTouchListener.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.marshalchen.ultimaterecyclerview;
+package com.marshalchen.ultimaterecyclerview.ui.swipe;
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateRecyclerView.java
Patch:
@@ -829,7 +829,7 @@ public void onChanged() {
         mAdapter.setEmptyViewPolicy(policy_empty);
         mAdapter.setEmptyViewOnInitPolicy(policy_init);
 
-        if (mAdapter.getAdapterItemCount() == 0 && policy_empty == UltimateRecyclerView.STARTWITH_OFFLINE_ITEMS) {
+        if (mAdapter.getAdapterItemCount() == 0 && policy_init == UltimateRecyclerView.STARTWITH_OFFLINE_ITEMS) {
             showEmptyView();
         }
 

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateRecyclerView.java
Patch:
@@ -829,7 +829,7 @@ public void onChanged() {
         mAdapter.setEmptyViewPolicy(policy_empty);
         mAdapter.setEmptyViewOnInitPolicy(policy_init);
 
-        if (mAdapter.getAdapterItemCount() == 0 && policy_empty == UltimateRecyclerView.STARTWITH_OFFLINE_ITEMS) {
+        if (mAdapter.getAdapterItemCount() == 0 && policy_init == UltimateRecyclerView.STARTWITH_OFFLINE_ITEMS) {
             showEmptyView();
         }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/basicdemo/SimpleAnimationAdapter.java
Patch:
@@ -14,12 +14,13 @@
 import com.marshalchen.ultimaterecyclerview.URLogs;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerviewViewHolder;
 import com.marshalchen.ultimaterecyclerview.UltimateViewAdapter;
-import com.marshalchen.ultimaterecyclerview.animators.internal.ViewHelper;
 import com.marshalchen.ultimaterecyclerview.demo.R;
 
 import java.security.SecureRandom;
 import java.util.List;
 
+import jp.wasabeef.recyclerview.internal.ViewHelper;
+
 
 public class SimpleAnimationAdapter extends UltimateViewAdapter<RecyclerView.ViewHolder> {
     private List<String> stringList;
@@ -33,6 +34,7 @@ public SimpleAnimationAdapter(List<String> stringList) {
 
     private boolean isFirstOnly = true;
 
+
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         if (position < getItemCount() && (customHeaderView != null ? position <= stringList.size() : position < stringList.size()) && (customHeaderView != null ? position > 0 : true)) {
@@ -52,7 +54,6 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
 
     }
 
-
     @Override
     public int getAdapterItemCount() {
         return stringList.size();

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/griddemo/GridLayoutRVTest.java
Patch:
@@ -77,8 +77,9 @@ public void run() {
             }
         });
 
-        listuv.enableLoadmore();
+        // listuv.enableLoadmore();
         //    listuv.disableLoadmore();
+        listuv.setLoadMoreView(R.layout.custom_bottom_progressbar);
         harn_controls();
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/CircularImageView.java
Patch:
@@ -383,7 +383,7 @@ private int measureHeight(int measureSpecHeight) {
 
 	// TODO: Update shadow layers based on border/selector state and visibility.
 	private void updateShadow() {
-		float radius = shadowEnabled ? shadowRadius : 0;
+		final float radius = shadowEnabled ? shadowRadius : 0;
 		//paint.setShadowLayer(radius, shadowDx, shadowDy, shadowColor);
 		paintBorder.setShadowLayer(radius, shadowDx, shadowDy, shadowColor);
 		paintSelectorBorder.setShadowLayer(radius, shadowDx, shadowDy, shadowColor);
@@ -423,7 +423,7 @@ else if (drawable instanceof BitmapDrawable) {  // Use the getBitmap() method in
 	}
 
 	// TODO TEST REMOVE
-	public void setIconModeEnabled(boolean e) {}
+	public void setIconModeEnabled(final boolean e) {}
 
 	/**
 	 * Re-initializes the shader texture used to fill in

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/multiitemdemo/Sample1Binder.java
Patch:
@@ -1,15 +1,13 @@
-package com.marshalchen.ultimaterecyclerview.demo.modules;
+package com.marshalchen.ultimaterecyclerview.demo.multiitemdemo;
 
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
 
-import com.marshalchen.ultimaterecyclerview.URLogs;
 import com.marshalchen.ultimaterecyclerview.UltimateDifferentViewTypeAdapter;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerviewViewHolder;
-import com.marshalchen.ultimaterecyclerview.UltimateViewAdapter;
 import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.multiViewTypes.DataBinder;
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/multiitemdemo/Sample2Binder.java
Patch:
@@ -1,6 +1,5 @@
-package com.marshalchen.ultimaterecyclerview.demo.modules;
+package com.marshalchen.ultimaterecyclerview.demo.multiitemdemo;
 
-import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/ItemTouchListenerAdapter.java
Patch:
@@ -21,6 +21,8 @@
 import android.view.MotionEvent;
 import android.view.View;
 
+import com.marshalchen.ultimaterecyclerview.quickAdapter.AdmobAdapter;
+
 /**
  * As RecyclerView does not have standard way to add click listeners to the items,
  * this RecyclerView.OnItemTouchListener intercepts touch events and translates them to simple

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/expanx/Util/DataUtil.java
Patch:
@@ -33,7 +33,7 @@ public static List<SmartItem> getSmallList(final String[] list) {
     }
 
     /**
-     * 根据路径获取子目录或文件
+     *
      *
      * @param path      path
      * @param treeDepth treedepth

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/ui/swipe/SwipeableRecyclerViewTouchListener.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.marshalchen.ultimaterecyclerview;
+package com.marshalchen.ultimaterecyclerview.ui.swipe;
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/appPaginator/v4/paginator.java
Patch:
@@ -12,6 +12,7 @@
  * Created by hesk on 15/2/16.
  */
 public abstract class paginator extends Fragment {
+
     private int currentPage, totalPages, pagePerItems, landscape_common_colums = 4, portrait_common_colums = 2;
     private String tag_keyword, fullEndPoint, searchKeyword;
     private boolean enable_load_more, is_new_search, status_refresh, status_initization;
@@ -96,6 +97,7 @@ protected void initPaginator() {
         pagePerItems = getItemsShownPerPage();
         enable_load_more = false;
         is_new_search = false;
+        status_initization = true;
     }
 
 
@@ -180,4 +182,5 @@ protected void makeNextRequest() {
         nextPage();
         makeBasicRequest();
     }
+
 }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/loadmoredemo/BasicFunctions.java
Patch:
@@ -235,12 +235,9 @@ public void onClick(View v) {
     protected Toolbar toolbar;
     protected LinearLayoutManager linearLayoutManager;
     private int moreNum = 2;
-
-
     boolean isDrag = true, isEnableAutoLoadMore = true, status_progress = false;
     private DragDropTouchListener dragDropTouchListener;
 
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateRecyclerView.java
Patch:
@@ -201,8 +201,8 @@ protected void initViews() {
          * empty view setup
          */
         mEmpty = (ViewStub) view.findViewById(R.id.emptyview);
-        mEmpty.setLayoutResource(mEmptyId);
         if (mEmptyId != 0) {
+            mEmpty.setLayoutResource(mEmptyId);
             mEmptyView = mEmpty.inflate();
             mEmpty.setVisibility(View.GONE);
         }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/admobdemo/ZeroStickyAdvertistmentAdapter.java
Patch:
@@ -30,8 +30,6 @@ public ZeroStickyAdvertistmentAdapter(AdView v, int e, List<String> f, AdviewLis
         super(v, false, e, f, listener);
     }
 
-
-
     @Override
     protected int getNormalLayoutResId() {
         return R.layout.recycler_view_adapter;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/SampleDataboxset.java
Patch:
@@ -45,10 +45,10 @@ public static List<String> newListFromGen() {
         return s;
     }
 
-    private static void genItems(final int howmany, final List<String> list) {
+    public static void genItems(final int howmany, final List<String> list) {
         for (int i = 0; i < howmany; i++) {
             Random e = new Random();
-            list.add(girl_name[e.nextInt(girl_name.length)]);
+            list.add("No." + i + " " + girl_name[e.nextInt(girl_name.length)]);
         }
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/admobdemo/ZeroStickyAdvertistmentAdapter.java
Patch:
@@ -31,6 +31,7 @@ public ZeroStickyAdvertistmentAdapter(AdView v, int e, List<String> f, AdviewLis
     }
 
 
+
     @Override
     protected int getNormalLayoutResId() {
         return R.layout.recycler_view_adapter;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/loadmoredemo/BasicFunctions.java
Patch:
@@ -1,7 +1,5 @@
 package com.marshalchen.ultimaterecyclerview.demo.loadmoredemo;
 
-import android.content.Context;
-import android.content.Intent;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.os.Handler;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/BiAdAdapterSwitcher.java
Patch:
@@ -29,7 +29,7 @@ public class BiAdAdapterSwitcher<
         //DATA TYPE
         T,
         //The view holder
-        B extends UltimateRecyclerviewViewHolder,
+        B extends AdItemHolder,
         //THE regular adapter
         EASY extends easyRegularAdapter<T, B>,
         //THE Viewgroup from the google Adview

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/basicdemo/SimpleAnimationAdapter.java
Patch:
@@ -33,6 +33,7 @@ public SimpleAnimationAdapter(List<String> stringList) {
 
     private boolean isFirstOnly = true;
 
+
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
         if (position < getItemCount() && (customHeaderView != null ? position <= stringList.size() : position < stringList.size()) && (customHeaderView != null ? position > 0 : true)) {
@@ -52,7 +53,6 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
 
     }
 
-
     @Override
     public int getAdapterItemCount() {
         return stringList.size();

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/FastBinding.java
Patch:
@@ -4,23 +4,22 @@
 import android.content.Intent;
 import android.support.annotation.IdRes;
 
-import com.marshalchen.ultimaterecyclerview.demo.loadmoredemo.CustomSwipeToRefreshRefreshActivity;
+import com.marshalchen.ultimaterecyclerview.demo.loadmoredemo.PullToRefreshActivity;
 import com.marshalchen.ultimaterecyclerview.demo.griddemo.GridLayoutRVTest;
 import com.marshalchen.ultimaterecyclerview.demo.multiitemdemo.MultiViewTypesActivity;
 import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.demo.admobdemo.TestAdMob;
 import com.marshalchen.ultimaterecyclerview.demo.loadmoredemo.DebugLoadMoreActivity;
 import com.marshalchen.ultimaterecyclerview.demo.admobdemo.TestAdvancedAdmobActivity;
 import com.marshalchen.ultimaterecyclerview.demo.scrollableobservable.ScrollObservablesActivity;
-import com.marshalchen.ultimaterecyclerview.demo.swiplistdemo.SwipeListViewExampleActivity;
 import com.marshalchen.ultimaterecyclerview.demo.expandemo.TestExpandableRV;
 
 /**
  * Created by hesk on 7/1/2015.
  */
 public enum FastBinding {
     action_bottom(R.id.action_bottom, MultiViewTypesActivity.class),
-    action_custom(R.id.action_custom, CustomSwipeToRefreshRefreshActivity.class),
+    action_custom(R.id.action_custom, PullToRefreshActivity.class),
     admob(R.id.admob, TestAdMob.class),
     scrollactivity(R.id.scrollactivity, ScrollObservablesActivity.class),
    // swipe_and_drag(R.id.swipe_and_drag, SwipeListViewExampleActivity.class),

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/MainActivity.java
Patch:
@@ -257,8 +257,7 @@ public void onParallaxScroll(float percentage, float offset, View parallax) {
     }
 
     private void enableLoadMore() {
-        ultimateRecyclerView.enableLoadmore();
-        RVAdapter.setCustomLoadMoreView(LayoutInflater.from(this).inflate(R.layout.custom_bottom_progressbar, null));
+        ultimateRecyclerView.setLoadMoreView(R.layout.custom_bottom_progressbar);
         ultimateRecyclerView.setOnLoadMoreListener(new UltimateRecyclerView.OnLoadMoreListener() {
             @Override
             public void loadMore(int itemsCount, final int maxLastVisiblePosition) {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/griddemo/GridLayoutRVTest.java
Patch:
@@ -77,8 +77,9 @@ public void run() {
             }
         });
 
-        listuv.enableLoadmore();
+        // listuv.enableLoadmore();
         //    listuv.disableLoadmore();
+        listuv.setLoadMoreView(R.layout.custom_bottom_progressbar);
         harn_controls();
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/loadmoredemo/CustomSwipeToRefreshRefreshActivity.java
Patch:
@@ -99,9 +99,7 @@ protected void onCreate(Bundle savedInstanceState) {
         ultimateRecyclerView.setLayoutManager(linearLayoutManager);
         ultimateRecyclerView.setAdapter(simpleRecyclerViewAdapter);
 
-        ultimateRecyclerView.enableLoadmore();
-        simpleRecyclerViewAdapter.setCustomLoadMoreView(LayoutInflater.from(this)
-                .inflate(R.layout.custom_bottom_progressbar, null));
+        ultimateRecyclerView.setLoadMoreView(R.layout.custom_bottom_progressbar);
 
         ultimateRecyclerView.setParallaxHeader(getLayoutInflater().inflate(R.layout.parallax_recyclerview_header, ultimateRecyclerView.mRecyclerView, false));
         ultimateRecyclerView.setOnParallaxScroll(new UltimateRecyclerView.OnParallaxScroll() {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/ui/swipe/SwipeableRecyclerViewTouchListener.java
Patch:
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.marshalchen.ultimaterecyclerview;
+package com.marshalchen.ultimaterecyclerview.ui.swipe;
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/SampleDataboxset.java
Patch:
@@ -53,7 +53,7 @@ private static void genItems(final int howmany, final List<String> list) {
 
     public static void insertMore(SimpleAdapter sd, int howmany) {
         for (int i = 0; i < howmany; i++) {
-            sd.insert("More " + i, sd.getAdapterItemCount());
+            sd.insertLast("More ** " + i);
         }
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/basicdemo/SimpleAdapter.java
Patch:
@@ -155,7 +155,8 @@ public void onItemMove(int fromPosition, int toPosition) {
 
     @Override
     public void onItemDismiss(int position) {
-        remove(position);
+        if (position > 0)
+            remove(position);
         // notifyItemRemoved(position);
 //        notifyDataSetChanged();
         super.onItemDismiss(position);

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/swipe/SwipeLayout.java
Patch:
@@ -1510,8 +1510,8 @@ public void setDragEdge(DragEdge dragEdge) {
         setCurrentDragEdge(dragEdge);
     }
 
-
-    protected void onViewRemoved(View child) {
+    @Override
+    public void onViewRemoved(View child) {
         for (Map.Entry<DragEdge, View> entry : new HashMap<DragEdge, View>(mDragEdges).entrySet()) {
             if (entry.getValue() == child) {
                 mDragEdges.remove(entry.getKey());

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/AdmobAdapter.java
Patch:
@@ -10,9 +10,6 @@
 /**
  * Enhanced Google Admob implementation
  * Created by hesk on 20/5/15.
- * Visit: https://github.com/jjhesk
- * JJHESK HKM. MIT LICENSE
- * {@link {https://github.com/jjhesk/MaterialTabsAdavanced/blob/master/LICENSE.md}}
  */
 public abstract class AdmobAdapter<Adv extends ViewGroup, T, V extends UltimateRecyclerviewViewHolder> extends UltimateViewAdapter<UltimateRecyclerviewViewHolder> {
     public interface AdviewListener<Adv extends ViewGroup> {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/NormalUltimateViewAdapter.java
Patch:
@@ -25,6 +25,8 @@ public abstract class NormalUltimateViewAdapter extends RecyclerView.Adapter<Ult
 
     /**
      * Set the header view of the adapter.
+     *
+     * @param customHeaderView na
      */
     public void setCustomHeaderView(UltimateRecyclerView.CustomRelativeWrapper customHeaderView) {
         this.customHeaderView = customHeaderView;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/SwipeableUltimateViewAdapter.java
Patch:
@@ -27,8 +27,8 @@ public abstract class SwipeableUltimateViewAdapter extends UltimateViewAdapter<U
     /**
      * Don't forget to call super.onBindViewHolder when overriding
      *
-     * @param holder
-     * @param position
+     * @param holder na
+     * @param position  na
      */
     @Override
     public void onBindViewHolder(UltimateRecyclerviewViewHolder holder, int position) {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/itemTouchHelper/SimpleItemTouchHelperCallback.java
Patch:
@@ -24,9 +24,8 @@
 import android.view.View;
 
 /**
- * An implementation of {@link ItemTouchHelper.Callback} that enables basic drag & drop and
- * swipe-to-dismiss. Drag events are automatically started by an item long-press.<br/>
- * </br/>
+ * An implementation of {@link ItemTouchHelper.Callback} that enables basic drag and drop and
+ * swipe-to-dismiss. Drag events are automatically started by an item long-press.
  * Expects the <code>RecyclerView.Adapter</code> to listen for {@link
  * ItemTouchHelperAdapter} callbacks and the <code>RecyclerView.ViewHolder</code> to implement
  * {@link ItemTouchHelperViewHolder}.

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/BiAdAdapterSwitcher.java
Patch:
@@ -135,8 +135,10 @@ protected BiAdAdapterSwitcher setCustomOnFresh(Runnable h) {
     /**
      * will implement more functions later
      *
+     * @param delay_trigger na
      * @return switchableadapter object
      */
+
     public BiAdAdapterSwitcher onEnableRefresh(final int delay_trigger) {
         listview.setDefaultOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
             @Override

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/extBaseAdapter/BaseQuickAdapter.java
Patch:
@@ -31,7 +31,7 @@
 
 /**
  * Abstraction class of a BaseAdapter in which you only need to provide the
- * convert() implementation.<br/>
+ * convert() implementation.
  * Using the provided BaseAdapterHelper, your code is minimalist.
  *
  * @param <T> The type of the items in the list.

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/swipelistview/SwipeListViewListener.java
Patch:
@@ -60,7 +60,7 @@ public interface SwipeListViewListener {
     /**
      * Start close item
      * @param position of the view in the list
-     * @param right
+     * @param right  na
      */
     void onStartClose(int position, boolean right);
 

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/AdmobAdapter.java
Patch:
@@ -10,9 +10,6 @@
 /**
  * Enhanced Google Admob implementation
  * Created by hesk on 20/5/15.
- * Visit: https://github.com/jjhesk
- * JJHESK HKM. MIT LICENSE
- * {@link {https://github.com/jjhesk/MaterialTabsAdavanced/blob/master/LICENSE.md}}
  */
 public abstract class AdmobAdapter<Adv extends ViewGroup, T, V extends UltimateRecyclerviewViewHolder> extends UltimateViewAdapter<UltimateRecyclerviewViewHolder> {
     public interface AdviewListener<Adv extends ViewGroup> {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/NormalUltimateViewAdapter.java
Patch:
@@ -25,6 +25,8 @@ public abstract class NormalUltimateViewAdapter extends RecyclerView.Adapter<Ult
 
     /**
      * Set the header view of the adapter.
+     *
+     * @param customHeaderView na
      */
     public void setCustomHeaderView(UltimateRecyclerView.CustomRelativeWrapper customHeaderView) {
         this.customHeaderView = customHeaderView;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/SwipeableUltimateViewAdapter.java
Patch:
@@ -27,8 +27,8 @@ public abstract class SwipeableUltimateViewAdapter extends UltimateViewAdapter<U
     /**
      * Don't forget to call super.onBindViewHolder when overriding
      *
-     * @param holder
-     * @param position
+     * @param holder na
+     * @param position  na
      */
     @Override
     public void onBindViewHolder(UltimateRecyclerviewViewHolder holder, int position) {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/itemTouchHelper/SimpleItemTouchHelperCallback.java
Patch:
@@ -24,9 +24,8 @@
 import android.view.View;
 
 /**
- * An implementation of {@link ItemTouchHelper.Callback} that enables basic drag & drop and
- * swipe-to-dismiss. Drag events are automatically started by an item long-press.<br/>
- * </br/>
+ * An implementation of {@link ItemTouchHelper.Callback} that enables basic drag and drop and
+ * swipe-to-dismiss. Drag events are automatically started by an item long-press.
  * Expects the <code>RecyclerView.Adapter</code> to listen for {@link
  * ItemTouchHelperAdapter} callbacks and the <code>RecyclerView.ViewHolder</code> to implement
  * {@link ItemTouchHelperViewHolder}.

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/BiAdAdapterSwitcher.java
Patch:
@@ -135,8 +135,10 @@ protected BiAdAdapterSwitcher setCustomOnFresh(Runnable h) {
     /**
      * will implement more functions later
      *
+     * @param delay_trigger na
      * @return switchableadapter object
      */
+
     public BiAdAdapterSwitcher onEnableRefresh(final int delay_trigger) {
         listview.setDefaultOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
             @Override

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/extBaseAdapter/BaseQuickAdapter.java
Patch:
@@ -31,7 +31,7 @@
 
 /**
  * Abstraction class of a BaseAdapter in which you only need to provide the
- * convert() implementation.<br/>
+ * convert() implementation.
  * Using the provided BaseAdapterHelper, your code is minimalist.
  *
  * @param <T> The type of the items in the list.

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/swipelistview/SwipeListViewListener.java
Patch:
@@ -60,7 +60,7 @@ public interface SwipeListViewListener {
     /**
      * Start close item
      * @param position of the view in the list
-     * @param right
+     * @param right  na
      */
     void onStartClose(int position, boolean right);
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/admobdemo/TestAdMob.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo;
+package com.marshalchen.ultimaterecyclerview.demo.admobdemo;
 
 import android.graphics.Color;
 import android.os.Bundle;
@@ -23,6 +23,7 @@
 import com.marshalchen.ultimaterecyclerview.AdmobAdapter;
 import com.marshalchen.ultimaterecyclerview.URLogs;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
+import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.demo.modules.FastBinding;
 import com.marshalchen.ultimaterecyclerview.demo.modules.SampleDataboxset;
 import com.marshalchen.ultimaterecyclerview.demo.modules.admobdfpadapter;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/admobdemo/TestAdvancedAdmobActivity.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo;
+package com.marshalchen.ultimaterecyclerview.demo.admobdemo;
 
 import android.graphics.Color;
 import android.os.Bundle;
@@ -25,6 +25,7 @@
 import com.marshalchen.ultimaterecyclerview.URLogs;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerviewViewHolder;
+import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.demo.modules.SampleDataboxset;
 import com.marshalchen.ultimaterecyclerview.quickAdapter.easyRegularAdapter;
 import com.marshalchen.ultimaterecyclerview.quickAdapter.simpleAdmobAdapter;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/basicdemo/SimpleAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo;
+package com.marshalchen.ultimaterecyclerview.demo.basicdemo;
 
 import android.graphics.Color;
 import android.support.v7.widget.RecyclerView;
@@ -12,6 +12,7 @@
 
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerviewViewHolder;
 import com.marshalchen.ultimaterecyclerview.UltimateViewAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.R;
 
 import java.security.SecureRandom;
 import java.util.List;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/basicdemo/SimpleAnimationAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo;
+package com.marshalchen.ultimaterecyclerview.demo.basicdemo;
 
 import android.animation.Animator;
 import android.graphics.Color;
@@ -15,6 +15,7 @@
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerviewViewHolder;
 import com.marshalchen.ultimaterecyclerview.UltimateViewAdapter;
 import com.marshalchen.ultimaterecyclerview.animators.internal.ViewHelper;
+import com.marshalchen.ultimaterecyclerview.demo.R;
 
 import java.security.SecureRandom;
 import java.util.List;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/expandemo/Category.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo.expanables;
+package com.marshalchen.ultimaterecyclerview.demo.expandemo;
 
 import android.view.View;
 import android.widget.RelativeLayout;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/expandemo/ExpCustomAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo.expanables;
+package com.marshalchen.ultimaterecyclerview.demo.expandemo;
 
 import android.content.Context;
 import android.view.View;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/expandemo/SubCategory.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo.expanables;
+package com.marshalchen.ultimaterecyclerview.demo.expandemo;
 
 import android.view.View;
 import android.widget.RelativeLayout;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/expandemo/TestExpandableRV.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo;
+package com.marshalchen.ultimaterecyclerview.demo.expandemo;
 
 import android.graphics.Color;
 import android.os.Bundle;
@@ -10,7 +10,7 @@
 import android.view.MenuItem;
 
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
-import com.marshalchen.ultimaterecyclerview.demo.expanables.ExpCustomAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.demo.modules.FastBinding;
 
 /**

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/griddemo/GridLayoutRVTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo;
+package com.marshalchen.ultimaterecyclerview.demo.griddemo;
 
 import android.os.Bundle;
 import android.os.Handler;
@@ -14,7 +14,7 @@
 import android.view.View;
 
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
-import com.marshalchen.ultimaterecyclerview.demo.gridTools.GridJRAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.demo.modules.JRitem;
 import com.marshalchen.ultimaterecyclerview.demo.modules.SampleDataboxset;
 import com.marshalchen.ultimaterecyclerview.grid.BasicGridLayoutManager;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/griddemo/HolderGirdCell.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo.gridTools;
+package com.marshalchen.ultimaterecyclerview.demo.griddemo;
 
 import android.graphics.Color;
 import android.view.View;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/loadmoredemo/DebugLoadMoreActivity.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo;
+package com.marshalchen.ultimaterecyclerview.demo.loadmoredemo;
 
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
@@ -47,6 +47,8 @@
 import com.marshalchen.ultimaterecyclerview.animators.SlideInLeftAnimator;
 import com.marshalchen.ultimaterecyclerview.animators.SlideInRightAnimator;
 import com.marshalchen.ultimaterecyclerview.animators.SlideInUpAnimator;
+import com.marshalchen.ultimaterecyclerview.demo.R;
+import com.marshalchen.ultimaterecyclerview.demo.basicdemo.SimpleAdapter;
 import com.marshalchen.ultimaterecyclerview.demo.modules.SampleDataboxset;
 import com.marshalchen.ultimaterecyclerview.demo.modules.FastBinding;
 import com.marshalchen.ultimaterecyclerview.uiUtils.ScrollSmoothLineaerLayoutManager;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/SampleDataboxset.java
Patch:
@@ -1,7 +1,7 @@
 package com.marshalchen.ultimaterecyclerview.demo.modules;
 
 import com.marshalchen.ultimaterecyclerview.demo.R;
-import com.marshalchen.ultimaterecyclerview.demo.SimpleAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.basicdemo.SimpleAdapter;
 
 import java.util.ArrayList;
 import java.util.List;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/multiitemdemo/MultiViewTypesRecyclerViewAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo.modules;
+package com.marshalchen.ultimaterecyclerview.demo.multiitemdemo;
 
 import android.content.res.Resources;
 import android.support.v4.view.ViewPager;
@@ -11,6 +11,8 @@
 import com.marshalchen.ultimaterecyclerview.UltimateDifferentViewTypeAdapter;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerviewViewHolder;
 import com.marshalchen.ultimaterecyclerview.demo.R;
+import com.marshalchen.ultimaterecyclerview.demo.modules.Sample1Binder;
+import com.marshalchen.ultimaterecyclerview.demo.modules.Sample2Binder;
 
 import java.util.ArrayList;
 import java.util.List;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/scrollableobservable/BaseActivity.java
Patch:
@@ -23,11 +23,10 @@
 import android.view.View;
 import android.widget.AbsListView;
 import android.widget.ArrayAdapter;
-import android.widget.GridView;
 import android.widget.ListView;
 
 import com.marshalchen.ultimaterecyclerview.demo.R;
-import com.marshalchen.ultimaterecyclerview.demo.SimpleAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.basicdemo.SimpleAdapter;
 
 import java.util.ArrayList;
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/scrollableobservable/BaseFragment.java
Patch:
@@ -19,7 +19,6 @@
 import android.app.Activity;
 import android.content.res.TypedArray;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.RecyclerView;
 import android.util.TypedValue;
 import android.view.View;
@@ -29,7 +28,7 @@
 
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
 import com.marshalchen.ultimaterecyclerview.demo.R;
-import com.marshalchen.ultimaterecyclerview.demo.SimpleAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.basicdemo.SimpleAdapter;
 
 import java.util.ArrayList;
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/swiplistdemo/SwipeAdapter.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.demo.swipelist;
+package com.marshalchen.ultimaterecyclerview.demo.swiplistdemo;
 
 import android.content.Context;
 import android.support.v7.widget.RecyclerView;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/SimpleAnimationAdapter.java
Patch:
@@ -72,15 +72,15 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent) {
 
 
     public void insert(String string, int position) {
-        insert(stringList, string, position);
+        insertInternal(stringList, string, position);
     }
 
     public void remove(int position) {
-        remove(stringList, position);
+        removeInternal(stringList, position);
     }
 
     public void clear() {
-        clear(stringList);
+        clearInternal(stringList);
     }
 
     @Override

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/TestAdMob.java
Patch:
@@ -73,7 +73,8 @@ public void onRefresh() {
                 new Handler().postDelayed(new Runnable() {
                     @Override
                     public void run() {
-                        simpleRecyclerViewAdapter.insert(moreNum++ + "  Refresh things");
+
+                        simpleRecyclerViewAdapter.insertFirst(moreNum++ + "  Refresh things");
                         ultimateRecyclerView.setRefreshing(false);
                         //   ultimateRecyclerView.scrollBy(0, -50);
                         linearLayoutManager.scrollToPosition(0);
@@ -115,7 +116,7 @@ public void onClick(View v) {
         findViewById(R.id.del).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                simpleRecyclerViewAdapter.remove(3);
+                simpleRecyclerViewAdapter.removeAt(3);
             }
         });
     }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/MultiViewTypesRecyclerViewAdapter.java
Patch:
@@ -53,11 +53,11 @@ public MultiViewTypesRecyclerViewAdapter(List<String> dataSet) {
     }
 
     public void insert(String string, int position) {
-        insert(mDataset, string, position);
+        insertInternal(mDataset, string, position);
     }
 
     public void remove(int position) {
-        remove(mDataset, position);
+        removeInternal(mDataset, position);
     }
 
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/SampleDataboxset.java
Patch:
@@ -78,7 +78,7 @@ public static int getGirlImageRandom() {
 
     public static void insertMore(admobdfpadapter sd, int howmany) {
         for (int i = 0; i < howmany; i++) {
-            sd.insert("More items " + i);
+            sd.insertFirst("More items " + i);
         }
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/GridLayoutRVTest.java
Patch:
@@ -83,12 +83,12 @@ public void run() {
 
     private List<String> getItems() {
         List<String> team = new ArrayList<>();
-        team.add("1 YU 0");
+/*        team.add("1 YU 0");
         team.add("2 BF H");
         team.add("3 AF HH");
         team.add("4 FR HHH");
         team.add("5 LAST SECOND");
-        team.add("6 FE LAST");
+        team.add("6 FE LAST");*/
         return team;
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/GridLayoutRVTest.java
Patch:
@@ -83,12 +83,12 @@ public void run() {
 
     private List<String> getItems() {
         List<String> team = new ArrayList<>();
-        team.add("1 YU 0");
+/*        team.add("1 YU 0");
         team.add("2 BF H");
         team.add("3 AF HH");
         team.add("4 FR HHH");
         team.add("5 LAST SECOND");
-        team.add("6 FE LAST");
+        team.add("6 FE LAST");*/
         return team;
     }
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/CustomSwipeToRefreshRefreshActivity.java
Patch:
@@ -209,7 +209,7 @@ void refreshingString() {
         storeHouseHeader = new StoreHouseHeader(this);
         //   header.setPadding(0, 15, 0, 0);
 
-        storeHouseHeader.initWithString("Marshal Chen");
+        storeHouseHeader.initWithString("XCode Big Air");
         //  header.initWithStringArray(R.array.akta);
         ultimateRecyclerView.mPtrFrameLayout.removePtrUIHandler(materialHeader);
         ultimateRecyclerView.mPtrFrameLayout.setHeaderView(storeHouseHeader);

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/NormalUltimateViewAdapter.java
Patch:
@@ -127,12 +127,10 @@ public int getItemCount() {
      */
     public abstract int getAdapterItemCount();
 
-
     public void toggleSelection(int pos) {
         notifyItemChanged(pos);
     }
 
-
     public void clearSelection(int pos) {
         notifyItemChanged(pos);
     }

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/ObservableScrollViewCallbacks.java
Patch:
@@ -30,17 +30,17 @@ public interface ObservableScrollViewCallbacks {
      * @param firstScroll true when this is called for the first time in the consecutive motion events
      * @param dragging    true when the view is dragged and false when the view is scrolled in the inertia
      */
-    public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging);
+    void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging);
 
     /**
      * Called when the down motion event occurred.
      */
-    public void onDownMotionEvent();
+    void onDownMotionEvent();
 
     /**
      * Called when the dragging ended or canceled.
      *
      * @param observableScrollState state to indicate the scroll direction
      */
-    public void onUpOrCancelMotionEvent(ObservableScrollState observableScrollState);
+    void onUpOrCancelMotionEvent(ObservableScrollState observableScrollState);
 }

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/swipe/SwipeLayout.java
Patch:
@@ -1499,6 +1499,7 @@ public void setDragEdge(DragEdge dragEdge) {
         setCurrentDragEdge(dragEdge);
     }
 
+
     protected void onViewRemoved(View child) {
         for (Map.Entry<DragEdge, View> entry : new HashMap<DragEdge, View>(mDragEdges).entrySet()) {
             if (entry.getValue() == child) {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateDifferentViewTypeAdapter.java
Patch:
@@ -30,8 +30,8 @@ public UltimateRecyclerviewViewHolder onCreateViewHolder(ViewGroup parent, int v
 
     @Override
     public void onBindViewHolder(UltimateRecyclerviewViewHolder viewHolder, int position) {
-        int binderPosition = getBinderPosition(position);
-        getDataBinder(viewHolder.getItemViewType()).bindViewHolder(viewHolder, binderPosition);
+        //int binderPosition = getBinderPosition(position);
+        getDataBinder(viewHolder.getItemViewType()).bindViewHolder(viewHolder, position);
 
     }
 

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateViewAdapter.java
Patch:
@@ -107,6 +107,9 @@ public int getItemViewType(int position) {
             return VIEW_TYPES.NORMAL;
     }
 
+    protected boolean hasHeaderView() {
+        return customHeaderView != null;
+    }
 
     /**
      * Returns the total number of items in the data set hold by the adapter.

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/SampleDataboxset.java
Patch:
@@ -70,7 +70,7 @@ public static void insertMore(admobdfpadapter sd, int howmany) {
 
     public static final Integer[] res = new Integer[]{
             R.drawable.test_back2,
-            R.drawable.test_back1,
+           // R.drawable.test_back1,
             R.drawable.test_back
     };
     public static final String[] girl_name = new String[]{

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/ui/floatingactionbutton/FloatingActionButton.java
Patch:
@@ -106,9 +106,9 @@ private void initAttributes(Context context, AttributeSet attributeSet) {
         TypedArray attr = context.obtainStyledAttributes(attributeSet, R.styleable.FloatActionButton, 0, 0);
         if (attr != null) {
             try {
-                mColorNormal = attr.getColor(R.styleable.FloatActionButton_colorNormal, getColor(android.R.color.holo_blue_dark));
-                mColorPressed = attr.getColor(R.styleable.FloatActionButton_colorPressed, getColor(android.R.color.holo_blue_light));
-                mSize = attr.getInt(R.styleable.FloatActionButton_size, SIZE_NORMAL);
+                mColorNormal = attr.getColor(R.styleable.FloatActionButton_fab_colorNormal, getColor(android.R.color.holo_blue_dark));
+                mColorPressed = attr.getColor(R.styleable.FloatActionButton_fab_colorPressed, getColor(android.R.color.holo_blue_light));
+                mSize = attr.getInt(R.styleable.FloatActionButton_fab_size, SIZE_NORMAL);
                 mIcon = attr.getResourceId(R.styleable.FloatActionButton_icon, 0);
             } finally {
                 attr.recycle();

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/TestAdvancedAdmobActivity.java
Patch:
@@ -184,7 +184,7 @@ public boolean onLongClick(@NonNull View v) {
      * example 1 implementation of the switch view
      */
     private BiAdAdapterSwitcher imple_switch_view(final UltimateRecyclerView rv) {
-        final adap adp1 = new adap(createadmob(), false, 33, new ArrayList<String>(),
+        final adap adp1 = new adap(createadmob(), false, 10, new ArrayList<String>(),
                 new AdmobAdapter.AdviewListener() {
                     @Override
                     public RelativeLayout onGenerateAdview() {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/BiAdAdapterSwitcher.java
Patch:
@@ -182,9 +182,10 @@ private void insert_default(EASY sd, List<T> list) {
     }
 
     private void insert_default(ADMOB sd, List<T> list) {
-        for (int i = 0; i < list.size(); i++) {
+       /* for (int i = 0; i < list.size(); i++) {
             sd.insert(list.get(i));
-        }
+        }*/
+        sd.insert(list);
     }
 
     public static <V extends ViewGroup> void maximum_size(LinearLayout l, V suppose_tobe_Adview, Activity activity) {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/NormalUltimateViewAdapter.java
Patch:
@@ -18,7 +18,7 @@
  * An abstract adapter which can be extended for Recyclerview
  */
 public abstract class NormalUltimateViewAdapter extends RecyclerView.Adapter<UltimateRecyclerviewViewHolder>
-        implements StickyRecyclerHeadersAdapter<RecyclerView.ViewHolder>,ItemTouchHelperAdapter {
+        implements StickyRecyclerHeadersAdapter<RecyclerView.ViewHolder>, ItemTouchHelperAdapter {
 
 
     protected View customLoadMoreView = null;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/dragsortadapter/DragSortShadowBuilder.java
Patch:
@@ -16,12 +16,15 @@
 
 package com.marshalchen.ultimaterecyclerview.dragsortadapter;
 
+import android.annotation.TargetApi;
 import android.graphics.Canvas;
 import android.graphics.Point;
+import android.os.Build;
 import android.support.annotation.NonNull;
 import android.util.Log;
 import android.view.View;
 
+@TargetApi(Build.VERSION_CODES.HONEYCOMB)
 public class DragSortShadowBuilder extends View.DragShadowBuilder {
 
   public static final String TAG = DragSortShadowBuilder.class.getSimpleName();

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/extBaseAdapter/BaseQuickAdapter.java
Patch:
@@ -24,7 +24,7 @@
 import android.widget.FrameLayout;
 import android.widget.ProgressBar;
 
-import com.marshalchen.ultimaterecyclerview.quickAdapter.MultiItemTypeSupport;
+import com.marshalchen.ultimaterecyclerview.quickAdapter.extUtimateRVA.MultiItemTypeSupport;
 
 import java.util.ArrayList;
 import java.util.List;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/extBaseAdapter/QuickAdapter.java
Patch:
@@ -6,7 +6,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.marshalchen.ultimaterecyclerview.quickAdapter.MultiItemTypeSupport;
+import com.marshalchen.ultimaterecyclerview.quickAdapter.extUtimateRVA.MultiItemTypeSupport;
 
 import java.util.ArrayList;
 import java.util.List;

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/quickAdapter/extUtimateRVA/MultiItemTypeSupport.java
Patch:
@@ -1,4 +1,4 @@
-package com.marshalchen.ultimaterecyclerview.quickAdapter;
+package com.marshalchen.ultimaterecyclerview.quickAdapter.extUtimateRVA;
 
 /**
  * Created by hesk on 31/7/15.

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateRecyclerView.java
Patch:
@@ -690,7 +690,7 @@ private void updateHelperDisplays() {
          * + getItemCount is zero
          */
         if (mAdapter.getAdapterItemCount() == 0) {
-            mEmpty.setVisibility(mEmptyId == 0 ? View.VISIBLE : View.GONE);
+            mEmpty.setVisibility(mEmptyId != 0 ? View.VISIBLE : View.GONE);
         }
         if (mAdapter.getCustomLoadMoreView() == null) return;
         if (mAdapter.getAdapterItemCount() >= showLoadMoreItemNum && mAdapter.getCustomLoadMoreView().getVisibility() == View.GONE) {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/SimpleAdapter.java
Patch:
@@ -166,7 +166,8 @@ public void onItemMove(int fromPosition, int toPosition) {
     @Override
     public void onItemDismiss(int position) {
         remove(position);
-        notifyItemRemoved(position);
+       // notifyItemRemoved(position);
+        notifyDataSetChanged();
     }
 //
 //    private int getRandomColor() {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/animators/internal/ViewHelper.java
Patch:
@@ -1,5 +1,7 @@
 package com.marshalchen.ultimaterecyclerview.animators.internal;
 
+import android.annotation.TargetApi;
+import android.os.Build;
 import android.support.v4.view.ViewCompat;
 import android.view.View;
 
@@ -21,6 +23,7 @@
 
 public final class ViewHelper {
 
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
     public static void clear(View v) {
         ViewCompat.setAlpha(v, 1);
         ViewCompat.setScaleY(v, 1);

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/DebugLoadMoreActivity.java
Patch:
@@ -25,7 +25,6 @@
 import com.marshalchen.ultimaterecyclerview.SwipeableRecyclerViewTouchListener;
 import com.marshalchen.ultimaterecyclerview.URLogs;
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
-import com.marshalchen.ultimaterecyclerview.Utils.ScrollSmoothLineaerLayoutManager;
 import com.marshalchen.ultimaterecyclerview.animators.BaseItemAnimator;
 import com.marshalchen.ultimaterecyclerview.animators.FadeInAnimator;
 import com.marshalchen.ultimaterecyclerview.animators.FadeInDownAnimator;
@@ -50,11 +49,12 @@
 import com.marshalchen.ultimaterecyclerview.animators.SlideInUpAnimator;
 import com.marshalchen.ultimaterecyclerview.demo.modules.SampleDataboxset;
 import com.marshalchen.ultimaterecyclerview.demo.modules.FastBinding;
+import com.marshalchen.ultimaterecyclerview.uiUtils.ScrollSmoothLineaerLayoutManager;
 
 /**
  * Created by hesk on 7/1/2015.
  */
-public class debugLoadMore extends AppCompatActivity {
+public class DebugLoadMoreActivity extends AppCompatActivity {
 
     UltimateRecyclerView ultimateRecyclerView;
     SimpleAdapter simpleRecyclerViewAdapter = null;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/FastBinding.java
Patch:
@@ -3,13 +3,12 @@
 import android.content.Context;
 import android.content.Intent;
 import android.support.annotation.IdRes;
-import android.support.v7.app.AppCompatActivity;
 
 import com.marshalchen.ultimaterecyclerview.demo.CustomSwipeToRefreshRefreshActivity;
 import com.marshalchen.ultimaterecyclerview.demo.MultiViewTypesActivity;
 import com.marshalchen.ultimaterecyclerview.demo.R;
 import com.marshalchen.ultimaterecyclerview.demo.TestAdMob;
-import com.marshalchen.ultimaterecyclerview.demo.debugLoadMore;
+import com.marshalchen.ultimaterecyclerview.demo.DebugLoadMoreActivity;
 import com.marshalchen.ultimaterecyclerview.demo.scrollableobservable.ScrollObservablesActivity;
 import com.marshalchen.ultimaterecyclerview.demo.swipelist.SwipeListViewExampleActivity;
 
@@ -22,7 +21,7 @@ public enum FastBinding {
     admob(R.id.admob, TestAdMob.class),
     scrollactivity(R.id.scrollactivity, ScrollObservablesActivity.class),
     swipe_and_drag(R.id.swipe_and_drag, SwipeListViewExampleActivity.class),
-    debug_load_more(R.id.debug_load_more, debugLoadMore.class);
+    debug_load_more(R.id.debug_load_more, DebugLoadMoreActivity.class);
 
     private int id;
     private Class<?> clazz;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/TestAdMob.java
Patch:
@@ -5,6 +5,7 @@
 import android.os.Handler;
 import android.support.v4.widget.SwipeRefreshLayout;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.Toolbar;
@@ -26,7 +27,7 @@
 /**
  * Created by hesk on 20/5/15.
  */
-public class TestAdMob extends ActionBarActivity {
+public class TestAdMob extends AppCompatActivity {
 
     UltimateRecyclerView ultimateRecyclerView;
     admobdfpadapter simpleRecyclerViewAdapter = null;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/MainActivity.java
Patch:
@@ -172,7 +172,7 @@ public void onDismissedBySwipeLeft(RecyclerView recyclerView, int[] reverseSorte
                                     URLogs.d("remove---");
                                     simpleRecyclerViewAdapter.remove(position);
                                 }
-                                //  simpleRecyclerViewAdapter.notifyDataSetChanged();
+                                  simpleRecyclerViewAdapter.notifyDataSetChanged();
                             }
 
                             @Override
@@ -184,7 +184,7 @@ public void onDismissedBySwipeRight(RecyclerView recyclerView, int[] reverseSort
                                     URLogs.d("remove---");
                                     simpleRecyclerViewAdapter.remove(position);
                                 }
-                                // simpleRecyclerViewAdapter.notifyDataSetChanged();
+                                 simpleRecyclerViewAdapter.notifyDataSetChanged();
                             }
                         });
 

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/SimpleAdapter.java
Patch:
@@ -83,7 +83,7 @@ public void swapPositions(int from, int to) {
 
     @Override
     public long generateHeaderId(int position) {
-        URLogs.d("position--" + position + "   " + getItem(position));
+       // URLogs.d("position--" + position + "   " + getItem(position));
         if (getItem(position).length() > 0)
             return getItem(position).charAt(0);
         else return -1;

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/CustomSwipeToRefreshRefreshActivity.java
Patch:
@@ -553,7 +553,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
         //noinspection SimplifiableIfStatement
         if (id == R.id.action_bottom) {
-            Intent intent = new Intent(this, SwipeBottomActivity.class);
+            Intent intent = new Intent(this, MultiViewTypesActivity.class);
             startActivity(intent);
             return true;
         }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/DefaultSwipeRefreshActivity.java
Patch:
@@ -343,7 +343,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
         //noinspection SimplifiableIfStatement
         if (id == R.id.action_bottom) {
-            Intent intent = new Intent(this, SwipeBottomActivity.class);
+            Intent intent = new Intent(this, MultiViewTypesActivity.class);
             startActivity(intent);
             return true;
         }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/MainActivity.java
Patch:
@@ -365,7 +365,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
         //noinspection SimplifiableIfStatement
         if (id == R.id.action_bottom) {
-            Intent intent = new Intent(this, SwipeBottomActivity.class);
+            Intent intent = new Intent(this, MultiViewTypesActivity.class);
             startActivity(intent);
             return true;
         } else if (id == R.id.action_custom) {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/MultiViewTypesActivity.java
Patch:
@@ -13,7 +13,7 @@
 import android.view.View;
 
 import com.marshalchen.ultimaterecyclerview.UltimateRecyclerView;
-import com.marshalchen.ultimaterecyclerview.demo.modules.SwipeBottomRecyclerViewAdapter;
+import com.marshalchen.ultimaterecyclerview.demo.modules.MultiViewTypesRecyclerViewAdapter;
 import com.marshalchen.ultimaterecyclerview.divideritemdecoration.HorizontalDividerItemDecoration;
 
 import java.util.ArrayList;
@@ -22,7 +22,7 @@
 /**
  * A activity which can be swiped to show bottom view with default horizontal divider item decoration.
  */
-public class SwipeBottomActivity extends ActionBarActivity {
+public class MultiViewTypesActivity extends ActionBarActivity {
 
     UltimateRecyclerView ultimateRecyclerView;
     SimpleAdapter simpleRecyclerViewAdapter = null;
@@ -72,7 +72,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 "Card 12",
                 "Card 13",
                 "Card 14"};
-        ultimateRecyclerView.setAdapter(new SwipeBottomRecyclerViewAdapter(stringList));
+        ultimateRecyclerView.setAdapter(new MultiViewTypesRecyclerViewAdapter(stringList));
         ultimateRecyclerView.setDefaultOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
             @Override
             public void onRefresh() {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/modules/MultiViewTypesRecyclerViewAdapter.java
Patch:
@@ -14,7 +14,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class SwipeBottomRecyclerViewAdapter extends UltimateDifferentViewTypeAdapter {
+public class MultiViewTypesRecyclerViewAdapter extends UltimateDifferentViewTypeAdapter {
     private List<String> mDataset;
 
     private enum SwipedState {
@@ -38,7 +38,7 @@ public ViewHolder(View v) {
     }
 
     // Provide a suitable constructor (depends on the kind of dataset)
-    public SwipeBottomRecyclerViewAdapter(List<String> dataSet) {
+    public MultiViewTypesRecyclerViewAdapter(List<String> dataSet) {
         mDataset = dataSet;
         mItemSwipedStates = new ArrayList<>();
         for (int i = 0; i < dataSet.size(); i++) {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/SwipeBottomActivity.java
Patch:
@@ -72,7 +72,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 "Card 12",
                 "Card 13",
                 "Card 14"};
-        ultimateRecyclerView.setAdapter(new SwipeBottomRecyclerViewAdapter(mDemoDataSet));
+        ultimateRecyclerView.setAdapter(new SwipeBottomRecyclerViewAdapter(stringList));
         ultimateRecyclerView.setDefaultOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
             @Override
             public void onRefresh() {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateViewAdapter.java
Patch:
@@ -202,7 +202,7 @@ public long getHeaderId(int position) {
 
     public abstract long generateHeaderId(int position);
 
-    public class UltimateRecyclerviewViewHolder extends RecyclerView.ViewHolder {
+    public static class UltimateRecyclerviewViewHolder extends RecyclerView.ViewHolder {
         public UltimateRecyclerviewViewHolder(View itemView) {
             super(itemView);
         }

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/SimpleAnimationAdapter.java
Patch:
@@ -1,7 +1,6 @@
 package com.marshalchen.ultimaterecyclerview.demo;
 
 import android.animation.Animator;
-import android.animation.ObjectAnimator;
 import android.graphics.Color;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
@@ -41,7 +40,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             // ((ViewHolder) holder).itemView.setActivated(selectedItems.get(position, false));
         }
         if (!isFirstOnly || position > mLastPosition) {
-            for (Animator anim : getAnimators(holder.itemView,AnimationType.ScaleIn)) {
+            for (Animator anim : getAnimators(holder.itemView, AdapterAnimationType.ScaleIn)) {
                 anim.setDuration(mDuration).start();
                 anim.setInterpolator(mInterpolator);
             }

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateRecyclerView.java
Patch:
@@ -562,6 +562,7 @@ private void update() {
 //
                     if (mAdapter == null)
                         return;
+
                     if (mRecyclerView.getAdapter().getItemCount() == 0 && mEmptyId != 0) {
                         mEmpty.setVisibility(View.VISIBLE);
                     } else if (mEmptyId != 0) {
@@ -581,7 +582,7 @@ private void update() {
                 }
 
             });
-        if ((adapter == null || adapter.getAdapterItemCount() == 0) && mEmptyId != 0) {
+        if ((adapter == null || mAdapter.getAdapterItemCount() == 0) && mEmptyId != 0) {
             mEmpty.setVisibility(View.VISIBLE);
         }
 //        if (adapter == null || adapter.getAdapterItemCount() == 0) {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/MainActivity.java
Patch:
@@ -96,6 +96,8 @@ public void run() {
                         ultimateRecyclerView.setRefreshing(false);
                         //   ultimateRecyclerView.scrollBy(0, -50);
                         linearLayoutManager.scrollToPosition(0);
+//                        ultimateRecyclerView.setAdapter(simpleRecyclerViewAdapter);
+//                        simpleRecyclerViewAdapter.notifyDataSetChanged();
                     }
                 }, 1000);
             }

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateRecyclerView.java
Patch:
@@ -25,6 +25,7 @@
 import android.widget.RelativeLayout;
 
 import com.marshalchen.ultimaterecyclerview.ui.DividerItemDecoration;
+import com.marshalchen.ultimaterecyclerview.ui.VerticalSwipeRefreshLayout;
 import com.marshalchen.ultimaterecyclerview.ui.floatingactionbutton.FloatingActionButton;
 import com.marshalchen.ultimaterecyclerview.ui.floatingactionbutton.FloatingActionsMenu;
 import com.nineoldandroids.animation.ValueAnimator;
@@ -78,7 +79,7 @@ public class UltimateRecyclerView extends FrameLayout {
 
     public int showLoadMoreItemNum = 3;
 
-    SwipeRefreshLayout mSwipeRefreshLayout;
+    VerticalSwipeRefreshLayout mSwipeRefreshLayout;
     public PtrFrameLayout mPtrFrameLayout;
 
     public UltimateRecyclerView(Context context) {
@@ -103,7 +104,7 @@ private void initViews() {
         LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         View view = inflater.inflate(R.layout.ultimate_recycler_view_layout, this);
         mRecyclerView = (RecyclerView) view.findViewById(R.id.ultimate_list);
-        mSwipeRefreshLayout = (SwipeRefreshLayout) view.findViewById(R.id.swipe_refresh_layout);
+        mSwipeRefreshLayout = (VerticalSwipeRefreshLayout) view.findViewById(R.id.swipe_refresh_layout);
         mSwipeRefreshLayout.setEnabled(false);
 
         if (mRecyclerView != null) {

File: UltimateRecyclerView/app/src/main/java/com/marshalchen/ultimaterecyclerview/demo/SimpleAdapter.java
Patch:
@@ -23,7 +23,7 @@ public SimpleAdapter(List<String> stringList) {
 
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
-        if (position < stringList.size() && position != 0) {
+        if (position < stringList.size() && (customHeaderView!=null?position != 0:true)) {
             ((ViewHolder) holder).textViewSample.setText(stringList.get(position));
             // ((ViewHolder) holder).itemView.setActivated(selectedItems.get(position, false));
         }

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateViewAdapter.java
Patch:
@@ -20,7 +20,7 @@ public void setCustomHeaderView(UltimateRecyclerView.CustomRelativeWrapper custo
         this.customHeaderView = customHeaderView;
     }
 
-    private UltimateRecyclerView.CustomRelativeWrapper customHeaderView = null;
+    protected UltimateRecyclerView.CustomRelativeWrapper customHeaderView = null;
 
     @Override
     public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/UltimateViewAdapter.java
Patch:
@@ -104,6 +104,8 @@ public void swapPositions(List<?> list, int from, int to) {
     }
 
     public <T> void insert(List<T> list, T object, int position) {
+        if (customHeaderView != null && position == 0)
+            position++;
         list.add(position, object);
         notifyItemInserted(position);
         //  notifyItemChanged(position + 1);

File: UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/SwipeToDismissTouchListener.java
Patch:
@@ -145,7 +145,7 @@ public boolean onInterceptTouchEvent(final RecyclerView view, MotionEvent motion
     private boolean down(MotionEvent motionEvent) {
 
         if (mPaused) return false;
-        mCallbacks.onTouchDown();
+
         mDownX = motionEvent.getRawX();
         mDownY = motionEvent.getRawY();
         mSwipeView = mRecyclerView.findChildViewUnder(motionEvent.getX(), motionEvent.getY());
@@ -264,6 +264,7 @@ private boolean move(MotionEvent motionEvent) {
         }
 
         if (mSwiping) {
+            mCallbacks.onTouchDown();
             mTranslationX = deltaX;
             mSwipeView.setTranslationX(deltaX - mSwipingSlop);
             mSwipeView.setAlpha(Math.max(0f, Math.min(1f,

