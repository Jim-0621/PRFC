File: permission/src/main/java/com/yanzhenjie/permission/checker/StrictChecker.java
Patch:
@@ -105,7 +105,7 @@ private boolean hasPermission(Context context, String permission) {
                 case Permission.READ_EXTERNAL_STORAGE:
                     return checkReadStorage();
                 case Permission.WRITE_EXTERNAL_STORAGE:
-                    return checkWriteStorage();
+                    return checkWriteStorage(context);
             }
         } catch (Throwable e) {
             return false;
@@ -194,8 +194,8 @@ private static boolean checkReadStorage() throws Throwable {
         return test.test();
     }
 
-    private static boolean checkWriteStorage() throws Throwable {
-        PermissionTest test = new StorageWriteTest();
+    private static boolean checkWriteStorage(Context context) throws Throwable {
+        PermissionTest test = new StorageWriteTest(context);
         return test.test();
     }
 }
\ No newline at end of file

File: support/src/main/java/com/yanzhenjie/permission/bridge/RequestExecutor.java
Patch:
@@ -95,6 +95,8 @@ public void onCallback() {
         synchronized (this) {
             mMessenger.unRegister();
             mRequest.getCallback().onCallback();
+            mMessenger = null;
+            mRequest = null;
             notify();
         }
     }

File: x/src/main/java/com/yanzhenjie/permission/bridge/RequestExecutor.java
Patch:
@@ -95,6 +95,8 @@ public void onCallback() {
         synchronized (this) {
             mMessenger.unRegister();
             mRequest.getCallback().onCallback();
+            mMessenger = null;
+            mRequest = null;
             notify();
         }
     }

File: permission/src/main/java/com/yanzhenjie/permission/checker/StorageReadTest.java
Patch:
@@ -16,6 +16,7 @@
 package com.yanzhenjie.permission.checker;
 
 import android.os.Environment;
+import android.text.TextUtils;
 
 import java.io.File;
 
@@ -29,6 +30,8 @@ class StorageReadTest implements PermissionTest {
 
     @Override
     public boolean test() throws Throwable {
+        if (!TextUtils.equals(Environment.MEDIA_MOUNTED, Environment.getExternalStorageState())) return true;
+
         File directory = Environment.getExternalStorageDirectory();
         if (directory.exists() && directory.canRead()) {
             long modified = directory.lastModified();

File: permission/src/main/java/com/yanzhenjie/permission/checker/StrictChecker.java
Patch:
@@ -75,7 +75,7 @@ private boolean hasPermission(Context context, String permission) {
                 case Permission.ACCESS_FINE_LOCATION:
                     return checkFineLocation(context);
                 case Permission.RECORD_AUDIO:
-                    return checkRecordAudio(context);
+                    return checkRecordAudio();
                 case Permission.READ_PHONE_STATE:
                     return checkReadPhoneState(context);
                 case Permission.CALL_PHONE:
@@ -147,8 +147,8 @@ private static boolean checkFineLocation(Context context) throws Throwable {
         return test.test();
     }
 
-    private static boolean checkRecordAudio(Context context) throws Throwable {
-        PermissionTest test = new RecordAudioTest(context);
+    private static boolean checkRecordAudio() throws Throwable {
+        PermissionTest test = new RecordAudioTest();
         return test.test();
     }
 

File: permission/src/main/java/com/yanzhenjie/permission/Permission.java
Patch:
@@ -45,7 +45,7 @@ public final class Permission {
     public static final String CALL_PHONE = "android.permission.CALL_PHONE";
     public static final String READ_CALL_LOG = "android.permission.READ_CALL_LOG";
     public static final String WRITE_CALL_LOG = "android.permission.WRITE_CALL_LOG";
-    public static final String ADD_VOICEMAIL = "com.android.voicemail.permission.ADD_VOICEMAIL";
+    public static final String ADD_VOICEMAIL = "android.voicemail.permission.ADD_VOICEMAIL";
     public static final String USE_SIP = "android.permission.USE_SIP";
     public static final String PROCESS_OUTGOING_CALLS = "android.permission.PROCESS_OUTGOING_CALLS";
 

File: permission/src/main/java/com/yanzhenjie/permission/source/ContextSource.java
Patch:
@@ -45,7 +45,7 @@ public void startActivity(Intent intent) {
         if (mContext instanceof Activity) {
             mContext.startActivity(intent);
         } else {
-            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             mContext.startActivity(intent);
         }
     }
@@ -56,7 +56,7 @@ public void startActivityForResult(Intent intent, int requestCode) {
             Activity activity = (Activity) mContext;
             activity.startActivityForResult(intent, requestCode);
         } else {
-            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             mContext.startActivity(intent);
         }
     }

File: permission/src/main/java/com/yanzhenjie/permission/checker/StandardChecker.java
Patch:
@@ -55,7 +55,7 @@ public boolean hasPermission(Context context, List<String> permissions) {
 
             if (opsManager == null) opsManager = (AppOpsManager) context.getSystemService(Context.APP_OPS_SERVICE);
             result = opsManager.checkOpNoThrow(op, android.os.Process.myUid(), context.getPackageName());
-            if (result != AppOpsManager.MODE_ALLOWED) {
+            if (result != AppOpsManager.MODE_ALLOWED && result != 4) {
                 return false;
             }
         }

File: permission/src/main/java/com/yanzhenjie/permission/source/ContextSource.java
Patch:
@@ -45,7 +45,7 @@ public void startActivity(Intent intent) {
         if (mContext instanceof Activity) {
             mContext.startActivity(intent);
         } else {
-            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             mContext.startActivity(intent);
         }
     }
@@ -56,7 +56,7 @@ public void startActivityForResult(Intent intent, int requestCode) {
             Activity activity = (Activity) mContext;
             activity.startActivityForResult(intent, requestCode);
         } else {
-            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             mContext.startActivity(intent);
         }
     }
@@ -80,4 +80,4 @@ public boolean isShowRationalePermission(String permission) {
             return false;
         }
     }
-}
\ No newline at end of file
+}

File: permission/src/main/java/com/yanzhenjie/permission/setting/PermissionSetting.java
Patch:
@@ -137,7 +137,7 @@ private static Intent oppoApi(Context context) {
      * Meizu phone to achieve the method.
      */
     private static Intent meizuApi(Context context) {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
             return defaultApi(context);
         }
         Intent intent = new Intent("com.meizu.safe.security.SHOW_APPSEC");

File: permission/src/main/java/com/yanzhenjie/permission/PermissionActivity.java
Patch:
@@ -45,6 +45,7 @@ public final class PermissionActivity extends Activity {
     /**
      * Request for permissions.
      */
+    @RequiresApi(api = Build.VERSION_CODES.M)
     public static void requestPermission(Context context, String[] permissions, PermissionListener permissionListener) {
         sPermissionListener = permissionListener;
 

File: permission/src/main/java/com/yanzhenjie/permission/MRequest.java
Patch:
@@ -120,15 +120,15 @@ public void execute() {
 
     @Override
     public void cancel() {
-        onRequestPermissionsResult(mDeniedPermissions);
+        onRequestPermissionsResult();
     }
 
     @Override
-    public void onRequestPermissionsResult(@NonNull final String[] permissions) {
+    public void onRequestPermissionsResult() {
         HANDLER.postDelayed(new Runnable() {
             @Override
             public void run() {
-                List<String> deniedList = getDeniedPermissions(DOUBLE_CHECKER, mSource, permissions);
+                List<String> deniedList = getDeniedPermissions(DOUBLE_CHECKER, mSource, mDeniedPermissions);
                 if (deniedList.isEmpty()) {
                     callbackSucceed();
                 } else {

File: permission/src/main/java/com/yanzhenjie/permission/PermissionActivity.java
Patch:
@@ -73,7 +73,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
         if (sPermissionListener != null) {
-            sPermissionListener.onRequestPermissionsResult(permissions);
+            sPermissionListener.onRequestPermissionsResult();
             sPermissionListener = null;
         }
         finish();
@@ -91,7 +91,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
      * permission callback.
      */
     interface PermissionListener {
-        void onRequestPermissionsResult(@NonNull String[] permissions);
+        void onRequestPermissionsResult();
     }
 
     /**

File: permission/src/main/java/com/yanzhenjie/permission/checker/StandardChecker.java
Patch:
@@ -50,7 +50,7 @@ public boolean hasPermission(@NonNull Context context, @NonNull List<String> per
 
             String op = AppOpsManager.permissionToOp(permission);
             if (TextUtils.isEmpty(op)) {
-                return true;
+                continue;
             }
 
             AppOpsManager appOpsManager = context.getSystemService(AppOpsManager.class);

File: permission/src/main/java/com/yanzhenjie/permission/AndPermission.java
Patch:
@@ -214,7 +214,7 @@ public static SettingService permissionSetting(@NonNull android.app.Fragment fra
     /**
      * Create a service that opens the permission setting page.
      *
-     * @param context {@link android.app.Fragment}.
+     * @param context {@link Context}.
      * @return {@link SettingService}.
      */
     @NonNull

File: permission/src/main/java/com/yanzhenjie/permission/AndPermission.java
Patch:
@@ -214,7 +214,7 @@ public static SettingService permissionSetting(@NonNull android.app.Fragment fra
     /**
      * Create a service that opens the permission setting page.
      *
-     * @param context {@link android.app.Fragment}.
+     * @param context {@link Context}.
      * @return {@link SettingService}.
      */
     @NonNull

File: permission/src/main/java/com/yanzhenjie/permission/checker/PermissionTest.java
Patch:
@@ -28,6 +28,7 @@ class CursorTest {
         public static void read(Cursor cursor) {
             int count = cursor.getCount();
             if (count > 0) {
+                cursor.moveToFirst();
                 int type = cursor.getType(0);
                 switch (type) {
                     case Cursor.FIELD_TYPE_BLOB:

File: permission/src/main/java/com/yanzhenjie/permission/target/Target.java
Patch:
@@ -17,7 +17,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-import android.support.annotation.NonNull;
 
 /**
  * <p>Request target.</p>
@@ -27,8 +26,6 @@ public interface Target {
 
     Context getContext();
 
-    boolean shouldShowRationalePermissions(@NonNull String... permissions);
-
     void startActivity(Intent intent);
 
     void startActivityForResult(Intent intent, int requestCode);

File: permission/src/main/java/com/yanzhenjie/permission/Cancelable.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/DefaultRequest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/PermissionActivity.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -53,6 +53,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
         if (mPermissionListener != null)
             mPermissionListener.onRequestPermissionsResult(permissions, grantResults);
+        mPermissionListener = null;
         finish();
     }
 

File: permission/src/main/java/com/yanzhenjie/permission/PermissionListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/PermissionNo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/PermissionYes.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/Rationale.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/RationaleDialog.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/RationaleListener.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/RationaleRequest.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/Request.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/SettingDialog.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/SettingExecutor.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/SettingService.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/target/AppActivityTarget.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/target/AppFragmentTarget.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/target/ContextTarget.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/target/SupportFragmentTarget.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: permission/src/main/java/com/yanzhenjie/permission/target/Target.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: sample/src/main/java/com/yanzhenjie/permission/sample/MainActivity.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: sample/src/main/java/com/yanzhenjie/permission/sample/OtherActivity.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright © Yan Zhenjie. All Rights Reserved
+ * Copyright © Yan Zhenjie
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

