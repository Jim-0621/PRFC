File: java/PublisherConfirms.java
Patch:
@@ -129,7 +129,7 @@ static boolean waitUntil(Duration timeout, BooleanSupplier condition) throws Int
         int waited = 0;
         while (!condition.getAsBoolean() && waited < timeout.toMillis()) {
             Thread.sleep(100L);
-            waited = +100;
+            waited += 100;
         }
         return condition.getAsBoolean();
     }

File: java/Recv.java
Patch:
@@ -2,6 +2,7 @@
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.DeliverCallback;
+import java.nio.charset.StandardCharsets;
 
 public class Recv {
 

File: scala/.mvn/wrapper/MavenWrapperDownloader.java
Patch:
@@ -7,7 +7,7 @@ Licensed to the Apache Software Foundation (ASF) under one
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 
-  http://www.apache.org/licenses/LICENSE-2.0
+  https://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an

File: soapui/.mvn/wrapper/MavenWrapperDownloader.java
Patch:
@@ -7,7 +7,7 @@ Licensed to the Apache Software Foundation (ASF) under one
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 
-  http://www.apache.org/licenses/LICENSE-2.0
+  https://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an

File: spring-amqp/.mvn/wrapper/MavenWrapperDownloader.java
Patch:
@@ -7,7 +7,7 @@ Licensed to the Apache Software Foundation (ASF) under one
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 
-  http://www.apache.org/licenses/LICENSE-2.0
+  https://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/RabbitAmqpTutorialsApplication.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/RabbitAmqpTutorialsRunner.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut1/Tut1Config.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut1/Tut1Receiver.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut1/Tut1Sender.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut2/Tut2Config.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut2/Tut2Receiver.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut2/Tut2Sender.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut3/Tut3Config.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut3/Tut3Receiver.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut3/Tut3Sender.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut4/Tut4Config.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut4/Tut4Receiver.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut4/Tut4Sender.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut5/Tut5Config.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut5/Tut5Receiver.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut5/Tut5Sender.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut6/Tut6Client.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut6/Tut6Config.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut6/Tut6Server.java
Patch:
@@ -5,7 +5,7 @@
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *      https://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut1/Tut1Config.java
Patch:
@@ -23,15 +23,15 @@
 /**
  * @author Gary Russell
  * @author Scott Deeg
- *
+ * @author Wayne Lund
  */
 @Profile({"tut1","hello-world"})
 @Configuration
 public class Tut1Config {
 
 	@Bean
 	public Queue hello() {
-		return new Queue("tut.hello");
+		return new Queue("hello");
 	}
 
 	@Profile("receiver")

File: spring-amqp/src/main/java/org/springframework/amqp/tutorials/tut1/Tut1Receiver.java
Patch:
@@ -21,8 +21,9 @@
 /**
  * @author Gary Russell
  * @author Scott Deeg
+ * @author Wayne Lund
  */
-@RabbitListener(queues = "tut.hello")
+@RabbitListener(queues = "hello")
 public class Tut1Receiver {
 
 	@RabbitHandler

File: java/EmitLog.java
Patch:
@@ -1,3 +1,4 @@
+import com.rabbitmq.client.BuiltinExchangeType;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.Channel;
@@ -12,7 +13,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "fanout");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);
 
     String message = getMessage(argv);
 

File: java/EmitLogDirect.java
Patch:
@@ -1,3 +1,4 @@
+import com.rabbitmq.client.BuiltinExchangeType;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.Channel;
@@ -13,7 +14,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "direct");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);
 
     String severity = getSeverity(argv);
     String message = getMessage(argv);

File: java/EmitLogHeader.java
Patch:
@@ -38,7 +38,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "headers");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.HEADERS);
 
     AMQP.BasicProperties.Builder builder = new AMQP.BasicProperties.Builder();
 

File: java/EmitLogTopic.java
Patch:
@@ -1,3 +1,4 @@
+import com.rabbitmq.client.BuiltinExchangeType;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.Channel;
@@ -16,7 +17,7 @@ public static void main(String[] argv) {
       connection = factory.newConnection();
       channel = connection.createChannel();
 
-      channel.exchangeDeclare(EXCHANGE_NAME, "topic");
+      channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);
 
       String routingKey = getRouting(argv);
       String message = getMessage(argv);

File: java/ReceiveLogHeader.java
Patch:
@@ -18,7 +18,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "headers");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.HEADERS);
 
     // The API requires a routing key, but in fact if you are using a header exchange the
     // value of the routing key is not used in the routing. You can receive information

File: java/ReceiveLogs.java
Patch:
@@ -11,7 +11,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "fanout");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);
     String queueName = channel.queueDeclare().getQueue();
     channel.queueBind(queueName, EXCHANGE_NAME, "");
 

File: java/ReceiveLogsDirect.java
Patch:
@@ -12,7 +12,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "direct");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);
     String queueName = channel.queueDeclare().getQueue();
 
     if (argv.length < 1){

File: java/ReceiveLogsTopic.java
Patch:
@@ -12,7 +12,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "topic");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);
     String queueName = channel.queueDeclare().getQueue();
 
     if (argv.length < 1) {

File: java/EmitLog.java
Patch:
@@ -1,3 +1,4 @@
+import com.rabbitmq.client.BuiltinExchangeType;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.Channel;
@@ -12,7 +13,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "fanout");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);
 
     String message = getMessage(argv);
 

File: java/EmitLogDirect.java
Patch:
@@ -1,3 +1,4 @@
+import com.rabbitmq.client.BuiltinExchangeType;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.Channel;
@@ -13,7 +14,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "direct");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);
 
     String severity = getSeverity(argv);
     String message = getMessage(argv);

File: java/EmitLogHeader.java
Patch:
@@ -38,7 +38,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "headers");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.HEADERS);
 
     AMQP.BasicProperties.Builder builder = new AMQP.BasicProperties.Builder();
 

File: java/EmitLogTopic.java
Patch:
@@ -1,3 +1,4 @@
+import com.rabbitmq.client.BuiltinExchangeType;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.Channel;
@@ -16,7 +17,7 @@ public static void main(String[] argv) {
       connection = factory.newConnection();
       channel = connection.createChannel();
 
-      channel.exchangeDeclare(EXCHANGE_NAME, "topic");
+      channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);
 
       String routingKey = getRouting(argv);
       String message = getMessage(argv);

File: java/ReceiveLogHeader.java
Patch:
@@ -18,7 +18,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "headers");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.HEADERS);
 
     // The API requires a routing key, but in fact if you are using a header exchange the
     // value of the routing key is not used in the routing. You can receive information

File: java/ReceiveLogs.java
Patch:
@@ -11,7 +11,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "fanout");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.FANOUT);
     String queueName = channel.queueDeclare().getQueue();
     channel.queueBind(queueName, EXCHANGE_NAME, "");
 

File: java/ReceiveLogsDirect.java
Patch:
@@ -12,7 +12,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "direct");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.DIRECT);
     String queueName = channel.queueDeclare().getQueue();
 
     if (argv.length < 1){

File: java/ReceiveLogsTopic.java
Patch:
@@ -12,7 +12,7 @@ public static void main(String[] argv) throws Exception {
     Connection connection = factory.newConnection();
     Channel channel = connection.createChannel();
 
-    channel.exchangeDeclare(EXCHANGE_NAME, "topic");
+    channel.exchangeDeclare(EXCHANGE_NAME, BuiltinExchangeType.TOPIC);
     String queueName = channel.queueDeclare().getQueue();
 
     if (argv.length < 1) {

File: java/NewTask.java
Patch:
@@ -1,4 +1,3 @@
-import java.io.IOException;
 import com.rabbitmq.client.ConnectionFactory;
 import com.rabbitmq.client.Connection;
 import com.rabbitmq.client.Channel;
@@ -8,7 +7,7 @@ public class NewTask {
   
   private static final String TASK_QUEUE_NAME = "task_queue";
 
-  public static void main(String[] argv) throws java.io.IOException {
+  public static void main(String[] argv) throws Exception {
 
     ConnectionFactory factory = new ConnectionFactory();
     factory.setHost("localhost");
@@ -43,4 +42,4 @@ private static String joinStrings(String[] strings, String delimiter) {
     }
     return words.toString();
   }
-}
\ No newline at end of file
+}

File: java/Worker.java
Patch:
@@ -27,10 +27,10 @@ public static void main(String[] argv)
     
     while (true) {
       QueueingConsumer.Delivery delivery = consumer.nextDelivery();
-      String body = new String(delivery.getBody());
+      String message = new String(delivery.getBody());
       
-      System.out.println(" [x] Received '" + body + "'");
-      doWork(body);
+      System.out.println(" [x] Received '" + message + "'");
+      doWork(message);
       System.out.println(" [x] Done");
 
       channel.basicAck(delivery.getEnvelope().getDeliveryTag(), false);

File: java/Recv.java
Patch:
@@ -10,9 +10,9 @@ public static void main(String[] argv) {
       try {
         conn = new ConnectionFactory().newConnection();
         Channel chan = conn.createChannel();
-        chan.queueDeclare("test", false, false, false, null);
+        chan.queueDeclare("hello", false, false, false, null);
         QueueingConsumer consumer = new QueueingConsumer(chan);
-        chan.basicConsume("test", true, consumer);
+        chan.basicConsume("hello", true, consumer);
         while (true) {
           QueueingConsumer.Delivery delivery = consumer.nextDelivery();
           System.out.println(new String(delivery.getBody()));

File: java/Send.java
Patch:
@@ -10,8 +10,8 @@ public static void main(String[] argv) {
       try {
         conn = new ConnectionFactory().newConnection();
         Channel chan = conn.createChannel();
-        chan.queueDeclare("test", false, false, false, null);
-        chan.basicPublish("", "test", null, "Hello World!".getBytes());
+        chan.queueDeclare("hello", false, false, false, null);
+        chan.basicPublish("", "hello", null, "Hello World!".getBytes());
       }
       finally {
         if (conn != null) conn.close();

