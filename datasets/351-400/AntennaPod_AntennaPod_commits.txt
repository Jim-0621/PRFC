File: playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java
Patch:
@@ -1862,7 +1862,9 @@ public void onPause() {
         @Override
         public void onStop() {
             Log.d(TAG, "onStop()");
-            mediaPlayer.stopPlayback(true);
+            if (!mediaPlayer.isCasting()) {
+                mediaPlayer.stopPlayback(true);
+            }
         }
 
         @Override

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -250,6 +250,9 @@ public void onCreate(Bundle savedInstanceState) {
                             status = DownloadStatus.STATE_QUEUED;
                             progress = 0;
                         }
+                        if (updatedEpisodes.containsKey(downloadUrl) && status == DownloadStatus.STATE_COMPLETED) {
+                            continue; // In case of a duplicate, prefer running/queued over completed
+                        }
                         updatedEpisodes.put(downloadUrl, new DownloadStatus(status, progress));
                     }
                     DownloadServiceInterface.get().setCurrentDownloads(updatedEpisodes);

File: app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeMultiSelectActionHandler.java
Patch:
@@ -103,7 +103,8 @@ private void downloadChecked(List<FeedItem> items) {
     private void deleteChecked(List<FeedItem> items) {
         int countHasMedia = 0;
         for (FeedItem feedItem : items) {
-            if (feedItem.hasMedia() && feedItem.getMedia().isDownloaded()) {
+            if ((feedItem.hasMedia() && feedItem.getMedia().isDownloaded())
+                    || feedItem.getFeed().isLocalFeed()) {
                 countHasMedia++;
                 DBWriter.deleteFeedMediaOfItem(activity, feedItem.getMedia());
             }

File: app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java
Patch:
@@ -83,7 +83,7 @@ public static boolean onPrepareMenu(Menu menu, List<FeedItem> selectedItems, int
             canMarkPlayed |= !item.isPlayed();
             canMarkUnplayed |= item.isPlayed();
             canResetPosition |= hasMedia && item.getMedia().getPosition() != 0;
-            canDelete |= hasMedia && item.getMedia().isDownloaded();
+            canDelete |= (hasMedia && item.getMedia().isDownloaded()) || item.getFeed().isLocalFeed();
             canDownload |= hasMedia && !item.getMedia().isDownloaded() && !item.getFeed().isLocalFeed();
             canAddFavorite |= !item.isTagged(FeedItem.TAG_FAVORITE);
             canRemoveFavorite |= item.isTagged(FeedItem.TAG_FAVORITE);

File: app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/DownloadsSection.java
Patch:
@@ -125,7 +125,7 @@ protected String getSectionTitle() {
 
     @Override
     protected String getMoreLinkTitle() {
-        return getString(R.string.downloads_label);
+        return getString(R.string.downloads_label_more);
     }
 
     private void loadItems() {

File: app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/EpisodesSurpriseSection.java
Patch:
@@ -92,7 +92,7 @@ protected String getSectionTitle() {
 
     @Override
     protected String getMoreLinkTitle() {
-        return getString(R.string.episodes_label);
+        return getString(R.string.episodes_label_more);
     }
 
 

File: app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/InboxSection.java
Patch:
@@ -116,7 +116,7 @@ protected String getSectionTitle() {
 
     @Override
     protected String getMoreLinkTitle() {
-        return getString(R.string.inbox_label);
+        return getString(R.string.inbox_label_more);
     }
 
     private void loadItems() {

File: app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/QueueSection.java
Patch:
@@ -143,7 +143,7 @@ protected String getSectionTitle() {
 
     @Override
     protected String getMoreLinkTitle() {
-        return getString(R.string.queue_label);
+        return getString(R.string.queue_label_more);
     }
 
     private void loadItems() {

File: app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/SubscriptionsSection.java
Patch:
@@ -84,7 +84,7 @@ protected String getSectionTitle() {
 
     @Override
     protected String getMoreLinkTitle() {
-        return getString(R.string.subscriptions_label);
+        return getString(R.string.subscriptions_label_more);
     }
 
     private void loadItems() {

File: app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java
Patch:
@@ -60,8 +60,8 @@ public static boolean onPrepareMenu(Menu menu, List<FeedItem> selectedItems, int
         boolean canSkip = false;
         boolean canRemoveFromQueue = false;
         boolean canAddToQueue = false;
-        boolean canVisitWebsite = selectedItems.size() == 1;
-        boolean canShare = selectedItems.size() == 1;
+        boolean canVisitWebsite = false;
+        boolean canShare = false;
         boolean canRemoveFromInbox = false;
         boolean canMarkPlayed = false;
         boolean canMarkUnplayed = false;
@@ -70,7 +70,7 @@ public static boolean onPrepareMenu(Menu menu, List<FeedItem> selectedItems, int
         boolean canDownload = false;
         boolean canAddFavorite = false;
         boolean canRemoveFavorite = false;
-        boolean canShowTranscript = selectedItems.size() == 1;
+        boolean canShowTranscript = false;
 
         for (FeedItem item : selectedItems) {
             boolean hasMedia = item.getMedia() != null;

File: net/sync/service/src/main/java/de/danoeh/antennapod/net/sync/service/SyncService.java
Patch:
@@ -112,7 +112,7 @@ public Result doWork() {
 
     private boolean someFeedWasNotRefreshedYet() {
         for (Feed feed : DBReader.getFeedList()) {
-            if (feed.getLastRefreshAttempt() == 0) {
+            if (feed.getPreferences().getKeepUpdated() && feed.getLastRefreshAttempt() == 0) {
                 return true;
             }
         }

File: app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java
Patch:
@@ -411,6 +411,7 @@ public void onQueueChanged(QueueEvent event) {
 
     @Override
     public void onStartSelectMode() {
+        viewBinding.floatingSelectMenu.setVisibility(View.VISIBLE);
         swipeActions.detach();
         updateRecyclerPadding();
         updateToolbar();

File: app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodesListFragment.java
Patch:
@@ -67,7 +67,7 @@ public abstract class EpisodesListFragment extends Fragment
     protected int page = 1;
     protected boolean isLoadingMore = false;
     protected boolean hasMoreItems = false;
-    private boolean displayUpArrow;
+    protected boolean displayUpArrow;
 
     protected EpisodeItemListRecyclerView recyclerView;
     protected EpisodeItemListAdapter listAdapter;

File: net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbCleanupTests.java
Patch:
@@ -16,6 +16,8 @@
 import de.danoeh.antennapod.model.feed.FeedItem;
 import de.danoeh.antennapod.model.feed.FeedMedia;
 import de.danoeh.antennapod.net.download.serviceinterface.AutoDownloadManager;
+import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueue;
+import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueStub;
 import de.danoeh.antennapod.storage.database.DBWriter;
 import de.danoeh.antennapod.storage.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.storage.preferences.SynchronizationSettings;
@@ -83,6 +85,7 @@ public void setUp() {
         PlaybackPreferences.init(context);
         SynchronizationSettings.init(context);
         AutoDownloadManager.setInstance(new AutoDownloadManagerImpl());
+        SynchronizationQueue.setInstance(new SynchronizationQueueStub());
     }
 
     @After

File: net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbQueueCleanupAlgorithmTest.java
Patch:
@@ -8,6 +8,8 @@
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.model.feed.FeedItem;
 import de.danoeh.antennapod.net.download.serviceinterface.AutoDownloadManager;
+import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueue;
+import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueStub;
 import de.danoeh.antennapod.storage.preferences.UserPreferences;
 
 import org.junit.Test;
@@ -26,6 +28,7 @@ public class DbQueueCleanupAlgorithmTest extends DbCleanupTests {
     public DbQueueCleanupAlgorithmTest() {
         setCleanupAlgorithm(UserPreferences.EPISODE_CLEANUP_QUEUE);
         AutoDownloadManager.setInstance(new AutoDownloadManagerImpl());
+        SynchronizationQueue.setInstance(new SynchronizationQueueStub());
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java
Patch:
@@ -250,7 +250,7 @@ private void updateToolbar() {
             viewBinding.toolbar.getMenu().findItem(R.id.visit_website_item).setVisible(false);
         }
         if (feed.isLocalFeed()) {
-            viewBinding.toolbar.getMenu().findItem(R.id.share_item).setVisible(false);
+            viewBinding.toolbar.getMenu().findItem(R.id.share_feed).setVisible(false);
         }
         if (feed.getState() == Feed.STATE_NOT_SUBSCRIBED) {
             viewBinding.toolbar.getMenu().findItem(R.id.sort_items).setVisible(false);

File: app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java
Patch:
@@ -84,9 +84,11 @@ public void onClick(View v) {
                 android.content.ClipboardManager cm = (android.content.ClipboardManager) getContext()
                         .getSystemService(Context.CLIPBOARD_SERVICE);
                 cm.setPrimaryClip(clipData);
-                if (Build.VERSION.SDK_INT <= 32) {
+                if (Build.VERSION.SDK_INT <= 32 && getActivity() instanceof MainActivity) {
                     ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.copied_to_clipboard,
                             Snackbar.LENGTH_SHORT);
+                } else if (Build.VERSION.SDK_INT <= 32) {
+                    Snackbar.make(getView(), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();
                 }
             }
         }

File: storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java
Patch:
@@ -1309,7 +1309,7 @@ public final Map<Long, Integer> getFeedCounters(FeedCounter setting, long... fee
     }
 
     private Map<Long, Integer> conditionalFeedCounterRead(String whereRead, long... feedIds) {
-        String limitFeeds = "";
+        String limitFeeds;
         if (feedIds.length > 0) {
             // work around TextUtils.join wanting only boxed items
             // and StringUtils.join() causing NoSuchMethodErrors on MIUI
@@ -1321,6 +1321,8 @@ private Map<Long, Integer> conditionalFeedCounterRead(String whereRead, long...
             // there's an extra ',', get rid of it
             builder.deleteCharAt(builder.length() - 1);
             limitFeeds = KEY_FEED + " IN (" + builder.toString() + ") AND ";
+        } else {
+            limitFeeds = SELECT_WHERE_FEED_IS_SUBSCRIBED + " AND ";
         }
 
         final String query = "SELECT " + KEY_FEED + ", COUNT(" + TABLE_NAME_FEED_ITEMS + "." + KEY_ID + ") AS count "

File: app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemViewHolder.java
Patch:
@@ -18,6 +18,7 @@
 import com.google.android.material.elevation.SurfaceColors;
 
 import de.danoeh.antennapod.R;
+import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.ui.CoverLoader;
 import de.danoeh.antennapod.actionbutton.ItemActionButton;
 import de.danoeh.antennapod.playback.service.PlaybackStatus;
@@ -204,6 +205,7 @@ private void bind(FeedMedia media) {
 
     public void bindDummy() {
         item = new FeedItem();
+        item.setFeed(new Feed("", ""));
         container.setAlpha(0.1f);
         secondaryActionIcon.setImageDrawable(null);
         isInbox.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java
Patch:
@@ -115,7 +115,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 username = savedInstanceState.getString("username");
                 password = savedInstanceState.getString("password");
             }
-            lookupUrlAndDownload(feedUrl);
+            lookupUrlAndDownload(UrlChecker.prepareUrl(feedUrl));
         }
     }
 

File: net/common/src/main/java/de/danoeh/antennapod/net/common/UrlChecker.java
Patch:
@@ -56,11 +56,11 @@ public static String prepareUrl(@NonNull String url) {
             return prepareUrl(url.substring(AP_SUBSCRIBE.length()));
         } else if (lowerCaseUrl.contains(AP_SUBSCRIBE_DEEPLINK)) {
             Log.d(TAG, "Removing " + AP_SUBSCRIBE_DEEPLINK);
-            String removedWebsite = url.substring(url.indexOf("?url=") + "?url=".length());
+            String query = Uri.parse(url).getQueryParameter("url");
             try {
-                return prepareUrl(URLDecoder.decode(removedWebsite, "UTF-8"));
+                return prepareUrl(URLDecoder.decode(query, "UTF-8"));
             } catch (UnsupportedEncodingException e) {
-                return prepareUrl(removedWebsite);
+                return prepareUrl(query);
             }
         } else if (!(lowerCaseUrl.startsWith("http://") || lowerCaseUrl.startsWith("https://"))) {
             Log.d(TAG, "Adding http:// at the beginning of the URL");

File: net/common/src/test/java/de/danoeh/antennapod/net/common/UrlCheckerTest.java
Patch:
@@ -114,6 +114,9 @@ public void testAntennaPodSubscribeDeeplink() throws UnsupportedEncodingExceptio
                 + URLEncoder.encode(feed, "UTF-8")));
         assertEquals(feed, UrlChecker.prepareUrl("http://www.antennapod.org/deeplink/subscribe?url="
                 + "example.org/podcast.rss"));
+        assertEquals(feed, UrlChecker.prepareUrl("https://antennapod.org/deeplink/subscribe?url=" + feed + "&title=a"));
+        assertEquals(feed, UrlChecker.prepareUrl("https://antennapod.org/deeplink/subscribe?url="
+                + URLEncoder.encode(feed) + "&title=a"));
     }
 
     @Test

File: net/ssl/src/main/java/de/danoeh/antennapod/net/ssl/BackportTrustManager.java
Patch:
@@ -49,6 +49,8 @@ public static X509TrustManager create() {
                     new ByteArrayInputStream(BackportCaCerts.SECTIGO_USER_TRUST.getBytes(Charset.forName("UTF-8")))));
             keystore.setCertificateEntry("LETSENCRYPT_ISRG_CA", cf.generateCertificate(
                     new ByteArrayInputStream(BackportCaCerts.LETSENCRYPT_ISRG.getBytes(Charset.forName("UTF-8")))));
+            keystore.setCertificateEntry("GLOBALSIGN_R6", cf.generateCertificate(
+                    new ByteArrayInputStream(BackportCaCerts.GLOBALSIGN_R6.getBytes(Charset.forName("UTF-8")))));
 
             List<X509TrustManager> managers = new ArrayList<>();
             managers.add(getSystemTrustManager(keystore));

File: app/src/main/java/de/danoeh/antennapod/PreferenceUpgrader.java
Patch:
@@ -68,6 +68,7 @@ private static void upgrade(int oldVersion, Context context) {
                     UserPreferences.setAllowMobileEpisodeDownload(true);
                     UserPreferences.setAllowMobileImages(true);
                     break;
+                default: // Fall-through to "images"
                 case "images":
                     UserPreferences.setAllowMobileImages(true);
                     break;

File: app/src/main/java/de/danoeh/antennapod/ui/screen/feed/preferences/FeedSettingsFragment.java
Patch:
@@ -450,7 +450,7 @@ private void setupKeepUpdatedPreference() {
 
             pref.setChecked(feedPreferences.getKeepUpdated());
             pref.setOnPreferenceChangeListener((preference, newValue) -> {
-                boolean checked = newValue == Boolean.TRUE;
+                boolean checked = Boolean.TRUE.equals(newValue);
                 feedPreferences.setKeepUpdated(checked);
                 DBWriter.setFeedPreferences(feedPreferences);
                 pref.setChecked(checked);
@@ -480,7 +480,7 @@ private void setupAutoDownloadPreference() {
             }
 
             pref.setOnPreferenceChangeListener((preference, newValue) -> {
-                boolean checked = newValue == Boolean.TRUE;
+                boolean checked = Boolean.TRUE.equals(newValue);
 
                 feedPreferences.setAutoDownload(checked);
                 DBWriter.setFeedPreferences(feedPreferences);
@@ -515,7 +515,7 @@ private void setupEpisodeNotificationPreference() {
                     requestPermissionLauncher.launch(Manifest.permission.POST_NOTIFICATIONS);
                     return false;
                 }
-                boolean checked = newValue == Boolean.TRUE;
+                boolean checked = Boolean.TRUE.equals(newValue);
                 feedPreferences.setShowEpisodeNotification(checked);
                 DBWriter.setFeedPreferences(feedPreferences);
                 pref.setChecked(checked);

File: app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/AutomaticDeletionPreferencesFragment.java
Patch:
@@ -39,7 +39,7 @@ private void setupScreen() {
             findPreference(UserPreferences.PREF_EPISODE_CLEANUP).setSummary(R.string.auto_download_disabled_globally);
         }
         findPreference(PREF_AUTO_DELETE_LOCAL).setOnPreferenceChangeListener((preference, newValue) -> {
-            if (blockAutoDeleteLocal && newValue == Boolean.TRUE) {
+            if (blockAutoDeleteLocal && newValue.equals(Boolean.TRUE)) {
                 showAutoDeleteEnableDialog();
                 return false;
             } else {

File: storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/FavoritesWriter.java
Patch:
@@ -42,8 +42,8 @@ public static void writeDocument(List<FeedItem> allFavorites, Writer writer, Con
 
         writer.append(templateParts[0]);
 
-        for (Long feedId : favoriteByFeed.keySet()) {
-            List<FeedItem> favorites = favoriteByFeed.get(feedId);
+        for (final Map.Entry<Long, List<FeedItem>> feedId : favoriteByFeed.entrySet()) {
+            final List<FeedItem> favorites = feedId.getValue();
             writer.append("<li><div>\n");
             writeFeed(writer, favorites.get(0).getFeed(), feedTemplate);
 

File: app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java
Patch:
@@ -27,7 +27,6 @@
 import static de.test.antennapod.EspressoTestUtils.openNavDrawer;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
 import static org.hamcrest.CoreMatchers.allOf;
-import static org.hamcrest.CoreMatchers.not;
 
 /**
  * Test UI for feeds that do not have media files
@@ -67,7 +66,7 @@ public void testMarkAsPlayedList() throws Exception {
         onView(withText(feed.getItemAtIndex(0).getTitle())).perform(click());
         onView(isRoot()).perform(waitForView(withText(R.string.mark_read_no_media_label), 3000));
         onView(allOf(withText(R.string.mark_read_no_media_label), isDisplayed())).perform(click());
-        onView(isRoot()).perform(waitForView(allOf(withText(R.string.mark_read_no_media_label), not(isDisplayed())), 3000));
+        EspressoTestUtils.waitForViewToDisappear(withText(R.string.mark_read_no_media_label), 3000);
     }
 
 }

File: storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java
Patch:
@@ -693,7 +693,7 @@ public void setFeedItemRead(FeedItem item, int played, boolean resetMediaPositio
             db.update(TABLE_NAME_FEED_ITEMS, values, KEY_ID + "=?", new String[]{String.valueOf(item.getId())});
             item.setPlayed(played == FeedItem.PLAYED);
 
-            if (resetMediaPosition) {
+            if (resetMediaPosition && item.hasMedia()) {
                 values.clear();
                 values.put(KEY_POSITION, 0);
                 db.update(TABLE_NAME_FEED_MEDIA, values, KEY_ID + "=?",

File: net/common/src/test/java/de/danoeh/antennapod/net/common/UrlCheckerTest.java
Patch:
@@ -162,6 +162,7 @@ public void testUrlEqualsSame() {
         assertTrue(UrlChecker.urlEquals("https://example.com/?", "https://example.com"));
         assertTrue(UrlChecker.urlEquals("https://Example.com", "https://example.com"));
         assertTrue(UrlChecker.urlEquals("https://example.com/test", "https://example.com/Test"));
+        assertTrue(UrlChecker.urlEquals("antennapod_local:abc", "antennapod_local:abc"));
     }
 
     @Test
@@ -171,5 +172,6 @@ public void testUrlEqualsDifferent() {
         assertFalse(UrlChecker.urlEquals("https://example.com/", "https://otherpodcast.example.com/"));
         assertFalse(UrlChecker.urlEquals("https://www.example.com/?id=42&a=b", "https://www.example.com/?id=43&a=b"));
         assertFalse(UrlChecker.urlEquals("https://example.com/podcast%25test", "https://example.com/podcast test"));
+        assertFalse(UrlChecker.urlEquals("antennapod_local:abc", "https://example.com/"));
     }
 }

File: app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java
Patch:
@@ -157,7 +157,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         viewBinding.progressBar.setVisibility(View.VISIBLE);
 
         ToolbarIconTintManager iconTintManager = new ToolbarIconTintManager(
-                getContext(), viewBinding.toolbar, viewBinding.collapsingToolbar) {
+                viewBinding.toolbar.getContext(), viewBinding.toolbar, viewBinding.collapsingToolbar) {
             @Override
             protected void doTint(Context themedContext) {
                 viewBinding.toolbar.getMenu().findItem(R.id.refresh_item)

File: net/common/src/main/java/de/danoeh/antennapod/net/common/BasicAuthorizationInterceptor.java
Patch:
@@ -67,6 +67,7 @@ public Response intercept(Chain chain) throws IOException {
 
         Log.d(TAG, "Authorization failed, re-trying with ISO-8859-1 encoded credentials");
         newRequest.header(HEADER_AUTHORIZATION, HttpCredentialEncoder.encode(username, password, "ISO-8859-1"));
+        response.close();
         response = chain.proceed(newRequest.build());
 
         if (response.code() != HttpURLConnection.HTTP_UNAUTHORIZED) {
@@ -75,6 +76,7 @@ public Response intercept(Chain chain) throws IOException {
 
         Log.d(TAG, "Authorization failed, re-trying with UTF-8 encoded credentials");
         newRequest.header(HEADER_AUTHORIZATION, HttpCredentialEncoder.encode(username, password, "UTF-8"));
+        response.close();
         return chain.proceed(newRequest.build());
     }
 }

File: model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java
Patch:
@@ -171,6 +171,9 @@ public long getId() {
 
     public void setId(long id) {
         this.id = id;
+        if (this.media != null) {
+            media.setItemId(id);
+        }
     }
 
     /**

File: model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java
Patch:
@@ -58,6 +58,7 @@ public FeedMedia(FeedItem i, String downloadUrl, long size,
         this.downloadUrl = downloadUrl;
         this.downloaded = false;
         this.item = i;
+        this.itemID = i != null ? i.getId() : 0;
         this.size = size;
         this.mimeType = mimeType;
     }
@@ -71,6 +72,7 @@ public FeedMedia(long id, FeedItem item, int duration, int position,
         this.downloaded = downloaded;
         this.id = id;
         this.item = item;
+        this.itemID = item != null ? item.getId() : 0;
         this.duration = duration;
         this.position = position;
         this.playedDuration = playedDuration;
@@ -251,6 +253,7 @@ public FeedItem getItem() {
      */
     public void setItem(FeedItem item) {
         this.item = item;
+        this.itemID = item != null ? item.getId() : 0;
         if (item != null && item.getMedia() != this) {
             item.setMedia(this);
         }

File: app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java
Patch:
@@ -66,7 +66,7 @@ public void testMarkAsPlayedList() throws Exception {
         onDrawerItem(withText(feed.getTitle())).perform(click());
         onView(withText(feed.getItemAtIndex(0).getTitle())).perform(click());
         onView(isRoot()).perform(waitForView(withText(R.string.mark_read_no_media_label), 3000));
-        onView(withText(R.string.mark_read_no_media_label)).perform(click());
+        onView(allOf(withText(R.string.mark_read_no_media_label), isDisplayed())).perform(click());
         onView(isRoot()).perform(waitForView(allOf(withText(R.string.mark_read_no_media_label), not(isDisplayed())), 3000));
     }
 

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -128,13 +128,13 @@ public void addHostedFeedData() throws IOException {
             // create items
             List<FeedItem> items = new ArrayList<>();
             for (int j = 0; j < NUM_ITEMS_PER_FEED; j++) {
-                FeedItem item = new FeedItem(j, "Feed " + (i+1) + ": Item " + (j+1), "item" + j,
+                FeedItem item = new FeedItem(0, "Feed " + (i+1) + ": Item " + (j+1), "item" + j,
                         "http://example.com/feed" + i + "/item/" + j, new Date(), FeedItem.UNPLAYED, feed);
                 items.add(item);
 
                 if (!hostTextOnlyFeeds) {
                     File mediaFile = newMediaFile("feed-" + i + "-episode-" + j + ".mp3");
-                    item.setMedia(new FeedMedia(j, item, 0, 0, mediaFile.length(), "audio/mp3", null, hostFile(mediaFile), false, null, 0, 0));
+                    item.setMedia(new FeedMedia(0, item, 0, 0, mediaFile.length(), "audio/mp3", null, hostFile(mediaFile), false, null, 0, 0));
                 }
             }
             feed.setItems(items);

File: model/src/main/java/de/danoeh/antennapod/model/feed/FeedPreferences.java
Patch:
@@ -249,6 +249,9 @@ public void setFeedSkipSilence(SkipSilence skipSilence) {
     }
 
     public SkipSilence getFeedSkipSilence() {
+        if (feedPlaybackSpeed == SPEED_USE_GLOBAL) {
+            return SkipSilence.GLOBAL;
+        }
         return feedSkipSilence;
     }
 

File: storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java
Patch:
@@ -7,6 +7,7 @@
 import android.util.Log;
 
 import de.danoeh.antennapod.model.feed.FeedItem;
+import de.danoeh.antennapod.model.feed.FeedPreferences;
 
 import static de.danoeh.antennapod.model.feed.FeedPreferences.SPEED_USE_GLOBAL;
 
@@ -336,7 +337,8 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new
         }
         if (oldVersion < 3040000) {
             db.execSQL("ALTER TABLE " + PodDBAdapter.TABLE_NAME_FEEDS
-                    + " ADD COLUMN " + PodDBAdapter.KEY_FEED_SKIP_SILENCE + " INTEGER");
+                    + " ADD COLUMN " + PodDBAdapter.KEY_FEED_SKIP_SILENCE
+                    + " INTEGER DEFAULT " + FeedPreferences.SkipSilence.GLOBAL.code);
         }
     }
 

File: net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java
Patch:
@@ -68,6 +68,7 @@ public Result doWork() {
                 Feed feed = itr.next();
                 if (!feed.getPreferences().getKeepUpdated()) {
                     itr.remove();
+                    continue;
                 }
                 if (!feed.isLocalFeed()) {
                     allAreLocal = false;

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/GeneratorUtil.java
Patch:
@@ -7,9 +7,7 @@
 /**
  * Utility methods for FeedGenerator
  */
-class GeneratorUtil {
-    private GeneratorUtil(){}
-
+abstract class GeneratorUtil {
     public static void addPaymentLink(XmlSerializer xml, String paymentLink, boolean withNamespace) throws IOException {
         String ns = (withNamespace) ? "http://www.w3.org/2005/Atom" : null;
         xml.startTag(ns, "link");

File: app/src/main/java/de/danoeh/antennapod/ui/view/LockableBottomSheetBehavior.java
Patch:
@@ -13,7 +13,8 @@
 public class LockableBottomSheetBehavior<V extends View> extends ViewPagerBottomSheetBehavior<V> {
     private boolean isLocked = false;
 
-    public LockableBottomSheetBehavior() {}
+    public LockableBottomSheetBehavior() {
+    }
 
     public LockableBottomSheetBehavior(Context context, AttributeSet attrs) {
         super(context, attrs);

File: net/common/src/main/java/de/danoeh/antennapod/net/common/NetworkUtils.java
Patch:
@@ -14,11 +14,9 @@
 
 import de.danoeh.antennapod.storage.preferences.UserPreferences;
 
-public class NetworkUtils {
+public abstract class NetworkUtils {
     private static final String REGEX_PATTERN_IP_ADDRESS = "([0-9]{1,3}[\\.]){3}[0-9]{1,3}";
 
-    private NetworkUtils(){}
-
     private static Context context;
 
     public static void init(Context context) {

File: net/common/src/main/java/de/danoeh/antennapod/net/common/UriUtil.java
Patch:
@@ -8,9 +8,7 @@
 /**
  * Utility methods for dealing with URL encoding.
  */
-public class UriUtil {
-    private UriUtil() {}
-
+public abstract class UriUtil {
     public static URI getURIFromRequestUrl(String source) {
         // try without encoding the URI
         try {

File: net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/APCleanupAlgorithm.java
Patch:
@@ -121,7 +121,9 @@ public int getDefaultCleanupParameter() {
     }
 
     @VisibleForTesting
-    public int getNumberOfHoursAfterPlayback() { return numberOfHoursAfterPlayback; }
+    public int getNumberOfHoursAfterPlayback() {
+        return numberOfHoursAfterPlayback;
+    }
 
     private static Date minusHours(Date baseDate, int numberOfHours) {
         Calendar cal = Calendar.getInstance();

File: playback/base/src/main/java/de/danoeh/antennapod/playback/base/RewindAfterPauseUtils.java
Patch:
@@ -8,9 +8,7 @@
  * User might loose context if he/she pauses and resumes the media after longer time.
  * Media file should be "rewinded" x seconds after user resumes the playback.
  */
-public class RewindAfterPauseUtils {
-    private RewindAfterPauseUtils(){}
-
+public abstract class RewindAfterPauseUtils {
     public static final long ELAPSED_TIME_FOR_SHORT_REWIND = TimeUnit.MINUTES.toMillis(1);
     public static final long ELAPSED_TIME_FOR_MEDIUM_REWIND = TimeUnit.HOURS.toMillis(1);
     public static final long ELAPSED_TIME_FOR_LONG_REWIND = TimeUnit.DAYS.toMillis(1);

File: playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackController.java
Patch:
@@ -224,7 +224,8 @@ public void onReceive(Context context, Intent intent) {
 
     };
 
-    public void onPlaybackEnd() {}
+    public void onPlaybackEnd() {
+    }
 
     /**
      * Is called whenever the PlaybackService changes its status. This method

File: storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java
Patch:
@@ -41,9 +41,7 @@
  * init() or otherwise every public method will throw an Exception
  * when called.
  */
-public class UserPreferences {
-    private UserPreferences(){}
-
+public abstract class UserPreferences {
     private static final String TAG = "UserPreferences";
 
     // User Interface

File: ui/common/src/main/java/de/danoeh/antennapod/ui/common/IntentUtils.java
Patch:
@@ -17,11 +17,9 @@
 import java.util.List;
 import java.util.Locale;
 
-public class IntentUtils {
+public abstract class IntentUtils {
     private static final String TAG = "IntentUtils";
 
-    private IntentUtils(){}
-
     /*
      *  Checks if there is at least one exported activity that can be performed for the intent
      */

File: app/src/main/java/de/danoeh/antennapod/activity/SelectSubscriptionActivity.java
Patch:
@@ -78,7 +78,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
     public List<Feed> getFeedItems(List<NavDrawerData.DrawerItem> items, List<Feed> result) {
         for (NavDrawerData.DrawerItem item : items) {
             if (item.type == NavDrawerData.DrawerItem.Type.TAG) {
-                getFeedItems(((NavDrawerData.TagDrawerItem) item).children, result);
+                getFeedItems(((NavDrawerData.TagDrawerItem) item).getChildren(), result);
             } else {
                 Feed feed = ((NavDrawerData.FeedDrawerItem) item).feed;
                 if (!result.contains(feed)) {

File: app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavDrawerFragment.java
Patch:
@@ -449,7 +449,8 @@ private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.Dra
                 NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);
                 folder.setOpen(openFolders.contains(folder.getTitle()));
                 if (folder.isOpen()) {
-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));
+                    flatItems.addAll(makeFlatDrawerData(
+                            ((NavDrawerData.TagDrawerItem) item).getChildren(), layer + 1));
                 }
             }
         }

File: app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RenameFeedDialog.java
Patch:
@@ -66,7 +66,7 @@ public void show() {
     private void renameTag(String title) {
         if (NavDrawerData.DrawerItem.Type.TAG == drawerItem.type) {
             List<FeedPreferences> feedPreferences = new ArrayList<>();
-            for (NavDrawerData.DrawerItem item : ((NavDrawerData.TagDrawerItem) drawerItem).children) {
+            for (NavDrawerData.DrawerItem item : ((NavDrawerData.TagDrawerItem) drawerItem).getChildren()) {
                 feedPreferences.add(((NavDrawerData.FeedDrawerItem) item).feed.getPreferences());
             }
 

File: app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/SubscriptionFragment.java
Patch:
@@ -280,7 +280,7 @@ private void loadSubscriptions() {
                     for (NavDrawerData.DrawerItem item : items) {
                         if (item.type == NavDrawerData.DrawerItem.Type.TAG
                                 && item.getTitle().equals(displayedFolder)) {
-                            return ((NavDrawerData.TagDrawerItem) item).children;
+                            return ((NavDrawerData.TagDrawerItem) item).getChildren();
                         }
                     }
                     return items;

File: storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBReader.java
Patch:
@@ -741,7 +741,7 @@ public static NavDrawerData getNavDrawerData(@Nullable SubscriptionsFilter subsc
                     folders.put(tag, folder);
                 }
                 drawerItem.id |= folder.id;
-                folder.children.add(drawerItem);
+                folder.getChildren().add(drawerItem);
             }
         }
         List<NavDrawerData.TagDrawerItem> foldersSorted = new ArrayList<>(folders.values());

File: storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/OpmlBackupAgent.java
Patch:
@@ -171,12 +171,10 @@ private void writeNewStateDescription(ParcelFileDescriptor newState, byte[] chec
                 return;
             }
 
-            try {
-                FileOutputStream outState = new FileOutputStream(newState.getFileDescriptor());
+            try (final FileOutputStream outState = new FileOutputStream(newState.getFileDescriptor())) {
                 outState.write(checksum.length);
                 outState.write(checksum);
                 outState.flush();
-                outState.close();
             } catch (IOException e) {
                 Log.e(TAG, "Failed to write new state description", e);
             }

File: ui/common/src/main/java/de/danoeh/antennapod/ui/common/Converter.java
Patch:
@@ -29,9 +29,9 @@ public static String getDurationStringLong(int duration) {
 
     private static int[] millisecondsToHms(long duration) {
         int h = (int) (duration / HOURS_MIL);
-        long rest = duration - h * HOURS_MIL;
+        long rest = duration - (long) h * HOURS_MIL;
         int m = (int) (rest / MINUTES_MIL);
-        rest -= m * MINUTES_MIL;
+        rest -= (long) m * MINUTES_MIL;
         int s = (int) (rest / SECONDS_MIL);
         return new int[] {h, m, s};
     }
@@ -95,7 +95,7 @@ public static String getDurationStringLocalized(Resources resources, long durati
             result += days.replace(" ", "\u00A0") + " ";
             h -= d * 24;
         }
-        int rest = (int) (duration - (d * 24 + h) * HOURS_MIL);
+        int rest = (int) (duration - ((long) d * 24 + h) * HOURS_MIL);
         int m = rest / MINUTES_MIL;
         if (h > 0) {
             String hours = resources.getQuantityString(R.plurals.time_hours_quantified, h, h);

File: playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java
Patch:
@@ -831,6 +831,7 @@ public void statusChanged(PlaybackServiceMediaPlayer.PSMPInfo newInfo) {
                     break;
                 case PAUSED:
                     updateNotificationAndMediaSession(newInfo.playable);
+                    PlaybackPreferences.setCurrentPlayerStatus(PlaybackPreferences.PLAYER_STATUS_PAUSED);
                     if (!isCasting) {
                         stateManager.stopForeground(!UserPreferences.isPersistNotify());
                     }
@@ -841,6 +842,7 @@ public void statusChanged(PlaybackServiceMediaPlayer.PSMPInfo newInfo) {
                     //stopService();
                     break;
                 case PLAYING:
+                    PlaybackPreferences.setCurrentPlayerStatus(PlaybackPreferences.PLAYER_STATUS_PLAYING);
                     saveCurrentPosition(true, null, Playable.INVALID_TIME);
                     recreateMediaSessionIfNeeded();
                     updateNotificationAndMediaSession(newInfo.playable);

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -34,7 +34,6 @@
 import de.danoeh.antennapod.databinding.EditTextDialogBinding;
 import de.danoeh.antennapod.net.discovery.CombinedSearcher;
 import de.danoeh.antennapod.net.discovery.FyydPodcastSearcher;
-import de.danoeh.antennapod.net.discovery.GpodnetPodcastSearcher;
 import de.danoeh.antennapod.net.discovery.ItunesPodcastSearcher;
 import de.danoeh.antennapod.net.discovery.PodcastIndexPodcastSearcher;
 import de.danoeh.antennapod.ui.appstartintent.OnlineFeedviewActivityStarter;
@@ -81,8 +80,6 @@ public View onCreateView(@NonNull LayoutInflater inflater,
                 -> activity.loadChildFragment(OnlineSearchFragment.newInstance(ItunesPodcastSearcher.class)));
         viewBinding.searchFyydButton.setOnClickListener(v
                 -> activity.loadChildFragment(OnlineSearchFragment.newInstance(FyydPodcastSearcher.class)));
-        viewBinding.searchGPodderButton.setOnClickListener(v
-                -> activity.loadChildFragment(OnlineSearchFragment.newInstance(GpodnetPodcastSearcher.class)));
         viewBinding.searchPodcastIndexButton.setOnClickListener(v
                 -> activity.loadChildFragment(OnlineSearchFragment.newInstance(PodcastIndexPodcastSearcher.class)));
 

File: net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/PodcastSearcherRegistry.java
Patch:
@@ -15,7 +15,6 @@ public static synchronized List<SearcherInfo> getSearchProviders() {
         if (searchProviders == null) {
             searchProviders = new ArrayList<>();
             searchProviders.add(new SearcherInfo(new CombinedSearcher(), 1.0f));
-            searchProviders.add(new SearcherInfo(new GpodnetPodcastSearcher(), 0.0f));
             searchProviders.add(new SearcherInfo(new FyydPodcastSearcher(), 1.0f));
             searchProviders.add(new SearcherInfo(new ItunesPodcastSearcher(), 1.0f));
             searchProviders.add(new SearcherInfo(new PodcastIndexPodcastSearcher(), 1.0f));

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -80,7 +80,7 @@ protected String getPrefName() {
 
     @Override
     public boolean onMenuItemClick(MenuItem item) {
-        if (super.onOptionsItemSelected(item)) {
+        if (super.onMenuItemClick(item)) {
             return true;
         }
         if (item.getItemId() == R.id.filter_items) {

File: app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java
Patch:
@@ -70,7 +70,7 @@ protected String getPrefName() {
 
     @Override
     public boolean onMenuItemClick(MenuItem item) {
-        if (super.onOptionsItemSelected(item)) {
+        if (super.onMenuItemClick(item)) {
             return true;
         }
         if (item.getItemId() == R.id.remove_all_inbox_item) {

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -54,7 +54,7 @@ protected String getPrefName() {
 
     @Override
     public boolean onMenuItemClick(MenuItem item) {
-        if (super.onOptionsItemSelected(item)) {
+        if (super.onMenuItemClick(item)) {
             return true;
         }
         if (item.getItemId() == R.id.clear_history_item) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedItemDuplicateGuesser.java
Patch:
@@ -31,7 +31,7 @@ && durationsLookSimilar(media1, media2)
                 && mimeTypeLooksSimilar(media1, media2);
     }
 
-    private static boolean sameAndNotEmpty(String string1, String string2) {
+    public static boolean sameAndNotEmpty(String string1, String string2) {
         if (TextUtils.isEmpty(string1) || TextUtils.isEmpty(string2)) {
             return false;
         }

File: parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/Itunes.java
Patch:
@@ -51,12 +51,12 @@ public void handleElementEnd(String localName, HandlerState state) {
         }
 
         String content = state.getContentBuf().toString();
-        String contentFromHtml = HtmlCompat.fromHtml(content, HtmlCompat.FROM_HTML_MODE_COMPACT).toString();
         if (TextUtils.isEmpty(content)) {
             return;
         }
 
         if (AUTHOR.equals(localName) && state.getFeed() != null && state.getTagstack().size() <= 3) {
+            String contentFromHtml = HtmlCompat.fromHtml(content, HtmlCompat.FROM_HTML_MODE_COMPACT).toString();
             state.getFeed().setAuthor(contentFromHtml);
         } else if (DURATION.equals(localName)) {
             try {

File: ui/glide/src/main/java/de/danoeh/antennapod/ui/glide/ApGlideModule.java
Patch:
@@ -49,6 +49,6 @@ public void registerComponents(@NonNull Context context, @NonNull Glide glide, @
         registry.append(String.class, InputStream.class, new ApOkHttpUrlLoader.Factory());
         registry.append(String.class, InputStream.class, new NoHttpStringLoader.StreamFactory());
 
-        registry.append(EmbeddedChapterImage.class, ByteBuffer.class, new ChapterImageModelLoader.Factory());
+        registry.append(EmbeddedChapterImage.class, ByteBuffer.class, new ChapterImageModelLoader.Factory(context));
     }
 }

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -86,6 +86,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         View root = View.inflate(getContext(), R.layout.speed_select_dialog, null);
         speedSeekBar = root.findViewById(R.id.speed_seek_bar);
         speedSeekBar.setProgressChangedListener(multiplier -> {
+            UserPreferences.setPlaybackSpeed(multiplier);
             if (controller != null) {
                 controller.setPlaybackSpeed(multiplier);
             }
@@ -148,10 +149,11 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
                 return true;
             });
             holder.chip.setOnClickListener(v -> {
+                UserPreferences.setPlaybackSpeed(speed);
                 new Handler(Looper.getMainLooper()).postDelayed(() -> {
                     if (controller != null) {
-                        dismiss();
                         controller.setPlaybackSpeed(speed);
+                        dismiss();
                     }
                 }, 200);
             });

File: core/src/main/java/de/danoeh/antennapod/core/export/opml/OpmlReader.java
Patch:
@@ -65,7 +65,7 @@ public ArrayList<OpmlElement> readDocument(Reader reader)
                         element.setHtmlUrl(xpp.getAttributeValue(null, OpmlSymbols.HTMLURL));
                         element.setType(xpp.getAttributeValue(null, OpmlSymbols.TYPE));
                         if (!TextUtils.isEmpty(element.getXmlUrl())) {
-                            if (!TextUtils.isEmpty(element.getText())) {
+                            if (TextUtils.isEmpty(element.getText())) {
                                 Log.i(TAG, "Opml element has no text attribute.");
                                 element.setText(element.getXmlUrl());
                             }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java
Patch:
@@ -53,6 +53,7 @@
 import io.reactivex.Observable;
 import io.reactivex.android.schedulers.AndroidSchedulers;
 import io.reactivex.disposables.Disposable;
+import okhttp3.Call;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -232,7 +233,7 @@ public void setDataSource(String s, String user, String password)
             throws IllegalArgumentException, IllegalStateException {
         Log.d(TAG, "setDataSource: " + s);
         final OkHttpDataSource.Factory httpDataSourceFactory =
-                new OkHttpDataSource.Factory((okhttp3.Call.Factory) AntennapodHttpClient.getHttpClient())
+                new OkHttpDataSource.Factory((Call.Factory) AntennapodHttpClient.getHttpClient())
                         .setUserAgent(ClientConfig.USER_AGENT);
 
         if (!TextUtils.isEmpty(user) && !TextUtils.isEmpty(password)) {

File: net/sync/gpoddernet/src/main/java/de/danoeh/antennapod/net/sync/nextcloud/NextcloudLoginFlow.java
Patch:
@@ -117,7 +117,7 @@ public void cancel() {
 
     private JSONObject doRequest(URL url, String bodyContent) throws IOException, JSONException {
         RequestBody requestBody = RequestBody.create(
-                MediaType.get("application/x-www-form-urlencoded"), bodyContent);
+                bodyContent, MediaType.get("application/x-www-form-urlencoded"));
         Request request = new Request.Builder().url(url).method("POST", requestBody).build();
         Response response = httpClient.newCall(request).execute();
         if (response.code() != 200) {

File: net/sync/gpoddernet/src/main/java/de/danoeh/antennapod/net/sync/nextcloud/NextcloudSyncService.java
Patch:
@@ -71,7 +71,7 @@ public UploadChangesResponse uploadSubscriptionChanges(List<String> addedFeeds,
             requestObject.put("add", new JSONArray(addedFeeds));
             requestObject.put("remove", new JSONArray(removedFeeds));
             RequestBody requestBody = RequestBody.create(
-                    MediaType.get("application/json"), requestObject.toString());
+                    requestObject.toString(), MediaType.get("application/json"));
             performRequest(url, "POST", requestBody);
         } catch (Exception e) {
             e.printStackTrace();
@@ -121,7 +121,7 @@ private void uploadEpisodeActionsPartial(List<EpisodeAction> queuedEpisodeAction
             }
             HttpUrl.Builder url = makeUrl("/index.php/apps/gpoddersync/episode_action/create");
             RequestBody requestBody = RequestBody.create(
-                    MediaType.get("application/json"), list.toString());
+                    list.toString(), MediaType.get("application/json"));
             performRequest(url, "POST", requestBody);
         } catch (Exception e) {
             e.printStackTrace();

File: ui/glide/src/main/java/de/danoeh/antennapod/ui/glide/ApOkHttpUrlLoader.java
Patch:
@@ -104,7 +104,7 @@ public Response intercept(@NonNull Chain chain) throws IOException {
                         .protocol(Protocol.HTTP_2)
                         .code(420)
                         .message("Policy Not Fulfilled")
-                        .body(ResponseBody.create(null, new byte[0]))
+                        .body(ResponseBody.create(new byte[0], null))
                         .request(chain.request())
                         .build();
             }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -291,7 +291,7 @@ public void setupToolbarToggle(@NonNull MaterialToolbar toolbar, boolean display
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        if (drawerLayout != null) {
+        if (drawerLayout != null && drawerToggle != null) {
             drawerLayout.removeDrawerListener(drawerToggle);
         }
     }
@@ -552,7 +552,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     public void onBackPressed() {
-        if (isDrawerOpen()) {
+        if (isDrawerOpen() && drawerLayout != null) {
             drawerLayout.closeDrawer(navDrawer);
         } else if (sheetBehavior.getState() == BottomSheetBehavior.STATE_EXPANDED) {
             sheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -341,7 +341,7 @@ private void bindTagView(NavDrawerData.TagDrawerItem tag, FeedHolder holder) {
         if (context == null) {
             return;
         }
-        if (tag.isOpen) {
+        if (tag.isOpen()) {
             holder.count.setVisibility(View.GONE);
         }
         Glide.with(context).clear(holder.image);

File: app/src/main/java/de/danoeh/antennapod/dialog/TimeRangeDialog.java
Patch:
@@ -139,8 +139,8 @@ protected void onDraw(Canvas canvas) {
         }
 
         protected Point radToPoint(float angle, float radius) {
-            return new Point((int) (getWidth() / 2 + radius * Math.sin(-angle * Math.PI / 180 + Math.PI)),
-                    (int) (getHeight() / 2 + radius * Math.cos(-angle * Math.PI / 180 + Math.PI)));
+            return new Point((int) (getWidth() / 2.0 + radius * Math.sin(-angle * Math.PI / 180.0 + Math.PI)),
+                    (int) (getHeight() / 2.0 + radius * Math.cos(-angle * Math.PI / 180.0 + Math.PI)));
         }
 
         @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -86,9 +86,9 @@ public void onDestroyView() {
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        Object item = adapter.getItem(position);
-        if (item instanceof DownloadResult) {
-            new DownloadLogDetailsDialog(getContext(), (DownloadResult) item).show();
+        final DownloadResult item = adapter.getItem(position);
+        if (item != null) {
+            new DownloadLogDetailsDialog(getContext(), item).show();
         }
     }
 

File: ui/echo/src/main/java/de/danoeh/antennapod/ui/echo/EchoActivity.java
Patch:
@@ -222,7 +222,7 @@ private void loadScreen(int screen, boolean force) {
                     long secondsPerDay = queueSecondsLeft / daysUntilNextYear;
                     String timePerDay = Converter.getDurationStringLocalized(
                             getLocalizedResources(this, getEchoLanguage()), secondsPerDay * 1000, true);
-                    double hoursPerDay = (double) (secondsPerDay / 3600);
+                    double hoursPerDay = secondsPerDay / 3600.0;
                     int nextYear = RELEASE_YEAR + 1;
                     if (hoursPerDay < 1.5) {
                         viewBinding.aboveLabel.setText(R.string.echo_queue_title_clean);

File: ui/glide/src/main/java/de/danoeh/antennapod/ui/glide/FastBlurTransformation.java
Patch:
@@ -12,7 +12,7 @@
 import java.security.MessageDigest;
 
 public class FastBlurTransformation extends BitmapTransformation {
-    private static final String ID = "de.danoeh.antennapod.core.glide.FastBlurTransformation";
+    private static final String ID = "de.danoeh.antennapod.ui.glide.FastBlurTransformation";
 
     private static final String TAG = FastBlurTransformation.class.getSimpleName();
 

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -551,7 +551,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     public void onBackPressed() {
-        if (isDrawerOpen()) {
+        if (isDrawerOpen() && drawerLayout != null) {
             drawerLayout.closeDrawer(navDrawer);
         } else if (sheetBehavior.getState() == BottomSheetBehavior.STATE_EXPANDED) {
             sheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -341,7 +341,7 @@ private void bindTagView(NavDrawerData.TagDrawerItem tag, FeedHolder holder) {
         if (context == null) {
             return;
         }
-        if (tag.isOpen) {
+        if (tag.isOpen()) {
             holder.count.setVisibility(View.GONE);
         }
         Glide.with(context).clear(holder.image);

File: ui/glide/src/main/java/de/danoeh/antennapod/ui/glide/FastBlurTransformation.java
Patch:
@@ -12,7 +12,7 @@
 import java.security.MessageDigest;
 
 public class FastBlurTransformation extends BitmapTransformation {
-    private static final String ID = "de.danoeh.antennapod.core.glide.FastBlurTransformation";
+    private static final String ID = "de.danoeh.antennapod.ui.glide.FastBlurTransformation";
 
     private static final String TAG = FastBlurTransformation.class.getSimpleName();
 

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -290,7 +290,7 @@ public void setupToolbarToggle(@NonNull MaterialToolbar toolbar, boolean display
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        if (drawerLayout != null) {
+        if (drawerLayout != null && drawerToggle != null) {
             drawerLayout.removeDrawerListener(drawerToggle);
         }
     }

File: app/src/main/java/de/danoeh/antennapod/dialog/TimeRangeDialog.java
Patch:
@@ -139,8 +139,8 @@ protected void onDraw(Canvas canvas) {
         }
 
         protected Point radToPoint(float angle, float radius) {
-            return new Point((int) (getWidth() / 2 + radius * Math.sin(-angle * Math.PI / 180 + Math.PI)),
-                    (int) (getHeight() / 2 + radius * Math.cos(-angle * Math.PI / 180 + Math.PI)));
+            return new Point((int) (getWidth() / 2.0 + radius * Math.sin(-angle * Math.PI / 180.0 + Math.PI)),
+                    (int) (getHeight() / 2.0 + radius * Math.cos(-angle * Math.PI / 180.0 + Math.PI)));
         }
 
         @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -86,9 +86,9 @@ public void onDestroyView() {
 
     @Override
     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        Object item = adapter.getItem(position);
-        if (item instanceof DownloadResult) {
-            new DownloadLogDetailsDialog(getContext(), (DownloadResult) item).show();
+        final DownloadResult item = adapter.getItem(position);
+        if (item != null) {
+            new DownloadLogDetailsDialog(getContext(), item).show();
         }
     }
 

File: ui/echo/src/main/java/de/danoeh/antennapod/ui/echo/EchoActivity.java
Patch:
@@ -222,7 +222,7 @@ private void loadScreen(int screen, boolean force) {
                     long secondsPerDay = queueSecondsLeft / daysUntilNextYear;
                     String timePerDay = Converter.getDurationStringLocalized(
                             getLocalizedResources(this, getEchoLanguage()), secondsPerDay * 1000, true);
-                    double hoursPerDay = (double) (secondsPerDay / 3600);
+                    double hoursPerDay = secondsPerDay / 3600.0;
                     int nextYear = RELEASE_YEAR + 1;
                     if (hoursPerDay < 1.5) {
                         viewBinding.aboveLabel.setText(R.string.echo_queue_title_clean);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -221,8 +221,7 @@ public void resume() {
 
                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {
                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(
-                        media.getPosition(),
-                        media.getLastPlayedTime());
+                            media.getPosition(), media.getLastPlayedTime());
                     seekTo(newPosition);
                 }
                 mediaPlayer.start();

File: parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/DublinCore.java
Patch:
@@ -22,8 +22,8 @@ public SyndElement handleElementStart(String localName, HandlerState state,
 
     @Override
     public void handleElementEnd(String localName, HandlerState state) {
-        if (state.getCurrentItem() != null && state.getContentBuf() != null &&
-            state.getTagstack() != null && state.getTagstack().size() >= 2) {
+        if (state.getCurrentItem() != null && state.getContentBuf() != null
+                && state.getTagstack() != null && state.getTagstack().size() >= 2) {
             FeedItem currentItem = state.getCurrentItem();
             String top = state.getTagstack().peek().getName();
             String second = state.getSecondTag().getName();

File: core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java
Patch:
@@ -142,8 +142,9 @@ private void refreshFeeds(List<Feed> toUpdate, boolean force) {
                 }
             } catch (Exception e) {
                 DBWriter.setFeedLastUpdateFailed(feed.getId(), true);
-                DownloadResult status = new DownloadResult(feed, feed.getTitle(),
-                        DownloadError.ERROR_IO_ERROR, false, e.getMessage());
+                DownloadResult status = new DownloadResult(feed.getTitle(),
+                        feed.getId(), Feed.FEEDFILETYPE_FEED, false,
+                        DownloadError.ERROR_IO_ERROR, e.getMessage());
                 DBWriter.addDownloadStatus(status);
             }
             toUpdate.remove(0);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java
Patch:
@@ -31,7 +31,7 @@ public static DownloadRequest.Builder create(Feed feed) {
 
         return new DownloadRequest.Builder(dest.toString(), feed)
                 .withAuthentication(username, password)
-                .lastModified(feed.getLastUpdate());
+                .lastModified(feed.getLastModified());
     }
 
     public static DownloadRequest.Builder create(FeedMedia media) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java
Patch:
@@ -95,8 +95,8 @@ public void run() {
             Log.e(TAG, "MediaHandlerThread was interrupted");
         } catch (ExecutionException e) {
             Log.e(TAG, "ExecutionException in MediaHandlerThread: " + e.getMessage());
-            updatedStatus = new DownloadResult(media, media.getEpisodeTitle(),
-                    DownloadError.ERROR_DB_ACCESS_ERROR, false, e.getMessage());
+            updatedStatus = new DownloadResult(media.getEpisodeTitle(), media.getId(),
+                    FeedMedia.FEEDFILETYPE_FEEDMEDIA, false, DownloadError.ERROR_DB_ACCESS_ERROR, e.getMessage());
         }
 
         if (item != null) {

File: core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java
Patch:
@@ -16,7 +16,6 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
-import de.danoeh.antennapod.model.feed.FeedComponent;
 import de.danoeh.antennapod.model.feed.FeedItem;
 import de.danoeh.antennapod.model.feed.FeedMedia;
 import de.danoeh.antennapod.core.feed.FeedMother;
@@ -145,7 +144,7 @@ static void doAddToQueueAndAssertResult(String message,
             Collections.unmodifiableList(Arrays.asList(
                     createFeedItem(11), createFeedItem(12), createFeedItem(13), createFeedItem(14)));
     static final List<Long> QUEUE_DEFAULT_IDS =
-            QUEUE_DEFAULT.stream().map(FeedComponent::getId).collect(Collectors.toList());
+            QUEUE_DEFAULT.stream().map(FeedItem::getId).collect(Collectors.toList());
 
 
     static Playable getCurrentlyPlaying(long idCurrentlyPlaying) {

File: core/src/test/java/de/danoeh/antennapod/core/storage/mapper/FeedCursorMapperTest.java
Patch:
@@ -56,7 +56,7 @@ public void testFromCursor() {
             assertEquals("feed file url", feed.getFile_url());
             assertEquals("feed download url", feed.getDownload_url());
             assertTrue(feed.isDownloaded());
-            assertEquals("feed last update", feed.getLastUpdate());
+            assertEquals("feed last update", feed.getLastModified());
             assertEquals("feed type", feed.getType());
             assertEquals("feed identifier", feed.getFeedIdentifier());
             assertTrue(feed.isPaged());

File: net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequest.java
Patch:
@@ -252,15 +252,15 @@ public Builder(@NonNull String destination, @NonNull FeedMedia media) {
             this.source = UrlChecker.prepareUrl(media.getDownload_url());
             this.title = media.getHumanReadableIdentifier();
             this.feedfileId = media.getId();
-            this.feedfileType = media.getTypeAsInt();
+            this.feedfileType = FeedMedia.FEEDFILETYPE_FEEDMEDIA;
         }
 
         public Builder(@NonNull String destination, @NonNull Feed feed) {
             this.destination = destination;
             this.source = feed.isLocalFeed() ? feed.getDownload_url() : UrlChecker.prepareUrl(feed.getDownload_url());
             this.title = feed.getHumanReadableIdentifier();
             this.feedfileId = feed.getId();
-            this.feedfileType = feed.getTypeAsInt();
+            this.feedfileType = Feed.FEEDFILETYPE_FEED;
             arguments.putInt(REQUEST_ARG_PAGE_NR, feed.getPageNr());
         }
 

File: storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java
Patch:
@@ -416,7 +416,7 @@ private long setFeed(Feed feed) {
         values.put(KEY_FILE_URL, feed.getFile_url());
         values.put(KEY_DOWNLOAD_URL, feed.getDownload_url());
         values.put(KEY_DOWNLOADED, feed.isDownloaded());
-        values.put(KEY_LASTUPDATE, feed.getLastUpdate());
+        values.put(KEY_LASTUPDATE, feed.getLastModified());
         values.put(KEY_TYPE, feed.getType());
         values.put(KEY_FEED_IDENTIFIER, feed.getFeedIdentifier());
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -147,6 +147,7 @@ private void showAddViaUrlDialog() {
     private void addUrl(String url) {
         Intent intent = new Intent(getActivity(), OnlineFeedViewActivity.class);
         intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, url);
+        intent.putExtra(OnlineFeedViewActivity.ARG_WAS_MANUAL_URL, true);
         startActivity(intent);
     }
 

File: core/src/test/java/de/danoeh/antennapod/core/storage/FeedItemDuplicateGuesserTest.java
Patch:
@@ -44,6 +44,9 @@ public void testOtherAttributes() {
         assertFalse(FeedItemDuplicateGuesser.seemDuplicates(
                 item("id1", "Title", "example.com/episode1", 10, 5 * MINUTES, "audio/*"),
                 item("id2", "Title", "example.com/episode2", 10, 5 * MINUTES, "video/*")));
+        assertTrue(FeedItemDuplicateGuesser.seemDuplicates(
+                item("id1", "Title", "example.com/episode1", 10, 5 * MINUTES, "audio/mpeg"),
+                item("id2", "Title", "example.com/episode2", 10, 5 * MINUTES, "audio/mp3")));
         assertFalse(FeedItemDuplicateGuesser.seemDuplicates(
                 item("id1", "Title", "example.com/episode1", 5 * DAYS, 5 * MINUTES, "audio/*"),
                 item("id2", "Title", "example.com/episode2", 2 * DAYS, 5 * MINUTES, "audio/*")));

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -345,7 +345,7 @@ public void seekTo(int t) {
 
         if (t >= getDuration()) {
             Log.d(TAG, "Seek reached end of file, skipping to next episode");
-            skip();
+            endPlayback(true, true, true, true);
             return;
         }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -608,7 +608,7 @@ private void handleNavIntent() {
         } else if (intent.getBooleanExtra(MainActivityStarter.EXTRA_OPEN_PLAYER, false)) {
             sheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED);
             bottomSheetCallback.onSlide(null, 1.0f);
-        } else if (Intent.ACTION_VIEW.equals(intent.getAction())) {
+        } else {
             handleDeeplink(intent.getData());
         }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -248,6 +248,7 @@ private void setupToolbar(MaterialToolbar toolbar) {
         item.expandActionView();
         searchView = (SearchView) item.getActionView();
         searchView.setQueryHint(getString(R.string.search_label));
+        searchView.setQuery(getArguments().getString(ARG_QUERY), true);
         searchView.requestFocus();
         searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -98,7 +98,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
     }
 
     private void addCurrentSpeed() {
-        float newSpeed = controller.getCurrentPlaybackSpeedMultiplier();
+        float newSpeed = speedSeekBar.getCurrentSpeed();
         if (selectedSpeeds.contains(newSpeed)) {
             Snackbar.make(addCurrentSpeedChip,
                     getString(R.string.preset_already_exists, newSpeed), Snackbar.LENGTH_LONG).show();

File: parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentReader.java
Patch:
@@ -37,7 +37,7 @@ public void readInputStream() throws VorbisCommentReaderException {
                 readUserComment();
             }
         } catch (IOException e) {
-            Log.d(TAG, e.getMessage());
+            Log.d(TAG, "Vorbis parser: " + e.getMessage());
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java
Patch:
@@ -34,6 +34,7 @@
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;
 
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
@@ -81,7 +82,8 @@ public Result doWork() {
             if (!feed.isLocalFeed()) {
                 allAreLocal = false;
             }
-            toUpdate = Collections.singletonList(feed);
+            toUpdate = new ArrayList<>();
+            toUpdate.add(feed); // Needs to be updatable, so no singletonList
             force = true;
         }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java
Patch:
@@ -32,7 +32,7 @@ public int getDrawable() {
     @Override
     public void onClick(Context context) {
         FeedMedia media = item.getMedia();
-        DownloadServiceInterface.get().cancel(context, media.getDownload_url());
+        DownloadServiceInterface.get().cancel(context, media);
         if (UserPreferences.isEnableAutodownload()) {
             item.disableAutoDownload();
             DBWriter.setFeedItem(item);

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -110,7 +110,7 @@ private static boolean deleteFeedMediaSynchronous(
             @NonNull Context context, @NonNull FeedMedia media) {
         Log.i(TAG, String.format(Locale.US, "Requested to delete FeedMedia [id=%d, title=%s, downloaded=%s",
                 media.getId(), media.getEpisodeTitle(), media.isDownloaded()));
-        if (media.isDownloaded()) {
+        if (media.isDownloaded() || media.getFile_url() != null) {
             // delete downloaded media file
             File mediaFile = new File(media.getFile_url());
             if (mediaFile.exists() && !mediaFile.delete()) {
@@ -206,7 +206,7 @@ private static void deleteFeedItemsSynchronous(@NonNull Context context, @NonNul
                 if (item.getMedia().isDownloaded()) {
                     deleteFeedMediaSynchronous(context, item.getMedia());
                 }
-                DownloadServiceInterface.get().cancel(context, item.getMedia().getDownload_url());
+                DownloadServiceInterface.get().cancel(context, item.getMedia());
             }
         }
 

File: net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import de.danoeh.antennapod.model.download.DownloadStatus;
 import de.danoeh.antennapod.model.feed.FeedItem;
+import de.danoeh.antennapod.model.feed.FeedMedia;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -38,7 +39,7 @@ public void setCurrentDownloads(Map<String, DownloadStatus> currentDownloads) {
      */
     public abstract void download(Context context, FeedItem item);
 
-    public abstract void cancel(Context context, String url);
+    public abstract void cancel(Context context, FeedMedia media);
 
     public abstract void cancelAll(Context context);
 

File: net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import de.danoeh.antennapod.model.feed.FeedItem;
+import de.danoeh.antennapod.model.feed.FeedMedia;
 
 public class DownloadServiceInterfaceStub extends DownloadServiceInterface {
 
@@ -14,7 +15,7 @@ public void download(Context context, FeedItem item) {
     }
 
     @Override
-    public void cancel(Context context, String url) {
+    public void cancel(Context context, FeedMedia media) {
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java
Patch:
@@ -28,6 +28,7 @@
 import androidx.documentfile.provider.DocumentFile;
 import de.danoeh.antennapod.core.R;
 import de.danoeh.antennapod.core.util.FastDocumentFile;
+import de.danoeh.antennapod.model.MediaMetadataRetrieverCompat;
 import de.danoeh.antennapod.model.download.DownloadResult;
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.storage.DBTasks;
@@ -199,8 +200,8 @@ private static FeedItem createFeedItem(Feed feed, FastDocumentFile file, Context
         return item;
     }
 
-    private static void loadMetadata(FeedItem item, FastDocumentFile file, Context context) throws IOException {
-        try (MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever()) {
+    private static void loadMetadata(FeedItem item, FastDocumentFile file, Context context) {
+        try (MediaMetadataRetrieverCompat mediaMetadataRetriever = new MediaMetadataRetrieverCompat()) {
             mediaMetadataRetriever.setDataSource(context, file.getUri());
 
             String dateStr = mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DATE);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java
Patch:
@@ -6,6 +6,7 @@
 
 import androidx.annotation.NonNull;
 
+import de.danoeh.antennapod.model.MediaMetadataRetrieverCompat;
 import org.greenrobot.eventbus.EventBus;
 
 import java.io.File;
@@ -63,7 +64,7 @@ public void run() {
         }
         // Get duration
         String durationStr = null;
-        try (MediaMetadataRetriever mmr = new MediaMetadataRetriever()) {
+        try (MediaMetadataRetrieverCompat mmr = new MediaMetadataRetrieverCompat()) {
             mmr.setDataSource(media.getFile_url());
             durationStr = mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION);
             media.setDuration(Integer.parseInt(durationStr));

File: ui/glide/src/main/java/de/danoeh/antennapod/ui/glide/AudioCoverFetcher.java
Patch:
@@ -2,13 +2,13 @@
 
 import android.content.ContentResolver;
 import android.content.Context;
-import android.media.MediaMetadataRetriever;
 
 import android.net.Uri;
 import androidx.annotation.NonNull;
 import com.bumptech.glide.Priority;
 import com.bumptech.glide.load.DataSource;
 import com.bumptech.glide.load.data.DataFetcher;
+import de.danoeh.antennapod.model.MediaMetadataRetrieverCompat;
 
 import java.io.ByteArrayInputStream;
 import java.io.InputStream;
@@ -25,7 +25,7 @@ public AudioCoverFetcher(String path, Context context) {
 
     @Override
     public void loadData(@NonNull Priority priority, @NonNull DataCallback<? super InputStream> callback) {
-        try (MediaMetadataRetriever retriever = new MediaMetadataRetriever()) {
+        try (MediaMetadataRetrieverCompat retriever = new MediaMetadataRetrieverCompat()) {
             if (path.startsWith(ContentResolver.SCHEME_CONTENT)) {
                 retriever.setDataSource(context, Uri.parse(path));
             } else {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemPagerFragment.java
Patch:
@@ -70,7 +70,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         toolbar.setOnMenuItemClickListener(this);
 
         feedItems = getArguments().getLongArray(ARG_FEEDITEMS);
-        int feedItemPos = getArguments().getInt(ARG_FEEDITEM_POS);
+        final int feedItemPos = Math.max(0, getArguments().getInt(ARG_FEEDITEM_POS));
 
         pager = layout.findViewById(R.id.pager);
         // FragmentStatePagerAdapter documentation:

File: playback/cast/src/play/java/de/danoeh/antennapod/playback/cast/MediaInfoCreator.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.net.Uri;
 import android.text.TextUtils;
+import androidx.annotation.Nullable;
 import com.google.android.gms.cast.MediaInfo;
 import com.google.android.gms.cast.MediaMetadata;
 import com.google.android.gms.common.images.WebImage;
@@ -74,7 +75,6 @@ public static MediaInfo from(FeedMedia media) {
         MediaMetadata metadata = new MediaMetadata(MediaMetadata.MEDIA_TYPE_GENERIC);
         if (media.getItem() == null) {
             throw new IllegalStateException("item is null");
-            //media.setItem(DBReader.getFeedItem(media.getItemId()));
         }
         FeedItem feedItem = media.getItem();
         if (feedItem != null) {
@@ -84,15 +84,15 @@ public static MediaInfo from(FeedMedia media) {
                 metadata.putString(MediaMetadata.KEY_SUBTITLE, subtitle);
             }
 
+            final @Nullable Feed feed = feedItem.getFeed();
             // Manual because cast does not support embedded images
-            String url = feedItem.getImageUrl() == null ? feedItem.getFeed().getImageUrl() : feedItem.getImageUrl();
+            String url = (feedItem.getImageUrl() == null && feed != null) ? feed.getImageUrl() : feedItem.getImageUrl();
             if (!TextUtils.isEmpty(url)) {
                 metadata.addImage(new WebImage(Uri.parse(url)));
             }
             Calendar calendar = Calendar.getInstance();
             calendar.setTime(media.getItem().getPubDate());
             metadata.putDate(MediaMetadata.KEY_RELEASE_DATE, calendar);
-            Feed feed = feedItem.getFeed();
             if (feed != null) {
                 if (!TextUtils.isEmpty(feed.getAuthor())) {
                     metadata.putString(MediaMetadata.KEY_ARTIST, feed.getAuthor());

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -11,8 +11,8 @@
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.adapter.actionbutton.DownloadActionButton;
 import de.danoeh.antennapod.core.storage.DBReader;
-import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.util.DownloadErrorLabel;
+import de.danoeh.antennapod.core.util.download.FeedUpdateManager;
 import de.danoeh.antennapod.model.download.DownloadError;
 import de.danoeh.antennapod.model.download.DownloadResult;
 import de.danoeh.antennapod.model.feed.Feed;
@@ -109,7 +109,7 @@ private void bind(DownloadLogItemViewHolder holder, DownloadResult status, int p
                             Log.e(TAG, "Could not find feed for feed id: " + status.getFeedfileId());
                             return;
                         }
-                        DBTasks.forceRefreshFeed(context, feed, true);
+                        FeedUpdateManager.runOnce(context, feed);
                     });
                 } else if (status.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
                     holder.secondaryActionButton.setOnClickListener(v -> {

File: app/src/main/java/de/danoeh/antennapod/dialog/EditUrlSettingsDialog.java
Patch:
@@ -6,8 +6,8 @@
 import androidx.appcompat.app.AlertDialog;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
+import de.danoeh.antennapod.core.util.download.FeedUpdateManager;
 import de.danoeh.antennapod.databinding.EditTextDialogBinding;
 import de.danoeh.antennapod.model.feed.Feed;
 
@@ -48,7 +48,7 @@ private void onConfirmed(String original, String updated) {
         try {
             DBWriter.updateFeedDownloadURL(original, updated).get();
             feed.setDownload_url(updated);
-            DBTasks.forceRefreshFeed(activityRef.get(), feed, false);
+            FeedUpdateManager.runOnce(activityRef.get(), feed);
         } catch (ExecutionException | InterruptedException e) {
             throw new RuntimeException(e);
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -27,6 +27,7 @@
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.OpmlImportActivity;
+import de.danoeh.antennapod.core.util.download.FeedUpdateManager;
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.model.feed.SortOrder;
@@ -210,7 +211,7 @@ private Feed addLocalFolder(Uri uri) {
         dirFeed.setItems(Collections.emptyList());
         dirFeed.setSortOrder(SortOrder.EPISODE_TITLE_A_Z);
         Feed fromDatabase = DBTasks.updateFeed(getContext(), dirFeed, false);
-        DBTasks.forceRefreshFeed(getContext(), fromDatabase, true);
+        FeedUpdateManager.runOnce(requireContext(), fromDatabase);
         return fromDatabase;
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -32,7 +32,6 @@
 import de.danoeh.antennapod.core.feed.FeedEvent;
 import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;
 import de.danoeh.antennapod.core.storage.DBReader;
-import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.util.FeedItemPermutors;
 import de.danoeh.antennapod.core.util.FeedItemUtil;
 import de.danoeh.antennapod.core.util.download.FeedUpdateManager;
@@ -185,7 +184,7 @@ public void onScrolled(@NonNull RecyclerView view, int deltaX, int deltaY) {
 
         viewBinding.swipeRefresh.setDistanceToTriggerSync(getResources().getInteger(R.integer.swipe_refresh_distance));
         viewBinding.swipeRefresh.setOnRefreshListener(() -> {
-            DBTasks.forceRefreshFeed(requireContext(), feed, true);
+            FeedUpdateManager.runOnceOrAsk(requireContext(), feed);
             new Handler(Looper.getMainLooper()).postDelayed(() -> viewBinding.swipeRefresh.setRefreshing(false),
                     getResources().getInteger(R.integer.swipe_to_refresh_duration_in_ms));
         });

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -6,7 +6,6 @@
 import android.view.MenuItem;
 import androidx.annotation.NonNull;
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.ShareUtils;
@@ -64,7 +63,7 @@ public static boolean onPrepareOptionsMenu(Menu menu, Feed selectedFeed) {
     public static boolean onOptionsItemClicked(final Context context, final MenuItem item, final Feed selectedFeed) {
         final int itemId = item.getItemId();
         if (itemId == R.id.refresh_item) {
-            DBTasks.forceRefreshFeed(context, selectedFeed, true);
+            FeedUpdateManager.runOnceOrAsk(context, selectedFeed);
         } else if (itemId == R.id.refresh_complete_item) {
             new Thread(() -> {
                 selectedFeed.setNextPageLink(selectedFeed.getDownload_url());

File: parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/SimpleChapters.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.parser.feed.namespace;
 
+import android.text.TextUtils;
 import android.util.Log;
 
 import de.danoeh.antennapod.model.feed.Chapter;
@@ -31,7 +32,8 @@ public SyndElement handleElementStart(String localName, HandlerState state, Attr
         if (currentItem != null) {
             if (localName.equals(CHAPTERS)) {
                 currentItem.setChapters(new ArrayList<>());
-            } else if (localName.equals(CHAPTER)) {
+            } else if (localName.equals(CHAPTER) && !TextUtils.isEmpty(attributes.getValue(START))) {
+                // if the chapter's START is empty, we don't need to do anything
                 try {
                     long start = DateUtils.parseTimeString(attributes.getValue(START));
                     String title = attributes.getValue(TITLE);

File: app/src/main/java/de/danoeh/antennapod/activity/WidgetConfigActivity.java
Patch:
@@ -97,7 +97,7 @@ private void setInitialState() {
         ckFastForward.setChecked(prefs.getBoolean(PlayerWidget.KEY_WIDGET_FAST_FORWARD + appWidgetId, false));
         ckSkip.setChecked(prefs.getBoolean(PlayerWidget.KEY_WIDGET_SKIP + appWidgetId, false));
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
-            int color = prefs.getInt(PlayerWidget.KEY_WIDGET_COLOR + appWidgetId, 0);
+            int color = prefs.getInt(PlayerWidget.KEY_WIDGET_COLOR + appWidgetId, PlayerWidget.DEFAULT_COLOR);
             int opacity = Color.alpha(color) * 100 / 0xFF;
 
             opacitySeekBar.setProgress(opacity, false);
@@ -139,6 +139,6 @@ private void confirmCreateWidget() {
     }
 
     private int getColorWithAlpha(int color, int opacity) {
-        return (int) Math.round(0xFF * (0.01 * opacity)) * 0x1000000 + color;
+        return (int) Math.round(0xFF * (0.01 * opacity)) * 0x1000000 + (color & 0xffffff);
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/receiver/PlayerWidget.java
Patch:
@@ -24,7 +24,7 @@ public class PlayerWidget extends AppWidgetProvider {
     public static final String KEY_WIDGET_SKIP = "widget_skip";
     public static final String KEY_WIDGET_FAST_FORWARD = "widget_fast_forward";
     public static final String KEY_WIDGET_REWIND = "widget_rewind";
-    public static final int DEFAULT_COLOR = 0x00262C31;
+    public static final int DEFAULT_COLOR = 0xff262C31;
     private static final String WORKAROUND_WORK_NAME = "WidgetUpdaterWorkaround";
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverLoader.java
Patch:
@@ -69,7 +69,7 @@ public void load() {
         CoverTarget coverTarget = new CoverTarget(fallbackTitle, imgvCover, textAndImageCombined);
 
         if (resource != 0) {
-            Glide.with(activity).clear(coverTarget);
+            Glide.with(imgvCover).clear(coverTarget);
             imgvCover.setImageResource(resource);
             CoverTarget.setTitleVisibility(fallbackTitle, textAndImageCombined);
             return;
@@ -79,13 +79,13 @@ public void load() {
                 .fitCenter()
                 .dontAnimate();
 
-        RequestBuilder<Drawable> builder = Glide.with(activity)
+        RequestBuilder<Drawable> builder = Glide.with(imgvCover)
                 .as(Drawable.class)
                 .load(uri)
                 .apply(options);
 
         if (fallbackUri != null) {
-            builder = builder.error(Glide.with(activity)
+            builder = builder.error(Glide.with(imgvCover)
                     .as(Drawable.class)
                     .load(fallbackUri)
                     .apply(options));

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -203,9 +203,9 @@ private void updateUi(Playable media) {
                 .fitCenter()
                 .dontAnimate();
 
-        Glide.with(getActivity())
+        Glide.with(this)
                 .load(ImageResourceUtils.getEpisodeListImageLocation(media))
-                .error(Glide.with(getActivity())
+                .error(Glide.with(this)
                         .load(ImageResourceUtils.getFallbackImageLocation(media))
                         .apply(options))
                 .apply(options)

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -498,7 +498,7 @@ private void showFeedInfo() {
     }
 
     private void loadFeedImage() {
-        Glide.with(getActivity())
+        Glide.with(this)
                 .load(feed.getImageUrl())
                 .apply(new RequestOptions()
                     .placeholder(R.color.image_readability_tint)
@@ -507,7 +507,7 @@ private void loadFeedImage() {
                     .dontAnimate())
                 .into(viewBinding.imgvBackground);
 
-        Glide.with(getActivity())
+        Glide.with(this)
                 .load(feed.getImageUrl())
                 .apply(new RequestOptions()
                     .placeholder(R.color.light_gray)

File: core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java
Patch:
@@ -146,7 +146,7 @@ void refreshFeed(Feed feed, boolean force) throws Exception {
         downloader.call();
 
         if (!downloader.getResult().isSuccessful()) {
-            if (downloader.cancelled) {
+            if (downloader.cancelled || downloader.getResult().getReason() == DownloadError.ERROR_DOWNLOAD_CANCELLED) {
                 return;
             }
             DBWriter.setFeedLastUpdateFailed(request.getFeedfileId(), true);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -317,6 +317,7 @@ private void onFail(DownloadError reason, String reasonDetailed) {
     private void onCancelled() {
         Log.d(TAG, "Download was cancelled");
         result.setCancelled();
+        cancelled = true;
         cleanup();
     }
 

File: storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java
Patch:
@@ -1007,8 +1007,8 @@ public final Cursor getPausedQueueCursor(int limit) {
                 + " INNER JOIN " + TABLE_NAME_FEED_ITEMS
                 + " ON " + SELECT_KEY_ITEM_ID + " = " + TABLE_NAME_QUEUE + "." + KEY_FEEDITEM
                 +  JOIN_FEED_ITEM_AND_MEDIA
-                + " ORDER BY IIF(" + hasPositionOrRecentlyPlayed
-                    + ", " + TABLE_NAME_FEED_MEDIA + "." + KEY_LAST_PLAYED_TIME + ", 0) DESC , "
+                + " ORDER BY (CASE WHEN " + hasPositionOrRecentlyPlayed + " THEN "
+                    + TABLE_NAME_FEED_MEDIA + "." + KEY_LAST_PLAYED_TIME + " ELSE 0 END) DESC , "
                 + TABLE_NAME_QUEUE + "." + KEY_ID
                 + " LIMIT " + limit;
         return db.rawQuery(query, null);

File: net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/ItunesTopListLoader.java
Patch:
@@ -58,8 +58,9 @@ private static List<PodcastSearchResult> removeSubscribed(
             List<PodcastSearchResult> suggestedPodcasts, List<Feed> subscribedFeeds, int limit) {
         Set<String> subscribedPodcastsSet = new HashSet<>();
         for (Feed subscribedFeed : subscribedFeeds) {
-            String subscribedTitle = subscribedFeed.getTitle().trim() + " - " + subscribedFeed.getAuthor().trim();
-            subscribedPodcastsSet.add(subscribedTitle);
+            if (subscribedFeed.getTitle() != null && subscribedFeed.getAuthor() != null) {
+                subscribedPodcastsSet.add(subscribedFeed.getTitle().trim() + " - " + subscribedFeed.getAuthor().trim());
+            }
         }
         List<PodcastSearchResult> suggestedNotSubscribed = new ArrayList<>();
         for (PodcastSearchResult suggested : suggestedPodcasts) {

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -196,15 +196,15 @@ private void showFeed() {
         Log.d(TAG, "Language is " + feed.getLanguage());
         Log.d(TAG, "Author is " + feed.getAuthor());
         Log.d(TAG, "URL is " + feed.getDownload_url());
-        Glide.with(getContext())
+        Glide.with(this)
                 .load(feed.getImageUrl())
                 .apply(new RequestOptions()
                         .placeholder(R.color.light_gray)
                         .error(R.color.light_gray)
                         .fitCenter()
                         .dontAnimate())
                 .into(imgvCover);
-        Glide.with(getContext())
+        Glide.with(this)
                 .load(feed.getImageUrl())
                 .apply(new RequestOptions()
                         .placeholder(R.color.image_readability_tint)

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -297,9 +297,9 @@ private void updateAppearance() {
                         new RoundedCorners((int) (8 * getResources().getDisplayMetrics().density)))
                 .dontAnimate();
 
-        Glide.with(getActivity())
+        Glide.with(this)
                 .load(item.getImageLocation())
-                .error(Glide.with(getActivity())
+                .error(Glide.with(this)
                         .load(ImageResourceUtils.getFallbackImageLocation(item))
                         .apply(options))
                 .apply(options)

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -311,6 +311,7 @@ public void onDestroy() {
         unregisterReceiver(audioBecomingNoisy);
         mediaPlayer.shutdown();
         taskManager.shutdown();
+        EventBus.getDefault().unregister(this);
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -468,6 +468,9 @@ private void enqueueAll(Intent intent) {
             if (feed.getPreferences().getKeepUpdated()) {
                 DownloadRequest.Builder builder = DownloadRequestCreator.create(feed);
                 builder.withInitiatedByUser(initiatedByUser);
+                if (feed.hasLastUpdateFailed()) {
+                    builder.setForce(true);
+                }
                 addNewRequest(builder.build());
             }
         }

File: playback/cast/src/play/java/de/danoeh/antennapod/playback/cast/CastOptionsProvider.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import androidx.annotation.NonNull;
-import com.google.android.gms.cast.CastMediaControlIntent;
 import com.google.android.gms.cast.framework.CastOptions;
 import com.google.android.gms.cast.framework.OptionsProvider;
 import com.google.android.gms.cast.framework.SessionProvider;
@@ -15,7 +14,7 @@ public class CastOptionsProvider implements OptionsProvider {
     @NonNull
     public CastOptions getCastOptions(@NonNull Context context) {
         return new CastOptions.Builder()
-            .setReceiverApplicationId(CastMediaControlIntent.DEFAULT_MEDIA_RECEIVER_APPLICATION_ID)
+            .setReceiverApplicationId("BEBC1DB1")
             .build();
     }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/ChaptersListAdapter.java
Patch:
@@ -86,7 +86,7 @@ public void onBindViewHolder(@NonNull ChapterHolder holder, int position) {
 
         if (position == currentChapterIndex) {
             float density = context.getResources().getDisplayMetrics().density;
-            holder.itemView.setBackgroundColor(SurfaceColors.getColorForElevation(context, 8 * density));
+            holder.itemView.setBackgroundColor(SurfaceColors.getColorForElevation(context, 32 * density));
             float progress = ((float) (currentChapterPosition - sc.getStart())) / duration;
             progress = Math.max(progress, CircularProgressBar.MINIMUM_PERCENTAGE);
             progress = Math.min(progress, CircularProgressBar.MAXIMUM_PERCENTAGE);

File: app/src/free/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -12,6 +12,8 @@
 
 import androidx.appcompat.app.AlertDialog;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
+
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.util.IntentUtils;
 
@@ -85,7 +87,7 @@ private static void resetStartDate() {
     }
 
     private static boolean shouldShow() {
-        if (rated()) {
+        if (rated() || BuildConfig.DEBUG) {
             return false;
         }
 

File: app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -16,6 +16,8 @@
 import com.google.android.play.core.review.ReviewManagerFactory;
 import com.google.android.play.core.tasks.Task;
 
+import de.danoeh.antennapod.BuildConfig;
+
 public class RatingDialog {
 
     private RatingDialog() {
@@ -108,7 +110,7 @@ private static void resetStartDate() {
     }
 
     private static boolean shouldShow() {
-        if (rated()) {
+        if (rated() || BuildConfig.DEBUG) {
             return false;
         }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/HorizontalFeedListAdapter.java
Patch:
@@ -11,7 +11,6 @@
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.fragment.FeedItemlistFragment;
 import de.danoeh.antennapod.ui.common.SquareImageView;
-import de.danoeh.antennapod.ui.common.ThemeUtils;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
@@ -48,8 +47,7 @@ public void onBindViewHolder(@NonNull Holder holder, int position) {
         if (position >= data.size()) {
             holder.itemView.setAlpha(0.1f);
             Glide.with(mainActivityRef.get()).clear(holder.imageView);
-            holder.imageView.setImageResource(
-                    ThemeUtils.getDrawableFromAttr(mainActivityRef.get(), android.R.attr.textColorSecondary));
+            holder.imageView.setImageResource(R.color.medium_gray);
             return;
         }
 

File: app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java
Patch:
@@ -219,7 +219,7 @@ public void bindDummy() {
         placeholder.setText("");
         if (coverHolder.getVisibility() == View.VISIBLE) {
             new CoverLoader(activity)
-                    .withResource(ThemeUtils.getDrawableFromAttr(activity, android.R.attr.textColorSecondary))
+                    .withResource(R.color.medium_gray)
                     .withPlaceholderView(placeholder)
                     .withCoverView(cover)
                     .load();

File: app/src/main/java/de/danoeh/antennapod/adapter/HorizontalFeedListAdapter.java
Patch:
@@ -11,7 +11,6 @@
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.fragment.FeedItemlistFragment;
 import de.danoeh.antennapod.ui.common.SquareImageView;
-import de.danoeh.antennapod.ui.common.ThemeUtils;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;
@@ -48,8 +47,7 @@ public void onBindViewHolder(@NonNull Holder holder, int position) {
         if (position >= data.size()) {
             holder.itemView.setAlpha(0.1f);
             Glide.with(mainActivityRef.get()).clear(holder.imageView);
-            holder.imageView.setImageResource(
-                    ThemeUtils.getDrawableFromAttr(mainActivityRef.get(), android.R.attr.textColorSecondary));
+            holder.imageView.setImageResource(R.color.medium_gray);
             return;
         }
 

File: app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java
Patch:
@@ -219,7 +219,7 @@ public void bindDummy() {
         placeholder.setText("");
         if (coverHolder.getVisibility() == View.VISIBLE) {
             new CoverLoader(activity)
-                    .withResource(ThemeUtils.getDrawableFromAttr(activity, android.R.attr.textColorSecondary))
+                    .withResource(R.color.medium_gray)
                     .withPlaceholderView(placeholder)
                     .withCoverView(cover)
                     .load();

File: storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java
Patch:
@@ -1434,7 +1434,7 @@ public Cursor searchItems(long feedID, String searchQuery) {
     public Cursor searchFeeds(String searchQuery) {
         String[] queryWords = prepareSearchQuery(searchQuery);
 
-        String queryStart = "SELECT * FROM " + TABLE_NAME_FEEDS + " WHERE ";
+        String queryStart = "SELECT " + KEYS_FEED + " FROM " + TABLE_NAME_FEEDS + " WHERE ";
         StringBuilder sb = new StringBuilder(queryStart);
 
         for (int i = 0; i < queryWords.length; i++) {

File: net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/ItunesTopListLoader.java
Patch:
@@ -27,6 +27,7 @@ public class ItunesTopListLoader {
     private final Context context;
     public static final String PREF_KEY_COUNTRY_CODE = "country_code";
     public static final String PREF_KEY_HIDDEN_DISCOVERY_COUNTRY = "hidden_discovery_country";
+    public static final String PREF_KEY_NEEDS_CONFIRM = "needs_confirm";
     public static final String PREFS = "CountryRegionPrefs";
     public static final String COUNTRY_CODE_UNSET = "99";
 

File: net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/ItunesTopListLoader.java
Patch:
@@ -27,6 +27,7 @@ public class ItunesTopListLoader {
     private final Context context;
     public static final String PREF_KEY_COUNTRY_CODE = "country_code";
     public static final String PREF_KEY_HIDDEN_DISCOVERY_COUNTRY = "hidden_discovery_country";
+    public static final String PREF_KEY_NEEDS_CONFIRM = "needs_confirm";
     public static final String PREFS = "CountryRegionPrefs";
     public static final String COUNTRY_CODE_UNSET = "99";
 

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -38,7 +38,6 @@
 import de.danoeh.antennapod.core.util.DownloadErrorLabel;
 import de.danoeh.antennapod.event.FeedListUpdateEvent;
 import de.danoeh.antennapod.event.PlayerStatusEvent;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.glide.FastBlurTransformation;
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
@@ -431,7 +430,6 @@ private void showFeedInformation(final Feed feed, Map<String, String> alternateF
                     .apply(new RequestOptions()
                         .placeholder(R.color.light_gray)
                         .error(R.color.light_gray)
-                        .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                         .fitCenter()
                         .dontAnimate())
                     .into(viewBinding.coverImage);
@@ -440,7 +438,6 @@ private void showFeedInformation(final Feed feed, Map<String, String> alternateF
                     .apply(new RequestOptions()
                             .placeholder(R.color.image_readability_tint)
                             .error(R.color.image_readability_tint)
-                            .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                             .transform(new FastBlurTransformation())
                             .dontAnimate())
                     .into(viewBinding.backgroundImage);

File: app/src/main/java/de/danoeh/antennapod/adapter/ChaptersListAdapter.java
Patch:
@@ -16,7 +16,6 @@
 import com.bumptech.glide.request.RequestOptions;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.model.feed.Chapter;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.model.feed.EmbeddedChapterImage;
 import de.danoeh.antennapod.core.util.IntentUtils;
@@ -106,7 +105,6 @@ public void onBindViewHolder(@NonNull ChapterHolder holder, int position) {
                 Glide.with(context)
                         .load(EmbeddedChapterImage.getModelFor(media, position))
                         .apply(new RequestOptions()
-                                .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                                 .dontAnimate()
                                 .transform(new FitCenter(), new RoundedCorners((int)
                                         (4 * context.getResources().getDisplayMetrics().density))))

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverLoader.java
Patch:
@@ -23,7 +23,6 @@
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.glide.PaletteBitmap;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.ui.common.ThemeUtils;
@@ -90,7 +89,6 @@ public void load() {
         }
 
         RequestOptions options = new RequestOptions()
-                .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                 .fitCenter()
                 .dontAnimate();
 

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -29,7 +29,6 @@
 import de.danoeh.antennapod.fragment.CompletedDownloadsFragment;
 import de.danoeh.antennapod.fragment.InboxFragment;
 import de.danoeh.antennapod.model.feed.Feed;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.NavDrawerData;
 import de.danoeh.antennapod.fragment.AddFeedFragment;
@@ -326,7 +325,6 @@ private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder ho
                 .apply(new RequestOptions()
                     .placeholder(R.color.light_gray)
                     .error(R.color.light_gray)
-                    .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                     .transform(new FitCenter(),
                             new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))
                     .dontAnimate())

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -32,7 +32,6 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.util.ChapterUtils;
 import de.danoeh.antennapod.core.util.DateFormatter;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
@@ -268,7 +267,6 @@ public void onEventMainThread(PlaybackPositionEvent event) {
 
     private void displayCoverImage() {
         RequestOptions options = new RequestOptions()
-                .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                 .dontAnimate()
                 .transform(new FitCenter(),
                         new RoundedCorners((int) (16 * getResources().getDisplayMetrics().density)));

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -21,7 +21,6 @@
 import de.danoeh.antennapod.event.playback.PlaybackServiceEvent;
 import de.danoeh.antennapod.model.playback.MediaType;
 import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.model.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
@@ -201,7 +200,6 @@ private void updateUi(Playable media) {
         RequestOptions options = new RequestOptions()
                 .placeholder(R.color.light_gray)
                 .error(R.color.light_gray)
-                .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                 .fitCenter()
                 .dontAnimate();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -36,7 +36,6 @@
 import com.joanzapata.iconify.Iconify;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.glide.FastBlurTransformation;
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.storage.DBTasks;
@@ -203,7 +202,6 @@ private void showFeed() {
                 .apply(new RequestOptions()
                         .placeholder(R.color.light_gray)
                         .error(R.color.light_gray)
-                        .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                         .fitCenter()
                         .dontAnimate())
                 .into(imgvCover);
@@ -212,7 +210,6 @@ private void showFeed() {
                 .apply(new RequestOptions()
                         .placeholder(R.color.image_readability_tint)
                         .error(R.color.image_readability_tint)
-                        .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                         .transform(new FastBlurTransformation())
                         .dontAnimate())
                 .into(imgvBackground);

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -32,7 +32,6 @@
 import de.danoeh.antennapod.core.event.DownloadEvent;
 import de.danoeh.antennapod.core.event.DownloaderUpdate;
 import de.danoeh.antennapod.core.feed.FeedEvent;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.glide.FastBlurTransformation;
 import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;
 import de.danoeh.antennapod.core.service.download.DownloadService;
@@ -505,7 +504,6 @@ private void loadFeedImage() {
                 .apply(new RequestOptions()
                     .placeholder(R.color.image_readability_tint)
                     .error(R.color.image_readability_tint)
-                    .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                     .transform(new FastBlurTransformation())
                     .dontAnimate())
                 .into(viewBinding.imgvBackground);
@@ -515,7 +513,6 @@ private void loadFeedImage() {
                 .apply(new RequestOptions()
                     .placeholder(R.color.light_gray)
                     .error(R.color.light_gray)
-                    .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                     .fitCenter()
                     .dontAnimate())
                 .into(viewBinding.header.imgvCover);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -47,7 +47,6 @@
 import de.danoeh.antennapod.model.feed.FeedItem;
 import de.danoeh.antennapod.model.feed.FeedMedia;
 import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.preferences.UsageStatistics;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.download.Downloader;
@@ -294,7 +293,6 @@ private void updateAppearance() {
 
         RequestOptions options = new RequestOptions()
                 .error(R.color.light_gray)
-                .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                 .transform(new FitCenter(),
                         new RoundedCorners((int) (8 * getResources().getDisplayMetrics().density)))
                 .dontAnimate();

File: ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/StatisticsListAdapter.java
Patch:
@@ -12,7 +12,6 @@
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.RequestOptions;
 
-import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.storage.StatisticsItem;
 
 import java.util.List;
@@ -66,7 +65,6 @@ public void onBindViewHolder(@NonNull RecyclerView.ViewHolder h, int position) {
                     .apply(new RequestOptions()
                             .placeholder(R.color.light_gray)
                             .error(R.color.light_gray)
-                            .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                             .fitCenter()
                             .dontAnimate())
                     .into(holder.image);

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideModule.java
Patch:
@@ -32,6 +32,7 @@ public class ApGlideModule extends AppGlideModule {
     @Override
     public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
         builder.setDefaultRequestOptions(RequestOptions.formatOf(DecodeFormat.PREFER_ARGB_8888));
+        builder.setLogLevel(Log.WARN);
         @SuppressLint("UsableSpace")
         long spaceAvailable = context.getCacheDir().getUsableSpace();
         long imageCacheSize = (spaceAvailable > 2 * GIGABYTES) ? (250 * MEGABYTES) : (50 * MEGABYTES);

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideModule.java
Patch:
@@ -32,6 +32,7 @@ public class ApGlideModule extends AppGlideModule {
     @Override
     public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder) {
         builder.setDefaultRequestOptions(RequestOptions.formatOf(DecodeFormat.PREFER_ARGB_8888));
+        builder.setLogLevel(Log.WARN);
         @SuppressLint("UsableSpace")
         long spaceAvailable = context.getCacheDir().getUsableSpace();
         long imageCacheSize = (spaceAvailable > 2 * GIGABYTES) ? (250 * MEGABYTES) : (50 * MEGABYTES);

File: app/src/main/java/de/danoeh/antennapod/view/LiftOnScrollListener.java
Patch:
@@ -28,7 +28,9 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
 
     private boolean isScrolled(RecyclerView recyclerView) {
         int firstItem = ((LinearLayoutManager) recyclerView.getLayoutManager()).findFirstVisibleItemPosition();
-        if (firstItem != 0) {
+        if (firstItem < 0) {
+            return false;
+        } else if (firstItem > 0) {
             return true;
         }
         View firstItemView = recyclerView.getLayoutManager().findViewByPosition(firstItem);

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -144,7 +144,7 @@ public void onEventMainThread(QueueEvent event) {
             case SET_QUEUE:
             case SORTED: //Deliberate fall-through
                 queue = event.items;
-                recyclerAdapter.notifyDataSetChanged();
+                recyclerAdapter.updateItems(event.items);
                 break;
             case REMOVED:
             case IRREVERSIBLE_REMOVED:
@@ -154,7 +154,7 @@ public void onEventMainThread(QueueEvent event) {
                 break;
             case CLEARED:
                 queue.clear();
-                recyclerAdapter.notifyDataSetChanged();
+                recyclerAdapter.updateItems(queue);
                 break;
             case MOVED:
                 return;

File: app/src/main/java/de/danoeh/antennapod/view/LiftOnScrollListener.java
Patch:
@@ -28,7 +28,9 @@ public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
 
     private boolean isScrolled(RecyclerView recyclerView) {
         int firstItem = ((LinearLayoutManager) recyclerView.getLayoutManager()).findFirstVisibleItemPosition();
-        if (firstItem != 0) {
+        if (firstItem < 0) {
+            return false;
+        } else if (firstItem > 0) {
             return true;
         }
         View firstItemView = recyclerView.getLayoutManager().findViewByPosition(firstItem);

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -144,7 +144,7 @@ public void onEventMainThread(QueueEvent event) {
             case SET_QUEUE:
             case SORTED: //Deliberate fall-through
                 queue = event.items;
-                recyclerAdapter.notifyDataSetChanged();
+                recyclerAdapter.updateItems(event.items);
                 break;
             case REMOVED:
             case IRREVERSIBLE_REMOVED:
@@ -154,7 +154,7 @@ public void onEventMainThread(QueueEvent event) {
                 break;
             case CLEARED:
                 queue.clear();
-                recyclerAdapter.notifyDataSetChanged();
+                recyclerAdapter.updateItems(queue);
                 break;
             case MOVED:
                 return;

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -369,6 +369,9 @@ public boolean onContextItemSelected(MenuItem item) {
     }
 
     private void openPodcast() {
+        if (item == null) {
+            return;
+        }
         Fragment fragment = FeedItemlistFragment.newInstance(item.getFeedId());
         ((MainActivity) getActivity()).loadChildFragment(fragment);
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -369,6 +369,9 @@ public boolean onContextItemSelected(MenuItem item) {
     }
 
     private void openPodcast() {
+        if (item == null) {
+            return;
+        }
         Fragment fragment = FeedItemlistFragment.newInstance(item.getFeedId());
         ((MainActivity) getActivity()).loadChildFragment(fragment);
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/ChaptersFragment.java
Patch:
@@ -50,7 +50,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
         return new MaterialAlertDialogBuilder(requireContext())
                 .setTitle(getString(R.string.chapters_label))
                 .setView(onCreateView(getLayoutInflater()))
-                .setNegativeButton(getString(R.string.cancel_label), null) //dismisses
+                .setNegativeButton(getString(R.string.close_label), null) //dismisses
                 .create();
     }
 
@@ -76,7 +76,7 @@ public View onCreateView(@NonNull LayoutInflater inflater) {
         recyclerView.setAdapter(adapter);
 
         progressBar.setVisibility(View.VISIBLE);
-        
+
         RelativeLayout.LayoutParams wrapHeight = new RelativeLayout.LayoutParams(
                 ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
         recyclerView.setLayoutParams(wrapHeight);

File: app/src/main/java/de/danoeh/antennapod/fragment/ChaptersFragment.java
Patch:
@@ -50,7 +50,7 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
         return new MaterialAlertDialogBuilder(requireContext())
                 .setTitle(getString(R.string.chapters_label))
                 .setView(onCreateView(getLayoutInflater()))
-                .setNegativeButton(getString(R.string.cancel_label), null) //dismisses
+                .setNegativeButton(getString(R.string.close_label), null) //dismisses
                 .create();
     }
 
@@ -76,7 +76,7 @@ public View onCreateView(@NonNull LayoutInflater inflater) {
         recyclerView.setAdapter(adapter);
 
         progressBar.setVisibility(View.VISIBLE);
-        
+
         RelativeLayout.LayoutParams wrapHeight = new RelativeLayout.LayoutParams(
                 ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
         recyclerView.setLayoutParams(wrapHeight);

File: app/src/main/java/de/danoeh/antennapod/adapter/EpisodeItemListAdapter.java
Patch:
@@ -70,7 +70,10 @@ public final EpisodeItemViewHolder onCreateViewHolder(@NonNull ViewGroup parent,
     @Override
     public final void onBindViewHolder(EpisodeItemViewHolder holder, int pos) {
         if (pos >= episodes.size()) {
+            beforeBindViewHolder(holder, pos);
             holder.bindDummy();
+            afterBindViewHolder(holder, pos);
+            holder.hideSeparatorIfNecessary();
             return;
         }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/EpisodeItemListAdapter.java
Patch:
@@ -70,7 +70,10 @@ public final EpisodeItemViewHolder onCreateViewHolder(@NonNull ViewGroup parent,
     @Override
     public final void onBindViewHolder(EpisodeItemViewHolder holder, int pos) {
         if (pos >= episodes.size()) {
+            beforeBindViewHolder(holder, pos);
             holder.bindDummy();
+            afterBindViewHolder(holder, pos);
+            holder.hideSeparatorIfNecessary();
             return;
         }
 

File: app/src/androidTest/java/de/test/antennapod/dialogs/ShareDialogTest.java
Patch:
@@ -48,7 +48,7 @@ public void setUp() throws Exception {
         context = InstrumentationRegistry.getInstrumentation().getTargetContext();
         EspressoTestUtils.clearPreferences();
         EspressoTestUtils.clearDatabase();
-        EspressoTestUtils.setLastNavFragment(AllEpisodesFragment.TAG);
+        EspressoTestUtils.setLaunchScreen(AllEpisodesFragment.TAG);
         UITestUtils uiTestUtils = new UITestUtils(context);
         uiTestUtils.setup();
         uiTestUtils.addLocalFeedData(true);

File: app/src/androidTest/java/de/test/antennapod/ui/QueueFragmentTest.java
Patch:
@@ -33,7 +33,7 @@ public class QueueFragmentTest {
     public void setUp() {
         EspressoTestUtils.clearPreferences();
         EspressoTestUtils.clearDatabase();
-        EspressoTestUtils.setLastNavFragment(QueueFragment.TAG);
+        EspressoTestUtils.setLaunchScreen(QueueFragment.TAG);
         activityRule.launchActivity(new Intent());
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -50,7 +50,6 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
-import de.danoeh.antennapod.core.util.StorageUtils;
 import de.danoeh.antennapod.core.util.download.AutoUpdateManager;
 import de.danoeh.antennapod.dialog.RatingDialog;
 import de.danoeh.antennapod.fragment.AddFeedFragment;
@@ -112,7 +111,6 @@ public void onCreate(Bundle savedInstanceState) {
             ensureGeneratedViewIdGreaterThan(savedInstanceState.getInt(KEY_GENERATED_VIEW_ID, 0));
         }
         super.onCreate(savedInstanceState);
-        StorageUtils.checkStorageAvailability(this);
         setContentView(R.layout.main);
         recycledViewPool.setMaxRecycledViews(R.id.view_type_episode_item, 25);
 
@@ -414,7 +412,6 @@ public void onStart() {
     @Override
     protected void onResume() {
         super.onResume();
-        StorageUtils.checkStorageAvailability(this);
         handleNavIntent();
         RatingDialog.check();
 

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -56,7 +56,6 @@
 import de.danoeh.antennapod.parser.feed.FeedHandlerResult;
 import de.danoeh.antennapod.model.download.DownloadError;
 import de.danoeh.antennapod.core.util.IntentUtils;
-import de.danoeh.antennapod.core.util.StorageUtils;
 import de.danoeh.antennapod.core.util.URLChecker;
 import de.danoeh.antennapod.core.util.syndication.FeedDiscoverer;
 import de.danoeh.antennapod.core.util.syndication.HtmlToPlainText;
@@ -122,7 +121,6 @@ public class OnlineFeedViewActivity extends AppCompatActivity {
     protected void onCreate(Bundle savedInstanceState) {
         setTheme(UserPreferences.getTranslucentTheme());
         super.onCreate(savedInstanceState);
-        StorageUtils.checkStorageAvailability(this);
 
         viewBinding = OnlinefeedviewActivityBinding.inflate(getLayoutInflater());
         setContentView(viewBinding.getRoot());

File: app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -50,7 +50,6 @@
 import de.danoeh.antennapod.core.util.FeedItemUtil;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.ShareUtils;
-import de.danoeh.antennapod.core.util.StorageUtils;
 import de.danoeh.antennapod.core.util.TimeSpeedConverter;
 import de.danoeh.antennapod.core.util.gui.PictureInPictureUtil;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
@@ -107,7 +106,6 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         Log.d(TAG, "onCreate()");
-        StorageUtils.checkStorageAvailability(this);
 
         getWindow().setFormat(PixelFormat.TRANSPARENT);
         viewBinding = VideoplayerActivityBinding.inflate(LayoutInflater.from(this));
@@ -120,7 +118,6 @@ protected void onCreate(Bundle savedInstanceState) {
     @Override
     protected void onResume() {
         super.onResume();
-        StorageUtils.checkStorageAvailability(this);
         switchToAudioOnly = false;
         if (PlaybackService.isCasting()) {
             Intent intent = PlaybackService.getPlayerActivityIntent(this);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -113,9 +113,6 @@ protected void download() {
             } else if (!response.isSuccessful() || response.body() == null) {
                 callOnFailByResponseCode(response);
                 return;
-            } else if (!StorageUtils.storageAvailable()) {
-                onFail(DownloadError.ERROR_DEVICE_NOT_FOUND, null);
-                return;
             } else if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA
                     && isContentTypeTextAndSmallerThan100kb(response)) {
                 onFail(DownloadError.ERROR_FILE_TYPE, null);

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -50,7 +50,6 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
-import de.danoeh.antennapod.core.util.StorageUtils;
 import de.danoeh.antennapod.core.util.download.AutoUpdateManager;
 import de.danoeh.antennapod.dialog.RatingDialog;
 import de.danoeh.antennapod.fragment.AddFeedFragment;
@@ -112,7 +111,6 @@ public void onCreate(Bundle savedInstanceState) {
             ensureGeneratedViewIdGreaterThan(savedInstanceState.getInt(KEY_GENERATED_VIEW_ID, 0));
         }
         super.onCreate(savedInstanceState);
-        StorageUtils.checkStorageAvailability(this);
         setContentView(R.layout.main);
         recycledViewPool.setMaxRecycledViews(R.id.view_type_episode_item, 25);
 
@@ -414,7 +412,6 @@ public void onStart() {
     @Override
     protected void onResume() {
         super.onResume();
-        StorageUtils.checkStorageAvailability(this);
         handleNavIntent();
         RatingDialog.check();
 

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -56,7 +56,6 @@
 import de.danoeh.antennapod.parser.feed.FeedHandlerResult;
 import de.danoeh.antennapod.model.download.DownloadError;
 import de.danoeh.antennapod.core.util.IntentUtils;
-import de.danoeh.antennapod.core.util.StorageUtils;
 import de.danoeh.antennapod.core.util.URLChecker;
 import de.danoeh.antennapod.core.util.syndication.FeedDiscoverer;
 import de.danoeh.antennapod.core.util.syndication.HtmlToPlainText;
@@ -122,7 +121,6 @@ public class OnlineFeedViewActivity extends AppCompatActivity {
     protected void onCreate(Bundle savedInstanceState) {
         setTheme(UserPreferences.getTranslucentTheme());
         super.onCreate(savedInstanceState);
-        StorageUtils.checkStorageAvailability(this);
 
         viewBinding = OnlinefeedviewActivityBinding.inflate(getLayoutInflater());
         setContentView(viewBinding.getRoot());

File: app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -50,7 +50,6 @@
 import de.danoeh.antennapod.core.util.FeedItemUtil;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.ShareUtils;
-import de.danoeh.antennapod.core.util.StorageUtils;
 import de.danoeh.antennapod.core.util.TimeSpeedConverter;
 import de.danoeh.antennapod.core.util.gui.PictureInPictureUtil;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
@@ -107,7 +106,6 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         Log.d(TAG, "onCreate()");
-        StorageUtils.checkStorageAvailability(this);
 
         getWindow().setFormat(PixelFormat.TRANSPARENT);
         viewBinding = VideoplayerActivityBinding.inflate(LayoutInflater.from(this));
@@ -120,7 +118,6 @@ protected void onCreate(Bundle savedInstanceState) {
     @Override
     protected void onResume() {
         super.onResume();
-        StorageUtils.checkStorageAvailability(this);
         switchToAudioOnly = false;
         if (PlaybackService.isCasting()) {
             Intent intent = PlaybackService.getPlayerActivityIntent(this);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -113,9 +113,6 @@ protected void download() {
             } else if (!response.isSuccessful() || response.body() == null) {
                 callOnFailByResponseCode(response);
                 return;
-            } else if (!StorageUtils.storageAvailable()) {
-                onFail(DownloadError.ERROR_DEVICE_NOT_FOUND, null);
-                return;
             } else if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA
                     && isContentTypeTextAndSmallerThan100kb(response)) {
                 onFail(DownloadError.ERROR_FILE_TYPE, null);

File: core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java
Patch:
@@ -57,7 +57,7 @@ public static void setVibrate(boolean vibrate) {
     }
 
     public static boolean vibrate() {
-        return prefs.getBoolean(PREF_VIBRATE, true);
+        return prefs.getBoolean(PREF_VIBRATE, false);
     }
 
     public static void setShakeToReset(boolean shakeToReset) {

File: core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java
Patch:
@@ -57,7 +57,7 @@ public static void setVibrate(boolean vibrate) {
     }
 
     public static boolean vibrate() {
-        return prefs.getBoolean(PREF_VIBRATE, true);
+        return prefs.getBoolean(PREF_VIBRATE, false);
     }
 
     public static void setShakeToReset(boolean shakeToReset) {

File: app/src/main/java/de/danoeh/antennapod/config/DownloadServiceCallbacksImpl.java
Patch:
@@ -32,7 +32,7 @@ public PendingIntent getAuthentificationNotificationContentIntent(Context contex
         activityIntent.setAction("request" + request.getFeedfileId());
         activityIntent.putExtra(DownloadAuthenticationActivity.ARG_DOWNLOAD_REQUEST, request);
         return PendingIntent.getActivity(context.getApplicationContext(),
-                R.id.pending_intent_download_service_auth, activityIntent,
+                request.getSource().hashCode(), activityIntent,
                 PendingIntent.FLAG_ONE_SHOT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));
     }
 

File: app/src/main/java/de/danoeh/antennapod/config/DownloadServiceCallbacksImpl.java
Patch:
@@ -32,7 +32,7 @@ public PendingIntent getAuthentificationNotificationContentIntent(Context contex
         activityIntent.setAction("request" + request.getFeedfileId());
         activityIntent.putExtra(DownloadAuthenticationActivity.ARG_DOWNLOAD_REQUEST, request);
         return PendingIntent.getActivity(context.getApplicationContext(),
-                R.id.pending_intent_download_service_auth, activityIntent,
+                request.getSource().hashCode(), activityIntent,
                 PendingIntent.FLAG_ONE_SHOT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -185,6 +185,9 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
     @Override
     public void onConfigurationChanged(@NonNull Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
+        if (header == null || infoContainer == null) {
+            return;
+        }
         int horizontalSpacing = (int) getResources().getDimension(R.dimen.additional_horizontal_spacing);
         header.setPadding(horizontalSpacing, header.getPaddingTop(), horizontalSpacing, header.getPaddingBottom());
         infoContainer.setPadding(horizontalSpacing, infoContainer.getPaddingTop(),

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java
Patch:
@@ -132,7 +132,7 @@ private String createFailedDownloadNotificationContent(List<DownloadStatus> stat
         StringBuilder sb = new StringBuilder();
 
         for (int i = 0; i < statuses.size(); i++) {
-            if (statuses.get(i).isSuccessful()) {
+            if (statuses.get(i) == null || statuses.get(i).isSuccessful()) {
                 continue;
             }
             sb.append("• ").append(statuses.get(i).getTitle());

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -185,6 +185,9 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
     @Override
     public void onConfigurationChanged(@NonNull Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
+        if (header == null || infoContainer == null) {
+            return;
+        }
         int horizontalSpacing = (int) getResources().getDimension(R.dimen.additional_horizontal_spacing);
         header.setPadding(horizontalSpacing, header.getPaddingTop(), horizontalSpacing, header.getPaddingBottom());
         infoContainer.setPadding(horizontalSpacing, infoContainer.getPaddingTop(),

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java
Patch:
@@ -132,7 +132,7 @@ private String createFailedDownloadNotificationContent(List<DownloadStatus> stat
         StringBuilder sb = new StringBuilder();
 
         for (int i = 0; i < statuses.size(); i++) {
-            if (statuses.get(i).isSuccessful()) {
+            if (statuses.get(i) == null || statuses.get(i).isSuccessful()) {
                 continue;
             }
             sb.append("• ").append(statuses.get(i).getTitle());

File: net/sync/gpoddernet/src/main/java/de/danoeh/antennapod/net/sync/gpoddernet/GpodnetService.java
Patch:
@@ -46,7 +46,7 @@
  */
 public class GpodnetService implements ISyncService {
     public static final String TAG = "GpodnetService";
-    public static final String DEFAULT_BASE_HOST = "gpodder.net";
+    private static final String DEFAULT_BASE_HOST = "gpodder.net";
     private static final int UPLOAD_BULK_SIZE = 30;
     private static final MediaType TEXT = MediaType.parse("plain/text; charset=utf-8");
     private static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");

File: net/sync/gpoddernet/src/main/java/de/danoeh/antennapod/net/sync/gpoddernet/GpodnetService.java
Patch:
@@ -46,7 +46,7 @@
  */
 public class GpodnetService implements ISyncService {
     public static final String TAG = "GpodnetService";
-    public static final String DEFAULT_BASE_HOST = "gpodder.net";
+    private static final String DEFAULT_BASE_HOST = "gpodder.net";
     private static final int UPLOAD_BULK_SIZE = 30;
     private static final MediaType TEXT = MediaType.parse("plain/text; charset=utf-8");
     private static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverLoader.java
Patch:
@@ -126,7 +126,7 @@ public CoverTarget(TextView txtvPlaceholder, ImageView imgvCover, boolean textAn
 
         @Override
         public void onLoadFailed(Drawable errorDrawable) {
-
+            setPlaceholderVisibility(this.placeholder.get(), true, null);
         }
 
         @Override
@@ -149,6 +149,7 @@ static void setPlaceholderVisibility(TextView placeholder, boolean textAndImageC
             if (placeholder != null) {
                 if (textAndImageCombined || showTitle) {
                     final Context context = placeholder.getContext();
+                    placeholder.setVisibility(View.VISIBLE);
                     int bgColor = ContextCompat.getColor(context, R.color.feed_text_bg);
                     if (palette == null || !showTitle) {
                         placeholder.setBackgroundColor(bgColor);

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverLoader.java
Patch:
@@ -126,7 +126,7 @@ public CoverTarget(TextView txtvPlaceholder, ImageView imgvCover, boolean textAn
 
         @Override
         public void onLoadFailed(Drawable errorDrawable) {
-
+            setPlaceholderVisibility(this.placeholder.get(), true, null);
         }
 
         @Override
@@ -149,6 +149,7 @@ static void setPlaceholderVisibility(TextView placeholder, boolean textAndImageC
             if (placeholder != null) {
                 if (textAndImageCombined || showTitle) {
                     final Context context = placeholder.getContext();
+                    placeholder.setVisibility(View.VISIBLE);
                     int bgColor = ContextCompat.getColor(context, R.color.feed_text_bg);
                     if (palette == null || !showTitle) {
                         placeholder.setBackgroundColor(bgColor);

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -234,6 +234,7 @@ private void bindNavView(String title, int position, NavHolder holder) {
         // reset for re-use
         holder.count.setVisibility(View.GONE);
         holder.count.setOnClickListener(null);
+        holder.count.setClickable(false);
 
         String tag = fragmentTags.get(position);
         if (tag.equals(QueueFragment.TAG)) {

File: ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/subscriptions/StatisticsFilterDialog.java
Patch:
@@ -80,7 +80,7 @@ public void show() {
             dialogBinding.timeToSpinner.setSelection(filterDatesTo.first.length - 1);
         });
         dialogBinding.pastYearButton.setOnClickListener(v -> {
-            dialogBinding.timeFromSpinner.setSelection(Math.max(0, filterDatesFrom.first.length - 13));
+            dialogBinding.timeFromSpinner.setSelection(Math.max(0, filterDatesFrom.first.length - 12));
             dialogBinding.timeToSpinner.setSelection(filterDatesTo.first.length - 2);
         });
 

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceMediaPlayerTest.java
Patch:
@@ -85,7 +85,7 @@ public void setUp() throws Exception {
         assertTrue(cacheDir.canWrite());
         assertTrue(cacheDir.canRead());
         if (!dest.exists()) {
-            InputStream i = getInstrumentation().getTargetContext().getAssets().open("3sec.mp3");
+            InputStream i = getInstrumentation().getContext().getAssets().open("3sec.mp3");
             OutputStream o = new FileOutputStream(new File(cacheDir, PLAYABLE_DEST_URL));
             IOUtils.copy(i, o);
             o.flush();

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -271,7 +271,7 @@ public static class Builder {
         private boolean deleteOnFailure = false;
         private final long feedfileId;
         private final int feedfileType;
-        private Bundle arguments = new Bundle();
+        private final Bundle arguments = new Bundle();
         private boolean initiatedByUser = true;
 
         public Builder(@NonNull String destination, @NonNull FeedMedia media) {
@@ -288,6 +288,7 @@ public Builder(@NonNull String destination, @NonNull Feed feed) {
             this.title = feed.getHumanReadableIdentifier();
             this.feedfileId = feed.getId();
             this.feedfileType = feed.getTypeAsInt();
+            arguments.putInt(REQUEST_ARG_PAGE_NR, feed.getPageNr());
         }
 
         public Builder withInitiatedByUser(boolean initiatedByUser) {

File: app/src/main/java/de/danoeh/antennapod/activity/SplashActivity.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Intent;
 import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
@@ -33,7 +34,8 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
             DrawableCompat.setTint(wrapDrawable, 0xffffffff);
             progressBar.setIndeterminateDrawable(DrawableCompat.unwrap(wrapDrawable));
         } else {
-            progressBar.getIndeterminateDrawable().setColorFilter(0xffffffff, PorterDuff.Mode.SRC_IN);
+            progressBar.getIndeterminateDrawable().setColorFilter(
+                    new PorterDuffColorFilter(0xffffffff, PorterDuff.Mode.SRC_IN));
         }
 
         Completable.create(subscriber -> {

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsRecyclerAdapter.java
Patch:
@@ -22,6 +22,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.content.res.AppCompatResources;
+import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -79,7 +80,8 @@ public SubscriptionViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int
         if (viewType == COVER_WITH_TITLE) {
             topAndBottomItemId = 0;
             belowItemId = R.id.imgvCover;
-            feedTitle.setBackgroundColor(feedTitle.getContext().getResources().getColor(R.color.feed_text_bg));
+            feedTitle.setBackgroundColor(
+                    ContextCompat.getColor(feedTitle.getContext(), R.color.feed_text_bg));
             int padding = (int) convertDpToPixel(feedTitle.getContext(), 6);
             feedTitle.setPadding(padding, padding, padding, padding);
         }

File: app/src/main/java/de/danoeh/antennapod/view/ShownotesWebView.java
Patch:
@@ -67,7 +67,6 @@ private void setup() {
             getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
         }
         getSettings().setUseWideViewPort(false);
-        getSettings().setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NARROW_COLUMNS);
         getSettings().setLoadWithOverviewMode(true);
         setOnLongClickListener(this);
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -271,7 +271,7 @@ public static class Builder {
         private boolean deleteOnFailure = false;
         private final long feedfileId;
         private final int feedfileType;
-        private Bundle arguments = new Bundle();
+        private final Bundle arguments = new Bundle();
         private boolean initiatedByUser = true;
 
         public Builder(@NonNull String destination, @NonNull FeedMedia media) {
@@ -288,6 +288,7 @@ public Builder(@NonNull String destination, @NonNull Feed feed) {
             this.title = feed.getHumanReadableIdentifier();
             this.feedfileId = feed.getId();
             this.feedfileType = feed.getTypeAsInt();
+            arguments.putInt(REQUEST_ARG_PAGE_NR, feed.getPageNr());
         }
 
         public Builder withInitiatedByUser(boolean initiatedByUser) {

File: app/src/main/java/de/danoeh/antennapod/activity/SplashActivity.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Intent;
 import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
@@ -33,7 +34,8 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
             DrawableCompat.setTint(wrapDrawable, 0xffffffff);
             progressBar.setIndeterminateDrawable(DrawableCompat.unwrap(wrapDrawable));
         } else {
-            progressBar.getIndeterminateDrawable().setColorFilter(0xffffffff, PorterDuff.Mode.SRC_IN);
+            progressBar.getIndeterminateDrawable().setColorFilter(
+                    new PorterDuffColorFilter(0xffffffff, PorterDuff.Mode.SRC_IN));
         }
 
         Completable.create(subscriber -> {

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsRecyclerAdapter.java
Patch:
@@ -22,6 +22,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.content.res.AppCompatResources;
+import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -79,7 +80,8 @@ public SubscriptionViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int
         if (viewType == COVER_WITH_TITLE) {
             topAndBottomItemId = 0;
             belowItemId = R.id.imgvCover;
-            feedTitle.setBackgroundColor(feedTitle.getContext().getResources().getColor(R.color.feed_text_bg));
+            feedTitle.setBackgroundColor(
+                    ContextCompat.getColor(feedTitle.getContext(), R.color.feed_text_bg));
             int padding = (int) convertDpToPixel(feedTitle.getContext(), 6);
             feedTitle.setPadding(padding, padding, padding, padding);
         }

File: app/src/main/java/de/danoeh/antennapod/view/ShownotesWebView.java
Patch:
@@ -67,7 +67,6 @@ private void setup() {
             getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
         }
         getSettings().setUseWideViewPort(false);
-        getSettings().setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NARROW_COLUMNS);
         getSettings().setLoadWithOverviewMode(true);
         setOnLongClickListener(this);
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -12,7 +12,6 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.Toolbar;
-import androidx.core.util.ObjectsCompat;
 import androidx.fragment.app.Fragment;
 import com.google.android.material.snackbar.Snackbar;
 import com.leinardi.android.speeddial.SpeedDialView;
@@ -48,6 +47,7 @@
 import org.greenrobot.eventbus.ThreadMode;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 /**
@@ -188,7 +188,7 @@ public void onEventMainThread(DownloadEvent event) {
         if (event.hasChangedFeedUpdateStatus(isUpdatingFeeds)) {
             refreshToolbarState();
         }
-        if (!ObjectsCompat.equals(event.update.mediaIds, runningDownloads)) {
+        if (!Arrays.equals(event.update.mediaIds, runningDownloads)) {
             runningDownloads = event.update.mediaIds;
             loadItems();
             return; // Refreshed anyway

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/AddToQueueSwipeAction.java
Patch:
@@ -41,7 +41,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showQueued || filter.showNew;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/MarkFavoriteSwipeAction.java
Patch:
@@ -37,7 +37,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showIsFavorite || filter.showNotFavorite;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/RemoveFromInboxSwipeAction.java
Patch:
@@ -34,12 +34,12 @@ public String getTitle(Context context) {
     @Override
     public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter) {
         if (item.isNew()) {
-            FeedItemMenuHandler.markReadWithUndo(fragment, item, FeedItem.UNPLAYED, willRemove(filter));
+            FeedItemMenuHandler.markReadWithUndo(fragment, item, FeedItem.UNPLAYED, willRemove(filter, item));
         }
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showNew;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/RemoveFromQueueSwipeAction.java
Patch:
@@ -41,7 +41,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
 
         DBWriter.removeQueueItem(fragment.requireActivity(), true, item);
 
-        if (willRemove(filter)) {
+        if (willRemove(filter, item)) {
             ((MainActivity) fragment.requireActivity()).showSnackbarAbovePlayer(
                     fragment.getResources().getQuantityString(R.plurals.removed_from_queue_batch_label, 1, 1),
                     Snackbar.LENGTH_LONG)
@@ -51,7 +51,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showQueued || filter.showNotQueued;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/ShowFirstSwipeDialogAction.java
Patch:
@@ -36,7 +36,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return false;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/StartDownloadSwipeAction.java
Patch:
@@ -38,7 +38,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return false;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/SwipeAction.java
Patch:
@@ -31,5 +31,5 @@ public interface SwipeAction {
 
     void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter);
 
-    boolean willRemove(FeedItemFilter filter);
+    boolean willRemove(FeedItemFilter filter, FeedItem item);
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/TogglePlaybackStateSwipeAction.java
Patch:
@@ -34,11 +34,11 @@ public String getTitle(Context context) {
     @Override
     public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter) {
         int newState = item.getPlayState() == FeedItem.UNPLAYED ? FeedItem.PLAYED : FeedItem.UNPLAYED;
-        FeedItemMenuHandler.markReadWithUndo(fragment, item, newState, willRemove(filter));
+        FeedItemMenuHandler.markReadWithUndo(fragment, item, newState, willRemove(filter, item));
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showUnplayed || filter.showPlayed || filter.showNew;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -12,7 +12,6 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.Toolbar;
-import androidx.core.util.ObjectsCompat;
 import androidx.fragment.app.Fragment;
 import com.google.android.material.snackbar.Snackbar;
 import com.leinardi.android.speeddial.SpeedDialView;
@@ -48,6 +47,7 @@
 import org.greenrobot.eventbus.ThreadMode;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 /**
@@ -188,7 +188,7 @@ public void onEventMainThread(DownloadEvent event) {
         if (event.hasChangedFeedUpdateStatus(isUpdatingFeeds)) {
             refreshToolbarState();
         }
-        if (!ObjectsCompat.equals(event.update.mediaIds, runningDownloads)) {
+        if (!Arrays.equals(event.update.mediaIds, runningDownloads)) {
             runningDownloads = event.update.mediaIds;
             loadItems();
             return; // Refreshed anyway

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/AddToQueueSwipeAction.java
Patch:
@@ -41,7 +41,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showQueued || filter.showNew;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/MarkFavoriteSwipeAction.java
Patch:
@@ -37,7 +37,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showIsFavorite || filter.showNotFavorite;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/RemoveFromInboxSwipeAction.java
Patch:
@@ -34,12 +34,12 @@ public String getTitle(Context context) {
     @Override
     public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter) {
         if (item.isNew()) {
-            FeedItemMenuHandler.markReadWithUndo(fragment, item, FeedItem.UNPLAYED, willRemove(filter));
+            FeedItemMenuHandler.markReadWithUndo(fragment, item, FeedItem.UNPLAYED, willRemove(filter, item));
         }
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showNew;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/RemoveFromQueueSwipeAction.java
Patch:
@@ -41,7 +41,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
 
         DBWriter.removeQueueItem(fragment.requireActivity(), true, item);
 
-        if (willRemove(filter)) {
+        if (willRemove(filter, item)) {
             ((MainActivity) fragment.requireActivity()).showSnackbarAbovePlayer(
                     fragment.getResources().getQuantityString(R.plurals.removed_from_queue_batch_label, 1, 1),
                     Snackbar.LENGTH_LONG)
@@ -51,7 +51,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showQueued || filter.showNotQueued;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/ShowFirstSwipeDialogAction.java
Patch:
@@ -36,7 +36,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return false;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/StartDownloadSwipeAction.java
Patch:
@@ -38,7 +38,7 @@ public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filte
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return false;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/SwipeAction.java
Patch:
@@ -31,5 +31,5 @@ public interface SwipeAction {
 
     void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter);
 
-    boolean willRemove(FeedItemFilter filter);
+    boolean willRemove(FeedItemFilter filter, FeedItem item);
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/TogglePlaybackStateSwipeAction.java
Patch:
@@ -34,11 +34,11 @@ public String getTitle(Context context) {
     @Override
     public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter) {
         int newState = item.getPlayState() == FeedItem.UNPLAYED ? FeedItem.PLAYED : FeedItem.UNPLAYED;
-        FeedItemMenuHandler.markReadWithUndo(fragment, item, newState, willRemove(filter));
+        FeedItemMenuHandler.markReadWithUndo(fragment, item, newState, willRemove(filter, item));
     }
 
     @Override
-    public boolean willRemove(FeedItemFilter filter) {
+    public boolean willRemove(FeedItemFilter filter, FeedItem item) {
         return filter.showUnplayed || filter.showPlayed || filter.showNew;
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/BasicAuthorizationInterceptor.java
Patch:
@@ -47,7 +47,9 @@ public Response intercept(Chain chain) throws IOException {
         if (request.tag() instanceof DownloadRequest) {
             DownloadRequest downloadRequest = (DownloadRequest) request.tag();
             userInfo = URIUtil.getURIFromRequestUrl(downloadRequest.getSource()).getUserInfo();
-            if (TextUtils.isEmpty(userInfo)) {
+            if (TextUtils.isEmpty(userInfo)
+                    && (!TextUtils.isEmpty(downloadRequest.getUsername())
+                        || !TextUtils.isEmpty(downloadRequest.getPassword()))) {
                 userInfo = downloadRequest.getUsername() + ":" + downloadRequest.getPassword();
             }
         } else {

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java
Patch:
@@ -398,6 +398,7 @@ void loadItems() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(data -> {
                     progLoading.setVisibility(View.GONE);
+                    loadingMoreView.setVisibility(View.GONE);
                     hasMoreItems = true;
                     episodes = data;
                     onFragmentLoaded(episodes);

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java
Patch:
@@ -398,6 +398,7 @@ void loadItems() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(data -> {
                     progLoading.setVisibility(View.GONE);
+                    loadingMoreView.setVisibility(View.GONE);
                     hasMoreItems = true;
                     episodes = data;
                     onFragmentLoaded(episodes);

File: app/src/main/java/de/danoeh/antennapod/adapter/EpisodeItemListAdapter.java
Patch:
@@ -84,15 +84,15 @@ public final void onBindViewHolder(EpisodeItemViewHolder holder, int pos) {
         });
         holder.itemView.setOnCreateContextMenuListener(this);
         holder.itemView.setOnLongClickListener(v -> {
-            longPressedItem = getItem(holder.getBindingAdapterPosition());
+            longPressedItem = item;
             longPressedPosition = holder.getBindingAdapterPosition();
             return false;
         });
         holder.itemView.setOnTouchListener((v, e) -> {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 if (e.isFromSource(InputDevice.SOURCE_MOUSE)
                         && e.getButtonState() == MotionEvent.BUTTON_SECONDARY) {
-                    longPressedItem = getItem(holder.getBindingAdapterPosition());
+                    longPressedItem = item;
                     longPressedPosition = holder.getBindingAdapterPosition();
                     return false;
                 }
@@ -127,6 +127,7 @@ public void onViewRecycled(@NonNull EpisodeItemViewHolder holder) {
         holder.itemView.setOnClickListener(null);
         holder.itemView.setOnCreateContextMenuListener(null);
         holder.itemView.setOnLongClickListener(null);
+        holder.itemView.setOnTouchListener(null);
         holder.secondaryActionButton.setOnClickListener(null);
         holder.dragHandle.setOnTouchListener(null);
         holder.coverHolder.setOnTouchListener(null);

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsRecyclerAdapter.java
Patch:
@@ -118,7 +118,7 @@ public void onBindViewHolder(@NonNull SubscriptionViewHolder holder, int positio
                 if (isFeed) {
                     longPressedPosition = holder.getBindingAdapterPosition();
                 }
-                selectedItem = (NavDrawerData.DrawerItem) getItem(holder.getBindingAdapterPosition());
+                selectedItem = drawerItem;
             }
             return false;
         });
@@ -131,7 +131,7 @@ public void onBindViewHolder(@NonNull SubscriptionViewHolder holder, int positio
                         if (isFeed) {
                             longPressedPosition = holder.getBindingAdapterPosition();
                         }
-                        selectedItem = (NavDrawerData.DrawerItem) getItem(holder.getBindingAdapterPosition());
+                        selectedItem = drawerItem;
                     }
                 }
             }

File: app/src/main/java/de/danoeh/antennapod/adapter/EpisodeItemListAdapter.java
Patch:
@@ -84,15 +84,15 @@ public final void onBindViewHolder(EpisodeItemViewHolder holder, int pos) {
         });
         holder.itemView.setOnCreateContextMenuListener(this);
         holder.itemView.setOnLongClickListener(v -> {
-            longPressedItem = getItem(holder.getBindingAdapterPosition());
+            longPressedItem = item;
             longPressedPosition = holder.getBindingAdapterPosition();
             return false;
         });
         holder.itemView.setOnTouchListener((v, e) -> {
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 if (e.isFromSource(InputDevice.SOURCE_MOUSE)
                         && e.getButtonState() == MotionEvent.BUTTON_SECONDARY) {
-                    longPressedItem = getItem(holder.getBindingAdapterPosition());
+                    longPressedItem = item;
                     longPressedPosition = holder.getBindingAdapterPosition();
                     return false;
                 }
@@ -127,6 +127,7 @@ public void onViewRecycled(@NonNull EpisodeItemViewHolder holder) {
         holder.itemView.setOnClickListener(null);
         holder.itemView.setOnCreateContextMenuListener(null);
         holder.itemView.setOnLongClickListener(null);
+        holder.itemView.setOnTouchListener(null);
         holder.secondaryActionButton.setOnClickListener(null);
         holder.dragHandle.setOnTouchListener(null);
         holder.coverHolder.setOnTouchListener(null);

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsRecyclerAdapter.java
Patch:
@@ -118,7 +118,7 @@ public void onBindViewHolder(@NonNull SubscriptionViewHolder holder, int positio
                 if (isFeed) {
                     longPressedPosition = holder.getBindingAdapterPosition();
                 }
-                selectedItem = (NavDrawerData.DrawerItem) getItem(holder.getBindingAdapterPosition());
+                selectedItem = drawerItem;
             }
             return false;
         });
@@ -131,7 +131,7 @@ public void onBindViewHolder(@NonNull SubscriptionViewHolder holder, int positio
                         if (isFeed) {
                             longPressedPosition = holder.getBindingAdapterPosition();
                         }
-                        selectedItem = (NavDrawerData.DrawerItem) getItem(holder.getBindingAdapterPosition());
+                        selectedItem = drawerItem;
                     }
                 }
             }

File: app/src/main/java/de/danoeh/antennapod/asynctask/DocumentFileExportWorker.java
Patch:
@@ -36,7 +36,7 @@ public Observable<DocumentFile> exportObservable() {
             OutputStreamWriter writer = null;
             try {
                 Uri uri = output.getUri();
-                outputStream = context.getContentResolver().openOutputStream(uri);
+                outputStream = context.getContentResolver().openOutputStream(uri, "wt");
                 if (outputStream == null) {
                     throw new IOException();
                 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java
Patch:
@@ -27,7 +27,7 @@ public static void exportToDocument(Uri uri, Context context) throws IOException
         ParcelFileDescriptor pfd = null;
         FileOutputStream fileOutputStream = null;
         try {
-            pfd = context.getContentResolver().openFileDescriptor(uri, "w");
+            pfd = context.getContentResolver().openFileDescriptor(uri, "wt");
             fileOutputStream = new FileOutputStream(pfd.getFileDescriptor());
             exportToStream(fileOutputStream, context);
         } catch (IOException e) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1664,6 +1664,7 @@ public void setStartWhenPrepared(boolean s) {
 
     public void seekTo(final int t) {
         mediaPlayer.seekTo(t);
+        EventBus.getDefault().post(new PlaybackPositionEvent(t, getDuration()));
     }
 
     private void seekDelta(final int d) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1664,6 +1664,7 @@ public void setStartWhenPrepared(boolean s) {
 
     public void seekTo(final int t) {
         mediaPlayer.seekTo(t);
+        EventBus.getDefault().post(new PlaybackPositionEvent(t, getDuration()));
     }
 
     private void seekDelta(final int d) {

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -265,7 +265,7 @@ public void onEndSelectMode() {
         speedDialView.setVisibility(View.GONE);
     }
 
-    private static class CompletedDownloadsListAdapter extends EpisodeItemListAdapter {
+    private class CompletedDownloadsListAdapter extends EpisodeItemListAdapter {
 
         public CompletedDownloadsListAdapter(MainActivity mainActivity) {
             super(mainActivity);
@@ -285,6 +285,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
             if (!inActionMode()) {
                 menu.findItem(R.id.multi_select).setVisible(true);
             }
+            MenuItemUtils.setOnClickListeners(menu, CompletedDownloadsFragment.this::onContextItemSelected);
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -639,7 +639,7 @@ public void onKeyUp(KeyEvent event) {
         }
     }
 
-    private static class FeedItemListAdapter extends EpisodeItemListAdapter {
+    private class FeedItemListAdapter extends EpisodeItemListAdapter {
         public FeedItemListAdapter(MainActivity mainActivity) {
             super(mainActivity);
         }
@@ -655,6 +655,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
             if (!inActionMode()) {
                 menu.findItem(R.id.multi_select).setVisible(true);
             }
+            MenuItemUtils.setOnClickListeners(menu, FeedItemlistFragment.this::onContextItemSelected);
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -28,6 +28,7 @@
 import de.danoeh.antennapod.activity.PreferenceActivity;
 import de.danoeh.antennapod.adapter.NavListAdapter;
 import de.danoeh.antennapod.core.dialog.ConfirmationDialog;
+import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;
 import de.danoeh.antennapod.event.FeedListUpdateEvent;
 import de.danoeh.antennapod.event.QueueEvent;
 import de.danoeh.antennapod.event.UnreadItemsUpdateEvent;
@@ -132,6 +133,7 @@ public void onCreateContextMenu(@NonNull ContextMenu menu, @NonNull View v, Cont
         } else {
             inflater.inflate(R.menu.nav_folder_context, menu);
         }
+        MenuItemUtils.setOnClickListeners(menu, this::onContextItemSelected);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/view/ShownotesWebView.java
Patch:
@@ -25,6 +25,7 @@
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
+import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -170,6 +171,7 @@ protected void onCreateContextMenu(ContextMenu menu) {
             menu.add(Menu.NONE, R.id.share_url_item, Menu.NONE, R.string.share_url_label);
             menu.setHeaderTitle(selectedUrl);
         }
+        MenuItemUtils.setOnClickListeners(menu, this::onContextItemSelected);
     }
 
     public void setTimecodeSelectedListener(Consumer<Integer> timecodeSelectedListener) {

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -265,7 +265,7 @@ public void onEndSelectMode() {
         speedDialView.setVisibility(View.GONE);
     }
 
-    private static class CompletedDownloadsListAdapter extends EpisodeItemListAdapter {
+    private class CompletedDownloadsListAdapter extends EpisodeItemListAdapter {
 
         public CompletedDownloadsListAdapter(MainActivity mainActivity) {
             super(mainActivity);
@@ -285,6 +285,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
             if (!inActionMode()) {
                 menu.findItem(R.id.multi_select).setVisible(true);
             }
+            MenuItemUtils.setOnClickListeners(menu, CompletedDownloadsFragment.this::onContextItemSelected);
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -639,7 +639,7 @@ public void onKeyUp(KeyEvent event) {
         }
     }
 
-    private static class FeedItemListAdapter extends EpisodeItemListAdapter {
+    private class FeedItemListAdapter extends EpisodeItemListAdapter {
         public FeedItemListAdapter(MainActivity mainActivity) {
             super(mainActivity);
         }
@@ -655,6 +655,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
             if (!inActionMode()) {
                 menu.findItem(R.id.multi_select).setVisible(true);
             }
+            MenuItemUtils.setOnClickListeners(menu, FeedItemlistFragment.this::onContextItemSelected);
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -28,6 +28,7 @@
 import de.danoeh.antennapod.activity.PreferenceActivity;
 import de.danoeh.antennapod.adapter.NavListAdapter;
 import de.danoeh.antennapod.core.dialog.ConfirmationDialog;
+import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;
 import de.danoeh.antennapod.event.FeedListUpdateEvent;
 import de.danoeh.antennapod.event.QueueEvent;
 import de.danoeh.antennapod.event.UnreadItemsUpdateEvent;
@@ -132,6 +133,7 @@ public void onCreateContextMenu(@NonNull ContextMenu menu, @NonNull View v, Cont
         } else {
             inflater.inflate(R.menu.nav_folder_context, menu);
         }
+        MenuItemUtils.setOnClickListeners(menu, this::onContextItemSelected);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/view/ShownotesWebView.java
Patch:
@@ -25,6 +25,7 @@
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
+import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -170,6 +171,7 @@ protected void onCreateContextMenu(ContextMenu menu) {
             menu.add(Menu.NONE, R.id.share_url_item, Menu.NONE, R.string.share_url_label);
             menu.setHeaderTitle(selectedUrl);
         }
+        MenuItemUtils.setOnClickListeners(menu, this::onContextItemSelected);
     }
 
     public void setTimecodeSelectedListener(Consumer<Integer> timecodeSelectedListener) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java
Patch:
@@ -118,7 +118,7 @@ private String createFailedDownloadNotificationContent(List<DownloadStatus> stat
                 continue;
             }
             sb.append("• ").append(statuses.get(i).getTitle());
-            sb.append(": ").append(DownloadErrorLabel.from(statuses.get(i).getReason()));
+            sb.append(": ").append(context.getString(DownloadErrorLabel.from(statuses.get(i).getReason())));
             if (i != statuses.size() - 1) {
                 sb.append("\n");
             }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java
Patch:
@@ -84,8 +84,8 @@ public FeedHandlerResult call() {
                                                 successful, reasonDetailed, request.isInitiatedByUser());
             return result;
         } else {
-            downloadStatus = new DownloadStatus(feed, feed.getTitle(), reason, successful,
-                                                reasonDetailed, request.isInitiatedByUser());
+            downloadStatus = new DownloadStatus(feed, feed.getHumanReadableIdentifier(), reason,
+                                                successful, reasonDetailed, request.isInitiatedByUser());
             return null;
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java
Patch:
@@ -118,7 +118,7 @@ private String createFailedDownloadNotificationContent(List<DownloadStatus> stat
                 continue;
             }
             sb.append("• ").append(statuses.get(i).getTitle());
-            sb.append(": ").append(DownloadErrorLabel.from(statuses.get(i).getReason()));
+            sb.append(": ").append(context.getString(DownloadErrorLabel.from(statuses.get(i).getReason())));
             if (i != statuses.size() - 1) {
                 sb.append("\n");
             }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java
Patch:
@@ -84,8 +84,8 @@ public FeedHandlerResult call() {
                                                 successful, reasonDetailed, request.isInitiatedByUser());
             return result;
         } else {
-            downloadStatus = new DownloadStatus(feed, feed.getTitle(), reason, successful,
-                                                reasonDetailed, request.isInitiatedByUser());
+            downloadStatus = new DownloadStatus(feed, feed.getHumanReadableIdentifier(), reason,
+                                                successful, reasonDetailed, request.isInitiatedByUser());
             return null;
         }
     }

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -35,6 +35,7 @@
 import de.danoeh.antennapod.core.service.download.DownloadService;
 import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;
 import de.danoeh.antennapod.core.feed.FeedUrlNotFoundException;
+import de.danoeh.antennapod.core.util.DownloadErrorLabel;
 import de.danoeh.antennapod.discovery.CombinedSearcher;
 import de.danoeh.antennapod.discovery.PodcastSearchResult;
 import de.danoeh.antennapod.event.FeedListUpdateEvent;
@@ -327,7 +328,7 @@ private void checkDownloadResult(@NonNull DownloadStatus status) {
                 dialog.show();
             }
         } else {
-            showErrorDialog(status.getReason().getErrorString(OnlineFeedViewActivity.this), status.getReasonDetailed());
+            showErrorDialog(getString(DownloadErrorLabel.from(status.getReason())), status.getReasonDetailed());
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -21,6 +21,7 @@
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.util.DownloadError;
+import de.danoeh.antennapod.core.util.DownloadErrorLabel;
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.model.feed.FeedMedia;
 import de.danoeh.antennapod.ui.common.ThemeUtils;
@@ -109,7 +110,7 @@ private void bind(DownloadLogItemViewHolder holder, DownloadStatus status, int p
                 holder.icon.setText("{fa-times-circle}");
             }
             holder.icon.setContentDescription(context.getString(R.string.error_label));
-            holder.reason.setText(status.getReason().getErrorString(context));
+            holder.reason.setText(DownloadErrorLabel.from(status.getReason()));
             holder.reason.setVisibility(View.VISIBLE);
             holder.tapForDetails.setVisibility(View.VISIBLE);
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java
Patch:
@@ -9,6 +9,7 @@
 import androidx.core.app.NotificationCompat;
 import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.R;
+import de.danoeh.antennapod.core.util.DownloadErrorLabel;
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.model.feed.FeedMedia;
 import de.danoeh.antennapod.core.util.gui.NotificationUtils;
@@ -117,7 +118,7 @@ private String createFailedDownloadNotificationContent(List<DownloadStatus> stat
                 continue;
             }
             sb.append("• ").append(statuses.get(i).getTitle());
-            sb.append(": ").append(statuses.get(i).getReason().getErrorString(context));
+            sb.append(": ").append(DownloadErrorLabel.from(statuses.get(i).getReason()));
             if (i != statuses.size() - 1) {
                 sb.append("\n");
             }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/Downloader.java
Patch:
@@ -4,6 +4,7 @@
 import android.net.wifi.WifiManager;
 import androidx.annotation.NonNull;
 
+import java.util.Date;
 import java.util.concurrent.Callable;
 
 import de.danoeh.antennapod.core.ClientConfig;
@@ -29,7 +30,8 @@ public abstract class Downloader implements Callable<Downloader> {
         this.request = request;
         this.request.setStatusMsg(R.string.download_pending);
         this.cancelled = false;
-        this.result = new DownloadStatus(request, null, false, false, null);
+        this.result = new DownloadStatus(0, request.getTitle(), request.getFeedfileId(), request.getFeedfileType(),
+                false, cancelled, false, null, new Date(), null, request.isInitiatedByUser());
     }
 
     protected abstract void download();

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -15,6 +15,7 @@
 import java.util.List;
 import java.util.Map;
 
+import de.danoeh.antennapod.core.storage.mapper.DownloadStatusCursorMapper;
 import de.danoeh.antennapod.model.feed.Chapter;
 import de.danoeh.antennapod.model.feed.Feed;
 import de.danoeh.antennapod.model.feed.FeedItem;
@@ -451,7 +452,7 @@ public static List<DownloadStatus> getDownloadLog() {
         try (Cursor cursor = adapter.getDownloadLogCursor(DOWNLOAD_LOG_SIZE)) {
             List<DownloadStatus> downloadLog = new ArrayList<>(cursor.getCount());
             while (cursor.moveToNext()) {
-                downloadLog.add(DownloadStatus.fromCursor(cursor));
+                downloadLog.add(DownloadStatusCursorMapper.convert(cursor));
             }
             Collections.sort(downloadLog, new DownloadStatusComparator());
             return downloadLog;
@@ -475,7 +476,7 @@ public static List<DownloadStatus> getFeedDownloadLog(long feedId) {
         try (Cursor cursor = adapter.getDownloadLog(Feed.FEEDFILETYPE_FEED, feedId)) {
             List<DownloadStatus> downloadLog = new ArrayList<>(cursor.getCount());
             while (cursor.moveToNext()) {
-                downloadLog.add(DownloadStatus.fromCursor(cursor));
+                downloadLog.add(DownloadStatusCursorMapper.convert(cursor));
             }
             Collections.sort(downloadLog, new DownloadStatusComparator());
             return downloadLog;

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -310,7 +310,7 @@ public boolean onMenuItemClick(MenuItem item) {
         if (itemId == R.id.rename_item) {
             new RenameItemDialog(getActivity(), feed).show();
             return true;
-        } else if (itemId == R.id.remove_item) {
+        } else if (itemId == R.id.remove_feed) {
             ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
             RemoveFeedDialog.show(getContext(), feed);
             return true;

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -169,7 +169,7 @@ public void onConfirmButtonPressed(DialogInterface dialog) {
         } else if (itemId == R.id.rename_item) {
             new RenameItemDialog(getActivity(), feed).show();
             return true;
-        } else if (itemId == R.id.remove_item) {
+        } else if (itemId == R.id.remove_feed) {
             ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
             RemoveFeedDialog.show(getContext(), feed);
             return true;

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -357,7 +357,7 @@ public boolean onContextItemSelected(MenuItem item) {
         } else if (itemId == R.id.rename_item) {
             new RenameItemDialog(getActivity(), feed).show();
             return true;
-        } else if (itemId == R.id.remove_item) {
+        } else if (itemId == R.id.remove_feed) {
             RemoveFeedDialog.show(getContext(), feed);
             return true;
         } else if (itemId == R.id.multi_select) {

File: app/src/main/java/de/danoeh/antennapod/fragment/actions/FeedMultiSelectActionHandler.java
Patch:
@@ -36,7 +36,7 @@ public FeedMultiSelectActionHandler(MainActivity activity, List<Feed> selectedIt
     }
 
     public void handleAction(int id) {
-        if (id == R.id.remove_item) {
+        if (id == R.id.remove_feed) {
             RemoveFeedDialog.show(activity, selectedItems);
         } else if (id == R.id.keep_updated) {
             keepUpdatedPrefHandler();

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -310,7 +310,7 @@ public boolean onMenuItemClick(MenuItem item) {
         if (itemId == R.id.rename_item) {
             new RenameItemDialog(getActivity(), feed).show();
             return true;
-        } else if (itemId == R.id.remove_item) {
+        } else if (itemId == R.id.remove_feed) {
             ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
             RemoveFeedDialog.show(getContext(), feed);
             return true;

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -169,7 +169,7 @@ public void onConfirmButtonPressed(DialogInterface dialog) {
         } else if (itemId == R.id.rename_item) {
             new RenameItemDialog(getActivity(), feed).show();
             return true;
-        } else if (itemId == R.id.remove_item) {
+        } else if (itemId == R.id.remove_feed) {
             ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
             RemoveFeedDialog.show(getContext(), feed);
             return true;

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -357,7 +357,7 @@ public boolean onContextItemSelected(MenuItem item) {
         } else if (itemId == R.id.rename_item) {
             new RenameItemDialog(getActivity(), feed).show();
             return true;
-        } else if (itemId == R.id.remove_item) {
+        } else if (itemId == R.id.remove_feed) {
             RemoveFeedDialog.show(getContext(), feed);
             return true;
         } else if (itemId == R.id.multi_select) {

File: app/src/main/java/de/danoeh/antennapod/fragment/actions/FeedMultiSelectActionHandler.java
Patch:
@@ -36,7 +36,7 @@ public FeedMultiSelectActionHandler(MainActivity activity, List<Feed> selectedIt
     }
 
     public void handleAction(int id) {
-        if (id == R.id.remove_item) {
+        if (id == R.id.remove_feed) {
             RemoveFeedDialog.show(activity, selectedItems);
         } else if (id == R.id.keep_updated) {
             keepUpdatedPrefHandler();

File: app/src/androidTest/java/de/test/antennapod/storage/AutoDownloadTest.java
Patch:
@@ -100,7 +100,6 @@ private void playEpisode(@NonNull FeedItem item) {
         new PlaybackServiceStarter(context, media)
                 .callEvenIfRunning(true)
                 .startWhenPrepared(true)
-                .shouldStream(true)
                 .start();
         Awaitility.await("episode is playing")
                 .atMost(2000, MILLISECONDS)

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistDescriptionAdapter.java
Patch:
@@ -80,7 +80,6 @@ public View getView(int position, @Nullable View convertView, @NonNull ViewGroup
             }
 
             new PlaybackServiceStarter(getContext(), playable)
-                    .shouldStream(true)
                     .startWhenPrepared(true)
                     .callEvenIfRunning(true)
                     .start();

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/PlayActionButton.java
Patch:
@@ -42,7 +42,6 @@ public void onClick(Context context) {
         new PlaybackServiceStarter(context, media)
                 .callEvenIfRunning(true)
                 .startWhenPrepared(true)
-                .shouldStream(false)
                 .start();
 
         if (media.getMediaType() == MediaType.VIDEO) {

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/PlayLocalActionButton.java
Patch:
@@ -38,7 +38,6 @@ public void onClick(Context context) {
         new PlaybackServiceStarter(context, media)
                 .callEvenIfRunning(true)
                 .startWhenPrepared(true)
-                .shouldStream(true)
                 .start();
 
         if (media.getMediaType() == MediaType.VIDEO) {

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/StreamActionButton.java
Patch:
@@ -48,7 +48,6 @@ public void onClick(Context context) {
         new PlaybackServiceStarter(context, media)
                 .callEvenIfRunning(true)
                 .startWhenPrepared(true)
-                .shouldStream(true)
                 .start();
 
         if (media.getMediaType() == MediaType.VIDEO) {

File: app/src/main/java/de/danoeh/antennapod/dialog/StreamingConfirmationDialog.java
Patch:
@@ -33,7 +33,6 @@ private void stream() {
         new PlaybackServiceStarter(context, playable)
                 .callEvenIfRunning(true)
                 .startWhenPrepared(true)
-                .shouldStream(true)
                 .shouldStreamThisTime(true)
                 .start();
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -868,7 +868,6 @@ public void onAudioFocusChange(final int focusChange) {
                     pausedBecauseOfTransientAudiofocusLoss = false;
                     new PlaybackServiceStarter(context, getPlayable())
                             .startWhenPrepared(true)
-                            .streamIfLastWasStream()
                             .callEvenIfRunning(false)
                             .start();
                 }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -331,7 +331,6 @@ public void playPause() {
         if (playbackService == null) {
             new PlaybackServiceStarter(activity, media)
                     .startWhenPrepared(true)
-                    .streamIfLastWasStream()
                     .start();
             Log.w(TAG, "Play/Pause button was pressed, but playbackservice was null!");
             return;
@@ -354,7 +353,6 @@ public void playPause() {
             default:
                 new PlaybackServiceStarter(activity, media)
                         .startWhenPrepared(true)
-                        .streamIfLastWasStream()
                         .callEvenIfRunning(true)
                         .start();
                 Log.w(TAG, "Play/Pause button was pressed and PlaybackService state was unknown");

File: core/src/main/java/de/danoeh/antennapod/core/widget/WidgetUpdaterJobService.java
Patch:
@@ -5,7 +5,6 @@
 import androidx.annotation.NonNull;
 import androidx.core.app.SafeJobIntentService;
 import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;
-import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.model.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlayableUtils;
 import de.danoeh.antennapod.playback.base.PlayerStatus;
@@ -26,8 +25,7 @@ protected void onHandleWork(@NonNull Intent intent) {
         Playable media = PlayableUtils.createInstanceFromPreferences(getApplicationContext());
         if (media != null) {
             WidgetUpdater.updateWidget(this, new WidgetUpdater.WidgetState(media, PlayerStatus.STOPPED,
-                    media.getPosition(), media.getDuration(), PlaybackSpeedUtils.getCurrentPlaybackSpeed(media),
-                    PlaybackPreferences.getCurrentEpisodeIsStream()));
+                    media.getPosition(), media.getDuration(), PlaybackSpeedUtils.getCurrentPlaybackSpeed(media)));
         } else {
             WidgetUpdater.updateWidget(this, new WidgetUpdater.WidgetState(PlayerStatus.STOPPED));
         }

File: parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/Rss20.java
Patch:
@@ -136,7 +136,7 @@ public void handleElementEnd(String localName, HandlerState state) {
                 if (CHANNEL.equals(second) && state.getFeed() != null) {
                     state.getFeed().setDescription(contentFromHtml);
                 } else if (ITEM.equals(second) && state.getCurrentItem() != null) {
-                    state.getCurrentItem().setDescriptionIfLonger(contentFromHtml);
+                    state.getCurrentItem().setDescriptionIfLonger(content); // fromHtml here breaks \n when not html
                 }
             } else if (LANGUAGE.equals(localName) && state.getFeed() != null) {
                 state.getFeed().setLanguage(content.toLowerCase(Locale.US));

File: parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/Rss20.java
Patch:
@@ -136,7 +136,7 @@ public void handleElementEnd(String localName, HandlerState state) {
                 if (CHANNEL.equals(second) && state.getFeed() != null) {
                     state.getFeed().setDescription(contentFromHtml);
                 } else if (ITEM.equals(second) && state.getCurrentItem() != null) {
-                    state.getCurrentItem().setDescriptionIfLonger(contentFromHtml);
+                    state.getCurrentItem().setDescriptionIfLonger(content); // fromHtml here breaks \n when not html
                 }
             } else if (LANGUAGE.equals(localName) && state.getFeed() != null) {
                 state.getFeed().setLanguage(content.toLowerCase(Locale.US));

File: parser/media/src/main/java/de/danoeh/antennapod/parser/media/id3/ChapterReader.java
Patch:
@@ -82,7 +82,7 @@ public void readChapterSubFrame(@NonNull FrameHeader frameHeader, @NonNull Chapt
                 break;
             case FRAME_ID_PICTURE:
                 byte encoding = readByte();
-                String mime = readEncodedString(encoding, frameHeader.getSize());
+                String mime = readIsoStringNullTerminated(frameHeader.getSize());
                 byte type = readByte();
                 String description = readEncodedString(encoding, frameHeader.getSize());
                 Log.d(TAG, "Found apic: " + mime + "," + description);

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackServiceStarter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.Intent;
+import android.os.Parcelable;
 import androidx.core.content.ContextCompat;
 
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
@@ -66,7 +67,7 @@ public PlaybackServiceStarter shouldStreamThisTime(boolean shouldStreamThisTime)
 
     public Intent getIntent() {
         Intent launchIntent = new Intent(context, PlaybackService.class);
-        launchIntent.putExtra(PlaybackService.EXTRA_PLAYABLE, media);
+        launchIntent.putExtra(PlaybackService.EXTRA_PLAYABLE, (Parcelable) media);
         launchIntent.putExtra(PlaybackService.EXTRA_START_WHEN_PREPARED, startWhenPrepared);
         launchIntent.putExtra(PlaybackService.EXTRA_SHOULD_STREAM, shouldStream);
         launchIntent.putExtra(PlaybackService.EXTRA_PREPARE_IMMEDIATELY, prepareImmediately);

File: model/src/main/java/de/danoeh/antennapod/model/playback/Playable.java
Patch:
@@ -7,13 +7,14 @@
 import androidx.annotation.Nullable;
 import de.danoeh.antennapod.model.feed.Chapter;
 
+import java.io.Serializable;
 import java.util.Date;
 import java.util.List;
 
 /**
  * Interface for objects that can be played by the PlaybackService.
  */
-public interface Playable extends Parcelable {
+public interface Playable extends Parcelable, Serializable {
     int INVALID_TIME = -1;
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackServiceStarter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.Intent;
+import android.os.Parcelable;
 import androidx.core.content.ContextCompat;
 
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
@@ -66,7 +67,7 @@ public PlaybackServiceStarter shouldStreamThisTime(boolean shouldStreamThisTime)
 
     public Intent getIntent() {
         Intent launchIntent = new Intent(context, PlaybackService.class);
-        launchIntent.putExtra(PlaybackService.EXTRA_PLAYABLE, media);
+        launchIntent.putExtra(PlaybackService.EXTRA_PLAYABLE, (Parcelable) media);
         launchIntent.putExtra(PlaybackService.EXTRA_START_WHEN_PREPARED, startWhenPrepared);
         launchIntent.putExtra(PlaybackService.EXTRA_SHOULD_STREAM, shouldStream);
         launchIntent.putExtra(PlaybackService.EXTRA_PREPARE_IMMEDIATELY, prepareImmediately);

File: model/src/main/java/de/danoeh/antennapod/model/playback/Playable.java
Patch:
@@ -7,13 +7,14 @@
 import androidx.annotation.Nullable;
 import de.danoeh.antennapod.model.feed.Chapter;
 
+import java.io.Serializable;
 import java.util.Date;
 import java.util.List;
 
 /**
  * Interface for objects that can be played by the PlaybackService.
  */
-public interface Playable extends Parcelable {
+public interface Playable extends Parcelable, Serializable {
     int INVALID_TIME = -1;
 
     /**

File: app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java
Patch:
@@ -73,6 +73,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         spTimeUnit = content.findViewById(R.id.spTimeUnit);
         timeSetup = content.findViewById(R.id.timeSetup);
         timeDisplay = content.findViewById(R.id.timeDisplay);
+        timeDisplay.setVisibility(View.GONE);
         time = content.findViewById(R.id.time);
         Button extendSleepFiveMinutesButton = content.findViewById(R.id.extendSleepFiveMinutesButton);
         extendSleepFiveMinutesButton.setText(getString(R.string.extend_sleep_timer_label, 5));

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -103,7 +103,8 @@ private static boolean isNetworkMetered() {
             NetworkCapabilities capabilities = connManager.getNetworkCapabilities(
                     connManager.getActiveNetwork());
 
-            if (capabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)
+            if (capabilities != null
+                    && capabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)
                     && capabilities.hasTransport(NetworkCapabilities.TRANSPORT_VPN)) {
                 return false;
             }

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -103,7 +103,8 @@ private static boolean isNetworkMetered() {
             NetworkCapabilities capabilities = connManager.getNetworkCapabilities(
                     connManager.getActiveNetwork());
 
-            if (capabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)
+            if (capabilities != null
+                    && capabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)
                     && capabilities.hasTransport(NetworkCapabilities.TRANSPORT_VPN)) {
                 return false;
             }

File: core/src/main/java/de/danoeh/antennapod/core/sync/GuidValidator.java
Patch:
@@ -4,7 +4,8 @@ public class GuidValidator {
 
     public static boolean isValidGuid(String guid) {
         return guid != null
-                && !guid.trim().isEmpty();
+                && !guid.trim().isEmpty()
+                && !guid.equals("null");
     }
 }
 

File: core/src/main/java/de/danoeh/antennapod/core/sync/GuidValidator.java
Patch:
@@ -4,7 +4,8 @@ public class GuidValidator {
 
     public static boolean isValidGuid(String guid) {
         return guid != null
-                && !guid.trim().isEmpty();
+                && !guid.trim().isEmpty()
+                && !guid.equals("null");
     }
 }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -299,11 +299,11 @@ public void onPlaybackEnd() {
     }
 
     private void updateUi(Playable media) {
-        if (controller == null) {
+        if (controller == null || media == null) {
             return;
         }
         duration = controller.getDuration();
-        updatePosition(new PlaybackPositionEvent(controller.getPosition(), duration));
+        updatePosition(new PlaybackPositionEvent(media.getPosition(), media.getDuration()));
         updatePlaybackSpeedButton(new SpeedChangedEvent(PlaybackSpeedUtils.getCurrentPlaybackSpeed(media)));
         setChapterDividers(media);
         setupOptionsMenu(media);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -387,7 +387,7 @@ public void onEventMainThread(DownloadEvent event) {
         long mediaId = item.getMedia().getId();
         if (ArrayUtils.contains(update.mediaIds, mediaId)) {
             if (itemsLoaded && getActivity() != null) {
-                updateAppearance();
+                updateButtons();
             }
         }
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -299,11 +299,11 @@ public void onPlaybackEnd() {
     }
 
     private void updateUi(Playable media) {
-        if (controller == null) {
+        if (controller == null || media == null) {
             return;
         }
         duration = controller.getDuration();
-        updatePosition(new PlaybackPositionEvent(controller.getPosition(), duration));
+        updatePosition(new PlaybackPositionEvent(media.getPosition(), media.getDuration()));
         updatePlaybackSpeedButton(new SpeedChangedEvent(PlaybackSpeedUtils.getCurrentPlaybackSpeed(media)));
         setChapterDividers(media);
         setupOptionsMenu(media);

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -333,8 +333,8 @@ public boolean onMenuItemClick(MenuItem item) {
             new RenameFeedDialog(getActivity(), feed).show();
             return true;
         } else if (itemId == R.id.remove_item) {
-            RemoveFeedDialog.show(getContext(), feed, () ->
-                    ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null));
+            ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
+            RemoveFeedDialog.show(getContext(), feed);
             return true;
         } else if (itemId == R.id.action_search) {
             ((MainActivity) getActivity()).loadChildFragment(SearchFragment.newInstance(feed.getId(), feed.getTitle()));

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -164,9 +164,8 @@ public void onConfirmButtonPressed(DialogInterface dialog) {
             new RenameFeedDialog(getActivity(), feed).show();
             return true;
         } else if (itemId == R.id.remove_item) {
-            RemoveFeedDialog.show(getContext(), feed, () -> {
-                ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
-            });
+            ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
+            RemoveFeedDialog.show(getContext(), feed);
             return true;
         }
         return super.onContextItemSelected(item);

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -351,7 +351,7 @@ public boolean onContextItemSelected(MenuItem item) {
             new RenameFeedDialog(getActivity(), feed).show();
             return true;
         } else if (itemId == R.id.remove_item) {
-            RemoveFeedDialog.show(getContext(), feed, null);
+            RemoveFeedDialog.show(getContext(), feed);
             return true;
         } else if (itemId == R.id.multi_select) {
             speedDialView.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/fragment/actions/FeedMultiSelectActionHandler.java
Patch:
@@ -35,7 +35,7 @@ public FeedMultiSelectActionHandler(MainActivity activity, List<Feed> selectedIt
 
     public void handleAction(int id) {
         if (id == R.id.remove_item) {
-            RemoveFeedDialog.show(activity, selectedItems, null);
+            RemoveFeedDialog.show(activity, selectedItems);
         } else if (id == R.id.keep_updated) {
             keepUpdatedPrefHandler();
         } else if (id == R.id.autodownload) {

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistDescriptionAdapter.java
Patch:
@@ -95,7 +95,7 @@ public View getView(int position, @Nullable View convertView, @NonNull ViewGroup
                 holder.preview.setVisibility(View.GONE);
                 holder.description.setTag(Boolean.FALSE);
             } else {
-                holder.description.setMaxLines(2000);
+                holder.description.setMaxLines(30);
                 holder.description.setTag(Boolean.TRUE);
 
                 holder.preview.setVisibility(item.getMedia() != null ? View.VISIBLE : View.GONE);

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistDescriptionAdapter.java
Patch:
@@ -95,7 +95,7 @@ public View getView(int position, @Nullable View convertView, @NonNull ViewGroup
                 holder.preview.setVisibility(View.GONE);
                 holder.description.setTag(Boolean.FALSE);
             } else {
-                holder.description.setMaxLines(2000);
+                holder.description.setMaxLines(30);
                 holder.description.setTag(Boolean.TRUE);
 
                 holder.preview.setVisibility(item.getMedia() != null ? View.VISIBLE : View.GONE);

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -333,8 +333,8 @@ public boolean onMenuItemClick(MenuItem item) {
             new RenameFeedDialog(getActivity(), feed).show();
             return true;
         } else if (itemId == R.id.remove_item) {
-            RemoveFeedDialog.show(getContext(), feed, () ->
-                    ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null));
+            ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
+            RemoveFeedDialog.show(getContext(), feed);
             return true;
         } else if (itemId == R.id.action_search) {
             ((MainActivity) getActivity()).loadChildFragment(SearchFragment.newInstance(feed.getId(), feed.getTitle()));

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -164,9 +164,8 @@ public void onConfirmButtonPressed(DialogInterface dialog) {
             new RenameFeedDialog(getActivity(), feed).show();
             return true;
         } else if (itemId == R.id.remove_item) {
-            RemoveFeedDialog.show(getContext(), feed, () -> {
-                ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
-            });
+            ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
+            RemoveFeedDialog.show(getContext(), feed);
             return true;
         }
         return super.onContextItemSelected(item);

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -351,7 +351,7 @@ public boolean onContextItemSelected(MenuItem item) {
             new RenameFeedDialog(getActivity(), feed).show();
             return true;
         } else if (itemId == R.id.remove_item) {
-            RemoveFeedDialog.show(getContext(), feed, null);
+            RemoveFeedDialog.show(getContext(), feed);
             return true;
         } else if (itemId == R.id.multi_select) {
             speedDialView.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/fragment/actions/FeedMultiSelectActionHandler.java
Patch:
@@ -35,7 +35,7 @@ public FeedMultiSelectActionHandler(MainActivity activity, List<Feed> selectedIt
 
     public void handleAction(int id) {
         if (id == R.id.remove_item) {
-            RemoveFeedDialog.show(activity, selectedItems, null);
+            RemoveFeedDialog.show(activity, selectedItems);
         } else if (id == R.id.keep_updated) {
             keepUpdatedPrefHandler();
         } else if (id == R.id.autodownload) {

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceTaskManagerTest.java
Patch:
@@ -146,7 +146,7 @@ public void testQueueUpdatedUponDownloadComplete() throws Exception {
             FeedItem item = DBReader.getFeedItem(testItem.getId());
             item.getMedia().setDownloaded(true);
             item.getMedia().setFile_url("file://123");
-            item.setAutoDownload(false);
+            item.disableAutoDownload();
             DBWriter.setFeedMedia(item.getMedia()).get();
             DBWriter.setFeedItem(item).get();
 

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java
Patch:
@@ -34,7 +34,7 @@ public void onClick(Context context) {
         FeedMedia media = item.getMedia();
         DownloadRequester.getInstance().cancelDownload(context, media);
         if (UserPreferences.isEnableAutodownload()) {
-            item.setAutoDownload(false);
+            item.disableAutoDownload();
             DBWriter.setFeedItem(item);
         }
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -113,7 +113,7 @@ public void onListItemClick(@NonNull ListView l, @NonNull View v, int position,
             if (downloadRequest.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
                 FeedMedia media = DBReader.getFeedMedia(downloadRequest.getFeedfileId());
                 FeedItem feedItem = media.getItem();
-                feedItem.setAutoDownload(false);
+                feedItem.disableAutoDownload();
                 DBWriter.setFeedItem(feedItem);
             }
         } else if (item instanceof DownloadStatus) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java
Patch:
@@ -178,7 +178,7 @@ private static FeedItem feedContainsFile(Feed feed, String filename) {
     private static FeedItem createFeedItem(Feed feed, DocumentFile file, Context context) {
         FeedItem item = new FeedItem(0, file.getName(), UUID.randomUUID().toString(),
                 file.getName(), new Date(file.lastModified()), FeedItem.UNPLAYED, feed);
-        item.setAutoDownload(false);
+        item.disableAutoDownload();
 
         long size = file.length();
         FeedMedia media = new FeedMedia(0, item, 0, 0, size, file.getType(),

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java
Patch:
@@ -83,7 +83,7 @@ public void run() {
 
             // we've received the media, we don't want to autodownload it again
             if (item != null) {
-                item.setAutoDownload(false);
+                item.disableAutoDownload();
                 // setFeedItem() signals (via EventBus) that the item has been updated,
                 // so we do it after the enclosing media has been updated above,
                 // to ensure subscribers will get the updated FeedMedia as well

File: core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java
Patch:
@@ -65,7 +65,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {
                 Iterator<FeedItem> it = candidates.iterator();
                 while (it.hasNext()) {
                     FeedItem item = it.next();
-                    if (!item.isAutoDownloadable() || FeedItemUtil.isPlaying(item.getMedia())
+                    if (!item.isAutoDownloadable(System.currentTimeMillis()) || FeedItemUtil.isPlaying(item.getMedia())
                             || item.getFeed().isLocalFeed()) {
                         it.remove();
                     }

File: core/src/main/java/de/danoeh/antennapod/core/storage/mapper/FeedItemCursorMapper.java
Patch:
@@ -25,7 +25,7 @@ public static FeedItem convert(@NonNull Cursor cursor) {
         int indexHasChapters = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_HAS_CHAPTERS);
         int indexRead = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_READ);
         int indexItemIdentifier = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_ITEM_IDENTIFIER);
-        int indexAutoDownload = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_AUTO_DOWNLOAD);
+        int indexAutoDownload = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_AUTO_DOWNLOAD_ATTEMPTS);
         int indexImageUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_IMAGE_URL);
 
         long id = cursor.getInt(indexId);

File: core/src/main/java/de/danoeh/antennapod/core/storage/mapper/FeedPreferencesCursorMapper.java
Patch:
@@ -21,7 +21,7 @@ public abstract class FeedPreferencesCursorMapper {
     @NonNull
     public static FeedPreferences convert(@NonNull Cursor cursor) {
         int indexId = cursor.getColumnIndex(PodDBAdapter.KEY_ID);
-        int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD);
+        int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD_ENABLED);
         int indexAutoRefresh = cursor.getColumnIndex(PodDBAdapter.KEY_KEEP_UPDATED);
         int indexAutoDeleteAction = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DELETE_ACTION);
         int indexVolumeAdaption = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_VOLUME_ADAPTION);

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceTaskManagerTest.java
Patch:
@@ -146,7 +146,7 @@ public void testQueueUpdatedUponDownloadComplete() throws Exception {
             FeedItem item = DBReader.getFeedItem(testItem.getId());
             item.getMedia().setDownloaded(true);
             item.getMedia().setFile_url("file://123");
-            item.setAutoDownload(false);
+            item.disableAutoDownload();
             DBWriter.setFeedMedia(item.getMedia()).get();
             DBWriter.setFeedItem(item).get();
 

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java
Patch:
@@ -34,7 +34,7 @@ public void onClick(Context context) {
         FeedMedia media = item.getMedia();
         DownloadRequester.getInstance().cancelDownload(context, media);
         if (UserPreferences.isEnableAutodownload()) {
-            item.setAutoDownload(false);
+            item.disableAutoDownload();
             DBWriter.setFeedItem(item);
         }
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -113,7 +113,7 @@ public void onListItemClick(@NonNull ListView l, @NonNull View v, int position,
             if (downloadRequest.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
                 FeedMedia media = DBReader.getFeedMedia(downloadRequest.getFeedfileId());
                 FeedItem feedItem = media.getItem();
-                feedItem.setAutoDownload(false);
+                feedItem.disableAutoDownload();
                 DBWriter.setFeedItem(feedItem);
             }
         } else if (item instanceof DownloadStatus) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java
Patch:
@@ -178,7 +178,7 @@ private static FeedItem feedContainsFile(Feed feed, String filename) {
     private static FeedItem createFeedItem(Feed feed, DocumentFile file, Context context) {
         FeedItem item = new FeedItem(0, file.getName(), UUID.randomUUID().toString(),
                 file.getName(), new Date(file.lastModified()), FeedItem.UNPLAYED, feed);
-        item.setAutoDownload(false);
+        item.disableAutoDownload();
 
         long size = file.length();
         FeedMedia media = new FeedMedia(0, item, 0, 0, size, file.getType(),

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java
Patch:
@@ -83,7 +83,7 @@ public void run() {
 
             // we've received the media, we don't want to autodownload it again
             if (item != null) {
-                item.setAutoDownload(false);
+                item.disableAutoDownload();
                 // setFeedItem() signals (via EventBus) that the item has been updated,
                 // so we do it after the enclosing media has been updated above,
                 // to ensure subscribers will get the updated FeedMedia as well

File: core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java
Patch:
@@ -65,7 +65,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {
                 Iterator<FeedItem> it = candidates.iterator();
                 while (it.hasNext()) {
                     FeedItem item = it.next();
-                    if (!item.isAutoDownloadable() || FeedItemUtil.isPlaying(item.getMedia())
+                    if (!item.isAutoDownloadable(System.currentTimeMillis()) || FeedItemUtil.isPlaying(item.getMedia())
                             || item.getFeed().isLocalFeed()) {
                         it.remove();
                     }

File: core/src/main/java/de/danoeh/antennapod/core/storage/mapper/FeedItemCursorMapper.java
Patch:
@@ -25,7 +25,7 @@ public static FeedItem convert(@NonNull Cursor cursor) {
         int indexHasChapters = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_HAS_CHAPTERS);
         int indexRead = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_READ);
         int indexItemIdentifier = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_ITEM_IDENTIFIER);
-        int indexAutoDownload = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_AUTO_DOWNLOAD);
+        int indexAutoDownload = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_AUTO_DOWNLOAD_ATTEMPTS);
         int indexImageUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_IMAGE_URL);
 
         long id = cursor.getInt(indexId);

File: core/src/main/java/de/danoeh/antennapod/core/storage/mapper/FeedPreferencesCursorMapper.java
Patch:
@@ -21,7 +21,7 @@ public abstract class FeedPreferencesCursorMapper {
     @NonNull
     public static FeedPreferences convert(@NonNull Cursor cursor) {
         int indexId = cursor.getColumnIndex(PodDBAdapter.KEY_ID);
-        int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD);
+        int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD_ENABLED);
         int indexAutoRefresh = cursor.getColumnIndex(PodDBAdapter.KEY_KEEP_UPDATED);
         int indexAutoDeleteAction = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DELETE_ACTION);
         int indexVolumeAdaption = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_VOLUME_ADAPTION);

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -85,7 +85,7 @@ private UserPreferences(){}
     private static final String PREF_AUTO_DELETE = "prefAutoDelete";
     public static final String PREF_SMART_MARK_AS_PLAYED_SECS = "prefSmartMarkAsPlayedSecs";
     private static final String PREF_PLAYBACK_SPEED_ARRAY = "prefPlaybackSpeedArray";
-    private static final String PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS = "prefPauseForFocusLoss";
+    public static final String PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS = "prefPauseForFocusLoss";
     private static final String PREF_RESUME_AFTER_CALL = "prefResumeAfterCall";
     public static final String PREF_VIDEO_BEHAVIOR = "prefVideoBehavior";
     private static final String PREF_TIME_RESPECTS_SPEED = "prefPlaybackTimeRespectsSpeed";
@@ -467,7 +467,7 @@ public static List<Float> getPlaybackSpeedArray() {
     }
 
     public static boolean shouldPauseForFocusLoss() {
-        return prefs.getBoolean(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS, false);
+        return prefs.getBoolean(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS, true);
     }
 
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -85,7 +85,7 @@ private UserPreferences(){}
     private static final String PREF_AUTO_DELETE = "prefAutoDelete";
     public static final String PREF_SMART_MARK_AS_PLAYED_SECS = "prefSmartMarkAsPlayedSecs";
     private static final String PREF_PLAYBACK_SPEED_ARRAY = "prefPlaybackSpeedArray";
-    private static final String PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS = "prefPauseForFocusLoss";
+    public static final String PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS = "prefPauseForFocusLoss";
     private static final String PREF_RESUME_AFTER_CALL = "prefResumeAfterCall";
     public static final String PREF_VIDEO_BEHAVIOR = "prefVideoBehavior";
     private static final String PREF_TIME_RESPECTS_SPEED = "prefPlaybackTimeRespectsSpeed";
@@ -467,7 +467,7 @@ public static List<Float> getPlaybackSpeedArray() {
     }
 
     public static boolean shouldPauseForFocusLoss() {
-        return prefs.getBoolean(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS, false);
+        return prefs.getBoolean(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS, true);
     }
 
 

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideModule.java
Patch:
@@ -11,7 +11,6 @@
 import com.bumptech.glide.annotation.GlideModule;
 import com.bumptech.glide.load.DecodeFormat;
 import com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory;
-import com.bumptech.glide.load.model.StringLoader;
 import com.bumptech.glide.module.AppGlideModule;
 
 import de.danoeh.antennapod.model.feed.EmbeddedChapterImage;
@@ -43,7 +42,7 @@ public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder
     public void registerComponents(@NonNull Context context, @NonNull Glide glide, @NonNull Registry registry) {
         registry.replace(String.class, InputStream.class, new MetadataRetrieverLoader.Factory(context));
         registry.append(String.class, InputStream.class, new ApOkHttpUrlLoader.Factory());
-        registry.append(String.class, InputStream.class, new StringLoader.StreamFactory());
+        registry.append(String.class, InputStream.class, new NoHttpStringLoader.StreamFactory());
 
         registry.append(EmbeddedChapterImage.class, ByteBuffer.class, new ChapterImageModelLoader.Factory());
     }

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideModule.java
Patch:
@@ -11,7 +11,6 @@
 import com.bumptech.glide.annotation.GlideModule;
 import com.bumptech.glide.load.DecodeFormat;
 import com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory;
-import com.bumptech.glide.load.model.StringLoader;
 import com.bumptech.glide.module.AppGlideModule;
 
 import de.danoeh.antennapod.model.feed.EmbeddedChapterImage;
@@ -43,7 +42,7 @@ public void applyOptions(@NonNull Context context, @NonNull GlideBuilder builder
     public void registerComponents(@NonNull Context context, @NonNull Glide glide, @NonNull Registry registry) {
         registry.replace(String.class, InputStream.class, new MetadataRetrieverLoader.Factory(context));
         registry.append(String.class, InputStream.class, new ApOkHttpUrlLoader.Factory());
-        registry.append(String.class, InputStream.class, new StringLoader.StreamFactory());
+        registry.append(String.class, InputStream.class, new NoHttpStringLoader.StreamFactory());
 
         registry.append(EmbeddedChapterImage.class, ByteBuffer.class, new ChapterImageModelLoader.Factory());
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -101,7 +101,7 @@ final void loadData() {
                         }, error -> {
                             gridView.setVisibility(View.GONE);
                             progressBar.setVisibility(View.GONE);
-                            txtvError.setText(getString(R.string.error_msg_prefix) + error.getMessage());
+                            txtvError.setText(error.getMessage());
                             txtvError.setVisibility(View.VISIBLE);
                             butRetry.setVisibility(View.VISIBLE);
                             Log.e(TAG, Log.getStackTraceString(error));

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -101,7 +101,7 @@ final void loadData() {
                         }, error -> {
                             gridView.setVisibility(View.GONE);
                             progressBar.setVisibility(View.GONE);
-                            txtvError.setText(getString(R.string.error_msg_prefix) + error.getMessage());
+                            txtvError.setText(error.getMessage());
                             txtvError.setVisibility(View.VISIBLE);
                             butRetry.setVisibility(View.VISIBLE);
                             Log.e(TAG, Log.getStackTraceString(error));

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -356,8 +356,6 @@ public interface PSMPCallback {
 
         boolean onMediaPlayerInfo(int code, @StringRes int resourceId);
 
-        boolean onMediaPlayerError(Object inObj, int what, int extra);
-
         void onPostPlayback(@NonNull Playable media, boolean ended, boolean skipped, boolean playingNext);
 
         void onPlaybackStart(@NonNull Playable playable, int position);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -356,8 +356,6 @@ public interface PSMPCallback {
 
         boolean onMediaPlayerInfo(int code, @StringRes int resourceId);
 
-        boolean onMediaPlayerError(Object inObj, int what, int extra);
-
         void onPostPlayback(@NonNull Playable media, boolean ended, boolean skipped, boolean playingNext);
 
         void onPlaybackStart(@NonNull Playable playable, int position);

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -126,8 +126,9 @@ public void testSetLockscreenButtons() {
         clickPreference(R.string.user_interface_label);
         String[] buttons = res.getStringArray(R.array.compact_notification_buttons_options);
         clickPreference(R.string.pref_compact_notification_buttons_title);
-        // First uncheck checkbox
-        onView(withText(buttons[2])).perform(click());
+        // First uncheck checkboxes
+        onView(withText(buttons[0])).perform(click());
+        onView(withText(buttons[1])).perform(click());
 
         // Now try to check all checkboxes
         onView(withText(buttons[0])).perform(click());

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -207,7 +207,7 @@ public static List<String> getHiddenDrawerItems() {
     public static List<Integer> getCompactNotificationButtons() {
         String[] buttons = TextUtils.split(
                 prefs.getString(PREF_COMPACT_NOTIFICATION_BUTTONS,
-                        String.valueOf(NOTIFICATION_BUTTON_SKIP)),
+                        NOTIFICATION_BUTTON_REWIND + "," + NOTIFICATION_BUTTON_FAST_FORWARD),
                 ",");
         List<Integer> notificationButtons = new ArrayList<>();
         for (String button : buttons) {

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -126,8 +126,9 @@ public void testSetLockscreenButtons() {
         clickPreference(R.string.user_interface_label);
         String[] buttons = res.getStringArray(R.array.compact_notification_buttons_options);
         clickPreference(R.string.pref_compact_notification_buttons_title);
-        // First uncheck checkbox
-        onView(withText(buttons[2])).perform(click());
+        // First uncheck checkboxes
+        onView(withText(buttons[0])).perform(click());
+        onView(withText(buttons[1])).perform(click());
 
         // Now try to check all checkboxes
         onView(withText(buttons[0])).perform(click());

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -207,7 +207,7 @@ public static List<String> getHiddenDrawerItems() {
     public static List<Integer> getCompactNotificationButtons() {
         String[] buttons = TextUtils.split(
                 prefs.getString(PREF_COMPACT_NOTIFICATION_BUTTONS,
-                        String.valueOf(NOTIFICATION_BUTTON_SKIP)),
+                        NOTIFICATION_BUTTON_REWIND + "," + NOTIFICATION_BUTTON_FAST_FORWARD),
                 ",");
         List<Integer> notificationButtons = new ArrayList<>();
         for (String button : buttons) {

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -244,8 +244,8 @@ public void testAutoDelete() {
     public void testPlaybackSpeeds() {
         clickPreference(R.string.playback_pref);
         clickPreference(R.string.playback_speed);
-        onView(isRoot()).perform(waitForView(withText("0.75"), 1000));
-        onView(withText("0.75")).check(matches(isDisplayed()));
+        onView(isRoot()).perform(waitForView(withText("1.25"), 1000));
+        onView(withText("1.25")).check(matches(isDisplayed()));
     }
 
     @Test

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -812,7 +812,7 @@ private static List<Float> readPlaybackSpeedArray(String valueFromPrefs) {
             }
         }
         // If this preference hasn't been set yet, return the default options
-        return Arrays.asList(0.75f, 1.0f, 1.25f, 1.5f, 1.75f, 2.0f);
+        return Arrays.asList(1.0f, 1.25f, 1.5f);
     }
 
     public static String getMediaPlayer() {

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -244,8 +244,8 @@ public void testAutoDelete() {
     public void testPlaybackSpeeds() {
         clickPreference(R.string.playback_pref);
         clickPreference(R.string.playback_speed);
-        onView(isRoot()).perform(waitForView(withText("0.75"), 1000));
-        onView(withText("0.75")).check(matches(isDisplayed()));
+        onView(isRoot()).perform(waitForView(withText("1.25"), 1000));
+        onView(withText("1.25")).check(matches(isDisplayed()));
     }
 
     @Test

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -812,7 +812,7 @@ private static List<Float> readPlaybackSpeedArray(String valueFromPrefs) {
             }
         }
         // If this preference hasn't been set yet, return the default options
-        return Arrays.asList(0.75f, 1.0f, 1.25f, 1.5f, 1.75f, 2.0f);
+        return Arrays.asList(1.0f, 1.25f, 1.5f);
     }
 
     public static String getMediaPlayer() {

File: core/src/main/java/de/danoeh/antennapod/core/sync/EpisodeActionFilter.java
Patch:
@@ -22,7 +22,6 @@ public static Map<Pair<String, String>, EpisodeAction> getRemoteActionsOverridin
         Map<Pair<String, String>, EpisodeAction> localMostRecentPlayActions =
                 createUniqueLocalMostRecentPlayActions(queuedEpisodeActions);
         for (EpisodeAction remoteAction : remoteActions) {
-            Log.d(TAG, "Processing remoteAction: " + remoteAction.toString());
             Pair<String, String> key = new Pair<>(remoteAction.getPodcast(), remoteAction.getEpisode());
             switch (remoteAction.getAction()) {
                 case NEW:

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -84,6 +84,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         progressBar = root.findViewById(R.id.progLoading);
 
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.episodes_apply_action_speeddial);
         speedDialView.removeActionItemById(R.id.download_batch);
         speedDialView.removeActionItemById(R.id.mark_read_batch);

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -238,6 +238,7 @@ public void onScrolled(@NonNull RecyclerView view, int deltaX, int deltaY) {
 
         // Init action UI (via a FAB Speed Dial)
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.episodes_apply_action_speeddial);
         speedDialView.setOnChangeListener(new SpeedDialView.OnChangeListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -465,6 +465,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         progLoading.setVisibility(View.VISIBLE);
 
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.episodes_apply_action_speeddial);
         speedDialView.removeActionItemById(R.id.mark_read_batch);
         speedDialView.removeActionItemById(R.id.mark_unread_batch);

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -167,6 +167,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         });
 
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.nav_feed_action_speeddial);
         speedDialView.setOnChangeListener(new SpeedDialView.OnChangeListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -84,6 +84,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         progressBar = root.findViewById(R.id.progLoading);
 
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.episodes_apply_action_speeddial);
         speedDialView.removeActionItemById(R.id.download_batch);
         speedDialView.removeActionItemById(R.id.mark_read_batch);

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -238,6 +238,7 @@ public void onScrolled(@NonNull RecyclerView view, int deltaX, int deltaY) {
 
         // Init action UI (via a FAB Speed Dial)
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.episodes_apply_action_speeddial);
         speedDialView.setOnChangeListener(new SpeedDialView.OnChangeListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -465,6 +465,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         progLoading.setVisibility(View.VISIBLE);
 
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.episodes_apply_action_speeddial);
         speedDialView.removeActionItemById(R.id.mark_read_batch);
         speedDialView.removeActionItemById(R.id.mark_unread_batch);

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -167,6 +167,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         });
 
         speedDialView = root.findViewById(R.id.fabSD);
+        speedDialView.setOverlayLayout(root.findViewById(R.id.fabSDOverlay));
         speedDialView.inflate(R.menu.nav_feed_action_speeddial);
         speedDialView.setOnChangeListener(new SpeedDialView.OnChangeListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/dialog/RemoveFeedDialog.java
Patch:
@@ -69,7 +69,7 @@ public void onConfirmButtonPressed(DialogInterface clickedDialog) {
     private static String getMessageId(Context context, List<Feed> feeds) {
         if (feeds.size() == 1) {
             if (feeds.get(0).isLocalFeed()) {
-                return context.getString(R.string.feed_delete_confirmation_local_msg);
+                return context.getString(R.string.feed_delete_confirmation_local_msg, feeds.get(0).getTitle());
             } else {
                 return context.getString(R.string.feed_delete_confirmation_msg, feeds.get(0).getTitle());
             }

File: app/src/main/java/de/danoeh/antennapod/dialog/RemoveFeedDialog.java
Patch:
@@ -69,7 +69,7 @@ public void onConfirmButtonPressed(DialogInterface clickedDialog) {
     private static String getMessageId(Context context, List<Feed> feeds) {
         if (feeds.size() == 1) {
             if (feeds.get(0).isLocalFeed()) {
-                return context.getString(R.string.feed_delete_confirmation_local_msg);
+                return context.getString(R.string.feed_delete_confirmation_local_msg, feeds.get(0).getTitle());
             } else {
                 return context.getString(R.string.feed_delete_confirmation_msg, feeds.get(0).getTitle());
             }

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsRecyclerAdapter.java
Patch:
@@ -133,6 +133,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
             MenuInflater inflater = mainActivityRef.get().getMenuInflater();
             inflater.inflate(R.menu.nav_feed_context, menu);
             menu.setHeaderTitle(selectedFeed.getTitle());
+            menu.findItem(R.id.multi_select).setVisible(true);
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -27,7 +27,8 @@ public enum DownloadError {
     ERROR_IO_BLOCKED(18, R.string.download_error_blocked),
     ERROR_UNSUPPORTED_TYPE_HTML(19, R.string.download_error_unsupported_type_html),
     ERROR_NOT_FOUND(20, R.string.download_error_not_found),
-    ERROR_CERTIFICATE(21, R.string.download_error_certificate);
+    ERROR_CERTIFICATE(21, R.string.download_error_certificate),
+    ERROR_PARSER_EXCEPTION_DUPLICATE(22, R.string.download_error_parser_exception);
 
     private final int code;
     private final int resId;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportActivity.java
Patch:
@@ -205,6 +205,7 @@ private void requestPermission() {
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
                                            @NonNull int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
         if (requestCode != PERMISSION_REQUEST_READ_EXTERNAL_STORAGE) {
             return;
         }

File: app/src/main/java/de/danoeh/antennapod/dialog/SwipeActionsDialog.java
Patch:
@@ -135,6 +135,7 @@ private void showPicker(SwipeactionsRowBinding view, int direction) {
             item.swipeActionLabel.setText(action.getTitle(context));
 
             Drawable icon = DrawableCompat.wrap(AppCompatResources.getDrawable(context, action.getActionIcon()));
+            icon.mutate();
             DrawableCompat.setTintMode(icon, PorterDuff.Mode.SRC_ATOP);
             if ((direction == LEFT && leftAction == action) || (direction == RIGHT && rightAction == action)) {
                 DrawableCompat.setTint(icon, ThemeUtils.getColorFromAttr(context, action.getActionColor()));

File: app/src/main/java/de/danoeh/antennapod/dialog/SwipeActionsDialog.java
Patch:
@@ -135,6 +135,7 @@ private void showPicker(SwipeactionsRowBinding view, int direction) {
             item.swipeActionLabel.setText(action.getTitle(context));
 
             Drawable icon = DrawableCompat.wrap(AppCompatResources.getDrawable(context, action.getActionIcon()));
+            icon.mutate();
             DrawableCompat.setTintMode(icon, PorterDuff.Mode.SRC_ATOP);
             if ((direction == LEFT && leftAction == action) || (direction == RIGHT && rightAction == action)) {
                 DrawableCompat.setTint(icon, ThemeUtils.getColorFromAttr(context, action.getActionColor()));

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1291,8 +1291,8 @@ private static boolean useSkipToPreviousForRewindInLockscreen() {
     }
 
     private void updateNotificationAndMediaSession(final Playable p) {
-        updateMediaSessionMetadata(p);
         setupNotification(p);
+        updateMediaSessionMetadata(p);
     }
 
     private void updateMediaSessionMetadata(final Playable p) {

File: app/src/main/java/de/danoeh/antennapod/dialog/AuthenticationDialog.java
Patch:
@@ -40,8 +40,7 @@ public AuthenticationDialog(Context context, int titleRes, boolean enableUsernam
         });
 
         setOnCancelListener(dialog -> onCancelled());
-        setOnDismissListener(dialog -> onCancelled());
-        setNegativeButton(R.string.cancel_label, null);
+        setNegativeButton(R.string.cancel_label, (dialog, which) -> onCancelled());
         setPositiveButton(R.string.confirm_label, (dialog, which)
                 -> onConfirmed(viewBinding.usernameEditText.getText().toString(),
                         viewBinding.passwordEditText.getText().toString()));

File: app/src/main/java/de/danoeh/antennapod/dialog/AuthenticationDialog.java
Patch:
@@ -40,8 +40,7 @@ public AuthenticationDialog(Context context, int titleRes, boolean enableUsernam
         });
 
         setOnCancelListener(dialog -> onCancelled());
-        setOnDismissListener(dialog -> onCancelled());
-        setNegativeButton(R.string.cancel_label, null);
+        setNegativeButton(R.string.cancel_label, (dialog, which) -> onCancelled());
         setPositiveButton(R.string.confirm_label, (dialog, which)
                 -> onConfirmed(viewBinding.usernameEditText.getText().toString(),
                         viewBinding.passwordEditText.getText().toString()));

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/NSAtom.java
Patch:
@@ -81,7 +81,7 @@ public SyndElement handleElementStart(String localName, HandlerState state,
             String rel = attributes.getValue(LINK_REL);
             SyndElement parent = state.getTagstack().peek();
             if (parent.getName().matches(isFeedItem)) {
-                if (LINK_REL_ALTERNATE.equals(rel)) {
+                if (rel == null || LINK_REL_ALTERNATE.equals(rel)) {
                     state.getCurrentItem().setLink(href);
                 } else if (LINK_REL_ENCLOSURE.equals(rel)) {
                     String strSize = attributes.getValue(LINK_LENGTH);
@@ -107,7 +107,7 @@ public SyndElement handleElementStart(String localName, HandlerState state,
                     state.getCurrentItem().setPaymentLink(href);
                 }
             } else if (parent.getName().matches(isFeed)) {
-                if (LINK_REL_ALTERNATE.equals(rel)) {
+                if (rel == null || LINK_REL_ALTERNATE.equals(rel)) {
                     String type = attributes.getValue(LINK_TYPE);
                     /*
                      * Use as link if a) no type-attribute is given and

File: app/src/main/java/de/danoeh/antennapod/dialog/AuthenticationDialog.java
Patch:
@@ -40,8 +40,7 @@ public AuthenticationDialog(Context context, int titleRes, boolean enableUsernam
         });
 
         setOnCancelListener(dialog -> onCancelled());
-        setOnDismissListener(dialog -> onCancelled());
-        setNegativeButton(R.string.cancel_label, null);
+        setNegativeButton(R.string.cancel_label, (dialog, which) -> onCancelled());
         setPositiveButton(R.string.confirm_label, (dialog, which)
                 -> onConfirmed(viewBinding.usernameEditText.getText().toString(),
                         viewBinding.passwordEditText.getText().toString()));

File: core/src/main/java/de/danoeh/antennapod/core/glide/ResizingOkHttpStreamFetcher.java
Patch:
@@ -17,7 +17,6 @@
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
-import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 
@@ -103,7 +102,7 @@ public void onDataReady(@Nullable InputStream data) {
                     callback.onDataReady(stream);
                     Log.d(TAG, "Compressed image from " + tempIn.length() / 1024
                             + " to " + tempOut.length() / 1024 + " kB (quality: " + quality + "%)");
-                } catch (IOException e) {
+                } catch (Exception e) {
                     e.printStackTrace();
 
                     try {

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -20,7 +20,7 @@
 /**
  * Test class for GpodnetService
  */
-@Ignore
+@Ignore("Needs valid credentials to run")
 @RunWith(AndroidJUnit4.class)
 public class GPodnetServiceTest {
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -77,6 +77,9 @@ public static OkHttpClient.Builder newBuilder() {
             if (response.code() == HttpURLConnection.HTTP_MOVED_PERM
                     || response.code() == StatusLine.HTTP_PERM_REDIRECT) {
                 String location = response.header("Location");
+                if (location == null) {
+                    return response;
+                }
                 if (location.startsWith("/")) { // URL is not absolute, but relative
                     HttpUrl url = request.url();
                     location = url.scheme() + "://" + url.host() + location;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -77,6 +77,9 @@ public static OkHttpClient.Builder newBuilder() {
             if (response.code() == HttpURLConnection.HTTP_MOVED_PERM
                     || response.code() == StatusLine.HTTP_PERM_REDIRECT) {
                 String location = response.header("Location");
+                if (location == null) {
+                    return response;
+                }
                 if (location.startsWith("/")) { // URL is not absolute, but relative
                     HttpUrl url = request.url();
                     location = url.scheme() + "://" + url.host() + location;

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -500,7 +500,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     private void onFragmentLoaded(final boolean restoreScrollPosition) {
-        if (queue != null && queue.size() > 0) {
+        if (queue != null) {
             if (recyclerAdapter == null) {
                 MainActivity activity = (MainActivity) getActivity();
                 recyclerAdapter = new QueueRecyclerAdapter(activity, swipeActions);

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -500,7 +500,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
     }
 
     private void onFragmentLoaded(final boolean restoreScrollPosition) {
-        if (queue != null && queue.size() > 0) {
+        if (queue != null) {
             if (recyclerAdapter == null) {
                 MainActivity activity = (MainActivity) getActivity();
                 recyclerAdapter = new QueueRecyclerAdapter(activity, swipeActions);

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/SwipeActions.java
Patch:
@@ -31,8 +31,8 @@
 
 public class SwipeActions extends ItemTouchHelper.SimpleCallback implements LifecycleObserver {
     public static final String PREF_NAME = "SwipeActionsPrefs";
-    public static final String KEY_PREFIX_SWIPEACTIONS = "PrefSwipeActions6543";
-    public static final String KEY_PREFIX_NO_ACTION = "PrefNoSwipeAction6543";
+    public static final String KEY_PREFIX_SWIPEACTIONS = "PrefSwipeActions";
+    public static final String KEY_PREFIX_NO_ACTION = "PrefNoSwipeAction";
 
     public static final List<SwipeAction> swipeActions = Collections.unmodifiableList(
             Arrays.asList(new AddToQueueSwipeAction(), new RemoveFromInboxSwipeAction(),

File: app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/SwipeActions.java
Patch:
@@ -31,8 +31,8 @@
 
 public class SwipeActions extends ItemTouchHelper.SimpleCallback implements LifecycleObserver {
     public static final String PREF_NAME = "SwipeActionsPrefs";
-    public static final String KEY_PREFIX_SWIPEACTIONS = "PrefSwipeActions6543";
-    public static final String KEY_PREFIX_NO_ACTION = "PrefNoSwipeAction6543";
+    public static final String KEY_PREFIX_SWIPEACTIONS = "PrefSwipeActions";
+    public static final String KEY_PREFIX_NO_ACTION = "PrefNoSwipeAction";
 
     public static final List<SwipeAction> swipeActions = Collections.unmodifiableList(
             Arrays.asList(new AddToQueueSwipeAction(), new RemoveFromInboxSwipeAction(),

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Context;
 import androidx.annotation.DrawableRes;
 import androidx.annotation.StringRes;
-import android.widget.Toast;
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.model.feed.FeedItem;
@@ -35,8 +34,8 @@ public void onClick(Context context) {
         FeedMedia media = item.getMedia();
         DownloadRequester.getInstance().cancelDownload(context, media);
         if (UserPreferences.isEnableAutodownload()) {
-            DBWriter.setFeedItemAutoDownload(media.getItem(), false);
-            Toast.makeText(context, R.string.download_canceled_autodownload_enabled_msg, Toast.LENGTH_LONG).show();
+            item.setAutoDownload(false);
+            DBWriter.setFeedItem(item);
         }
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java
Patch:
@@ -7,7 +7,6 @@
 import java.util.Iterator;
 import java.util.List;
 
-import de.danoeh.antennapod.model.feed.FeedFilter;
 import de.danoeh.antennapod.model.feed.FeedItem;
 import de.danoeh.antennapod.model.feed.FeedPreferences;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
@@ -55,8 +54,9 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {
                 candidates.addAll(queue);
                 for (FeedItem newItem : newItems) {
                     FeedPreferences feedPrefs = newItem.getFeed().getPreferences();
-                    FeedFilter feedFilter = feedPrefs.getFilter();
-                    if (!candidates.contains(newItem) && feedFilter.shouldAutoDownload(newItem)) {
+                    if (feedPrefs.getAutoDownload()
+                            && !candidates.contains(newItem)
+                            && feedPrefs.getFilter().shouldAutoDownload(newItem)) {
                         candidates.add(newItem);
                     }
                 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -440,7 +440,6 @@ public static synchronized Feed updateFeed(Context context, Feed newFeed, boolea
                 if (oldItem == null) {
                     // item is new
                     item.setFeed(savedFeed);
-                    item.setAutoDownload(savedFeed.getPreferences().getAutoDownload());
 
                     if (idx >= savedFeed.getItems().size()) {
                         savedFeed.getItems().add(item);

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -120,6 +120,7 @@ public void onToggleChanged(boolean open) {
     @Override
     public void onDestroyView() {
         EventBus.getDefault().unregister(this);
+        adapter.endSelectMode();
         super.onDestroyView();
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -267,6 +267,9 @@ public void onDestroyView() {
         if (disposable != null) {
             disposable.dispose();
         }
+        if (adapter != null) {
+            adapter.endSelectMode();
+        }
         adapter = null;
     }
 

File: app/src/main/java/de/danoeh/antennapod/view/ChapterSeekBar.java
Patch:
@@ -62,6 +62,7 @@ public void setDividerPos(final float[] dividerPos) {
         } else {
             this.dividerPos = null;
         }
+        invalidate();
     }
 
     public void highlightCurrentChapter() {

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -166,7 +166,7 @@ private void setChapterDividers(Playable media) {
 
         float[] dividerPos = null;
 
-        if (media.getChapters() != null) {
+        if (media.getChapters() != null && !media.getChapters().isEmpty()) {
             List<Chapter> chapters = media.getChapters();
             dividerPos = new float[chapters.size()];
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -166,7 +166,7 @@ private void setChapterDividers(Playable media) {
 
         float[] dividerPos = null;
 
-        if (media.getChapters() != null) {
+        if (media.getChapters() != null && !media.getChapters().isEmpty()) {
             List<Chapter> chapters = media.getChapters();
             dividerPos = new float[chapters.size()];
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -73,7 +73,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = root.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
         adapter = new CompletedDownloadsListAdapter((MainActivity) getActivity());
         recyclerView.setAdapter(adapter);
         progressBar = root.findViewById(R.id.progLoading);

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java
Patch:
@@ -194,7 +194,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         txtvInformation = root.findViewById(R.id.txtvInformation);
 
         recyclerView = root.findViewById(android.R.id.list);
-        recyclerView.setVisibility(View.GONE);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
         setupLoadMoreScrollListener();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -156,7 +156,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = root.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
 
         progressBar = root.findViewById(R.id.progLoading);
         txtvTitle = root.findViewById(R.id.txtvTitle);
@@ -436,7 +435,6 @@ private void displayList() {
             adapter = new FeedItemListAdapter((MainActivity) getActivity());
             recyclerView.setAdapter(adapter);
         }
-        recyclerView.setVisibility(View.VISIBLE);
         progressBar.setVisibility(View.GONE);
         if (feed != null) {
             adapter.updateItems(feed.getItems());

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -75,7 +75,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = root.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
         adapter = new PlaybackHistoryListAdapter((MainActivity) getActivity());
         recyclerView.setAdapter(adapter);
         progressBar = root.findViewById(R.id.progLoading);

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -120,7 +120,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = layout.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
         adapter = new EpisodeItemListAdapter((MainActivity) getActivity());
         recyclerView.setAdapter(adapter);
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -73,7 +73,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = root.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
         adapter = new CompletedDownloadsListAdapter((MainActivity) getActivity());
         recyclerView.setAdapter(adapter);
         progressBar = root.findViewById(R.id.progLoading);

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java
Patch:
@@ -194,7 +194,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         txtvInformation = root.findViewById(R.id.txtvInformation);
 
         recyclerView = root.findViewById(android.R.id.list);
-        recyclerView.setVisibility(View.GONE);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
         setupLoadMoreScrollListener();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -156,7 +156,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = root.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
 
         progressBar = root.findViewById(R.id.progLoading);
         txtvTitle = root.findViewById(R.id.txtvTitle);
@@ -436,7 +435,6 @@ private void displayList() {
             adapter = new FeedItemListAdapter((MainActivity) getActivity());
             recyclerView.setAdapter(adapter);
         }
-        recyclerView.setVisibility(View.VISIBLE);
         progressBar.setVisibility(View.GONE);
         if (feed != null) {
             adapter.updateItems(feed.getItems());

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -75,7 +75,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = root.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
         adapter = new PlaybackHistoryListAdapter((MainActivity) getActivity());
         recyclerView.setAdapter(adapter);
         progressBar = root.findViewById(R.id.progLoading);

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -120,7 +120,6 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         recyclerView = layout.findViewById(R.id.recyclerView);
         recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());
-        recyclerView.setVisibility(View.GONE);
         adapter = new EpisodeItemListAdapter((MainActivity) getActivity());
         recyclerView.setAdapter(adapter);
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -195,9 +195,9 @@ private void seekToPrevChapter() {
         } else if ((controller.getPosition() - 10000 * controller.getCurrentPlaybackSpeedMultiplier())
                 < curr.getStart()) {
             refreshChapterData(displayedChapterIndex - 1);
-            controller.seekToChapter(media.getChapters().get(displayedChapterIndex));
+            controller.seekTo((int) media.getChapters().get(displayedChapterIndex).getStart());
         } else {
-            controller.seekToChapter(curr);
+            controller.seekTo((int) curr.getStart());
         }
     }
 
@@ -208,7 +208,7 @@ private void seekToNextChapter() {
         }
 
         refreshChapterData(displayedChapterIndex + 1);
-        controller.seekToChapter(media.getChapters().get(displayedChapterIndex));
+        controller.seekTo((int) media.getChapters().get(displayedChapterIndex).getStart());
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/IPlayer.java
Patch:
@@ -7,9 +7,6 @@
 import java.util.List;
 
 public interface IPlayer {
-
-    boolean canSetSpeed();
-
     boolean canDownmix();
 
     int getCurrentPosition();

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -59,6 +59,7 @@ public abstract class PlaybackController {
     private boolean released = false;
     private boolean initialized = false;
     private boolean eventsRegistered = false;
+    private long loadedFeedMedia = -1;
 
     private Disposable mediaLoader;
 
@@ -380,7 +381,8 @@ private void handleStatus() {
     }
 
     private void checkMediaInfoLoaded() {
-        if (!mediaInfoLoaded) {
+        if (!mediaInfoLoaded || loadedFeedMedia != PlaybackPreferences.getCurrentlyPlayingFeedMediaId()) {
+            loadedFeedMedia = PlaybackPreferences.getCurrentlyPlayingFeedMediaId();
             loadMediaInfo();
         }
         mediaInfoLoaded = true;

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -59,6 +59,7 @@ public abstract class PlaybackController {
     private boolean released = false;
     private boolean initialized = false;
     private boolean eventsRegistered = false;
+    private long loadedFeedMedia = -1;
 
     private Disposable mediaLoader;
 
@@ -380,7 +381,8 @@ private void handleStatus() {
     }
 
     private void checkMediaInfoLoaded() {
-        if (!mediaInfoLoaded) {
+        if (!mediaInfoLoaded || loadedFeedMedia != PlaybackPreferences.getCurrentlyPlayingFeedMediaId()) {
+            loadedFeedMedia = PlaybackPreferences.getCurrentlyPlayingFeedMediaId();
             loadMediaInfo();
         }
         mediaInfoLoaded = true;

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -433,7 +433,7 @@ public void updatePosition(PlaybackPositionEvent event) {
         TimeSpeedConverter converter = new TimeSpeedConverter(controller.getCurrentPlaybackSpeedMultiplier());
         int currentPosition = converter.convert(event.getPosition());
         int duration = converter.convert(event.getDuration());
-        int remainingTime = converter.convert(event.getDuration() - event.getPosition());
+        int remainingTime = converter.convert(Math.max(event.getDuration() - event.getPosition(), 0));
         Log.d(TAG, "currentPosition " + Converter.getDurationStringLong(currentPosition));
         if (currentPosition == PlaybackService.INVALID_TIME || duration == PlaybackService.INVALID_TIME) {
             Log.w(TAG, "Could not react to position observer update because of invalid time");
@@ -442,7 +442,7 @@ public void updatePosition(PlaybackPositionEvent event) {
         txtvPosition.setText(Converter.getDurationStringLong(currentPosition));
         showTimeLeft = UserPreferences.shouldShowRemainingTime();
         if (showTimeLeft) {
-            txtvLength.setText("-" + Converter.getDurationStringLong(remainingTime));
+            txtvLength.setText(((remainingTime > 0) ? "-" : "") + Converter.getDurationStringLong(remainingTime));
         } else {
             txtvLength.setText(Converter.getDurationStringLong(duration));
         }

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -160,7 +160,7 @@ public long getItemId(int position) {
         if (viewType == VIEW_TYPE_SUBSCRIPTION) {
             return itemAccess.getItem(position - getSubscriptionOffset()).id;
         } else if (viewType == VIEW_TYPE_NAV) {
-            return -Math.abs(fragmentTags.get(position).hashCode()) - 1; // Folder IDs are >0
+            return -Math.abs((long) fragmentTags.get(position).hashCode()) - 1; // Folder IDs are >0
         } else {
             return 0;
         }

File: core/src/main/java/de/danoeh/antennapod/core/storage/NavDrawerData.java
Patch:
@@ -62,7 +62,7 @@ public static class FolderDrawerItem extends DrawerItem {
 
         public FolderDrawerItem(String name) {
             // Keep IDs >0 but make room for many feeds
-            super(DrawerItem.Type.FOLDER, (long) Math.abs(name.hashCode()) << 20);
+            super(DrawerItem.Type.FOLDER, Math.abs((long) name.hashCode()) << 20);
             this.name = name;
         }
 

File: app/src/main/java/com/google/android/material/bottomsheet/ViewPagerBottomSheetBehavior.java
Patch:
@@ -53,6 +53,9 @@ View findScrollingChild(View view) {
     }
 
     public void updateScrollingChild() {
+        if (viewRef == null) {
+            return;
+        }
         final View scrollingChild = findScrollingChild(viewRef.get());
         nestedScrollingChildRef = new WeakReference<>(scrollingChild);
     }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -188,7 +188,9 @@ public void onSlide(@NonNull View view, float slideOffset) {
 
     public void setupToolbarToggle(@NonNull Toolbar toolbar, boolean displayUpArrow) {
         if (drawerLayout != null) { // Tablet layout does not have a drawer
-            drawerLayout.removeDrawerListener(drawerToggle);
+            if (drawerToggle != null) {
+                drawerLayout.removeDrawerListener(drawerToggle);
+            }
             drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar,
                     R.string.drawer_open, R.string.drawer_close);
             drawerLayout.addDrawerListener(drawerToggle);

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.annotation.TargetApi;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.graphics.PixelFormat;
 import android.os.Build;
 import android.os.Bundle;
@@ -479,7 +478,6 @@ void setupGUI() {
         cardViewSeek = findViewById(R.id.cardViewSeek);
         txtvSeek = findViewById(R.id.txtvSeek);
 
-        SharedPreferences prefs = getSharedPreferences(PREFS, MODE_PRIVATE);
         showTimeLeft = UserPreferences.shouldShowRemainingTime();
         Log.d("timeleft", showTimeLeft ? "true" : "false");
         txtvLength = findViewById(R.id.txtvLength);

File: app/src/main/java/de/danoeh/antennapod/asynctask/ExportWorker.java
Patch:
@@ -41,8 +41,8 @@ private ExportWorker(@NonNull ExportWriter exportWriter, @NonNull File output, C
 
     public Observable<File> exportObservable() {
         if (output.exists()) {
-            Log.w(TAG, "Overwriting previously exported file.");
-            output.delete();
+            boolean success = output.delete();
+            Log.w(TAG, "Overwriting previously exported file: " + success);
         }
         return Observable.create(subscriber -> {
             OutputStreamWriter writer = null;

File: app/src/main/java/de/danoeh/antennapod/dialog/ProxyDialog.java
Patch:
@@ -206,7 +206,7 @@ private boolean checkHost() {
 
     private boolean checkPort() {
         int port = getPort();
-        if(port < 0 && port > 65535) {
+        if (port < 0 || port > 65535) {
             etPort.setError(context.getString(R.string.proxy_port_invalid_error));
             return false;
         }

File: app/src/main/java/de/danoeh/antennapod/discovery/PodcastSearcherRegistry.java
Patch:
@@ -12,7 +12,7 @@ public class PodcastSearcherRegistry {
     private PodcastSearcherRegistry() {
     }
 
-    public static List<SearcherInfo> getSearchProviders() {
+    public static synchronized List<SearcherInfo> getSearchProviders() {
         if (searchProviders == null) {
             searchProviders = new ArrayList<>();
             searchProviders.add(new SearcherInfo(new CombinedSearcher(), 1.0f));

File: app/src/main/java/de/danoeh/antennapod/error/CrashReportWriter.java
Patch:
@@ -7,7 +7,6 @@
 import org.apache.commons.io.IOUtils;
 
 import java.io.File;
-import java.io.FileWriter;
 import java.io.IOException;
 import java.io.PrintWriter;
 import java.text.SimpleDateFormat;
@@ -40,7 +39,7 @@ public static void write(Throwable exception) {
         File path = getFile();
         PrintWriter out = null;
         try {
-            out = new PrintWriter(new FileWriter(path));
+            out = new PrintWriter(path, "UTF-8");
             out.println("## Crash info");
             out.println("Time: " + new SimpleDateFormat("dd-MM-yyyy HH:mm:ss", Locale.getDefault()).format(new Date()));
             out.println("AntennaPod version: " + BuildConfig.VERSION_NAME);

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -27,7 +27,7 @@ public class AllEpisodesFragment extends EpisodesListFragment {
     private static final String PREF_NAME = "PrefAllEpisodesFragment";
     private static final String PREF_FILTER = "filter";
 
-    private static FeedItemFilter feedItemFilter = new FeedItemFilter("");
+    private FeedItemFilter feedItemFilter = new FeedItemFilter("");
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -291,6 +291,9 @@ private int getDefaultNumOfColumns() {
     @Override
     public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
         super.onCreateContextMenu(menu, v, menuInfo);
+        if (menuInfo == null) {
+            return;
+        }
         AdapterView.AdapterContextMenuInfo adapterInfo = (AdapterView.AdapterContextMenuInfo) menuInfo;
         int position = adapterInfo.position;
 

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/DevelopersFragment.java
Patch:
@@ -29,7 +29,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         developersLoader = Single.create((SingleOnSubscribe<ArrayList<SimpleIconListAdapter.ListItem>>) emitter -> {
             ArrayList<SimpleIconListAdapter.ListItem> developers = new ArrayList<>();
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open("developers.csv")));
+                    getContext().getAssets().open("developers.csv"), "UTF-8"));
             String line;
             while ((line = reader.readLine()) != null) {
                 String[] info = line.split(";");

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/LicensesFragment.java
Patch:
@@ -95,7 +95,7 @@ public void onListItemClick(@NonNull ListView l, @NonNull View v, int position,
     private void showLicenseText(String licenseTextFile) {
         try {
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open(licenseTextFile)));
+                    getContext().getAssets().open(licenseTextFile), "UTF-8"));
             StringBuilder licenseText = new StringBuilder();
             String line;
             while ((line = reader.readLine()) != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/SpecialThanksFragment.java
Patch:
@@ -29,7 +29,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         translatorsLoader = Single.create((SingleOnSubscribe<ArrayList<SimpleIconListAdapter.ListItem>>) emitter -> {
             ArrayList<SimpleIconListAdapter.ListItem> translators = new ArrayList<>();
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open("special_thanks.csv")));
+                    getContext().getAssets().open("special_thanks.csv"), "UTF-8"));
             String line;
             while ((line = reader.readLine()) != null) {
                 String[] info = line.split(";");

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/TranslatorsFragment.java
Patch:
@@ -29,7 +29,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         translatorsLoader = Single.create((SingleOnSubscribe<ArrayList<SimpleIconListAdapter.ListItem>>) emitter -> {
             ArrayList<SimpleIconListAdapter.ListItem> translators = new ArrayList<>();
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open("translators.csv")));
+                    getContext().getAssets().open("translators.csv"), "UTF-8"));
             String line;
             while ((line = reader.readLine()) != null) {
                 String[] info = line.split(";");

File: core/src/main/java/de/danoeh/antennapod/core/backup/OpmlBackupAgent.java
Patch:
@@ -94,7 +94,7 @@ public void performBackup(ParcelFileDescriptor oldState, BackupDataOutput data,
 
                         if (len != -1) {
                             byte[] oldChecksum = new byte[len];
-                            inState.read(oldChecksum);
+                            IOUtils.read(inState, oldChecksum, 0, len);
                             Log.d(TAG, "Old checksum: " + new BigInteger(1, oldChecksum).toString(16));
 
                             if (Arrays.equals(oldChecksum, newChecksum)) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/Chapter.java
Patch:
@@ -43,7 +43,7 @@ public static Chapter fromCursor(Cursor cursor) {
         String imageUrl = cursor.getString(indexImage);
         int chapterType = cursor.getInt(indexChapterType);
 
-        Chapter chapter = null;
+        Chapter chapter;
         switch (chapterType) {
             case SimpleChapter.CHAPTERTYPE_SIMPLECHAPTER:
                 chapter = new SimpleChapter(start, title, link, imageUrl);
@@ -54,6 +54,8 @@ public static Chapter fromCursor(Cursor cursor) {
             case VorbisCommentChapter.CHAPTERTYPE_VORBISCOMMENT_CHAPTER:
                 chapter = new VorbisCommentChapter(start, title, link, imageUrl);
                 break;
+            default:
+                throw new IllegalArgumentException("Unknown chapter type");
         }
         chapter.setId(id);
         return chapter;

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -43,7 +43,7 @@ public class FeedItem extends FeedComponent implements Serializable {
     private Date pubDate;
     private FeedMedia media;
 
-    private Feed feed;
+    private transient Feed feed;
     private long feedId;
 
     private int state;
@@ -65,7 +65,7 @@ public class FeedItem extends FeedComponent implements Serializable {
      * The list of chapters of this item. This might be null even if there are chapters of this item
      * in the database. The 'hasChapters' attribute should be used to check if this item has any chapters.
      * */
-    private List<Chapter> chapters;
+    private transient List<Chapter> chapters;
     private String imageUrl;
 
     /*

File: core/src/main/java/de/danoeh/antennapod/core/glide/FastBlurTransformation.java
Patch:
@@ -8,6 +8,7 @@
 import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
 import com.bumptech.glide.load.resource.bitmap.BitmapTransformation;
 
+import java.nio.charset.Charset;
 import java.security.MessageDigest;
 
 public class FastBlurTransformation extends BitmapTransformation {
@@ -43,7 +44,7 @@ public boolean equals(Object o) {
 
     @Override
     public void updateDiskCacheKey(@NonNull MessageDigest messageDigest) {
-        messageDigest.update(TAG.getBytes());
+        messageDigest.update(TAG.getBytes(Charset.defaultCharset()));
     }
 
     private static Bitmap fastBlur(Bitmap bitmap, int radius) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -120,7 +120,7 @@ public static OkHttpClient.Builder newBuilder() {
             SocketAddress address = InetSocketAddress.createUnresolved(config.host, port);
             Proxy proxy = new Proxy(config.type, address);
             builder.proxy(proxy);
-            if (!TextUtils.isEmpty(config.username)) {
+            if (!TextUtils.isEmpty(config.username) && config.password != null) {
                 String credentials = Credentials.basic(config.username, config.password);
                 builder.interceptors().add(chain -> {
                     Request request = chain.request().newBuilder()

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -217,7 +217,7 @@ public final synchronized PSMPInfo getPSMPInfo() {
      * could result in nonsensical results (like a status of PLAYING, but a null playable)
      * @return the current player status
      */
-    public PlayerStatus getPlayerStatus() {
+    public synchronized PlayerStatus getPlayerStatus() {
         return playerStatus;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -331,7 +331,7 @@ public static void init(Context context) {
         PodDBAdapter.context = context.getApplicationContext();
     }
 
-    public static PodDBAdapter getInstance() {
+    public static synchronized PodDBAdapter getInstance() {
         if (instance == null) {
             instance = new PodDBAdapter();
         }

File: core/src/main/java/de/danoeh/antennapod/core/sync/gpoddernet/GpodnetService.java
Patch:
@@ -667,11 +667,11 @@ private String getStringFromResponseBody(@NonNull ResponseBody body) throws Gpod
             while ((count = in.read(buffer)) > 0) {
                 outputStream.write(buffer, 0, count);
             }
+            return outputStream.toString("UTF-8");
         } catch (IOException e) {
             e.printStackTrace();
             throw new GpodnetServiceException(e);
         }
-        return outputStream.toString();
     }
 
     private void checkStatusCode(@NonNull Response response) throws GpodnetServiceException {

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastUtils.java
Patch:
@@ -35,7 +35,6 @@ private CastUtils(){}
     public static final String KEY_FEED_URL = "de.danoeh.antennapod.core.cast.FeedUrl";
     public static final String KEY_FEED_WEBSITE = "de.danoeh.antennapod.core.cast.FeedWebsite";
     public static final String KEY_EPISODE_NOTES = "de.danoeh.antennapod.core.cast.EpisodeNotes";
-    public static final int EPISODE_NOTES_MAX_LENGTH = Integer.MAX_VALUE;
 
     /**
      * The field <code>AntennaPod.FormatVersion</code> specifies which version of MediaMetaData

File: core/src/play/java/de/danoeh/antennapod/core/cast/MediaInfoCreator.java
Patch:
@@ -39,9 +39,6 @@ public static MediaInfo from(RemoteMedia media) {
         }
         String notes = media.getNotes();
         if (notes != null) {
-            if (notes.length() > CastUtils.EPISODE_NOTES_MAX_LENGTH) {
-                notes = notes.substring(0, CastUtils.EPISODE_NOTES_MAX_LENGTH);
-            }
             metadata.putString(CastUtils.KEY_EPISODE_NOTES, notes);
         }
         // Default id value

File: net/ssl/src/main/java/de/danoeh/antennapod/net/ssl/BackportTrustManager.java
Patch:
@@ -6,10 +6,12 @@
 import javax.net.ssl.TrustManagerFactory;
 import javax.net.ssl.X509TrustManager;
 import java.io.ByteArrayInputStream;
+import java.io.IOException;
 import java.nio.charset.Charset;
 import java.security.KeyStore;
 import java.security.KeyStoreException;
 import java.security.NoSuchAlgorithmException;
+import java.security.cert.CertificateException;
 import java.security.cert.CertificateFactory;
 import java.util.ArrayList;
 import java.util.List;
@@ -52,7 +54,7 @@ public static X509TrustManager create() {
             managers.add(getSystemTrustManager(keystore));
             managers.add(getSystemTrustManager(null));
             return new CompositeX509TrustManager(managers);
-        } catch (Exception e) {
+        } catch (KeyStoreException | CertificateException | NoSuchAlgorithmException | IOException e) {
             Log.e(TAG, Log.getStackTraceString(e));
             return null;
         }

File: app/src/main/java/com/google/android/material/bottomsheet/ViewPagerBottomSheetBehavior.java
Patch:
@@ -53,6 +53,9 @@ View findScrollingChild(View view) {
     }
 
     public void updateScrollingChild() {
+        if (viewRef == null) {
+            return;
+        }
         final View scrollingChild = findScrollingChild(viewRef.get());
         nestedScrollingChildRef = new WeakReference<>(scrollingChild);
     }

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.annotation.TargetApi;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.graphics.PixelFormat;
 import android.os.Build;
 import android.os.Bundle;
@@ -479,7 +478,6 @@ void setupGUI() {
         cardViewSeek = findViewById(R.id.cardViewSeek);
         txtvSeek = findViewById(R.id.txtvSeek);
 
-        SharedPreferences prefs = getSharedPreferences(PREFS, MODE_PRIVATE);
         showTimeLeft = UserPreferences.shouldShowRemainingTime();
         Log.d("timeleft", showTimeLeft ? "true" : "false");
         txtvLength = findViewById(R.id.txtvLength);

File: app/src/main/java/de/danoeh/antennapod/asynctask/ExportWorker.java
Patch:
@@ -41,8 +41,8 @@ private ExportWorker(@NonNull ExportWriter exportWriter, @NonNull File output, C
 
     public Observable<File> exportObservable() {
         if (output.exists()) {
-            Log.w(TAG, "Overwriting previously exported file.");
-            output.delete();
+            boolean success = output.delete();
+            Log.w(TAG, "Overwriting previously exported file: " + success);
         }
         return Observable.create(subscriber -> {
             OutputStreamWriter writer = null;

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -291,6 +291,9 @@ private int getDefaultNumOfColumns() {
     @Override
     public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
         super.onCreateContextMenu(menu, v, menuInfo);
+        if (menuInfo == null) {
+            return;
+        }
         AdapterView.AdapterContextMenuInfo adapterInfo = (AdapterView.AdapterContextMenuInfo) menuInfo;
         int position = adapterInfo.position;
 

File: core/src/main/java/de/danoeh/antennapod/core/backup/OpmlBackupAgent.java
Patch:
@@ -94,7 +94,7 @@ public void performBackup(ParcelFileDescriptor oldState, BackupDataOutput data,
 
                         if (len != -1) {
                             byte[] oldChecksum = new byte[len];
-                            inState.read(oldChecksum);
+                            IOUtils.read(inState, oldChecksum, 0, len);
                             Log.d(TAG, "Old checksum: " + new BigInteger(1, oldChecksum).toString(16));
 
                             if (Arrays.equals(oldChecksum, newChecksum)) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/Chapter.java
Patch:
@@ -43,7 +43,7 @@ public static Chapter fromCursor(Cursor cursor) {
         String imageUrl = cursor.getString(indexImage);
         int chapterType = cursor.getInt(indexChapterType);
 
-        Chapter chapter = null;
+        Chapter chapter;
         switch (chapterType) {
             case SimpleChapter.CHAPTERTYPE_SIMPLECHAPTER:
                 chapter = new SimpleChapter(start, title, link, imageUrl);
@@ -54,6 +54,8 @@ public static Chapter fromCursor(Cursor cursor) {
             case VorbisCommentChapter.CHAPTERTYPE_VORBISCOMMENT_CHAPTER:
                 chapter = new VorbisCommentChapter(start, title, link, imageUrl);
                 break;
+            default:
+                throw new IllegalArgumentException("Unknown chapter type");
         }
         chapter.setId(id);
         return chapter;

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -65,7 +65,7 @@ public class FeedItem extends FeedComponent implements Serializable {
      * The list of chapters of this item. This might be null even if there are chapters of this item
      * in the database. The 'hasChapters' attribute should be used to check if this item has any chapters.
      * */
-    private List<Chapter> chapters;
+    private transient List<Chapter> chapters;
     private String imageUrl;
 
     /*

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -217,7 +217,7 @@ public final synchronized PSMPInfo getPSMPInfo() {
      * could result in nonsensical results (like a status of PLAYING, but a null playable)
      * @return the current player status
      */
-    public PlayerStatus getPlayerStatus() {
+    public synchronized PlayerStatus getPlayerStatus() {
         return playerStatus;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -331,7 +331,7 @@ public static void init(Context context) {
         PodDBAdapter.context = context.getApplicationContext();
     }
 
-    public static PodDBAdapter getInstance() {
+    public static synchronized PodDBAdapter getInstance() {
         if (instance == null) {
             instance = new PodDBAdapter();
         }

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastUtils.java
Patch:
@@ -35,7 +35,6 @@ private CastUtils(){}
     public static final String KEY_FEED_URL = "de.danoeh.antennapod.core.cast.FeedUrl";
     public static final String KEY_FEED_WEBSITE = "de.danoeh.antennapod.core.cast.FeedWebsite";
     public static final String KEY_EPISODE_NOTES = "de.danoeh.antennapod.core.cast.EpisodeNotes";
-    public static final int EPISODE_NOTES_MAX_LENGTH = Integer.MAX_VALUE;
 
     /**
      * The field <code>AntennaPod.FormatVersion</code> specifies which version of MediaMetaData

File: core/src/play/java/de/danoeh/antennapod/core/cast/MediaInfoCreator.java
Patch:
@@ -39,9 +39,6 @@ public static MediaInfo from(RemoteMedia media) {
         }
         String notes = media.getNotes();
         if (notes != null) {
-            if (notes.length() > CastUtils.EPISODE_NOTES_MAX_LENGTH) {
-                notes = notes.substring(0, CastUtils.EPISODE_NOTES_MAX_LENGTH);
-            }
             metadata.putString(CastUtils.KEY_EPISODE_NOTES, notes);
         }
         // Default id value

File: net/ssl/src/main/java/de/danoeh/antennapod/net/ssl/BackportTrustManager.java
Patch:
@@ -6,10 +6,12 @@
 import javax.net.ssl.TrustManagerFactory;
 import javax.net.ssl.X509TrustManager;
 import java.io.ByteArrayInputStream;
+import java.io.IOException;
 import java.nio.charset.Charset;
 import java.security.KeyStore;
 import java.security.KeyStoreException;
 import java.security.NoSuchAlgorithmException;
+import java.security.cert.CertificateException;
 import java.security.cert.CertificateFactory;
 import java.util.ArrayList;
 import java.util.List;
@@ -52,7 +54,7 @@ public static X509TrustManager create() {
             managers.add(getSystemTrustManager(keystore));
             managers.add(getSystemTrustManager(null));
             return new CompositeX509TrustManager(managers);
-        } catch (Exception e) {
+        } catch (KeyStoreException | CertificateException | NoSuchAlgorithmException | IOException e) {
             Log.e(TAG, Log.getStackTraceString(e));
             return null;
         }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -188,7 +188,9 @@ public void onSlide(@NonNull View view, float slideOffset) {
 
     public void setupToolbarToggle(@NonNull Toolbar toolbar, boolean displayUpArrow) {
         if (drawerLayout != null) { // Tablet layout does not have a drawer
-            drawerLayout.removeDrawerListener(drawerToggle);
+            if (drawerToggle != null) {
+                drawerLayout.removeDrawerListener(drawerToggle);
+            }
             drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar,
                     R.string.drawer_open, R.string.drawer_close);
             drawerLayout.addDrawerListener(drawerToggle);

File: app/src/main/java/de/danoeh/antennapod/dialog/ProxyDialog.java
Patch:
@@ -206,7 +206,7 @@ private boolean checkHost() {
 
     private boolean checkPort() {
         int port = getPort();
-        if(port < 0 && port > 65535) {
+        if (port < 0 || port > 65535) {
             etPort.setError(context.getString(R.string.proxy_port_invalid_error));
             return false;
         }

File: app/src/main/java/de/danoeh/antennapod/discovery/PodcastSearcherRegistry.java
Patch:
@@ -12,7 +12,7 @@ public class PodcastSearcherRegistry {
     private PodcastSearcherRegistry() {
     }
 
-    public static List<SearcherInfo> getSearchProviders() {
+    public static synchronized List<SearcherInfo> getSearchProviders() {
         if (searchProviders == null) {
             searchProviders = new ArrayList<>();
             searchProviders.add(new SearcherInfo(new CombinedSearcher(), 1.0f));

File: app/src/main/java/de/danoeh/antennapod/error/CrashReportWriter.java
Patch:
@@ -7,7 +7,6 @@
 import org.apache.commons.io.IOUtils;
 
 import java.io.File;
-import java.io.FileWriter;
 import java.io.IOException;
 import java.io.PrintWriter;
 import java.text.SimpleDateFormat;
@@ -40,7 +39,7 @@ public static void write(Throwable exception) {
         File path = getFile();
         PrintWriter out = null;
         try {
-            out = new PrintWriter(new FileWriter(path));
+            out = new PrintWriter(path, "UTF-8");
             out.println("## Crash info");
             out.println("Time: " + new SimpleDateFormat("dd-MM-yyyy HH:mm:ss", Locale.getDefault()).format(new Date()));
             out.println("AntennaPod version: " + BuildConfig.VERSION_NAME);

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -27,7 +27,7 @@ public class AllEpisodesFragment extends EpisodesListFragment {
     private static final String PREF_NAME = "PrefAllEpisodesFragment";
     private static final String PREF_FILTER = "filter";
 
-    private static FeedItemFilter feedItemFilter = new FeedItemFilter("");
+    private FeedItemFilter feedItemFilter = new FeedItemFilter("");
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/DevelopersFragment.java
Patch:
@@ -29,7 +29,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         developersLoader = Single.create((SingleOnSubscribe<ArrayList<SimpleIconListAdapter.ListItem>>) emitter -> {
             ArrayList<SimpleIconListAdapter.ListItem> developers = new ArrayList<>();
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open("developers.csv")));
+                    getContext().getAssets().open("developers.csv"), "UTF-8"));
             String line;
             while ((line = reader.readLine()) != null) {
                 String[] info = line.split(";");

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/LicensesFragment.java
Patch:
@@ -95,7 +95,7 @@ public void onListItemClick(@NonNull ListView l, @NonNull View v, int position,
     private void showLicenseText(String licenseTextFile) {
         try {
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open(licenseTextFile)));
+                    getContext().getAssets().open(licenseTextFile), "UTF-8"));
             StringBuilder licenseText = new StringBuilder();
             String line;
             while ((line = reader.readLine()) != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/SpecialThanksFragment.java
Patch:
@@ -29,7 +29,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         translatorsLoader = Single.create((SingleOnSubscribe<ArrayList<SimpleIconListAdapter.ListItem>>) emitter -> {
             ArrayList<SimpleIconListAdapter.ListItem> translators = new ArrayList<>();
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open("special_thanks.csv")));
+                    getContext().getAssets().open("special_thanks.csv"), "UTF-8"));
             String line;
             while ((line = reader.readLine()) != null) {
                 String[] info = line.split(";");

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/TranslatorsFragment.java
Patch:
@@ -29,7 +29,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         translatorsLoader = Single.create((SingleOnSubscribe<ArrayList<SimpleIconListAdapter.ListItem>>) emitter -> {
             ArrayList<SimpleIconListAdapter.ListItem> translators = new ArrayList<>();
             BufferedReader reader = new BufferedReader(new InputStreamReader(
-                    getContext().getAssets().open("translators.csv")));
+                    getContext().getAssets().open("translators.csv"), "UTF-8"));
             String line;
             while ((line = reader.readLine()) != null) {
                 String[] info = line.split(";");

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -43,7 +43,7 @@ public class FeedItem extends FeedComponent implements Serializable {
     private Date pubDate;
     private FeedMedia media;
 
-    private Feed feed;
+    private transient Feed feed;
     private long feedId;
 
     private int state;

File: core/src/main/java/de/danoeh/antennapod/core/glide/FastBlurTransformation.java
Patch:
@@ -8,6 +8,7 @@
 import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
 import com.bumptech.glide.load.resource.bitmap.BitmapTransformation;
 
+import java.nio.charset.Charset;
 import java.security.MessageDigest;
 
 public class FastBlurTransformation extends BitmapTransformation {
@@ -43,7 +44,7 @@ public boolean equals(Object o) {
 
     @Override
     public void updateDiskCacheKey(@NonNull MessageDigest messageDigest) {
-        messageDigest.update(TAG.getBytes());
+        messageDigest.update(TAG.getBytes(Charset.defaultCharset()));
     }
 
     private static Bitmap fastBlur(Bitmap bitmap, int radius) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -120,7 +120,7 @@ public static OkHttpClient.Builder newBuilder() {
             SocketAddress address = InetSocketAddress.createUnresolved(config.host, port);
             Proxy proxy = new Proxy(config.type, address);
             builder.proxy(proxy);
-            if (!TextUtils.isEmpty(config.username)) {
+            if (!TextUtils.isEmpty(config.username) && config.password != null) {
                 String credentials = Credentials.basic(config.username, config.password);
                 builder.interceptors().add(chain -> {
                     Request request = chain.request().newBuilder()

File: core/src/main/java/de/danoeh/antennapod/core/sync/gpoddernet/GpodnetService.java
Patch:
@@ -667,11 +667,11 @@ private String getStringFromResponseBody(@NonNull ResponseBody body) throws Gpod
             while ((count = in.read(buffer)) > 0) {
                 outputStream.write(buffer, 0, count);
             }
+            return outputStream.toString("UTF-8");
         } catch (IOException e) {
             e.printStackTrace();
             throw new GpodnetServiceException(e);
         }
-        return outputStream.toString();
     }
 
     private void checkStatusCode(@NonNull Response response) throws GpodnetServiceException {

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -159,8 +159,10 @@ public long getItemId(int position) {
         int viewType = getItemViewType(position);
         if (viewType == VIEW_TYPE_SUBSCRIPTION) {
             return itemAccess.getItem(position - getSubscriptionOffset()).id;
+        } else if (viewType == VIEW_TYPE_NAV) {
+            return -Math.abs(fragmentTags.get(position).hashCode()) - 1; // Folder IDs are >0
         } else {
-            return -position - 1; // IDs are >0
+            return 0;
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/NavDrawerData.java
Patch:
@@ -61,7 +61,8 @@ public static class FolderDrawerItem extends DrawerItem {
         public boolean isOpen;
 
         public FolderDrawerItem(String name) {
-            super(DrawerItem.Type.FOLDER, (long) name.hashCode() << 20); // Keep IDs >0 but make room for many feeds
+            // Keep IDs >0 but make room for many feeds
+            super(DrawerItem.Type.FOLDER, (long) Math.abs(name.hashCode()) << 20);
             this.name = name;
         }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedSyncTask.java
Patch:
@@ -39,7 +39,7 @@ public boolean run() {
         if (loadAllPages && feed.getNextPageLink() != null) {
             try {
                 feed.setId(savedFeed.getId());
-                DBTasks.loadNextPageOfFeed(context, savedFeed, true);
+                DBTasks.loadNextPageOfFeed(context, feed, true);
             } catch (DownloadRequestException e) {
                 Log.e(TAG, "Error trying to load next page", e);
             }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedSyncTask.java
Patch:
@@ -39,7 +39,7 @@ public boolean run() {
         if (loadAllPages && feed.getNextPageLink() != null) {
             try {
                 feed.setId(savedFeed.getId());
-                DBTasks.loadNextPageOfFeed(context, savedFeed, true);
+                DBTasks.loadNextPageOfFeed(context, feed, true);
             } catch (DownloadRequestException e) {
                 Log.e(TAG, "Error trying to load next page", e);
             }

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -159,8 +159,10 @@ public long getItemId(int position) {
         int viewType = getItemViewType(position);
         if (viewType == VIEW_TYPE_SUBSCRIPTION) {
             return itemAccess.getItem(position - getSubscriptionOffset()).id;
+        } else if (viewType == VIEW_TYPE_NAV) {
+            return -Math.abs(fragmentTags.get(position).hashCode()) - 1; // Folder IDs are >0
         } else {
-            return -position - 1; // IDs are >0
+            return 0;
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/NavDrawerData.java
Patch:
@@ -61,7 +61,8 @@ public static class FolderDrawerItem extends DrawerItem {
         public boolean isOpen;
 
         public FolderDrawerItem(String name) {
-            super(DrawerItem.Type.FOLDER, (long) name.hashCode() << 20); // Keep IDs >0 but make room for many feeds
+            // Keep IDs >0 but make room for many feeds
+            super(DrawerItem.Type.FOLDER, (long) Math.abs(name.hashCode()) << 20);
             this.name = name;
         }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -101,6 +101,7 @@ public View onCreateView(@NonNull LayoutInflater inflater,
                              @Nullable Bundle savedInstanceState) {
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.audioplayer_fragment, container, false);
+        root.setOnTouchListener((v, event) -> true); // Avoid clicks going through player to fragments below
         toolbar = root.findViewById(R.id.toolbar);
         toolbar.setTitle("");
         toolbar.setNavigationOnClickListener(v ->

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -101,6 +101,7 @@ public View onCreateView(@NonNull LayoutInflater inflater,
                              @Nullable Bundle savedInstanceState) {
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.audioplayer_fragment, container, false);
+        root.setOnTouchListener((v, event) -> true); // Avoid clicks going through player to fragments below
         toolbar = root.findViewById(R.id.toolbar);
         toolbar.setTitle("");
         toolbar.setNavigationOnClickListener(v ->

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -385,7 +385,7 @@ private void setSortOrder(SortOrder sortOrder) {
     @Override
     public boolean onContextItemSelected(MenuItem item) {
         Log.d(TAG, "onContextItemSelected() called with: " + "item = [" + item + "]");
-        if(!isVisible()) {
+        if (!isVisible() || recyclerAdapter == null) {
             return false;
         }
         FeedItem selectedItem = recyclerAdapter.getSelectedItem();
@@ -464,7 +464,7 @@ public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHol
                     int from = viewHolder.getAdapterPosition();
                     int to = target.getAdapterPosition();
                     Log.d(TAG, "move(" + from + ", " + to + ") in memory");
-                    if (from >= queue.size() || to >= queue.size()) {
+                    if (from >= queue.size() || to >= queue.size() || from < 0 || to < 0) {
                         return false;
                     }
                     queue.add(to, queue.remove(from));

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -222,7 +222,7 @@ private static void refreshFeeds(Context context, List<Feed> feeds, boolean load
             }).start();
         }
         if (!normalFeeds.isEmpty()) {
-            DownloadRequester.getInstance().downloadFeeds(context, feeds, loadAllPages, force, initiatedByUser);
+            DownloadRequester.getInstance().downloadFeeds(context, normalFeeds, loadAllPages, force, initiatedByUser);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -372,7 +372,6 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
     };
 
     private void loadData() {
-        progressBar.setVisibility(View.VISIBLE);
         disposable = Observable.fromCallable(
                 () -> {
                     NavDrawerData data = DBReader.getNavDrawerData();

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -385,7 +385,7 @@ private void setSortOrder(SortOrder sortOrder) {
     @Override
     public boolean onContextItemSelected(MenuItem item) {
         Log.d(TAG, "onContextItemSelected() called with: " + "item = [" + item + "]");
-        if(!isVisible()) {
+        if (!isVisible() || recyclerAdapter == null) {
             return false;
         }
         FeedItem selectedItem = recyclerAdapter.getSelectedItem();
@@ -464,7 +464,7 @@ public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHol
                     int from = viewHolder.getAdapterPosition();
                     int to = target.getAdapterPosition();
                     Log.d(TAG, "move(" + from + ", " + to + ") in memory");
-                    if (from >= queue.size() || to >= queue.size()) {
+                    if (from >= queue.size() || to >= queue.size() || from < 0 || to < 0) {
                         return false;
                     }
                     queue.add(to, queue.remove(from));

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -222,7 +222,7 @@ private static void refreshFeeds(Context context, List<Feed> feeds, boolean load
             }).start();
         }
         if (!normalFeeds.isEmpty()) {
-            DownloadRequester.getInstance().downloadFeeds(context, feeds, loadAllPages, force, initiatedByUser);
+            DownloadRequester.getInstance().downloadFeeds(context, normalFeeds, loadAllPages, force, initiatedByUser);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -372,7 +372,6 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
     };
 
     private void loadData() {
-        progressBar.setVisibility(View.VISIBLE);
         disposable = Observable.fromCallable(
                 () -> {
                     NavDrawerData data = DBReader.getNavDrawerData();

File: app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java
Patch:
@@ -30,7 +30,6 @@
 import static androidx.test.espresso.Espresso.onView;
 import static androidx.test.espresso.action.ViewActions.click;
 import static androidx.test.espresso.action.ViewActions.longClick;
-import static androidx.test.espresso.action.ViewActions.scrollTo;
 import static androidx.test.espresso.action.ViewActions.swipeUp;
 import static androidx.test.espresso.intent.Intents.intended;
 import static androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent;
@@ -123,7 +122,7 @@ public void testClickNavDrawer() throws Exception {
         for (int i = 0; i < uiTestUtils.hostedFeeds.size(); i++) {
             Feed f = uiTestUtils.hostedFeeds.get(i);
             openNavDrawer();
-            onDrawerItem(withText(f.getTitle())).perform(scrollTo(), click());
+            onDrawerItem(withText(f.getTitle())).perform(click());
             onView(isRoot()).perform(waitForView(allOf(isDescendantOfA(withId(R.id.appBar)),
                     withText(f.getTitle()), isDisplayed()), 1000));
         }

File: core/src/main/java/de/danoeh/antennapod/core/storage/NavDrawerData.java
Patch:
@@ -61,7 +61,7 @@ public static class FolderDrawerItem extends DrawerItem {
         public boolean isOpen;
 
         public FolderDrawerItem(String name) {
-            super(DrawerItem.Type.FOLDER, name.hashCode() & ~0xFFF); // Drop lower 12 bits for item ids
+            super(DrawerItem.Type.FOLDER, (long) name.hashCode() << 32);
             this.name = name;
         }
 

File: app/src/main/java/de/danoeh/antennapod/view/viewholder/DownloadItemViewHolder.java
Patch:
@@ -20,13 +20,15 @@ public class DownloadItemViewHolder extends RecyclerView.ViewHolder {
     public final TextView type;
     public final TextView date;
     public final TextView reason;
+    public final TextView tapForDetails;
 
     public DownloadItemViewHolder(Context context, ViewGroup parent) {
         super(LayoutInflater.from(context).inflate(R.layout.downloadlog_item, parent, false));
         date = itemView.findViewById(R.id.txtvDate);
         type = itemView.findViewById(R.id.txtvType);
         icon = itemView.findViewById(R.id.txtvIcon);
         reason = itemView.findViewById(R.id.txtvReason);
+        tapForDetails = itemView.findViewById(R.id.txtvTapForDetails);
         secondaryActionButton = itemView.findViewById(R.id.secondaryActionButton);
         secondaryActionIcon = itemView.findViewById(R.id.secondaryActionIcon);
         title = itemView.findViewById(R.id.txtvTitle);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java
Patch:
@@ -58,6 +58,9 @@ public FeedHandlerResult call() {
             e.printStackTrace();
             successful = false;
             reason = DownloadError.ERROR_UNSUPPORTED_TYPE;
+            if ("html".equalsIgnoreCase(e.getRootElement())) {
+                reason = DownloadError.ERROR_UNSUPPORTED_TYPE_HTML;
+            }
             reasonDetailed = e.getMessage();
         } catch (InvalidFeedException e) {
             e.printStackTrace();

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/UnsupportedFeedtypeException.java
Patch:
@@ -36,9 +36,6 @@ public String getMessage() {
         if (message != null) {
             return message;
         } else if (type == TypeGetter.Type.INVALID) {
-            if ("html".equals(rootElement)) {
-                return "The server returned a website, not a podcast feed";
-            }
             return "Invalid type";
         } else {
             return "Type " + type + " not supported";

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -267,6 +267,9 @@ protected void download() {
                         onFail(DownloadError.ERROR_IO_BLOCKED, e.getMessage());
                         return;
                     }
+                } else if (message.contains("Trust anchor for certification path not found")) {
+                    onFail(DownloadError.ERROR_CERTIFICATE, e.getMessage());
+                    return;
                 }
             }
             onFail(DownloadError.ERROR_IO_ERROR, e.getMessage());

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -26,7 +26,8 @@ public enum DownloadError {
     ERROR_IO_WRONG_SIZE(17, R.string.download_error_wrong_size),
     ERROR_IO_BLOCKED(18, R.string.download_error_blocked),
     ERROR_UNSUPPORTED_TYPE_HTML(19, R.string.download_error_unsupported_type_html),
-    ERROR_NOT_FOUND(20, R.string.download_error_not_found);
+    ERROR_NOT_FOUND(20, R.string.download_error_not_found),
+    ERROR_CERTIFICATE(21, R.string.download_error_certificate);
 
     private final int code;
     private final int resId;

File: app/src/main/java/de/danoeh/antennapod/view/viewholder/DownloadItemViewHolder.java
Patch:
@@ -20,13 +20,15 @@ public class DownloadItemViewHolder extends RecyclerView.ViewHolder {
     public final TextView type;
     public final TextView date;
     public final TextView reason;
+    public final TextView tapForDetails;
 
     public DownloadItemViewHolder(Context context, ViewGroup parent) {
         super(LayoutInflater.from(context).inflate(R.layout.downloadlog_item, parent, false));
         date = itemView.findViewById(R.id.txtvDate);
         type = itemView.findViewById(R.id.txtvType);
         icon = itemView.findViewById(R.id.txtvIcon);
         reason = itemView.findViewById(R.id.txtvReason);
+        tapForDetails = itemView.findViewById(R.id.txtvTapForDetails);
         secondaryActionButton = itemView.findViewById(R.id.secondaryActionButton);
         secondaryActionIcon = itemView.findViewById(R.id.secondaryActionIcon);
         title = itemView.findViewById(R.id.txtvTitle);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -137,6 +137,9 @@ protected void download() {
                 } else if (response.code() == HttpURLConnection.HTTP_FORBIDDEN) {
                     error = DownloadError.ERROR_FORBIDDEN;
                     details = String.valueOf(response.code());
+                } else if (response.code() == HttpURLConnection.HTTP_NOT_FOUND) {
+                    error = DownloadError.ERROR_NOT_FOUND;
+                    details = String.valueOf(response.code());
                 } else {
                     error = DownloadError.ERROR_HTTP_DATA_ERROR;
                     details = String.valueOf(response.code());

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java
Patch:
@@ -58,6 +58,9 @@ public FeedHandlerResult call() {
             e.printStackTrace();
             successful = false;
             reason = DownloadError.ERROR_UNSUPPORTED_TYPE;
+            if ("html".equalsIgnoreCase(e.getRootElement())) {
+                reason = DownloadError.ERROR_UNSUPPORTED_TYPE_HTML;
+            }
             reasonDetailed = e.getMessage();
         } catch (InvalidFeedException e) {
             e.printStackTrace();

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/UnsupportedFeedtypeException.java
Patch:
@@ -36,9 +36,6 @@ public String getMessage() {
         if (message != null) {
             return message;
         } else if (type == TypeGetter.Type.INVALID) {
-            if ("html".equals(rootElement)) {
-                return "The server returned a website, not a podcast feed";
-            }
             return "Invalid type";
         } else {
             return "Type " + type + " not supported";

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -23,7 +23,8 @@ public enum DownloadError {
     ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized),
     ERROR_FILE_TYPE(15, R.string.download_error_file_type_type),
     ERROR_FORBIDDEN(16, R.string.download_error_forbidden),
-    ERROR_IO_WRONG_SIZE(17, R.string.download_wrong_size);
+    ERROR_IO_WRONG_SIZE(17, R.string.download_wrong_size),
+    ERROR_IO_BLOCKED(18, R.string.download_blocked);
 
     private final int code;
     private final int resId;

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -23,7 +23,7 @@ public enum DownloadError {
 	ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized),
 	ERROR_FILE_TYPE(15, R.string.download_error_file_type_type),
 	ERROR_FORBIDDEN(16, R.string.download_error_forbidden),
-	ERROR_IO_WRONG_SIZE(17, R.string.download_error_forbidden);
+	ERROR_IO_WRONG_SIZE(17, R.string.download_wrong_size);
 
 	private final int code;
 	private final int resId;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -640,7 +640,9 @@ private void shutdown() {
         // If the service was run for a very short time, the system may delay closing
         // the notification. Set the notification text now so that a misleading message
         // is not left on the notification.
-        notificationUpdater.run();
+        if (notificationUpdater != null) {
+            notificationUpdater.run();
+        }
         cancelNotificationUpdater();
         stopForeground(true);
         stopSelf();

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -36,6 +36,7 @@
 import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
+import de.danoeh.antennapod.core.util.ChapterUtils;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.TimeSpeedConverter;
@@ -321,7 +322,7 @@ private void loadMediaInfo() {
         disposable = Maybe.create(emitter -> {
             Playable media = controller.getMedia();
             if (media != null) {
-                media.loadChapterMarks(getContext());
+                ChapterUtils.loadChapters(media, getContext());
                 emitter.onSuccess(media);
             } else {
                 emitter.onComplete();

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -23,7 +23,7 @@ public enum DownloadError {
 	ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized),
 	ERROR_FILE_TYPE(15, R.string.download_error_file_type_type),
 	ERROR_FORBIDDEN(16, R.string.download_error_forbidden),
-	ERROR_IO_WRONG_SIZE(17, R.string.download_error_forbidden);
+	ERROR_IO_WRONG_SIZE(17, R.string.download_wrong_size);
 
 	private final int code;
 	private final int resId;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -640,7 +640,9 @@ private void shutdown() {
         // If the service was run for a very short time, the system may delay closing
         // the notification. Set the notification text now so that a misleading message
         // is not left on the notification.
-        notificationUpdater.run();
+        if (notificationUpdater != null) {
+            notificationUpdater.run();
+        }
         cancelNotificationUpdater();
         stopForeground(true);
         stopSelf();

File: core/src/main/java/de/danoeh/antennapod/core/util/ChapterUtils.java
Patch:
@@ -112,6 +112,9 @@ private static List<Chapter> readOggChaptersFromInputStream(InputStream input) t
         VorbisCommentChapterReader reader = new VorbisCommentChapterReader();
         reader.readInputStream(input);
         List<Chapter> chapters = reader.getChapters();
+        if (chapters == null) {
+            return Collections.emptyList();
+        }
         Collections.sort(chapters, new ChapterStartTimeComparator());
         enumerateEmptyChapterTitles(chapters);
         if (chaptersValid(chapters)) {

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -186,16 +186,16 @@ public void onSlide(@NonNull View view, float slideOffset) {
         }
     };
 
-    public void setupToolbarToggle(@Nullable Toolbar toolbar) {
+    public void setupToolbarToggle(@NonNull Toolbar toolbar, boolean displayUpArrow) {
         if (drawerLayout != null) { // Tablet layout does not have a drawer
             drawerLayout.removeDrawerListener(drawerToggle);
             drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar,
                     R.string.drawer_open, R.string.drawer_close);
             drawerLayout.addDrawerListener(drawerToggle);
             drawerToggle.syncState();
-            drawerToggle.setDrawerIndicatorEnabled(getSupportFragmentManager().getBackStackEntryCount() == 0);
+            drawerToggle.setDrawerIndicatorEnabled(!displayUpArrow);
             drawerToggle.setToolbarNavigationClickListener(v -> getSupportFragmentManager().popBackStack());
-        } else if (getSupportFragmentManager().getBackStackEntryCount() == 0) {
+        } else if (!displayUpArrow) {
             toolbar.setNavigationIcon(null);
         } else {
             toolbar.setNavigationIcon(ThemeUtils.getDrawableFromAttr(this, R.attr.homeAsUpIndicator));

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -186,16 +186,16 @@ public void onSlide(@NonNull View view, float slideOffset) {
         }
     };
 
-    public void setupToolbarToggle(@Nullable Toolbar toolbar) {
+    public void setupToolbarToggle(@NonNull Toolbar toolbar, boolean displayUpArrow) {
         if (drawerLayout != null) { // Tablet layout does not have a drawer
             drawerLayout.removeDrawerListener(drawerToggle);
             drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar,
                     R.string.drawer_open, R.string.drawer_close);
             drawerLayout.addDrawerListener(drawerToggle);
             drawerToggle.syncState();
-            drawerToggle.setDrawerIndicatorEnabled(getSupportFragmentManager().getBackStackEntryCount() == 0);
+            drawerToggle.setDrawerIndicatorEnabled(!displayUpArrow);
             drawerToggle.setToolbarNavigationClickListener(v -> getSupportFragmentManager().popBackStack());
-        } else if (getSupportFragmentManager().getBackStackEntryCount() == 0) {
+        } else if (!displayUpArrow) {
             toolbar.setNavigationIcon(null);
         } else {
             toolbar.setNavigationIcon(ThemeUtils.getDrawableFromAttr(this, R.attr.homeAsUpIndicator));

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AutoDownloadPreferencesFragment.java
Patch:
@@ -174,7 +174,9 @@ private void buildEpisodeCleanupPreference() {
         String[] entries = new String[values.length];
         for (int x = 0; x < values.length; x++) {
             int v = Integer.parseInt(values[x]);
-            if (v == UserPreferences.EPISODE_CLEANUP_QUEUE) {
+            if (v == UserPreferences.EPISODE_CLEANUP_EXCEPT_FAVORITE) {
+                entries[x] =  res.getString(R.string.episode_cleanup_except_favorite_removal);
+            } else if (v == UserPreferences.EPISODE_CLEANUP_QUEUE) {
                 entries[x] = res.getString(R.string.episode_cleanup_queue_removal);
             } else if (v == UserPreferences.EPISODE_CLEANUP_NULL){
                 entries[x] = res.getString(R.string.episode_cleanup_never);

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -216,7 +216,7 @@ private void configureForOrientation(Configuration newConfig) {
                 imgvCover.setLayoutParams(params);
             }
         } else {
-            double percentageHeight = ratio * 0.8;
+            double percentageHeight = ratio * 0.6;
             mainContainer.setOrientation(LinearLayout.HORIZONTAL);
             if (newConfig.screenHeightDp > 0) {
                 params.height = (int) (convertDpToPixel(newConfig.screenHeightDp) * percentageHeight);

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -134,7 +134,7 @@ private static void loadTagsOfFeedItemList(List<FeedItem> items) {
      *
      * @param items The FeedItems whose Feed-objects should be loaded.
      */
-    public static void loadFeedDataOfFeedItemList(List<FeedItem> items) {
+    private static void loadFeedDataOfFeedItemList(List<FeedItem> items) {
         List<Feed> feeds = getFeedList();
 
         Map<Long, Feed> feedIndex = new ArrayMap<>(feeds.size());

File: core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java
Patch:
@@ -474,7 +474,7 @@ private synchronized void processEpisodeActions(List<EpisodeAction> remoteAction
             }
         }
         DBWriter.removeQueueItem(getApplicationContext(), false, queueToBeRemoved.toArray());
-        DBReader.loadFeedDataOfFeedItemList(updatedItems);
+        DBReader.loadAdditionalFeedItemListData(updatedItems);
         DBWriter.setItemList(updatedItems);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -134,7 +134,7 @@ private static void loadTagsOfFeedItemList(List<FeedItem> items) {
      *
      * @param items The FeedItems whose Feed-objects should be loaded.
      */
-    private static void loadFeedDataOfFeedItemList(List<FeedItem> items) {
+    public static void loadFeedDataOfFeedItemList(List<FeedItem> items) {
         List<Feed> feeds = getFeedList();
 
         Map<Long, Feed> feedIndex = new ArrayMap<>(feeds.size());

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -777,6 +777,7 @@ public static Future<?> setItemList(final List<FeedItem> items) {
             adapter.open();
             adapter.setFeedItemlist(items);
             adapter.close();
+            EventBus.getDefault().post(FeedItemEvent.updated(items));
         });
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java
Patch:
@@ -474,6 +474,7 @@ private synchronized void processEpisodeActions(List<EpisodeAction> remoteAction
             }
         }
         DBWriter.removeQueueItem(getApplicationContext(), false, queueToBeRemoved.toArray());
+        DBReader.loadFeedDataOfFeedItemList(updatedItems);
         DBWriter.setItemList(updatedItems);
     }
 

File: app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java
Patch:
@@ -10,6 +10,7 @@
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.ActivityTestRule;
 
+import de.danoeh.antennapod.core.feed.FeedItemFilter;
 import org.awaitility.Awaitility;
 import org.hamcrest.Matcher;
 import org.junit.After;
@@ -252,7 +253,7 @@ protected void startLocalPlayback() {
         onView(isRoot()).perform(waitForView(withText(R.string.all_episodes_short_label), 1000));
         onView(withText(R.string.all_episodes_short_label)).perform(click());
 
-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10);
+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10, FeedItemFilter.unfiltered());
         Matcher<View> allEpisodesMatcher = allOf(withId(android.R.id.list), isDisplayed(), hasMinimumChildCount(2));
         onView(isRoot()).perform(waitForView(allEpisodesMatcher, 1000));
         onView(allEpisodesMatcher).perform(actionOnItemAtPosition(0, clickChildViewWithId(R.id.secondaryActionButton)));
@@ -287,7 +288,7 @@ protected void replayEpisodeCheck(boolean followQueue) throws Exception {
         uiTestUtils.addLocalFeedData(true);
         DBWriter.clearQueue().get();
         activityTestRule.launchActivity(new Intent());
-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10);
+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10, FeedItemFilter.unfiltered());
 
         startLocalPlayback();
         FeedMedia media = episodes.get(0).getMedia();

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -104,13 +104,12 @@ protected boolean shouldUpdatedItemRemainInList(FeedItem item) {
     @NonNull
     @Override
     protected List<FeedItem> loadData() {
-        return feedItemFilter.filter(DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE));
+        return DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE, feedItemFilter);
     }
 
     @NonNull
     @Override
     protected List<FeedItem> loadMoreData() {
-        return feedItemFilter.filter(DBReader.getRecentlyPublishedEpisodes((page - 1) * EPISODES_PER_PAGE,
-                EPISODES_PER_PAGE));
+        return DBReader.getRecentlyPublishedEpisodes((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE, feedItemFilter);
     }
 }

File: app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java
Patch:
@@ -17,10 +17,8 @@
 import org.junit.runner.RunWith;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Date;
 import java.util.List;
-import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.TimeUnit;
 
 import de.danoeh.antennapod.core.feed.Feed;

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -11,7 +11,6 @@
 import java.util.List;
 
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.filters.LargeTest;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;

File: app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java
Patch:
@@ -42,9 +42,9 @@
 import static de.test.antennapod.EspressoTestUtils.onDrawerItem;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
 import static de.test.antennapod.NthMatcher.first;
-import static junit.framework.TestCase.assertTrue;
 import static org.hamcrest.Matchers.allOf;
 import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 /**
  * User interface tests for MainActivity drawer.

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -43,9 +43,9 @@
 import static de.test.antennapod.EspressoTestUtils.clickPreference;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
-import static junit.framework.TestCase.assertTrue;
 import static org.hamcrest.Matchers.endsWith;
 import static org.hamcrest.Matchers.not;
+import static org.junit.Assert.assertTrue;
 
 @LargeTest
 public class PreferencesTest {

File: app/src/androidTest/java/de/test/antennapod/ui/QueueFragmentTest.java
Patch:
@@ -1,15 +1,12 @@
 package de.test.antennapod.ui;
 
 import android.content.Intent;
-import android.view.View;
-import androidx.test.espresso.Espresso;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.fragment.QueueFragment;
 import de.test.antennapod.EspressoTestUtils;
-import org.hamcrest.Matcher;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;

File: app/src/androidTest/java/de/test/antennapod/ui/SpeedChangeTest.java
Patch:
@@ -14,7 +14,6 @@
 import de.danoeh.antennapod.core.service.playback.PlayerStatus;
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
-import de.danoeh.antennapod.fragment.ExternalPlayerFragment;
 import de.danoeh.antennapod.fragment.QueueFragment;
 import de.test.antennapod.EspressoTestUtils;
 import de.test.antennapod.IgnoreOnCi;
@@ -37,8 +36,6 @@
 import static androidx.test.espresso.matcher.ViewMatchers.withText;
 import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
-import static de.test.antennapod.NthMatcher.first;
-import static org.hamcrest.Matchers.allOf;
 
 /**
  * User interface tests for changing the playback speed.

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtilsTest.java
Patch:
@@ -6,7 +6,6 @@
 import java.util.List;
 
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.filters.LargeTest;
 import androidx.test.filters.MediumTest;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportActivity.java
Patch:
@@ -17,9 +17,8 @@
 import de.danoeh.antennapod.asynctask.OpmlImportWorker;
 import de.danoeh.antennapod.core.export.opml.OpmlElement;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
-import de.danoeh.antennapod.core.util.LangUtils;
+
 import org.apache.commons.io.ByteOrderMark;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.io.input.BOMInputStream;
 import org.apache.commons.lang3.ArrayUtils;
 

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadlistAdapter.java
Patch:
@@ -65,6 +65,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
         holder.title.setText(request.getTitle());
         holder.secondaryActionIcon.setImageResource(ThemeUtils.getDrawableFromAttr(context, R.attr.navigation_cancel));
+        holder.secondaryActionButton.setContentDescription(context.getString(R.string.cancel_download_label));
         holder.secondaryActionButton.setTag(downloader);
         holder.secondaryActionButton.setOnClickListener(butSecondaryListener);
         holder.secondaryActionProgress.setPercentage(0, request);

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistDescriptionAdapter.java
Patch:
@@ -13,8 +13,6 @@
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.feed.MediaType;
-import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
-import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.playback.RemoteMedia;
 import de.danoeh.antennapod.core.feed.FeedItem;

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -75,7 +75,7 @@ public NavListAdapter(ItemAccess itemAccess, Activity context) {
     }
 
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
-        if (key.equals(UserPreferences.PREF_HIDDEN_DRAWER_ITEMS)) {
+        if (UserPreferences.PREF_HIDDEN_DRAWER_ITEMS.equals(key)) {
             loadItems();
         }
     }

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -6,7 +6,6 @@
 import android.view.MenuInflater;
 import android.view.MotionEvent;
 import android.view.View;
-import androidx.core.view.MotionEventCompat;
 import androidx.recyclerview.widget.ItemTouchHelper;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -13,8 +13,6 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 
-import com.bumptech.glide.Glide;
-
 import java.lang.ref.WeakReference;
 import java.text.NumberFormat;
 import java.util.Locale;
@@ -23,7 +21,6 @@
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.LocalFeedUpdater;
-import de.danoeh.antennapod.fragment.AddFeedFragment;
 import de.danoeh.antennapod.fragment.FeedItemlistFragment;
 import jp.shts.android.library.TriangleLabelView;
 

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/PlayLocalActionButton.java
Patch:
@@ -7,11 +7,8 @@
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
 import de.danoeh.antennapod.core.feed.MediaType;
-import de.danoeh.antennapod.core.preferences.UsageStatistics;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
-import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter;
-import de.danoeh.antennapod.dialog.StreamingConfirmationDialog;
 
 public class PlayLocalActionButton extends ItemActionButton {
 

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/VisitWebsiteActionButton.java
Patch:
@@ -1,8 +1,6 @@
 package de.danoeh.antennapod.adapter.actionbutton;
 
 import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
 import android.view.View;
 import androidx.annotation.AttrRes;
 import androidx.annotation.StringRes;

File: app/src/main/java/de/danoeh/antennapod/asynctask/DocumentFileExportWorker.java
Patch:
@@ -9,10 +9,10 @@
 import java.io.IOException;
 import java.io.OutputStream;
 import java.io.OutputStreamWriter;
+import java.nio.charset.Charset;
 
 import de.danoeh.antennapod.core.export.ExportWriter;
 import de.danoeh.antennapod.core.storage.DBReader;
-import de.danoeh.antennapod.core.util.LangUtils;
 import io.reactivex.Observable;
 
 /**
@@ -44,7 +44,7 @@ public Observable<DocumentFile> exportObservable() {
                 if (outputStream == null) {
                     throw new IOException();
                 }
-                writer = new OutputStreamWriter(outputStream, LangUtils.UTF_8);
+                writer = new OutputStreamWriter(outputStream, Charset.forName("UTF-8"));
                 exportWriter.writeDocument(DBReader.getFeedList(), writer, context);
                 subscriber.onNext(output);
             } catch (IOException e) {

File: app/src/main/java/de/danoeh/antennapod/asynctask/ExportWorker.java
Patch:
@@ -8,11 +8,11 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
+import java.nio.charset.Charset;
 
 import de.danoeh.antennapod.core.export.ExportWriter;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.DBReader;
-import de.danoeh.antennapod.core.util.LangUtils;
 import io.reactivex.Observable;
 
 /**
@@ -47,7 +47,7 @@ public Observable<File> exportObservable() {
         return Observable.create(subscriber -> {
             OutputStreamWriter writer = null;
             try {
-                writer = new OutputStreamWriter(new FileOutputStream(output), LangUtils.UTF_8);
+                writer = new OutputStreamWriter(new FileOutputStream(output), Charset.forName("UTF-8"));
                 exportWriter.writeDocument(DBReader.getFeedList(), writer, context);
                 subscriber.onNext(output);
             } catch (IOException e) {

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -2,6 +2,7 @@
 
 import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.core.ClientConfig;
+import de.danoeh.antennapod.core.storage.APDownloadAlgorithm;
 
 /**
  * Configures the ClientConfig class of the core package.
@@ -15,7 +16,7 @@ private ClientConfigurator(){}
         ClientConfig.applicationCallbacks = new ApplicationCallbacksImpl();
         ClientConfig.downloadServiceCallbacks = new DownloadServiceCallbacksImpl();
         ClientConfig.playbackServiceCallbacks = new PlaybackServiceCallbacksImpl();
-        ClientConfig.dbTasksCallbacks = new DBTasksCallbacksImpl();
+        ClientConfig.automaticDownloadAlgorithm = new APDownloadAlgorithm();
         ClientConfig.castCallbacks = new CastCallbackImpl();
     }
 }

File: app/src/main/java/de/danoeh/antennapod/discovery/ItunesPodcastSearcher.java
Patch:
@@ -1,7 +1,5 @@
 package de.danoeh.antennapod.discovery;
 
-import android.content.Context;
-import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
 import io.reactivex.Single;
 import io.reactivex.SingleOnSubscribe;

File: app/src/main/java/de/danoeh/antennapod/discovery/PodcastSearcher.java
Patch:
@@ -1,8 +1,6 @@
 package de.danoeh.antennapod.discovery;
 
 import io.reactivex.Single;
-import io.reactivex.disposables.Disposable;
-import io.reactivex.functions.Consumer;
 import java.util.List;
 
 public interface PodcastSearcher {

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -4,7 +4,6 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import androidx.annotation.NonNull;

File: app/src/main/java/de/danoeh/antennapod/fragment/ChaptersFragment.java
Patch:
@@ -106,6 +106,7 @@ public void onStop() {
     @Subscribe(threadMode = ThreadMode.MAIN)
     public void onEventMainThread(PlaybackPositionEvent event) {
         updateChapterSelection(getCurrentChapter(media));
+        adapter.notifyTimeChanged(event.getPosition());
     }
 
     private int getCurrentChapter(Playable media) {

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -4,7 +4,6 @@
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -4,7 +4,6 @@
 import android.content.ClipData;
 import android.content.ClipboardManager;
 import android.content.Context;
-import android.content.res.TypedArray;
 import android.os.Bundle;
 
 import androidx.annotation.NonNull;
@@ -13,7 +12,6 @@
 import androidx.fragment.app.ListFragment;
 import android.util.Log;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.ListView;
@@ -176,7 +174,7 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
     public boolean onOptionsItemSelected(@NonNull MenuItem item) {
         if (!super.onOptionsItemSelected(item)) {
             switch (item.getItemId()) {
-                case R.id.clear_history_item:
+                case R.id.clear_logs_item:
                     DBWriter.clearDownloadLog();
                     return true;
                 case R.id.refresh_item:

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -8,10 +8,8 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.core.util.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 import de.danoeh.antennapod.core.util.playback.Timeline;
 import de.danoeh.antennapod.view.ShownotesWebView;

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.fragment;
 
 import android.os.Bundle;
-import android.view.MenuInflater;
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.ItemTouchHelper;

File: app/src/main/java/de/danoeh/antennapod/fragment/OnlineSearchFragment.java
Patch:
@@ -90,7 +90,6 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         // Inflate the layout for this fragment
         View root = inflater.inflate(R.layout.fragment_itunes_search, container, false);
-        setupToolbar(root.findViewById(R.id.toolbar));
         root.findViewById(R.id.spinner_country).setVisibility(INVISIBLE);
         gridView = root.findViewById(R.id.gridView);
         adapter = new ItunesAdapter(getActivity(), new ArrayList<>());
@@ -110,6 +109,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         txtvEmpty = root.findViewById(android.R.id.empty);
         TextView txtvPoweredBy = root.findViewById(R.id.search_powered_by);
         txtvPoweredBy.setText(getString(R.string.search_powered_by, searchProvider.getName()));
+        setupToolbar(root.findViewById(R.id.toolbar));
         return root;
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/RunningDownloadsFragment.java
Patch:
@@ -6,7 +6,6 @@
 import androidx.fragment.app.ListFragment;
 import android.util.Log;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.ListView;

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/NetworkPreferencesFragment.java
Patch:
@@ -15,7 +15,6 @@
 
 import java.util.Calendar;
 import java.util.GregorianCalendar;
-import java.util.Locale;
 import java.util.concurrent.TimeUnit;
 
 public class NetworkPreferencesFragment extends PreferenceFragmentCompat {
@@ -97,8 +96,7 @@ private void setUpdateIntervalText() {
     private void setParallelDownloadsText(int downloads) {
         final Resources res = getActivity().getResources();
 
-        String s = String.format(Locale.getDefault(), "%d%s",
-                downloads, res.getString(R.string.parallel_downloads_suffix));
+        String s = res.getString(R.string.parallel_downloads, downloads);
         findPreference(UserPreferences.PREF_PARALLEL_DOWNLOADS).setSummary(s);
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/AboutFragment.java
Patch:
@@ -33,7 +33,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             return true;
         });
         findPreference("about_privacy_policy").setOnPreferenceClickListener((preference) -> {
-            IntentUtils.openInBrowser(getContext(), "https://antennapod.org/privacy.html");
+            IntentUtils.openInBrowser(getContext(), "https://antennapod.org/privacy/");
             return true;
         });
         findPreference("about_licenses").setOnPreferenceClickListener((preference) -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/DevelopersFragment.java
Patch:
@@ -6,8 +6,6 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.ListFragment;
-import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.PreferenceActivity;
 import de.danoeh.antennapod.adapter.SimpleIconListAdapter;
 import io.reactivex.Single;
 import io.reactivex.SingleOnSubscribe;

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/SpecialThanksFragment.java
Patch:
@@ -6,8 +6,6 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.ListFragment;
-import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.PreferenceActivity;
 import de.danoeh.antennapod.adapter.SimpleIconListAdapter;
 import io.reactivex.Single;
 import io.reactivex.SingleOnSubscribe;

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/about/TranslatorsFragment.java
Patch:
@@ -6,8 +6,6 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.ListFragment;
-import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.PreferenceActivity;
 import de.danoeh.antennapod.adapter.SimpleIconListAdapter;
 import io.reactivex.Single;
 import io.reactivex.SingleOnSubscribe;

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -4,7 +4,6 @@
 import android.content.DialogInterface;
 import android.util.Log;
 import android.view.Menu;
-import android.view.MenuInflater;
 import android.view.MenuItem;
 
 import androidx.annotation.NonNull;

File: app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -7,7 +7,6 @@
 
 import androidx.annotation.VisibleForTesting;
 import android.util.Log;
-import android.widget.Toast;
 
 import java.lang.ref.WeakReference;
 import java.util.concurrent.TimeUnit;

File: core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -9,6 +9,7 @@
 import de.danoeh.antennapod.core.preferences.UsageStatistics;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
+import de.danoeh.antennapod.core.storage.AutomaticDownloadAlgorithm;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.gui.NotificationUtils;
@@ -32,7 +33,7 @@ public class ClientConfig {
 
     public static PlaybackServiceCallbacks playbackServiceCallbacks;
 
-    public static DBTasksCallbacks dbTasksCallbacks;
+    public static AutomaticDownloadAlgorithm automaticDownloadAlgorithm;
 
     public static CastCallbacks castCallbacks;
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java
Patch:
@@ -1,10 +1,8 @@
 package de.danoeh.antennapod.core.feed;
 
 import android.text.TextUtils;
-import android.util.Log;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
 import de.danoeh.antennapod.core.storage.DBReader;

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideModule.java
Patch:
@@ -10,7 +10,6 @@
 import com.bumptech.glide.load.DecodeFormat;
 import com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory;
 import com.bumptech.glide.load.model.StringLoader;
-import com.bumptech.glide.load.model.UriLoader;
 import com.bumptech.glide.module.AppGlideModule;
 
 import de.danoeh.antennapod.core.util.EmbeddedChapterImage;

File: core/src/main/java/de/danoeh/antennapod/core/preferences/PlaybackPreferences.java
Patch:
@@ -100,7 +100,7 @@ public static void init(Context context) {
     }
 
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
-        if (key.equals(PREF_CURRENT_PLAYER_STATUS)) {
+        if (PREF_CURRENT_PLAYER_STATUS.equals(key)) {
             EventBus.getDefault().post(new PlayerStatusEvent());
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java
Patch:
@@ -148,7 +148,7 @@ public void updateReport(List<DownloadStatus> reportQueue, boolean showAutoDownl
                 id = R.id.notification_auto_download_report;
                 content = createAutoDownloadNotificationContent(reportQueue);
             } else {
-                channelId = NotificationUtils.CHANNEL_ID_ERROR;
+                channelId = NotificationUtils.CHANNEL_ID_DOWNLOAD_ERROR;
                 titleId = R.string.download_report_title;
                 iconId = R.drawable.ic_notification_sync_error;
                 intent = ClientConfig.downloadServiceCallbacks.getReportNotificationContentIntent(context);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FailedDownloadHandler.java
Patch:
@@ -3,7 +3,6 @@
 import android.util.Log;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.service.download.DownloadRequest;
-import de.danoeh.antennapod.core.service.download.DownloadStatus;
 import de.danoeh.antennapod.core.storage.DBWriter;
 
 /**

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java
Patch:
@@ -69,7 +69,7 @@ public boolean isIconCached() {
     }
 
     public void loadIcon() {
-        int iconSize = context.getResources().getDimensionPixelSize(android.R.dimen.notification_large_icon_width);
+        int iconSize = (int) (128 * context.getResources().getDisplayMetrics().density);
         try {
             icon = Glide.with(context)
                     .asBitmap()

File: core/src/main/java/de/danoeh/antennapod/core/ssl/BackportTrustManager.java
Patch:
@@ -45,6 +45,8 @@ public static X509TrustManager create() {
                     new ByteArrayInputStream(BackportCaCerts.COMODO.getBytes(Charset.forName("UTF-8")))));
             keystore.setCertificateEntry("SECTIGO_USER_TRUST_CA", cf.generateCertificate(
                     new ByteArrayInputStream(BackportCaCerts.SECTIGO_USER_TRUST.getBytes(Charset.forName("UTF-8")))));
+            keystore.setCertificateEntry("LETSENCRYPT_ISRG_CA", cf.generateCertificate(
+                    new ByteArrayInputStream(BackportCaCerts.LETSENCRYPT_ISRG.getBytes(Charset.forName("UTF-8")))));
 
             List<X509TrustManager> managers = new ArrayList<>();
             managers.add(getSystemTrustManager(keystore));

File: core/src/main/java/de/danoeh/antennapod/core/storage/APDownloadAlgorithm.java
Patch:
@@ -65,7 +65,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {
                 Iterator<FeedItem> it = candidates.iterator();
                 while (it.hasNext()) {
                     FeedItem item = it.next();
-                    if (!item.isAutoDownloadable()) {
+                    if (!item.isAutoDownloadable() || item.getFeed().isLocalFeed()) {
                         it.remove();
                     }
                 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -7,10 +7,10 @@
 import android.text.TextUtils;
 import android.util.Log;
 
+import java.io.File;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
-import java.util.Date;
 import java.util.List;
 import java.util.Map;
 
@@ -799,7 +799,7 @@ public static List<StatisticsItem> getStatistics() {
                 feedTotalTime += media.getDuration() / 1000;
 
                 if (media.isDownloaded()) {
-                    totalDownloadSize = totalDownloadSize + media.getSize();
+                    totalDownloadSize += new File(media.getFile_url()).length();
                     episodesDownloadCount++;
                 }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedSearcher.java
Patch:
@@ -3,10 +3,8 @@
 import android.content.Context;
 import androidx.annotation.NonNull;
 import de.danoeh.antennapod.core.feed.Feed;
-import de.danoeh.antennapod.core.feed.FeedComponent;
 import de.danoeh.antennapod.core.feed.FeedItem;
 
-import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.ExecutionException;

File: core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java
Patch:
@@ -13,7 +13,7 @@
 /** Generates valid filenames for a given string. */
 public class FileNameGenerator {
     @VisibleForTesting
-    public static final int MAX_FILENAME_LENGTH = 255; // Limited by ext4
+    public static final int MAX_FILENAME_LENGTH = 242; // limited by CircleCI
     private static final int MD5_HEX_LENGTH = 32;
 
     private static final char[] validChars =

File: core/src/main/java/de/danoeh/antennapod/core/util/URLChecker.java
Patch:
@@ -9,7 +9,6 @@
 import okhttp3.HttpUrl;
 
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.List;
 
 /**

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/IPlayer.java
Patch:
@@ -35,6 +35,8 @@ public interface IPlayer {
     void setDataSource(String path) throws IllegalStateException, IOException,
             IllegalArgumentException, SecurityException;
 
+    void setDataSource(String streamUrl, String username, String password) throws IOException;
+
     void setDisplay(SurfaceHolder sh);
 
     void setPlaybackParams(float speed, boolean skipSilence);

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackServiceStarter.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -223,7 +223,7 @@ protected void download() {
                 // written file. This check cannot be made if compression was used
                 if (!isGzip && request.getSize() != DownloadStatus.SIZE_UNKNOWN &&
                         request.getSoFar() != request.getSize()) {
-                    onFail(DownloadError.ERROR_IO_ERROR, "Download completed but size: " +
+                    onFail(DownloadError.ERROR_IO_WRONG_SIZE, "Download completed but size: " +
                             request.getSoFar() + " does not equal expected size " + request.getSize());
                     return;
                 } else if (request.getSize() > 0 && request.getSoFar() == 0) {

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -1,6 +1,5 @@
 package de.danoeh.antennapod.adapter;
 
-import android.content.ContentResolver;
 import android.content.Context;
 
 import androidx.core.text.TextUtilsCompat;

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.fragment;
 
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.res.Configuration;
 import android.content.Intent;
 import android.graphics.LightingColorFilter;

File: core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java
Patch:
@@ -80,7 +80,7 @@ public Result doWork() {
         if (!GpodnetPreferences.loggedIn()) {
             return Result.success();
         }
-        syncServiceImpl = new GpodnetService(AntennapodHttpClient.getHttpClient(), GpodnetService.DEFAULT_BASE_HOST);
+        syncServiceImpl = new GpodnetService(AntennapodHttpClient.getHttpClient(), GpodnetPreferences.getHostname());
         SharedPreferences.Editor prefs = getApplicationContext().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE)
                 .edit();
         prefs.putLong(PREF_LAST_SYNC_ATTEMPT_TIMESTAMP, System.currentTimeMillis()).apply();

File: core/src/test/java/de/danoeh/antennapod/core/feed/LocalFeedUpdaterTest.java
Patch:
@@ -30,6 +30,7 @@
 import de.danoeh.antennapod.core.R;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.DBReader;
+import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 
 import static org.junit.Assert.assertEquals;
@@ -81,6 +82,7 @@ public void setUp() throws Exception {
 
     @After
     public void tearDown() {
+        DBWriter.tearDownTests();
         PodDBAdapter.tearDownTests();
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/APDownloadAlgorithm.java
Patch:
@@ -65,7 +65,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {
                 Iterator<FeedItem> it = candidates.iterator();
                 while (it.hasNext()) {
                     FeedItem item = it.next();
-                    if (!item.isAutoDownloadable()) {
+                    if (!item.isAutoDownloadable() || item.getFeed().isLocalFeed()) {
                         it.remove();
                     }
                 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/APDownloadAlgorithm.java
Patch:
@@ -65,7 +65,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {
                 Iterator<FeedItem> it = candidates.iterator();
                 while (it.hasNext()) {
                     FeedItem item = it.next();
-                    if (!item.isAutoDownloadable()) {
+                    if (!item.isAutoDownloadable() || item.getFeed().isLocalFeed()) {
                         it.remove();
                     }
                 }

File: core/src/main/java/de/danoeh/antennapod/core/ssl/BackportTrustManager.java
Patch:
@@ -45,6 +45,8 @@ public static X509TrustManager create() {
                     new ByteArrayInputStream(BackportCaCerts.COMODO.getBytes(Charset.forName("UTF-8")))));
             keystore.setCertificateEntry("SECTIGO_USER_TRUST_CA", cf.generateCertificate(
                     new ByteArrayInputStream(BackportCaCerts.SECTIGO_USER_TRUST.getBytes(Charset.forName("UTF-8")))));
+            keystore.setCertificateEntry("LETSENCRYPT_ISRG_CA", cf.generateCertificate(
+                    new ByteArrayInputStream(BackportCaCerts.LETSENCRYPT_ISRG.getBytes(Charset.forName("UTF-8")))));
 
             List<X509TrustManager> managers = new ArrayList<>();
             managers.add(getSystemTrustManager(keystore));

File: app/src/main/java/de/danoeh/antennapod/adapter/ChaptersListAdapter.java
Patch:
@@ -73,6 +73,7 @@ public void onBindViewHolder(@NonNull ChapterHolder holder, int position) {
             holder.link.setOnClickListener(v -> IntentUtils.openInBrowser(context, sc.getLink()));
         }
         holder.secondaryActionIcon.setImageResource(ThemeUtils.getDrawableFromAttr(context, R.attr.av_play));
+        holder.secondaryActionButton.setContentDescription(context.getString(R.string.play_chapter));
         holder.secondaryActionButton.setOnClickListener(v -> {
             if (callback != null) {
                 callback.onPlayChapterButtonClicked(position);

File: app/src/main/java/de/danoeh/antennapod/adapter/ChaptersListAdapter.java
Patch:
@@ -65,7 +65,7 @@ public void onBindViewHolder(@NonNull ChapterHolder holder, int position) {
         holder.duration.setText(context.getString(R.string.chapter_duration,
                 Converter.getDurationStringLocalized(context, (int) duration)));
 
-        if (sc.getLink() == null) {
+        if (TextUtils.isEmpty(sc.getLink())) {
             holder.link.setVisibility(View.GONE);
         } else {
             holder.link.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/adapter/ChaptersListAdapter.java
Patch:
@@ -73,6 +73,7 @@ public void onBindViewHolder(@NonNull ChapterHolder holder, int position) {
             holder.link.setOnClickListener(v -> IntentUtils.openInBrowser(context, sc.getLink()));
         }
         holder.secondaryActionIcon.setImageResource(ThemeUtils.getDrawableFromAttr(context, R.attr.av_play));
+        holder.secondaryActionButton.setContentDescription(context.getString(R.string.play_chapter));
         holder.secondaryActionButton.setOnClickListener(v -> {
             if (callback != null) {
                 callback.onPlayChapterButtonClicked(position);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1020,6 +1020,7 @@ private Playable getNextInQueue(final Playable currentMedia) {
      */
     private void onPlaybackEnded(MediaType mediaType, boolean stopPlaying) {
         Log.d(TAG, "Playback ended");
+        PlaybackPreferences.clearCurrentlyPlayingTemporaryPlaybackSpeed();
         if (stopPlaying) {
             taskManager.cancelPositionSaver();
             cancelPositionObserver();
@@ -1058,7 +1059,6 @@ private void onPlaybackEnded(MediaType mediaType, boolean stopPlaying) {
      */
     private void onPostPlayback(final Playable playable, boolean ended, boolean skipped,
                                 boolean playingNext) {
-        PlaybackPreferences.clearCurrentlyPlayingTemporaryPlaybackSpeed();
         if (playable == null) {
             Log.e(TAG, "Cannot do post-playback processing: media was null");
             return;

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -34,9 +34,9 @@
 import static de.test.antennapod.EspressoTestUtils.clickPreference;
 import static de.test.antennapod.EspressoTestUtils.openNavDrawer;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
-import static junit.framework.TestCase.assertTrue;
 import static org.hamcrest.Matchers.allOf;
 import static org.junit.Assert.assertThat;
+import static org.junit.Assert.assertTrue;
 
 /**
  * User interface tests for MainActivity

File: app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java
Patch:
@@ -42,9 +42,9 @@
 import static de.test.antennapod.EspressoTestUtils.onDrawerItem;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
 import static de.test.antennapod.NthMatcher.first;
-import static junit.framework.TestCase.assertTrue;
 import static org.hamcrest.Matchers.allOf;
 import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 /**
  * User interface tests for MainActivity drawer.

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -43,9 +43,9 @@
 import static de.test.antennapod.EspressoTestUtils.clickPreference;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
-import static junit.framework.TestCase.assertTrue;
 import static org.hamcrest.Matchers.endsWith;
 import static org.hamcrest.Matchers.not;
+import static org.junit.Assert.assertTrue;
 
 @LargeTest
 public class PreferencesTest {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -7,6 +7,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 
+import java.io.File;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
@@ -774,7 +775,7 @@ public static List<StatisticsItem> getStatistics() {
                 feedTotalTime += media.getDuration() / 1000;
 
                 if (media.isDownloaded()) {
-                    totalDownloadSize = totalDownloadSize + media.getSize();
+                    totalDownloadSize += new File(media.getFile_url()).length();
                     episodesDownloadCount++;
                 }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -445,7 +445,8 @@ public static synchronized Feed updateFeed(Context context, Feed newFeed, boolea
                     // as the most recent item
                     // (if the most recent date is null then we can assume there are no items
                     // and this is the first, hence 'new')
-                    if (priorMostRecentDate == null
+                    // New items that do not have a pubDate set are always marked as new
+                    if (item.getPubDate() == null || priorMostRecentDate == null
                             || priorMostRecentDate.before(item.getPubDate())
                             || priorMostRecentDate.equals(item.getPubDate())) {
                         Log.d(TAG, "Marking item published on " + item.getPubDate()

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -7,6 +7,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 
+import java.io.File;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
@@ -774,7 +775,7 @@ public static List<StatisticsItem> getStatistics() {
                 feedTotalTime += media.getDuration() / 1000;
 
                 if (media.isDownloaded()) {
-                    totalDownloadSize = totalDownloadSize + media.getSize();
+                    totalDownloadSize += new File(media.getFile_url()).length();
                     episodesDownloadCount++;
                 }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -191,7 +191,6 @@ private Feed addLocalFolder(Uri uri) throws DownloadRequestException {
             throw new IllegalArgumentException("Unable to retrieve document tree");
         }
         Feed dirFeed = new Feed(Feed.PREFIX_LOCAL_FOLDER + uri.toString(), null, documentFile.getName());
-        dirFeed.setDescription(getString(R.string.local_feed_description));
         dirFeed.setItems(Collections.emptyList());
         dirFeed.setSortOrder(SortOrder.EPISODE_TITLE_A_Z);
         Feed fromDatabase = DBTasks.updateFeed(getContext(), dirFeed, false);

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -445,7 +445,8 @@ public static synchronized Feed updateFeed(Context context, Feed newFeed, boolea
                     // as the most recent item
                     // (if the most recent date is null then we can assume there are no items
                     // and this is the first, hence 'new')
-                    if (priorMostRecentDate == null
+                    // New items that do not have a pubDate set are always marked as new
+                    if (item.getPubDate() == null || priorMostRecentDate == null
                             || priorMostRecentDate.before(item.getPubDate())
                             || priorMostRecentDate.equals(item.getPubDate())) {
                         Log.d(TAG, "Marking item published on " + item.getPubDate()

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -176,7 +176,7 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
     public boolean onOptionsItemSelected(@NonNull MenuItem item) {
         if (!super.onOptionsItemSelected(item)) {
             switch (item.getItemId()) {
-                case R.id.clear_history_item:
+                case R.id.clear_logs_item:
                     DBWriter.clearDownloadLog();
                     return true;
                 case R.id.refresh_item:

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -176,7 +176,7 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
     public boolean onOptionsItemSelected(@NonNull MenuItem item) {
         if (!super.onOptionsItemSelected(item)) {
             switch (item.getItemId()) {
-                case R.id.clear_history_item:
+                case R.id.clear_logs_item:
                     DBWriter.clearDownloadLog();
                     return true;
                 case R.id.refresh_item:

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -105,13 +105,12 @@ protected boolean shouldUpdatedItemRemainInList(FeedItem item) {
     @NonNull
     @Override
     protected List<FeedItem> loadData() {
-        return feedItemFilter.filter(DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE));
+        return DBReader.getRecentlyPublishedEpisodesFiltered(0, page * EPISODES_PER_PAGE, feedItemFilter);
     }
 
     @NonNull
     @Override
     protected List<FeedItem> loadMoreData() {
-        return feedItemFilter.filter(DBReader.getRecentlyPublishedEpisodes((page - 1) * EPISODES_PER_PAGE,
-                EPISODES_PER_PAGE));
+        return DBReader.getRecentlyPublishedEpisodesFiltered((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE, feedItemFilter);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/OnlineSearchFragment.java
Patch:
@@ -90,7 +90,6 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         // Inflate the layout for this fragment
         View root = inflater.inflate(R.layout.fragment_itunes_search, container, false);
-        setupToolbar(root.findViewById(R.id.toolbar));
         root.findViewById(R.id.spinner_country).setVisibility(INVISIBLE);
         gridView = root.findViewById(R.id.gridView);
         adapter = new ItunesAdapter(getActivity(), new ArrayList<>());
@@ -110,6 +109,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         txtvEmpty = root.findViewById(android.R.id.empty);
         TextView txtvPoweredBy = root.findViewById(R.id.search_powered_by);
         txtvPoweredBy.setText(getString(R.string.search_powered_by, searchProvider.getName()));
+        setupToolbar(root.findViewById(R.id.toolbar));
         return root;
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/OnlineSearchFragment.java
Patch:
@@ -90,7 +90,6 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         // Inflate the layout for this fragment
         View root = inflater.inflate(R.layout.fragment_itunes_search, container, false);
-        setupToolbar(root.findViewById(R.id.toolbar));
         root.findViewById(R.id.spinner_country).setVisibility(INVISIBLE);
         gridView = root.findViewById(R.id.gridView);
         adapter = new ItunesAdapter(getActivity(), new ArrayList<>());
@@ -110,6 +109,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         txtvEmpty = root.findViewById(android.R.id.empty);
         TextView txtvPoweredBy = root.findViewById(R.id.search_powered_by);
         txtvPoweredBy.setText(getString(R.string.search_powered_by, searchProvider.getName()));
+        setupToolbar(root.findViewById(R.id.toolbar));
         return root;
     }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -134,7 +134,9 @@ static class Holder {
 
     public interface ItemAccess {
         int getCount();
+
         NavDrawerData.DrawerItem getItem(int position);
+
         int getFeedCounter(long feedId);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -397,7 +397,8 @@ public void onItemClick(int position) {
                         long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();
                         if (getActivity() instanceof MainActivity) {
                             ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);
-                            ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);
+                            ((MainActivity) getActivity()).getBottomSheet()
+                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);
                         } else {
                             Intent intent = new Intent(getActivity(), MainActivity.class);
                             intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -369,7 +369,7 @@ private void reconnectLocalFolder(Uri uri) {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         () -> ((MainActivity) getActivity())
-                                .showSnackbarAbovePlayer(R.string.add_local_folder_success, Snackbar.LENGTH_SHORT),
+                                .showSnackbarAbovePlayer(android.R.string.ok, Snackbar.LENGTH_SHORT),
                         error -> ((MainActivity) getActivity())
                                 .showSnackbarAbovePlayer(error.getLocalizedMessage(), Snackbar.LENGTH_LONG));
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -369,7 +369,7 @@ private void reconnectLocalFolder(Uri uri) {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(
                         () -> ((MainActivity) getActivity())
-                                .showSnackbarAbovePlayer(R.string.add_local_folder_success, Snackbar.LENGTH_SHORT),
+                                .showSnackbarAbovePlayer(android.R.string.ok, Snackbar.LENGTH_SHORT),
                         error -> ((MainActivity) getActivity())
                                 .showSnackbarAbovePlayer(error.getLocalizedMessage(), Snackbar.LENGTH_LONG));
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -292,7 +292,7 @@ public boolean onMenuItemClick(MenuItem item) {
                 }
                 EpisodesApplyActionFragment fragment = EpisodesApplyActionFragment
                         .newInstance(feed.getItems(), actions);
-                ((MainActivity)getActivity()).loadChildFragment(fragment);
+                ((MainActivity) getActivity()).loadChildFragment(fragment);
                 return true;
             case R.id.rename_item:
                 new RenameFeedDialog(getActivity(), feed).show();

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -273,7 +273,8 @@ public void onConfirmButtonPressed(
                 return true;
             case R.id.episode_actions:
                 ((MainActivity) requireActivity()).loadChildFragment(
-                        EpisodesApplyActionFragment.newInstance(queue, ACTION_DELETE | ACTION_REMOVE_FROM_QUEUE  | ACTION_DOWNLOAD));
+                        EpisodesApplyActionFragment.newInstance(queue,
+                                ACTION_DELETE | ACTION_REMOVE_FROM_QUEUE  | ACTION_DOWNLOAD));
                 return true;
             case R.id.queue_sort_episode_title_asc:
                 setSortOrder(SortOrder.EPISODE_TITLE_A_Z);

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -154,7 +154,7 @@ public void onDestroyView() {
     private void setupToolbar(Toolbar toolbar) {
         toolbar.setTitle(R.string.search_label);
         toolbar.setNavigationOnClickListener(v -> getParentFragmentManager().popBackStack());
-        toolbar.inflateMenu(R.menu.gpodder_podcasts);
+        toolbar.inflateMenu(R.menu.search);
 
         MenuItem item = toolbar.getMenu().findItem(R.id.action_search);
         item.expandActionView();

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -166,6 +166,9 @@ public void onStateChanged(@NonNull View view, int state) {
         public void onSlide(@NonNull View view, float slideOffset) {
             AudioPlayerFragment audioPlayer = (AudioPlayerFragment) getSupportFragmentManager()
                     .findFragmentByTag(AudioPlayerFragment.TAG);
+            if (audioPlayer == null) {
+                return;
+            }
             float condensedSlideOffset = Math.max(0.0f, Math.min(0.2f, slideOffset - 0.2f)) / 0.2f;
             audioPlayer.getExternalPlayerHolder().setAlpha(1 - condensedSlideOffset);
             audioPlayer.getExternalPlayerHolder().setVisibility(

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -166,6 +166,9 @@ public void onStateChanged(@NonNull View view, int state) {
         public void onSlide(@NonNull View view, float slideOffset) {
             AudioPlayerFragment audioPlayer = (AudioPlayerFragment) getSupportFragmentManager()
                     .findFragmentByTag(AudioPlayerFragment.TAG);
+            if (audioPlayer == null) {
+                return;
+            }
             float condensedSlideOffset = Math.max(0.0f, Math.min(0.2f, slideOffset - 0.2f)) / 0.2f;
             audioPlayer.getExternalPlayerHolder().setAlpha(1 - condensedSlideOffset);
             audioPlayer.getExternalPlayerHolder().setVisibility(

File: app/src/main/java/de/danoeh/antennapod/dialog/StreamingConfirmationDialog.java
Patch:
@@ -20,7 +20,7 @@ public void show() {
         new AlertDialog.Builder(context)
                 .setTitle(R.string.stream_label)
                 .setMessage(R.string.confirm_mobile_streaming_notification_message)
-                .setPositiveButton(R.string.stream_label, (dialog, which) -> stream())
+                .setPositiveButton(R.string.confirm_mobile_streaming_button_once, (dialog, which) -> stream())
                 .setNegativeButton(R.string.confirm_mobile_streaming_button_always, (dialog, which) -> {
                     UserPreferences.setAllowMobileStreaming(true);
                     stream();

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -580,7 +580,7 @@ private void displayStreamingNotAllowedNotification(Intent originalIntent) {
                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                 .setContentIntent(pendingIntentAllowThisTime)
                 .addAction(R.drawable.ic_stream_white,
-                        getString(R.string.stream_label),
+                        getString(R.string.confirm_mobile_streaming_button_once),
                         pendingIntentAllowThisTime)
                 .addAction(R.drawable.ic_stream_white,
                         getString(R.string.confirm_mobile_streaming_button_always),

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -89,6 +89,8 @@ public View onCreateView(@NonNull LayoutInflater inflater,
         });
         root.findViewById(R.id.btn_add_local_folder).setOnClickListener(v -> {
             if (Build.VERSION.SDK_INT < 21) {
+                ((MainActivity) getActivity()).showSnackbarAbovePlayer(
+                        "Local folders are only supported on Android 5.0 and later", Snackbar.LENGTH_LONG);
                 return;
             }
             try {

File: app/src/main/java/de/danoeh/antennapod/adapter/EpisodeItemListAdapter.java
Patch:
@@ -92,11 +92,11 @@ public void onViewRecycled(@NonNull EpisodeItemViewHolder holder) {
         // Set all listeners to null. This is required to prevent leaking fragments that have set a listener.
         // Activity -> recycledViewPool -> EpisodeItemViewHolder -> Listener -> Fragment (can not be garbage collected)
         holder.itemView.setOnClickListener(null);
+        holder.itemView.setOnCreateContextMenuListener(null);
+        holder.itemView.setOnLongClickListener(null);
         holder.secondaryActionButton.setOnClickListener(null);
         holder.dragHandle.setOnTouchListener(null);
         holder.coverHolder.setOnTouchListener(null);
-        holder.container.setOnCreateContextMenuListener(null);
-        holder.container.setOnLongClickListener(null);
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/adapter/EpisodeItemListAdapter.java
Patch:
@@ -92,11 +92,11 @@ public void onViewRecycled(@NonNull EpisodeItemViewHolder holder) {
         // Set all listeners to null. This is required to prevent leaking fragments that have set a listener.
         // Activity -> recycledViewPool -> EpisodeItemViewHolder -> Listener -> Fragment (can not be garbage collected)
         holder.itemView.setOnClickListener(null);
+        holder.itemView.setOnCreateContextMenuListener(null);
+        holder.itemView.setOnLongClickListener(null);
         holder.secondaryActionButton.setOnClickListener(null);
         holder.dragHandle.setOnTouchListener(null);
         holder.coverHolder.setOnTouchListener(null);
-        holder.container.setOnCreateContextMenuListener(null);
-        holder.container.setOnLongClickListener(null);
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java
Patch:
@@ -491,7 +491,7 @@ private void updateErrorNotification(SyncServiceException exception) {
         PendingIntent pendingIntent = PendingIntent.getActivity(getApplicationContext(),
                 R.id.pending_intent_sync_error, intent, PendingIntent.FLAG_UPDATE_CURRENT);
         Notification notification = new NotificationCompat.Builder(getApplicationContext(),
-                NotificationUtils.CHANNEL_ID_ERROR)
+                NotificationUtils.CHANNEL_ID_SYNC_ERROR)
                 .setContentTitle(getApplicationContext().getString(R.string.gpodnetsync_error_title))
                 .setContentText(description)
                 .setContentIntent(pendingIntent)

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -8,6 +8,7 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
+import de.danoeh.antennapod.core.util.ThemeUtils;
 import de.danoeh.antennapod.fragment.SearchFragment;
 
 /**
@@ -33,6 +34,7 @@ public static void refreshLockItem(Context context, Menu menu) {
     public static void setupSearchItem(Menu menu, MainActivity activity, long feedId) {
         MenuItem searchItem = menu.findItem(R.id.action_search);
         final SearchView sv = (SearchView) searchItem.getActionView();
+        sv.setBackgroundColor(ThemeUtils.getColorFromAttr(activity, android.R.attr.windowBackground));
         sv.setQueryHint(activity.getString(R.string.search_label));
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/VisitWebsiteActionButton.java
Patch:
@@ -8,6 +8,7 @@
 import androidx.annotation.StringRes;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.feed.FeedItem;
+import de.danoeh.antennapod.core.util.IntentUtils;
 
 public class VisitWebsiteActionButton extends ItemActionButton {
 
@@ -29,8 +30,7 @@ public int getDrawable() {
 
     @Override
     public void onClick(Context context) {
-        Uri uri = Uri.parse(item.getLink());
-        context.startActivity(new Intent(Intent.ACTION_VIEW, uri));
+        IntentUtils.openInBrowser(context, item.getLink());
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -9,6 +9,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.util.DisplayMetrics;
 import android.util.Log;
 import android.util.TypedValue;
@@ -182,7 +183,7 @@ private void checkFirstLaunch() {
         SharedPreferences prefs = getSharedPreferences(PREF_NAME, MODE_PRIVATE);
         if (prefs.getBoolean(PREF_IS_FIRST_LAUNCH, true)) {
             loadFragment(AddFeedFragment.TAG, null);
-            new Handler().postDelayed(() -> {
+            new Handler(Looper.getMainLooper()).postDelayed(() -> {
                 if (drawerLayout != null) { // Tablet layout does not have a drawer
                     drawerLayout.openDrawer(navDrawer);
                 }

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -3,6 +3,7 @@
 import android.app.Dialog;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.view.View;
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AlertDialog;
@@ -159,7 +160,7 @@ private void setupAudioTracks() {
         butAudioTracks.setText(audioTracks.get(selectedAudioTrack));
         butAudioTracks.setOnClickListener(v -> {
             controller.setAudioTrack((selectedAudioTrack + 1) % audioTracks.size());
-            new Handler().postDelayed(this::setupAudioTracks, 500);
+            new Handler(Looper.getMainLooper()).postDelayed(this::setupAudioTracks, 500);
         });
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java
Patch:
@@ -9,6 +9,7 @@
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
 import android.os.Handler;
+import android.os.Looper;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -220,7 +221,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         SwipeRefreshLayout swipeRefreshLayout = root.findViewById(R.id.swipeRefresh);
         swipeRefreshLayout.setOnRefreshListener(() -> {
             AutoUpdateManager.runImmediate(requireContext());
-            new Handler().postDelayed(() -> swipeRefreshLayout.setRefreshing(false),
+            new Handler(Looper.getMainLooper()).postDelayed(() -> swipeRefreshLayout.setRefreshing(false),
                     getResources().getInteger(R.integer.swipe_to_refresh_duration_in_ms));
         });
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -7,6 +7,7 @@
 import android.graphics.LightingColorFilter;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -216,7 +217,7 @@ public void onScrolled(@NonNull RecyclerView view, int deltaX, int deltaY) {
             } catch (DownloadRequestException e) {
                 e.printStackTrace();
             }
-            new Handler().postDelayed(() -> swipeRefreshLayout.setRefreshing(false),
+            new Handler(Looper.getMainLooper()).postDelayed(() -> swipeRefreshLayout.setRefreshing(false),
                     getResources().getInteger(R.integer.swipe_to_refresh_duration_in_ms));
         });
 

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.widget.ProgressBar;
 import androidx.annotation.StringRes;
 import androidx.appcompat.app.AppCompatActivity;
@@ -110,7 +111,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         SwipeRefreshLayout swipeRefreshLayout = root.findViewById(R.id.swipeRefresh);
         swipeRefreshLayout.setOnRefreshListener(() -> {
             AutoUpdateManager.runImmediate(requireContext());
-            new Handler().postDelayed(() -> swipeRefreshLayout.setRefreshing(false),
+            new Handler(Looper.getMainLooper()).postDelayed(() -> swipeRefreshLayout.setRefreshing(false),
                     getResources().getInteger(R.integer.swipe_to_refresh_duration_in_ms));
         });
         return root;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -10,6 +10,7 @@
 import android.os.Binder;
 import android.os.Handler;
 import android.os.IBinder;
+import android.os.Looper;
 import android.text.TextUtils;
 import android.util.Log;
 
@@ -178,7 +179,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     public void onCreate() {
         Log.d(TAG, "Service started");
         isRunning = true;
-        handler = new Handler();
+        handler = new Handler(Looper.getMainLooper());
         notificationManager = new DownloadServiceNotification(this);
 
         IntentFilter cancelDownloadReceiverFilter = new IntentFilter();

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -343,7 +343,7 @@ private Runnable useMainThreadIfNecessary(Runnable runnable) {
         if (Looper.myLooper() == Looper.getMainLooper()) {
             // Called in main thread => ExoPlayer is used
             // Run on ui thread even if called from schedExecutor
-            Handler handler = new Handler();
+            Handler handler = new Handler(Looper.getMainLooper());
             return () -> handler.post(runnable);
         } else {
             return runnable;
@@ -370,7 +370,7 @@ public SleepTimer(long waitingTime) {
 
             if (UserPreferences.useExoplayer() && Looper.myLooper() == Looper.getMainLooper()) {
                 // Run callbacks in main thread so they can call ExoPlayer methods themselves
-                this.handler = new Handler();
+                this.handler = new Handler(Looper.getMainLooper());
             } else {
                 this.handler = null;
             }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -102,7 +102,7 @@ private synchronized void cancelQueueLoader() {
 
     private synchronized void loadQueue() {
         if (!isQueueLoaderActive()) {
-            queueFuture = schedExecutor.submit(DBReader::getQueue);
+            queueFuture = schedExecutor.submit(() -> DBReader.getQueue());
         }
     }
 

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -70,7 +70,7 @@ public void testUpdateFeedNewFeed() {
         }
         Feed newFeed = DBTasks.updateFeed(context, feed, false);
 
-        assertSame(feed, newFeed);
+        assertEquals(feed.getId(), newFeed.getId());
         assertTrue(feed.getId() != 0);
         for (FeedItem item : feed.getItems()) {
             assertFalse(item.isPlayed());

File: app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -102,6 +102,7 @@ protected void onStop() {
         if (!PictureInPictureUtil.isInPictureInPictureMode(this)) {
             videoControlsHider.stop();
         }
+        progressIndicator.setVisibility(View.GONE); // Controller released; we will not receive buffering updates
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -386,6 +386,7 @@ public void onStop() {
         super.onStop();
         controller.release();
         controller = null;
+        progressIndicator.setVisibility(View.GONE); // Controller released; we will not receive buffering updates
         EventBus.getDefault().unregister(this);
         if (disposable != null) {
             disposable.dispose();

File: app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -187,7 +187,7 @@ protected void onAwaitingVideoSurface() {
             videoControlsHider.stop();
 
             if (System.currentTimeMillis() - lastScreenTap < 300) {
-                if (event.getX() > v.getMeasuredWidth() / 2) {
+                if (event.getX() > v.getMeasuredWidth() / 2.0f) {
                     onFastForward();
                     showSkipAnimation(true);
                 } else {

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -94,7 +94,7 @@ private void setupUi() {
             barRightVolume.setEnabled(false);
         }
 
-        final CheckBox skipSilence = (CheckBox) dialog.findViewById(R.id.skipSilence);
+        final CheckBox skipSilence = dialog.findViewById(R.id.skipSilence);
         skipSilence.setChecked(UserPreferences.isSkipSilence());
         if (!UserPreferences.useExoplayer()) {
             skipSilence.setEnabled(false);

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -45,9 +45,8 @@ public static void showGetPluginDialog(final Context context) {
         AlertDialog.Builder builder = new AlertDialog.Builder(context);
         builder.setTitle(R.string.no_playback_plugin_title);
         builder.setMessage(R.string.no_playback_plugin_or_sonic_msg);
-        builder.setPositiveButton(R.string.enable_sonic, (dialog, which) -> {
-            UserPreferences.enableSonic();
-        });
+        builder.setPositiveButton(R.string.enable_sonic, (dialog, which) ->
+                UserPreferences.enableSonic());
         builder.setNeutralButton(R.string.close_label, null);
         builder.show();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AutoDownloadPreferencesFragment.java
Patch:
@@ -168,7 +168,7 @@ private void clearAutodownloadSelectedNetworsPreference() {
     private void buildEpisodeCleanupPreference() {
         final Resources res = getActivity().getResources();
 
-        ListPreference pref = (ListPreference) findPreference(UserPreferences.PREF_EPISODE_CLEANUP);
+        ListPreference pref = findPreference(UserPreferences.PREF_EPISODE_CLEANUP);
         String[] values = res.getStringArray(
                 R.array.episode_cleanup_values);
         String[] entries = new String[values.length];

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/PlaybackPreferencesFragment.java
Patch:
@@ -109,7 +109,7 @@ private <T extends Preference> T requirePreference(@NonNull CharSequence key) {
     private void buildSmartMarkAsPlayedPreference() {
         final Resources res = getActivity().getResources();
 
-        ListPreference pref = (ListPreference) findPreference(UserPreferences.PREF_SMART_MARK_AS_PLAYED_SECS);
+        ListPreference pref = findPreference(UserPreferences.PREF_SMART_MARK_AS_PLAYED_SECS);
         String[] values = res.getStringArray(R.array.smart_mark_as_played_values);
         String[] entries = new String[values.length];
         for (int x = 0; x < values.length; x++) {

File: app/src/play/java/de/danoeh/antennapod/dialog/CustomMRControllerDialog.java
Patch:
@@ -290,10 +290,10 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 
         View playbackControlLayout = View.inflate(getContext(), R.layout.media_router_controller, wrapper);
 
-        titleView = (TextView) playbackControlLayout.findViewById(R.id.mrc_control_title);
-        subtitleView = (TextView) playbackControlLayout.findViewById(R.id.mrc_control_subtitle);
+        titleView = playbackControlLayout.findViewById(R.id.mrc_control_title);
+        subtitleView = playbackControlLayout.findViewById(R.id.mrc_control_subtitle);
         playbackControlLayout.findViewById(R.id.mrc_control_title_container).setOnClickListener(onClickListener);
-        playPauseButton = (ImageButton) playbackControlLayout.findViewById(R.id.mrc_control_play_pause);
+        playPauseButton = playbackControlLayout.findViewById(R.id.mrc_control_play_pause);
         playPauseButton.setOnClickListener(v -> {
             PlaybackStateCompat state;
             if (mediaController != null && (state = mediaController.getPlaybackState()) != null) {

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastButtonVisibilityManager.java
Patch:
@@ -3,7 +3,7 @@
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
-import androidx.core.view.MenuItemCompat;
+
 import de.danoeh.antennapod.core.R;
 
 public class CastButtonVisibilityManager {
@@ -115,6 +115,6 @@ private void setShowAsAction() {
             Log.e(TAG, "setShowAsAction(), but cast button not inflated");
             return;
         }
-        MenuItemCompat.setShowAsAction(item, connected ? MenuItem.SHOW_AS_ACTION_ALWAYS : showAsAction);
+        item.setShowAsAction(connected ? MenuItem.SHOW_AS_ACTION_ALWAYS : showAsAction);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -102,6 +102,7 @@ protected void onStop() {
         if (!PictureInPictureUtil.isInPictureInPictureMode(this)) {
             videoControlsHider.stop();
         }
+        progressIndicator.setVisibility(View.GONE); // Controller released; we will not receive buffering updates
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -386,6 +386,7 @@ public void onStop() {
         super.onStop();
         controller.release();
         controller = null;
+        progressIndicator.setVisibility(View.GONE); // Controller released; we will not receive buffering updates
         EventBus.getDefault().unregister(this);
         if (disposable != null) {
             disposable.dispose();

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java
Patch:
@@ -122,7 +122,7 @@ public static FeedSettingsPreferenceFragment newInstance(long feedId) {
         }
 
         @Override
-        public RecyclerView onCreateRecyclerView (LayoutInflater inflater, ViewGroup parent, Bundle state) {
+        public RecyclerView onCreateRecyclerView(LayoutInflater inflater, ViewGroup parent, Bundle state) {
             final RecyclerView view = super.onCreateRecyclerView(inflater, parent, state);
             // To prevent transition animation because of summary update
             view.setItemAnimator(null);

File: core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java
Patch:
@@ -352,7 +352,7 @@ public FeedItem getMostRecentItem() {
         Date mostRecentDate = new Date(0);
         FeedItem mostRecentItem = null;
         for (FeedItem item : items) {
-            if (item.getPubDate().after(mostRecentDate)) {
+            if (item.getPubDate() != null && item.getPubDate().after(mostRecentDate)) {
                 mostRecentDate = item.getPubDate();
                 mostRecentItem = item;
             }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -154,6 +154,7 @@ private static void loadFeedDataOfFeedItemList(List<FeedItem> items) {
             Feed feed = feedIndex.get(item.getFeedId());
             if (feed == null) {
                 Log.w(TAG, "No match found for item with ID " + item.getId() + ". Feed ID was " + item.getFeedId());
+                feed = new Feed("", "", "Error: Item without feed");
             }
             item.setFeed(feed);
         }

File: core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java
Patch:
@@ -352,7 +352,7 @@ public FeedItem getMostRecentItem() {
         Date mostRecentDate = new Date(0);
         FeedItem mostRecentItem = null;
         for (FeedItem item : items) {
-            if (item.getPubDate().after(mostRecentDate)) {
+            if (item.getPubDate() != null && item.getPubDate().after(mostRecentDate)) {
                 mostRecentDate = item.getPubDate();
                 mostRecentItem = item;
             }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -154,6 +154,7 @@ private static void loadFeedDataOfFeedItemList(List<FeedItem> items) {
             Feed feed = feedIndex.get(item.getFeedId());
             if (feed == null) {
                 Log.w(TAG, "No match found for item with ID " + item.getId() + ". Feed ID was " + item.getFeedId());
+                feed = new Feed("", "", "Error: Item without feed");
             }
             item.setFeed(feed);
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -48,6 +48,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         viewPager = root.findViewById(R.id.viewpager);
         viewPager.setAdapter(new DownloadsPagerAdapter(this));
+        viewPager.setOffscreenPageLimit(2);
 
         // Give the TabLayout the ViewPager
         tabLayout = root.findViewById(R.id.sliding_tabs);

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -51,6 +51,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
         viewPager = rootView.findViewById(R.id.viewpager);
         viewPager.setAdapter(new EpisodesPagerAdapter(this));
+        viewPager.setOffscreenPageLimit(2);
 
         // Give the TabLayout the ViewPager
         tabLayout = rootView.findViewById(R.id.sliding_tabs);

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -48,6 +48,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         viewPager = root.findViewById(R.id.viewpager);
         viewPager.setAdapter(new DownloadsPagerAdapter(this));
+        viewPager.setOffscreenPageLimit(2);
 
         // Give the TabLayout the ViewPager
         tabLayout = root.findViewById(R.id.sliding_tabs);

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -51,6 +51,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
         viewPager = rootView.findViewById(R.id.viewpager);
         viewPager.setAdapter(new EpisodesPagerAdapter(this));
+        viewPager.setOffscreenPageLimit(2);
 
         // Give the TabLayout the ViewPager
         tabLayout = rootView.findViewById(R.id.sliding_tabs);

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -134,6 +134,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
             case R.id.subscriptions_sort:
                 FeedSortDialog.showDialog(requireContext());
+                return true;
             case R.id.subscription_num_columns_2:
                 setColumnNumber(2);
                 return true;

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -55,7 +55,7 @@ private UserPreferences(){}
     // User Interface
     public static final String PREF_THEME = "prefTheme";
     public static final String PREF_HIDDEN_DRAWER_ITEMS = "prefHiddenDrawerItems";
-    private static final String PREF_DRAWER_FEED_ORDER = "prefDrawerFeedOrder";
+    public static final String PREF_DRAWER_FEED_ORDER = "prefDrawerFeedOrder";
     private static final String PREF_DRAWER_FEED_COUNTER = "prefDrawerFeedIndicator";
     public static final String PREF_EXPANDED_NOTIFICATION = "prefExpandNotify";
     public static final String PREF_USE_EPISODE_COVER = "prefEpisodeCover";

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -83,7 +83,9 @@ public LoadData<InputStream> buildLoadData(@NonNull String model, int width, int
     @Override
     public boolean handles(@NonNull String model) {
         // Leave content URIs to Glide's default loaders
-        return !TextUtils.isEmpty(model) && !model.startsWith(ContentResolver.SCHEME_CONTENT);
+        return !TextUtils.isEmpty(model)
+                && !model.startsWith(ContentResolver.SCHEME_CONTENT)
+                && !model.startsWith(ContentResolver.SCHEME_ANDROID_RESOURCE);
     }
 
     private static class NetworkAllowanceInterceptor implements Interceptor {

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/UnsupportedFeedtypeException.java
Patch:
@@ -36,6 +36,9 @@ public String getMessage() {
         if (message != null) {
             return message;
         } else if (type == TypeGetter.Type.INVALID) {
+            if ("html".equals(rootElement)) {
+                return "The server returned a website, not a podcast feed";
+            }
             return "Invalid type";
         } else {
             return "Type " + type + " not supported";

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/UnsupportedFeedtypeException.java
Patch:
@@ -36,6 +36,9 @@ public String getMessage() {
         if (message != null) {
             return message;
         } else if (type == TypeGetter.Type.INVALID) {
+            if ("html".equals(rootElement)) {
+                return "The server returned a website, not a podcast feed";
+            }
             return "Invalid type";
         } else {
             return "Type " + type + " not supported";

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -190,7 +190,7 @@ private void configureForOrientation(Configuration newConfig) {
             mainContainer.setOrientation(LinearLayout.VERTICAL);
             if (newConfig.screenWidthDp > 0) {
                 params.width = (int) (convertDpToPixel(newConfig.screenWidthDp) * .80);
-                params.height= params.width;
+                params.height = params.width;
                 imgvCover.setLayoutParams(params);
             }
         } else {

File: app/src/androidTest/java/de/test/antennapod/dialogs/ShareDialogTest.java
Patch:
@@ -15,7 +15,7 @@
 
 import androidx.test.espresso.intent.rule.IntentsTestRule;
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.FeedItem;

File: app/src/androidTest/java/de/test/antennapod/entities/ExternalMediaTest.java
Patch:
@@ -4,7 +4,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.MediaType;
@@ -36,7 +36,7 @@ private void clearSharedPrefs() {
     }
 
     private SharedPreferences getDefaultSharedPrefs() {
-        return PreferenceManager.getDefaultSharedPreferences(InstrumentationRegistry.getTargetContext());
+        return PreferenceManager.getDefaultSharedPreferences(InstrumentationRegistry.getInstrumentation().getTargetContext());
     }
 
     @Test

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -4,7 +4,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
 import de.danoeh.antennapod.core.sync.gpoddernet.GpodnetService;
 import de.danoeh.antennapod.core.sync.gpoddernet.GpodnetServiceException;

File: app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java
Patch:
@@ -1,6 +1,6 @@
 package de.test.antennapod.service.download;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import android.util.Log;
 
@@ -51,7 +51,7 @@ public void tearDown() throws Exception {
     @Before
     public void setUp() throws Exception {
         UserPreferences.init(InstrumentationRegistry.getInstrumentation().getTargetContext());
-        destDir = InstrumentationRegistry.getTargetContext().getExternalFilesDir(DOWNLOAD_DIR);
+        destDir = InstrumentationRegistry.getInstrumentation().getTargetContext().getExternalFilesDir(DOWNLOAD_DIR);
         assertNotNull(destDir);
         assertTrue(destDir.exists());
         httpServer = new HTTPBin();
@@ -82,7 +82,7 @@ private Downloader download(String url, String title, boolean expectedResult, bo
         downloader.call();
         DownloadStatus status = downloader.getResult();
         assertNotNull(status);
-        assertTrue(status.isSuccessful() == expectedResult);
+        assertEquals(expectedResult, status.isSuccessful());
         assertTrue(status.isDone());
         // the file should not exist if the download has failed and deleteExisting was true
         assertTrue(!deleteExisting || new File(feedFile.getFile_url()).exists() == expectedResult);

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -10,7 +10,7 @@
 import java.util.Date;
 import java.util.List;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -64,7 +64,7 @@ private void cleanupDestFolder(File destFolder) {
 
     @Before
     public void setUp() throws Exception {
-        context = InstrumentationRegistry.getTargetContext();
+        context = InstrumentationRegistry.getInstrumentation().getTargetContext();
         destFolder = new File(context.getCacheDir(), "DDCleanupTests");
         destFolder.mkdir();
         cleanupDestFolder(destFolder);

File: app/src/androidTest/java/de/test/antennapod/storage/DBNullCleanupAlgorithmTest.java
Patch:
@@ -10,7 +10,7 @@
 import java.util.Date;
 import java.util.List;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -55,7 +55,7 @@ private void cleanupDestFolder(File destFolder) {
 
     @Before
     public void setUp() throws Exception {
-        context = InstrumentationRegistry.getTargetContext();
+        context = InstrumentationRegistry.getInstrumentation().getTargetContext();
         destFolder = context.getExternalCacheDir();
         cleanupDestFolder(destFolder);
         assertNotNull(destFolder);

File: app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Intent;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.Feed;

File: app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java
Patch:
@@ -1,10 +1,10 @@
 package de.test.antennapod.ui;
 
 import android.content.Intent;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.espresso.contrib.DrawerActions;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.activity.PreferenceActivity;
@@ -59,7 +59,7 @@ public class NavigationDrawerTest {
 
     @Before
     public void setUp() throws IOException {
-        uiTestUtils = new UITestUtils(InstrumentationRegistry.getTargetContext());
+        uiTestUtils = new UITestUtils(InstrumentationRegistry.getInstrumentation().getTargetContext());
         uiTestUtils.setup();
 
         EspressoTestUtils.clearPreferences();

File: app/src/androidTest/java/de/test/antennapod/ui/QueueFragmentTest.java
Patch:
@@ -4,7 +4,7 @@
 import android.view.View;
 import androidx.test.espresso.Espresso;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.fragment.QueueFragment;

File: app/src/androidTest/java/de/test/antennapod/ui/SpeedChangeTest.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 import androidx.test.rule.ActivityTestRule;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.FeedItem;

File: app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Intent;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.Feed;

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtilsTest.java
Patch:
@@ -5,7 +5,7 @@
 import java.net.URL;
 import java.util.List;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.MediumTest;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -29,7 +29,7 @@ public class UITestUtilsTest {
 
     @Before
     public void setUp() throws Exception {
-        uiTestUtils = new UITestUtils(InstrumentationRegistry.getTargetContext());
+        uiTestUtils = new UITestUtils(InstrumentationRegistry.getInstrumentation().getTargetContext());
         uiTestUtils.setup();
     }
 

File: app/src/androidTest/java/de/test/antennapod/util/playback/TimelineTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.SmallTest;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
@@ -35,7 +35,7 @@ public class TimelineTest {
 
     @Before
     public void setUp() {
-        context = InstrumentationRegistry.getTargetContext();
+        context = InstrumentationRegistry.getInstrumentation().getTargetContext();
     }
 
     private Playable newTestPlayable(List<Chapter> chapters, String shownotes, int duration) {

File: app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java
Patch:
@@ -42,9 +42,8 @@ protected void onCreate(Bundle savedInstanceState) {
         }
         crashDetailsTextView.setText(crashDetailsText);
 
-        findViewById(R.id.btn_open_bug_tracker).setOnClickListener(v -> {
-            IntentUtils.openInBrowser(BugReportActivity.this, "https://github.com/AntennaPod/AntennaPod/issues");
-        });
+        findViewById(R.id.btn_open_bug_tracker).setOnClickListener(v -> IntentUtils.openInBrowser(
+                BugReportActivity.this, "https://github.com/AntennaPod/AntennaPod/issues"));
 
         findViewById(R.id.btn_copy_log).setOnClickListener(v -> {
             ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);

File: app/src/main/java/de/danoeh/antennapod/activity/DirectoryChooserActivity.java
Patch:
@@ -113,7 +113,7 @@ private void showNonEmptyDirectoryWarning() {
         });
 
         butNavUp.setOnClickListener(v -> {
-            File parent = null;
+            File parent;
             if (selectedDir != null
                     && (parent = selectedDir.getParentFile()) != null) {
                 changeDirectory(parent);

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -305,7 +305,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             return false;
         }
         Playable media = controller.getMedia();
-        boolean isFeedMedia = media != null && (media instanceof FeedMedia);
+        boolean isFeedMedia = (media instanceof FeedMedia);
 
         menu.findItem(R.id.open_feed_item).setVisible(isFeedMedia); // FeedMedia implies it belongs to a Feed
 

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -194,7 +194,7 @@ public int getSubscriptionOffset() {
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
         int viewType = getItemViewType(position);
-        View v = null;
+        View v;
         if (viewType == VIEW_TYPE_NAV) {
             v = getNavView((String) getItem(position), position, convertView, parent);
         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -37,7 +37,7 @@ public void setLocked(boolean locked) {
     @SuppressLint("ClickableViewAccessibility")
     protected void afterBindViewHolder(EpisodeItemViewHolder holder, int pos) {
         View.OnTouchListener startDragTouchListener = (v1, event) -> {
-            if (MotionEventCompat.getActionMasked(event) == MotionEvent.ACTION_DOWN) {
+            if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
                 Log.d(TAG, "startDrag()");
                 itemTouchHelper.startDrag(holder);
             }

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -413,7 +413,7 @@ private void refreshCheckboxes() {
             boolean checked = checkedIds.contains(episode.getId());
             mListView.setItemChecked(i, checked);
         }
-        ActivityCompat.invalidateOptionsMenu(EpisodesApplyActionFragment.this.getActivity());
+        getActivity().invalidateOptionsMenu();
         toolbar.setTitle(getResources().getQuantityString(R.plurals.num_selected_label,
                 checkedIds.size(), checkedIds.size()));
     }

File: app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java
Patch:
@@ -70,7 +70,6 @@ public void openDialog() {
             }
             updateFilter(filterValues);
         });
-
         builder.setNegativeButton(R.string.cancel_label, null);
         builder.create().show();
     }

File: app/src/main/java/de/danoeh/antennapod/dialog/ProxyDialog.java
Patch:
@@ -227,12 +227,11 @@ private void setTestRequired(boolean required) {
         if(required) {
             testSuccessful = false;
             dialog.getButton(AlertDialog.BUTTON_POSITIVE).setText(R.string.proxy_test_label);
-            dialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(true);
         } else {
             testSuccessful = true;
             dialog.getButton(AlertDialog.BUTTON_POSITIVE).setText(android.R.string.ok);
-            dialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(true);
         }
+        dialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(true);
     }
 
     private void test() {

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -491,11 +491,11 @@ public boolean onMenuItemClick(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.disable_sleeptimer_item: // Fall-through
             case R.id.set_sleeptimer_item:
-                new SleepTimerDialog().show(getFragmentManager(), "SleepTimerDialog");
+                new SleepTimerDialog().show(getChildFragmentManager(), "SleepTimerDialog");
                 return true;
             case R.id.audio_controls:
                 PlaybackControlsDialog dialog = PlaybackControlsDialog.newInstance(false);
-                dialog.show(getFragmentManager(), "playback_controls");
+                dialog.show(getChildFragmentManager(), "playback_controls");
                 return true;
             case R.id.open_feed_item:
                 if (feedItem != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -93,7 +93,7 @@ public void onDestroyView() {
     private void onFragmentLoaded() {
         setListShown(true);
         adapter.notifyDataSetChanged();
-        getActivity().supportInvalidateOptionsMenu();
+        getActivity().invalidateOptionsMenu();
     }
 
     @Override
@@ -156,7 +156,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         }
         super.onCreateOptionsMenu(menu, inflater);
         MenuItem clearHistory = menu.add(Menu.NONE, R.id.clear_history_item, Menu.CATEGORY_CONTAINER, R.string.clear_history_label);
-        MenuItemCompat.setShowAsAction(clearHistory, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);
+        clearHistory.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);
         TypedArray drawables = getActivity().obtainStyledAttributes(new int[]{R.attr.ic_delete});
         clearHistory.setIcon(drawables.getDrawable(0));
         drawables.recycle();

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -405,7 +405,7 @@ public void onFeedListChanged(FeedListUpdateEvent event) {
 
     private void updateSyncProgressBarVisibility() {
         if (isUpdatingFeed != updateRefreshMenuItemChecker.isRefreshing()) {
-            getActivity().supportInvalidateOptionsMenu();
+            getActivity().invalidateOptionsMenu();
         }
         if (!DownloadRequester.getInstance().isDownloadingFeeds()) {
             nextPageLoader.getRoot().setVisibility(View.GONE);
@@ -427,7 +427,7 @@ private void displayList() {
         progressBar.setVisibility(View.GONE);
         adapter.updateItems(feed.getItems());
 
-        getActivity().supportInvalidateOptionsMenu();
+        getActivity().invalidateOptionsMenu();
         updateSyncProgressBarVisibility();
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java
Patch:
@@ -66,7 +66,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         Toolbar toolbar = root.findViewById(R.id.toolbar);
         ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
 
-        getFragmentManager().beginTransaction()
+        getParentFragmentManager().beginTransaction()
                 .replace(R.id.settings_fragment_container,
                         FeedSettingsPreferenceFragment.newInstance(feedId), "settings_fragment")
                 .commitAllowingStateLoss();

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -145,9 +145,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         }
         txtvDuration = layout.findViewById(R.id.txtvDuration);
         txtvPublished = layout.findViewById(R.id.txtvPublished);
-        if (Build.VERSION.SDK_INT >= 14) { // ellipsize is causing problems on old versions, see #448
-            txtvTitle.setEllipsize(TextUtils.TruncateAt.END);
-        }
+        txtvTitle.setEllipsize(TextUtils.TruncateAt.END);
         webvDescription = layout.findViewById(R.id.webvDescription);
         webvDescription.setTimecodeSelectedListener(time -> {
             if (controller != null && item.getMedia() != null && controller.getMedia() != null

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -85,9 +85,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         registerForContextMenu(navList);
         updateSelection();
 
-        root.findViewById(R.id.nav_settings).setOnClickListener(v -> {
-            startActivity(new Intent(getActivity(), PreferenceActivity.class));
-        });
+        root.findViewById(R.id.nav_settings).setOnClickListener(v ->
+                startActivity(new Intent(getActivity(), PreferenceActivity.class)));
         getContext().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE)
                 .registerOnSharedPreferenceChangeListener(this);
         return root;

File: app/src/main/java/de/danoeh/antennapod/fragment/OnlineSearchFragment.java
Patch:
@@ -126,7 +126,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.online_search, menu);
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.search_podcast_hint));
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -174,7 +174,7 @@ public boolean onMenuItemActionExpand(MenuItem item) {
 
             @Override
             public boolean onMenuItemActionCollapse(MenuItem item) {
-                getFragmentManager().popBackStack();
+                getParentFragmentManager().popBackStack();
                 return true;
             }
         });

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -56,9 +56,9 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.gpodder_podcasts, menu);
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.gpodnet_search_hint));
-        sv.setOnQueryTextListener(new androidx.appcompat.widget.SearchView.OnQueryTextListener() {
+        sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String s) {
                 sv.clearFocus();

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/SearchListFragment.java
Patch:
@@ -48,7 +48,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         // parent already inflated menu
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.gpodnet_search_hint));
         sv.setQuery(query, false);
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/TagListFragment.java
Patch:
@@ -38,7 +38,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.gpodder_podcasts, menu);
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.gpodnet_search_hint));
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AboutFragment.java
Patch:
@@ -28,12 +28,12 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             return true;
         });
         findPreference("about_developers").setOnPreferenceClickListener((preference) -> {
-            getFragmentManager().beginTransaction().replace(R.id.content, new AboutDevelopersFragment())
+            getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutDevelopersFragment())
                     .addToBackStack(getString(R.string.developers)).commit();
             return true;
         });
         findPreference("about_translators").setOnPreferenceClickListener((preference) -> {
-            getFragmentManager().beginTransaction().replace(R.id.content, new AboutTranslatorsFragment())
+            getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutTranslatorsFragment())
                     .addToBackStack(getString(R.string.translators)).commit();
             return true;
         });
@@ -42,7 +42,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             return true;
         });
         findPreference("about_licenses").setOnPreferenceClickListener((preference) -> {
-            getFragmentManager().beginTransaction().replace(R.id.content, new AboutLicensesFragment())
+            getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutLicensesFragment())
                     .addToBackStack(getString(R.string.translators)).commit();
             return true;
         });

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java
Patch:
@@ -62,14 +62,14 @@ private void setupMainScreen() {
 
         findPreference(PREF_ABOUT).setOnPreferenceClickListener(
                 preference -> {
-                    getFragmentManager().beginTransaction().replace(R.id.content, new AboutFragment())
+                    getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutFragment())
                             .addToBackStack(getString(R.string.about_pref)).commit();
                     return true;
                 }
         );
         findPreference(STATISTICS).setOnPreferenceClickListener(
                 preference -> {
-                    getFragmentManager().beginTransaction().replace(R.id.content, new StatisticsFragment())
+                    getParentFragmentManager().beginTransaction().replace(R.id.content, new StatisticsFragment())
                             .addToBackStack(getString(R.string.statistics_label)).commit();
                     return true;
                 }

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/PlaybackPreferencesFragment.java
Patch:
@@ -116,7 +116,7 @@ private void buildSmartMarkAsPlayedPreference() {
             if(x == 0) {
                 entries[x] = res.getString(R.string.pref_smart_mark_as_played_disabled);
             } else {
-                Integer v = Integer.parseInt(values[x]);
+                int v = Integer.parseInt(values[x]);
                 if(v < 60) {
                     entries[x] = res.getQuantityString(R.plurals.time_seconds_quantified, v, v);
                 } else {

File: app/src/main/java/de/danoeh/antennapod/view/NestedScrollableHost.java
Patch:
@@ -54,7 +54,7 @@ public NestedScrollableHost(@NonNull Context context, @Nullable AttributeSet att
         touchSlop = ViewConfiguration.get(context).getScaledTouchSlop();
     }
 
-    private int touchSlop = 0;
+    private int touchSlop;
     private float initialX = 0f;
     private float initialY = 0f;
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedComponent.java
Patch:
@@ -50,7 +50,7 @@ boolean compareWithOther(FeedComponent other) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || !(o instanceof FeedComponent)) return false;
+        if (!(o instanceof FeedComponent)) return false;
 
         FeedComponent that = (FeedComponent) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -481,7 +481,7 @@ public void saveCurrentPosition(SharedPreferences pref, int newPosition, long ti
 
     @Override
     public void onPlaybackStart() {
-        startPosition = (position > 0) ? position : 0;
+        startPosition = Math.max(position, 0);
         playedDurationWhenStarted = played_duration;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -826,8 +826,8 @@ public static void stereoToMono(boolean enable) {
     public static VideoBackgroundBehavior getVideoBackgroundBehavior() {
         switch (prefs.getString(PREF_VIDEO_BEHAVIOR, "pip")) {
             case "stop": return VideoBackgroundBehavior.STOP;
-            case "pip": return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
             case "continue": return VideoBackgroundBehavior.CONTINUE_PLAYING;
+            case "pip": //Deliberate fall-through
             default: return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
         }
     }
@@ -977,11 +977,11 @@ public enum BackButtonBehavior {
 
     public static BackButtonBehavior getBackButtonBehavior() {
         switch (prefs.getString(PREF_BACK_BUTTON_BEHAVIOR, "default")) {
-            case "default": return BackButtonBehavior.DEFAULT;
             case "drawer": return BackButtonBehavior.OPEN_DRAWER;
             case "doubletap": return BackButtonBehavior.DOUBLE_TAP;
             case "prompt": return BackButtonBehavior.SHOW_PROMPT;
             case "page": return BackButtonBehavior.GO_TO_PAGE;
+            case "default": // Deliberate fall-through
             default: return BackButtonBehavior.DEFAULT;
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/PlayerWidgetJobService.java
Patch:
@@ -121,7 +121,7 @@ private void updateViews() {
             views.setOnClickPendingIntent(R.id.layout_left, startMediaPlayer);
 
             try {
-                Bitmap icon = null;
+                Bitmap icon;
                 int iconSize = getResources().getDimensionPixelSize(android.R.dimen.app_icon_size);
                 icon = Glide.with(PlayerWidgetJobService.this)
                         .asBitmap()

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -154,8 +154,8 @@ public static OkHttpClient.Builder newBuilder() {
 
             // workaround for Android 4.x for certain web sites.
             // see: https://github.com/square/okhttp/issues/4053#issuecomment-402579554
-            List<CipherSuite> cipherSuites = new ArrayList<>();
-            cipherSuites.addAll(ConnectionSpec.MODERN_TLS.cipherSuites());
+            List<CipherSuite> cipherSuites = new ArrayList<>(
+                    ConnectionSpec.MODERN_TLS.cipherSuites());
             cipherSuites.add(CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA);
             cipherSuites.add(CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA);
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -115,7 +115,7 @@ public DownloadRequest[] newArray(int size) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || !(o instanceof DownloadRequest)) return false;
+        if (!(o instanceof DownloadRequest)) return false;
 
         DownloadRequest that = (DownloadRequest) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -189,7 +189,7 @@ protected void download() {
             }
 
             byte[] buffer = new byte[BUFFER_SIZE];
-            int count = 0;
+            int count;
             request.setStatusMsg(R.string.download_running);
             Log.d(TAG, "Getting size of download");
             request.setSize(responseBody.contentLength() + request.getSoFar());

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java
Patch:
@@ -183,15 +183,14 @@ private void addActions(NotificationCompat.Builder notification, MediaSessionCom
             notification.addAction(R.drawable.ic_notification_pause, //pause action
                     context.getString(R.string.pause_label),
                     pauseButtonPendingIntent);
-            compactActionList.add(numActions++);
         } else {
             PendingIntent playButtonPendingIntent = getPendingIntentForMediaAction(
                     KeyEvent.KEYCODE_MEDIA_PLAY, numActions);
             notification.addAction(R.drawable.ic_notification_play, //play action
                     context.getString(R.string.play_label),
                     playButtonPendingIntent);
-            compactActionList.add(numActions++);
         }
+        compactActionList.add(numActions++);
 
         // ff follows play, then we have skip (if it's present)
         PendingIntent ffButtonPendingIntent = getPendingIntentForMediaAction(

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/ShakeListener.java
Patch:
@@ -58,7 +58,6 @@ public void onSensorChanged(SensorEvent event) {
 
     @Override
     public void onAccuracyChanged(Sensor sensor, int accuracy) {
-        return;
     }
 
 }
\ No newline at end of file

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1218,7 +1218,7 @@ private String prepareSearchQuery(String query) {
     public Cursor searchItems(long feedID, String searchQuery) {
         String preparedQuery = prepareSearchQuery(searchQuery);
 
-        String queryFeedId = "";
+        String queryFeedId;
         if (feedID != 0) {
             // search items in specific feed
             queryFeedId = KEY_FEED + " = " + feedID;

File: core/src/main/java/de/danoeh/antennapod/core/util/RewindAfterPauseUtils.java
Patch:
@@ -39,7 +39,7 @@ public static int calculatePositionWithRewind(int currentPosition, long lastPlay
 
             int newPosition = currentPosition - (int) rewindTime;
 
-            return newPosition > 0 ? newPosition : 0;
+            return Math.max(newPosition, 0);
         } else {
             return currentPosition;
         }

File: core/src/main/java/de/danoeh/antennapod/core/util/download/AutoUpdateManager.java
Patch:
@@ -118,9 +118,8 @@ public static void runOnce(Context context) {
      */
     public static void runImmediate(@NonNull Context context) {
         Log.d(TAG, "Run auto update immediately in background.");
-        new Thread(() -> {
-            DBTasks.refreshAllFeeds(context.getApplicationContext(), true);
-        }, "ManualRefreshAllFeeds").start();
+        new Thread(() -> DBTasks.refreshAllFeeds(
+                context.getApplicationContext(), true), "ManualRefreshAllFeeds").start();
     }
 
     public static void disableAutoUpdate(Context context) {

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/OggInputStream.java
Patch:
@@ -39,7 +39,7 @@ public int read() throws IOException {
 	private void readOggPage() throws IOException {
 		// find OggS
 		int[] buffer = new int[4];
-		int c = 0;
+		int c;
 		boolean isInOggS = false;
 		while ((c = input.read()) != -1) {
 			switch (c) {

File: core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java
Patch:
@@ -5,7 +5,7 @@
 import static org.hamcrest.Matchers.equalTo;
 import static org.hamcrest.Matchers.is;
 import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertThat;
+import static org.hamcrest.MatcherAssert.assertThat;
 import static org.junit.Assert.assertTrue;
 
 public class VolumeAdaptionSettingTest {

File: core/src/test/java/de/danoeh/antennapod/core/util/FeedItemUtilTest.java
Patch:
@@ -7,6 +7,7 @@
 
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Collections;
 
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;
@@ -55,7 +56,7 @@ private static FeedItem createFeedItem(String feedLink, String itemLink) {
         FeedItem feedItem = new FeedItem();
         feedItem.setLink(itemLink);
         feedItem.setFeed(feed);
-        feed.setItems(Arrays.asList(feedItem));
+        feed.setItems(Collections.singletonList(feedItem));
         return feedItem;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/view/ShownotesWebView.java
Patch:
@@ -68,7 +68,7 @@ private void setup() {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 if (Timeline.isTimecodeLink(url) && timecodeSelectedListener != null) {
-                    timecodeSelectedListener.accept(Timeline.getTimecodeLinkTime(selectedUrl));
+                    timecodeSelectedListener.accept(Timeline.getTimecodeLinkTime(url));
                 } else {
                     IntentUtils.openInBrowser(getContext(), url);
                 }

File: app/src/androidTest/java/de/test/antennapod/dialogs/ShareDialogTest.java
Patch:
@@ -15,7 +15,7 @@
 
 import androidx.test.espresso.intent.rule.IntentsTestRule;
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.FeedItem;

File: app/src/androidTest/java/de/test/antennapod/entities/ExternalMediaTest.java
Patch:
@@ -4,7 +4,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.MediaType;
@@ -36,7 +36,7 @@ private void clearSharedPrefs() {
     }
 
     private SharedPreferences getDefaultSharedPrefs() {
-        return PreferenceManager.getDefaultSharedPreferences(InstrumentationRegistry.getTargetContext());
+        return PreferenceManager.getDefaultSharedPreferences(InstrumentationRegistry.getInstrumentation().getTargetContext());
     }
 
     @Test

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -4,7 +4,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
 import de.danoeh.antennapod.core.sync.gpoddernet.GpodnetService;
 import de.danoeh.antennapod.core.sync.gpoddernet.GpodnetServiceException;

File: app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java
Patch:
@@ -1,6 +1,6 @@
 package de.test.antennapod.service.download;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import android.util.Log;
 
@@ -51,7 +51,7 @@ public void tearDown() throws Exception {
     @Before
     public void setUp() throws Exception {
         UserPreferences.init(InstrumentationRegistry.getInstrumentation().getTargetContext());
-        destDir = InstrumentationRegistry.getTargetContext().getExternalFilesDir(DOWNLOAD_DIR);
+        destDir = InstrumentationRegistry.getInstrumentation().getTargetContext().getExternalFilesDir(DOWNLOAD_DIR);
         assertNotNull(destDir);
         assertTrue(destDir.exists());
         httpServer = new HTTPBin();

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceTaskManagerTest.java
Patch:
@@ -1,7 +1,7 @@
 package de.test.antennapod.service.playback;
 
 import android.content.Context;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.annotation.UiThreadTest;
 import androidx.test.filters.LargeTest;
 

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -10,7 +10,7 @@
 import java.util.Date;
 import java.util.List;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -64,7 +64,7 @@ private void cleanupDestFolder(File destFolder) {
 
     @Before
     public void setUp() throws Exception {
-        context = InstrumentationRegistry.getTargetContext();
+        context = InstrumentationRegistry.getInstrumentation().getTargetContext();
         destFolder = new File(context.getCacheDir(), "DDCleanupTests");
         destFolder.mkdir();
         cleanupDestFolder(destFolder);

File: app/src/androidTest/java/de/test/antennapod/storage/DBNullCleanupAlgorithmTest.java
Patch:
@@ -10,7 +10,7 @@
 import java.util.Date;
 import java.util.List;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -55,7 +55,7 @@ private void cleanupDestFolder(File destFolder) {
 
     @Before
     public void setUp() throws Exception {
-        context = InstrumentationRegistry.getTargetContext();
+        context = InstrumentationRegistry.getInstrumentation().getTargetContext();
         destFolder = context.getExternalCacheDir();
         cleanupDestFolder(destFolder);
         assertNotNull(destFolder);

File: app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java
Patch:
@@ -5,7 +5,7 @@
 import java.util.List;
 import java.util.Random;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.SmallTest;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;
@@ -38,7 +38,7 @@ public void tearDown() throws Exception {
     @Before
     public void setUp() throws Exception {
         // create new database
-        PodDBAdapter.init(InstrumentationRegistry.getTargetContext());
+        PodDBAdapter.init(InstrumentationRegistry.getInstrumentation().getTargetContext());
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.SmallTest;
 
 import org.junit.After;
@@ -47,7 +47,7 @@ public void tearDown() throws Exception {
 
     @Before
     public void setUp() throws Exception {
-        context = InstrumentationRegistry.getTargetContext();
+        context = InstrumentationRegistry.getInstrumentation().getTargetContext();
 
         // create new database
         PodDBAdapter.init(context);

File: app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Intent;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.Feed;

File: app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java
Patch:
@@ -1,10 +1,10 @@
 package de.test.antennapod.ui;
 
 import android.content.Intent;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.espresso.contrib.DrawerActions;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.activity.PreferenceActivity;
@@ -59,7 +59,7 @@ public class NavigationDrawerTest {
 
     @Before
     public void setUp() throws IOException {
-        uiTestUtils = new UITestUtils(InstrumentationRegistry.getTargetContext());
+        uiTestUtils = new UITestUtils(InstrumentationRegistry.getInstrumentation().getTargetContext());
         uiTestUtils.setup();
 
         EspressoTestUtils.clearPreferences();

File: app/src/androidTest/java/de/test/antennapod/ui/QueueFragmentTest.java
Patch:
@@ -4,7 +4,7 @@
 import android.view.View;
 import androidx.test.espresso.Espresso;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.fragment.QueueFragment;

File: app/src/androidTest/java/de/test/antennapod/ui/SpeedChangeTest.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 import androidx.test.rule.ActivityTestRule;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.FeedItem;

File: app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Intent;
 import androidx.test.espresso.intent.rule.IntentsTestRule;
 import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.feed.Feed;

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtilsTest.java
Patch:
@@ -5,7 +5,7 @@
 import java.net.URL;
 import java.util.List;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.LargeTest;
 import androidx.test.filters.MediumTest;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -29,7 +29,7 @@ public class UITestUtilsTest {
 
     @Before
     public void setUp() throws Exception {
-        uiTestUtils = new UITestUtils(InstrumentationRegistry.getTargetContext());
+        uiTestUtils = new UITestUtils(InstrumentationRegistry.getInstrumentation().getTargetContext());
         uiTestUtils.setup();
     }
 

File: app/src/androidTest/java/de/test/antennapod/util/playback/TimelineTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 
-import androidx.test.InstrumentationRegistry;
+import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.filters.SmallTest;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
@@ -35,7 +35,7 @@ public class TimelineTest {
 
     @Before
     public void setUp() {
-        context = InstrumentationRegistry.getTargetContext();
+        context = InstrumentationRegistry.getInstrumentation().getTargetContext();
     }
 
     private Playable newTestPlayable(List<Chapter> chapters, String shownotes, int duration) {

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -37,7 +37,7 @@ public void setLocked(boolean locked) {
     @SuppressLint("ClickableViewAccessibility")
     protected void afterBindViewHolder(EpisodeItemViewHolder holder, int pos) {
         View.OnTouchListener startDragTouchListener = (v1, event) -> {
-            if (MotionEventCompat.getActionMasked(event) == MotionEvent.ACTION_DOWN) {
+            if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
                 Log.d(TAG, "startDrag()");
                 itemTouchHelper.startDrag(holder);
             }

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -413,7 +413,7 @@ private void refreshCheckboxes() {
             boolean checked = checkedIds.contains(episode.getId());
             mListView.setItemChecked(i, checked);
         }
-        ActivityCompat.invalidateOptionsMenu(EpisodesApplyActionFragment.this.getActivity());
+        getActivity().invalidateOptionsMenu();
         toolbar.setTitle(getResources().getQuantityString(R.plurals.num_selected_label,
                 checkedIds.size(), checkedIds.size()));
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -491,11 +491,11 @@ public boolean onMenuItemClick(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.disable_sleeptimer_item: // Fall-through
             case R.id.set_sleeptimer_item:
-                new SleepTimerDialog().show(getFragmentManager(), "SleepTimerDialog");
+                new SleepTimerDialog().show(getChildFragmentManager(), "SleepTimerDialog");
                 return true;
             case R.id.audio_controls:
                 PlaybackControlsDialog dialog = PlaybackControlsDialog.newInstance(false);
-                dialog.show(getFragmentManager(), "playback_controls");
+                dialog.show(getChildFragmentManager(), "playback_controls");
                 return true;
             case R.id.open_feed_item:
                 if (feedItem != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -93,7 +93,7 @@ public void onDestroyView() {
     private void onFragmentLoaded() {
         setListShown(true);
         adapter.notifyDataSetChanged();
-        getActivity().supportInvalidateOptionsMenu();
+        getActivity().invalidateOptionsMenu();
     }
 
     @Override
@@ -156,7 +156,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         }
         super.onCreateOptionsMenu(menu, inflater);
         MenuItem clearHistory = menu.add(Menu.NONE, R.id.clear_history_item, Menu.CATEGORY_CONTAINER, R.string.clear_history_label);
-        MenuItemCompat.setShowAsAction(clearHistory, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);
+        clearHistory.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);
         TypedArray drawables = getActivity().obtainStyledAttributes(new int[]{R.attr.ic_delete});
         clearHistory.setIcon(drawables.getDrawable(0));
         drawables.recycle();

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -405,7 +405,7 @@ public void onFeedListChanged(FeedListUpdateEvent event) {
 
     private void updateSyncProgressBarVisibility() {
         if (isUpdatingFeed != updateRefreshMenuItemChecker.isRefreshing()) {
-            getActivity().supportInvalidateOptionsMenu();
+            getActivity().invalidateOptionsMenu();
         }
         if (!DownloadRequester.getInstance().isDownloadingFeeds()) {
             nextPageLoader.getRoot().setVisibility(View.GONE);
@@ -427,7 +427,7 @@ private void displayList() {
         progressBar.setVisibility(View.GONE);
         adapter.updateItems(feed.getItems());
 
-        getActivity().supportInvalidateOptionsMenu();
+        getActivity().invalidateOptionsMenu();
         updateSyncProgressBarVisibility();
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java
Patch:
@@ -66,7 +66,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         Toolbar toolbar = root.findViewById(R.id.toolbar);
         ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
 
-        getFragmentManager().beginTransaction()
+        getParentFragmentManager().beginTransaction()
                 .replace(R.id.settings_fragment_container,
                         FeedSettingsPreferenceFragment.newInstance(feedId), "settings_fragment")
                 .commitAllowingStateLoss();

File: app/src/main/java/de/danoeh/antennapod/fragment/OnlineSearchFragment.java
Patch:
@@ -126,7 +126,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.online_search, menu);
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.search_podcast_hint));
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -174,7 +174,7 @@ public boolean onMenuItemActionExpand(MenuItem item) {
 
             @Override
             public boolean onMenuItemActionCollapse(MenuItem item) {
-                getFragmentManager().popBackStack();
+                getParentFragmentManager().popBackStack();
                 return true;
             }
         });

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -56,9 +56,9 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.gpodder_podcasts, menu);
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.gpodnet_search_hint));
-        sv.setOnQueryTextListener(new androidx.appcompat.widget.SearchView.OnQueryTextListener() {
+        sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String s) {
                 sv.clearFocus();

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/SearchListFragment.java
Patch:
@@ -48,7 +48,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         // parent already inflated menu
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.gpodnet_search_hint));
         sv.setQuery(query, false);
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/TagListFragment.java
Patch:
@@ -38,7 +38,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.gpodder_podcasts, menu);
         MenuItem searchItem = menu.findItem(R.id.action_search);
-        final SearchView sv = (SearchView) MenuItemCompat.getActionView(searchItem);
+        final SearchView sv = (SearchView) searchItem.getActionView();
         sv.setQueryHint(getString(R.string.gpodnet_search_hint));
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AboutFragment.java
Patch:
@@ -28,12 +28,12 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             return true;
         });
         findPreference("about_developers").setOnPreferenceClickListener((preference) -> {
-            getFragmentManager().beginTransaction().replace(R.id.content, new AboutDevelopersFragment())
+            getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutDevelopersFragment())
                     .addToBackStack(getString(R.string.developers)).commit();
             return true;
         });
         findPreference("about_translators").setOnPreferenceClickListener((preference) -> {
-            getFragmentManager().beginTransaction().replace(R.id.content, new AboutTranslatorsFragment())
+            getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutTranslatorsFragment())
                     .addToBackStack(getString(R.string.translators)).commit();
             return true;
         });
@@ -42,7 +42,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             return true;
         });
         findPreference("about_licenses").setOnPreferenceClickListener((preference) -> {
-            getFragmentManager().beginTransaction().replace(R.id.content, new AboutLicensesFragment())
+            getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutLicensesFragment())
                     .addToBackStack(getString(R.string.translators)).commit();
             return true;
         });

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java
Patch:
@@ -62,14 +62,14 @@ private void setupMainScreen() {
 
         findPreference(PREF_ABOUT).setOnPreferenceClickListener(
                 preference -> {
-                    getFragmentManager().beginTransaction().replace(R.id.content, new AboutFragment())
+                    getParentFragmentManager().beginTransaction().replace(R.id.content, new AboutFragment())
                             .addToBackStack(getString(R.string.about_pref)).commit();
                     return true;
                 }
         );
         findPreference(STATISTICS).setOnPreferenceClickListener(
                 preference -> {
-                    getFragmentManager().beginTransaction().replace(R.id.content, new StatisticsFragment())
+                    getParentFragmentManager().beginTransaction().replace(R.id.content, new StatisticsFragment())
                             .addToBackStack(getString(R.string.statistics_label)).commit();
                     return true;
                 }

File: core/src/main/java/de/danoeh/antennapod/core/sync/gpoddernet/GpodnetService.java
Patch:
@@ -21,7 +21,6 @@
 import okhttp3.RequestBody;
 import okhttp3.Response;
 import okhttp3.ResponseBody;
-import org.apache.commons.io.Charsets;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -34,6 +33,7 @@
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URL;
+import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.LinkedList;
@@ -505,7 +505,7 @@ public void authenticate(@NonNull String username, @NonNull String password) thr
         RequestBody requestBody = RequestBody.create(TEXT, "");
         Request request = new Request.Builder().url(url).post(requestBody).build();
         try {
-            String credential = Credentials.basic(username, password, Charsets.UTF_8);
+            String credential = Credentials.basic(username, password, Charset.forName("UTF-8"));
             Request authRequest = request.newBuilder().header("Authorization", credential).build();
             Response response = httpClient.newCall(authRequest).execute();
             checkStatusCode(response);

File: core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java
Patch:
@@ -5,7 +5,7 @@
 import static org.hamcrest.Matchers.equalTo;
 import static org.hamcrest.Matchers.is;
 import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertThat;
+import static org.hamcrest.MatcherAssert.assertThat;
 import static org.junit.Assert.assertTrue;
 
 public class VolumeAdaptionSettingTest {

File: core/src/main/java/de/danoeh/antennapod/core/util/ChapterUtils.java
Patch:
@@ -92,7 +92,7 @@ private static void readID3ChaptersFromPlayableStreamUrl(Playable p, Context con
                 p.setChapters(chapters);
             }
             Log.i(TAG, "Chapters loaded");
-        } catch (IOException | ID3ReaderException e) {
+        } catch (IOException | ID3ReaderException | IllegalArgumentException e) {
             Log.e(TAG, Log.getStackTraceString(e));
         } finally {
             IOUtils.closeQuietly(in);
@@ -164,7 +164,7 @@ private static void readOggChaptersFromPlayableStreamUrl(Playable media, Context
             if (input != null) {
                 readOggChaptersFromInputStream(media, input);
             }
-        } catch (IOException e) {
+        } catch (IOException | IllegalArgumentException e) {
             Log.e(TAG, Log.getStackTraceString(e));
         } finally {
             IOUtils.closeQuietly(input);

File: app/src/main/java/de/danoeh/antennapod/view/ShownotesWebView.java
Patch:
@@ -68,7 +68,7 @@ private void setup() {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 if (Timeline.isTimecodeLink(url) && timecodeSelectedListener != null) {
-                    timecodeSelectedListener.accept(Timeline.getTimecodeLinkTime(selectedUrl));
+                    timecodeSelectedListener.accept(Timeline.getTimecodeLinkTime(url));
                 } else {
                     IntentUtils.openInBrowser(getContext(), url);
                 }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -481,7 +481,7 @@ public void saveCurrentPosition(SharedPreferences pref, int newPosition, long ti
 
     @Override
     public void onPlaybackStart() {
-        startPosition = (position > 0) ? position : 0;
+        startPosition = Math.max(position, 0);
         playedDurationWhenStarted = played_duration;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/util/RewindAfterPauseUtils.java
Patch:
@@ -39,7 +39,7 @@ public static int calculatePositionWithRewind(int currentPosition, long lastPlay
 
             int newPosition = currentPosition - (int) rewindTime;
 
-            return newPosition > 0 ? newPosition : 0;
+            return Math.max(newPosition, 0);
         } else {
             return currentPosition;
         }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -826,8 +826,8 @@ public static void stereoToMono(boolean enable) {
     public static VideoBackgroundBehavior getVideoBackgroundBehavior() {
         switch (prefs.getString(PREF_VIDEO_BEHAVIOR, "pip")) {
             case "stop": return VideoBackgroundBehavior.STOP;
-            case "pip": return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
             case "continue": return VideoBackgroundBehavior.CONTINUE_PLAYING;
+            case "pip": //Deliberate fall-through
             default: return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
         }
     }
@@ -977,11 +977,11 @@ public enum BackButtonBehavior {
 
     public static BackButtonBehavior getBackButtonBehavior() {
         switch (prefs.getString(PREF_BACK_BUTTON_BEHAVIOR, "default")) {
-            case "default": return BackButtonBehavior.DEFAULT;
             case "drawer": return BackButtonBehavior.OPEN_DRAWER;
             case "doubletap": return BackButtonBehavior.DOUBLE_TAP;
             case "prompt": return BackButtonBehavior.SHOW_PROMPT;
             case "page": return BackButtonBehavior.GO_TO_PAGE;
+            case "default": // Deliberate fall-through
             default: return BackButtonBehavior.DEFAULT;
         }
     }

File: app/src/main/java/de/danoeh/antennapod/activity/DirectoryChooserActivity.java
Patch:
@@ -113,7 +113,7 @@ private void showNonEmptyDirectoryWarning() {
         });
 
         butNavUp.setOnClickListener(v -> {
-            File parent = null;
+            File parent;
             if (selectedDir != null
                     && (parent = selectedDir.getParentFile()) != null) {
                 changeDirectory(parent);

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -194,7 +194,7 @@ public int getSubscriptionOffset() {
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
         int viewType = getItemViewType(position);
-        View v = null;
+        View v;
         if (viewType == VIEW_TYPE_NAV) {
             v = getNavView((String) getItem(position), position, convertView, parent);
         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {

File: app/src/main/java/de/danoeh/antennapod/view/NestedScrollableHost.java
Patch:
@@ -54,7 +54,7 @@ public NestedScrollableHost(@NonNull Context context, @Nullable AttributeSet att
         touchSlop = ViewConfiguration.get(context).getScaledTouchSlop();
     }
 
-    private int touchSlop = 0;
+    private int touchSlop;
     private float initialX = 0f;
     private float initialY = 0f;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/PlayerWidgetJobService.java
Patch:
@@ -121,7 +121,7 @@ private void updateViews() {
             views.setOnClickPendingIntent(R.id.layout_left, startMediaPlayer);
 
             try {
-                Bitmap icon = null;
+                Bitmap icon;
                 int iconSize = getResources().getDimensionPixelSize(android.R.dimen.app_icon_size);
                 icon = Glide.with(PlayerWidgetJobService.this)
                         .asBitmap()

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -189,7 +189,7 @@ protected void download() {
             }
 
             byte[] buffer = new byte[BUFFER_SIZE];
-            int count = 0;
+            int count;
             request.setStatusMsg(R.string.download_running);
             Log.d(TAG, "Getting size of download");
             request.setSize(responseBody.contentLength() + request.getSoFar());

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -582,7 +582,7 @@ public static String getImageAuthentication(final String imageUrl) {
     }
 
     private static String getImageAuthentication(final String imageUrl, PodDBAdapter adapter) {
-        String credentials = null;
+        String credentials;
         try (Cursor cursor = adapter.getImageAuthenticationCursor(imageUrl)) {
             if (cursor.moveToFirst()) {
                 String username = cursor.getString(0);

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1218,7 +1218,7 @@ private String prepareSearchQuery(String query) {
     public Cursor searchItems(long feedID, String searchQuery) {
         String preparedQuery = prepareSearchQuery(searchQuery);
 
-        String queryFeedId = "";
+        String queryFeedId;
         if (feedID != 0) {
             // search items in specific feed
             queryFeedId = KEY_FEED + " = " + feedID;

File: core/src/main/java/de/danoeh/antennapod/core/sync/gpoddernet/GpodnetService.java
Patch:
@@ -519,8 +519,8 @@ public void authenticate(@NonNull String username, @NonNull String password) thr
 
     private String executeRequest(@NonNull Request.Builder requestB) throws GpodnetServiceException {
         Request request = requestB.build();
-        String responseString = null;
-        Response response = null;
+        String responseString;
+        Response response;
         ResponseBody body = null;
         try {
 

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/OggInputStream.java
Patch:
@@ -39,7 +39,7 @@ public int read() throws IOException {
 	private void readOggPage() throws IOException {
 		// find OggS
 		int[] buffer = new int[4];
-		int c = 0;
+		int c;
 		boolean isInOggS = false;
 		while ((c = input.read()) != -1) {
 			switch (c) {

File: app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java
Patch:
@@ -42,9 +42,8 @@ protected void onCreate(Bundle savedInstanceState) {
         }
         crashDetailsTextView.setText(crashDetailsText);
 
-        findViewById(R.id.btn_open_bug_tracker).setOnClickListener(v -> {
-            IntentUtils.openInBrowser(BugReportActivity.this, "https://github.com/AntennaPod/AntennaPod/issues");
-        });
+        findViewById(R.id.btn_open_bug_tracker).setOnClickListener(v -> IntentUtils.openInBrowser(
+                BugReportActivity.this, "https://github.com/AntennaPod/AntennaPod/issues"));
 
         findViewById(R.id.btn_copy_log).setOnClickListener(v -> {
             ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);

File: app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java
Patch:
@@ -51,9 +51,7 @@ public void openDialog() {
                 filterValues.remove(values[which]);
             }
         });
-        builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {
-            updateFilter(filterValues);
-        });
+        builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> updateFilter(filterValues));
         builder.setNegativeButton(R.string.cancel_label, null);
         builder.create().show();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java
Patch:
@@ -85,9 +85,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         registerForContextMenu(navList);
         updateSelection();
 
-        root.findViewById(R.id.nav_settings).setOnClickListener(v -> {
-            startActivity(new Intent(getActivity(), PreferenceActivity.class));
-        });
+        root.findViewById(R.id.nav_settings).setOnClickListener(v ->
+                startActivity(new Intent(getActivity(), PreferenceActivity.class)));
         getContext().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE)
                 .registerOnSharedPreferenceChangeListener(this);
         return root;

File: core/src/main/java/de/danoeh/antennapod/core/util/download/AutoUpdateManager.java
Patch:
@@ -118,9 +118,8 @@ public static void runOnce(Context context) {
      */
     public static void runImmediate(@NonNull Context context) {
         Log.d(TAG, "Run auto update immediately in background.");
-        new Thread(() -> {
-            DBTasks.refreshAllFeeds(context.getApplicationContext(), true);
-        }, "ManualRefreshAllFeeds").start();
+        new Thread(() -> DBTasks.refreshAllFeeds(
+                context.getApplicationContext(), true), "ManualRefreshAllFeeds").start();
     }
 
     public static void disableAutoUpdate(Context context) {

File: core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java
Patch:
@@ -13,6 +13,7 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
+import de.danoeh.antennapod.core.feed.FeedComponent;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
 import de.danoeh.antennapod.core.feed.FeedMother;
@@ -254,7 +255,7 @@ static void doAddToQueueAndAssertResult(String message,
             Collections.unmodifiableList(Arrays.asList(
                     createFeedItem(11), createFeedItem(12), createFeedItem(13), createFeedItem(14)));
     static final List<Long> QUEUE_DEFAULT_IDS =
-            QUEUE_DEFAULT.stream().map(fi -> fi.getId()).collect(Collectors.toList());
+            QUEUE_DEFAULT.stream().map(FeedComponent::getId).collect(Collectors.toList());
 
 
     static Playable getCurrentlyPlaying(long idCurrentlyPlaying) {

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/PlaybackPreferencesFragment.java
Patch:
@@ -116,7 +116,7 @@ private void buildSmartMarkAsPlayedPreference() {
             if(x == 0) {
                 entries[x] = res.getString(R.string.pref_smart_mark_as_played_disabled);
             } else {
-                Integer v = Integer.parseInt(values[x]);
+                int v = Integer.parseInt(values[x]);
                 if(v < 60) {
                     entries[x] = res.getQuantityString(R.plurals.time_seconds_quantified, v, v);
                 } else {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -419,7 +419,7 @@ public void onLoadChildren(@NonNull String parentId,
                 e.printStackTrace();
             }
         } else if (parentId.startsWith("FeedId:")) {
-            Long feedId = Long.parseLong(parentId.split(":")[1]);
+            long feedId = Long.parseLong(parentId.split(":")[1]);
             List<FeedItem> feedItems = DBReader.getFeedItemList(DBReader.getFeed(feedId));
             for (FeedItem feedItem : feedItems) {
                 if (feedItem.getMedia() != null && feedItem.getMedia().getMediaItem() != null) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -7,6 +7,7 @@
 import org.apache.commons.lang3.builder.ToStringBuilder;
 import org.apache.commons.lang3.builder.ToStringStyle;
 
+import java.io.Serializable;
 import java.util.Date;
 import java.util.HashSet;
 import java.util.List;
@@ -24,7 +25,7 @@
  *
  * @author daniel
  */
-public class FeedItem extends FeedComponent implements ShownotesProvider, ImageResource {
+public class FeedItem extends FeedComponent implements ShownotesProvider, ImageResource, Serializable {
 
     /** tag that indicates this item is in the queue */
     public static final String TAG_QUEUE = "Queue";

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -274,7 +274,7 @@ private DownloadRequest createRequest(@Nullable FeedMedia feedmedia, boolean ini
         }
 
         File dest;
-        if (feedmedia.getFile_url() != null) {
+        if (feedmedia.getFile_url() != null && new File(feedmedia.getFile_url()).exists()) {
             dest = new File(feedmedia.getFile_url());
         } else {
             dest = new File(getMediafilePath(feedmedia), getMediafilename(feedmedia));

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/AudioPlayer.java
Patch:
@@ -6,6 +6,7 @@
 import android.util.Log;
 import android.view.SurfaceHolder;
 
+import de.danoeh.antennapod.core.ClientConfig;
 import org.antennapod.audio.MediaPlayer;
 
 import de.danoeh.antennapod.core.preferences.UserPreferences;
@@ -17,7 +18,7 @@ public class AudioPlayer extends MediaPlayer implements IPlayer {
     private static final String TAG = "AudioPlayer";
 
     public AudioPlayer(Context context) {
-        super(context);
+        super(context, true, ClientConfig.USER_AGENT);
         PreferenceManager.getDefaultSharedPreferences(context)
                 .registerOnSharedPreferenceChangeListener((sharedPreferences, key) -> {
                     if (key.equals(UserPreferences.PREF_MEDIA_PLAYER)) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -274,7 +274,7 @@ private DownloadRequest createRequest(@Nullable FeedMedia feedmedia, boolean ini
         }
 
         File dest;
-        if (feedmedia.getFile_url() != null) {
+        if (feedmedia.getFile_url() != null && new File(feedmedia.getFile_url()).exists()) {
             dest = new File(feedmedia.getFile_url());
         } else {
             dest = new File(getMediafilePath(feedmedia), getMediafilename(feedmedia));

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -9,7 +9,7 @@
 import de.danoeh.antennapod.core.feed.FeedMedia;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import de.test.antennapod.util.service.download.HTTPBin;
-import de.test.antennapod.util.syndication.feedgenerator.RSS2Generator;
+import de.test.antennapod.util.syndication.feedgenerator.Rss2Generator;
 import org.apache.commons.io.FileUtils;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -78,7 +78,7 @@ public void tearDown() throws IOException {
     private String hostFeed(Feed feed) throws IOException {
         File feedFile = new File(hostedFeedDir, feed.getTitle());
         FileOutputStream out = new FileOutputStream(feedFile);
-        RSS2Generator generator = new RSS2Generator();
+        Rss2Generator generator = new Rss2Generator();
         generator.writeFeed(feed, out, "UTF-8", 0);
         out.close();
         int id = server.serveFile(feedFile);

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -181,12 +181,12 @@ public void onPlayerStatusChanged(PlayerStatusEvent event) {
         loadItems();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onDownloadLogChanged(DownloadLogEvent event) {
         loadItems();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         loadItems();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -190,7 +190,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
         return FeedItemMenuHandler.onMenuItemClicked(this, item.getItemId(), selectedItem);
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         search();
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/InvalidFeedException.java
Patch:
@@ -6,6 +6,7 @@
 public class InvalidFeedException extends Exception {
     private static final long serialVersionUID = 1L;
 
-    public InvalidFeedException() {
+    public InvalidFeedException(String message) {
+        super(message);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -181,12 +181,12 @@ public void onPlayerStatusChanged(PlayerStatusEvent event) {
         loadItems();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onDownloadLogChanged(DownloadLogEvent event) {
         loadItems();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         loadItems();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -190,7 +190,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
         return FeedItemMenuHandler.onMenuItemClicked(this, item.getItemId(), selectedItem);
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         search();
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/InvalidFeedException.java
Patch:
@@ -6,6 +6,7 @@
 public class InvalidFeedException extends Exception {
     private static final long serialVersionUID = 1L;
 
-    public InvalidFeedException() {
+    public InvalidFeedException(String message) {
+        super(message);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java
Patch:
@@ -39,7 +39,7 @@
 public class EpisodeItemViewHolder extends RecyclerView.ViewHolder {
     private static final String TAG = "EpisodeItemViewHolder";
 
-    private final View container;
+    public final View container;
     public final ImageView dragHandle;
     private final TextView placeholder;
     private final ImageView cover;

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -317,9 +317,8 @@ public void onStart() {
         RatingDialog.init(this);
 
         if (lastTheme != UserPreferences.getNoTitleTheme()) {
-            // Nav drawer is empty for half a second after recreating. Don't confuse users with that.
-            drawerLayout.closeDrawer(navDrawer);
-            recreate();
+            finish();
+            startActivity(new Intent(this, MainActivity.class));
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -317,9 +317,8 @@ public void onStart() {
         RatingDialog.init(this);
 
         if (lastTheme != UserPreferences.getNoTitleTheme()) {
-            // Nav drawer is empty for half a second after recreating. Don't confuse users with that.
-            drawerLayout.closeDrawer(navDrawer);
-            recreate();
+            finish();
+            startActivity(new Intent(this, MainActivity.class));
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java
Patch:
@@ -39,7 +39,7 @@
 public class EpisodeItemViewHolder extends RecyclerView.ViewHolder {
     private static final String TAG = "EpisodeItemViewHolder";
 
-    private final View container;
+    public final View container;
     public final ImageView dragHandle;
     private final TextView placeholder;
     private final ImageView cover;

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -97,7 +97,7 @@ private void load() {
 
     @Nullable
     private String loadData() {
-        if (controller != null && controller.getMedia() == null) {
+        if (controller == null || controller.getMedia() == null) {
             return null;
         }
         Timeline timeline = new Timeline(getActivity(), controller.getMedia());

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -97,7 +97,7 @@ private void load() {
 
     @Nullable
     private String loadData() {
-        if (controller != null && controller.getMedia() == null) {
+        if (controller == null || controller.getMedia() == null) {
             return null;
         }
         Timeline timeline = new Timeline(getActivity(), controller.getMedia());

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -311,9 +311,9 @@ public synchronized void startChapterLoader(@NonNull final Playable media) {
 
         if (media.getChapters() == null) {
             Completable.create(emitter -> {
-                        media.loadChapterMarks(context);
-                        emitter.onComplete();
-                    })
+                media.loadChapterMarks(context);
+                emitter.onComplete();
+            })
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
                     .subscribe(() -> callback.onChapterLoaded(media));

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1731,7 +1731,7 @@ private void cancelPositionObserver() {
 
     private void addPlayableToQueue(Playable playable) {
         if (playable instanceof FeedMedia) {
-            long itemId = ((FeedMedia) playable).getId();
+            long itemId = ((FeedMedia) playable).getItem().getId();
             DBWriter.addQueueItem(this, false, false, itemId);
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1720,7 +1720,7 @@ private void cancelPositionObserver() {
 
     private void addPlayableToQueue(Playable playable) {
         if (playable instanceof FeedMedia) {
-            long itemId = ((FeedMedia) playable).getId();
+            long itemId = ((FeedMedia) playable).getItem().getId();
             DBWriter.addQueueItem(this, false, false, itemId);
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -224,7 +224,7 @@ public boolean isCurrentlyPlaying() {
 
     public boolean hasAlmostEnded() {
         int smartMarkAsPlayedSecs = UserPreferences.getSmartMarkAsPlayedSecs();
-        return this.position >= this.duration - smartMarkAsPlayedSecs * 1000;
+        return this.duration > 0 && this.position >= this.duration - smartMarkAsPlayedSecs * 1000;
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -97,7 +97,7 @@ private void load() {
 
     @Nullable
     private String loadData() {
-        if (controller.getMedia() == null) {
+        if (controller != null && controller.getMedia() == null) {
             return null;
         }
         Timeline timeline = new Timeline(getActivity(), controller.getMedia());

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -97,7 +97,7 @@ private void load() {
 
     @Nullable
     private String loadData() {
-        if (controller.getMedia() == null) {
+        if (controller != null && controller.getMedia() == null) {
             return null;
         }
         Timeline timeline = new Timeline(getActivity(), controller.getMedia());

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -98,7 +98,7 @@ private void addUrl(String url) {
     private void performSearch() {
         String query = combinedFeedSearchBox.getText().toString();
 
-        if (query.startsWith("http")) {
+        if (query.matches("http[s]?://.*")) {
             addUrl(query);
             return;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -98,7 +98,7 @@ private void addUrl(String url) {
     private void performSearch() {
         String query = combinedFeedSearchBox.getText().toString();
 
-        if (query.startsWith("http")) {
+        if (query.matches("http[s]?://.*")) {
             addUrl(query);
             return;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -323,7 +323,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         activity.loadChildFragment(ItemPagerFragment.newInstance(ids, position));
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onEvent(FeedEvent event) {
         Log.d(TAG, "onEvent() called with: " + "event = [" + event + "]");
         if (event.feedId == feedID) {

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -323,7 +323,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         activity.loadChildFragment(ItemPagerFragment.newInstance(ids, position));
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onEvent(FeedEvent event) {
         Log.d(TAG, "onEvent() called with: " + "event = [" + event + "]");
         if (event.feedId == feedID) {

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -80,15 +80,15 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
     private void setupUi() {
         final SeekBar barPlaybackSpeed = dialog.findViewById(R.id.playback_speed);
-        final Button butDecSpeed = dialog.findViewById(R.id.butDecSpeed);
+        final TextView butDecSpeed = dialog.findViewById(R.id.butDecSpeed);
         butDecSpeed.setOnClickListener(v -> {
             if (controller != null && controller.canSetPlaybackSpeed()) {
                 barPlaybackSpeed.setProgress(barPlaybackSpeed.getProgress() - 2);
             } else {
                 VariableSpeedDialog.showGetPluginDialog(getContext());
             }
         });
-        final Button butIncSpeed = (Button) dialog.findViewById(R.id.butIncSpeed);
+        final TextView butIncSpeed = dialog.findViewById(R.id.butIncSpeed);
         butIncSpeed.setOnClickListener(v -> {
             if (controller != null && controller.canSetPlaybackSpeed()) {
                 barPlaybackSpeed.setProgress(barPlaybackSpeed.getProgress() + 2);

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -143,7 +143,7 @@ public void onPageSelected(int position) {
         pageIndicator = root.findViewById(R.id.page_indicator);
         pageIndicator.setViewPager(pager);
         pageIndicator.setOnClickListener(v ->
-                pager.setCurrentItem((pager.getCurrentItem() + 1) % pager.getChildCount()));
+                pager.setCurrentItem((pager.getCurrentItem() + 1) % NUM_CONTENT_FRAGMENTS));
         return root;
     }
 

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -80,15 +80,15 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
     private void setupUi() {
         final SeekBar barPlaybackSpeed = dialog.findViewById(R.id.playback_speed);
-        final Button butDecSpeed = dialog.findViewById(R.id.butDecSpeed);
+        final TextView butDecSpeed = dialog.findViewById(R.id.butDecSpeed);
         butDecSpeed.setOnClickListener(v -> {
             if (controller != null && controller.canSetPlaybackSpeed()) {
                 barPlaybackSpeed.setProgress(barPlaybackSpeed.getProgress() - 2);
             } else {
                 VariableSpeedDialog.showGetPluginDialog(getContext());
             }
         });
-        final Button butIncSpeed = (Button) dialog.findViewById(R.id.butIncSpeed);
+        final TextView butIncSpeed = dialog.findViewById(R.id.butIncSpeed);
         butIncSpeed.setOnClickListener(v -> {
             if (controller != null && controller.canSetPlaybackSpeed()) {
                 barPlaybackSpeed.setProgress(barPlaybackSpeed.getProgress() + 2);

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -143,7 +143,7 @@ public void onPageSelected(int position) {
         pageIndicator = root.findViewById(R.id.page_indicator);
         pageIndicator.setViewPager(pager);
         pageIndicator.setOnClickListener(v ->
-                pager.setCurrentItem((pager.getCurrentItem() + 1) % pager.getChildCount()));
+                pager.setCurrentItem((pager.getCurrentItem() + 1) % NUM_CONTENT_FRAGMENTS));
         return root;
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -145,15 +145,15 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private void showNoPodcastFoundError() {
-        new AlertDialog.Builder(OnlineFeedViewActivity.this)
+        runOnUiThread(() -> new AlertDialog.Builder(OnlineFeedViewActivity.this)
                 .setNeutralButton(android.R.string.ok, (dialog, which) -> finish())
                 .setTitle(R.string.error_label)
                 .setMessage(R.string.null_value_podcast_error)
                 .setOnDismissListener(dialog1 -> {
                     setResult(RESULT_ERROR);
                     finish();
                 })
-                .show();
+                .show());
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -145,15 +145,15 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private void showNoPodcastFoundError() {
-        new AlertDialog.Builder(OnlineFeedViewActivity.this)
+        runOnUiThread(() -> new AlertDialog.Builder(OnlineFeedViewActivity.this)
                 .setNeutralButton(android.R.string.ok, (dialog, which) -> finish())
                 .setTitle(R.string.error_label)
                 .setMessage(R.string.null_value_podcast_error)
                 .setOnDismissListener(dialog1 -> {
                     setResult(RESULT_ERROR);
                     finish();
                 })
-                .show();
+                .show());
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemPagerFragment.java
Patch:
@@ -86,6 +86,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         pager.setId(newId);
         pager.setAdapter(new ItemPagerAdapter(this));
         pager.setCurrentItem(feedItemPos, false);
+        pager.setOffscreenPageLimit(1);
         loadItem(feedItems[feedItemPos]);
         pager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemPagerFragment.java
Patch:
@@ -86,6 +86,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         pager.setId(newId);
         pager.setAdapter(new ItemPagerAdapter(this));
         pager.setCurrentItem(feedItemPos, false);
+        pager.setOffscreenPageLimit(1);
         loadItem(feedItems[feedItemPos]);
         pager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/PlayActionButton.java
Patch:
@@ -46,7 +46,7 @@ public void onClick(Context context) {
                 .start();
 
         if (media.getMediaType() == MediaType.VIDEO) {
-            context.startActivity(PlaybackService.getPlayerActivityIntent(context));
+            context.startActivity(PlaybackService.getPlayerActivityIntent(context, media));
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/StreamActionButton.java
Patch:
@@ -49,7 +49,7 @@ public void onClick(Context context) {
                 .start();
 
         if (media.getMediaType() == MediaType.VIDEO) {
-            context.startActivity(PlaybackService.getPlayerActivityIntent(context));
+            context.startActivity(PlaybackService.getPlayerActivityIntent(context, media));
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/PlayActionButton.java
Patch:
@@ -46,7 +46,7 @@ public void onClick(Context context) {
                 .start();
 
         if (media.getMediaType() == MediaType.VIDEO) {
-            context.startActivity(PlaybackService.getPlayerActivityIntent(context));
+            context.startActivity(PlaybackService.getPlayerActivityIntent(context, media));
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/StreamActionButton.java
Patch:
@@ -49,7 +49,7 @@ public void onClick(Context context) {
                 .start();
 
         if (media.getMediaType() == MediaType.VIDEO) {
-            context.startActivity(PlaybackService.getPlayerActivityIntent(context));
+            context.startActivity(PlaybackService.getPlayerActivityIntent(context, media));
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/FavoriteEpisodesFragment.java
Patch:
@@ -10,6 +10,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
+import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.view.viewholder.EpisodeItemViewHolder;
 import org.greenrobot.eventbus.Subscribe;
 
@@ -68,9 +69,8 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int swipeDir) {
                 if (item != null) {
                     DBWriter.removeFavoriteItem(item);
 
-                    Snackbar snackbar = Snackbar.make(root, getString(R.string.removed_item), Snackbar.LENGTH_LONG);
-                    snackbar.setAction(getString(R.string.undo), v -> DBWriter.addFavoriteItem(item));
-                    snackbar.show();
+                    ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.removed_item, Snackbar.LENGTH_LONG)
+                        .setAction(getString(R.string.undo), v -> DBWriter.addFavoriteItem(item));
                 }
             }
         };

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -91,7 +91,7 @@ public void onClick(View v) {
                 android.content.ClipboardManager cm = (android.content.ClipboardManager) getContext()
                         .getSystemService(Context.CLIPBOARD_SERVICE);
                 cm.setPrimaryClip(clipData);
-                Snackbar.make(getView(), R.string.copied_url_msg, Snackbar.LENGTH_SHORT).show();
+                ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.copied_url_msg, Snackbar.LENGTH_SHORT);
             }
         }
     };

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -142,7 +142,8 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
                     && ObjectsCompat.equals(item.getMedia().getIdentifier(), controller.getMedia().getIdentifier())) {
                 controller.seekTo(time);
             } else {
-                Snackbar.make(getView(), R.string.play_this_to_seek_position, Snackbar.LENGTH_LONG).show();
+                ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.play_this_to_seek_position,
+                        Snackbar.LENGTH_LONG);
             }
         });
         registerForContextMenu(webvDescription);

File: app/src/main/java/de/danoeh/antennapod/fragment/FavoriteEpisodesFragment.java
Patch:
@@ -10,6 +10,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
+import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.view.viewholder.EpisodeItemViewHolder;
 import org.greenrobot.eventbus.Subscribe;
 
@@ -68,9 +69,8 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int swipeDir) {
                 if (item != null) {
                     DBWriter.removeFavoriteItem(item);
 
-                    Snackbar snackbar = Snackbar.make(root, getString(R.string.removed_item), Snackbar.LENGTH_LONG);
-                    snackbar.setAction(getString(R.string.undo), v -> DBWriter.addFavoriteItem(item));
-                    snackbar.show();
+                    ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.removed_item, Snackbar.LENGTH_LONG)
+                        .setAction(getString(R.string.undo), v -> DBWriter.addFavoriteItem(item));
                 }
             }
         };

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedInfoFragment.java
Patch:
@@ -91,7 +91,7 @@ public void onClick(View v) {
                 android.content.ClipboardManager cm = (android.content.ClipboardManager) getContext()
                         .getSystemService(Context.CLIPBOARD_SERVICE);
                 cm.setPrimaryClip(clipData);
-                Snackbar.make(getView(), R.string.copied_url_msg, Snackbar.LENGTH_SHORT).show();
+                ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.copied_url_msg, Snackbar.LENGTH_SHORT);
             }
         }
     };

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -142,7 +142,8 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
                     && ObjectsCompat.equals(item.getMedia().getIdentifier(), controller.getMedia().getIdentifier())) {
                 controller.seekTo(time);
             } else {
-                Snackbar.make(getView(), R.string.play_this_to_seek_position, Snackbar.LENGTH_LONG).show();
+                ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.play_this_to_seek_position,
+                        Snackbar.LENGTH_LONG);
             }
         });
         registerForContextMenu(webvDescription);

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -118,7 +118,7 @@ private void feedValid(Feed feed, Feed parsedFeed, String feedType) {
                     assertEquals(media.getMime_type(), parsedMedia.getMime_type());
                 }
 
-                assertEquals(item.getImageUrl(), parsedFeed.getImageUrl());
+                assertEquals(feed.getImageUrl(), item.getImageLocation());
 
                 if (item.getChapters() != null) {
                     assertNotNull(parsedItem.getChapters());

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastUtils.java
Patch:
@@ -100,8 +100,8 @@ public static MediaInfo convertFromFeedMedia(FeedMedia media){
                 metadata.putString(MediaMetadata.KEY_SUBTITLE, subtitle);
             }
 
-            if (!TextUtils.isEmpty(feedItem.getImageUrl())) {
-                metadata.addImage(new WebImage(Uri.parse(feedItem.getImageUrl())));
+            if (!TextUtils.isEmpty(feedItem.getImageLocation())) {
+                metadata.addImage(new WebImage(Uri.parse(feedItem.getImageLocation())));
             }
             Calendar calendar = Calendar.getInstance();
             calendar.setTime(media.getItem().getPubDate());

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -118,7 +118,7 @@ private void feedValid(Feed feed, Feed parsedFeed, String feedType) {
                     assertEquals(media.getMime_type(), parsedMedia.getMime_type());
                 }
 
-                assertEquals(item.getImageUrl(), parsedFeed.getImageUrl());
+                assertEquals(feed.getImageUrl(), item.getImageLocation());
 
                 if (item.getChapters() != null) {
                     assertNotNull(parsedItem.getChapters());

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastUtils.java
Patch:
@@ -100,8 +100,8 @@ public static MediaInfo convertFromFeedMedia(FeedMedia media){
                 metadata.putString(MediaMetadata.KEY_SUBTITLE, subtitle);
             }
 
-            if (!TextUtils.isEmpty(feedItem.getImageUrl())) {
-                metadata.addImage(new WebImage(Uri.parse(feedItem.getImageUrl())));
+            if (!TextUtils.isEmpty(feedItem.getImageLocation())) {
+                metadata.addImage(new WebImage(Uri.parse(feedItem.getImageLocation())));
             }
             Calendar calendar = Calendar.getInstance();
             calendar.setTime(media.getItem().getPubDate());

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java
Patch:
@@ -83,14 +83,14 @@ String getPrefName() {
     @Override
     public void onStart() {
         super.onStart();
-        setHasOptionsMenu(true);
         EventBus.getDefault().register(this);
         loadItems();
     }
 
     @Override
     public void onResume() {
         super.onResume();
+        setHasOptionsMenu(true);
         registerForContextMenu(recyclerView);
     }
 

File: app/src/main/java/com/google/android/material/bottomsheet/ViewPagerBottomSheetBehavior.java
Patch:
@@ -6,6 +6,7 @@
 import android.view.ViewGroup;
 
 import androidx.core.view.ViewCompat;
+import androidx.recyclerview.widget.RecyclerView;
 import androidx.viewpager2.widget.ViewPager2;
 
 import java.lang.ref.WeakReference;
@@ -34,7 +35,8 @@ View findScrollingChild(View view) {
 
         if (view instanceof ViewPager2) {
             ViewPager2 viewPager = (ViewPager2) view;
-            View currentViewPagerChild = viewPager.getChildAt(viewPager.getCurrentItem());
+            RecyclerView recycler = (RecyclerView) viewPager.getChildAt(0);
+            View currentViewPagerChild = recycler.getChildAt(viewPager.getCurrentItem());
             if (currentViewPagerChild != null) {
                 return findScrollingChild(currentViewPagerChild);
             }

File: app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java
Patch:
@@ -131,7 +131,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         pager = root.findViewById(R.id.pager);
         pager.setAdapter(new AudioPlayerPagerAdapter(this));
         // Required for getChildAt(int) in ViewPagerBottomSheetBehavior to return the correct page
-        // pager.setOffscreenPageLimit(NUM_CONTENT_FRAGMENTS);
+        pager.setOffscreenPageLimit((int) NUM_CONTENT_FRAGMENTS);
         pager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override
             public void onPageSelected(int position) {

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -62,6 +62,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
                 case POS_LOG:
                     tab.setText(R.string.downloads_log_label);
                     break;
+                default:
+                    break;
             }
         }).attach();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -66,6 +66,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                 case POS_FAV_EPISODES:
                     tab.setText(R.string.favorite_episodes_label);
                     break;
+                default:
+                    break;
             }
         }).attach();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/StatisticsFragment.java
Patch:
@@ -54,6 +54,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                 case POS_SPACE_TAKEN:
                     tab.setText(R.string.download_statistics_label);
                     break;
+                default:
+                    break;
             }
         }).attach();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -58,6 +58,7 @@
 import org.greenrobot.eventbus.ThreadMode;
 
 import java.util.List;
+import java.util.Locale;
 
 import static de.danoeh.antennapod.dialog.EpisodesApplyActionFragment.ACTION_DELETE;
 import static de.danoeh.antennapod.dialog.EpisodesApplyActionFragment.ACTION_DOWNLOAD;
@@ -578,7 +579,8 @@ private void onFragmentLoaded(final boolean restoreScrollPosition) {
     }
 
     private void refreshInfoBar() {
-        String info = queue.size() + getString(R.string.episodes_suffix);
+        String info = String.format(Locale.getDefault(), "%d%s",
+                queue.size(), getString(R.string.episodes_suffix));
         if (queue.size() > 0) {
             long timeLeft = 0;
             for (FeedItem item : queue) {

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/NetworkPreferencesFragment.java
Patch:
@@ -15,6 +15,7 @@
 
 import java.util.Calendar;
 import java.util.GregorianCalendar;
+import java.util.Locale;
 import java.util.concurrent.TimeUnit;
 
 public class NetworkPreferencesFragment extends PreferenceFragmentCompat {
@@ -96,7 +97,8 @@ private void setUpdateIntervalText() {
     private void setParallelDownloadsText(int downloads) {
         final Resources res = getActivity().getResources();
 
-        String s = downloads + res.getString(R.string.parallel_downloads_suffix);
+        String s = String.format(Locale.getDefault(), "%d%s",
+                downloads, res.getString(R.string.parallel_downloads_suffix));
         findPreference(UserPreferences.PREF_PARALLEL_DOWNLOADS).setSummary(s);
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -16,6 +16,7 @@
 import android.widget.TextView;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.core.util.ObjectsCompat;
 import androidx.fragment.app.Fragment;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.load.resource.bitmap.FitCenter;
@@ -137,7 +138,8 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         }
         webvDescription = layout.findViewById(R.id.webvDescription);
         webvDescription.setTimecodeSelectedListener(time -> {
-            if (controller != null && item.getMedia().getIdentifier().equals(controller.getMedia().getIdentifier())) {
+            if (controller != null && item.getMedia() != null && controller.getMedia() != null
+                    && ObjectsCompat.equals(item.getMedia().getIdentifier(), controller.getMedia().getIdentifier())) {
                 controller.seekTo(time);
             } else {
                 Snackbar.make(getView(), R.string.play_this_to_seek_position, Snackbar.LENGTH_LONG).show();

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -535,14 +535,14 @@ private void showErrorDialog(String errorMsg) {
             } else {
                 builder.setMessage(R.string.error_msg_prefix);
             }
-            builder.setNeutralButton(android.R.string.ok,
+            builder.setPositiveButton(android.R.string.ok,
                     (dialog, which) -> dialog.cancel()
             );
-            builder.setOnCancelListener(dialog -> {
+            builder.setOnDismissListener(dialog -> {
                 setResult(RESULT_ERROR);
                 finish();
             });
-            if(dialog != null && dialog.isShowing()) {
+            if (dialog != null && dialog.isShowing()) {
                 dialog.dismiss();
             }
             dialog = builder.show();

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -431,6 +431,7 @@ private void handleNavIntent() {
             } else if (feedId > 0) {
                 loadFeedFragmentById(feedId, args);
             }
+            sheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);
         } else if (intent.getBooleanExtra(EXTRA_OPEN_PLAYER, false)) {
             sheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED);
             bottomSheetCallback.onSlide(null, 1.0f);

File: app/src/androidTest/java/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -20,6 +20,7 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
@@ -685,7 +686,7 @@ public void testMoveQueueItem() throws InterruptedException, ExecutionException,
                 if (from == to) {
                     continue;
                 }
-                Log.d(TAG, String.format("testMoveQueueItem: From=%d, To=%d", from, to));
+                Log.d(TAG, String.format(Locale.US, "testMoveQueueItem: From=%d, To=%d", from, to));
                 final long fromID = feed.getItems().get(from).getId();
 
                 adapter = PodDBAdapter.getInstance();

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -17,6 +17,7 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.event.QueueEvent;
@@ -89,13 +90,13 @@ private String hostFeed(Feed feed) throws IOException {
         out.close();
         int id = server.serveFile(feedFile);
         Assert.assertTrue(id != -1);
-        return String.format("%s/files/%d", server.getBaseUrl(), id);
+        return String.format(Locale.US, "%s/files/%d", server.getBaseUrl(), id);
     }
 
     private String hostFile(File file) {
         int id = server.serveFile(file);
         Assert.assertTrue(id != -1);
-        return String.format("%s/files/%d", server.getBaseUrl(), id);
+        return String.format(Locale.US, "%s/files/%d", server.getBaseUrl(), id);
     }
 
     private File newMediaFile(String name) throws IOException {

File: app/src/androidTest/java/de/test/antennapod/util/service/download/HTTPBin.java
Patch:
@@ -19,6 +19,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Random;
 import java.util.zip.GZIPOutputStream;
@@ -88,7 +89,8 @@ public Response serve(IHTTPSession session) {
 
         String[] segments = session.getUri().split("/");
         if (segments.length < 3) {
-            Log.w(TAG, String.format("Invalid number of URI segments: %d %s", segments.length, Arrays.toString(segments)));
+            Log.w(TAG, String.format(Locale.US, "Invalid number of URI segments: %d %s",
+                    segments.length, Arrays.toString(segments)));
             get404Error();
         }
 

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -20,6 +20,7 @@
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 
 import java.util.List;
+import java.util.Locale;
 
 public class PlaybackControlsDialog extends DialogFragment {
     private static final String ARGUMENT_IS_PLAYING_VIDEO = "isPlayingVideo";
@@ -99,7 +100,7 @@ private void setupUi() {
         final TextView txtvPlaybackSpeed = dialog.findViewById(R.id.txtvPlaybackSpeed);
         float currentSpeed = getCurrentSpeed();
 
-        txtvPlaybackSpeed.setText(String.format("%.2fx", currentSpeed));
+        txtvPlaybackSpeed.setText(String.format(Locale.getDefault(), "%.2fx", currentSpeed));
         barPlaybackSpeed.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
@@ -114,7 +115,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                         UserPreferences.setPlaybackSpeed(playbackSpeed);
                     }
 
-                    String speedStr = String.format("%.2fx", playbackSpeed);
+                    String speedStr = String.format(Locale.getDefault(), "%.2fx", playbackSpeed);
                     txtvPlaybackSpeed.setText(speedStr);
                 } else if (fromUser) {
                     float speed = getCurrentSpeed();

File: core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java
Patch:
@@ -10,6 +10,7 @@
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.ExecutionException;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
@@ -72,7 +73,7 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {
         int counter = delete.size();
 
 
-        Log.i(TAG, String.format(
+        Log.i(TAG, String.format(Locale.US,
                 "Auto-delete deleted %d episodes (%d requested)", counter,
                 numberOfEpisodesToDelete));
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.ExecutionException;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
@@ -64,7 +65,7 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {
         int counter = delete.size();
 
 
-        Log.i(TAG, String.format(
+        Log.i(TAG, String.format(Locale.US,
                 "Auto-delete deleted %d episodes (%d requested)", counter,
                 numberOfEpisodesToDelete));
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -16,6 +16,7 @@
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.Set;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
@@ -94,7 +95,7 @@ public static Future<?> deleteFeedMediaOfItem(@NonNull final Context context,
 
     private static boolean deleteFeedMediaSynchronous(
             @NonNull Context context, @NonNull FeedMedia media) {
-        Log.i(TAG, String.format("Requested to delete FeedMedia [id=%d, title=%s, downloaded=%s",
+        Log.i(TAG, String.format(Locale.US, "Requested to delete FeedMedia [id=%d, title=%s, downloaded=%s",
                 media.getId(), media.getEpisodeTitle(), media.isDownloaded()));
         if (media.isDownloaded()) {
             // delete downloaded media file

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -193,7 +193,7 @@ private void addTimecodes(Document document) {
 
                 String replacementText = group;
                 if (time < playableDuration) {
-                    replacementText = String.format(Locale.getDefault(), TIMECODE_LINK, time, group);
+                    replacementText = String.format(Locale.US, TIMECODE_LINK, time, group);
                 }
 
                 matcherForElement.appendReplacement(buffer, replacementText);

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastManager.java
Patch:
@@ -1520,7 +1520,7 @@ public MediaQueueItem getPreLoadingItem() {
     private void onQueueUpdated(List<MediaQueueItem> queueItems, MediaQueueItem item,
                                 int repeatMode, boolean shuffle) {
         Log.d(TAG, "onQueueUpdated() reached");
-        Log.d(TAG, String.format("Queue Items size: %d, Item: %s, Repeat Mode: %d, Shuffle: %s",
+        Log.d(TAG, String.format(Locale.US, "Queue Items size: %d, Item: %s, Repeat Mode: %d, Shuffle: %s",
                 queueItems == null ? 0 : queueItems.size(), item, repeatMode, shuffle));
         if (queueItems != null) {
             mediaQueue = new MediaQueue(new CopyOnWriteArrayList<>(queueItems), item, shuffle,

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -431,6 +431,7 @@ private void handleNavIntent() {
             } else if (feedId > 0) {
                 loadFeedFragmentById(feedId, args);
             }
+            sheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);
         } else if (intent.getBooleanExtra(EXTRA_OPEN_PLAYER, false)) {
             sheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED);
             bottomSheetCallback.onSlide(null, 1.0f);

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -535,14 +535,14 @@ private void showErrorDialog(String errorMsg) {
             } else {
                 builder.setMessage(R.string.error_msg_prefix);
             }
-            builder.setNeutralButton(android.R.string.ok,
+            builder.setPositiveButton(android.R.string.ok,
                     (dialog, which) -> dialog.cancel()
             );
-            builder.setOnCancelListener(dialog -> {
+            builder.setOnDismissListener(dialog -> {
                 setResult(RESULT_ERROR);
                 finish();
             });
-            if(dialog != null && dialog.isShowing()) {
+            if (dialog != null && dialog.isShowing()) {
                 dialog.dismiss();
             }
             dialog = builder.show();

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -16,6 +16,7 @@
 import android.widget.TextView;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.core.util.ObjectsCompat;
 import androidx.fragment.app.Fragment;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.load.resource.bitmap.FitCenter;
@@ -137,7 +138,8 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         }
         webvDescription = layout.findViewById(R.id.webvDescription);
         webvDescription.setTimecodeSelectedListener(time -> {
-            if (controller != null && item.getMedia().getIdentifier().equals(controller.getMedia().getIdentifier())) {
+            if (controller != null && item.getMedia() != null && controller.getMedia() != null
+                    && ObjectsCompat.equals(item.getMedia().getIdentifier(), controller.getMedia().getIdentifier())) {
                 controller.seekTo(time);
             } else {
                 Snackbar.make(getView(), R.string.play_this_to_seek_position, Snackbar.LENGTH_LONG).show();

File: app/src/androidTest/java/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -20,6 +20,7 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
@@ -685,7 +686,7 @@ public void testMoveQueueItem() throws InterruptedException, ExecutionException,
                 if (from == to) {
                     continue;
                 }
-                Log.d(TAG, String.format("testMoveQueueItem: From=%d, To=%d", from, to));
+                Log.d(TAG, String.format(Locale.US, "testMoveQueueItem: From=%d, To=%d", from, to));
                 final long fromID = feed.getItems().get(from).getId();
 
                 adapter = PodDBAdapter.getInstance();

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -17,6 +17,7 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.event.QueueEvent;
@@ -89,13 +90,13 @@ private String hostFeed(Feed feed) throws IOException {
         out.close();
         int id = server.serveFile(feedFile);
         Assert.assertTrue(id != -1);
-        return String.format("%s/files/%d", server.getBaseUrl(), id);
+        return String.format(Locale.US, "%s/files/%d", server.getBaseUrl(), id);
     }
 
     private String hostFile(File file) {
         int id = server.serveFile(file);
         Assert.assertTrue(id != -1);
-        return String.format("%s/files/%d", server.getBaseUrl(), id);
+        return String.format(Locale.US, "%s/files/%d", server.getBaseUrl(), id);
     }
 
     private File newMediaFile(String name) throws IOException {

File: app/src/androidTest/java/de/test/antennapod/util/service/download/HTTPBin.java
Patch:
@@ -19,6 +19,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Random;
 import java.util.zip.GZIPOutputStream;
@@ -88,7 +89,8 @@ public Response serve(IHTTPSession session) {
 
         String[] segments = session.getUri().split("/");
         if (segments.length < 3) {
-            Log.w(TAG, String.format("Invalid number of URI segments: %d %s", segments.length, Arrays.toString(segments)));
+            Log.w(TAG, String.format(Locale.US, "Invalid number of URI segments: %d %s",
+                    segments.length, Arrays.toString(segments)));
             get404Error();
         }
 

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -20,6 +20,7 @@
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 
 import java.util.List;
+import java.util.Locale;
 
 public class PlaybackControlsDialog extends DialogFragment {
     private static final String ARGUMENT_IS_PLAYING_VIDEO = "isPlayingVideo";
@@ -99,7 +100,7 @@ private void setupUi() {
         final TextView txtvPlaybackSpeed = dialog.findViewById(R.id.txtvPlaybackSpeed);
         float currentSpeed = getCurrentSpeed();
 
-        txtvPlaybackSpeed.setText(String.format("%.2fx", currentSpeed));
+        txtvPlaybackSpeed.setText(String.format(Locale.getDefault(), "%.2fx", currentSpeed));
         barPlaybackSpeed.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
@@ -114,7 +115,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                         UserPreferences.setPlaybackSpeed(playbackSpeed);
                     }
 
-                    String speedStr = String.format("%.2fx", playbackSpeed);
+                    String speedStr = String.format(Locale.getDefault(), "%.2fx", playbackSpeed);
                     txtvPlaybackSpeed.setText(speedStr);
                 } else if (fromUser) {
                     float speed = getCurrentSpeed();

File: core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java
Patch:
@@ -10,6 +10,7 @@
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.ExecutionException;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
@@ -72,7 +73,7 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {
         int counter = delete.size();
 
 
-        Log.i(TAG, String.format(
+        Log.i(TAG, String.format(Locale.US,
                 "Auto-delete deleted %d episodes (%d requested)", counter,
                 numberOfEpisodesToDelete));
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.ExecutionException;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
@@ -64,7 +65,7 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {
         int counter = delete.size();
 
 
-        Log.i(TAG, String.format(
+        Log.i(TAG, String.format(Locale.US,
                 "Auto-delete deleted %d episodes (%d requested)", counter,
                 numberOfEpisodesToDelete));
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -16,6 +16,7 @@
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.Set;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
@@ -94,7 +95,7 @@ public static Future<?> deleteFeedMediaOfItem(@NonNull final Context context,
 
     private static boolean deleteFeedMediaSynchronous(
             @NonNull Context context, @NonNull FeedMedia media) {
-        Log.i(TAG, String.format("Requested to delete FeedMedia [id=%d, title=%s, downloaded=%s",
+        Log.i(TAG, String.format(Locale.US, "Requested to delete FeedMedia [id=%d, title=%s, downloaded=%s",
                 media.getId(), media.getEpisodeTitle(), media.isDownloaded()));
         if (media.isDownloaded()) {
             // delete downloaded media file

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -193,7 +193,7 @@ private void addTimecodes(Document document) {
 
                 String replacementText = group;
                 if (time < playableDuration) {
-                    replacementText = String.format(Locale.getDefault(), TIMECODE_LINK, time, group);
+                    replacementText = String.format(Locale.US, TIMECODE_LINK, time, group);
                 }
 
                 matcherForElement.appendReplacement(buffer, replacementText);

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastManager.java
Patch:
@@ -1520,7 +1520,7 @@ public MediaQueueItem getPreLoadingItem() {
     private void onQueueUpdated(List<MediaQueueItem> queueItems, MediaQueueItem item,
                                 int repeatMode, boolean shuffle) {
         Log.d(TAG, "onQueueUpdated() reached");
-        Log.d(TAG, String.format("Queue Items size: %d, Item: %s, Repeat Mode: %d, Shuffle: %s",
+        Log.d(TAG, String.format(Locale.US, "Queue Items size: %d, Item: %s, Repeat Mode: %d, Shuffle: %s",
                 queueItems == null ? 0 : queueItems.size(), item, repeatMode, shuffle));
         if (queueItems != null) {
             mediaQueue = new MediaQueue(new CopyOnWriteArrayList<>(queueItems), item, shuffle,

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -52,7 +52,7 @@ public void testUploadSubscription2() throws GpodnetServiceException {
         ArrayList<String> l = new ArrayList<>();
         l.add("http://bitsundso.de/feed");
         l.add("http://gamesundso.de/feed");
-        service.uploadSubscriptions( "radio", l);
+        service.uploadSubscriptions("radio", l);
     }
 
     @Test

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -116,9 +116,9 @@ final void loadData() {
 
             @Override
             protected List<GpodnetPodcast> doInBackground(Void... params) {
-                GpodnetService service = null;
                 try {
-                    service = new GpodnetService(AntennapodHttpClient.getHttpClient(), GpodnetPreferences.getHostname());
+                    GpodnetService service = new GpodnetService(AntennapodHttpClient.getHttpClient(),
+                            GpodnetPreferences.getHostname());
                     return loadPodcastData(service);
                 } catch (GpodnetServiceException e) {
                     exception = e;

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/TagListFragment.java
Patch:
@@ -92,7 +92,8 @@ private void startLoadTask() {
 
             @Override
             protected List<GpodnetTag> doInBackground(Void... params) {
-                GpodnetService service = new GpodnetService(AntennapodHttpClient.getHttpClient(), GpodnetPreferences.getHostname());
+                GpodnetService service = new GpodnetService(AntennapodHttpClient.getHttpClient(),
+                        GpodnetPreferences.getHostname());
                 try {
                     return service.getTopTags(COUNT);
                 } catch (GpodnetServiceException e) {

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -140,7 +140,7 @@ public void onStateChanged(@NonNull View view, int state) {
         public void onSlide(@NonNull View view, float slideOffset) {
             AudioPlayerFragment audioPlayer = (AudioPlayerFragment) getSupportFragmentManager()
                     .findFragmentByTag(AudioPlayerFragment.TAG);
-            float condensedSlideOffset = Math.max(0.0f, Math.min(0.1f, slideOffset - 0.5f)) / 0.1f;
+            float condensedSlideOffset = Math.max(0.0f, Math.min(0.2f, slideOffset - 0.2f)) / 0.2f;
             audioPlayer.getExternalPlayerHolder().setAlpha(1 - condensedSlideOffset);
             audioPlayer.getExternalPlayerHolder().setVisibility(
                     condensedSlideOffset > 0.99f ? View.GONE : View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -138,7 +138,7 @@ public void onStateChanged(@NonNull View view, int state) {
         public void onSlide(@NonNull View view, float slideOffset) {
             AudioPlayerFragment audioPlayer = (AudioPlayerFragment) getSupportFragmentManager()
                     .findFragmentByTag(AudioPlayerFragment.TAG);
-            float condensedSlideOffset = Math.max(0.0f, Math.min(0.1f, slideOffset - 0.5f)) / 0.1f;
+            float condensedSlideOffset = Math.max(0.0f, Math.min(0.2f, slideOffset - 0.2f)) / 0.2f;
             audioPlayer.getExternalPlayerHolder().setAlpha(1 - condensedSlideOffset);
             audioPlayer.getExternalPlayerHolder().setVisibility(
                     condensedSlideOffset > 0.99f ? View.GONE : View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -313,7 +313,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 }
         }
         if (resId != 0) {
-            Snackbar.make(getActivity().findViewById(R.id.content), resId, Snackbar.LENGTH_SHORT)
+            Snackbar.make(getActivity().findViewById(android.R.id.content), resId, Snackbar.LENGTH_SHORT)
                     .show();
             return true;
         } else {
@@ -469,7 +469,7 @@ private void deleteChecked() {
 
     private void close(@PluralsRes int msgId, int numItems) {
         if (numItems > 0) {
-            Snackbar.make(getActivity().findViewById(R.id.content),
+            Snackbar.make(getActivity().findViewById(android.R.id.content),
                     getResources().getQuantityString(msgId, numItems, numItems),
                     Snackbar.LENGTH_LONG
                     )

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -176,13 +176,15 @@ public void loadFragment(String tag, Bundle args) {
             default:
                 // default to the queue
                 fragment = new QueueFragment();
+                tag = QueueFragment.TAG;
                 args = null;
                 break;
         }
 
         if (args != null) {
             fragment.setArguments(args);
         }
+        NavDrawerFragment.saveLastNavFragment(this, tag);
         loadFragment(fragment);
     }
 
@@ -191,6 +193,7 @@ public void loadFeedFragmentById(long feedId, Bundle args) {
         if (args != null) {
             fragment.setArguments(args);
         }
+        NavDrawerFragment.saveLastNavFragment(this, String.valueOf(feedId));
         loadFragment(fragment);
     }
 
@@ -367,7 +370,6 @@ public void onBackPressed() {
                         super.onBackPressed();
                     } else {
                         loadFragment(UserPreferences.getBackButtonGoToPage(), null);
-                        NavDrawerFragment.saveLastNavFragment(this, UserPreferences.getBackButtonGoToPage());
                     }
                     break;
                 default: super.onBackPressed();

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -176,13 +176,15 @@ public void loadFragment(String tag, Bundle args) {
             default:
                 // default to the queue
                 fragment = new QueueFragment();
+                tag = QueueFragment.TAG;
                 args = null;
                 break;
         }
 
         if (args != null) {
             fragment.setArguments(args);
         }
+        NavDrawerFragment.saveLastNavFragment(this, tag);
         loadFragment(fragment);
     }
 
@@ -191,6 +193,7 @@ public void loadFeedFragmentById(long feedId, Bundle args) {
         if (args != null) {
             fragment.setArguments(args);
         }
+        NavDrawerFragment.saveLastNavFragment(this, String.valueOf(feedId));
         loadFragment(fragment);
     }
 
@@ -367,7 +370,6 @@ public void onBackPressed() {
                         super.onBackPressed();
                     } else {
                         loadFragment(UserPreferences.getBackButtonGoToPage(), null);
-                        NavDrawerFragment.saveLastNavFragment(this, UserPreferences.getBackButtonGoToPage());
                     }
                     break;
                 default: super.onBackPressed();

File: app/src/main/java/de/danoeh/antennapod/config/DownloadServiceCallbacksImpl.java
Patch:
@@ -48,7 +48,6 @@ public PendingIntent getReportNotificationContentIntent(Context context) {
     @Override
     public PendingIntent getAutoDownloadReportNotificationContentIntent(Context context) {
         Intent intent = new Intent(context, MainActivity.class);
-        intent.putExtra(MainActivity.EXTRA_NAV_TYPE, NavListAdapter.VIEW_TYPE_NAV);
         intent.putExtra(MainActivity.EXTRA_FRAGMENT_TAG, QueueFragment.TAG);
         return PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
     }

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -115,7 +115,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                             return;
                         }
                         try {
-                            DownloadRequester.getInstance().downloadMedia(context, media.getItem());
+                            DownloadRequester.getInstance().downloadMedia(context, true, media.getItem());
                             Toast.makeText(context, R.string.status_downloading_label, Toast.LENGTH_SHORT).show();
                         } catch (DownloadRequestException e) {
                             e.printStackTrace();

File: app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java
Patch:
@@ -120,8 +120,7 @@ private void doTestEventsGeneratedCaseMediaDownloadSuccess(boolean enqueueDownlo
                 assertFalse("The media in test should not yet been downloaded",
                         DBReader.getFeedMedia(testMedia11.getId()).isDownloaded());
 
-                DownloadRequester.getInstance().downloadMedia(false, InstrumentationRegistry.getTargetContext(),
-                        testMedia11.getItem());
+                DownloadRequester.getInstance().downloadMedia(false, InstrumentationRegistry.getTargetContext(), false, testMedia11.getItem());
                 Awaitility.await()
                         .atMost(5000, TimeUnit.MILLISECONDS)
                         .until(() -> feedItemEventListener.getEvents().size() >= numEventsExpected);
@@ -166,7 +165,7 @@ private void doTestCancelDownload_UndoEnqueue(boolean itemAlreadyInQueue) throws
         }
 
         withFeedItemEventListener(feedItemEventListener -> {
-            DownloadRequester.getInstance().downloadMedia(false, context, testMedia11.getItem());
+            DownloadRequester.getInstance().downloadMedia(false, context, false, testMedia11.getItem());
             withDownloadEventListener(downloadEventListener ->
                     Awaitility.await("download is actually running")
                         .atMost(5000, TimeUnit.MILLISECONDS)

File: app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java
Patch:
@@ -77,7 +77,7 @@ private Downloader download(String url, String title, boolean expectedResult) {
 
     private Downloader download(String url, String title, boolean expectedResult, boolean deleteExisting, String username, String password, boolean deleteOnFail) {
         FeedFile feedFile = setupFeedFile(url, title, deleteExisting);
-        DownloadRequest request = new DownloadRequest(feedFile.getFile_url(), url, title, 0, feedFile.getTypeAsInt(), username, password, deleteOnFail, null);
+        DownloadRequest request = new DownloadRequest(feedFile.getFile_url(), url, title, 0, feedFile.getTypeAsInt(), username, password, deleteOnFail, null, false);
         Downloader downloader = new HttpDownloader(request);
         downloader.call();
         DownloadStatus status = downloader.getResult();
@@ -113,7 +113,7 @@ public void test404() {
     public void testCancel() {
         final String url = httpServer.getBaseUrl() + "/delay/3";
         FeedFileImpl feedFile = setupFeedFile(url, "delay", true);
-        final Downloader downloader = new HttpDownloader(new DownloadRequest(feedFile.getFile_url(), url, "delay", 0, feedFile.getTypeAsInt()));
+        final Downloader downloader = new HttpDownloader(new DownloadRequest(feedFile.getFile_url(), url, "delay", 0, feedFile.getTypeAsInt(), false));
         Thread t = new Thread() {
             @Override
             public void run() {

File: core/src/androidTest/java/de/danoeh/antennapod/core/service/download/DownloadRequestTest.java
Patch:
@@ -45,13 +45,13 @@ private void doTestParcelInArrayList(String message,
             FeedFile item1 = createFeedItem(1);
             Bundle arg1 = new Bundle();
             arg1.putString("arg1", "value1");
-            DownloadRequest request1 = new DownloadRequest.Builder(destStr, item1)
+            DownloadRequest request1 = new DownloadRequest.Builder(destStr, item1, false)
                     .withAuthentication(username1, password1)
                     .withArguments(arg1)
                     .build();
 
             FeedFile item2 = createFeedItem(2);
-            DownloadRequest request2 = new DownloadRequest.Builder(destStr, item2)
+            DownloadRequest request2 = new DownloadRequest.Builder(destStr, item2, true)
                     .withAuthentication(username2, password2)
                     .build();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -151,7 +151,7 @@ public void onEventMainThread(FeedItemEvent event) {
                 items.remove(pos);
                 if (item.getMedia().isDownloaded()) {
                     items.add(pos, item);
-                    adapter.notifyItemChanged(pos);
+                    adapter.notifyItemChangedCompat(pos);
                 } else {
                     adapter.notifyItemRemoved(pos);
                 }

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java
Patch:
@@ -358,7 +358,7 @@ public void onEventMainThread(FeedItemEvent event) {
                 episodes.remove(pos);
                 if (shouldUpdatedItemRemainInList(item)) {
                     episodes.add(pos, item);
-                    listAdapter.notifyItemChanged(pos);
+                    listAdapter.notifyItemChangedCompat(pos);
                 } else {
                     listAdapter.notifyItemRemoved(pos);
                 }
@@ -394,7 +394,7 @@ public void onEventMainThread(DownloadEvent event) {
             for (long mediaId : update.mediaIds) {
                 int pos = FeedItemUtil.indexOfItemWithMediaId(episodes, mediaId);
                 if (pos >= 0) {
-                    listAdapter.notifyItemChanged(pos);
+                    listAdapter.notifyItemChangedCompat(pos);
                 }
             }
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java
Patch:
@@ -354,7 +354,7 @@ public void onEventMainThread(FeedItemEvent event) {
             if (pos >= 0) {
                 feed.getItems().remove(pos);
                 feed.getItems().add(pos, item);
-                adapter.notifyItemChanged(pos);
+                adapter.notifyItemChangedCompat(pos);
             }
         }
     }
@@ -370,7 +370,7 @@ public void onEventMainThread(DownloadEvent event) {
             for (long mediaId : update.mediaIds) {
                 int pos = FeedItemUtil.indexOfItemWithMediaId(feed.getItems(), mediaId);
                 if (pos >= 0) {
-                    adapter.notifyItemChanged(pos);
+                    adapter.notifyItemChangedCompat(pos);
                 }
             }
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -115,7 +115,7 @@ public void onEventMainThread(FeedItemEvent event) {
             if (pos >= 0) {
                 playbackHistory.remove(pos);
                 playbackHistory.add(pos, item);
-                adapter.notifyItemChanged(pos);
+                adapter.notifyItemChangedCompat(pos);
             }
         }
     }
@@ -128,7 +128,7 @@ public void onEventMainThread(DownloadEvent event) {
             for (long mediaId : update.mediaIds) {
                 int pos = FeedItemUtil.indexOfItemWithMediaId(playbackHistory, mediaId);
                 if (pos >= 0) {
-                    adapter.notifyItemChanged(pos);
+                    adapter.notifyItemChangedCompat(pos);
                 }
             }
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -178,7 +178,7 @@ public void onEventMainThread(FeedItemEvent event) {
             if (pos >= 0) {
                 queue.remove(pos);
                 queue.add(pos, item);
-                recyclerAdapter.notifyItemChanged(pos);
+                recyclerAdapter.notifyItemChangedCompat(pos);
                 refreshInfoBar();
             }
         }
@@ -195,7 +195,7 @@ public void onEventMainThread(DownloadEvent event) {
             for (long mediaId : update.mediaIds) {
                 int pos = FeedItemUtil.indexOfItemWithMediaId(queue, mediaId);
                 if (pos >= 0) {
-                    recyclerAdapter.notifyItemChanged(pos);
+                    recyclerAdapter.notifyItemChangedCompat(pos);
                 }
             }
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -215,7 +215,7 @@ public void onEventMainThread(FeedItemEvent event) {
             if (pos >= 0) {
                 results.remove(pos);
                 results.add(pos, item);
-                adapter.notifyItemChanged(pos);
+                adapter.notifyItemChangedCompat(pos);
             }
         }
     }
@@ -228,7 +228,7 @@ public void onEventMainThread(DownloadEvent event) {
             for (long mediaId : update.mediaIds) {
                 int pos = FeedItemUtil.indexOfItemWithMediaId(results, mediaId);
                 if (pos >= 0) {
-                    adapter.notifyItemChanged(pos);
+                    adapter.notifyItemChangedCompat(pos);
                 }
             }
         }

File: app/src/main/java/de/danoeh/antennapod/activity/SplashActivity.java
Patch:
@@ -45,6 +45,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
             .subscribe(() -> {
                 Intent intent = new Intent(SplashActivity.this, MainActivity.class);
                 startActivity(intent);
+                overridePendingTransition(0, 0);
                 finish();
             });
     }

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -101,6 +101,8 @@ public void testBackButtonBehaviorGoToPage() {
         solo.goBack();
         solo.goBack();
         assertEquals(solo.getString(R.string.subscriptions_label), getActionbarTitle());
+        solo.goBack();
+        assertThat(mActivityRule.getActivityResult(), hasResultCode(Activity.RESULT_CANCELED));
     }
 
     @Test

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -367,6 +367,7 @@ public void onBackPressed() {
                         super.onBackPressed();
                     } else {
                         loadFragment(UserPreferences.getBackButtonGoToPage(), null);
+                        NavDrawerFragment.saveLastNavFragment(this, UserPreferences.getBackButtonGoToPage());
                     }
                     break;
                 default: super.onBackPressed();

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -76,9 +76,9 @@ private void showAddViaUrlDialog() {
         EditText editText = content.findViewById(R.id.text);
         editText.setHint(R.string.add_podcast_by_url_hint);
         ClipboardManager clipboard = (ClipboardManager) getContext().getSystemService(Context.CLIPBOARD_SERVICE);
-        String clipboardContent = clipboard.getText().toString();
-        if (clipboardContent.startsWith("http")) {
-            editText.setText(clipboardContent);
+        String clipboardContent = clipboard.getText() != null ? clipboard.getText().toString() : "";
+        if (clipboardContent.trim().startsWith("http")) {
+            editText.setText(clipboardContent.trim());
         }
         builder.setView(content);
         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> addUrl(editText.getText().toString()));

File: app/src/main/java/de/danoeh/antennapod/activity/SplashActivity.java
Patch:
@@ -45,6 +45,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
             .subscribe(() -> {
                 Intent intent = new Intent(SplashActivity.this, MainActivity.class);
                 startActivity(intent);
+                overridePendingTransition(0, 0);
                 finish();
             });
     }

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -101,6 +101,8 @@ public void testBackButtonBehaviorGoToPage() {
         solo.goBack();
         solo.goBack();
         assertEquals(solo.getString(R.string.subscriptions_label), getActionbarTitle());
+        solo.goBack();
+        assertThat(mActivityRule.getActivityResult(), hasResultCode(Activity.RESULT_CANCELED));
     }
 
     @Test

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -367,6 +367,7 @@ public void onBackPressed() {
                         super.onBackPressed();
                     } else {
                         loadFragment(UserPreferences.getBackButtonGoToPage(), null);
+                        NavDrawerFragment.saveLastNavFragment(this, UserPreferences.getBackButtonGoToPage());
                     }
                     break;
                 default: super.onBackPressed();

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -76,9 +76,9 @@ private void showAddViaUrlDialog() {
         EditText editText = content.findViewById(R.id.text);
         editText.setHint(R.string.add_podcast_by_url_hint);
         ClipboardManager clipboard = (ClipboardManager) getContext().getSystemService(Context.CLIPBOARD_SERVICE);
-        String clipboardContent = clipboard.getText().toString();
-        if (clipboardContent.startsWith("http")) {
-            editText.setText(clipboardContent);
+        String clipboardContent = clipboard.getText() != null ? clipboard.getText().toString() : "";
+        if (clipboardContent.trim().startsWith("http")) {
+            editText.setText(clipboardContent.trim());
         }
         builder.setView(content);
         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> addUrl(editText.getText().toString()));

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DeleteActionButton.java
Patch:
@@ -38,6 +38,6 @@ public void onClick(Context context) {
 
     @Override
     public int getVisibility() {
-        return (item.isPlayed()) ? View.INVISIBLE : View.VISIBLE;
+        return (item.getMedia() != null && item.getMedia().isDownloaded()) ? View.VISIBLE : View.INVISIBLE;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DownloadActionButton.java
Patch:
@@ -72,7 +72,6 @@ private void addEpisodeToQueue(Context context) {
     private void downloadEpisode(Context context) {
         try {
             DownloadRequester.getInstance().downloadMedia(context, item);
-            Toast.makeText(context, R.string.status_downloading_label, Toast.LENGTH_SHORT).show();
         } catch (DownloadRequestException e) {
             e.printStackTrace();
             DownloadRequestErrorDialogCreator.newRequestErrorDialog(context, e.getMessage());

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DeleteActionButton.java
Patch:
@@ -38,6 +38,6 @@ public void onClick(Context context) {
 
     @Override
     public int getVisibility() {
-        return (item.isPlayed()) ? View.INVISIBLE : View.VISIBLE;
+        return (item.getMedia() != null && item.getMedia().isDownloaded()) ? View.VISIBLE : View.INVISIBLE;
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/glide/FastBlurTransformation.java
Patch:
@@ -22,7 +22,9 @@ public FastBlurTransformation() {
 
     @Override
     protected Bitmap transform(BitmapPool pool, Bitmap source, int outWidth, int outHeight) {
-        Bitmap resized = ThumbnailUtils.extractThumbnail(source, outWidth / 3, outHeight / 3);
+        int targetWidth = outWidth / 3;
+        int targetHeight = (int) (1.0 * outHeight * targetWidth / outWidth);
+        Bitmap resized = ThumbnailUtils.extractThumbnail(source, targetWidth, targetHeight);
         Bitmap result = fastBlur(resized, STACK_BLUR_RADIUS);
         if (result == null) {
             Log.w(TAG, "result was null");

File: core/src/main/java/de/danoeh/antennapod/core/glide/FastBlurTransformation.java
Patch:
@@ -22,7 +22,9 @@ public FastBlurTransformation() {
 
     @Override
     protected Bitmap transform(BitmapPool pool, Bitmap source, int outWidth, int outHeight) {
-        Bitmap resized = ThumbnailUtils.extractThumbnail(source, outWidth / 3, outHeight / 3);
+        int targetWidth = outWidth / 3;
+        int targetHeight = (int) (1.0 * outHeight * targetWidth / outWidth);
+        Bitmap resized = ThumbnailUtils.extractThumbnail(source, targetWidth, targetHeight);
         Bitmap result = fastBlur(resized, STACK_BLUR_RADIUS);
         if (result == null) {
             Log.w(TAG, "result was null");

File: app/src/main/java/de/danoeh/antennapod/dialog/IntraFeedSortDialog.java
Patch:
@@ -29,7 +29,7 @@ public void openDialog() {
             values[i] = SortOrder.valueOf(valueStrs[i]);
         }
 
-        int idxCurrentSort = -1;
+        int idxCurrentSort = 0;
         for  (int i = 0; i < values.length; i++) {
             if (currentSortOrder == values[i]) {
                 idxCurrentSort = i;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java
Patch:
@@ -82,7 +82,7 @@ public FeedHandlerResult call() {
                     DownloadError.SUCCESS, successful, reasonDetailed);
             return result;
         } else {
-            downloadStatus = new DownloadStatus(feed, feed.getHumanReadableIdentifier(),
+            downloadStatus = new DownloadStatus(feed, request.getTitle(),
                     reason, successful, reasonDetailed);
             return null;
         }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java
Patch:
@@ -82,7 +82,7 @@ public FeedHandlerResult call() {
                     DownloadError.SUCCESS, successful, reasonDetailed);
             return result;
         } else {
-            downloadStatus = new DownloadStatus(feed, feed.getHumanReadableIdentifier(),
+            downloadStatus = new DownloadStatus(feed, request.getTitle(),
                     reason, successful, reasonDetailed);
             return null;
         }

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/VisitWebsiteActionButton.java
Patch:
@@ -35,6 +35,6 @@ public void onClick(Context context) {
 
     @Override
     public int getVisibility() {
-        return (item.getLink() != null) ? View.INVISIBLE : View.VISIBLE;
+        return (item.getLink() == null) ? View.INVISIBLE : View.VISIBLE;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -286,7 +286,7 @@ private void updateButtons() {
         butAction2Text.setTransformationMethod(null);
         getContext().getTheme().resolveAttribute(actionButton2.getDrawable(), typedValue, true);
         butAction2Icon.setImageResource(typedValue.resourceId);
-        butAction2.setVisibility(actionButton1.getVisibility());
+        butAction2.setVisibility(actionButton2.getVisibility());
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/VisitWebsiteActionButton.java
Patch:
@@ -35,6 +35,6 @@ public void onClick(Context context) {
 
     @Override
     public int getVisibility() {
-        return (item.getLink() != null) ? View.INVISIBLE : View.VISIBLE;
+        return (item.getLink() == null) ? View.INVISIBLE : View.VISIBLE;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -286,7 +286,7 @@ private void updateButtons() {
         butAction2Text.setTransformationMethod(null);
         getContext().getTheme().resolveAttribute(actionButton2.getDrawable(), typedValue, true);
         butAction2Icon.setImageResource(typedValue.resourceId);
-        butAction2.setVisibility(actionButton1.getVisibility());
+        butAction2.setVisibility(actionButton2.getVisibility());
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -236,12 +236,12 @@ public static boolean showSkipOnCompactNotification() {
     }
 
     public static int getFeedOrder() {
-        String value = prefs.getString(PREF_DRAWER_FEED_ORDER, "0");
+        String value = prefs.getString(PREF_DRAWER_FEED_ORDER, "" + FEED_ORDER_COUNTER);
         return Integer.parseInt(value);
     }
 
     public static int getFeedCounterSetting() {
-        String value = prefs.getString(PREF_DRAWER_FEED_COUNTER, "0");
+        String value = prefs.getString(PREF_DRAWER_FEED_COUNTER, "" + FEED_COUNTER_SHOW_NEW);
         return Integer.parseInt(value);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -236,12 +236,12 @@ public static boolean showSkipOnCompactNotification() {
     }
 
     public static int getFeedOrder() {
-        String value = prefs.getString(PREF_DRAWER_FEED_ORDER, "0");
+        String value = prefs.getString(PREF_DRAWER_FEED_ORDER, "" + FEED_ORDER_COUNTER);
         return Integer.parseInt(value);
     }
 
     public static int getFeedCounterSetting() {
-        String value = prefs.getString(PREF_DRAWER_FEED_COUNTER, "0");
+        String value = prefs.getString(PREF_DRAWER_FEED_COUNTER, "" + FEED_COUNTER_SHOW_NEW);
         return Integer.parseInt(value);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java
Patch:
@@ -39,6 +39,7 @@
 
 public class ExoPlayerWrapper implements IPlayer {
     private static final String TAG = "ExoPlayerWrapper";
+    public static final int ERROR_CODE_OFFSET = 1000;
     private final Context mContext;
     private final Disposable bufferingUpdateDisposable;
     private SimpleExoPlayer mExoPlayer;
@@ -109,7 +110,7 @@ public void onShuffleModeEnabledChanged(boolean shuffleModeEnabled) {
             @Override
             public void onPlayerError(ExoPlaybackException error) {
                 if (audioErrorListener != null) {
-                    audioErrorListener.onError(null, 0, 0);
+                    audioErrorListener.onError(null, error.type + ERROR_CODE_OFFSET, 0);
                 }
             }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java
Patch:
@@ -39,6 +39,7 @@
 
 public class ExoPlayerWrapper implements IPlayer {
     private static final String TAG = "ExoPlayerWrapper";
+    public static final int ERROR_CODE_OFFSET = 1000;
     private final Context mContext;
     private final Disposable bufferingUpdateDisposable;
     private SimpleExoPlayer mExoPlayer;
@@ -109,7 +110,7 @@ public void onShuffleModeEnabledChanged(boolean shuffleModeEnabled) {
             @Override
             public void onPlayerError(ExoPlaybackException error) {
                 if (audioErrorListener != null) {
-                    audioErrorListener.onError(null, 0, 0);
+                    audioErrorListener.onError(null, error.type + ERROR_CODE_OFFSET, 0);
                 }
             }
 

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -139,7 +139,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         if (controller != null && !controller.canDownmix()) {
             stereoToMono.setEnabled(false);
             String sonicOnly = getString(R.string.sonic_only);
-            stereoToMono.setText(stereoToMono.getText() + " [" + sonicOnly + "]");
+            stereoToMono.setText(getString(R.string.stereo_to_mono) + " [" + sonicOnly + "]");
         }
 
         if (UserPreferences.useExoplayer()) {
@@ -151,7 +151,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         if (!UserPreferences.useExoplayer()) {
             skipSilence.setEnabled(false);
             String exoplayerOnly = getString(R.string.exoplayer_only);
-            skipSilence.setText(skipSilence.getText() + " [" + exoplayerOnly + "]");
+            skipSilence.setText(getString(R.string.pref_skip_silence_title) + " [" + exoplayerOnly + "]");
         }
         skipSilence.setOnCheckedChangeListener((buttonView, isChecked) -> {
             UserPreferences.setSkipSilence(isChecked);

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -139,7 +139,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         if (controller != null && !controller.canDownmix()) {
             stereoToMono.setEnabled(false);
             String sonicOnly = getString(R.string.sonic_only);
-            stereoToMono.setText(stereoToMono.getText() + " [" + sonicOnly + "]");
+            stereoToMono.setText(getString(R.string.stereo_to_mono) + " [" + sonicOnly + "]");
         }
 
         if (UserPreferences.useExoplayer()) {
@@ -151,7 +151,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         if (!UserPreferences.useExoplayer()) {
             skipSilence.setEnabled(false);
             String exoplayerOnly = getString(R.string.exoplayer_only);
-            skipSilence.setText(skipSilence.getText() + " [" + exoplayerOnly + "]");
+            skipSilence.setText(getString(R.string.pref_skip_silence_title) + " [" + exoplayerOnly + "]");
         }
         skipSilence.setOnCheckedChangeListener((buttonView, isChecked) -> {
             UserPreferences.setSkipSilence(isChecked);

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -62,7 +62,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         menu.findItem(R.id.filter_items).setVisible(true);
-        menu.findItem(R.id.mark_all_read_item).setVisible(!episodes.isEmpty());
+        menu.findItem(R.id.mark_all_read_item).setVisible(true);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -40,7 +40,7 @@ protected boolean shouldUpdatedItemRemainInList(FeedItem item) {
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
-        menu.findItem(R.id.remove_all_new_flags_item).setVisible(!episodes.isEmpty());
+        menu.findItem(R.id.remove_all_new_flags_item).setVisible(true);
     }
 
     @NonNull

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -558,6 +558,7 @@ private void queryDownloads() {
         if (numberOfDownloads.get() <= 0 && DownloadRequester.getInstance().hasNoDownloads()) {
             Log.d(TAG, "Number of downloads is " + numberOfDownloads.get() + ", attempting shutdown");
             stopSelf();
+            notificationUpdater.run();
         } else {
             setupNotificationUpdater();
             Notification notification = notificationManager.updateNotifications(
@@ -616,8 +617,8 @@ private void writeFileUrl(DownloadRequest request) {
      * Schedules the notification updater task if it hasn't been scheduled yet.
      */
     private void setupNotificationUpdater() {
-        Log.d(TAG, "Setting up notification updater");
         if (notificationUpdater == null) {
+            Log.d(TAG, "Setting up notification updater");
             notificationUpdater = new NotificationUpdater();
             notificationUpdaterFuture = schedExecutor.scheduleAtFixedRate(notificationUpdater, 1, 1, TimeUnit.SECONDS);
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -62,7 +62,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         menu.findItem(R.id.filter_items).setVisible(true);
-        menu.findItem(R.id.mark_all_read_item).setVisible(!episodes.isEmpty());
+        menu.findItem(R.id.mark_all_read_item).setVisible(true);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -40,7 +40,7 @@ protected boolean shouldUpdatedItemRemainInList(FeedItem item) {
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
-        menu.findItem(R.id.remove_all_new_flags_item).setVisible(!episodes.isEmpty());
+        menu.findItem(R.id.remove_all_new_flags_item).setVisible(true);
     }
 
     @NonNull

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -83,6 +83,7 @@ private void loadMediaInfo() {
     private void displayMediaInfo(@NonNull Playable media) {
         txtvPodcastTitle.setText(media.getFeedTitle());
         txtvEpisodeTitle.setText(media.getEpisodeTitle());
+        displayedChapterIndex = -2; // Force refresh
         displayCoverImage(media.getPosition());
     }
 

File: app/src/main/java/de/danoeh/antennapod/view/SquareImageView.java
Patch:
@@ -27,8 +27,7 @@ public SquareImageView(Context context, AttributeSet attrs, int defStyle) {
     }
 
     private void loadAttrs(Context context, AttributeSet attrs) {
-        TypedArray a = context.getTheme().obtainStyledAttributes(attrs,
-                new int[]{R.styleable.SquareImageView_useMinimum}, 0, 0);
+        TypedArray a = context.obtainStyledAttributes(attrs, new int[]{R.styleable.SquareImageView_useMinimum});
         useMinimum = a.getBoolean(0, false);
         a.recycle();
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -546,7 +546,7 @@ public void onSeekBarStartTrackingTouch(SeekBar seekBar) {
      */
     public void onSeekBarStopTrackingTouch(SeekBar seekBar, float prog) {
         if (playbackService != null && media != null) {
-            playbackService.seekTo((int) (prog * media.getDuration()));
+            seekTo((int) (prog * getDuration()));
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -547,7 +547,7 @@ public void onSeekBarStartTrackingTouch(SeekBar seekBar) {
      */
     public void onSeekBarStopTrackingTouch(SeekBar seekBar, float prog) {
         if (playbackService != null && media != null) {
-            playbackService.seekTo((int) (prog * media.getDuration()));
+            seekTo((int) (prog * getDuration()));
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -81,6 +81,7 @@ private void loadMediaInfo() {
     private void displayMediaInfo(@NonNull Playable media) {
         txtvPodcastTitle.setText(media.getFeedTitle());
         txtvEpisodeTitle.setText(media.getEpisodeTitle());
+        displayedChapterIndex = -1;
         Glide.with(this)
                 .load(ImageResourceUtils.getImageLocation(media))
                 .apply(new RequestOptions()

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/ChapterReader.java
Patch:
@@ -105,8 +105,7 @@ public int onStartFrameHeader(FrameHeader header, CountingInputStream input) thr
                         // Data contains the picture
                         int length = header.getSize() - read;
                         if (TextUtils.isEmpty(currentChapter.getImageUrl()) || type == IMAGE_TYPE_COVER) {
-                            currentChapter.setImageUrl(
-                                    EmbeddedChapterImage.makeUrl(mime.toString(), input.getCount(), length));
+                            currentChapter.setImageUrl(EmbeddedChapterImage.makeUrl(input.getCount(), length));
                         }
                         skipBytes(input, length);
                     }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java
Patch:
@@ -6,6 +6,7 @@
 
 import androidx.annotation.NonNull;
 
+import java.io.File;
 import java.util.concurrent.ExecutionException;
 
 import de.danoeh.antennapod.core.event.UnreadItemsUpdateEvent;
@@ -50,6 +51,7 @@ public void run() {
         boolean broadcastUnreadStateUpdate = media.getItem() != null && media.getItem().isNew();
         media.setDownloaded(true);
         media.setFile_url(request.getDestination());
+        media.setSize(new File(request.getDestination()).length());
         media.checkEmbeddedPicture(); // enforce check
 
         // check if file has chapters

File: app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java
Patch:
@@ -228,7 +228,7 @@ protected void startLocalPlayback() {
         final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10);
         Matcher<View> allEpisodesMatcher = allOf(withId(android.R.id.list), isDisplayed(), hasMinimumChildCount(2));
         onView(isRoot()).perform(waitForView(allEpisodesMatcher, 1000));
-        onView(allEpisodesMatcher).perform(actionOnItemAtPosition(0, clickChildViewWithId(R.id.butSecondaryAction)));
+        onView(allEpisodesMatcher).perform(actionOnItemAtPosition(0, clickChildViewWithId(R.id.secondaryActionButton)));
 
         FeedMedia media = episodes.get(0).getMedia();
         Awaitility.await().atMost(1, TimeUnit.SECONDS).until(
@@ -244,7 +244,7 @@ protected void playFromQueue(int itemIdx) {
 
         Matcher<View> queueMatcher = allOf(withId(R.id.recyclerView), isDisplayed(), hasMinimumChildCount(2));
         onView(isRoot()).perform(waitForView(queueMatcher, 1000));
-        onView(queueMatcher).perform(actionOnItemAtPosition(itemIdx, clickChildViewWithId(R.id.butSecondaryAction)));
+        onView(queueMatcher).perform(actionOnItemAtPosition(itemIdx, clickChildViewWithId(R.id.secondaryActionButton)));
 
         FeedMedia media = queue.get(itemIdx).getMedia();
         Awaitility.await().atMost(1, TimeUnit.SECONDS).until(

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/ImportExportPreferencesFragment.java
Patch:
@@ -186,6 +186,7 @@ private void showDatabaseImportSuccessDialog() {
             ComponentName cn = intent.getComponent();
             Intent mainIntent = Intent.makeRestartActivityTask(cn);
             startActivity(mainIntent);
+            Runtime.getRuntime().exit(0);
         });
         d.show();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/ImportExportPreferencesFragment.java
Patch:
@@ -186,6 +186,7 @@ private void showDatabaseImportSuccessDialog() {
             ComponentName cn = intent.getComponent();
             Intent mainIntent = Intent.makeRestartActivityTask(cn);
             startActivity(mainIntent);
+            Runtime.getRuntime().exit(0);
         });
         d.show();
     }

File: core/src/main/java/de/danoeh/antennapod/core/storage/SearchLocation.java
Patch:
@@ -6,9 +6,7 @@
 public enum SearchLocation {
     TITLE(R.string.found_in_title_label),
     CHAPTERS(R.string.found_in_chapters_label),
-    SHOWNOTES(R.string.found_in_shownotes_label),
-    AUTHORS(R.string.found_in_authors_label),
-    FEED(R.string.found_in_feeds_label);
+    SHOWNOTES(R.string.found_in_shownotes_label);
 
     private int description;
     SearchLocation(@StringRes int description) {

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -274,7 +274,7 @@ protected void setupGUI() {
 
     @Override
     boolean loadMediaInfo() {
-        if (controller != null) {
+        if (controller != null && controller.getMedia() != null) {
             List<Chapter> chapters = controller.getMedia().getChapters();
             boolean hasChapters = chapters != null && !chapters.isEmpty();
             pageIndicator.setDisabledPage(hasChapters ? -1 : 2);

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -274,7 +274,7 @@ protected void setupGUI() {
 
     @Override
     boolean loadMediaInfo() {
-        if (controller != null) {
+        if (controller != null && controller.getMedia() != null) {
             List<Chapter> chapters = controller.getMedia().getChapters();
             boolean hasChapters = chapters != null && !chapters.isEmpty();
             pageIndicator.setDisabledPage(hasChapters ? -1 : 2);

File: core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java
Patch:
@@ -38,6 +38,7 @@ public static void sendLocalBroadcast(Context context, String action) {
     public static void openInBrowser(Context context, String url) {
         try {
             Intent myIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
+            myIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             context.startActivity(myIntent);
         } catch (ActivityNotFoundException e) {
             Toast.makeText(context, R.string.pref_no_browser_found, Toast.LENGTH_LONG).show();

File: core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java
Patch:
@@ -38,6 +38,7 @@ public static void sendLocalBroadcast(Context context, String action) {
     public static void openInBrowser(Context context, String url) {
         try {
             Intent myIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
+            myIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
             context.startActivity(myIntent);
         } catch (ActivityNotFoundException e) {
             Toast.makeText(context, R.string.pref_no_browser_found, Toast.LENGTH_LONG).show();

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java
Patch:
@@ -84,5 +84,8 @@ private static void upgrade(int oldVersion) {
                 UserPreferences.setEnqueueLocation(enqueueLocation);
             }
         }
+        if (oldVersion < 1080100) {
+            prefs.edit().putString(UserPreferences.PREF_VIDEO_BEHAVIOR, "pip").apply();
+        }
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -822,11 +822,11 @@ public static void stereoToMono(boolean enable) {
     }
 
     public static VideoBackgroundBehavior getVideoBackgroundBehavior() {
-        switch (prefs.getString(PREF_VIDEO_BEHAVIOR, "stop")) {
+        switch (prefs.getString(PREF_VIDEO_BEHAVIOR, "pip")) {
             case "stop": return VideoBackgroundBehavior.STOP;
             case "pip": return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
             case "continue": return VideoBackgroundBehavior.CONTINUE_PLAYING;
-            default: return VideoBackgroundBehavior.STOP;
+            default: return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java
Patch:
@@ -84,5 +84,8 @@ private static void upgrade(int oldVersion) {
                 UserPreferences.setEnqueueLocation(enqueueLocation);
             }
         }
+        if (oldVersion < 1080100) {
+            prefs.edit().putString(UserPreferences.PREF_VIDEO_BEHAVIOR, "pip").apply();
+        }
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -822,11 +822,11 @@ public static void stereoToMono(boolean enable) {
     }
 
     public static VideoBackgroundBehavior getVideoBackgroundBehavior() {
-        switch (prefs.getString(PREF_VIDEO_BEHAVIOR, "stop")) {
+        switch (prefs.getString(PREF_VIDEO_BEHAVIOR, "pip")) {
             case "stop": return VideoBackgroundBehavior.STOP;
             case "pip": return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
             case "continue": return VideoBackgroundBehavior.CONTINUE_PLAYING;
-            default: return VideoBackgroundBehavior.STOP;
+            default: return VideoBackgroundBehavior.PICTURE_IN_PICTURE;
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -187,7 +187,7 @@ public void onBindViewHolder(final Holder holder, int position) {
             holder.queueStatus.setVisibility(View.INVISIBLE);
         }
 
-        ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue);
+        ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue, true);
         actionButton.configure(holder.butSecondary, mainActivityRef.get());
 
         holder.butSecondary.setFocusable(false);

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -189,7 +189,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                 }
             }
 
-            ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue);
+            ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue, true);
             actionButton.configure(holder.butAction, context);
 
             holder.butAction.setFocusable(false);

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -296,7 +296,7 @@ public void bind(FeedItem item) {
                 }
             }
 
-            ItemActionButton actionButton = ItemActionButton.forItem(item, true);
+            ItemActionButton actionButton = ItemActionButton.forItem(item, true, true);
             actionButton.configure(butSecondary, mainActivity.get());
 
             butSecondary.setFocusable(false);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -183,7 +183,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
             if (item == null) {
                 return;
             }
-            ItemActionButton actionButton = ItemActionButton.forItem(item, item.isTagged(FeedItem.TAG_QUEUE));
+            ItemActionButton actionButton = ItemActionButton.forItem(item, item.isTagged(FeedItem.TAG_QUEUE), false);
             actionButton.onClick(getActivity());
 
             FeedMedia media = item.getMedia();

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -187,7 +187,7 @@ public void onBindViewHolder(final Holder holder, int position) {
             holder.queueStatus.setVisibility(View.INVISIBLE);
         }
 
-        ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue);
+        ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue, true);
         actionButton.configure(holder.butSecondary, mainActivityRef.get());
 
         holder.butSecondary.setFocusable(false);

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -189,7 +189,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                 }
             }
 
-            ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue);
+            ItemActionButton actionButton = ItemActionButton.forItem(item, isInQueue, true);
             actionButton.configure(holder.butAction, context);
 
             holder.butAction.setFocusable(false);

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -296,7 +296,7 @@ public void bind(FeedItem item) {
                 }
             }
 
-            ItemActionButton actionButton = ItemActionButton.forItem(item, true);
+            ItemActionButton actionButton = ItemActionButton.forItem(item, true, true);
             actionButton.configure(butSecondary, mainActivity.get());
 
             butSecondary.setFocusable(false);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -183,7 +183,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
             if (item == null) {
                 return;
             }
-            ItemActionButton actionButton = ItemActionButton.forItem(item, item.isTagged(FeedItem.TAG_QUEUE));
+            ItemActionButton actionButton = ItemActionButton.forItem(item, item.isTagged(FeedItem.TAG_QUEUE), false);
             actionButton.onClick(getActivity());
 
             FeedMedia media = item.getMedia();

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -304,12 +304,12 @@ public void onConfirmButtonPressed(DialogInterface clickedDialog) {
         dialog.createNewDialog().show();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onFeedListChanged(FeedListUpdateEvent event) {
         loadSubscriptions();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         loadSubscriptions();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -304,12 +304,12 @@ public void onConfirmButtonPressed(DialogInterface clickedDialog) {
         dialog.createNewDialog().show();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onFeedListChanged(FeedListUpdateEvent event) {
         loadSubscriptions();
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         loadSubscriptions();
     }

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -98,7 +98,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 .withUri(feed.getImageLocation())
                 .withPlaceholderView(holder.feedTitle)
                 .withCoverView(holder.imageView)
-                .withError(R.color.light_gray)
                 .load();
 
         return convertView;

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -98,7 +98,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 .withUri(feed.getImageLocation())
                 .withPlaceholderView(holder.feedTitle)
                 .withCoverView(holder.imageView)
-                .withError(R.color.light_gray)
                 .load();
 
         return convertView;

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -639,6 +639,7 @@ public float getPlaybackSpeed() {
         float retVal = 1;
         if ((playerStatus == PlayerStatus.PLAYING
                 || playerStatus == PlayerStatus.PAUSED
+                || playerStatus == PlayerStatus.INITIALIZED
                 || playerStatus == PlayerStatus.PREPARED) && mediaPlayer.canSetSpeed()) {
             retVal = mediaPlayer.getCurrentSpeedMultiplier();
         }

File: app/src/main/java/de/danoeh/antennapod/activity/ImportExportActivity.java
Patch:
@@ -160,6 +160,7 @@ private void displayImportSuccessDialog() {
             ComponentName cn = intent.getComponent();
             Intent mainIntent = Intent.makeRestartActivityTask(cn);
             startActivity(mainIntent);
+            Runtime.getRuntime().exit(0);
         });
         d.show();
     }

File: app/src/main/java/de/danoeh/antennapod/activity/ImportExportActivity.java
Patch:
@@ -160,6 +160,7 @@ private void displayImportSuccessDialog() {
             ComponentName cn = intent.getComponent();
             Intent mainIntent = Intent.makeRestartActivityTask(cn);
             startActivity(mainIntent);
+            Runtime.getRuntime().exit(0);
         });
         d.show();
     }

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -245,8 +245,9 @@ public Holder(View itemView) {
         public void onClick(View v) {
             MainActivity mainActivity = mainActivityRef.get();
             if (mainActivity != null) {
-                long[] ids = itemAccess.getItemsIds().toArray();
-                mainActivity.loadChildFragment(ItemPagerFragment.newInstance(ids, getAdapterPosition()));
+                LongList itemIds = itemAccess.getItemsIds();
+                long[] ids = itemIds.toArray();
+                mainActivity.loadChildFragment(ItemPagerFragment.newInstance(ids, itemIds.indexOf(item.getId())));
             }
         }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -245,8 +245,9 @@ public Holder(View itemView) {
         public void onClick(View v) {
             MainActivity mainActivity = mainActivityRef.get();
             if (mainActivity != null) {
-                long[] ids = itemAccess.getItemsIds().toArray();
-                mainActivity.loadChildFragment(ItemPagerFragment.newInstance(ids, getAdapterPosition()));
+                LongList itemIds = itemAccess.getItemsIds();
+                long[] ids = itemIds.toArray();
+                mainActivity.loadChildFragment(ItemPagerFragment.newInstance(ids, itemIds.indexOf(item.getId())));
             }
         }
 

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -201,7 +201,7 @@ public void addLocalFeedData(boolean downloadEpisodes) throws Exception {
 
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();
-        adapter.setCompleteFeed(hostedFeeds.toArray(new Feed[hostedFeeds.size()]));
+        adapter.setCompleteFeed(hostedFeeds.toArray(new Feed[0]));
         adapter.setQueue(queue);
         adapter.close();
         EventBus.getDefault().post(new FeedListUpdateEvent(hostedFeeds));

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -485,7 +485,7 @@ private void downloadChecked() {
             }
         }
         try {
-            DownloadRequester.getInstance().downloadMedia(getActivity(), toDownload.toArray(new FeedItem[toDownload.size()]));
+            DownloadRequester.getInstance().downloadMedia(getActivity(), toDownload.toArray(new FeedItem[0]));
         } catch (DownloadRequestException e) {
             e.printStackTrace();
             DownloadRequestErrorDialogCreator.newRequestErrorDialog(getActivity(), e.getMessage());

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -146,7 +146,7 @@ private void showFilterDialog() {
         FilterDialog filterDialog = new FilterDialog(getContext(), feedItemFilter) {
             @Override
             protected void updateFilter(Set<String> filterValues) {
-                feedItemFilter = new FeedItemFilter(filterValues.toArray(new String[filterValues.size()]));
+                feedItemFilter = new FeedItemFilter(filterValues.toArray(new String[0]));
                 loadItems();
             }
         };

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AutoDownloadPreferencesFragment.java
Patch:
@@ -131,9 +131,7 @@ private void buildAutodownloadSelectedNetworksPreference() {
                     prefValuesList.add(key);
                 }
 
-                UserPreferences.setAutodownloadSelectedNetworks(
-                        prefValuesList.toArray(new String[prefValuesList.size()])
-                );
+                UserPreferences.setAutodownloadSelectedNetworks(prefValuesList.toArray(new String[0]));
                 return true;
             } else {
                 return false;

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -108,7 +108,7 @@ private static void showFilterDialog(Context context, Feed selectedFeed) {
         FilterDialog filterDialog = new FilterDialog(context, selectedFeed.getItemFilter()) {
             @Override
             protected void updateFilter(Set<String> filterValues) {
-                selectedFeed.setItemFilter(filterValues.toArray(new String[filterValues.size()]));
+                selectedFeed.setItemFilter(filterValues.toArray(new String[0]));
                 DBWriter.setFeedItemsFilter(selectedFeed.getId(), filterValues);
             }
         };

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -122,7 +122,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
         } else {
             if (comp.getClass() == FeedItem.class) {
                 FeedItem item = (FeedItem) comp;
-                ((MainActivity) getActivity()).loadChildFragment(ItemFragment.newInstance(item.getId()));
+                ((MainActivity) getActivity()).loadChildFragment(ItemPagerFragment.newInstance(item.getId()));
             }
         }
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -122,7 +122,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
         } else {
             if (comp.getClass() == FeedItem.class) {
                 FeedItem item = (FeedItem) comp;
-                ((MainActivity) getActivity()).loadChildFragment(ItemFragment.newInstance(item.getId()));
+                ((MainActivity) getActivity()).loadChildFragment(ItemPagerFragment.newInstance(item.getId()));
             }
         }
     }

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -256,7 +256,8 @@ private void checkDownloadResult(@NonNull DownloadStatus status) {
         } else if (status.getReason() == DownloadError.ERROR_UNAUTHORIZED) {
             if (!isFinishing() && !isPaused) {
                 dialog = new FeedViewAuthenticationDialog(OnlineFeedViewActivity.this,
-                        R.string.authentication_notification_title, downloader.getDownloadRequest().getSource());
+                        R.string.authentication_notification_title,
+                        downloader.getDownloadRequest().getSource()).create();
                 dialog.show();
             }
         } else {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -235,7 +235,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        if(itemsLoaded) {
+        if (itemsLoaded) {
             progbarLoading.setVisibility(View.GONE);
             updateAppearance();
         }
@@ -459,7 +459,7 @@ public void onEventMainThread(DownloadEvent event) {
         }
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         load();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -235,7 +235,7 @@ public void onStart() {
     @Override
     public void onResume() {
         super.onResume();
-        if(itemsLoaded) {
+        if (itemsLoaded) {
             progbarLoading.setVisibility(View.GONE);
             updateAppearance();
         }
@@ -459,7 +459,7 @@ public void onEventMainThread(DownloadEvent event) {
         }
     }
 
-    @Subscribe
+    @Subscribe(threadMode = ThreadMode.MAIN)
     public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {
         load();
     }

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -256,7 +256,8 @@ private void checkDownloadResult(@NonNull DownloadStatus status) {
         } else if (status.getReason() == DownloadError.ERROR_UNAUTHORIZED) {
             if (!isFinishing() && !isPaused) {
                 dialog = new FeedViewAuthenticationDialog(OnlineFeedViewActivity.this,
-                        R.string.authentication_notification_title, downloader.getDownloadRequest().getSource());
+                        R.string.authentication_notification_title,
+                        downloader.getDownloadRequest().getSource()).create();
                 dialog.show();
             }
         } else {

File: app/src/androidTest/java/de/test/antennapod/ui/SpeedChangeTest.java
Patch:
@@ -88,7 +88,7 @@ public void testChangeSpeedServiceNotRunning() {
     public void testChangeSpeedPlaying() {
         onView(isRoot()).perform(waitForView(withId(R.id.butPlay), 1000));
         onView(withId(R.id.butPlay)).perform(click());
-        Awaitility.await().atMost(1, TimeUnit.SECONDS).until(()
+        Awaitility.await().atMost(2, TimeUnit.SECONDS).until(()
                 -> activityRule.getActivity().getPlaybackController().getStatus() == PlayerStatus.PLAYING);
         clickThroughSpeeds();
     }
@@ -97,10 +97,10 @@ public void testChangeSpeedPlaying() {
     public void testChangeSpeedPaused() {
         onView(isRoot()).perform(waitForView(withId(R.id.butPlay), 1000));
         onView(withId(R.id.butPlay)).perform(click());
-        Awaitility.await().atMost(1, TimeUnit.SECONDS).until(()
+        Awaitility.await().atMost(2, TimeUnit.SECONDS).until(()
                 -> activityRule.getActivity().getPlaybackController().getStatus() == PlayerStatus.PLAYING);
         onView(withId(R.id.butPlay)).perform(click());
-        Awaitility.await().atMost(1, TimeUnit.SECONDS).until(()
+        Awaitility.await().atMost(2, TimeUnit.SECONDS).until(()
                 -> activityRule.getActivity().getPlaybackController().getStatus() == PlayerStatus.PAUSED);
         clickThroughSpeeds();
     }

File: app/src/androidTest/java/de/test/antennapod/storage/AutoDownloadTest.java
Patch:
@@ -54,6 +54,7 @@ public void setUp() throws Exception {
 
         EspressoTestUtils.clearPreferences();
         EspressoTestUtils.clearDatabase();
+        UserPreferences.setAllowMobileStreaming(true);
     }
 
     @After

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -87,13 +87,13 @@ private String hostFeed(Feed feed) throws IOException {
         out.close();
         int id = server.serveFile(feedFile);
         Assert.assertTrue(id != -1);
-        return String.format("%s/files/%d", HTTPBin.BASE_URL, id);
+        return String.format("%s/files/%d", server.getBaseUrl(), id);
     }
 
     private String hostFile(File file) {
         int id = server.serveFile(file);
         Assert.assertTrue(id != -1);
-        return String.format("%s/files/%d", HTTPBin.BASE_URL, id);
+        return String.format("%s/files/%d", server.getBaseUrl(), id);
     }
 
     private File newBitmapFile(String name) throws IOException {

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -75,8 +75,8 @@ public void testAddFeed() throws Exception {
         final Feed feed = uiTestUtils.hostedFeeds.get(0);
         openNavDrawer();
         onView(withText(R.string.add_feed_label)).perform(click());
-        onView(withId(R.id.etxtFeedurl)).perform(typeText(feed.getDownload_url()));
-        onView(withText(R.string.confirm_label)).perform(scrollTo()).perform(click());
+        onView(withId(R.id.etxtFeedurl)).perform(scrollTo(), typeText(feed.getDownload_url()));
+        onView(withText(R.string.confirm_label)).perform(scrollTo(), click());
         Espresso.closeSoftKeyboard();
         onView(withText(R.string.subscribe_label)).perform(click());
         intended(hasComponent(MainActivity.class.getName()), times(2));

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -260,7 +260,6 @@ public void run() {
                             removeDownload(downloader);
                             numberOfDownloads.decrementAndGet();
                             queryDownloadsAsync();
-
                         });
                     } else {
                         handleFailedDownload(downloader);
@@ -270,8 +269,10 @@ public void run() {
                     }
                 } catch (InterruptedException e) {
                     Log.e(TAG, "DownloadCompletionThread was interrupted");
+                    return;
                 } catch (ExecutionException e) {
                     Log.e(TAG, "ExecutionException in DownloadCompletionThread: " + e.getMessage());
+                    return;
                 }
             }
             Log.d(TAG, "End of downloadCompletionThread");

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -260,7 +260,6 @@ public void run() {
                             removeDownload(downloader);
                             numberOfDownloads.decrementAndGet();
                             queryDownloadsAsync();
-
                         });
                     } else {
                         handleFailedDownload(downloader);
@@ -270,8 +269,10 @@ public void run() {
                     }
                 } catch (InterruptedException e) {
                     Log.e(TAG, "DownloadCompletionThread was interrupted");
+                    return;
                 } catch (ExecutionException e) {
                     Log.e(TAG, "ExecutionException in DownloadCompletionThread: " + e.getMessage());
+                    return;
                 }
             }
             Log.d(TAG, "End of downloadCompletionThread");

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -11,6 +11,7 @@
 import org.greenrobot.eventbus.Subscribe;
 
 import java.util.List;
+import java.util.concurrent.CancellationException;
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.Future;
 import java.util.concurrent.ScheduledFuture;
@@ -140,7 +141,7 @@ public synchronized List<FeedItem> getQueueIfLoaded() {
         if (queueFuture.isDone()) {
             try {
                 return queueFuture.get();
-            } catch (InterruptedException | ExecutionException e) {
+            } catch (InterruptedException | ExecutionException | CancellationException e) {
                 e.printStackTrace();
             }
         }

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -32,12 +32,14 @@
 import static androidx.test.espresso.action.ViewActions.click;
 import static androidx.test.espresso.action.ViewActions.replaceText;
 import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.action.ViewActions.swipeUp;
 import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;
 import static androidx.test.espresso.assertion.ViewAssertions.matches;
 import static androidx.test.espresso.matcher.ViewMatchers.isChecked;
 import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static androidx.test.espresso.matcher.ViewMatchers.isRoot;
 import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
 import static androidx.test.espresso.matcher.ViewMatchers.withText;
 import static de.test.antennapod.EspressoTestUtils.clickPreference;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
@@ -394,7 +396,7 @@ public void testEpisodeCleanupNeverAlg() {
         onView(withText(R.string.network_pref)).perform(click());
         onView(withText(R.string.pref_automatic_download_title)).perform(click());
         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());
-        onView(isRoot()).perform(waitForView(withText(R.string.episode_cleanup_never), 1000));
+        onView(withId(R.id.select_dialog_listview)).perform(swipeUp());
         onView(withText(R.string.episode_cleanup_never)).perform(click());
         Awaitility.await().atMost(1000, MILLISECONDS)
                 .until(() -> UserPreferences.getEpisodeCleanupAlgorithm() instanceof APNullCleanupAlgorithm);

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -32,12 +32,14 @@
 import static androidx.test.espresso.action.ViewActions.click;
 import static androidx.test.espresso.action.ViewActions.replaceText;
 import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.action.ViewActions.swipeUp;
 import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;
 import static androidx.test.espresso.assertion.ViewAssertions.matches;
 import static androidx.test.espresso.matcher.ViewMatchers.isChecked;
 import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static androidx.test.espresso.matcher.ViewMatchers.isRoot;
 import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
 import static androidx.test.espresso.matcher.ViewMatchers.withText;
 import static de.test.antennapod.EspressoTestUtils.clickPreference;
 import static de.test.antennapod.EspressoTestUtils.waitForView;
@@ -394,7 +396,7 @@ public void testEpisodeCleanupNeverAlg() {
         onView(withText(R.string.network_pref)).perform(click());
         onView(withText(R.string.pref_automatic_download_title)).perform(click());
         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());
-        onView(isRoot()).perform(waitForView(withText(R.string.episode_cleanup_never), 1000));
+        onView(withId(R.id.select_dialog_listview)).perform(swipeUp());
         onView(withText(R.string.episode_cleanup_never)).perform(click());
         Awaitility.await().atMost(1000, MILLISECONDS)
                 .until(() -> UserPreferences.getEpisodeCleanupAlgorithm() instanceof APNullCleanupAlgorithm);

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -82,6 +82,7 @@ public void setUp() throws Exception {
         SharedPreferences.Editor prefEdit = PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()).edit();
         prefEdit.putString(UserPreferences.PREF_EPISODE_CACHE_SIZE, Integer.toString(EPISODE_CACHE_SIZE));
         prefEdit.putString(UserPreferences.PREF_EPISODE_CLEANUP, Integer.toString(cleanupAlgorithm));
+        prefEdit.putBoolean(UserPreferences.PREF_ENABLE_AUTODL, true);
         prefEdit.commit();
 
         UserPreferences.init(context);

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -82,6 +82,7 @@ public void setUp() throws Exception {
         SharedPreferences.Editor prefEdit = PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()).edit();
         prefEdit.putString(UserPreferences.PREF_EPISODE_CACHE_SIZE, Integer.toString(EPISODE_CACHE_SIZE));
         prefEdit.putString(UserPreferences.PREF_EPISODE_CLEANUP, Integer.toString(cleanupAlgorithm));
+        prefEdit.putBoolean(UserPreferences.PREF_ENABLE_AUTODL, true);
         prefEdit.commit();
 
         UserPreferences.init(context);

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -89,7 +89,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         subscriptionGridLayout.setNumColumns(prefs.getInt(PREF_NUM_COLUMNS, 3));
         registerForContextMenu(subscriptionGridLayout);
         subscriptionAddButton = root.findViewById(R.id.subscriptions_add);
-        setupEmptyView();
         return root;
     }
 
@@ -154,6 +153,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         subscriptionAdapter = new SubscriptionsAdapter((MainActivity) getActivity(), itemAccess);
         subscriptionGridLayout.setAdapter(subscriptionAdapter);
         subscriptionGridLayout.setOnItemClickListener(subscriptionAdapter);
+        setupEmptyView();
 
         subscriptionAddButton.setOnClickListener(view -> {
             if (getActivity() instanceof MainActivity) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -49,7 +49,7 @@ private AntennapodHttpClient(){}
 
     private static final String TAG = "AntennapodHttpClient";
 
-    private static final int CONNECTION_TIMEOUT = 30000;
+    private static final int CONNECTION_TIMEOUT = 10000;
     private static final int READ_TIMEOUT = 30000;
 
     private static final int MAX_CONNECTIONS = 8;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -202,7 +202,9 @@ public synchronized void downloadFeed(Context context, Feed feed, boolean loadAl
 
             DownloadRequest request = createRequest(feed, null, new File(getFeedfilePath(), getFeedfileName(feed)),
                     true, username, password, lastModified, true, args);
-            download(context, request);
+            if (request != null) {
+                download(context, request);
+            }
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -202,7 +202,9 @@ public synchronized void downloadFeed(Context context, Feed feed, boolean loadAl
 
             DownloadRequest request = createRequest(feed, null, new File(getFeedfilePath(), getFeedfileName(feed)),
                     true, username, password, lastModified, true, args);
-            download(context, request);
+            if (request != null) {
+                download(context, request);
+            }
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -89,7 +89,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         subscriptionGridLayout.setNumColumns(prefs.getInt(PREF_NUM_COLUMNS, 3));
         registerForContextMenu(subscriptionGridLayout);
         subscriptionAddButton = root.findViewById(R.id.subscriptions_add);
-        setupEmptyView();
         return root;
     }
 
@@ -154,6 +153,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         subscriptionAdapter = new SubscriptionsAdapter((MainActivity) getActivity(), itemAccess);
         subscriptionGridLayout.setAdapter(subscriptionAdapter);
         subscriptionGridLayout.setOnItemClickListener(subscriptionAdapter);
+        setupEmptyView();
 
         subscriptionAddButton.setOnClickListener(view -> {
             if (getActivity() instanceof MainActivity) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -217,7 +217,9 @@ public void onDestroy() {
         syncExecutor.shutdown();
         schedExecutor.shutdown();
         cancelNotificationUpdater();
-        downloadPostFuture.cancel(true);
+        if (downloadPostFuture != null) {
+            downloadPostFuture.cancel(true);
+        }
         unregisterReceiver(cancelDownloadReceiver);
 
         // if this was the initial gpodder sync, i.e. we just synced the feeds successfully,

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -284,6 +284,7 @@ private void handleSuccessfulDownload(Downloader downloader) {
                     saveDownloadStatus(task.getDownloadStatus());
                 }
             } else {
+                DBWriter.setFeedLastUpdateFailed(request.getFeedfileId(), true);
                 saveDownloadStatus(task.getDownloadStatus());
             }
         } else if (type == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -831,6 +831,7 @@ public static Future<?> setFeedLastUpdateFailed(final long feedId,
             adapter.open();
             adapter.setFeedLastUpdateFailed(feedId, lastUpdateFailed);
             adapter.close();
+            EventBus.getDefault().post(new FeedListUpdateEvent(feedId));
         });
     }
 

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -29,7 +29,7 @@ public class GPodnetServiceTest {
     private static final String PW = "";
 
     @Before
-    protected void setUp() {
+    public void setUp() {
         service = new GpodnetService();
     }
 

File: app/src/androidTest/java/de/test/antennapod/storage/AutoDownloadTest.java
Patch:
@@ -44,7 +44,7 @@ public class AutoDownloadTest {
     public void setUp() throws Exception {
         context = ApplicationProvider.getApplicationContext();
 
-        stubFeedsServer = new UITestUtils(context);;
+        stubFeedsServer = new UITestUtils(context);
         stubFeedsServer.setup();
 
         dbTasksCallbacksOrig = ClientConfig.dbTasksCallbacks;
@@ -130,7 +130,7 @@ private FeedItem getCurrentlyPlaying() {
     }
 
     private void useDownloadAlgorithm(final AutomaticDownloadAlgorithm downloadAlgorithm) {
-        DBTasksCallbacks dbTasksCallbacksStub = new DBTasksCallbacks() {
+        ClientConfig.dbTasksCallbacks = new DBTasksCallbacks() {
             @Override
             public AutomaticDownloadAlgorithm getAutomaticDownloadAlgorithm() {
                 return downloadAlgorithm;
@@ -141,7 +141,6 @@ public EpisodeCleanupAlgorithm getEpisodeCacheCleanupAlgorithm() {
                 return dbTasksCallbacksOrig.getEpisodeCacheCleanupAlgorithm();
             }
         };
-        ClientConfig.dbTasksCallbacks = dbTasksCallbacksStub;
     }
 
     private class StubDownloadAlgorithm implements AutomaticDownloadAlgorithm {

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -317,8 +317,7 @@ public void loadFragment(String tag, Bundle args) {
                 fragment = new AddFeedFragment();
                 break;
             case SubscriptionFragment.TAG:
-                SubscriptionFragment subscriptionFragment = new SubscriptionFragment();
-                fragment = subscriptionFragment;
+                fragment = new SubscriptionFragment();
                 break;
             default:
                 // default to the queue

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -144,7 +144,6 @@ public boolean onLongClick(View v) {
         }
     };
 
-    @SuppressWarnings("deprecation")
     @SuppressLint("NewApi")
     @Override
     public boolean onContextItemSelected(MenuItem item) {

File: app/src/main/java/de/danoeh/antennapod/view/AspectRatioVideoView.java
Patch:
@@ -88,7 +88,7 @@ public void setVideoSize(int videoWidth, int videoHeight) {
         mVideoWidth = videoWidth;
         mVideoHeight = videoHeight;
 
-        /**
+        /*
          * If this isn't set the video is stretched across the
          * SurfaceHolders display surface (i.e. the SurfaceHolder
          * as the same size and the video is drawn to fit this

File: core/src/main/java/de/danoeh/antennapod/core/util/SortOrder.java
Patch:
@@ -25,7 +25,7 @@ public enum SortOrder {
     SMART_SHUFFLE_NEW_OLD(105, INTER_FEED);
 
     public enum Scope {
-        INTRA_FEED, INTER_FEED;
+        INTRA_FEED, INTER_FEED
     }
 
     public final int code;

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -29,7 +29,7 @@ public class GPodnetServiceTest {
     private static final String PW = "";
 
     @Before
-    protected void setUp() {
+    public void setUp() {
         service = new GpodnetService();
     }
 

File: app/src/androidTest/java/de/test/antennapod/storage/AutoDownloadTest.java
Patch:
@@ -44,7 +44,7 @@ public class AutoDownloadTest {
     public void setUp() throws Exception {
         context = ApplicationProvider.getApplicationContext();
 
-        stubFeedsServer = new UITestUtils(context);;
+        stubFeedsServer = new UITestUtils(context);
         stubFeedsServer.setup();
 
         dbTasksCallbacksOrig = ClientConfig.dbTasksCallbacks;
@@ -130,7 +130,7 @@ private FeedItem getCurrentlyPlaying() {
     }
 
     private void useDownloadAlgorithm(final AutomaticDownloadAlgorithm downloadAlgorithm) {
-        DBTasksCallbacks dbTasksCallbacksStub = new DBTasksCallbacks() {
+        ClientConfig.dbTasksCallbacks = new DBTasksCallbacks() {
             @Override
             public AutomaticDownloadAlgorithm getAutomaticDownloadAlgorithm() {
                 return downloadAlgorithm;
@@ -141,7 +141,6 @@ public EpisodeCleanupAlgorithm getEpisodeCacheCleanupAlgorithm() {
                 return dbTasksCallbacksOrig.getEpisodeCacheCleanupAlgorithm();
             }
         };
-        ClientConfig.dbTasksCallbacks = dbTasksCallbacksStub;
     }
 
     private class StubDownloadAlgorithm implements AutomaticDownloadAlgorithm {

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -317,8 +317,7 @@ public void loadFragment(String tag, Bundle args) {
                 fragment = new AddFeedFragment();
                 break;
             case SubscriptionFragment.TAG:
-                SubscriptionFragment subscriptionFragment = new SubscriptionFragment();
-                fragment = subscriptionFragment;
+                fragment = new SubscriptionFragment();
                 break;
             default:
                 // default to the queue

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -144,7 +144,6 @@ public boolean onLongClick(View v) {
         }
     };
 
-    @SuppressWarnings("deprecation")
     @SuppressLint("NewApi")
     @Override
     public boolean onContextItemSelected(MenuItem item) {

File: app/src/main/java/de/danoeh/antennapod/view/AspectRatioVideoView.java
Patch:
@@ -88,7 +88,7 @@ public void setVideoSize(int videoWidth, int videoHeight) {
         mVideoWidth = videoWidth;
         mVideoHeight = videoHeight;
 
-        /**
+        /*
          * If this isn't set the video is stretched across the
          * SurfaceHolders display surface (i.e. the SurfaceHolder
          * as the same size and the video is drawn to fit this

File: core/src/main/java/de/danoeh/antennapod/core/util/SortOrder.java
Patch:
@@ -25,7 +25,7 @@ public enum SortOrder {
     SMART_SHUFFLE_NEW_OLD(105, INTER_FEED);
 
     public enum Scope {
-        INTRA_FEED, INTER_FEED;
+        INTRA_FEED, INTER_FEED
     }
 
     public final int code;

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java
Patch:
@@ -76,6 +76,7 @@ private static void upgrade(int oldVersion) {
             }
 
             UserPreferences.setQueueLocked(false);
+            prefs.edit().putBoolean(UserPreferences.PREF_STREAM_OVER_DOWNLOAD, false).apply();
 
             if (!prefs.contains(UserPreferences.PREF_ENQUEUE_LOCATION)) {
                 final String keyOldPrefEnqueueFront = "prefQueueAddToFront";

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -82,7 +82,7 @@ private UserPreferences(){}
     private static final String PREF_RESUME_AFTER_CALL = "prefResumeAfterCall";
     public static final String PREF_VIDEO_BEHAVIOR = "prefVideoBehavior";
     private static final String PREF_TIME_RESPECTS_SPEED = "prefPlaybackTimeRespectsSpeed";
-    private static final String PREF_STREAM_OVER_DOWNLOAD = "prefStreamOverDownload";
+    public static final String PREF_STREAM_OVER_DOWNLOAD = "prefStreamOverDownload";
 
     // Network
     private static final String PREF_ENQUEUE_DOWNLOADED = "prefEnqueueDownloaded";

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java
Patch:
@@ -76,6 +76,7 @@ private static void upgrade(int oldVersion) {
             }
 
             UserPreferences.setQueueLocked(false);
+            prefs.edit().putBoolean(UserPreferences.PREF_STREAM_OVER_DOWNLOAD, false).apply();
 
             if (!prefs.contains(UserPreferences.PREF_ENQUEUE_LOCATION)) {
                 final String keyOldPrefEnqueueFront = "prefQueueAddToFront";

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -82,7 +82,7 @@ private UserPreferences(){}
     private static final String PREF_RESUME_AFTER_CALL = "prefResumeAfterCall";
     public static final String PREF_VIDEO_BEHAVIOR = "prefVideoBehavior";
     private static final String PREF_TIME_RESPECTS_SPEED = "prefPlaybackTimeRespectsSpeed";
-    private static final String PREF_STREAM_OVER_DOWNLOAD = "prefStreamOverDownload";
+    public static final String PREF_STREAM_OVER_DOWNLOAD = "prefStreamOverDownload";
 
     // Network
     private static final String PREF_ENQUEUE_DOWNLOADED = "prefEnqueueDownloaded";

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -185,7 +185,7 @@ public void updateFromOther(FeedItem other) {
         if (other.link != null) {
             link = other.link;
         }
-        if (other.pubDate != null && other.pubDate.equals(pubDate)) {
+        if (other.pubDate != null && !other.pubDate.equals(pubDate)) {
             pubDate = other.pubDate;
         }
         if (other.media != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -265,7 +265,6 @@ private void updateAppearance() {
             Log.d(TAG, "updateAppearance item is null");
             return;
         }
-        getActivity().supportInvalidateOptionsMenu();
         txtvPodcast.setText(item.getFeed().getTitle());
         txtvTitle.setText(item.getTitle());
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -185,7 +185,7 @@ public void updateFromOther(FeedItem other) {
         if (other.link != null) {
             link = other.link;
         }
-        if (other.pubDate != null && other.pubDate.equals(pubDate)) {
+        if (other.pubDate != null && !other.pubDate.equals(pubDate)) {
             pubDate = other.pubDate;
         }
         if (other.media != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AutoDownloadPreferencesFragment.java
Patch:
@@ -50,7 +50,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
     @Override
     public void onStart() {
         super.onStart();
-        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.auto_download_label);
+        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.pref_automatic_download_title);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AutoDownloadPreferencesFragment.java
Patch:
@@ -50,7 +50,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
     @Override
     public void onStart() {
         super.onStart();
-        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.auto_download_label);
+        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.pref_automatic_download_title);
     }
 
     @Override

File: app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java
Patch:
@@ -66,8 +66,8 @@ public void setUp() throws Exception {
 
     @After
     public void tearDown() throws Exception {
+        activityTestRule.finishActivity();
         uiTestUtils.tearDown();
-
         // shut down playback service
         context.sendBroadcast(new Intent(PlaybackService.ACTION_SHUTDOWN_PLAYBACK_SERVICE));
         Awaitility.await().until(() -> !PlaybackService.isRunning);

File: app/src/androidTest/java/de/test/antennapod/storage/AutoDownloadTest.java
Patch:
@@ -60,11 +60,10 @@ public void setUp() throws Exception {
     @After
     public void tearDown() throws Exception {
         stubFeedsServer.tearDown();
+        ClientConfig.dbTasksCallbacks = dbTasksCallbacksOrig;
 
         context.sendBroadcast(new Intent(PlaybackService.ACTION_SHUTDOWN_PLAYBACK_SERVICE));
         Awaitility.await().until(() -> !PlaybackService.isRunning);
-
-        ClientConfig.dbTasksCallbacks = dbTasksCallbacksOrig;
     }
 
     /**

File: app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java
Patch:
@@ -66,8 +66,8 @@ public void setUp() throws Exception {
 
     @After
     public void tearDown() throws Exception {
+        activityTestRule.finishActivity();
         uiTestUtils.tearDown();
-
         // shut down playback service
         context.sendBroadcast(new Intent(PlaybackService.ACTION_SHUTDOWN_PLAYBACK_SERVICE));
         Awaitility.await().until(() -> !PlaybackService.isRunning);

File: app/src/androidTest/java/de/test/antennapod/storage/AutoDownloadTest.java
Patch:
@@ -60,11 +60,10 @@ public void setUp() throws Exception {
     @After
     public void tearDown() throws Exception {
         stubFeedsServer.tearDown();
+        ClientConfig.dbTasksCallbacks = dbTasksCallbacksOrig;
 
         context.sendBroadcast(new Intent(PlaybackService.ACTION_SHUTDOWN_PLAYBACK_SERVICE));
         Awaitility.await().until(() -> !PlaybackService.isRunning);
-
-        ClientConfig.dbTasksCallbacks = dbTasksCallbacksOrig;
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceStateManager.java
Patch:
@@ -22,6 +22,7 @@ void startForeground(int notificationId, Notification notification) {
     void stopService() {
         stopForeground(true);
         playbackService.stopSelf();
+        hasReceivedValidStartCommand = false;
     }
 
     void stopForeground(boolean removeNotification) {
@@ -35,7 +36,6 @@ void stopForeground(boolean removeNotification) {
             }
         }
         isInForeground = false;
-        hasReceivedValidStartCommand = false;
     }
 
     boolean isInForeground() {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -895,7 +895,8 @@ private Playable getNextInQueue(final Playable currentMedia) {
             return null;
         }
 
-        if (!nextItem.getMedia().localFileAvailable() && !NetworkUtils.isStreamingAllowed()) {
+        if (!nextItem.getMedia().localFileAvailable() && !NetworkUtils.isStreamingAllowed()
+                && UserPreferences.isFollowQueue()) {
             displayStreamingNotAllowedNotification(
                     new PlaybackServiceStarter(this, nextItem.getMedia())
                     .prepareImmediately(true)

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceStateManager.java
Patch:
@@ -22,6 +22,7 @@ void startForeground(int notificationId, Notification notification) {
     void stopService() {
         stopForeground(true);
         playbackService.stopSelf();
+        hasReceivedValidStartCommand = false;
     }
 
     void stopForeground(boolean removeNotification) {
@@ -35,7 +36,6 @@ void stopForeground(boolean removeNotification) {
             }
         }
         isInForeground = false;
-        hasReceivedValidStartCommand = false;
     }
 
     boolean isInForeground() {

File: core/src/test/java/de/danoeh/antennapod/core/feed/FeedMother.java
Patch:
@@ -1,6 +1,6 @@
 package de.danoeh.antennapod.core.feed;
 
-class FeedMother {
+public class FeedMother {
     public static final String IMAGE_URL = "http://example.com/image";
 
     public static Feed anyFeed() {

File: app/src/androidTest/java/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -476,12 +476,12 @@ public void testAddItemToPlaybackHistoryAlreadyPlayed()
         assertFalse(OLD_DATE == media.getPlaybackCompletionDate().getTime());
     }
 
-    private Feed queueTestSetupMultipleItems(final int NUM_ITEMS) throws InterruptedException, ExecutionException, TimeoutException {
+    private Feed queueTestSetupMultipleItems(final int numItems) throws InterruptedException, ExecutionException, TimeoutException {
         final Context context = getInstrumentation().getTargetContext();
         UserPreferences.setEnqueueLocation(UserPreferences.EnqueueLocation.BACK);
         Feed feed = new Feed("url", null, "title");
         feed.setItems(new ArrayList<>());
-        for (int i = 0; i < NUM_ITEMS; i++) {
+        for (int i = 0; i < numItems; i++) {
             FeedItem item = new FeedItem(0, "title " + i, "id " + i, "link " + i, new Date(), FeedItem.PLAYED, feed);
             feed.getItems().add(item);
         }

File: core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java
Patch:
@@ -26,7 +26,7 @@
 public class ItemEnqueuePositionCalculatorTest {
 
     @RunWith(Parameterized.class)
-    public static class IEPCBasicTest {
+    public static class BasicTest {
         @Parameters(name = "{index}: case<{0}>, expected:{1}")
         public static Iterable<Object[]> data() {
             Options optDefault = new Options();
@@ -90,7 +90,7 @@ public void test() {
     }
 
     @RunWith(Parameterized.class)
-    public static class IEPCKeepInProgressAtFrontTest extends IEPCBasicTest {
+    public static class KeepInProgressAtFrontTest extends BasicTest {
         @Parameters(name = "{index}: case<{0}>, expected:{1}")
         public static Iterable<Object[]> data() {
             Options optKeepInProgressAtFront =

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedFileDownloadStatusRequesterInterface.java
Patch:
@@ -1,6 +1,6 @@
 package de.danoeh.antennapod.core.storage;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import de.danoeh.antennapod.core.feed.FeedFile;
 

File: core/src/test/java/de/danoeh/antennapod/core/storage/DBWriterTest.java
Patch:
@@ -1,6 +1,6 @@
 package de.danoeh.antennapod.core.storage;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: core/src/test/java/de/danoeh/antennapod/core/storage/DBWriterTest.java
Patch:
@@ -137,7 +137,7 @@ public static Iterable<Object[]> data() {
         @RunWith(Parameterized.class)
         public static class ItemEnqueuePositionCalculatorPreserveDownloadOrderTest {
 
-            @Parameters(name = "{index}: case<{0}>, expected:{1}")
+            @Parameters(name = "{index}: case<{0}>")
             public static Iterable<Object[]> data() {
                 Options optDefault = new Options();
                 Options optEnqAtFront = new Options().setEnqueueAtFront(true);

File: core/src/test/java/de/danoeh/antennapod/core/storage/DBWriterTest.java
Patch:
@@ -219,7 +219,7 @@ public void testQueueOrderWhenDownloading2Items() {
 
                 FeedItem tFI202 = tFI_isDownloading(202, mockDownloadRequester);
                 doAddToQueueAndAssertResult(message + " (bulk insertion, 2nd item)",
-                        calculator, 0, tFI202, queue,
+                        calculator, 1, tFI202, queue,
                         idsExpectedAfter202);
 
                 // TODO: simulate download failure cases.

File: core/src/main/java/de/danoeh/antennapod/core/service/PlayerWidgetJobService.java
Patch:
@@ -219,7 +219,7 @@ private PendingIntent createMediaButtonIntent() {
     }
 
     private String getProgressString(int position, int duration, float speed) {
-        if (position > 0 && duration > 0) {
+        if (position >= 0 && duration > 0) {
             TimeSpeedConverter converter = new TimeSpeedConverter(speed);
             position = converter.convert(position);
             duration = converter.convert(duration);

File: core/src/main/java/de/danoeh/antennapod/core/service/PlayerWidgetJobService.java
Patch:
@@ -219,7 +219,7 @@ private PendingIntent createMediaButtonIntent() {
     }
 
     private String getProgressString(int position, int duration, float speed) {
-        if (position > 0 && duration > 0) {
+        if (position >= 0 && duration > 0) {
             TimeSpeedConverter converter = new TimeSpeedConverter(speed);
             position = converter.convert(position);
             duration = converter.convert(duration);

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedDiscoverAdapter.java
Patch:
@@ -59,6 +59,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
 
         final PodcastSearchResult podcast = getItem(position);
+        holder.imageView.setContentDescription(podcast.title);
+
         Glide.with(mainActivityRef.get())
                 .load(podcast.imageUrl)
                 .apply(new RequestOptions()

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -84,6 +84,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         if (feed == null) return null;
 
         holder.feedTitle.setText(feed.getTitle());
+        holder.imageView.setContentDescription(feed.getTitle());
         holder.feedTitle.setVisibility(View.VISIBLE);
         int count = itemAccess.getFeedCounter(feed.getId());
         if(count > 0) {

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedDiscoverAdapter.java
Patch:
@@ -59,6 +59,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
 
         final PodcastSearchResult podcast = getItem(position);
+        holder.imageView.setContentDescription(podcast.title);
+
         Glide.with(mainActivityRef.get())
                 .load(podcast.imageUrl)
                 .apply(new RequestOptions()

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -84,6 +84,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         if (feed == null) return null;
 
         holder.feedTitle.setText(feed.getTitle());
+        holder.imageView.setContentDescription(feed.getTitle());
         holder.feedTitle.setVisibility(View.VISIBLE);
         int count = itemAccess.getFeedCounter(feed.getId());
         if(count > 0) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -38,7 +38,6 @@
 import de.danoeh.antennapod.core.util.SortOrder;
 
 import static de.danoeh.antennapod.core.feed.FeedPreferences.SPEED_USE_GLOBAL;
-import static de.danoeh.antennapod.core.util.SortOrder.CODE_UNSPECIFIED;
 import static de.danoeh.antennapod.core.util.SortOrder.toCode;
 
 // TODO Remove media column from feeditem table
@@ -142,7 +141,7 @@ public class PodDBAdapter {
             + KEY_IS_PAGED + " INTEGER DEFAULT 0,"
             + KEY_NEXT_PAGE_LINK + " TEXT,"
             + KEY_HIDE + " TEXT,"
-            + KEY_SORT_ORDER + " INTEGER DEFAULT " + CODE_UNSPECIFIED + ","
+            + KEY_SORT_ORDER + " INTEGER DEFAULT " + SortOrder.CODE_UNSPECIFIED + ","
             + KEY_LAST_UPDATE_FAILED + " INTEGER DEFAULT 0,"
             + KEY_AUTO_DELETE_ACTION + " INTEGER DEFAULT 0,"
             + KEY_FEED_PLAYBACK_SPEED + " REAL DEFAULT " + SPEED_USE_GLOBAL + ")";

File: core/src/test/java/de/danoeh/antennapod/core/util/FeedItemPermutorsTest.java
Patch:
@@ -20,7 +20,7 @@ public class FeedItemPermutorsTest {
 
     @Test
     public void testEnsureNonNullPermutors() {
-        for(SortOrder sortOrder : SortOrder.values()) {
+        for (SortOrder sortOrder : SortOrder.values()) {
             assertNotNull("The permutor for SortOrder " + sortOrder + " is unexpectedly null",
                     FeedItemPermutors.getPermutor(sortOrder));
         }

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -64,6 +64,7 @@
 import io.reactivex.android.schedulers.AndroidSchedulers;
 import io.reactivex.disposables.Disposable;
 import io.reactivex.schedulers.Schedulers;
+import org.apache.commons.lang3.StringUtils;
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
 import org.greenrobot.eventbus.ThreadMode;
@@ -504,7 +505,7 @@ public void onTimerSet(long millis, boolean shakeToReset, boolean vibrate) {
     private static String getWebsiteLinkWithFallback(Playable media) {
         if (media == null) {
             return null;
-        } else if (media.getWebsiteLink() != null) {
+        } else if (StringUtils.isNotBlank(media.getWebsiteLink())) {
             return media.getWebsiteLink();
         } else if (media instanceof FeedMedia) {
             return FeedItemUtil.getLinkWithFallback(((FeedMedia)media).getItem());

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -64,6 +64,7 @@
 import io.reactivex.android.schedulers.AndroidSchedulers;
 import io.reactivex.disposables.Disposable;
 import io.reactivex.schedulers.Schedulers;
+import org.apache.commons.lang3.StringUtils;
 import org.greenrobot.eventbus.EventBus;
 import org.greenrobot.eventbus.Subscribe;
 import org.greenrobot.eventbus.ThreadMode;
@@ -504,7 +505,7 @@ public void onTimerSet(long millis, boolean shakeToReset, boolean vibrate) {
     private static String getWebsiteLinkWithFallback(Playable media) {
         if (media == null) {
             return null;
-        } else if (media.getWebsiteLink() != null) {
+        } else if (StringUtils.isNotBlank(media.getWebsiteLink())) {
             return media.getWebsiteLink();
         } else if (media instanceof FeedMedia) {
             return FeedItemUtil.getLinkWithFallback(((FeedMedia)media).getItem());

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -13,7 +13,7 @@
 
 import de.danoeh.antennapod.core.feed.MediaType;
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
-import de.danoeh.antennapod.core.preferences.PlaybackSpeedHelper;
+import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.dialog.VariableSpeedDialog;
@@ -83,7 +83,7 @@ protected void updatePlaybackSpeedButtonText() {
         }
         float speed = 1.0f;
         if(controller.canSetPlaybackSpeed()) {
-            speed = PlaybackSpeedHelper.getCurrentPlaybackSpeed(controller.getMedia());
+            speed = PlaybackSpeedUtils.getCurrentPlaybackSpeed(controller.getMedia());
         }
         String speedStr = new DecimalFormat("0.00").format(speed);
         txtvPlaybackSpeed.setText(speedStr);

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -35,6 +35,7 @@
 import de.danoeh.antennapod.core.storage.DownloadRequester;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.ThemeUtils;
@@ -194,7 +195,7 @@ public void onBindViewHolder(final Holder holder, int position) {
         holder.butSecondary.setTag(item);
 
         new CoverLoader(mainActivityRef.get())
-                .withUri(item.getImageLocation())
+                .withUri(ImageResourceUtils.getImageLocation(item))
                 .withFallbackUri(item.getFeed().getImageLocation())
                 .withPlaceholderView(holder.placeholder)
                 .withCoverView(holder.cover)

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadedEpisodesListAdapter.java
Patch:
@@ -17,9 +17,9 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
-import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 
 /**
  * Shows a list of downloaded episodes
@@ -79,7 +79,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         }
 
         Glide.with(context)
-                .load(item.getImageLocation())
+                .load(ImageResourceUtils.getImageLocation(item))
                 .apply(new RequestOptions()
                     .placeholder(R.color.light_gray)
                     .error(R.color.light_gray)

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -40,6 +40,7 @@
 import de.danoeh.antennapod.core.storage.DownloadRequester;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.ThemeUtils;
@@ -322,7 +323,7 @@ public void bind(FeedItem item) {
             butSecondary.setTag(item);
 
             new CoverLoader(mainActivity.get())
-                    .withUri(item.getImageLocation())
+                    .withUri(ImageResourceUtils.getImageLocation(item))
                     .withFallbackUri(item.getFeed().getImageLocation())
                     .withPlaceholderView(placeholder)
                     .withCoverView(cover)

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -11,7 +11,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import java.util.Locale;
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.core.preferences.PlaybackSpeedHelper;
+import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.playback.Playable;
@@ -212,6 +212,6 @@ private float getCurrentSpeed() {
             media = controller.getMedia();
         }
 
-        return PlaybackSpeedHelper.getCurrentPlaybackSpeed(media);
+        return PlaybackSpeedUtils.getCurrentPlaybackSpeed(media);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -15,6 +15,7 @@
 import com.bumptech.glide.request.RequestOptions;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 import de.danoeh.antennapod.core.util.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 import io.reactivex.Maybe;
@@ -70,7 +71,7 @@ private void displayMediaInfo(@NonNull Playable media) {
         txtvPodcastTitle.setText(media.getFeedTitle());
         txtvEpisodeTitle.setText(media.getEpisodeTitle());
         Glide.with(this)
-                .load(media.getImageLocation())
+                .load(ImageResourceUtils.getImageLocation(media))
                 .apply(new RequestOptions()
                     .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)
                     .dontAnimate()

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -22,6 +22,7 @@
 import de.danoeh.antennapod.core.feed.MediaType;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 import de.danoeh.antennapod.core.util.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 import io.reactivex.Maybe;
@@ -227,7 +228,7 @@ private void updateUi(Playable media) {
             onPositionObserverUpdate();
 
             Glide.with(getActivity())
-                    .load(media.getImageLocation())
+                    .load(ImageResourceUtils.getImageLocation(media))
                     .apply(new RequestOptions()
                         .placeholder(R.color.light_gray)
                         .error(R.color.light_gray)

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -62,6 +62,7 @@
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
 import de.danoeh.antennapod.core.util.Flavors;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.ShareUtils;
@@ -384,7 +385,7 @@ private void updateAppearance() {
         }
 
         Glide.with(getActivity())
-                .load(item.getImageLocation())
+                .load(ImageResourceUtils.getImageLocation(item))
                 .apply(new RequestOptions()
                     .placeholder(R.color.light_gray)
                     .error(R.color.light_gray)

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -44,7 +44,7 @@
 import de.danoeh.antennapod.core.feed.EventDistributor;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
-import de.danoeh.antennapod.core.preferences.PlaybackSpeedHelper;
+import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.download.DownloadService;
 import de.danoeh.antennapod.core.service.download.Downloader;
@@ -637,7 +637,7 @@ private void refreshInfoBar() {
         if(queue.size() > 0) {
             long timeLeft = 0;
             for(FeedItem item : queue) {
-                float playbackSpeed = PlaybackSpeedHelper.getCurrentPlaybackSpeed(item.getMedia());
+                float playbackSpeed = PlaybackSpeedUtils.getCurrentPlaybackSpeed(item.getMedia());
                 if(item.getMedia() != null) {
                     timeLeft +=
                             (long) ((item.getMedia().getDuration() - item.getMedia().getPosition())

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -27,7 +27,7 @@
 import java.util.concurrent.locks.ReentrantLock;
 
 import de.danoeh.antennapod.core.feed.MediaType;
-import de.danoeh.antennapod.core.preferences.PlaybackSpeedHelper;
+import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.util.RewindAfterPauseUtils;
 import de.danoeh.antennapod.core.util.playback.AudioPlayer;
@@ -243,7 +243,7 @@ private void playMediaObject(@NonNull final Playable playable, final boolean for
         try {
             media.loadMetadata();
             callback.onMediaChanged(false);
-            setPlaybackParams(PlaybackSpeedHelper.getCurrentPlaybackSpeed(media), UserPreferences.isSkipSilence());
+            setPlaybackParams(PlaybackSpeedUtils.getCurrentPlaybackSpeed(media), UserPreferences.isSkipSilence());
             if (stream) {
                 mediaPlayer.setDataSource(media.getStreamUrl());
             } else if (media.getLocalMediaUrl() != null && new File(media.getLocalMediaUrl()).canRead()) {
@@ -307,7 +307,7 @@ private void resumeSync() {
                 Log.d(TAG, "Resuming/Starting playback");
                 acquireWifiLockIfNecessary();
 
-                setPlaybackParams(PlaybackSpeedHelper.getCurrentPlaybackSpeed(media), UserPreferences.isSkipSilence());
+                setPlaybackParams(PlaybackSpeedUtils.getCurrentPlaybackSpeed(media), UserPreferences.isSkipSilence());
                 setVolume(UserPreferences.getLeftVolume(), UserPreferences.getRightVolume());
 
                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -67,6 +67,7 @@
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.storage.FeedSearcher;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.QueueAccess;
@@ -1138,7 +1139,7 @@ private void updateMediaSessionMetadata(final Playable p) {
             builder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_TITLE, p.getEpisodeTitle());
             builder.putString(MediaMetadataCompat.METADATA_KEY_DISPLAY_SUBTITLE, p.getFeedTitle());
 
-            String imageLocation = p.getImageLocation();
+            String imageLocation = ImageResourceUtils.getImageLocation(p);
 
             if (!TextUtils.isEmpty(imageLocation)) {
                 if (UserPreferences.setLockscreenBackground()) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java
Patch:
@@ -24,6 +24,7 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;
 import de.danoeh.antennapod.core.util.Converter;
+import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;
 import de.danoeh.antennapod.core.util.IntList;
 import de.danoeh.antennapod.core.util.TimeSpeedConverter;
 import de.danoeh.antennapod.core.util.gui.NotificationUtils;
@@ -76,7 +77,7 @@ public void loadIcon() {
         try {
             icon = Glide.with(context)
                     .asBitmap()
-                    .load(playable.getImageLocation())
+                    .load(ImageResourceUtils.getImageLocation(playable))
                     .apply(RequestOptions.diskCacheStrategyOf(ApGlideSettings.AP_DISK_CACHE_STRATEGY))
                     .apply(new RequestOptions().centerCrop())
                     .submit(iconSize, iconSize)

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -29,7 +29,7 @@
 import de.danoeh.antennapod.core.feed.FeedMedia;
 import de.danoeh.antennapod.core.feed.MediaType;
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
-import de.danoeh.antennapod.core.preferences.PlaybackSpeedHelper;
+import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer;
@@ -705,7 +705,7 @@ public float getCurrentPlaybackSpeedMultiplier() {
         if (playbackService != null && canSetPlaybackSpeed()) {
             return playbackService.getCurrentPlaybackSpeed();
         } else {
-            return PlaybackSpeedHelper.getCurrentPlaybackSpeed(getMedia());
+            return PlaybackSpeedUtils.getCurrentPlaybackSpeed(getMedia());
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -827,6 +827,9 @@ public void onPostPlayback(@NonNull Playable media, boolean ended, boolean skipp
 
         @Override
         public void onPlaybackStart(@NonNull Playable playable, int position) {
+            if (taskManager.isSleepTimerActive()) {
+                taskManager.restartSleepTimer();
+            }
             taskManager.startWidgetUpdater();
             if (position != PlaybackServiceMediaPlayer.INVALID_TIME) {
                 playable.setPosition(position);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/ShakeListener.java
Patch:
@@ -52,7 +52,7 @@ public void onSensorChanged(SensorEvent event) {
         double gForce = Math.sqrt(gX*gX + gY*gY + gZ*gZ);
         if (gForce > 2.25) {
             Log.d(TAG, "Detected shake " + gForce);
-            mSleepTimer.onShake();
+            mSleepTimer.restart();
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -159,7 +159,7 @@ public static boolean onMenuItemClicked(@NonNull Fragment fragment, int menuItem
                 break;
             case R.id.mark_read_item:
                 selectedItem.setPlayed(true);
-                DBWriter.markItemPlayed(selectedItem, FeedItem.PLAYED, false);
+                DBWriter.markItemPlayed(selectedItem, FeedItem.PLAYED, true);
                 if(GpodnetPreferences.loggedIn()) {
                     FeedMedia media = selectedItem.getMedia();
                     // not all items have media, Gpodder only cares about those that do

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -159,7 +159,7 @@ public static boolean onMenuItemClicked(@NonNull Fragment fragment, int menuItem
                 break;
             case R.id.mark_read_item:
                 selectedItem.setPlayed(true);
-                DBWriter.markItemPlayed(selectedItem, FeedItem.PLAYED, false);
+                DBWriter.markItemPlayed(selectedItem, FeedItem.PLAYED, true);
                 if(GpodnetPreferences.loggedIn()) {
                     FeedMedia media = selectedItem.getMedia();
                     // not all items have media, Gpodder only cares about those that do

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/StatisticsFragment.java
Patch:
@@ -136,8 +136,7 @@ private void confirmResetStatistics() {
                     R.string.statistics_reset_data_msg) {
 
                 @Override
-                public void onConfirmButtonPressed(
-                        DialogInterface dialog) {
+                public void onConfirmButtonPressed(DialogInterface dialog) {
                     dialog.dismiss();
                     doResetStatistics();
                 }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -827,6 +827,9 @@ public void onPostPlayback(@NonNull Playable media, boolean ended, boolean skipp
 
         @Override
         public void onPlaybackStart(@NonNull Playable playable, int position) {
+            if (taskManager.isSleepTimerActive()) {
+                taskManager.restartSleepTimer();
+            }
             taskManager.startWidgetUpdater();
             if (position != PlaybackServiceMediaPlayer.INVALID_TIME) {
                 playable.setPosition(position);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/ShakeListener.java
Patch:
@@ -52,7 +52,7 @@ public void onSensorChanged(SensorEvent event) {
         double gForce = Math.sqrt(gX*gX + gY*gY + gZ*gZ);
         if (gForce > 2.25) {
             Log.d(TAG, "Detected shake " + gForce);
-            mSleepTimer.onShake();
+            mSleepTimer.restart();
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/view/PieChartView.java
Patch:
@@ -88,7 +88,7 @@ public void draw(@NonNull Canvas canvas) {
             float startAngle = 180;
             for (int i = 0; i < dataValues.length; i++) {
                 float datum = dataValues[i];
-                float sweepAngle = 180 * datum / valueSum;
+                float sweepAngle = (180f - PADDING_DEGREES) * (datum / valueSum);
                 if (sweepAngle < MIN_DEGREES) {
                     break;
                 }

File: app/src/main/java/de/danoeh/antennapod/view/PieChartView.java
Patch:
@@ -88,7 +88,7 @@ public void draw(@NonNull Canvas canvas) {
             float startAngle = 180;
             for (int i = 0; i < dataValues.length; i++) {
                 float datum = dataValues[i];
-                float sweepAngle = 180 * datum / valueSum;
+                float sweepAngle = (180f - PADDING_DEGREES) * (datum / valueSum);
                 if (sweepAngle < MIN_DEGREES) {
                     break;
                 }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -838,6 +838,7 @@ public void onPlaybackStart(@NonNull Playable playable, int position) {
         @Override
         public void onPlaybackPause(Playable playable, int position) {
             taskManager.cancelPositionSaver();
+            cancelPositionObserver();
             saveCurrentPosition(position == PlaybackServiceMediaPlayer.INVALID_TIME || playable == null,
                     playable, position);
             taskManager.cancelWidgetUpdater();
@@ -914,6 +915,7 @@ private void onPlaybackEnded(MediaType mediaType, boolean stopPlaying) {
         Log.d(TAG, "Playback ended");
         if (stopPlaying) {
             taskManager.cancelPositionSaver();
+            cancelPositionObserver();
             PlaybackPreferences.writeNoMediaPlaying();
             if (!isCasting) {
                 stateManager.stopForeground(true);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -838,6 +838,7 @@ public void onPlaybackStart(@NonNull Playable playable, int position) {
         @Override
         public void onPlaybackPause(Playable playable, int position) {
             taskManager.cancelPositionSaver();
+            cancelPositionObserver();
             saveCurrentPosition(position == PlaybackServiceMediaPlayer.INVALID_TIME || playable == null,
                     playable, position);
             taskManager.cancelWidgetUpdater();
@@ -914,6 +915,7 @@ private void onPlaybackEnded(MediaType mediaType, boolean stopPlaying) {
         Log.d(TAG, "Playback ended");
         if (stopPlaying) {
             taskManager.cancelPositionSaver();
+            cancelPositionObserver();
             PlaybackPreferences.writeNoMediaPlaying();
             if (!isCasting) {
                 stateManager.stopForeground(true);

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -72,7 +72,7 @@ private UserPreferences(){}
     private static final String PREF_HARDWARE_FOWARD_BUTTON_SKIPS = "prefHardwareForwardButtonSkips";
     private static final String PREF_HARDWARE_PREVIOUS_BUTTON_RESTARTS = "prefHardwarePreviousButtonRestarts";
     public static final String PREF_FOLLOW_QUEUE = "prefFollowQueue";
-    private static final String PREF_SKIP_KEEPS_EPISODE = "prefSkipKeepsEpisode";
+    public static final String PREF_SKIP_KEEPS_EPISODE = "prefSkipKeepsEpisode";
     private static final String PREF_FAVORITE_KEEPS_EPISODE = "prefFavoriteKeepsEpisode";
     private static final String PREF_AUTO_DELETE = "prefAutoDelete";
     public static final String PREF_SMART_MARK_AS_PLAYED_SECS = "prefSmartMarkAsPlayedSecs";

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -967,7 +967,7 @@ private void onPostPlayback(final Playable playable, boolean ended, boolean skip
         }
         FeedMedia media = (FeedMedia) playable;
         FeedItem item = media.getItem();
-        boolean smartMarkAsPlayed = playingNext && media.hasAlmostEnded();
+        boolean smartMarkAsPlayed = media.hasAlmostEnded();
         if (!ended && smartMarkAsPlayed) {
             Log.d(TAG, "smart mark as played");
         }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -706,7 +706,7 @@ private static String[] readPlaybackSpeedArray(String valueFromPrefs) {
         String[] selectedSpeeds = null;
         // If this preference hasn't been set yet, return the default options
         if (valueFromPrefs == null) {
-            selectedSpeeds = new String[] { "1.00", "1.25", "1.50", "1.75", "2.00" };
+            selectedSpeeds = new String[] { "0.75", "1.00", "1.25", "1.50", "1.75", "2.00" };
         } else {
             try {
                 JSONArray jsonArray = new JSONArray(valueFromPrefs);

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -706,7 +706,7 @@ private static String[] readPlaybackSpeedArray(String valueFromPrefs) {
         String[] selectedSpeeds = null;
         // If this preference hasn't been set yet, return the default options
         if (valueFromPrefs == null) {
-            selectedSpeeds = new String[] { "1.00", "1.25", "1.50", "1.75", "2.00" };
+            selectedSpeeds = new String[] { "0.75", "1.00", "1.25", "1.50", "1.75", "2.00" };
         } else {
             try {
                 JSONArray jsonArray = new JSONArray(valueFromPrefs);

File: app/src/main/java/de/danoeh/antennapod/view/PieChartView.java
Patch:
@@ -9,9 +9,9 @@
 import android.graphics.PixelFormat;
 import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
-import android.support.annotation.NonNull;
-import android.support.v7.widget.AppCompatImageView;
 import android.util.AttributeSet;
+import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatImageView;
 import io.reactivex.annotations.Nullable;
 
 public class PieChartView extends AppCompatImageView {

File: app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java
Patch:
@@ -113,7 +113,7 @@ public static void clearDatabase() {
     }
 
     public static void clickPreference(@StringRes int title) {
-        onView(withId(R.id.list)).perform(
+        onView(withId(R.id.recycler_view)).perform(
                 RecyclerViewActions.actionOnItem(hasDescendant(withText(title)),
                         click()));
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java
Patch:
@@ -16,7 +16,6 @@
 import android.support.v4.media.session.MediaSessionCompat;
 import android.util.Log;
 import android.view.KeyEvent;
-import androidx.media.app.NotificationCompat;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.RequestOptions;
 import de.danoeh.antennapod.core.ClientConfig;
@@ -195,7 +194,7 @@ private void addActions(MediaSessionCompat.Token mediaSessionToken, PlayerStatus
 
         PendingIntent stopButtonPendingIntent = getPendingIntentForMediaAction(
                 KeyEvent.KEYCODE_MEDIA_STOP, numActions);
-        setStyle(new NotificationCompat.MediaStyle()
+        setStyle(new androidx.media.app.NotificationCompat.MediaStyle()
                 .setMediaSession(mediaSessionToken)
                 .setShowActionsInCompactView(compactActionList.toArray())
                 .setShowCancelButton(true)

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -209,6 +209,7 @@ public void notifyCurrentlyPlayingItemChanged(PlaybackPositionEvent event, ListV
                 return;
             }
             Holder holder = (Holder) view.getTag();
+            holder.episodeProgress.setVisibility(View.VISIBLE);
             holder.episodeProgress.setProgress((int) (100.0 * event.getPosition() / event.getDuration()));
             holder.lenSize.setText(Converter.getDurationStringLong(event.getDuration() - event.getPosition()));
         }

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -209,6 +209,7 @@ public void notifyCurrentlyPlayingItemChanged(PlaybackPositionEvent event, ListV
                 return;
             }
             Holder holder = (Holder) view.getTag();
+            holder.episodeProgress.setVisibility(View.VISIBLE);
             holder.episodeProgress.setProgress((int) (100.0 * event.getPosition() / event.getDuration()));
             holder.lenSize.setText(Converter.getDurationStringLong(event.getDuration() - event.getPosition()));
         }

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -63,6 +63,8 @@ public void onCreate() {
 		EventBus.builder()
 				.addIndex(new ApEventBusIndex())
 				.addIndex(new ApCoreEventBusIndex())
+				.logNoSubscriberMessages(false)
+				.sendNoSubscriberEvent(false)
 				.installDefaultEventBus();
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -15,6 +15,7 @@
 import android.webkit.WebViewClient;
 import android.widget.LinearLayout;
 
+import de.danoeh.antennapod.core.util.IntentUtils;
 import org.apache.commons.io.IOUtils;
 
 import java.io.IOException;
@@ -57,8 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 if (url.startsWith("http")) {
-                    Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
-                    startActivity(browserIntent);
+                    IntentUtils.openInBrowser(AboutActivity.this, url);
                     return true;
                 } else {
                     url = url.replace("file:///android_asset/", "");

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -122,7 +122,6 @@ protected void onStop() {
             disposable.dispose();
         }
         EventDistributor.getInstance().unregister(contentUpdate);
-        EventBus.getDefault().unregister(this);
         saveCurrentFragment();
     }
 
@@ -175,7 +174,6 @@ private void loadLastFragment() {
     protected void onStart() {
         super.onStart();
         EventDistributor.getInstance().register(contentUpdate);
-        EventBus.getDefault().register(this);
         loadData();
     }
 

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java
Patch:
@@ -3,9 +3,11 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
+
 import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
+import de.danoeh.antennapod.core.util.download.AutoUpdateManager;
 import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 
 public class PreferenceUpgrader {
@@ -22,7 +24,7 @@ public static void checkUpgrades(Context context) {
 
         if (oldVersion != newVersion) {
             NotificationUtils.createChannels(context);
-            UserPreferences.restartUpdateAlarm();
+            AutoUpdateManager.restartUpdateAlarm();
 
             upgrade(oldVersion);
             upgraderPrefs.edit().putInt(PREF_CONFIGURED_VERSION, newVersion).apply();

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -218,6 +218,8 @@ public String getIdentifyingValue() {
             return itemIdentifier;
         } else if (title != null && !title.isEmpty()) {
             return title;
+        } else if (hasMedia() && media.getDownload_url() != null) {
+            return media.getDownload_url();
         } else {
             return link;
         }

File: core/src/main/java/de/danoeh/antennapod/core/receiver/FeedUpdateReceiver.java
Patch:
@@ -6,8 +6,7 @@
 import android.util.Log;
 
 import de.danoeh.antennapod.core.ClientConfig;
-import de.danoeh.antennapod.core.preferences.UserPreferences;
-import de.danoeh.antennapod.core.util.FeedUpdateUtils;
+import de.danoeh.antennapod.core.util.download.AutoUpdateManager;
 
 /**
  * Refreshes all feeds when it receives an intent
@@ -20,7 +19,8 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Received intent");
         ClientConfig.initialize(context);
-        FeedUpdateUtils.startAutoUpdate(context, null);
+
+        AutoUpdateManager.runOnce();
     }
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -584,7 +584,6 @@ public int getPosition() {
         }
 
         playerLock.unlock();
-        Log.d(TAG, "getPosition() -> " + retVal);
         return retVal;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/util/Optional.java
Patch:
@@ -77,7 +77,7 @@ private Optional() {
      * @param <T> Type of the non-existent value
      * @return an empty {@code Optional}
      */
-    public static<T> Optional<T> empty() {
+    public static <T> Optional<T> empty() {
         @SuppressWarnings("unchecked")
         Optional<T> t = (Optional<T>) EMPTY;
         return t;

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/ChapterReader.java
Patch:
@@ -72,7 +72,7 @@ public int onStartFrameHeader(FrameHeader header, InputStream input)
 						String decodedLink = URLDecoder.decode(link.toString(), "UTF-8");
 						currentChapter.setLink(decodedLink);
 						Log.d(TAG, "Found link: " + currentChapter.getLink());
-					} catch (IllegalArgumentException _iae) {
+					} catch (IllegalArgumentException iae) {
 						Log.w(TAG, "Bad URL found in ID3 data");
 					}
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -218,6 +218,8 @@ public String getIdentifyingValue() {
             return itemIdentifier;
         } else if (title != null && !title.isEmpty()) {
             return title;
+        } else if (hasMedia() && media.getDownload_url() != null) {
+            return media.getDownload_url();
         } else {
             return link;
         }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -668,6 +668,7 @@ private List<Pair<DownloadRequest, FeedHandlerResult>> collectCompletedRequests(
                     Log.e(TAG, "FeedSyncThread was interrupted");
                 } catch (ExecutionException e) {
                     Log.e(TAG, "ExecutionException in FeedSyncThread: " + e.getMessage());
+                    e.printStackTrace();
                 }
             }
 
@@ -702,6 +703,7 @@ public void run() {
                         Log.e(TAG, "FeedSyncThread was interrupted");
                     } catch (ExecutionException e) {
                         Log.e(TAG, "ExecutionException in FeedSyncThread: " + e.getMessage());
+                        e.printStackTrace();
                     }
                 }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.os.Looper;
+import android.text.TextUtils;
 import android.util.Log;
 
 import java.util.ArrayList;
@@ -440,10 +441,9 @@ private static Feed searchFeedByIdentifyingValueOrID(PodDBAdapter adapter,
     /**
      * Get a FeedItem by its identifying value.
      */
-    private static FeedItem searchFeedItemByIdentifyingValue(Feed feed,
-                                                             String identifier) {
+    private static FeedItem searchFeedItemByIdentifyingValue(Feed feed, String identifier) {
         for (FeedItem item : feed.getItems()) {
-            if (item.getIdentifyingValue().equals(identifier)) {
+            if (TextUtils.equals(item.getIdentifyingValue(), identifier)) {
                 return item;
             }
         }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -218,6 +218,8 @@ public String getIdentifyingValue() {
             return itemIdentifier;
         } else if (title != null && !title.isEmpty()) {
             return title;
+        } else if (hasMedia() && media.getDownload_url() != null) {
+            return media.getDownload_url();
         } else {
             return link;
         }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -668,6 +668,7 @@ private List<Pair<DownloadRequest, FeedHandlerResult>> collectCompletedRequests(
                     Log.e(TAG, "FeedSyncThread was interrupted");
                 } catch (ExecutionException e) {
                     Log.e(TAG, "ExecutionException in FeedSyncThread: " + e.getMessage());
+                    e.printStackTrace();
                 }
             }
 
@@ -702,6 +703,7 @@ public void run() {
                         Log.e(TAG, "FeedSyncThread was interrupted");
                     } catch (ExecutionException e) {
                         Log.e(TAG, "ExecutionException in FeedSyncThread: " + e.getMessage());
+                        e.printStackTrace();
                     }
                 }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.os.Looper;
+import android.text.TextUtils;
 import android.util.Log;
 
 import java.util.ArrayList;
@@ -440,10 +441,9 @@ private static Feed searchFeedByIdentifyingValueOrID(PodDBAdapter adapter,
     /**
      * Get a FeedItem by its identifying value.
      */
-    private static FeedItem searchFeedItemByIdentifyingValue(Feed feed,
-                                                             String identifier) {
+    private static FeedItem searchFeedItemByIdentifyingValue(Feed feed, String identifier) {
         for (FeedItem item : feed.getItems()) {
-            if (item.getIdentifyingValue().equals(identifier)) {
+            if (TextUtils.equals(item.getIdentifyingValue(), identifier)) {
                 return item;
             }
         }

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceTaskManagerTest.java
Patch:
@@ -151,8 +151,8 @@ public void testQueueUpdatedUponDownloadComplete() throws Exception {
             item.getMedia().setDownloaded(true);
             item.getMedia().setFile_url("file://123");
             item.setAutoDownload(false);
-            DBWriter.setFeedItem(item).get();
             DBWriter.setFeedMedia(item.getMedia()).get();
+            DBWriter.setFeedItem(item).get();
         }
 
         // an approximation to ensure the item update event has been posted and processed.

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -15,6 +15,7 @@
 import android.webkit.WebViewClient;
 import android.widget.LinearLayout;
 
+import de.danoeh.antennapod.core.util.IntentUtils;
 import org.apache.commons.io.IOUtils;
 
 import java.io.IOException;
@@ -57,8 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 if (url.startsWith("http")) {
-                    Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
-                    startActivity(browserIntent);
+                    IntentUtils.openInBrowser(AboutActivity.this, url);
                     return true;
                 } else {
                     url = url.replace("file:///android_asset/", "");

File: app/src/main/java/de/danoeh/antennapod/activity/CastplayerActivity.java
Patch:
@@ -49,6 +49,7 @@ protected void setupGUI() {
         super.setupGUI();
         if (butPlaybackSpeed != null) {
             butPlaybackSpeed.setVisibility(View.GONE);
+            txtvPlaybackSpeed.setVisibility(View.GONE);
         }
 //        if (butCastDisconnect != null) {
 //            butCastDisconnect.setOnClickListener(v -> castManager.disconnect());

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/ItemActionButton.java
Patch:
@@ -20,12 +20,12 @@ public abstract class ItemActionButton {
     }
 
     @StringRes
-    abstract public int getLabel();
+    public abstract int getLabel();
 
     @AttrRes
-    abstract public int getDrawable();
+    public abstract int getDrawable();
 
-    abstract public void onClick(Context context);
+    public abstract void onClick(Context context);
 
     public int getVisibility() {
         return View.VISIBLE;

File: app/src/main/java/de/danoeh/antennapod/config/PlaybackServiceCallbacksImpl.java
Patch:
@@ -35,6 +35,6 @@ public boolean useQueue() {
 
     @Override
     public int getNotificationIconResource(Context context) {
-        return R.drawable.ic_stat_antenna_default;
+        return R.drawable.ic_antenna;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/dialog/ChooseDataFolderDialog.java
Patch:
@@ -9,7 +9,7 @@
 
 public class ChooseDataFolderDialog {
 
-    public static abstract class RunnableWithString implements Runnable {
+    public abstract static class RunnableWithString implements Runnable {
         public RunnableWithString() {
             super();
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -6,7 +6,6 @@
 import android.support.v7.widget.helper.ItemTouchHelper;
 import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -16,6 +15,7 @@
 import de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.storage.DBReader;
+import de.danoeh.antennapod.menuhandler.FeedItemMenuHandler;
 
 /**
  * Like 'EpisodesFragment' except that it only shows new episodes and
@@ -63,7 +63,7 @@ public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHol
             @Override
             public void onSwiped(RecyclerView.ViewHolder viewHolder, int swipeDir) {
                 AllEpisodesRecycleAdapter.Holder holder = (AllEpisodesRecycleAdapter.Holder) viewHolder;
-                removeNewFlagWithUndo(holder.getFeedItem());
+                FeedItemMenuHandler.removeNewFlagWithUndo(NewEpisodesFragment.this, holder.getFeedItem());
             }
 
             @Override

File: app/src/main/java/de/danoeh/antennapod/spa/SPAUtil.java
Patch:
@@ -46,7 +46,7 @@ public static synchronized boolean sendSPAppsQueryFeedsIntent(Context context) {
 
             SharedPreferences.Editor editor = prefs.edit();
             editor.putBoolean(PREF_HAS_QUERIED_SP_APPS, true);
-            editor.commit();
+            editor.apply();
 
             return true;
         } else {
@@ -63,7 +63,7 @@ public static void resetSPAPreferences(Context c) {
             SharedPreferences.Editor editor = PreferenceManager
                     .getDefaultSharedPreferences(c.getApplicationContext()).edit();
             editor.putBoolean(PREF_HAS_QUERIED_SP_APPS, false);
-            editor.commit();
+            editor.apply();
         }
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/receiver/FeedUpdateReceiver.java
Patch:
@@ -6,8 +6,7 @@
 import android.util.Log;
 
 import de.danoeh.antennapod.core.ClientConfig;
-import de.danoeh.antennapod.core.preferences.UserPreferences;
-import de.danoeh.antennapod.core.util.FeedUpdateUtils;
+import de.danoeh.antennapod.core.util.download.AutoUpdateManager;
 
 /**
  * Refreshes all feeds when it receives an intent
@@ -20,7 +19,8 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Received intent");
         ClientConfig.initialize(context);
-        FeedUpdateUtils.startAutoUpdate(context, null);
+
+        AutoUpdateManager.runOnce();
     }
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -1025,6 +1025,7 @@ private IPlayer setMediaPlayerListeners(IPlayer mp) {
             ExoPlayerWrapper ap = (ExoPlayerWrapper) mp;
             ap.setOnCompletionListener(audioCompletionListener);
             ap.setOnSeekCompleteListener(audioSeekCompleteListener);
+            ap.setOnBufferingUpdateListener(audioBufferingUpdateListener);
             ap.setOnErrorListener(audioErrorListener);
         } else {
             Log.w(TAG, "Unknown media player: " + mp);

File: core/src/main/java/de/danoeh/antennapod/core/util/Optional.java
Patch:
@@ -77,7 +77,7 @@ private Optional() {
      * @param <T> Type of the non-existent value
      * @return an empty {@code Optional}
      */
-    public static<T> Optional<T> empty() {
+    public static <T> Optional<T> empty() {
         @SuppressWarnings("unchecked")
         Optional<T> t = (Optional<T>) EMPTY;
         return t;

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/ChapterReader.java
Patch:
@@ -72,7 +72,7 @@ public int onStartFrameHeader(FrameHeader header, InputStream input)
 						String decodedLink = URLDecoder.decode(link.toString(), "UTF-8");
 						currentChapter.setLink(decodedLink);
 						Log.d(TAG, "Found link: " + currentChapter.getLink());
-					} catch (IllegalArgumentException _iae) {
+					} catch (IllegalArgumentException iae) {
 						Log.w(TAG, "Bad URL found in ID3 data");
 					}
 

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/ExternalMedia.java
Patch:
@@ -182,7 +182,7 @@ public void saveCurrentPosition(SharedPreferences pref, int newPosition, long ti
 		editor.putLong(PREF_LAST_PLAYED_TIME, timestamp);
 		position = newPosition;
 		lastPlayedTime = timestamp;
-		editor.commit();
+		editor.apply();
 	}
 
 	@Override

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -728,6 +728,8 @@ public boolean canSetPlaybackSpeed() {
     public void setPlaybackSpeed(float speed) {
         if (playbackService != null) {
             playbackService.setSpeed(speed);
+        } else {
+            onPlaybackSpeedChange();
         }
     }
     public void setSkipSilence(boolean skipSilence) {

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -304,7 +304,7 @@ public void testSmartMarkAsPlayed_Skip_Average() throws Exception {
 
     @Test
     public void testSmartMarkAsPlayed_Skip_LastEpisodeInQueue() throws Exception {
-        // TODO: The test fails for now: doTestSmartMarkAsPlayed_Skip_ForEpisode(-1);
+        doTestSmartMarkAsPlayed_Skip_ForEpisode(-1);
     }
 
     private void doTestSmartMarkAsPlayed_Skip_ForEpisode(int itemIdxNegAllowed) throws Exception {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -969,7 +969,7 @@ private void onPostPlayback(final Playable playable, boolean ended, boolean skip
         }
         FeedMedia media = (FeedMedia) playable;
         FeedItem item = media.getItem();
-        boolean smartMarkAsPlayed = playingNext && media.hasAlmostEnded();
+        boolean smartMarkAsPlayed = media.hasAlmostEnded();
         if (!ended && smartMarkAsPlayed) {
             Log.d(TAG, "smart mark as played");
         }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -71,7 +71,7 @@ private UserPreferences(){}
     private static final String PREF_HARDWARE_FOWARD_BUTTON_SKIPS = "prefHardwareForwardButtonSkips";
     private static final String PREF_HARDWARE_PREVIOUS_BUTTON_RESTARTS = "prefHardwarePreviousButtonRestarts";
     public static final String PREF_FOLLOW_QUEUE = "prefFollowQueue";
-    private static final String PREF_SKIP_KEEPS_EPISODE = "prefSkipKeepsEpisode";
+    public static final String PREF_SKIP_KEEPS_EPISODE = "prefSkipKeepsEpisode";
     private static final String PREF_FAVORITE_KEEPS_EPISODE = "prefFavoriteKeepsEpisode";
     private static final String PREF_AUTO_DELETE = "prefAutoDelete";
     public static final String PREF_SMART_MARK_AS_PLAYED_SECS = "prefSmartMarkAsPlayedSecs";

File: app/src/play/java/de/danoeh/antennapod/activity/CastEnabledActivity.java
Patch:
@@ -123,6 +123,7 @@ protected void onPause() {
         if (!CastManager.isInitialized()) {
             return;
         }
+        castButtonVisibilityManager.setResumed(false);
     }
 
 

File: app/src/main/java/de/danoeh/antennapod/fragment/preferences/AutoDownloadPreferencesFragment.java
Patch:
@@ -198,7 +198,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
     }
 
     private class PermissionHelper {
-        private static final String requestedPermission = Manifest.permission.ACCESS_COARSE_LOCATION;
+        private static final String requestedPermission = Manifest.permission.ACCESS_FINE_LOCATION;
         private static final int permissionRequestCode = 1;
 
         private static final String PREF_KEY_PERMISSION_REQUEST_PROMPT = "prefAutoDownloadWifiFilterAndroid10PermissionPrompt";

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -451,7 +451,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                     notificationBuilder.loadIcon(getPlayable());
                 }
             }
-            startForeground(NOTIFICATION_ID, notificationBuilder.build());
+            stateManager.startForeground(NOTIFICATION_ID, notificationBuilder.build());
         }
 
         NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -451,7 +451,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                     notificationBuilder.loadIcon(getPlayable());
                 }
             }
-            startForeground(NOTIFICATION_ID, notificationBuilder.build());
+            stateManager.startForeground(NOTIFICATION_ID, notificationBuilder.build());
         }
 
         NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -15,6 +15,7 @@
 import android.webkit.WebViewClient;
 import android.widget.LinearLayout;
 
+import de.danoeh.antennapod.core.util.IntentUtils;
 import org.apache.commons.io.IOUtils;
 
 import java.io.IOException;
@@ -57,8 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 if (url.startsWith("http")) {
-                    Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
-                    startActivity(browserIntent);
+                    IntentUtils.openInBrowser(AboutActivity.this, url);
                     return true;
                 } else {
                     url = url.replace("file:///android_asset/", "");

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -452,8 +452,7 @@ public void onTimerSet(long millis, boolean shakeToReset, boolean vibrate) {
                         }
                         break;
                     case R.id.visit_website_item:
-                        Uri uri = Uri.parse(getWebsiteLinkWithFallback(media));
-                        startActivity(new Intent(Intent.ACTION_VIEW, uri));
+                        IntentUtils.openInBrowser(MediaplayerActivity.this, getWebsiteLinkWithFallback(media));
                         break;
                     case R.id.share_link_item:
                         if (feedItem != null) {

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -15,6 +15,7 @@
 import android.webkit.WebViewClient;
 import android.widget.LinearLayout;
 
+import de.danoeh.antennapod.core.util.IntentUtils;
 import org.apache.commons.io.IOUtils;
 
 import java.io.IOException;
@@ -57,8 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 if (url.startsWith("http")) {
-                    Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
-                    startActivity(browserIntent);
+                    IntentUtils.openInBrowser(AboutActivity.this, url);
                     return true;
                 } else {
                     url = url.replace("file:///android_asset/", "");

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -452,8 +452,7 @@ public void onTimerSet(long millis, boolean shakeToReset, boolean vibrate) {
                         }
                         break;
                     case R.id.visit_website_item:
-                        Uri uri = Uri.parse(getWebsiteLinkWithFallback(media));
-                        startActivity(new Intent(Intent.ACTION_VIEW, uri));
+                        IntentUtils.openInBrowser(MediaplayerActivity.this, getWebsiteLinkWithFallback(media));
                         break;
                     case R.id.share_link_item:
                         if (feedItem != null) {

File: app/src/main/java/de/danoeh/antennapod/activity/CastplayerActivity.java
Patch:
@@ -49,6 +49,7 @@ protected void setupGUI() {
         super.setupGUI();
         if (butPlaybackSpeed != null) {
             butPlaybackSpeed.setVisibility(View.GONE);
+            txtvPlaybackSpeed.setVisibility(View.GONE);
         }
 //        if (butCastDisconnect != null) {
 //            butCastDisconnect.setOnClickListener(v -> castManager.disconnect());

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/ItemActionButton.java
Patch:
@@ -20,12 +20,12 @@ public abstract class ItemActionButton {
     }
 
     @StringRes
-    abstract public int getLabel();
+    public abstract int getLabel();
 
     @AttrRes
-    abstract public int getDrawable();
+    public abstract int getDrawable();
 
-    abstract public void onClick(Context context);
+    public abstract void onClick(Context context);
 
     public int getVisibility() {
         return View.VISIBLE;

File: app/src/main/java/de/danoeh/antennapod/config/PlaybackServiceCallbacksImpl.java
Patch:
@@ -35,6 +35,6 @@ public boolean useQueue() {
 
     @Override
     public int getNotificationIconResource(Context context) {
-        return R.drawable.ic_stat_antenna_default;
+        return R.drawable.ic_antenna;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/dialog/ChooseDataFolderDialog.java
Patch:
@@ -9,7 +9,7 @@
 
 public class ChooseDataFolderDialog {
 
-    public static abstract class RunnableWithString implements Runnable {
+    public abstract static class RunnableWithString implements Runnable {
         public RunnableWithString() {
             super();
         }

File: app/src/main/java/de/danoeh/antennapod/discovery/CombinedSearcher.java
Patch:
@@ -24,7 +24,7 @@ public class CombinedSearcher implements PodcastSearcher {
     public CombinedSearcher(Context context) {
         addProvider(new FyydPodcastSearcher(), 1.f);
         addProvider(new ItunesPodcastSearcher(context), 1.f);
-        addProvider(new GpodnetPodcastSearcher(), 0.6f);
+        //addProvider(new GpodnetPodcastSearcher(), 0.6f);
     }
 
     private void addProvider(PodcastSearcher provider, float priority) {

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -6,7 +6,6 @@
 import android.support.v7.widget.helper.ItemTouchHelper;
 import android.view.LayoutInflater;
 import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -16,6 +15,7 @@
 import de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.storage.DBReader;
+import de.danoeh.antennapod.menuhandler.FeedItemMenuHandler;
 
 /**
  * Like 'EpisodesFragment' except that it only shows new episodes and
@@ -63,7 +63,7 @@ public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHol
             @Override
             public void onSwiped(RecyclerView.ViewHolder viewHolder, int swipeDir) {
                 AllEpisodesRecycleAdapter.Holder holder = (AllEpisodesRecycleAdapter.Holder) viewHolder;
-                removeNewFlagWithUndo(holder.getFeedItem());
+                FeedItemMenuHandler.removeNewFlagWithUndo(NewEpisodesFragment.this, holder.getFeedItem());
             }
 
             @Override

File: app/src/main/java/de/danoeh/antennapod/spa/SPAUtil.java
Patch:
@@ -46,7 +46,7 @@ public static synchronized boolean sendSPAppsQueryFeedsIntent(Context context) {
 
             SharedPreferences.Editor editor = prefs.edit();
             editor.putBoolean(PREF_HAS_QUERIED_SP_APPS, true);
-            editor.commit();
+            editor.apply();
 
             return true;
         } else {
@@ -63,7 +63,7 @@ public static void resetSPAPreferences(Context c) {
             SharedPreferences.Editor editor = PreferenceManager
                     .getDefaultSharedPreferences(c.getApplicationContext()).edit();
             editor.putBoolean(PREF_HAS_QUERIED_SP_APPS, false);
-            editor.commit();
+            editor.apply();
         }
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -546,7 +546,7 @@ private void postAuthenticationNotification(final DownloadRequest downloadReques
                     .setContentText(getText(R.string.authentication_notification_msg))
                     .setStyle(new NotificationCompat.BigTextStyle().bigText(getText(R.string.authentication_notification_msg)
                             + ": " + resourceTitle))
-                    .setSmallIcon(R.drawable.ic_stat_authentication)
+                    .setSmallIcon(R.drawable.ic_notification_key)
                     .setAutoCancel(true)
                     .setContentIntent(ClientConfig.downloadServiceCallbacks.getAuthentificationNotificationContentIntent(DownloadService.this, downloadRequest));
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
@@ -1076,7 +1076,7 @@ private void postDownloaders() {
     private static String compileNotificationString(List<Downloader> downloads) {
         List<String> lines = new ArrayList<>(downloads.size());
         for (Downloader downloader : downloads) {
-            StringBuilder line = new StringBuilder("\u2022 ");
+            StringBuilder line = new StringBuilder("• ");
             DownloadRequest request = downloader.getDownloadRequest();
             switch (request.getFeedfileType()) {
                 case Feed.FEEDFILETYPE_FEED:

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/ExternalMedia.java
Patch:
@@ -182,7 +182,7 @@ public void saveCurrentPosition(SharedPreferences pref, int newPosition, long ti
 		editor.putLong(PREF_LAST_PLAYED_TIME, timestamp);
 		position = newPosition;
 		lastPlayedTime = timestamp;
-		editor.commit();
+		editor.apply();
 	}
 
 	@Override

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -728,6 +728,8 @@ public boolean canSetPlaybackSpeed() {
     public void setPlaybackSpeed(float speed) {
         if (playbackService != null) {
             playbackService.setSpeed(speed);
+        } else {
+            onPlaybackSpeedChange();
         }
     }
     public void setSkipSilence(boolean skipSilence) {

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -635,7 +635,7 @@ public int getTitleResourceID() {
         }
     }
 
-    static public void showSkipPreference(Activity activity, SkipDirection direction) {
+    public static void showSkipPreference(Activity activity, SkipDirection direction) {
         int checked = 0;
         int skipSecs = direction.getPrefSkipSeconds();
         final int[] values = activity.getResources().getIntArray(R.array.seek_delta_values);

File: app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/ItemActionButton.java
Patch:
@@ -20,12 +20,12 @@ public abstract class ItemActionButton {
     }
 
     @StringRes
-    abstract public int getLabel();
+    public abstract int getLabel();
 
     @AttrRes
-    abstract public int getDrawable();
+    public abstract int getDrawable();
 
-    abstract public void onClick(Context context);
+    public abstract void onClick(Context context);
 
     public int getVisibility() {
         return View.VISIBLE;

File: app/src/main/java/de/danoeh/antennapod/dialog/ChooseDataFolderDialog.java
Patch:
@@ -9,7 +9,7 @@
 
 public class ChooseDataFolderDialog {
 
-    public static abstract class RunnableWithString implements Runnable {
+    public abstract static class RunnableWithString implements Runnable {
         public RunnableWithString() {
             super();
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -640,7 +640,7 @@ private void refreshInfoBar() {
                                     / playbackSpeed);
                 }
             }
-            info += " \u2022 ";
+            info += " • ";
             info += getString(R.string.time_left_label);
             info += Converter.getDurationStringLocalized(getActivity(), timeLeft);
         }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -1076,7 +1076,7 @@ private void postDownloaders() {
     private static String compileNotificationString(List<Downloader> downloads) {
         List<String> lines = new ArrayList<>(downloads.size());
         for (Downloader downloader : downloads) {
-            StringBuilder line = new StringBuilder("\u2022 ");
+            StringBuilder line = new StringBuilder("• ");
             DownloadRequest request = downloader.getDownloadRequest();
             switch (request.getFeedfileType()) {
                 case Feed.FEEDFILETYPE_FEED:

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -142,11 +142,11 @@ public static OkHttpClient.Builder newBuilder() {
                 });
             }
         }
-        if(16 <= Build.VERSION.SDK_INT && Build.VERSION.SDK_INT < 21) {
+        if (16 <= Build.VERSION.SDK_INT && Build.VERSION.SDK_INT < 21) {
             builder.sslSocketFactory(new CustomSslSocketFactory(), trustManager());
         }
 
-        if(Build.VERSION.SDK_INT < 21) {
+        if (Build.VERSION.SDK_INT < 21) {
             // workaround for Android 4.x for certain web sites.
             // see: https://github.com/square/okhttp/issues/4053#issuecomment-402579554
             List<CipherSuite> cipherSuites = new ArrayList<>();

File: app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java
Patch:
@@ -24,14 +24,14 @@
 /**
  * Displays the 'crash report' screen
  */
-public class CrashReportActivity extends AppCompatActivity {
+public class BugReportActivity extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         setTheme(UserPreferences.getTheme());
         super.onCreate(savedInstanceState);
         getSupportActionBar().setDisplayShowHomeEnabled(true);
-        setContentView(R.layout.crash_report);
+        setContentView(R.layout.bug_report);
 
         TextView crashDetailsText = findViewById(R.id.crash_report_logs);
 
@@ -56,7 +56,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         findViewById(R.id.btn_copy_log).setOnClickListener(v -> {
             ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
-            ClipData clip = ClipData.newPlainText(getString(R.string.crash_report_title), crashDetailsText.getText());
+            ClipData clip = ClipData.newPlainText(getString(R.string.bug_report_title), crashDetailsText.getText());
             clipboard.setPrimaryClip(clip);
             Snackbar.make(findViewById(android.R.id.content), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();
         });

File: app/src/main/java/de/danoeh/antennapod/activity/BugReportActivity.java
Patch:
@@ -24,14 +24,14 @@
 /**
  * Displays the 'crash report' screen
  */
-public class CrashReportActivity extends AppCompatActivity {
+public class BugReportActivity extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         setTheme(UserPreferences.getTheme());
         super.onCreate(savedInstanceState);
         getSupportActionBar().setDisplayShowHomeEnabled(true);
-        setContentView(R.layout.crash_report);
+        setContentView(R.layout.bug_report);
 
         TextView crashDetailsText = findViewById(R.id.crash_report_logs);
 
@@ -56,7 +56,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         findViewById(R.id.btn_copy_log).setOnClickListener(v -> {
             ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
-            ClipData clip = ClipData.newPlainText(getString(R.string.crash_report_title), crashDetailsText.getText());
+            ClipData clip = ClipData.newPlainText(getString(R.string.bug_report_title), crashDetailsText.getText());
             clipboard.setPrimaryClip(clip);
             Snackbar.make(findViewById(android.R.id.content), R.string.copied_to_clipboard, Snackbar.LENGTH_SHORT).show();
         });

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -245,6 +245,7 @@ private void playMediaObject(@NonNull final Playable playable, final boolean for
         try {
             media.loadMetadata();
             callback.onMediaChanged(false);
+            setPlaybackParams(UserPreferences.getPlaybackSpeed(media), UserPreferences.isSkipSilence());
             if (stream) {
                 mediaPlayer.setDataSource(media.getStreamUrl());
             } else if (media.getLocalMediaUrl() != null && new File(media.getLocalMediaUrl()).canRead()) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -170,7 +170,7 @@ public class PodDBAdapter {
             + KEY_PLAYED_DURATION + " INTEGER,"
             + KEY_HAS_EMBEDDED_PICTURE + " INTEGER,"
             + KEY_LAST_PLAYED_TIME + " INTEGER,"
-            + KEY_MEDIA_LAST_PLAYBACK_SPEED + " REAL)";
+            + KEY_MEDIA_LAST_PLAYBACK_SPEED + " REAL DEFAULT " + LAST_PLAYBACK_SPEED_UNSET + ")";
 
     private static final String CREATE_TABLE_DOWNLOAD_LOG = "CREATE TABLE "
             + TABLE_NAME_DOWNLOAD_LOG + " (" + TABLE_PRIMARY_KEY + KEY_FEEDFILE

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -20,6 +20,8 @@
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import de.danoeh.antennapod.core.util.ShownotesProvider;
 
+import static de.danoeh.antennapod.core.feed.FeedPreferences.SPEED_USE_GLOBAL;
+
 /**
  * Data Object for a XML message
  *
@@ -493,6 +495,6 @@ public float getFeedPlaybackSpeed() {
         if (feed != null) {
             return feed.getPreferences().getCurrentPlaybackSpeed();
         }
-        return UserPreferences.getPlaybackSpeed();
+        return SPEED_USE_GLOBAL;
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBUpgrader.java
Patch:
@@ -8,6 +8,8 @@
 
 import de.danoeh.antennapod.core.feed.FeedItem;
 
+import static de.danoeh.antennapod.core.feed.FeedMedia.LAST_PLAYBACK_SPEED_UNSET;
+
 class DBUpgrader {
     /**
      * Upgrades the given database to a new schema version
@@ -292,7 +294,7 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new
             db.execSQL("ALTER TABLE " + PodDBAdapter.TABLE_NAME_FEEDS
                     + " ADD COLUMN " + PodDBAdapter.KEY_FEED_PLAYBACK_SPEED + " TEXT");
             db.execSQL("ALTER TABLE " + PodDBAdapter.TABLE_NAME_FEED_MEDIA
-                    + " ADD COLUMN " + PodDBAdapter.KEY_LAST_PLAYBACK_SPEED + " TEXT");
+                    + " ADD COLUMN " + PodDBAdapter.KEY_MEDIA_LAST_PLAYBACK_SPEED + " REAL DEFAULT " + LAST_PLAYBACK_SPEED_UNSET);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -879,7 +879,7 @@ protected float getPlaybackSpeedForMedia() {
             boolean isFeedMedia = media instanceof FeedMedia;
 
             if (isFeedMedia) {
-                return ((FeedMedia) media).getFeedPlaybackSpeed();
+                return ((FeedMedia) media).getMediaPlaybackSpeed();
             }
         }
 

File: app/src/main/java/de/danoeh/antennapod/dialog/PlaybackControlsDialog.java
Patch:
@@ -219,7 +219,7 @@ private float getCurrentSpeed() {
             boolean isFeedMedia = media instanceof FeedMedia;
 
             if (isFeedMedia) {
-                return ((FeedMedia) media).getFeedPlaybackSpeed();
+                return ((FeedMedia) media).getMediaPlaybackSpeed();
             }
         }
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java
Patch:
@@ -187,7 +187,6 @@ public float getCurrentPlaybackSpeed() {
             try {
                 speed = Float.parseFloat(getFeedPlaybackSpeed());
             } catch (NumberFormatException e) {
-                Log.e(TAG, Log.getStackTraceString(e));
                 setFeedPlaybackSpeed("global");
             }
         }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -308,7 +308,7 @@ private void resumeSync() {
                 if (media.getMediaType() == MediaType.VIDEO) {
                     setPlaybackParams(UserPreferences.getVideoPlaybackSpeed(), UserPreferences.isSkipSilence());
                 } else if (media instanceof FeedMedia) {
-                    setPlaybackParams(((FeedMedia) media).getFeedPlaybackSpeed(), UserPreferences.isSkipSilence());
+                    setPlaybackParams(((FeedMedia) media).getMediaPlaybackSpeed(), UserPreferences.isSkipSilence());
                 } else {
                     setPlaybackParams(UserPreferences.getPlaybackSpeed(), UserPreferences.isSkipSilence());
                 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBUpgrader.java
Patch:
@@ -291,6 +291,8 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new
         if (oldVersion < 1070306) {
             db.execSQL("ALTER TABLE " + PodDBAdapter.TABLE_NAME_FEEDS
                     + " ADD COLUMN " + PodDBAdapter.KEY_FEED_PLAYBACK_SPEED + " TEXT");
+            db.execSQL("ALTER TABLE " + PodDBAdapter.TABLE_NAME_FEED_MEDIA
+                    + " ADD COLUMN " + PodDBAdapter.KEY_LAST_PLAYBACK_SPEED + " TEXT");
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -598,8 +598,8 @@ private void refreshInfoBar() {
         String info = queue.size() + getString(R.string.episodes_suffix);
         if(queue.size() > 0) {
             long timeLeft = 0;
-            float playbackSpeed = UserPreferences.getPlaybackSpeed();
             for(FeedItem item : queue) {
+                float playbackSpeed = item.getFeedPlaybackSpeed();
                 if(item.getMedia() != null) {
                     timeLeft +=
                             (long) ((item.getMedia().getDuration() - item.getMedia().getPosition())

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -26,6 +26,7 @@
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.locks.ReentrantLock;
 
+import de.danoeh.antennapod.core.feed.FeedMedia;
 import de.danoeh.antennapod.core.feed.MediaType;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.util.RewindAfterPauseUtils;
@@ -306,6 +307,8 @@ private void resumeSync() {
                 acquireWifiLockIfNecessary();
                 if (media.getMediaType() == MediaType.VIDEO) {
                     setPlaybackParams(UserPreferences.getVideoPlaybackSpeed(), UserPreferences.isSkipSilence());
+                } else if (media instanceof FeedMedia) {
+                    setPlaybackParams(((FeedMedia) media).getFeedPlaybackSpeed(), UserPreferences.isSkipSilence());
                 } else {
                     setPlaybackParams(UserPreferences.getPlaybackSpeed(), UserPreferences.isSkipSilence());
                 }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -87,7 +87,7 @@ public class MainActivity extends CastEnabledActivity implements NavDrawerActivi
 
     public static final String PREF_NAME = "MainActivityPrefs";
     public static final String PREF_IS_FIRST_LAUNCH = "prefMainActivityIsFirstLaunch";
-    private static final String PREF_LAST_FRAGMENT_TAG = "prefMainActivityLastFragmentTag";
+    public static final String PREF_LAST_FRAGMENT_TAG = "prefMainActivityLastFragmentTag";
 
     public static final String EXTRA_NAV_TYPE = "nav_type";
     public static final String EXTRA_NAV_INDEX = "nav_index";

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -168,7 +168,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             return true;
         });
 
-        for(FeedItem episode : episodes) {
+        titles.clear();
+        for (FeedItem episode : episodes) {
             titles.add(episode.getTitle());
         }
 

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackSonicTest.java
Patch:
@@ -122,7 +122,7 @@ private void startLocalPlayback() {
         solo.clickOnText(solo.getString(R.string.all_episodes_short_label));
         getInstrumentation().waitForIdleSync();
 
-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(10);
+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10);
         assertTrue(solo.waitForView(solo.getView(R.id.butSecondaryAction)));
 
         solo.clickOnView(solo.getView(R.id.butSecondaryAction));
@@ -241,7 +241,7 @@ private void replayEpisodeCheck(boolean followQueue) throws Exception {
         setContinuousPlaybackPreference(followQueue);
         uiTestUtils.addLocalFeedData(true);
         DBWriter.clearQueue().get();
-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(10);
+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10);
 
         startLocalPlayback();
         long mediaId = episodes.get(0).getMedia().getId();

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -114,7 +114,7 @@ private void startLocalPlayback() {
         solo.waitForText(solo.getString(R.string.all_episodes_short_label));
         solo.clickOnText(solo.getString(R.string.all_episodes_short_label));
 
-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(10);
+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10);
         assertTrue(solo.waitForView(solo.getView(R.id.butSecondaryAction)));
 
         solo.clickOnView(solo.getView(R.id.butSecondaryAction));
@@ -231,7 +231,7 @@ private void replayEpisodeCheck(boolean followQueue) throws Exception {
         setContinuousPlaybackPreference(followQueue);
         uiTestUtils.addLocalFeedData(true);
         DBWriter.clearQueue().get();
-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(10);
+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10);
 
         startLocalPlayback();
         long mediaId = episodes.get(0).getMedia().getId();

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -415,9 +415,9 @@ private static void setAllowMobileFor(String type, boolean allow) {
         defaultValue.add("images");
         Set<String> allowed = prefs.getStringSet(PREF_MOBILE_UPDATE, defaultValue);
         if (allow) {
-            allowed.remove(type);
-        } else {
             allowed.add(type);
+        } else {
+            allowed.remove(type);
         }
         prefs.edit().putStringSet(PREF_MOBILE_UPDATE, allowed).apply();
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -210,7 +210,7 @@ private void bindToService() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(optionalIntent -> {
                     boolean bound = false;
-                    if (!PlaybackService.started) {
+                    if (!PlaybackService.isRunning) {
                         if (optionalIntent.isPresent()) {
                             Log.d(TAG, "Calling start service");
                             ContextCompat.startForegroundService(activity, optionalIntent.get());

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -210,7 +210,7 @@ private void bindToService() {
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(optionalIntent -> {
                     boolean bound = false;
-                    if (!PlaybackService.started) {
+                    if (!PlaybackService.isRunning) {
                         if (optionalIntent.isPresent()) {
                             Log.d(TAG, "Calling start service");
                             ContextCompat.startForegroundService(activity, optionalIntent.get());

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverLoader.java
Patch:
@@ -79,7 +79,7 @@ public void load() {
         builder.into(new CoverTarget(txtvPlaceholder, imgvCover));
     }
 
-    class CoverTarget extends CustomViewTarget<ImageView, Drawable> {
+    static class CoverTarget extends CustomViewTarget<ImageView, Drawable> {
         private final WeakReference<TextView> placeholder;
         private final WeakReference<ImageView> cover;
 

File: app/src/main/java/de/danoeh/antennapod/adapter/DataFolderAdapter.java
Patch:
@@ -100,7 +100,7 @@ private void selectAndDismiss(StoragePath storagePath) {
         dialog.dismiss();
     }
 
-    class ViewHolder extends RecyclerView.ViewHolder {
+    static class ViewHolder extends RecyclerView.ViewHolder {
         private View root;
         private TextView path;
         private TextView size;
@@ -117,7 +117,7 @@ class ViewHolder extends RecyclerView.ViewHolder {
         }
     }
 
-    class StoragePath {
+    static class StoragePath {
         private final String path;
 
         StoragePath(String path) {

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -60,7 +60,7 @@ public class EpisodesApplyActionFragment extends Fragment {
      *
      * Includes: the menu / action item and the actual logic
      */
-    private class ActionBinding {
+    private static class ActionBinding {
         int flag;
         @IdRes
         final int actionItemId;

File: app/src/androidTest/java/de/test/antennapod/util/service/download/HTTPBin.java
Patch:
@@ -3,6 +3,7 @@
 import android.util.Base64;
 import android.util.Log;
 
+import fi.iki.elonen.NanoHTTPD;
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
 

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -1,6 +1,7 @@
 package de.test.antennapod.handler;
 
 import android.content.Context;
+import android.support.test.InstrumentationRegistry;
 import android.test.InstrumentationTestCase;
 
 import org.xml.sax.SAXException;
@@ -36,7 +37,7 @@ public class FeedHandlerTest extends InstrumentationTestCase {
 
     protected void setUp() throws Exception {
         super.setUp();
-        Context context = getInstrumentation().getContext();
+        Context context = InstrumentationRegistry.getTargetContext();
         File destDir = context.getExternalFilesDir(FEEDS_DIR);
         assertNotNull(destDir);
 

File: app/src/androidTest/java/de/test/antennapod/storage/DBTestUtils.java
Patch:
@@ -14,7 +14,6 @@
 import de.danoeh.antennapod.core.feed.SimpleChapter;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import de.danoeh.antennapod.core.util.comparator.FeedItemPubdateComparator;
-import de.danoeh.antennapod.core.util.flattr.FlattrStatus;
 
 /**
  * Utility methods for DB* tests.
@@ -46,7 +45,7 @@ public static List<Feed> saveFeedlist(int numFeeds, int numItems, boolean withMe
         adapter.open();
         for (int i = 0; i < numFeeds; i++) {
             Feed f = new Feed(0, null, "feed " + i, null, "link" + i, "descr", null, null,
-                    null, null, "id" + i, null, null, "url" + i, false, new FlattrStatus(), false, null, null, false);
+                    null, null, "id" + i, null, null, "url" + i, false, false, null, null, false);
             f.setItems(new ArrayList<>());
             for (int j = 0; j < numItems; j++) {
                 FeedItem item = new FeedItem(0, "item " + j, "id" + j, "link" + j, new Date(),

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -27,9 +27,9 @@
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 import de.danoeh.antennapod.fragment.ExternalPlayerFragment;
-import de.greenrobot.event.EventBus;
 import de.test.antennapod.util.service.download.HTTPBin;
 import de.test.antennapod.util.syndication.feedgenerator.RSS2Generator;
+import org.greenrobot.eventbus.EventBus;
 
 /**
  * Utility methods for UI tests.

File: app/src/androidTest/java/de/test/antennapod/util/service/download/NanoHTTPD.java
Patch:
@@ -776,6 +776,7 @@ public String getDescription() {
     }
 
     public static final class ResponseException extends Exception {
+        private static final long serialVersionUID = 1L;
 
         private final Response.Status status;
 

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/GeneratorUtil.java
Patch:
@@ -14,7 +14,6 @@ public static void addPaymentLink(XmlSerializer xml, String paymentLink, boolean
         String ns = (withNamespace) ? "http://www.w3.org/2005/Atom" : null;
         xml.startTag(ns, "link");
         xml.attribute(null, "rel", "payment");
-        xml.attribute(null, "title", "Flattr this!");
         xml.attribute(null, "href", paymentLink);
         xml.attribute(null, "type", "text/html");
         xml.endTag(ns, "link");

File: app/src/free/java/de/danoeh/antennapod/preferences/PreferenceControllerFlavorHelper.java
Patch:
@@ -1,13 +1,14 @@
 package de.danoeh.antennapod.preferences;
 
 import de.danoeh.antennapod.core.preferences.UserPreferences;
+import de.danoeh.antennapod.fragment.preferences.PlaybackPreferencesFragment;
 
 /**
  * Implements functions from PreferenceController that are flavor dependent.
  */
-class PreferenceControllerFlavorHelper {
+public class PreferenceControllerFlavorHelper {
 
-    static void setupFlavoredUI(PreferenceController.PreferenceUI ui) {
+    public static void setupFlavoredUI(PlaybackPreferencesFragment ui) {
         ui.findPreference(UserPreferences.PREF_CAST_ENABLED).setEnabled(false);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -129,6 +129,7 @@ protected void setupGUI() {
                     }
                     UserPreferences.setPlaybackSpeed(newSpeed);
                     controller.setPlaybackSpeed(Float.parseFloat(newSpeed));
+                    onPositionObserverUpdate();
                 } else {
                     VariableSpeedDialog.showGetPluginDialog(this);
                 }

File: app/src/main/java/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -199,8 +199,6 @@ public boolean onCreateOptionsMenu(Menu menu) {
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
-        menu.findItem(R.id.support_item).setVisible(
-                feed != null && feed.getPaymentLink() != null);
         menu.findItem(R.id.share_link_item).setVisible(feed != null && feed.getLink() != null);
         menu.findItem(R.id.visit_website_item).setVisible(feed != null && feed.getLink() != null &&
                 IntentUtils.isCallable(this, new Intent(Intent.ACTION_VIEW, Uri.parse(feed.getLink()))));

File: app/src/main/java/de/danoeh/antennapod/adapter/AdapterUtils.java
Patch:
@@ -49,7 +49,7 @@ static void updateEpisodePlaybackProgress(FeedItem item, TextView txtvPos, Progr
         } else if (!media.isDownloaded()) {
             if (media.getSize() > 0) {
                 txtvPos.setText(Converter.byteToString(media.getSize()));
-            } else if(NetworkUtils.isDownloadAllowed() && !media.checkedOnSizeButUnknown()) {
+            } else if(NetworkUtils.isEpisodeHeadDownloadAllowed() && !media.checkedOnSizeButUnknown()) {
                 txtvPos.setText("{fa-spinner}");
                 Iconify.addIcons(txtvPos);
                 NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverLoader.java
Patch:
@@ -66,7 +66,7 @@ public void load() {
             options = options.error(errorResource);
         }
 
-        RequestBuilder builder = Glide.with(activity)
+        RequestBuilder<Drawable> builder = Glide.with(activity)
                 .load(uri)
                 .apply(options);
 

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -16,7 +16,6 @@ private ClientConfigurator(){}
         ClientConfig.downloadServiceCallbacks = new DownloadServiceCallbacksImpl();
         ClientConfig.gpodnetCallbacks = new GpodnetCallbacksImpl();
         ClientConfig.playbackServiceCallbacks = new PlaybackServiceCallbacksImpl();
-        ClientConfig.flattrCallbacks = new FlattrCallbacksImpl();
         ClientConfig.dbTasksCallbacks = new DBTasksCallbacksImpl();
         ClientConfig.castCallbacks = new CastCallbackImpl();
     }

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.SharedPreferences;
 import android.net.Uri;
 import android.support.annotation.Nullable;
+import android.support.annotation.VisibleForTesting;
 import android.util.Log;
 
 import com.afollestad.materialdialogs.MaterialDialog;
@@ -73,7 +74,8 @@ private static boolean rated() {
         return mPreferences.getBoolean(KEY_RATED, false);
     }
 
-    private static void saveRated() {
+    @VisibleForTesting
+    public static void saveRated() {
         mPreferences
                 .edit()
                 .putBoolean(KEY_RATED, true)

File: app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java
Patch:
@@ -18,7 +18,7 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.event.MessageEvent;
 import de.danoeh.antennapod.core.preferences.SleepTimerPreferences;
-import de.greenrobot.event.EventBus;
+import org.greenrobot.eventbus.EventBus;
 
 public abstract class SleepTimerDialog {
     

File: app/src/play/java/de/danoeh/antennapod/dialog/CustomMRControllerDialog.java
Patch:
@@ -455,6 +455,7 @@ private static int getThemeResource(Context context, int attr) {
         return context.getTheme().resolveAttribute(attr, value, true) ? value.resourceId : 0;
     }
 
+    @NonNull
     private Pair<Bitmap, Integer> fetchArt(@NonNull MediaDescriptionCompat description) {
         Bitmap iconBitmap = description.getIconBitmap();
         Uri iconUri = description.getIconUri();

File: app/src/play/java/de/danoeh/antennapod/preferences/PreferenceControllerFlavorHelper.java
Patch:
@@ -4,13 +4,14 @@
 import com.google.android.gms.common.GoogleApiAvailability;
 
 import de.danoeh.antennapod.core.preferences.UserPreferences;
+import de.danoeh.antennapod.fragment.preferences.PlaybackPreferencesFragment;
 
 /**
  * Implements functions from PreferenceController that are flavor dependent.
  */
 public class PreferenceControllerFlavorHelper {
 
-    static void setupFlavoredUI(PreferenceController.PreferenceUI ui) {
+    public static void setupFlavoredUI(PlaybackPreferencesFragment ui) {
         //checks whether Google Play Services is installed on the device (condition necessary for Cast support)
         ui.findPreference(UserPreferences.PREF_CAST_ENABLED).setOnPreferenceChangeListener((preference, o) -> {
             if (o instanceof Boolean && ((Boolean) o)) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -483,6 +483,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 }
                 if (stream && !NetworkUtils.isStreamingAllowed() && !allowStreamThisTime) {
                     displayStreamingNotAllowedNotification(intent);
+                    writePlaybackPreferencesNoMediaPlaying();
                     stopService();
                     return Service.START_NOT_STICKY;
                 }
@@ -866,6 +867,7 @@ private Playable getNextInQueue(final Playable currentMedia) {
                     .startWhenPrepared(true)
                     .shouldStream(true)
                     .getIntent());
+            writePlaybackPreferencesNoMediaPlaying();
             stopService();
             return null;
         }

File: core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -39,7 +39,6 @@ public static synchronized void initialize(Context context) {
         }
         PodDBAdapter.init(context);
         UserPreferences.init(context);
-        UpdateManager.init(context);
         PlaybackPreferences.init(context);
         NetworkUtils.init(context);
         SleepTimerPreferences.init(context);

File: core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -39,7 +39,6 @@ public static synchronized void initialize(Context context) {
         }
         PodDBAdapter.init(context);
         UserPreferences.init(context);
-        UpdateManager.init(context);
         PlaybackPreferences.init(context);
         NetworkUtils.init(context);
         SleepTimerPreferences.init(context);

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -208,7 +208,6 @@ public void onChanged() {
 
         checkFirstLaunch();
         PreferenceUpgrader.checkUpgrades(this);
-        NotificationUtils.createChannels(this);
     }
 
     private void saveLastNavFragment(String tag) {

File: core/src/play/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -41,7 +41,6 @@ public static synchronized void initialize(Context context) {
         }
         PodDBAdapter.init(context);
         UserPreferences.init(context);
-        UpdateManager.init(context);
         PlaybackPreferences.init(context);
         NetworkUtils.init(context);
         CastManager.init(context);

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -169,6 +169,7 @@ private void loadLastFragment() {
         pager.setCurrentItem(lastPosition);
     }
 
+    @Override
     protected void onStart() {
         super.onStart();
         EventDistributor.getInstance().register(contentUpdate);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -603,8 +603,9 @@ private void load() {
     @Nullable
     private FeedItem loadInBackground() {
         FeedItem feedItem = DBReader.getFeedItem(feedItems[feedItemPos]);
-        if (feedItem != null) {
-            Timeline t = new Timeline(getContext(), feedItem);
+        Context context = getContext();
+        if (feedItem != null && context != null) {
+            Timeline t = new Timeline(context, feedItem);
             webviewData = t.processShownotes(false);
         }
         return feedItem;

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -243,7 +243,7 @@ private void playMediaObject(@NonNull final Playable playable, final boolean for
             callback.onMediaChanged(false);
             if (stream) {
                 mediaPlayer.setDataSource(media.getStreamUrl());
-            } else if (new File(media.getLocalMediaUrl()).canRead()) {
+            } else if (media.getLocalMediaUrl() != null && new File(media.getLocalMediaUrl()).canRead()) {
                 mediaPlayer.setDataSource(media.getLocalMediaUrl());
             } else {
                 throw new IOException("Unable to read local file " + media.getLocalMediaUrl());

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -208,7 +208,6 @@ public void onChanged() {
 
         checkFirstLaunch();
         PreferenceUpgrader.checkUpgrades(this);
-        NotificationUtils.createChannels(this);
     }
 
     private void saveLastNavFragment(String tag) {

File: core/src/play/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -41,7 +41,6 @@ public static synchronized void initialize(Context context) {
         }
         PodDBAdapter.init(context);
         UserPreferences.init(context);
-        UpdateManager.init(context);
         PlaybackPreferences.init(context);
         NetworkUtils.init(context);
         CastManager.init(context);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -243,7 +243,7 @@ private void playMediaObject(@NonNull final Playable playable, final boolean for
             callback.onMediaChanged(false);
             if (stream) {
                 mediaPlayer.setDataSource(media.getStreamUrl());
-            } else if (new File(media.getLocalMediaUrl()).canRead()) {
+            } else if (media.getLocalMediaUrl() != null && new File(media.getLocalMediaUrl()).canRead()) {
                 mediaPlayer.setDataSource(media.getLocalMediaUrl());
             } else {
                 throw new IOException("Unable to read local file " + media.getLocalMediaUrl());

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -603,8 +603,9 @@ private void load() {
     @Nullable
     private FeedItem loadInBackground() {
         FeedItem feedItem = DBReader.getFeedItem(feedItems[feedItemPos]);
-        if (feedItem != null) {
-            Timeline t = new Timeline(getContext(), feedItem);
+        Context context = getContext();
+        if (feedItem != null && context != null) {
+            Timeline t = new Timeline(context, feedItem);
             webviewData = t.processShownotes(false);
         }
         return feedItem;

File: core/src/main/java/de/danoeh/antennapod/core/menuhandler/MenuItemUtils.java
Patch:
@@ -1,6 +1,5 @@
 package de.danoeh.antennapod.core.menuhandler;
 
-import android.support.v4.view.MenuItemCompat;
 import android.view.Menu;
 import android.view.MenuItem;
 
@@ -25,7 +24,7 @@ public static boolean updateRefreshMenuItem(Menu menu, int resId, UpdateRefreshM
         // expand actionview if feeds are being downloaded, collapse otherwise
         if (checker.isRefreshing()) {
             MenuItem refreshItem = menu.findItem(resId);
-            MenuItemCompat.setActionView(refreshItem, R.layout.refresh_action_view);
+            refreshItem.setActionView(R.layout.refresh_action_view);
             return true;
         } else {
             return false;

File: core/src/main/java/de/danoeh/antennapod/core/util/syndication/HtmlToPlainText.java
Patch:
@@ -33,8 +33,8 @@ public class HtmlToPlainText {
      */
     public String getPlainText(Element element) {
         FormattingVisitor formatter = new FormattingVisitor();
-        NodeTraversor traversor = new NodeTraversor(formatter);
-        traversor.traverse(element); // walk the DOM, and call .head() and .tail() for each node
+        // walk the DOM, and call .head() and .tail() for each node
+        NodeTraversor.traverse(formatter, element);
 
         return formatter.toString();
     }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -443,7 +443,7 @@ public static int getFastForwardSecs() {
     }
 
     public static int getRewindSecs() {
-        return prefs.getInt(PREF_REWIND_SECS, 30);
+        return prefs.getInt(PREF_REWIND_SECS, 10);
     }
 
     public static String[] getAutodownloadSelectedNetworks() {

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -443,7 +443,7 @@ public static int getFastForwardSecs() {
     }
 
     public static int getRewindSecs() {
-        return prefs.getInt(PREF_REWIND_SECS, 30);
+        return prefs.getInt(PREF_REWIND_SECS, 10);
     }
 
     public static String[] getAutodownloadSelectedNetworks() {

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -275,6 +275,9 @@ public void onConfirmButtonPressed(DialogInterface dialog) {
     @Override
     public boolean onContextItemSelected(MenuItem item) {
         Log.d(TAG, "onContextItemSelected() called with: " + "item = [" + item + "]");
+        if (!getUserVisibleHint()) {
+            return false;
+        }
         if(!isVisible()) {
             return false;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -275,6 +275,9 @@ public void onConfirmButtonPressed(DialogInterface dialog) {
     @Override
     public boolean onContextItemSelected(MenuItem item) {
         Log.d(TAG, "onContextItemSelected() called with: " + "item = [" + item + "]");
+        if (!getUserVisibleHint()) {
+            return false;
+        }
         if(!isVisible()) {
             return false;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -134,11 +134,11 @@ private void onFragmentLoaded() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        if(!isAdded()) {
+        if (!isAdded()) {
             return;
         }
         super.onCreateOptionsMenu(menu, inflater);
-        if(items != null) {
+        if (items != null) {
             inflater.inflate(R.menu.downloads_completed, menu);
             menu.findItem(R.id.episode_actions).setVisible(items.size() > 0);
         }
@@ -202,7 +202,7 @@ private void loadItems() {
                     if (viewCreated && getActivity() != null) {
                         onFragmentLoaded();
                     }
-                }, error ->  Log.e(TAG, Log.getStackTraceString(error)));
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedSearcher.java
Patch:
@@ -14,7 +14,7 @@
 import de.danoeh.antennapod.core.R;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.SearchResult;
-import de.danoeh.antennapod.core.util.comparator.SearchResultValueComparator;
+import de.danoeh.antennapod.core.util.comparator.InReverseChronologicalOrder;
 
 /**
  * Performs search on Feeds and FeedItems
@@ -76,7 +76,7 @@ public static List<SearchResult> performSearch(final Context context,
         } catch (InterruptedException | ExecutionException e) {
             e.printStackTrace();
         }
-        Collections.sort(result, new SearchResultValueComparator());
+        Collections.sort(result, new InReverseChronologicalOrder());
         return result;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -129,6 +129,7 @@ protected void setupGUI() {
                     }
                     UserPreferences.setPlaybackSpeed(newSpeed);
                     controller.setPlaybackSpeed(Float.parseFloat(newSpeed));
+                    onPositionObserverUpdate();
                 } else {
                     VariableSpeedDialog.showGetPluginDialog(this);
                 }

File: core/src/main/java/de/danoeh/antennapod/core/service/PlayerWidgetJobService.java
Patch:
@@ -21,6 +21,7 @@
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.service.playback.PlayerStatus;
 import de.danoeh.antennapod.core.util.Converter;
+import de.danoeh.antennapod.core.util.TimeSpeedConverter;
 import de.danoeh.antennapod.core.util.playback.Playable;
 
 /**
@@ -152,6 +153,8 @@ private PendingIntent createMediaButtonIntent() {
 
     private String getProgressString(int position, int duration) {
         if (position > 0 && duration > 0) {
+            position = TimeSpeedConverter.convert(position);
+            duration = TimeSpeedConverter.convert(duration);
             return Converter.getDurationStringLong(position) + " / "
                     + Converter.getDurationStringLong(duration);
         } else {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -38,6 +38,7 @@
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.Optional;
+import de.danoeh.antennapod.core.util.TimeSpeedConverter;
 import de.danoeh.antennapod.core.util.playback.Playable.PlayableUtils;
 import io.reactivex.Maybe;
 import io.reactivex.MaybeOnSubscribe;
@@ -566,8 +567,8 @@ public float onSeekBarProgressChanged(SeekBar seekBar, int progress,
         if (fromUser && playbackService != null && media != null) {
             float prog = progress / ((float) seekBar.getMax());
             int duration = media.getDuration();
-            txtvPosition.setText(Converter
-                    .getDurationStringLong((int) (prog * duration)));
+            int position = TimeSpeedConverter.convert((int) (prog * duration));
+            txtvPosition.setText(Converter.getDurationStringLong(position));
             return prog;
         }
         return 0;

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -31,7 +31,6 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter;
-import de.danoeh.antennapod.adapter.DefaultActionButtonCallback;
 import de.danoeh.antennapod.core.dialog.ConfirmationDialog;
 import de.danoeh.antennapod.core.event.DownloadEvent;
 import de.danoeh.antennapod.core.event.DownloaderUpdate;
@@ -350,8 +349,7 @@ private void onFragmentLoaded() {
         if (episodes != null && episodes.size() > 0) {
             if (listAdapter == null) {
                 MainActivity mainActivity = (MainActivity) getActivity();
-                listAdapter = new AllEpisodesRecycleAdapter(mainActivity, itemAccess,
-                        new DefaultActionButtonCallback(mainActivity), showOnlyNewEpisodes());
+                listAdapter = new AllEpisodesRecycleAdapter(mainActivity, itemAccess, showOnlyNewEpisodes());
                 listAdapter.setHasStableIds(true);
                 recyclerView.setAdapter(listAdapter);
                 emptyView.updateAdapter(listAdapter);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -37,7 +37,6 @@
 import de.danoeh.antennapod.activity.FeedInfoActivity;
 import de.danoeh.antennapod.activity.FeedSettingsActivity;
 import de.danoeh.antennapod.activity.MainActivity;
-import de.danoeh.antennapod.adapter.DefaultActionButtonCallback;
 import de.danoeh.antennapod.adapter.FeedItemlistAdapter;
 import de.danoeh.antennapod.core.asynctask.FeedRemover;
 import de.danoeh.antennapod.core.dialog.ConfirmationDialog;
@@ -428,7 +427,7 @@ private void onFragmentLoaded() {
             setListAdapter(null);
             setupHeaderView();
             setupFooterView();
-            adapter = new FeedItemlistAdapter(getActivity(), itemAccess, new DefaultActionButtonCallback(getActivity()), false, true);
+            adapter = new FeedItemlistAdapter(getActivity(), itemAccess, false, true);
             setListAdapter(adapter);
         }
         refreshHeaderView();

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -17,7 +17,6 @@
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
-import de.danoeh.antennapod.adapter.DefaultActionButtonCallback;
 import de.danoeh.antennapod.adapter.FeedItemlistAdapter;
 import de.danoeh.antennapod.core.event.DownloadEvent;
 import de.danoeh.antennapod.core.event.DownloaderUpdate;
@@ -216,8 +215,7 @@ private void onFragmentLoaded() {
             // played items shoudln't be transparent for this fragment since, *all* items
             // in this fragment will, by definition, be played. So it serves no purpose and can make
             // it harder to read.
-            adapter = new FeedItemlistAdapter(getActivity(), itemAccess,
-                    new DefaultActionButtonCallback(getActivity()), true, false);
+            adapter = new FeedItemlistAdapter(getActivity(), itemAccess, true, false);
             setListAdapter(adapter);
         }
         setListShown(true);

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -28,7 +28,6 @@
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
-import de.danoeh.antennapod.adapter.DefaultActionButtonCallback;
 import de.danoeh.antennapod.adapter.QueueRecyclerAdapter;
 import de.danoeh.antennapod.core.dialog.ConfirmationDialog;
 import de.danoeh.antennapod.core.event.DownloadEvent;
@@ -525,8 +524,7 @@ private void onFragmentLoaded(final boolean restoreScrollPosition) {
         if (queue != null && queue.size() > 0) {
             if (recyclerAdapter == null) {
                 MainActivity activity = (MainActivity) getActivity();
-                recyclerAdapter = new QueueRecyclerAdapter(activity, itemAccess,
-                        new DefaultActionButtonCallback(activity), itemTouchHelper);
+                recyclerAdapter = new QueueRecyclerAdapter(activity, itemAccess, itemTouchHelper);
                 recyclerAdapter.setHasStableIds(true);
                 recyclerView.setAdapter(recyclerAdapter);
                 emptyView.updateAdapter(recyclerAdapter);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -165,7 +165,7 @@ public synchronized void cancelPositionSaver() {
      * Starts the widget updater task. If the widget updater is already active, nothing will happen.
      */
     public synchronized void startWidgetUpdater() {
-        if (!isWidgetUpdaterActive()) {
+        if (!isWidgetUpdaterActive() && !schedExecutor.isShutdown()) {
             Runnable widgetUpdater = callback::onWidgetUpdaterTick;
             widgetUpdater = useMainThreadIfNecessary(widgetUpdater);
             widgetUpdaterFuture = schedExecutor.scheduleWithFixedDelay(widgetUpdater, WIDGET_UPDATER_NOTIFICATION_INTERVAL,

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -165,7 +165,7 @@ public synchronized void cancelPositionSaver() {
      * Starts the widget updater task. If the widget updater is already active, nothing will happen.
      */
     public synchronized void startWidgetUpdater() {
-        if (!isWidgetUpdaterActive()) {
+        if (!isWidgetUpdaterActive() && !schedExecutor.isShutdown()) {
             Runnable widgetUpdater = callback::onWidgetUpdaterTick;
             widgetUpdater = useMainThreadIfNecessary(widgetUpdater);
             widgetUpdaterFuture = schedExecutor.scheduleWithFixedDelay(widgetUpdater, WIDGET_UPDATER_NOTIFICATION_INTERVAL,

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceFlavorHelper.java
Patch:
@@ -153,6 +153,7 @@ public void onDisconnected() {
                 // hardware volume buttons control the local device volume
                 mediaRouter.setMediaSessionCompat(null);
                 unregisterWifiBroadcastReceiver();
+                callback.setupNotification(false, info);
             }
         };
     }
@@ -182,6 +183,7 @@ private void onCastAppConnected(Context context, boolean wasLaunched) {
         // hardware volume buttons control the remote device volume
         mediaRouter.setMediaSessionCompat(callback.getMediaSession());
         registerWifiBroadcastReceiver();
+        callback.setupNotification(true, info);
     }
 
     private void switchMediaPlayer(@NonNull PlaybackServiceMediaPlayer newPlayer,

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.SharedPreferences;
 import android.net.Uri;
 import android.support.annotation.Nullable;
+import android.support.annotation.VisibleForTesting;
 import android.util.Log;
 
 import com.afollestad.materialdialogs.MaterialDialog;
@@ -73,7 +74,8 @@ private static boolean rated() {
         return mPreferences.getBoolean(KEY_RATED, false);
     }
 
-    private static void saveRated() {
+    @VisibleForTesting
+    public static void saveRated() {
         mPreferences
                 .edit()
                 .putBoolean(KEY_RATED, true)

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -592,7 +592,7 @@ private void load() {
     private FeedItem loadInBackground() {
         FeedItem feedItem = DBReader.getFeedItem(feedItems[feedItemPos]);
         if (feedItem != null) {
-            Timeline t = new Timeline(getActivity(), feedItem);
+            Timeline t = new Timeline(getContext(), feedItem);
             webviewData = t.processShownotes(false);
         }
         return feedItem;

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.SharedPreferences;
 import android.net.Uri;
 import android.support.annotation.Nullable;
+import android.support.annotation.VisibleForTesting;
 import android.util.Log;
 
 import com.afollestad.materialdialogs.MaterialDialog;
@@ -73,7 +74,8 @@ private static boolean rated() {
         return mPreferences.getBoolean(KEY_RATED, false);
     }
 
-    private static void saveRated() {
+    @VisibleForTesting
+    public static void saveRated() {
         mPreferences
                 .edit()
                 .putBoolean(KEY_RATED, true)

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -279,11 +279,11 @@ public boolean onContextItemSelected(MenuItem item) {
             return true; // avoids that the position is reset when we need it in the submenu
         }
 
-        FeedItem selectedItem = listAdapter.getSelectedItem();
-        if (selectedItem == null) {
-            Log.i(TAG, "Selected item was null, ignoring selection");
+        if (listAdapter == null || listAdapter.getSelectedItem() == null) {
+            Log.i(TAG, "Selected item or listAdapter was null, ignoring selection");
             return super.onContextItemSelected(item);
         }
+        FeedItem selectedItem = listAdapter.getSelectedItem();
 
         // Mark as seen contains UI logic specific to All/New/FavoriteSegments,
         // e.g., Undo with Snackbar,

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -279,11 +279,11 @@ public boolean onContextItemSelected(MenuItem item) {
             return true; // avoids that the position is reset when we need it in the submenu
         }
 
-        FeedItem selectedItem = listAdapter.getSelectedItem();
-        if (selectedItem == null) {
-            Log.i(TAG, "Selected item was null, ignoring selection");
+        if (listAdapter == null || listAdapter.getSelectedItem() == null) {
+            Log.i(TAG, "Selected item or listAdapter was null, ignoring selection");
             return super.onContextItemSelected(item);
         }
+        FeedItem selectedItem = listAdapter.getSelectedItem();
 
         // Mark as seen contains UI logic specific to All/New/FavoriteSegments,
         // e.g., Undo with Snackbar,

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -272,7 +272,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     boolean newLockState = !UserPreferences.isQueueLocked();
                     UserPreferences.setQueueLocked(newLockState);
                     getActivity().supportInvalidateOptionsMenu();
-                    recyclerAdapter.setLocked(newLockState);
+                    if (recyclerAdapter != null) {
+                        recyclerAdapter.setLocked(newLockState);
+                    }
                     if (newLockState) {
                         Snackbar.make(getActivity().findViewById(R.id.content), R.string
                                 .queue_locked, Snackbar.LENGTH_SHORT).show();

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverLoader.java
Patch:
@@ -66,7 +66,7 @@ public void load() {
             options = options.error(errorResource);
         }
 
-        RequestBuilder builder = Glide.with(activity)
+        RequestBuilder<Drawable> builder = Glide.with(activity)
                 .load(uri)
                 .apply(options);
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -334,7 +334,7 @@ View onCreateViewHelper(LayoutInflater inflater,
             onFragmentLoaded();
         }
 
-        emptyView = (View) root.findViewById(R.id.emptyView);
+        emptyView = root.findViewById(R.id.emptyView);
         emptyView.setVisibility(View.GONE);
         ((TextView)emptyView.findViewById(R.id.emptyViewTitle)).setText(R.string.no_all_episodes_head_label);
         ((TextView)emptyView.findViewById(R.id.emptyViewMessage)).setText(R.string.no_all_episodes_label);

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -495,7 +495,7 @@ private void reallyMoved(int from, int to) {
         );
         itemTouchHelper.attachToRecyclerView(recyclerView);
         //empty view
-        emptyView = (View) root.findViewById(R.id.emptyView);
+        emptyView = root.findViewById(R.id.emptyView);
         emptyView.setVisibility(View.GONE);
         ((TextView)emptyView.findViewById(R.id.emptyViewTitle)).setText(R.string.no_items_header_label);
         ((TextView)emptyView.findViewById(R.id.emptyViewMessage)).setText(R.string.no_items_label);

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -842,7 +842,7 @@ private void buildEpisodeCleanupPreference() {
             } else if (v > 0 && v < 24) {
                 entries[x] = res.getQuantityString(R.plurals.episode_cleanup_hours_after_listening, v, v);
             } else {
-                int numDays = (int)(v / 24); // assume underlying value will be NOT fraction of days, e.g., 36 (hours)
+                int numDays = v / 24; // assume underlying value will be NOT fraction of days, e.g., 36 (hours)
                 entries[x] = res.getQuantityString(R.plurals.episode_cleanup_days_after_listening, numDays, numDays);
             }
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -215,7 +215,8 @@ private boolean loadMediaInfo() {
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(media -> updateUi((Playable) media),
-                        error -> Log.e(TAG, Log.getStackTraceString(error)));
+                        error -> Log.e(TAG, Log.getStackTraceString(error)),
+                        () -> fragmentLayout.setVisibility(View.GONE));
         return true;
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -170,6 +170,7 @@ public void onEventMainThread(FeedItemEvent event) {
                 queue.remove(pos);
                 queue.add(pos, item);
                 recyclerAdapter.notifyItemChanged(pos);
+                refreshInfoBar();
             }
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/PlayerWidgetJobService.java
Patch:
@@ -20,6 +20,8 @@
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.RequestOptions;
 
+import java.util.concurrent.TimeUnit;
+
 import de.danoeh.antennapod.core.R;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;
@@ -124,7 +126,7 @@ private void updateViews() {
                         .load(media.getImageLocation())
                         .apply(RequestOptions.diskCacheStrategyOf(ApGlideSettings.AP_DISK_CACHE_STRATEGY))
                         .submit(iconSize, iconSize)
-                        .get();
+                        .get(500, TimeUnit.MILLISECONDS);
                 views.setImageViewBitmap(R.id.imgvCover, icon);
             } catch (Throwable tr) {
                 Log.e(TAG, "Error loading the media icon for the widget", tr);

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -170,6 +170,7 @@ public void onEventMainThread(FeedItemEvent event) {
                 queue.remove(pos);
                 queue.add(pos, item);
                 recyclerAdapter.notifyItemChanged(pos);
+                refreshInfoBar();
             }
         }
     }

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceFlavorHelper.java
Patch:
@@ -174,9 +174,9 @@ private void onCastAppConnected(Context context, boolean wasLaunched) {
         }
         callback.sendNotificationBroadcast(PlaybackService.NOTIFICATION_TYPE_RELOAD,
                 PlaybackService.EXTRA_CODE_CAST);
-        switchMediaPlayer(new RemotePSMP(context, callback.getMediaPlayerCallback()),
-                info,
-                wasLaunched);
+        RemotePSMP remotePSMP = new RemotePSMP(context, callback.getMediaPlayerCallback());
+        switchMediaPlayer(remotePSMP, info, wasLaunched);
+        remotePSMP.init();
         // hardware volume buttons control the remote device volume
         mediaRouter.setMediaSessionCompat(callback.getMediaSession());
         registerWifiBroadcastReceiver();

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/RemotePSMP.java
Patch:
@@ -62,7 +62,9 @@ public RemotePSMP(@NonNull Context context, @NonNull PSMPCallback callback) {
         startWhenPrepared = new AtomicBoolean(false);
         isBuffering = new AtomicBoolean(false);
         remoteState = MediaStatus.PLAYER_STATE_UNKNOWN;
+    }
 
+    public void init () {
         try {
             if (castMgr.isConnected() && castMgr.isRemoteMediaLoaded()) {
                 onRemoteMediaPlayerStatusUpdated();

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -353,13 +353,13 @@ private void onFragmentLoaded() {
             }
             emptyView.setVisibility(View.GONE);
             recyclerView.setVisibility(View.VISIBLE);
+            listAdapter.notifyDataSetChanged();
         } else {
             listAdapter = null;
             recyclerView.setVisibility(View.GONE);
             emptyView.setVisibility(View.VISIBLE);
         }
 
-        listAdapter.notifyDataSetChanged();
         restoreScrollPosition();
         getActivity().supportInvalidateOptionsMenu();
         updateShowOnlyEpisodesListViewState();

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -353,13 +353,13 @@ private void onFragmentLoaded() {
             }
             emptyView.setVisibility(View.GONE);
             recyclerView.setVisibility(View.VISIBLE);
+            listAdapter.notifyDataSetChanged();
         } else {
             listAdapter = null;
             recyclerView.setVisibility(View.GONE);
             emptyView.setVisibility(View.VISIBLE);
         }
 
-        listAdapter.notifyDataSetChanged();
         restoreScrollPosition();
         getActivity().supportInvalidateOptionsMenu();
         updateShowOnlyEpisodesListViewState();

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -278,9 +278,6 @@ private void onBufferUpdate(float progress) {
     @Override
     protected void onStart() {
         super.onStart();
-        if (controller != null) {
-            controller.release();
-        }
         controller = newPlaybackController();
         controller.init();
         loadMediaInfo();

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -143,6 +143,7 @@ public void onResume() {
     @Override
     public void onStart() {
         super.onStart();
+        controller = setupPlaybackController();
         controller.init();
         EventBus.getDefault().register(this);
     }
@@ -152,6 +153,7 @@ public void onStop() {
         super.onStop();
         if (controller != null) {
             controller.release();
+            controller = null;
         }
         EventBus.getDefault().unregister(this);
     }
@@ -233,7 +235,7 @@ private void updateUi(Playable media) {
                     .into(imgvCover);
 
             fragmentLayout.setVisibility(View.VISIBLE);
-            if (controller.isPlayingVideoLocally()) {
+            if (controller != null && controller.isPlayingVideoLocally()) {
                 butPlay.setVisibility(View.GONE);
             } else {
                 butPlay.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -251,7 +251,7 @@ private void savePreference() {
         SharedPreferences prefs = getActivity().getSharedPreferences(PREF,
                 Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = prefs.edit();
-        if (controller.getMedia() != null && webvDescription != null) {
+        if (controller != null && controller.getMedia() != null && webvDescription != null) {
             Log.d(TAG, "Saving scroll position: " + webvDescription.getScrollY());
             editor.putInt(PREF_SCROLL_Y, webvDescription.getScrollY());
             editor.putString(PREF_PLAYABLE_ID, controller.getMedia().getIdentifier()
@@ -272,7 +272,7 @@ private boolean restoreFromPreference() {
                     PREF, Activity.MODE_PRIVATE);
             String id = prefs.getString(PREF_PLAYABLE_ID, "");
             int scrollY = prefs.getInt(PREF_SCROLL_Y, -1);
-            if (scrollY != -1 && controller.getMedia() != null
+            if (controller != null && scrollY != -1 && controller.getMedia() != null
                     && id.equals(controller.getMedia().getIdentifier().toString())
                     && webvDescription != null) {
                 Log.d(TAG, "Restored scroll Position: " + scrollY);

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -278,9 +278,6 @@ private void onBufferUpdate(float progress) {
     @Override
     protected void onStart() {
         super.onStart();
-        if (controller != null) {
-            controller.release();
-        }
         controller = newPlaybackController();
         controller.init();
         loadMediaInfo();

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -143,6 +143,7 @@ public void onResume() {
     @Override
     public void onStart() {
         super.onStart();
+        controller = setupPlaybackController();
         controller.init();
         EventBus.getDefault().register(this);
     }
@@ -152,6 +153,7 @@ public void onStop() {
         super.onStop();
         if (controller != null) {
             controller.release();
+            controller = null;
         }
         EventBus.getDefault().unregister(this);
     }
@@ -233,7 +235,7 @@ private void updateUi(Playable media) {
                     .into(imgvCover);
 
             fragmentLayout.setVisibility(View.VISIBLE);
-            if (controller.isPlayingVideoLocally()) {
+            if (controller != null && controller.isPlayingVideoLocally()) {
                 butPlay.setVisibility(View.GONE);
             } else {
                 butPlay.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -251,7 +251,7 @@ private void savePreference() {
         SharedPreferences prefs = getActivity().getSharedPreferences(PREF,
                 Activity.MODE_PRIVATE);
         SharedPreferences.Editor editor = prefs.edit();
-        if (controller.getMedia() != null && webvDescription != null) {
+        if (controller != null && controller.getMedia() != null && webvDescription != null) {
             Log.d(TAG, "Saving scroll position: " + webvDescription.getScrollY());
             editor.putInt(PREF_SCROLL_Y, webvDescription.getScrollY());
             editor.putString(PREF_PLAYABLE_ID, controller.getMedia().getIdentifier()
@@ -272,7 +272,7 @@ private boolean restoreFromPreference() {
                     PREF, Activity.MODE_PRIVATE);
             String id = prefs.getString(PREF_PLAYABLE_ID, "");
             int scrollY = prefs.getInt(PREF_SCROLL_Y, -1);
-            if (scrollY != -1 && controller.getMedia() != null
+            if (controller != null && scrollY != -1 && controller.getMedia() != null
                     && id.equals(controller.getMedia().getIdentifier().toString())
                     && webvDescription != null) {
                 Log.d(TAG, "Restored scroll Position: " + scrollY);

File: app/src/androidTest/java/de/test/antennapod/feed/FeedItemTest.java
Patch:
@@ -1,6 +1,7 @@
 package de.test.antennapod.feed;
 
 import android.test.AndroidTestCase;
+
 import de.danoeh.antennapod.core.feed.FeedItem;
 
 public class FeedItemTest extends AndroidTestCase {

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -5,7 +5,6 @@
 import android.test.InstrumentationTestCase;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;

File: app/src/androidTest/java/de/test/antennapod/storage/DBTestUtils.java
Patch:
@@ -21,6 +21,7 @@
  */
 class DBTestUtils {
 
+    private DBTestUtils(){}
     /**
      * Use this method when tests don't involve chapters.
      */

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackSonicTest.java
Patch:
@@ -59,7 +59,7 @@ public void setUp() throws Exception {
                 .clear()
                 .putBoolean(UserPreferences.PREF_UNPAUSE_ON_HEADSET_RECONNECT, false)
                 .putBoolean(UserPreferences.PREF_PAUSE_ON_HEADSET_DISCONNECT, false)
-                .putBoolean(UserPreferences.PREF_SONIC, true)
+                .putString(UserPreferences.PREF_MEDIA_PLAYER, "sonic")
                 .commit();
 
         solo = new Solo(getInstrumentation(), getActivity());

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/GeneratorUtil.java
Patch:
@@ -8,6 +8,7 @@
  * Utility methods for FeedGenerator
  */
 class GeneratorUtil {
+    private GeneratorUtil(){}
 
     public static void addPaymentLink(XmlSerializer xml, String paymentLink, boolean withNamespace) throws IOException {
         String ns = (withNamespace) ? "http://www.w3.org/2005/Atom" : null;

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -20,7 +20,7 @@ public class PodcastApp extends Application {
         try {
             Class.forName("de.danoeh.antennapod.config.ClientConfigurator");
         } catch (Exception e) {
-            throw new RuntimeException("ClientConfigurator not found");
+            throw new RuntimeException("ClientConfigurator not found", e);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/FlattrAuthActivity.java
Patch:
@@ -41,9 +41,9 @@ protected void onCreate(Bundle savedInstanceState) {
 		if (BuildConfig.DEBUG) Log.d(TAG, "Activity created");
 		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 		setContentView(R.layout.flattr_auth);
-		txtvExplanation = (TextView) findViewById(R.id.txtvExplanation);
-		butAuthenticate = (Button) findViewById(R.id.but_authenticate);
-		butReturn = (Button) findViewById(R.id.but_return_home);
+		txtvExplanation = findViewById(R.id.txtvExplanation);
+		butAuthenticate = findViewById(R.id.but_authenticate);
+		butReturn = findViewById(R.id.but_return_home);
 
 		butReturn.setOnClickListener(v -> {
             Intent intent = new Intent(FlattrAuthActivity.this, MainActivity.class);

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -39,9 +39,9 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.opml_selection);
-        butConfirm = (Button) findViewById(R.id.butConfirm);
-        butCancel = (Button) findViewById(R.id.butCancel);
-        feedlist = (ListView) findViewById(R.id.feedlist);
+        butConfirm = findViewById(R.id.butConfirm);
+        butCancel = findViewById(R.id.butCancel);
+        feedlist = findViewById(R.id.feedlist);
 
         feedlist.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
         listAdapter = new ArrayAdapter<>(this,

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportHolder.java
Patch:
@@ -14,6 +14,8 @@
  */
 public class OpmlImportHolder {
 
+    private OpmlImportHolder(){}
+
     private static ArrayList<OpmlElement> readElements;
 
     public static ArrayList<OpmlElement> getReadElements() {

File: app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -12,11 +12,11 @@
 import android.view.ViewGroup;
 import android.widget.FrameLayout;
 
-import java.lang.ref.WeakReference;
-
-import com.bytehamster.lib.preferencesearch.SearchPreference;
 import com.bytehamster.lib.preferencesearch.SearchPreferenceResult;
 import com.bytehamster.lib.preferencesearch.SearchPreferenceResultListener;
+
+import java.lang.ref.WeakReference;
+
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.preferences.PreferenceController;

File: app/src/main/java/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -42,7 +42,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
 		setContentView(R.layout.storage_error);
 
-		Button btnChooseDataFolder = (Button) findViewById(R.id.btnChooseDataFolder);
+		Button btnChooseDataFolder = findViewById(R.id.btnChooseDataFolder);
 		btnChooseDataFolder.setOnClickListener(v -> {
             if (Build.VERSION_CODES.KITKAT <= Build.VERSION.SDK_INT &&
                     Build.VERSION.SDK_INT <= Build.VERSION_CODES.LOLLIPOP_MR1) {

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistDescriptionAdapter.java
Patch:
@@ -34,9 +34,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
             LayoutInflater inflater = (LayoutInflater) getContext()
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
             convertView = inflater.inflate(R.layout.itemdescription_listitem, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.pubDate = (TextView) convertView.findViewById(R.id.txtvPubDate);
-            holder.description = (TextView) convertView.findViewById(R.id.txtvDescription);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.pubDate = convertView.findViewById(R.id.txtvPubDate);
+            holder.description = convertView.findViewById(R.id.txtvDescription);
 
             convertView.setTag(holder);
         } else {

File: app/src/main/java/de/danoeh/antennapod/adapter/gpodnet/TagListAdapter.java
Patch:
@@ -34,8 +34,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
             convertView = inflater.inflate(R.layout.gpodnet_tag_listitem, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.usage = (TextView) convertView.findViewById(R.id.txtvUsage);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.usage = convertView.findViewById(R.id.txtvUsage);
             convertView.setTag(holder);
         } else {
             holder = (Holder) convertView.getTag();

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -8,6 +8,8 @@
  */
 class ClientConfigurator {
 
+    private ClientConfigurator(){}
+
     static {
         ClientConfig.USER_AGENT = "AntennaPod/" + BuildConfig.VERSION_NAME;
         ClientConfig.applicationCallbacks = new ApplicationCallbacksImpl();

File: app/src/main/java/de/danoeh/antennapod/config/PlaybackServiceCallbacksImpl.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-
 import android.os.Build;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.AudioplayerActivity;

File: app/src/main/java/de/danoeh/antennapod/dialog/AutoFlattrPreferenceDialog.java
Patch:
@@ -29,9 +29,9 @@ public static void newAutoFlattrPreferenceDialog(final Activity activity, final
         AlertDialog.Builder builder = new AlertDialog.Builder(activity);
 
         @SuppressLint("InflateParams") View view = activity.getLayoutInflater().inflate(R.layout.autoflattr_preference_dialog, null);
-        final CheckBox chkAutoFlattr = (CheckBox) view.findViewById(R.id.chkAutoFlattr);
-        final SeekBar skbPercent = (SeekBar) view.findViewById(R.id.skbPercent);
-        final TextView txtvStatus = (TextView) view.findViewById(R.id.txtvStatus);
+        final CheckBox chkAutoFlattr = view.findViewById(R.id.chkAutoFlattr);
+        final SeekBar skbPercent = view.findViewById(R.id.skbPercent);
+        final TextView txtvStatus = view.findViewById(R.id.txtvStatus);
 
         chkAutoFlattr.setChecked(UserPreferences.isAutoFlattr());
         skbPercent.setEnabled(chkAutoFlattr.isChecked());

File: app/src/main/java/de/danoeh/antennapod/dialog/GpodnetSetHostnameDialog.java
Patch:
@@ -17,6 +17,9 @@
  * Creates a dialog that lets the user change the hostname for the gpodder.net service.
  */
 public class GpodnetSetHostnameDialog {
+
+    private GpodnetSetHostnameDialog(){}
+
     private static final String TAG = "GpodnetSetHostnameDialog";
 
     public static AlertDialog createDialog(final Context context) {

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -17,6 +17,8 @@
 
 public class RatingDialog {
 
+    private RatingDialog(){}
+
     private static final String TAG = RatingDialog.class.getSimpleName();
     private static final int AFTER_DAYS = 7;
 

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -52,7 +52,7 @@ private static void showGetPluginDialog(final Context context, boolean showSpeed
         builder.neutralText(R.string.close_label);
         builder.onPositive((dialog, which) -> {
             if (Build.VERSION.SDK_INT >= 16) { // just to be safe
-                UserPreferences.enableSonic(true);
+                UserPreferences.enableSonic();
                 if(showSpeedSelector) {
                     showSpeedSelectorDialog(context);
                 }

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -38,12 +38,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.pager_fragment, container, false);
 
-        viewPager = (ViewPager)root.findViewById(R.id.viewpager);
+        viewPager = root.findViewById(R.id.viewpager);
         DownloadsPagerAdapter pagerAdapter = new DownloadsPagerAdapter(getChildFragmentManager(), getResources());
         viewPager.setAdapter(pagerAdapter);
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) root.findViewById(R.id.sliding_tabs);
+        tabLayout = root.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return root;

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -46,11 +46,11 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         ((MainActivity) getActivity()).getSupportActionBar().setTitle(R.string.episodes_label);
 
         View rootView = inflater.inflate(R.layout.pager_fragment, container, false);
-        viewPager = (ViewPager)rootView.findViewById(R.id.viewpager);
+        viewPager = rootView.findViewById(R.id.viewpager);
         viewPager.setAdapter(new EpisodesPagerAdapter(getChildFragmentManager(), getResources()));
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) rootView.findViewById(R.id.sliding_tabs);
+        tabLayout = rootView.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return rootView;

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/GpodnetMainFragment.java
Patch:
@@ -31,12 +31,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.pager_fragment, container, false);
 
-        viewPager = (ViewPager)root.findViewById(R.id.viewpager);
+        viewPager = root.findViewById(R.id.viewpager);
         GpodnetPagerAdapter pagerAdapter = new GpodnetPagerAdapter(getChildFragmentManager(), getResources());
         viewPager.setAdapter(pagerAdapter);
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) root.findViewById(R.id.sliding_tabs);
+        tabLayout = root.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return root;

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -30,6 +30,9 @@
  * Handles interactions with the FeedItemMenu.
  */
 public class FeedMenuHandler {
+
+    private FeedMenuHandler(){ }
+
     private static final String TAG = "FeedMenuHandler";
 
     public static boolean onCreateOptionsMenu(MenuInflater inflater, Menu menu) {

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -19,8 +19,9 @@ public class MenuItemUtils extends de.danoeh.antennapod.core.menuhandler.MenuIte
 
     public static void adjustTextColor(Context context, SearchView sv) {
         if(Build.VERSION.SDK_INT < 14) {
-            EditText searchEditText = (EditText) sv.findViewById(R.id.search_src_text);
-            if(UserPreferences.getTheme() == de.danoeh.antennapod.R.style.Theme_AntennaPod_Dark) {
+            EditText searchEditText = sv.findViewById(R.id.search_src_text);
+            if (UserPreferences.getTheme() == de.danoeh.antennapod.R.style.Theme_AntennaPod_Dark
+                    || UserPreferences.getTheme() == R.style.Theme_AntennaPod_TrueBlack) {
                 searchEditText.setTextColor(Color.WHITE);
             } else {
                 searchEditText.setTextColor(Color.BLACK);

File: app/src/main/java/de/danoeh/antennapod/preferences/MasterSwitchPreference.java
Patch:
@@ -9,6 +9,7 @@
 import android.util.AttributeSet;
 import android.util.TypedValue;
 import android.widget.TextView;
+
 import de.danoeh.antennapod.R;
 
 public class MasterSwitchPreference extends SwitchPreference {

File: app/src/main/java/de/danoeh/antennapod/spa/SPAUtil.java
Patch:
@@ -33,7 +33,7 @@ private SPAUtil() {
      * sent before.
      */
     public static synchronized boolean sendSPAppsQueryFeedsIntent(Context context) {
-        if (context == null) throw new IllegalArgumentException("context = null");
+        assert context != null : "context = null";
         final Context appContext = context.getApplicationContext();
         if (appContext == null) {
             Log.wtf(TAG, "Unable to get application context");

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FeedRemover.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.app.ProgressDialog;
 import android.content.Context;
-import android.content.Intent;
 import android.os.AsyncTask;
 
 import java.util.concurrent.ExecutionException;
@@ -11,6 +10,7 @@
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.storage.DBWriter;
+import de.danoeh.antennapod.core.util.IntentUtils;
 
 /** Removes a feed in the background. */
 public class FeedRemover extends AsyncTask<Void, Void, Void> {
@@ -41,7 +41,7 @@ protected void onPostExecute(Void result) {
             dialog.dismiss();
         }
 		if(skipOnCompletion) {
-			context.sendBroadcast(new Intent(PlaybackService.ACTION_SKIP_CURRENT_EPISODE));
+			IntentUtils.sendLocalBroadcast(context, PlaybackService.ACTION_SKIP_CURRENT_EPISODE);
 		}
 	}
 

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -10,7 +10,6 @@
 import android.util.Log;
 import android.widget.Toast;
 
-import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 import org.shredzone.flattr4j.exception.FlattrException;
 
 import java.util.LinkedList;
@@ -27,6 +26,7 @@
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.flattr.FlattrThing;
 import de.danoeh.antennapod.core.util.flattr.FlattrUtils;
+import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 
 /**
  * Performs a click action in a background thread.

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrStatusFetcher.java
Patch:
@@ -19,11 +19,9 @@
 
 public class FlattrStatusFetcher extends Thread {
     private static final String TAG = "FlattrStatusFetcher";
-    private final Context context;
 
     public FlattrStatusFetcher(Context context) {
         super();
-        this.context = context;
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedComponent.java
Patch:
@@ -50,7 +50,7 @@ boolean compareWithOther(FeedComponent other) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof FeedComponent)) return false;
 
         FeedComponent that = (FeedComponent) o;
 
@@ -62,4 +62,4 @@ public boolean equals(Object o) {
     public int hashCode() {
         return (int) (id ^ (id >>> 32));
     }
-}
\ No newline at end of file
+}

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideSettings.java
Patch:
@@ -6,6 +6,7 @@
  * The settings that AntennaPod will use for various Glide options
  */
 public class ApGlideSettings {
+    private ApGlideSettings(){}
 
     public static final DiskCacheStrategy AP_DISK_CACHE_STRATEGY = DiskCacheStrategy.ALL;
 }

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -123,6 +123,7 @@ public static EpisodesApplyActionFragment newInstance(List<FeedItem> items, int
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        setRetainInstance(true);
         setHasOptionsMenu(true);
     }
 

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -123,6 +123,7 @@ public static EpisodesApplyActionFragment newInstance(List<FeedItem> items, int
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        setRetainInstance(true);
         setHasOptionsMenu(true);
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -11,6 +11,7 @@
 import android.graphics.Color;
 import android.net.Uri;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
 import android.util.Log;
 import android.view.ContextMenu;
@@ -313,6 +314,7 @@ private void load() {
                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
+    @NonNull
     private String loadData() {
         Timeline timeline = new Timeline(getActivity(), shownotesProvider);
         return timeline.processShownotes(highlightTimecodes);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -588,6 +588,7 @@ private void load() {
             }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
+    @Nullable
     private FeedItem loadInBackground() {
         FeedItem feedItem = DBReader.getFeedItem(feedItems[feedItemPos]);
         if (feedItem != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v4.app.ListFragment;
 import android.support.v4.view.MenuItemCompat;
 import android.util.Log;
@@ -293,6 +294,7 @@ private void loadItems() {
                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
+    @NonNull
     private List<FeedItem> loadData() {
         List<FeedItem> history = DBReader.getPlaybackHistory();
         DBReader.loadAdditionalFeedItemListData(history);

File: app/src/play/java/de/danoeh/antennapod/dialog/CustomMRControllerDialog.java
Patch:
@@ -455,6 +455,7 @@ private static int getThemeResource(Context context, int attr) {
         return context.getTheme().resolveAttribute(attr, value, true) ? value.resourceId : 0;
     }
 
+    @NonNull
     private Pair<Bitmap, Integer> fetchArt(@NonNull MediaDescriptionCompat description) {
         Bitmap iconBitmap = description.getIconBitmap();
         Uri iconUri = description.getIconUri();

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.core.service.download;
 
+import android.support.annotation.NonNull;
 import android.text.TextUtils;
 import android.util.Log;
 
@@ -38,7 +39,7 @@ public class HttpDownloader extends Downloader {
 
     private static final int BUFFER_SIZE = 8 * 1024;
 
-    public HttpDownloader(DownloadRequest request) {
+    public HttpDownloader(@NonNull DownloadRequest request) {
         super(request);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
+import android.support.annotation.NonNull;
 import android.util.Log;
 
 import org.shredzone.flattr4j.model.Flattr;
@@ -48,7 +49,6 @@
 import de.danoeh.antennapod.core.util.flattr.FlattrThing;
 import de.danoeh.antennapod.core.util.flattr.SimpleFlattrThing;
 import de.greenrobot.event.EventBus;
-import io.reactivex.annotations.NonNull;
 
 /**
  * Provides methods for writing data to AntennaPod's database.
@@ -633,11 +633,13 @@ public static Future<?> markItemPlayed(final int played, final boolean broadcast
      *                           FeedItem.NEW, FeedItem.UNPLAYED
      * @param resetMediaPosition true if this method should also reset the position of the FeedItem's FeedMedia object.
      */
+    @NonNull
     public static Future<?> markItemPlayed(FeedItem item, int played, boolean resetMediaPosition) {
         long mediaId = (item.hasMedia()) ? item.getMedia().getId() : 0;
         return markItemPlayed(item.getId(), played, mediaId, resetMediaPosition);
     }
 
+    @NonNull
     private static Future<?> markItemPlayed(final long itemId,
                                             final int played,
                                             final long mediaId,

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedSearcher.java
Patch:
@@ -1,6 +1,7 @@
 package de.danoeh.antennapod.core.storage;
 
 import android.content.Context;
+import android.support.annotation.NonNull;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -35,6 +36,7 @@ private FeedSearcher(){}
      * @param selectedFeed feed to search, 0 to search through all feeds
      * @return list of episodes containing the query
      */
+    @NonNull
     public static List<SearchResult> performSearch(final Context context,
                                                    final String query, final long selectedFeed) {
         final int values[] = {2, 1, 0, 0, 0, 0};
@@ -45,7 +47,7 @@ public static List<SearchResult> performSearch(final Context context,
                 context.getString(R.string.found_in_authors_label),
                 context.getString(R.string.found_in_feeds_label)};
 
-        List<SearchResult> result = new ArrayList<>();
+        final List<SearchResult> result = new ArrayList<>();
 
         List<FutureTask<List<FeedItem>>> tasks = new ArrayList<>();
         tasks.add(DBTasks.searchFeedItemTitle(context, selectedFeed, query));

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -83,6 +83,7 @@ public Timeline(Context context, ShownotesProvider shownotesProvider) {
      * @param addTimecodes True if this method should add timecode links
      * @return The processed HTML string.
      */
+    @NonNull
     public String processShownotes(final boolean addTimecodes) {
         final Playable playable = (shownotesProvider instanceof Playable) ? (Playable) shownotesProvider : null;
 
@@ -92,8 +93,8 @@ public String processShownotes(final boolean addTimecodes) {
         try {
             shownotes = shownotesProvider.loadShownotes().call();
         } catch (Exception e) {
-            e.printStackTrace();
-            return null;
+            Log.e(TAG, "processShownotes() - encounters exceptions unexpectedly in load, treat as if no shownotes.", e);
+            shownotes = "";
         }
 
         if (TextUtils.isEmpty(shownotes)) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -49,7 +49,6 @@
 import de.danoeh.antennapod.core.util.flattr.FlattrThing;
 import de.danoeh.antennapod.core.util.flattr.SimpleFlattrThing;
 import de.greenrobot.event.EventBus;
-import io.reactivex.annotations.NonNull;
 
 /**
  * Provides methods for writing data to AntennaPod's database.

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -316,6 +316,7 @@ private void parseFeed() {
         Log.d(TAG, "Parsing feed");
 
         parser = Observable.fromCallable(() -> {
+                    // TODO: [PENDING 2954] return Optional<FeedHandlerResult>
                     FeedHandler handler = new FeedHandler();
                     try {
                         return handler.parseFeed(feed);
@@ -337,7 +338,7 @@ private void parseFeed() {
                 })
                 .subscribeOn(Schedulers.computation())
                 .observeOn(AndroidSchedulers.mainThread())
-                .subscribe(result -> {
+                .subscribe(result -> { // TODO: [PENDING 2954] wrap underlying Nullable return with Optional<>
                     if(result != null) {
                         beforeShowFeedInformation(result.feed);
                         showFeedInformation(result.feed, result.alternateFeedUrls);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -588,6 +588,7 @@ private void load() {
             }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
+    @Nullable
     private FeedItem loadInBackground() {
         FeedItem feedItem = DBReader.getFeedItem(feedItems[feedItemPos]);
         if (feedItem != null) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -604,6 +604,7 @@ static Feed getFeed(final long feedId, PodDBAdapter adapter) {
         }
     }
 
+    @Nullable
     private static FeedItem getFeedItem(final long itemId, PodDBAdapter adapter) {
         Log.d(TAG, "Loading feeditem with id " + itemId);
 
@@ -637,6 +638,7 @@ private static FeedItem getFeedItem(final long itemId, PodDBAdapter adapter) {
      * @return The FeedItem or null if the FeedItem could not be found. All FeedComponent-attributes
      * as well as chapter marks of the FeedItem will also be loaded from the database.
      */
+    @Nullable
     public static FeedItem getFeedItem(final long itemId) {
         Log.d(TAG, "getFeedItem() called with: " + "itemId = [" + itemId + "]");
 
@@ -649,6 +651,7 @@ public static FeedItem getFeedItem(final long itemId) {
         }
     }
 
+    @Nullable
     private static FeedItem getFeedItem(final String podcastUrl, final String episodeUrl, PodDBAdapter adapter) {
         Log.d(TAG, "Loading feeditem with podcast url " + podcastUrl + " and episode url " + episodeUrl);
         Cursor cursor = null;

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -307,7 +307,7 @@ private void load() {
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(data -> {
-                    webvDescription.loadDataWithBaseURL(null, data, "text/html",
+                    webvDescription.loadDataWithBaseURL("https://127.0.0.1", data, "text/html",
                             "utf-8", "about:blank");
                     Log.d(TAG, "Webview loaded");
                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -358,7 +358,7 @@ public void setItemVisibility(int id, boolean visible) {
 
     private void onFragmentLoaded() {
         if (webviewData != null) {
-            webvDescription.loadDataWithBaseURL(null, webviewData, "text/html", "utf-8", "about:blank");
+            webvDescription.loadDataWithBaseURL("https://127.0.0.1", webviewData, "text/html", "utf-8", "about:blank");
         }
         updateAppearance();
     }

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceFlavorHelper.java
Patch:
@@ -151,7 +151,6 @@ public void onDisconnected() {
                 // hardware volume buttons control the local device volume
                 mediaRouter.setMediaSessionCompat(null);
                 unregisterWifiBroadcastReceiver();
-                callback.setupNotification(false, info);
             }
         };
     }
@@ -181,7 +180,6 @@ private void onCastAppConnected(Context context, boolean wasLaunched) {
         // hardware volume buttons control the remote device volume
         mediaRouter.setMediaSessionCompat(callback.getMediaSession());
         registerWifiBroadcastReceiver();
-        callback.setupNotification(true, info);
     }
 
     private void switchMediaPlayer(@NonNull PlaybackServiceMediaPlayer newPlayer,

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -307,7 +307,7 @@ private void load() {
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(data -> {
-                    webvDescription.loadDataWithBaseURL(null, data, "text/html",
+                    webvDescription.loadDataWithBaseURL("https://127.0.0.1", data, "text/html",
                             "utf-8", "about:blank");
                     Log.d(TAG, "Webview loaded");
                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -358,7 +358,7 @@ public void setItemVisibility(int id, boolean visible) {
 
     private void onFragmentLoaded() {
         if (webviewData != null) {
-            webvDescription.loadDataWithBaseURL(null, webviewData, "text/html", "utf-8", "about:blank");
+            webvDescription.loadDataWithBaseURL("https://127.0.0.1", webviewData, "text/html", "utf-8", "about:blank");
         }
         updateAppearance();
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/FavoriteEpisodesFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.TextView;
 
 import java.util.List;
 
@@ -50,6 +51,8 @@ protected void resetViewState() {
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         View root = super.onCreateViewHelper(inflater, container, savedInstanceState,
                 R.layout.all_episodes_fragment);
+        ((TextView)root.findViewById(R.id.emptyViewTitle)).setText(R.string.no_fav_episodes_head_label);
+        ((TextView)root.findViewById(R.id.emptyViewMessage)).setText(R.string.no_fav_episodes_label);
 
         ItemTouchHelper.SimpleCallback simpleItemTouchCallback = new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {
             @Override

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -145,7 +145,6 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
         mAdapter = new ArrayAdapter<>(getActivity(),
                 R.layout.simple_list_item_multiple_choice_on_start, titles);
         mListView.setAdapter(mAdapter);
-        /// checkAll(); // TODO: no longer check all by default
 
         saveActionBarTitle(); // needed when we dynamically change the title based on selection
 

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -205,7 +205,7 @@ public void onStart() {
     }
 
     private void compatEnsureSpeedDialClickable() {
-        // On pre-Lolliop devices (that does not support elevation),
+        // On pre-Lollipop devices (that does not support elevation),
         // need to explicitly bring the fab to the front, otherwise it won't be clickable.
         if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
             ViewGroup root = (ViewGroup)getView();

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -594,7 +594,7 @@ public void setHasEmbeddedPicture(Boolean hasEmbeddedPicture) {
     @Override
     public void setDownloaded(boolean downloaded) {
         super.setDownloaded(downloaded);
-        if(item != null && downloaded && !item.isPlayed()) {
+        if(item != null && downloaded && item.isNew()) {
             item.setPlayed(false);
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -412,8 +412,8 @@ private void handleStatus() {
             pauseResource = res.getResourceId(1, R.drawable.ic_pause_grey600_36dp);
             res.recycle();
         } else {
-            playResource = R.drawable.ic_av_play_circle_outline_80dp;
-            pauseResource = R.drawable.ic_av_pause_circle_outline_80dp;
+            playResource = R.drawable.ic_av_play_white_80dp;
+            pauseResource = R.drawable.ic_av_pause_white_80dp;
         }
 
         Log.d(TAG, "status: " + status.toString());
@@ -802,7 +802,7 @@ private void initServiceNotRunning() {
                             res.getResourceId(0, de.danoeh.antennapod.core.R.drawable.ic_play_arrow_grey600_36dp));
                     res.recycle();
                 } else {
-                    getPlayButton().setImageResource(R.drawable.ic_av_play_circle_outline_80dp);
+                    getPlayButton().setImageResource(R.drawable.ic_av_play_white_80dp);
                 }
             }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -347,7 +347,7 @@ private void onFragmentLoaded() {
             listAdapter.setHasStableIds(true);
             recyclerView.setAdapter(listAdapter);
         }
-        if(episodes == null || episodes.size() == 0) {
+        if (episodes == null || episodes.size() == 0) {
             recyclerView.setVisibility(View.GONE);
             layoutEmpty.setVisibility(View.VISIBLE);
         } else {

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -514,7 +514,7 @@ private void onFragmentLoaded(final boolean restoreScrollPosition) {
         }
         if(queue == null || queue.size() == 0) {
             recyclerView.setVisibility(View.GONE);
-              layoutEmpty.setVisibility(View.VISIBLE);
+            layoutEmpty.setVisibility(View.VISIBLE);
         } else {
             layoutEmpty.setVisibility(View.GONE);
             recyclerView.setVisibility(View.VISIBLE);

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -594,7 +594,7 @@ public void setHasEmbeddedPicture(Boolean hasEmbeddedPicture) {
     @Override
     public void setDownloaded(boolean downloaded) {
         super.setDownloaded(downloaded);
-        if(item != null && downloaded) {
+        if(item != null && downloaded && !item.isPlayed()) {
             item.setPlayed(false);
         }
     }

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -1,6 +1,7 @@
 package de.test.antennapod.handler;
 
 import android.content.Context;
+import android.support.test.InstrumentationRegistry;
 import android.test.InstrumentationTestCase;
 
 import org.xml.sax.SAXException;
@@ -36,7 +37,7 @@ public class FeedHandlerTest extends InstrumentationTestCase {
 
     protected void setUp() throws Exception {
         super.setUp();
-        Context context = getInstrumentation().getContext();
+        Context context = InstrumentationRegistry.getTargetContext();
         File destDir = context.getExternalFilesDir(FEEDS_DIR);
         assertNotNull(destDir);
 

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -1,6 +1,7 @@
 package de.test.antennapod.handler;
 
 import android.content.Context;
+import android.support.test.InstrumentationRegistry;
 import android.test.InstrumentationTestCase;
 
 import org.xml.sax.SAXException;
@@ -36,7 +37,7 @@ public class FeedHandlerTest extends InstrumentationTestCase {
 
     protected void setUp() throws Exception {
         super.setUp();
-        Context context = getInstrumentation().getContext();
+        Context context = InstrumentationRegistry.getTargetContext();
         File destDir = context.getExternalFilesDir(FEEDS_DIR);
         assertNotNull(destDir);
 

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/GpodnetService.java
Patch:
@@ -14,6 +14,7 @@
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URL;
+import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.LinkedList;
@@ -587,7 +588,7 @@ private String executeRequestWithAuthentication(Request.Builder requestB,
         String result = null;
         ResponseBody body = null;
         try {
-            String credential = Credentials.basic(username, password);
+            String credential = Credentials.basic(username, password, Charset.forName("UTF-8"));
             Request authRequest = request.newBuilder().header("Authorization", credential).build();
             Response response = httpClient.newCall(authRequest).execute();
             checkStatusCode(response);

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/GpodnetService.java
Patch:
@@ -14,6 +14,7 @@
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URL;
+import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.LinkedList;
@@ -587,7 +588,7 @@ private String executeRequestWithAuthentication(Request.Builder requestB,
         String result = null;
         ResponseBody body = null;
         try {
-            String credential = Credentials.basic(username, password);
+            String credential = Credentials.basic(username, password, Charset.forName("UTF-8"));
             Request authRequest = request.newBuilder().header("Authorization", credential).build();
             Response response = httpClient.newCall(authRequest).execute();
             checkStatusCode(response);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -311,8 +311,7 @@ private void search(String query) {
                         encodedQuery = query; // failsafe
                     }
 
-                    //Spaces in the query need to be replaced with '+' character.
-                    String formattedUrl = String.format(API_URL, query).replace(' ', '+');
+                    String formattedUrl = String.format(API_URL, encodedQuery);
 
                     OkHttpClient client = AntennapodHttpClient.getHttpClient();
                     Request.Builder httpReq = new Request.Builder()

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -311,8 +311,7 @@ private void search(String query) {
                         encodedQuery = query; // failsafe
                     }
 
-                    //Spaces in the query need to be replaced with '+' character.
-                    String formattedUrl = String.format(API_URL, query).replace(' ', '+');
+                    String formattedUrl = String.format(API_URL, encodedQuery);
 
                     OkHttpClient client = AntennapodHttpClient.getHttpClient();
                     Request.Builder httpReq = new Request.Builder()

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -472,8 +472,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 return Service.START_NOT_STICKY;
             }
         } else if (!flavorHelper.castDisconnect(castDisconnect) && playable != null) {
-            boolean stream = intent.getBooleanExtra(EXTRA_SHOULD_STREAM,
-                    true);
+            boolean stream = intent.getBooleanExtra(EXTRA_SHOULD_STREAM, true);
             boolean startWhenPrepared = intent.getBooleanExtra(EXTRA_START_WHEN_PREPARED, false);
             boolean prepareImmediately = intent.getBooleanExtra(EXTRA_PREPARE_IMMEDIATELY, false);
             sendNotificationBroadcast(NOTIFICATION_TYPE_RELOAD, 0);

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -70,7 +70,7 @@ public Timeline(Context context, ShownotesProvider shownotesProvider) {
 
     private static final Pattern TIMECODE_LINK_REGEX = Pattern.compile("antennapod://timecode/((\\d+))");
     private static final String TIMECODE_LINK = "<a class=\"timecode\" href=\"antennapod://timecode/%d\">%s</a>";
-    private static final Pattern TIMECODE_REGEX = Pattern.compile("\\b(?:(?:(\\d*):)?([0-5]?\\d))?:([0-5]\\d)\\b");
+    private static final Pattern TIMECODE_REGEX = Pattern.compile("\\b((\\d+):)?(\\d+):(\\d{2})\\b");
     private static final Pattern LINE_BREAK_REGEX = Pattern.compile("<br */?>");
 
 

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -70,7 +70,7 @@ public Timeline(Context context, ShownotesProvider shownotesProvider) {
 
     private static final Pattern TIMECODE_LINK_REGEX = Pattern.compile("antennapod://timecode/((\\d+))");
     private static final String TIMECODE_LINK = "<a class=\"timecode\" href=\"antennapod://timecode/%d\">%s</a>";
-    private static final Pattern TIMECODE_REGEX = Pattern.compile("\\b(?:(?:(\\d*):)?([0-5]?\\d):)?([0-5][0-9]?\\d)\\b");
+    private static final Pattern TIMECODE_REGEX = Pattern.compile("\\b(?:(?:(\\d*):)?([0-5]?\\d))?:([0-5]\\d)\\b");
     private static final Pattern LINE_BREAK_REGEX = Pattern.compile("<br */?>");
 
 

File: core/src/main/java/de/danoeh/antennapod/core/receiver/MediaButtonReceiver.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
+import android.support.v4.content.ContextCompat;
 import android.util.Log;
 import android.view.KeyEvent;
 
@@ -29,7 +30,7 @@ public void onReceive(Context context, Intent intent) {
 			Intent serviceIntent = new Intent(context, PlaybackService.class);
 			serviceIntent.putExtra(EXTRA_KEYCODE, event.getKeyCode());
 			serviceIntent.putExtra(EXTRA_SOURCE, event.getSource());
-			context.startService(serviceIntent); // the service itself will determine if it needs to become a foreground service.
+			ContextCompat.startForegroundService(context, serviceIntent);
 		}
 
 	}

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -79,10 +79,8 @@
  *
  * Callers should connect to the service with either:
  * - .bindService()
- * - .startService(), optionally with arguments such as media to be played.
+ * - ContextCompat.startForegroundService(), optionally with arguments, such as media to be played, in intent extras
  *
- * Caller should not call startForegroundService(). The PlaybackService will make itself foreground
- * when appropriate.
  */
 public class PlaybackService extends MediaBrowserServiceCompat {
     /**

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackServiceStarter.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.content.Intent;
+import android.support.v4.content.ContextCompat;
 import android.util.Log;
 
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
@@ -77,6 +78,6 @@ public void start() {
         if (PlaybackService.isRunning && !callEvenIfRunning) {
             return;
         }
-        context.startService(getIntent()); // the service itself will decide if it needs to become foreground
+        ContextCompat.startForegroundService(context, getIntent());
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -605,6 +605,7 @@ public void setVideoSurface(SurfaceHolder sh) {
     }
 
     public void notifyVideoSurfaceAbandoned() {
+        Log.v(TAG, "notifyVideoSurfaceAbandoned()");
         mediaPlayer.pause(true, false);
         mediaPlayer.resetVideoSurface();
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -764,6 +764,7 @@ private boolean isConnectedToPlaybackService() {
     }
 
     public void notifyVideoSurfaceAbandoned() {
+        Log.v(TAG, "notifyVideoSurfaceAbandoned() - hasPlaybackService=" + (playbackService != null));
         if (playbackService != null) {
             playbackService.notifyVideoSurfaceAbandoned();
         }

File: core/src/main/java/de/danoeh/antennapod/core/receiver/MediaButtonReceiver.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.support.v4.content.ContextCompat;
 import android.util.Log;
 import android.view.KeyEvent;
 
@@ -30,7 +29,7 @@ public void onReceive(Context context, Intent intent) {
 			Intent serviceIntent = new Intent(context, PlaybackService.class);
 			serviceIntent.putExtra(EXTRA_KEYCODE, event.getKeyCode());
 			serviceIntent.putExtra(EXTRA_SOURCE, event.getSource());
-			ContextCompat.startForegroundService(context, serviceIntent);
+			context.startService(serviceIntent); // the service itself will determine if it needs to become a foreground service.
 		}
 
 	}

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -13,7 +13,6 @@
 import android.os.IBinder;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.Log;
 import android.util.Pair;
@@ -105,6 +104,7 @@ public void init() {
     }
 
     private synchronized void initServiceRunning() {
+        Log.v(TAG, "initServiceRunning()");
         if (initialized) {
             return;
         }
@@ -192,7 +192,7 @@ private void bindToService() {
                     if (!PlaybackService.started) {
                         if (intent != null) {
                             Log.d(TAG, "Calling start service");
-                            ContextCompat.startForegroundService(activity, intent);
+                            // ContextCompat.startForegroundService(activity, intent); // TODO: [2716] likely not needed but is not 100% sure
                             bound = activity.bindService(intent, mConnection, 0);
                         } else {
                             status = PlayerStatus.STOPPED;
@@ -784,6 +784,7 @@ public void reinitServiceIfPaused() {
     }
 
     private void initServiceNotRunning() {
+        Log.v(TAG, "DBG - initServiceNotRunning()"); // TODO: review it it's still needed
         mediaLoader = Maybe.create((MaybeOnSubscribe<Playable>) emitter -> {
             Playable media = getMedia();
             if (media != null) {

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceFlavorHelper.java
Patch:
@@ -151,7 +151,6 @@ public void onDisconnected() {
                 // hardware volume buttons control the local device volume
                 mediaRouter.setMediaSessionCompat(null);
                 unregisterWifiBroadcastReceiver();
-                callback.setupNotification(false, info);
             }
         };
     }
@@ -181,7 +180,6 @@ private void onCastAppConnected(Context context, boolean wasLaunched) {
         // hardware volume buttons control the remote device volume
         mediaRouter.setMediaSessionCompat(callback.getMediaSession());
         registerWifiBroadcastReceiver();
-        callback.setupNotification(true, info);
     }
 
     private void switchMediaPlayer(@NonNull PlaybackServiceMediaPlayer newPlayer,

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -68,7 +68,7 @@ public Timeline(Context context, ShownotesProvider shownotesProvider) {
 
     private static final Pattern TIMECODE_LINK_REGEX = Pattern.compile("antennapod://timecode/((\\d+))");
     private static final String TIMECODE_LINK = "<a class=\"timecode\" href=\"antennapod://timecode/%d\">%s</a>";
-    private static final Pattern TIMECODE_REGEX = Pattern.compile("\\b(?:(?:(([0-9][0-9])):))?(([0-9][0-9])):(([0-9][0-9]))\\b");
+    private static final Pattern TIMECODE_REGEX = Pattern.compile("\\b(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)\\b");
     private static final Pattern LINE_BREAK_REGEX = Pattern.compile("<br */?>");
 
 

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -157,7 +157,7 @@ protected void onCreate(Bundle savedInstanceState) {
             Log.e(TAG, "feedUrl is null.");
             new AlertDialog.Builder(OnlineFeedViewActivity.this).
                     setNeutralButton(android.R.string.ok,
-                    (dialog, which) -> dialog.dismiss()).
+                    (dialog, which) -> finish()).
                     setTitle(R.string.error_label).
                     setMessage(R.string.null_value_podcast_error).create().show();
         } else {

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -235,6 +235,8 @@ protected void onCreate(Bundle savedInstanceState) {
         StorageUtils.checkStorageAvailability(this);
 
         getWindow().setFormat(PixelFormat.TRANSPARENT);
+        setupGUI();
+        loadMediaInfo();
     }
 
     @Override
@@ -278,8 +280,6 @@ protected void onStart() {
             controller.release();
         }
         controller = newPlaybackController();
-        setupGUI();
-        loadMediaInfo();
         onPositionObserverUpdate();
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -278,6 +278,7 @@ protected void setupGUI() {
         butCastDisconnect = findViewById(R.id.butCastDisconnect);
 
         pager = findViewById(R.id.pager);
+        pager.setOffscreenPageLimit(3);
         pagerAdapter = new MediaplayerInfoPagerAdapter(getSupportFragmentManager(), media);
         pagerAdapter.setController(controller);
         pager.setAdapter(pagerAdapter);

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -48,6 +48,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
+        setRetainInstance(true);
         root = inflater.inflate(R.layout.cover_fragment, container, false);
         txtvPodcastTitle = root.findViewById(R.id.txtvPodcastTitle);
         txtvEpisodeTitle = root.findViewById(R.id.txtvEpisodeTitle);

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -278,6 +278,7 @@ protected void setupGUI() {
         butCastDisconnect = findViewById(R.id.butCastDisconnect);
 
         pager = findViewById(R.id.pager);
+        pager.setOffscreenPageLimit(3);
         pagerAdapter = new MediaplayerInfoPagerAdapter(getSupportFragmentManager(), media);
         pagerAdapter.setController(controller);
         pager.setAdapter(pagerAdapter);

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -48,6 +48,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
+        setRetainInstance(true);
         root = inflater.inflate(R.layout.cover_fragment, container, false);
         txtvPodcastTitle = root.findViewById(R.id.txtvPodcastTitle);
         txtvEpisodeTitle = root.findViewById(R.id.txtvEpisodeTitle);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -991,7 +991,7 @@ private boolean genericInfoListener(int what) {
 
     private final MediaPlayer.OnErrorListener audioErrorListener =
             (mp, what, extra) -> {
-                if(mp.canFallback()) {
+                if(mp != null && mp.canFallback()) {
                     mp.fallback();
                     return true;
                 } else {

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -659,7 +659,7 @@ private boolean export(ExportWriter exportWriter) {
                     alert.setMessage(message);
                     alert.setPositiveButton(R.string.send_label, (dialog, which) -> {
                         Uri fileUri = FileProvider.getUriForFile(context.getApplicationContext(),
-                                "de.danoeh.antennapod.provider", output);
+                                context.getString(R.string.provider_authority), output);
                         Intent sendIntent = new Intent(Intent.ACTION_SEND);
                         sendIntent.putExtra(Intent.EXTRA_SUBJECT,
                                 context.getResources().getText(R.string.opml_export_label));

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -659,7 +659,7 @@ private boolean export(ExportWriter exportWriter) {
                     alert.setMessage(message);
                     alert.setPositiveButton(R.string.send_label, (dialog, which) -> {
                         Uri fileUri = FileProvider.getUriForFile(context.getApplicationContext(),
-                                "de.danoeh.antennapod.provider", output);
+                                context.getString(R.string.provider_authority), output);
                         Intent sendIntent = new Intent(Intent.ACTION_SEND);
                         sendIntent.putExtra(Intent.EXTRA_SUBJECT,
                                 context.getResources().getText(R.string.opml_export_label));

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -991,7 +991,7 @@ private boolean genericInfoListener(int what) {
 
     private final MediaPlayer.OnErrorListener audioErrorListener =
             (mp, what, extra) -> {
-                if(mp.canFallback()) {
+                if(mp != null && mp.canFallback()) {
                     mp.fallback();
                     return true;
                 } else {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java
Patch:
@@ -25,7 +25,6 @@
 import com.google.android.exoplayer2.util.Util;
 
 import org.antennapod.audio.MediaPlayer;
-
 import de.danoeh.antennapod.core.util.playback.IPlayer;
 
 
@@ -192,9 +191,9 @@ public void setDisplay(SurfaceHolder sh) {
     }
 
     @Override
-    public void setPlaybackSpeed(float v) {
+    public void setPlaybackParams(float speed, boolean skipSilence) {
         PlaybackParameters params = mExoPlayer.getPlaybackParameters();
-        mExoPlayer.setPlaybackParameters(new PlaybackParameters(v, params.pitch));
+        mExoPlayer.setPlaybackParameters(new PlaybackParameters(speed, params.pitch, skipSilence));
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1629,7 +1629,7 @@ public boolean canSetSpeed() {
     }
 
     public void setSpeed(float speed) {
-        mediaPlayer.setSpeed(speed);
+        mediaPlayer.setPlaybackParams(speed, UserPreferences.isSkipSilence());
     }
 
     public void setVolume(float leftVolume, float rightVolume) {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/IPlayer.java
Patch:
@@ -37,7 +37,7 @@ void setDataSource(String path) throws IllegalStateException, IOException,
 
 	void setDisplay(SurfaceHolder sh);
 
-	void setPlaybackSpeed(float f);
+	void setPlaybackParams(float speed, boolean skipSilence);
 
 	void setDownmix(boolean enable);
 

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/VideoPlayer.java
Patch:
@@ -22,9 +22,8 @@ public float getCurrentSpeedMultiplier() {
 	}
 
 	@Override
-	public void setPlaybackSpeed(float f) {
-		Log.e(TAG, "Setting playback speed unsupported in video player");
-		throw new UnsupportedOperationException("Setting playback speed unsupported in video player");
+	public void setPlaybackParams(float speed, boolean skipSilence) {
+		//Ignore this for non ExoPlayer implementations
 	}
 
 	@Override

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/RemotePSMP.java
Patch:
@@ -515,8 +515,8 @@ public boolean canSetSpeed() {
     }
 
     @Override
-    public void setSpeed(float speed) {
-        throw new UnsupportedOperationException("Setting playback speed unsupported for Remote Playback");
+    public void setPlaybackParams(float speed, boolean skipSilence) {
+        //Can be safely ignored as neither set speed not skipSilence is supported
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/UpdateManager.java
Patch:
@@ -58,13 +58,13 @@ private static void setCurrentVersionCode() {
     }
 
     private static void onUpgrade(final int oldVersionCode, final int newVersionCode) {
-        if(oldVersionCode < 1050004) {
+        if (oldVersionCode < 1050004) {
             if(MediaPlayer.isPrestoLibraryInstalled(context) && Build.VERSION.SDK_INT >= 16) {
                 UserPreferences.enableSonic();
             }
         }
 
-        if(oldVersionCode < 1070196) {
+        if (oldVersionCode < 1070196) {
             // migrate episode cleanup value (unit changed from days to hours)
             int oldValueInDays = UserPreferences.getEpisodeCleanupValue();
             if (oldValueInDays > 0) {

File: core/src/test/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithmTest.java
Patch:
@@ -17,4 +17,4 @@ public void testCalcMostRecentDateForDeletion() throws Exception {
         Date resActual = algo.calcMostRecentDateForDeletion(curDateForTest);
         assertEquals("cutoff for retaining most recent 1 day", resExpected, resActual);
     }
-}
\ No newline at end of file
+}

File: app/src/androidTest/java/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -25,6 +25,8 @@
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 
+import org.awaitility.Awaitility;
+
 /**
  * Test class for DBWriter
  */
@@ -161,7 +163,7 @@ public void testDeleteFeedMediaOfItemRemoveFromQueue()
         assertTrue(queue.size() != 0);
 
         DBWriter.deleteFeedMediaOfItem(getInstrumentation().getTargetContext(), media.getId());
-        Thread.sleep(200);
+        Awaitility.await().until(() -> dest.exists() == false);
         media = DBReader.getFeedMedia(media.getId());
         assertNotNull(media);
         assertFalse(dest.exists());

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -138,10 +138,11 @@ private static Future<?> doDeleteFeedMediaOfItem(final Context context,
      */
     public static Future<?> deleteFeedMediaOfItem(final Context context,
                                                   final long mediaId) {
+        Future res = doDeleteFeedMediaOfItem(context, mediaId);
         if (UserPreferences.shouldDeleteRemoveFromQueue()) {
             DBWriter.removeQueueItem(context, DBReader.getFeedMedia(mediaId).getItem(), false);
         }
-        return doDeleteFeedMediaOfItem(context, mediaId);
+        return res;
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -50,12 +50,12 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.storage.DBReader;
-import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.util.FeedItemUtil;
 import de.danoeh.antennapod.core.util.Flavors;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.StorageUtils;
+import de.danoeh.antennapod.core.util.download.AutoUpdateManager;
 import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 import de.danoeh.antennapod.dialog.RatingDialog;
 import de.danoeh.antennapod.dialog.RenameFeedDialog;
@@ -474,7 +474,7 @@ protected void onPause() {
     protected void onResume() {
         super.onResume();
         StorageUtils.checkStorageAvailability(this);
-        DBTasks.checkShouldRefreshFeeds(getApplicationContext());
+        AutoUpdateManager.checkShouldRefreshFeeds(getApplicationContext());
 
         Intent intent = getIntent();
         if (intent.hasExtra(EXTRA_FEED_ID) ||

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -46,9 +46,9 @@
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.service.playback.PlayerStatus;
 import de.danoeh.antennapod.core.storage.DBReader;
-import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.util.IntentUtils;
+import de.danoeh.antennapod.core.util.download.AutoUpdateManager;
 import de.danoeh.antennapod.core.util.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 import de.danoeh.antennapod.dialog.RenameFeedDialog;
@@ -187,7 +187,7 @@ protected void onResume() {
             pagerAdapter.onMediaChanged(media);
             pagerAdapter.setController(controller);
         }
-        DBTasks.checkShouldRefreshFeeds(getApplicationContext());
+        AutoUpdateManager.checkShouldRefreshFeeds(getApplicationContext());
 
         EventDistributor.getInstance().register(contentUpdate);
         EventBus.getDefault().register(this);

File: core/src/main/java/de/danoeh/antennapod/core/glide/AudioCoverFetcher.java
Patch:
@@ -30,6 +30,7 @@ public void loadData(@NonNull Priority priority, @NonNull DataCallback<? super I
             byte[] picture = retriever.getEmbeddedPicture();
             if (picture != null) {
                 callback.onDataReady(new ByteArrayInputStream(picture));
+                return;
             }
         } finally {
             retriever.release();

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -229,7 +229,7 @@ private void setupInterfaceScreen() {
 
         ui.findPreference(UserPreferences.PREF_BACK_BUTTON_BEHAVIOR)
                 .setOnPreferenceChangeListener((preference, newValue) -> {
-                        if(newValue.equals("page")) {
+                        if (newValue.equals("page")) {
                             final Context context = ui.getActivity();
                             final String[] navTitles = context.getResources().getStringArray(R.array.back_button_go_to_pages);
                             final String[] navTags = new String[3];
@@ -239,7 +239,7 @@ private void setupInterfaceScreen() {
                             AlertDialog.Builder builder = new AlertDialog.Builder(context);
                             builder.setTitle(R.string.back_button_go_to_page_title);
                             builder.setSingleChoiceItems(navTitles, ArrayUtils.indexOf(navTags, UserPreferences.getBackButtonGoToPage()), (dialogInterface, i) -> {
-                                if(i >= 0) {
+                                if (i >= 0) {
                                     choice[0] = navTags[i];
                                 }
                             });

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -34,6 +34,7 @@
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DownloadError;
+import de.danoeh.antennapod.core.util.FeedUpdateUtils;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.comparator.FeedItemPubdateComparator;
@@ -338,7 +339,7 @@ public static void checkShouldRefreshFeeds(Context context) {
         Log.d(TAG, "last refresh: " + Converter.getDurationStringLocalized(context,
                 System.currentTimeMillis() - lastRefresh) + " ago");
         if(lastRefresh <= System.currentTimeMillis() - interval) {
-            DBTasks.refreshAllFeeds(context, null);
+            FeedUpdateUtils.startAutoUpdate(context, null);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -648,6 +648,8 @@ public void onConfirmButtonPressed(
     public void onBackPressed() {
         if(isDrawerOpen()) {
             drawerLayout.closeDrawer(navDrawer);
+        } else if(getSupportFragmentManager().getBackStackEntryCount() != 0) {
+            super.onBackPressed();
         } else {
             switch (UserPreferences.getBackButtonBehavior()) {
                 case OPEN_DRAWER:

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackSonicTest.java
Patch:
@@ -59,7 +59,7 @@ public void setUp() throws Exception {
                 .clear()
                 .putBoolean(UserPreferences.PREF_UNPAUSE_ON_HEADSET_RECONNECT, false)
                 .putBoolean(UserPreferences.PREF_PAUSE_ON_HEADSET_DISCONNECT, false)
-                .putBoolean(UserPreferences.PREF_SONIC, true)
+                .putString(UserPreferences.PREF_MEDIA_PLAYER, "sonic")
                 .commit();
 
         solo = new Solo(getInstrumentation(), getActivity());

File: app/src/androidTest/java/de/test/antennapod/feed/FeedItemTest.java
Patch:
@@ -1,6 +1,7 @@
 package de.test.antennapod.feed;
 
 import android.test.AndroidTestCase;
+
 import de.danoeh.antennapod.core.feed.FeedItem;
 
 public class FeedItemTest extends AndroidTestCase {

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -5,7 +5,6 @@
 import android.test.InstrumentationTestCase;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;

File: app/src/androidTest/java/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -18,7 +18,6 @@
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
-import de.danoeh.antennapod.core.feed.SimpleChapter;
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -43,8 +43,8 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         getSupportActionBar().setDisplayShowHomeEnabled(true);
         setContentView(R.layout.about);
-        webViewContainer = (LinearLayout) findViewById(R.id.webViewContainer);
-        webView = (WebView) findViewById(R.id.webViewAbout);
+        webViewContainer = findViewById(R.id.webViewContainer);
+        webView = findViewById(R.id.webViewAbout);
         webView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
         if (UserPreferences.getTheme() == R.style.Theme_AntennaPod_Dark) {
             if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) {

File: app/src/main/java/de/danoeh/antennapod/activity/FlattrAuthActivity.java
Patch:
@@ -41,9 +41,9 @@ protected void onCreate(Bundle savedInstanceState) {
 		if (BuildConfig.DEBUG) Log.d(TAG, "Activity created");
 		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 		setContentView(R.layout.flattr_auth);
-		txtvExplanation = (TextView) findViewById(R.id.txtvExplanation);
-		butAuthenticate = (Button) findViewById(R.id.but_authenticate);
-		butReturn = (Button) findViewById(R.id.but_return_home);
+		txtvExplanation = findViewById(R.id.txtvExplanation);
+		butAuthenticate = findViewById(R.id.but_authenticate);
+		butReturn = findViewById(R.id.but_return_home);
 
 		butReturn.setOnClickListener(v -> {
             Intent intent = new Intent(FlattrAuthActivity.this, MainActivity.class);

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -39,9 +39,9 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.opml_selection);
-        butConfirm = (Button) findViewById(R.id.butConfirm);
-        butCancel = (Button) findViewById(R.id.butCancel);
-        feedlist = (ListView) findViewById(R.id.feedlist);
+        butConfirm = findViewById(R.id.butConfirm);
+        butCancel = findViewById(R.id.butCancel);
+        feedlist = findViewById(R.id.feedlist);
 
         feedlist.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
         listAdapter = new ArrayAdapter<>(this,

File: app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -12,11 +12,11 @@
 import android.view.ViewGroup;
 import android.widget.FrameLayout;
 
-import java.lang.ref.WeakReference;
-
-import com.bytehamster.lib.preferencesearch.SearchPreference;
 import com.bytehamster.lib.preferencesearch.SearchPreferenceResult;
 import com.bytehamster.lib.preferencesearch.SearchPreferenceResultListener;
+
+import java.lang.ref.WeakReference;
+
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.preferences.PreferenceController;

File: app/src/main/java/de/danoeh/antennapod/activity/SplashActivity.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.widget.ProgressBar;
+
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import rx.Completable;

File: app/src/main/java/de/danoeh/antennapod/activity/StatisticsActivity.java
Patch:
@@ -53,9 +53,9 @@ protected void onCreate(Bundle savedInstanceState) {
         prefs = getSharedPreferences(PREF_NAME, MODE_PRIVATE);
         countAll = prefs.getBoolean(PREF_COUNT_ALL, false);
 
-        totalTimeTextView = (TextView) findViewById(R.id.total_time);
-        feedStatisticsList = (ListView) findViewById(R.id.statistics_list);
-        progressBar = (ProgressBar) findViewById(R.id.progressBar);
+        totalTimeTextView = findViewById(R.id.total_time);
+        feedStatisticsList = findViewById(R.id.statistics_list);
+        progressBar = findViewById(R.id.progressBar);
         listAdapter = new StatisticsListAdapter(this);
         listAdapter.setCountAll(countAll);
         feedStatisticsList.setAdapter(listAdapter);

File: app/src/main/java/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -42,7 +42,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
 		setContentView(R.layout.storage_error);
 
-		Button btnChooseDataFolder = (Button) findViewById(R.id.btnChooseDataFolder);
+		Button btnChooseDataFolder = findViewById(R.id.btnChooseDataFolder);
 		btnChooseDataFolder.setOnClickListener(v -> {
             if (Build.VERSION_CODES.KITKAT <= Build.VERSION.SDK_INT &&
                     Build.VERSION.SDK_INT <= Build.VERSION_CODES.LOLLIPOP_MR1) {

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -1,13 +1,12 @@
 package de.danoeh.antennapod.adapter;
 
 import android.content.Context;
+import android.support.annotation.NonNull;
 import android.content.Intent;
 import android.widget.Toast;
 
 import com.afollestad.materialdialogs.MaterialDialog;
 
-import de.danoeh.antennapod.core.util.IntentUtils;
-import de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter;
 import org.apache.commons.lang3.Validate;
 
 import de.danoeh.antennapod.R;
@@ -21,8 +20,10 @@
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.storage.DownloadRequestException;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
+import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.NetworkUtils;
+import de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter;
 
 /**
  * Default implementation of an ActionButtonCallback

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistDescriptionAdapter.java
Patch:
@@ -34,9 +34,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
             LayoutInflater inflater = (LayoutInflater) getContext()
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
             convertView = inflater.inflate(R.layout.itemdescription_listitem, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.pubDate = (TextView) convertView.findViewById(R.id.txtvPubDate);
-            holder.description = (TextView) convertView.findViewById(R.id.txtvDescription);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.pubDate = convertView.findViewById(R.id.txtvPubDate);
+            holder.description = convertView.findViewById(R.id.txtvDescription);
 
             convertView.setTag(holder);
         } else {

File: app/src/main/java/de/danoeh/antennapod/adapter/SearchlistAdapter.java
Patch:
@@ -61,13 +61,13 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
             convertView = inflater.inflate(R.layout.searchlist_item, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
             if(Build.VERSION.SDK_INT >= 23) {
                 holder.title.setHyphenationFrequency(Layout.HYPHENATION_FREQUENCY_FULL);
             }
-            holder.cover = (ImageView) convertView
+            holder.cover = convertView
                     .findViewById(R.id.imgvFeedimage);
-            holder.subtitle = (TextView) convertView
+            holder.subtitle = convertView
                     .findViewById(R.id.txtvSubtitle);
 
             convertView.setTag(holder);

File: app/src/main/java/de/danoeh/antennapod/adapter/StatisticsListAdapter.java
Patch:
@@ -62,9 +62,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
             convertView = inflater.inflate(R.layout.statistics_listitem, parent, false);
 
-            holder.image = (ImageView) convertView.findViewById(R.id.imgvCover);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.time = (TextView) convertView.findViewById(R.id.txtvTime);
+            holder.image = convertView.findViewById(R.id.imgvCover);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.time = convertView.findViewById(R.id.txtvTime);
             convertView.setTag(holder);
         } else {
             holder = (StatisticsHolder) convertView.getTag();

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -89,9 +89,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
             LayoutInflater layoutInflater =
                     (LayoutInflater) mainActivityRef.get().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
             convertView = layoutInflater.inflate(R.layout.subscription_item, parent, false);
-            holder.feedTitle = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.imageView = (ImageView) convertView.findViewById(R.id.imgvCover);
-            holder.count = (TriangleLabelView) convertView.findViewById(R.id.triangleCountView);
+            holder.feedTitle = convertView.findViewById(R.id.txtvTitle);
+            holder.imageView = convertView.findViewById(R.id.imgvCover);
+            holder.count = convertView.findViewById(R.id.triangleCountView);
 
 
             convertView.setTag(holder);

File: app/src/main/java/de/danoeh/antennapod/adapter/gpodnet/TagListAdapter.java
Patch:
@@ -34,8 +34,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
             convertView = inflater.inflate(R.layout.gpodnet_tag_listitem, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.usage = (TextView) convertView.findViewById(R.id.txtvUsage);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.usage = convertView.findViewById(R.id.txtvUsage);
             convertView.setTag(holder);
         } else {
             holder = (Holder) convertView.getTag();

File: app/src/main/java/de/danoeh/antennapod/adapter/itunes/ItunesAdapter.java
Patch:
@@ -182,9 +182,9 @@ static class PodcastViewHolder {
          * @param view GridView cell
          */
         PodcastViewHolder(View view){
-            coverView = (ImageView) view.findViewById(R.id.imgvCover);
-            titleView = (TextView) view.findViewById(R.id.txtvTitle);
-            urlView = (TextView) view.findViewById(R.id.txtvUrl);
+            coverView = view.findViewById(R.id.imgvCover);
+            titleView = view.findViewById(R.id.txtvTitle);
+            urlView = view.findViewById(R.id.txtvUrl);
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/config/PlaybackServiceCallbacksImpl.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-
 import android.os.Build;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.AudioplayerActivity;

File: app/src/main/java/de/danoeh/antennapod/dialog/AutoFlattrPreferenceDialog.java
Patch:
@@ -29,9 +29,9 @@ public static void newAutoFlattrPreferenceDialog(final Activity activity, final
         AlertDialog.Builder builder = new AlertDialog.Builder(activity);
 
         @SuppressLint("InflateParams") View view = activity.getLayoutInflater().inflate(R.layout.autoflattr_preference_dialog, null);
-        final CheckBox chkAutoFlattr = (CheckBox) view.findViewById(R.id.chkAutoFlattr);
-        final SeekBar skbPercent = (SeekBar) view.findViewById(R.id.skbPercent);
-        final TextView txtvStatus = (TextView) view.findViewById(R.id.txtvStatus);
+        final CheckBox chkAutoFlattr = view.findViewById(R.id.chkAutoFlattr);
+        final SeekBar skbPercent = view.findViewById(R.id.skbPercent);
+        final TextView txtvStatus = view.findViewById(R.id.txtvStatus);
 
         chkAutoFlattr.setChecked(UserPreferences.isAutoFlattr());
         skbPercent.setEnabled(chkAutoFlattr.isChecked());

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -313,7 +313,7 @@ View onCreateViewHelper(LayoutInflater inflater,
 
         View root = inflater.inflate(fragmentResource, container, false);
 
-        recyclerView = (RecyclerView) root.findViewById(android.R.id.list);
+        recyclerView = root.findViewById(android.R.id.list);
         RecyclerView.ItemAnimator animator = recyclerView.getItemAnimator();
         if (animator instanceof SimpleItemAnimator) {
             ((SimpleItemAnimator) animator).setSupportsChangeAnimations(false);
@@ -323,7 +323,7 @@ View onCreateViewHelper(LayoutInflater inflater,
         recyclerView.setHasFixedSize(true);
         recyclerView.addItemDecoration(new HorizontalDividerItemDecoration.Builder(getActivity()).build());
 
-        progLoading = (ProgressBar) root.findViewById(R.id.progLoading);
+        progLoading = root.findViewById(R.id.progLoading);
 
         if (!itemsLoaded) {
             progLoading.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -48,9 +48,9 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         root = inflater.inflate(R.layout.cover_fragment, container, false);
-        txtvPodcastTitle = (TextView) root.findViewById(R.id.txtvPodcastTitle);
-        txtvEpisodeTitle = (TextView) root.findViewById(R.id.txtvEpisodeTitle);
-        imgvCover = (ImageView) root.findViewById(R.id.imgvCover);
+        txtvPodcastTitle = root.findViewById(R.id.txtvPodcastTitle);
+        txtvEpisodeTitle = root.findViewById(R.id.txtvEpisodeTitle);
+        imgvCover = root.findViewById(R.id.imgvCover);
         return root;
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -12,10 +12,10 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.ListView;
+import android.widget.TextView;
 
 import java.util.List;
 
-import android.widget.TextView;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.adapter.DownloadLogAdapter;
 import de.danoeh.antennapod.core.feed.EventDistributor;

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -38,12 +38,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.pager_fragment, container, false);
 
-        viewPager = (ViewPager)root.findViewById(R.id.viewpager);
+        viewPager = root.findViewById(R.id.viewpager);
         DownloadsPagerAdapter pagerAdapter = new DownloadsPagerAdapter(getChildFragmentManager(), getResources());
         viewPager.setAdapter(pagerAdapter);
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) root.findViewById(R.id.sliding_tabs);
+        tabLayout = root.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return root;

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -46,11 +46,11 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         ((MainActivity) getActivity()).getSupportActionBar().setTitle(R.string.episodes_label);
 
         View rootView = inflater.inflate(R.layout.pager_fragment, container, false);
-        viewPager = (ViewPager)rootView.findViewById(R.id.viewpager);
+        viewPager = rootView.findViewById(R.id.viewpager);
         viewPager.setAdapter(new EpisodesPagerAdapter(getChildFragmentManager(), getResources()));
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) rootView.findViewById(R.id.sliding_tabs);
+        tabLayout = rootView.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return rootView;

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.fragment;
 
 import android.content.DialogInterface;
-import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.util.Log;
@@ -16,7 +15,6 @@
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
-import de.danoeh.antennapod.activity.MediaplayerInfoActivity;
 import de.danoeh.antennapod.adapter.SubscriptionsAdapter;
 import de.danoeh.antennapod.core.asynctask.FeedRemover;
 import de.danoeh.antennapod.core.dialog.ConfirmationDialog;
@@ -70,7 +68,7 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         View root = inflater.inflate(R.layout.fragment_subscriptions, container, false);
-        subscriptionGridLayout = (GridView) root.findViewById(R.id.subscriptions_grid);
+        subscriptionGridLayout = root.findViewById(R.id.subscriptions_grid);
         registerForContextMenu(subscriptionGridLayout);
         return root;
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/GpodnetMainFragment.java
Patch:
@@ -31,12 +31,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.pager_fragment, container, false);
 
-        viewPager = (ViewPager)root.findViewById(R.id.viewpager);
+        viewPager = root.findViewById(R.id.viewpager);
         GpodnetPagerAdapter pagerAdapter = new GpodnetPagerAdapter(getChildFragmentManager(), getResources());
         viewPager.setAdapter(pagerAdapter);
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) root.findViewById(R.id.sliding_tabs);
+        tabLayout = root.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return root;

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -19,7 +19,7 @@ public class MenuItemUtils extends de.danoeh.antennapod.core.menuhandler.MenuIte
 
     public static void adjustTextColor(Context context, SearchView sv) {
         if(Build.VERSION.SDK_INT < 14) {
-            EditText searchEditText = (EditText) sv.findViewById(R.id.search_src_text);
+            EditText searchEditText = sv.findViewById(R.id.search_src_text);
             if (UserPreferences.getTheme() == de.danoeh.antennapod.R.style.Theme_AntennaPod_Dark
                     || UserPreferences.getTheme() == R.style.Theme_AntennaPod_TrueBlack) {
                 searchEditText.setTextColor(Color.WHITE);

File: app/src/main/java/de/danoeh/antennapod/preferences/MasterSwitchPreference.java
Patch:
@@ -9,6 +9,7 @@
 import android.util.AttributeSet;
 import android.util.TypedValue;
 import android.widget.TextView;
+
 import de.danoeh.antennapod.R;
 
 public class MasterSwitchPreference extends SwitchPreference {

File: app/src/main/java/de/danoeh/antennapod/preferences/NumberPickerPreference.java
Patch:
@@ -8,6 +8,7 @@
 import android.view.View;
 import android.view.WindowManager;
 import android.widget.EditText;
+
 import de.danoeh.antennapod.R;
 
 public class NumberPickerPreference extends Preference {

File: app/src/main/java/de/danoeh/antennapod/spa/SPAUtil.java
Patch:
@@ -33,7 +33,7 @@ private SPAUtil() {
      * sent before.
      */
     public static synchronized boolean sendSPAppsQueryFeedsIntent(Context context) {
-        if (context == null) throw new IllegalArgumentException("context = null");
+        assert context != null : "context = null";
         final Context appContext = context.getApplicationContext();
         if (appContext == null) {
             Log.wtf(TAG, "Unable to get application context");

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FeedRemover.java
Patch:
@@ -2,14 +2,12 @@
 
 import android.app.ProgressDialog;
 import android.content.Context;
-import android.content.Intent;
 import android.os.AsyncTask;
 
 import java.util.concurrent.ExecutionException;
 
 import de.danoeh.antennapod.core.R;
 import de.danoeh.antennapod.core.feed.Feed;
-import de.danoeh.antennapod.core.service.download.DownloadService;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.util.IntentUtils;

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -10,7 +10,6 @@
 import android.util.Log;
 import android.widget.Toast;
 
-import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 import org.shredzone.flattr4j.exception.FlattrException;
 
 import java.util.LinkedList;
@@ -27,6 +26,7 @@
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.core.util.flattr.FlattrThing;
 import de.danoeh.antennapod.core.util.flattr.FlattrUtils;
+import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 
 /**
  * Performs a click action in a background thread.

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -2,9 +2,8 @@
 
 import android.database.Cursor;
 import android.support.annotation.Nullable;
-
 import android.text.TextUtils;
-import de.danoeh.antennapod.core.asynctask.ImageResource;
+
 import org.apache.commons.lang3.builder.ToStringBuilder;
 import org.apache.commons.lang3.builder.ToStringStyle;
 
@@ -15,6 +14,7 @@
 import java.util.concurrent.Callable;
 import java.util.concurrent.TimeUnit;
 
+import de.danoeh.antennapod.core.asynctask.ImageResource;
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import de.danoeh.antennapod.core.util.ShownotesProvider;

File: core/src/main/java/de/danoeh/antennapod/core/receiver/PlayerWidget.java
Patch:
@@ -6,10 +6,11 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.util.Log;
-import de.danoeh.antennapod.core.service.PlayerWidgetJobService;
 
 import java.util.Arrays;
 
+import de.danoeh.antennapod.core.service.PlayerWidgetJobService;
+
 
 public class PlayerWidget extends AppWidgetProvider {
     private static final String TAG = "PlayerWidget";

File: core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateJobService.java
Patch:
@@ -5,6 +5,7 @@
 import android.os.Build;
 import android.support.annotation.RequiresApi;
 import android.util.Log;
+
 import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.util.FeedUpdateUtils;

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -24,13 +24,13 @@
 import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;
 import android.support.annotation.StringRes;
+import android.support.v4.app.NotificationCompat;
 import android.support.v4.media.MediaBrowserCompat;
 import android.support.v4.media.MediaBrowserServiceCompat;
 import android.support.v4.media.MediaDescriptionCompat;
 import android.support.v4.media.MediaMetadataCompat;
 import android.support.v4.media.session.MediaSessionCompat;
 import android.support.v4.media.session.PlaybackStateCompat;
-import android.support.v4.app.NotificationCompat;
 import android.text.TextUtils;
 import android.util.Log;
 import android.util.Pair;
@@ -66,8 +66,8 @@
 import de.danoeh.antennapod.core.storage.FeedSearcher;
 import de.danoeh.antennapod.core.util.IntList;
 import de.danoeh.antennapod.core.util.IntentUtils;
-import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 import de.danoeh.antennapod.core.util.QueueAccess;
+import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 import de.danoeh.antennapod.core.util.playback.ExternalMedia;
 import de.danoeh.antennapod.core.util.playback.Playable;
 import de.greenrobot.event.EventBus;
@@ -1799,7 +1799,7 @@ public void onSeekTo(long pos) {
         public boolean onMediaButtonEvent(final Intent mediaButton) {
             Log.d(TAG, "onMediaButtonEvent(" + mediaButton + ")");
             if (mediaButton != null) {
-                KeyEvent keyEvent = (KeyEvent) mediaButton.getParcelableExtra(Intent.EXTRA_KEY_EVENT);
+                KeyEvent keyEvent = mediaButton.getParcelableExtra(Intent.EXTRA_KEY_EVENT);
                 if (keyEvent != null &&
                         keyEvent.getAction() == KeyEvent.ACTION_DOWN &&
                         keyEvent.getRepeatCount() == 0) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -1,11 +1,9 @@
 package de.danoeh.antennapod.core.storage;
 
 import android.content.Context;
-import android.content.Intent;
 import android.content.SharedPreferences;
 import android.database.Cursor;
 import android.support.annotation.Nullable;
-import android.support.v4.content.ContextCompat;
 import android.util.Log;
 
 import java.util.ArrayList;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBUpgrader.java
Patch:
@@ -5,6 +5,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.media.MediaMetadataRetriever;
 import android.util.Log;
+
 import de.danoeh.antennapod.core.feed.FeedItem;
 
 class DBUpgrader {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -7,7 +7,6 @@
 import android.preference.PreferenceManager;
 import android.util.Log;
 
-import de.danoeh.antennapod.core.util.IntentUtils;
 import org.shredzone.flattr4j.model.Flattr;
 
 import java.io.File;
@@ -42,6 +41,7 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.download.DownloadStatus;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
+import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.Permutor;
 import de.danoeh.antennapod.core.util.flattr.FlattrStatus;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -9,8 +9,6 @@
 import android.util.Log;
 import android.webkit.URLUtil;
 
-import de.danoeh.antennapod.core.service.playback.PlaybackService;
-import de.danoeh.antennapod.core.util.IntentUtils;
 import org.apache.commons.io.FilenameUtils;
 
 import java.io.File;
@@ -25,6 +23,7 @@
 import de.danoeh.antennapod.core.service.download.DownloadRequest;
 import de.danoeh.antennapod.core.service.download.DownloadService;
 import de.danoeh.antennapod.core.util.FileNameGenerator;
+import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.URLChecker;
 
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSRSS20.java
Patch:
@@ -5,7 +5,6 @@
 
 import org.xml.sax.Attributes;
 
-import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
 import de.danoeh.antennapod.core.syndication.handler.HandlerState;

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -22,7 +22,6 @@
 import okhttp3.Request;
 import okhttp3.Response;
 import rx.Observable;
-import rx.Subscriber;
 import rx.android.schedulers.AndroidSchedulers;
 import rx.schedulers.Schedulers;
 

File: core/src/main/java/de/danoeh/antennapod/core/util/ThemeUtils.java
Patch:
@@ -3,10 +3,9 @@
 import android.content.Context;
 import android.support.annotation.AttrRes;
 import android.support.annotation.ColorInt;
-import android.support.annotation.ColorRes;
 import android.util.Log;
-
 import android.util.TypedValue;
+
 import de.danoeh.antennapod.core.R;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 

File: core/src/main/java/de/danoeh/antennapod/core/util/download/AutoUpdateManager.java
Patch:
@@ -11,12 +11,13 @@
 import android.os.SystemClock;
 import android.support.annotation.RequiresApi;
 import android.util.Log;
-import de.danoeh.antennapod.core.receiver.FeedUpdateReceiver;
-import de.danoeh.antennapod.core.service.FeedUpdateJobService;
 
 import java.util.Calendar;
 import java.util.concurrent.TimeUnit;
 
+import de.danoeh.antennapod.core.receiver.FeedUpdateReceiver;
+import de.danoeh.antennapod.core.service.FeedUpdateJobService;
+
 public class AutoUpdateManager {
     private static final int JOB_ID_FEED_UPDATE = 42;
     private static final String TAG = "AutoUpdateManager";

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -1,8 +1,6 @@
 package de.danoeh.antennapod.core.util.flattr;
 
 import android.content.Context;
-import android.content.DialogInterface;
-import android.content.DialogInterface.OnClickListener;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.net.Uri;

File: core/src/main/java/de/danoeh/antennapod/core/util/gui/MoreContentListFooterUtil.java
Patch:
@@ -27,8 +27,8 @@ public MoreContentListFooterUtil(View root) {
     }
 
     public void setLoadingState(boolean newState) {
-        final ImageView imageView = (ImageView) root.findViewById(R.id.imgExpand);
-        final ProgressBar progressBar = (ProgressBar) root.findViewById(R.id.progBar);
+        final ImageView imageView = root.findViewById(R.id.imgExpand);
+        final ProgressBar progressBar = root.findViewById(R.id.progBar);
         if (newState) {
             imageView.setVisibility(View.GONE);
             progressBar.setVisibility(View.VISIBLE);

File: core/src/main/java/de/danoeh/antennapod/core/util/gui/NotificationUtils.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.Context;
 import android.os.Build;
 import android.support.annotation.RequiresApi;
+
 import de.danoeh.antennapod.core.R;
 
 public class NotificationUtils {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackServiceStarter.java
Patch:
@@ -3,7 +3,9 @@
 import android.content.Context;
 import android.content.Intent;
 import android.media.MediaPlayer;
+import android.support.annotation.NonNull;
 import android.support.v4.content.ContextCompat;
+
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 

File: core/src/play/java/de/danoeh/antennapod/core/cast/RemoteMedia.java
Patch:
@@ -24,7 +24,6 @@
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
 import de.danoeh.antennapod.core.feed.MediaType;
-import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.util.ChapterUtils;
 import de.danoeh.antennapod.core.util.playback.Playable;
 

File: core/src/test/java/de/danoeh/antennapod/core/feed/FeedItemTest.java
Patch:
@@ -5,8 +5,6 @@
 
 import static de.danoeh.antennapod.core.feed.FeedItemMother.anyFeedItemWithImage;
 import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertSame;
-import static org.junit.Assert.assertTrue;
 
 public class FeedItemTest {
 

File: app/src/androidTest/java/de/test/antennapod/storage/DBTestUtils.java
Patch:
@@ -21,6 +21,7 @@
  */
 class DBTestUtils {
 
+    private DBTestUtils(){}
     /**
      * Use this method when tests don't involve chapters.
      */

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/GeneratorUtil.java
Patch:
@@ -8,6 +8,7 @@
  * Utility methods for FeedGenerator
  */
 class GeneratorUtil {
+    private GeneratorUtil(){}
 
     public static void addPaymentLink(XmlSerializer xml, String paymentLink, boolean withNamespace) throws IOException {
         String ns = (withNamespace) ? "http://www.w3.org/2005/Atom" : null;

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -20,7 +20,7 @@ public class PodcastApp extends Application {
         try {
             Class.forName("de.danoeh.antennapod.config.ClientConfigurator");
         } catch (Exception e) {
-            throw new RuntimeException("ClientConfigurator not found");
+            throw new RuntimeException("ClientConfigurator not found", e);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -357,7 +357,7 @@ protected int getContentViewResourceId() {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        return drawerToggle != null && drawerToggle.onOptionsItemSelected(item) || super.onOptionsItemSelected(item);
+        return (drawerToggle != null && drawerToggle.onOptionsItemSelected(item)) || super.onOptionsItemSelected(item);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -144,7 +144,7 @@ protected void onCreate(Bundle savedInstanceState) {
             feedUrl = getIntent().getStringExtra(ARG_FEEDURL);
         } else if (TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND)
                 || TextUtils.equals(getIntent().getAction(), Intent.ACTION_VIEW)) {
-            feedUrl = (TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND))
+            feedUrl = TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND)
                     ? getIntent().getStringExtra(Intent.EXTRA_TEXT) : getIntent().getDataString();
             if (actionBar != null) {
                 actionBar.setTitle(R.string.add_feed_label);
@@ -306,7 +306,7 @@ private void checkDownloadResult(DownloadStatus status) {
     }
 
     private void parseFeed() {
-        if (feed == null || feed.getFile_url() == null && feed.isDownloaded()) {
+        if (feed == null || (feed.getFile_url() == null && feed.isDownloaded())) {
             throw new IllegalStateException("feed must be non-null and downloaded when parseFeed is called");
         }
         Log.d(TAG, "Parsing feed");

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportHolder.java
Patch:
@@ -14,6 +14,8 @@
  */
 public class OpmlImportHolder {
 
+    private OpmlImportHolder(){}
+
     private static ArrayList<OpmlElement> readElements;
 
     public static ArrayList<OpmlElement> getReadElements() {

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -45,8 +45,6 @@
 public class GpodnetAuthenticationActivity extends AppCompatActivity {
     private static final String TAG = "GpodnetAuthActivity";
 
-    private static final String CURRENT_STEP = "current_step";
-
     private ViewFlipper viewFlipper;
 
     private static final int STEP_DEFAULT = -1;

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -8,6 +8,8 @@
  */
 class ClientConfigurator {
 
+    private ClientConfigurator(){}
+
     static {
         ClientConfig.USER_AGENT = "AntennaPod/" + BuildConfig.VERSION_NAME;
         ClientConfig.applicationCallbacks = new ApplicationCallbacksImpl();

File: app/src/main/java/de/danoeh/antennapod/dialog/GpodnetSetHostnameDialog.java
Patch:
@@ -17,6 +17,9 @@
  * Creates a dialog that lets the user change the hostname for the gpodder.net service.
  */
 public class GpodnetSetHostnameDialog {
+
+    private GpodnetSetHostnameDialog(){}
+
     private static final String TAG = "GpodnetSetHostnameDialog";
 
     public static AlertDialog createDialog(final Context context) {

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -17,6 +17,8 @@
 
 public class RatingDialog {
 
+    private RatingDialog(){}
+
     private static final String TAG = RatingDialog.class.getSimpleName();
     private static final int AFTER_DAYS = 7;
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -22,7 +22,6 @@
 public class CoverFragment extends Fragment implements MediaplayerInfoContentFragment {
 
     private static final String TAG = "CoverFragment";
-    private static final String ARG_PLAYABLE = "arg.playable";
 
     private Playable media;
 

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -30,6 +30,9 @@
  * Handles interactions with the FeedItemMenu.
  */
 public class FeedMenuHandler {
+
+    private FeedMenuHandler(){ }
+
     private static final String TAG = "FeedMenuHandler";
 
     public static boolean onCreateOptionsMenu(MenuInflater inflater, Menu menu) {

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -227,6 +227,9 @@ private void setupInterfaceScreen() {
                     return true;
                 });
 
+        if (Build.VERSION.SDK_INT >= 26) {
+            ui.findPreference(UserPreferences.PREF_EXPANDED_NOTIFICATION).setVisible(false);
+        }
     }
 
     private void setupStorageScreen() {

File: core/src/main/java/de/danoeh/antennapod/core/UpdateManager.java
Patch:
@@ -24,6 +24,8 @@
  */
 class UpdateManager {
 
+    private UpdateManager(){}
+
     private static final String TAG = UpdateManager.class.getSimpleName();
 
     private static final String PREF_NAME = "app_version";

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrStatusFetcher.java
Patch:
@@ -19,11 +19,9 @@
 
 public class FlattrStatusFetcher extends Thread {
     private static final String TAG = "FlattrStatusFetcher";
-    private final Context context;
 
     public FlattrStatusFetcher(Context context) {
         super();
-        this.context = context;
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedComponent.java
Patch:
@@ -50,7 +50,7 @@ boolean compareWithOther(FeedComponent other) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof FeedComponent)) return false;
 
         FeedComponent that = (FeedComponent) o;
 
@@ -62,4 +62,4 @@ public boolean equals(Object o) {
     public int hashCode() {
         return (int) (id ^ (id >>> 32));
     }
-}
\ No newline at end of file
+}

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -194,7 +194,7 @@ public void updateFromOther(FeedItem other) {
         if (other.link != null) {
             link = other.link;
         }
-        if (other.pubDate != null && other.pubDate != pubDate) {
+        if (other.pubDate != null && other.pubDate.equals(pubDate)) {
             pubDate = other.pubDate;
         }
         if (other.media != null) {

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideSettings.java
Patch:
@@ -6,6 +6,7 @@
  * The settings that AntennaPod will use for various Glide options
  */
 public class ApGlideSettings {
+    private ApGlideSettings(){}
 
     public static final DiskCacheStrategy AP_DISK_CACHE_STRATEGY = DiskCacheStrategy.ALL;
 }

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeAction.java
Patch:
@@ -169,7 +169,7 @@ public int getTotal() {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof GpodnetEpisodeAction)) return false;
 
         GpodnetEpisodeAction that = (GpodnetEpisodeAction) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/GpodnetPreferences.java
Patch:
@@ -24,6 +24,8 @@
  */
 public class GpodnetPreferences {
 
+    private GpodnetPreferences(){}
+
     private static final String TAG = "GpodnetPreferences";
 
     private static final String PREF_NAME = "gpodder.net";

File: core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java
Patch:
@@ -23,7 +23,6 @@ public class SleepTimerPreferences {
     private static final String DEFAULT_VALUE = "15";
     private static final int DEFAULT_TIME_UNIT = 1;
 
-    private static Context context;
     private static SharedPreferences prefs;
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -34,6 +34,7 @@
  * when called.
  */
 public class UserPreferences {
+    private UserPreferences(){}
 
     private static final String IMPORT_DIR = "import/";
 
@@ -44,7 +45,7 @@ public class UserPreferences {
     public static final String PREF_HIDDEN_DRAWER_ITEMS = "prefHiddenDrawerItems";
     private static final String PREF_DRAWER_FEED_ORDER = "prefDrawerFeedOrder";
     private static final String PREF_DRAWER_FEED_COUNTER = "prefDrawerFeedIndicator";
-    private static final String PREF_EXPANDED_NOTIFICATION = "prefExpandNotify";
+    public static final String PREF_EXPANDED_NOTIFICATION = "prefExpandNotify";
     private static final String PREF_PERSISTENT_NOTIFICATION = "prefPersistNotify";
     public static final String PREF_COMPACT_NOTIFICATION_BUTTONS = "prefCompactNotificationButtons";
     public static final String PREF_LOCKSCREEN_BACKGROUND = "prefLockscreenBackground";

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -6,8 +6,8 @@
 import android.content.Context;
 import android.content.Intent;
 import android.support.annotation.NonNull;
-import android.support.v4.app.JobIntentService;
 import android.support.v4.app.NotificationCompat;
+import android.support.v4.app.SafeJobIntentService;
 import android.support.v4.util.ArrayMap;
 import android.util.Log;
 import android.util.Pair;
@@ -44,7 +44,7 @@
  * Synchronizes local subscriptions with gpodder.net service. The service should be started with ACTION_SYNC as an action argument.
  * This class also provides static methods for starting the GpodnetSyncService.
  */
-public class GpodnetSyncService extends JobIntentService {
+public class GpodnetSyncService extends SafeJobIntentService {
 
     private static final String TAG = "GpodnetSyncService";
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -40,6 +40,9 @@
  * Provides access to a HttpClient singleton.
  */
 public class AntennapodHttpClient {
+
+    private AntennapodHttpClient(){}
+
     private static final String TAG = "AntennapodHttpClient";
 
     private static final int CONNECTION_TIMEOUT = 30000;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -124,7 +124,7 @@ public DownloadRequest[] newArray(int size) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof DownloadRequest)) return false;
 
         DownloadRequest that = (DownloadRequest) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -304,7 +304,7 @@ public static String encodeCredentials(String username, String password, String
             String encoded = ByteString.of(bytes).base64();
             return "Basic " + encoded;
         } catch (UnsupportedEncodingException e) {
-            throw new AssertionError();
+            throw new AssertionError(e);
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlayerStatus.java
Patch:
@@ -12,7 +12,7 @@ public enum PlayerStatus {
 	INITIALIZING(9),			// playback service is loading the Playable's metadata
 	INITIALIZED(10);	// playback service was started, data source of media player was set.
 
-	private int statusValue;
+	private final int statusValue;
     private static final PlayerStatus[] fromOrdinalLookup;
 
     static {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -777,10 +777,8 @@ public void execute(PodDBAdapter adapter) {
      */
     abstract static class QueryTask<T> implements Callable<T> {
         private T result;
-        private final Context context;
 
         public QueryTask(Context context) {
-            this.context = context;
         }
 
         @Override

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedSearcher.java
Patch:
@@ -19,6 +19,8 @@
  * Performs search on Feeds and FeedItems
  */
 public class FeedSearcher {
+    private FeedSearcher(){}
+
     private static final String TAG = "FeedSearcher";
 
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSRSS20.java
Patch:
@@ -22,9 +22,6 @@ public class NSRSS20 extends Namespace {
 
     private static final String TAG = "NSRSS20";
 
-    private static final String NSTAG = "rss";
-	private static final String NSURI = "";
-
     public static final String CHANNEL = "channel";
 	public static final String ITEM = "item";
     private static final String GUID = "guid";

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/Namespace.java
Patch:
@@ -15,7 +15,6 @@ public abstract class Namespace {
 	public abstract SyndElement handleElementStart(String localName, HandlerState state, Attributes attributes);
 	
 	/** Called by a Feedhandler when in endElement and it detects a namespace element 
-	 * 	@return true if namespace handled the element, false if it ignored it
 	 * */
 	public abstract void handleElementEnd(String localName, HandlerState state);
 	

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/NSAtom.java
Patch:
@@ -47,8 +47,6 @@ public class NSAtom extends Namespace {
     private static final String LINK_REL_ARCHIVES = "archives";
     private static final String LINK_REL_ENCLOSURE = "enclosure";
     private static final String LINK_REL_PAYMENT = "payment";
-    private static final String LINK_REL_RELATED = "related";
-    private static final String LINK_REL_SELF = "self";
     private static final String LINK_REL_NEXT = "next";
     // type-values
     private static final String LINK_TYPE_ATOM = "application/atom+xml";

File: core/src/main/java/de/danoeh/antennapod/core/util/Converter.java
Patch:
@@ -28,7 +28,6 @@ private Converter() {
     /** Determines the length of the number for best readability.*/
     private static final int NUM_LENGTH = 1024;
     
-    private static final int DAYS_MIL = 86400000;
     private static final int HOURS_MIL = 3600000;
 	private static final int MINUTES_MIL = 60000;
 	private static final int SECONDS_MIL = 1000;

File: core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java
Patch:
@@ -5,6 +5,7 @@
 import de.danoeh.antennapod.core.feed.FeedItem;
 
 public class FeedItemUtil {
+    private FeedItemUtil(){}
 
     public static int indexOfItemWithDownloadUrl(List<FeedItem> items, String downloadUrl) {
         if(items == null) {

File: core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.List;
 
 public class IntentUtils {
+    private IntentUtils(){}
 
     /*
      *  Checks if there is at least one exported activity that can be performed for the intent

File: core/src/main/java/de/danoeh/antennapod/core/util/LangUtils.java
Patch:
@@ -5,6 +5,9 @@
 import java.nio.charset.Charset;
 
 public class LangUtils {
+
+	private LangUtils(){}
+
 	public static final Charset UTF_8 = Charset.forName("UTF-8");
 
 	private static final ArrayMap<String, String> languages;

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -27,6 +27,7 @@
 import rx.schedulers.Schedulers;
 
 public class NetworkUtils {
+    private NetworkUtils(){}
 
 	private static final String TAG = NetworkUtils.class.getSimpleName();
 

File: core/src/main/java/de/danoeh/antennapod/core/util/RewindAfterPauseUtils.java
Patch:
@@ -9,6 +9,7 @@
  * Media file should be "rewinded" x seconds after user resumes the playback.
  */
 public class RewindAfterPauseUtils {
+    private RewindAfterPauseUtils(){}
 
     public static final long ELAPSED_TIME_FOR_SHORT_REWIND = TimeUnit.MINUTES.toMillis(1);
     public static final long ELAPSED_TIME_FOR_MEDIUM_REWIND = TimeUnit.HOURS.toMillis(1);

File: core/src/main/java/de/danoeh/antennapod/core/util/StorageUtils.java
Patch:
@@ -14,6 +14,8 @@
  * Utility functions for handling storage errors
  */
 public class StorageUtils {
+    private StorageUtils(){}
+
     private static final String TAG = "StorageUtils";
 
     public static boolean storageAvailable() {

File: core/src/main/java/de/danoeh/antennapod/core/util/ThemeUtils.java
Patch:
@@ -11,6 +11,8 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 
 public class ThemeUtils {
+    private ThemeUtils(){}
+
     private static final String TAG = "ThemeUtils";
 
     public static int getSelectionBackgroundColor() {

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrServiceCreator.java
Patch:
@@ -11,7 +11,9 @@
 /** Ensures that only one instance of the FlattrService class exists at a time */
 
 class FlattrServiceCreator {
-	private static final String TAG = "FlattrServiceCreator";
+	private FlattrServiceCreator(){}
+
+	public static final String TAG = "FlattrServiceCreator";
 	
 	private static volatile FlattrService flattrService;
 	

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -36,6 +36,8 @@
  */
 
 public class FlattrUtils {
+    private FlattrUtils(){}
+
     private static final String TAG = "FlattrUtils";
 
     private static final String HOST_NAME = "de.danoeh.antennapod";

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/MediaPlayerError.java
Patch:
@@ -7,6 +7,7 @@
 
 /** Utility class for MediaPlayer errors. */
 public class MediaPlayerError {
+	private MediaPlayerError(){}
 
 	/** Get a human-readable string for a specific error code. */
 	public static String getErrorString(Context context, int code) {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Playable.java
Patch:
@@ -176,6 +176,8 @@ public interface Playable extends Parcelable,
      * Provides utility methods for Playable objects.
      */
     class PlayableUtils {
+        private PlayableUtils(){}
+
         private static final String TAG = "PlayableUtils";
 
         /**

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -702,7 +702,7 @@ public boolean canSetPlaybackSpeed() {
         return org.antennapod.audio.MediaPlayer.isPrestoLibraryInstalled(activity.getApplicationContext())
                 || UserPreferences.useSonic()
                 || Build.VERSION.SDK_INT >= 23
-                || playbackService != null && playbackService.canSetSpeed();
+                || (playbackService != null && playbackService.canSetSpeed());
     }
 
     public void setPlaybackSpeed(float speed) {

File: core/src/play/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -14,6 +14,7 @@
  * Apps using the core module of AntennaPod should register implementations of all interfaces here.
  */
 public class ClientConfig {
+    private ClientConfig(){}
 
     /**
      * Should be used when setting User-Agent header for HTTP-requests.

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastUtils.java
Patch:
@@ -23,6 +23,8 @@
  * Helper functions for Cast support.
  */
 public class CastUtils {
+    private CastUtils(){}
+
     private static final String TAG = "CastUtils";
 
     public static final String KEY_MEDIA_ID = "de.danoeh.antennapod.core.cast.MediaId";

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -43,8 +43,8 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         getSupportActionBar().setDisplayShowHomeEnabled(true);
         setContentView(R.layout.about);
-        webViewContainer = (LinearLayout) findViewById(R.id.webViewContainer);
-        webView = (WebView) findViewById(R.id.webViewAbout);
+        webViewContainer = findViewById(R.id.webViewContainer);
+        webView = findViewById(R.id.webViewAbout);
         webView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);
         if (UserPreferences.getTheme() == R.style.Theme_AntennaPod_Dark) {
             if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) {

File: app/src/main/java/de/danoeh/antennapod/activity/FlattrAuthActivity.java
Patch:
@@ -41,9 +41,9 @@ protected void onCreate(Bundle savedInstanceState) {
 		if (BuildConfig.DEBUG) Log.d(TAG, "Activity created");
 		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 		setContentView(R.layout.flattr_auth);
-		txtvExplanation = (TextView) findViewById(R.id.txtvExplanation);
-		butAuthenticate = (Button) findViewById(R.id.but_authenticate);
-		butReturn = (Button) findViewById(R.id.but_return_home);
+		txtvExplanation = findViewById(R.id.txtvExplanation);
+		butAuthenticate = findViewById(R.id.but_authenticate);
+		butReturn = findViewById(R.id.but_return_home);
 
 		butReturn.setOnClickListener(v -> {
             Intent intent = new Intent(FlattrAuthActivity.this, MainActivity.class);

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -130,7 +130,7 @@ public void onCreate(Bundle savedInstanceState) {
         StorageUtils.checkStorageAvailability(this);
         setContentView(R.layout.main);
 
-        toolbar = (Toolbar) findViewById(R.id.toolbar);
+        toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
@@ -142,8 +142,8 @@ public void onCreate(Bundle savedInstanceState) {
 
         currentTitle = getTitle();
 
-        drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
-        navList = (ListView) findViewById(R.id.nav_list);
+        drawerLayout = findViewById(R.id.drawer_layout);
+        navList = findViewById(R.id.nav_list);
         navDrawer = findViewById(R.id.nav_layout);
 
         drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, R.string.drawer_open, R.string.drawer_close);

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -39,9 +39,9 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(R.layout.opml_selection);
-        butConfirm = (Button) findViewById(R.id.butConfirm);
-        butCancel = (Button) findViewById(R.id.butCancel);
-        feedlist = (ListView) findViewById(R.id.feedlist);
+        butConfirm = findViewById(R.id.butConfirm);
+        butCancel = findViewById(R.id.butCancel);
+        feedlist = findViewById(R.id.feedlist);
 
         feedlist.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
         listAdapter = new ArrayAdapter<>(this,

File: app/src/main/java/de/danoeh/antennapod/activity/StatisticsActivity.java
Patch:
@@ -53,9 +53,9 @@ protected void onCreate(Bundle savedInstanceState) {
         prefs = getSharedPreferences(PREF_NAME, MODE_PRIVATE);
         countAll = prefs.getBoolean(PREF_COUNT_ALL, false);
 
-        totalTimeTextView = (TextView) findViewById(R.id.total_time);
-        feedStatisticsList = (ListView) findViewById(R.id.statistics_list);
-        progressBar = (ProgressBar) findViewById(R.id.progressBar);
+        totalTimeTextView = findViewById(R.id.total_time);
+        feedStatisticsList = findViewById(R.id.statistics_list);
+        progressBar = findViewById(R.id.progressBar);
         listAdapter = new StatisticsListAdapter(this);
         listAdapter.setCountAll(countAll);
         feedStatisticsList.setAdapter(listAdapter);

File: app/src/main/java/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -42,7 +42,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
 		setContentView(R.layout.storage_error);
 
-		Button btnChooseDataFolder = (Button) findViewById(R.id.btnChooseDataFolder);
+		Button btnChooseDataFolder = findViewById(R.id.btnChooseDataFolder);
 		btnChooseDataFolder.setOnClickListener(v -> {
             if (Build.VERSION_CODES.KITKAT <= Build.VERSION.SDK_INT &&
                     Build.VERSION.SDK_INT <= Build.VERSION_CODES.LOLLIPOP_MR1) {

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistDescriptionAdapter.java
Patch:
@@ -34,9 +34,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
             LayoutInflater inflater = (LayoutInflater) getContext()
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
             convertView = inflater.inflate(R.layout.itemdescription_listitem, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.pubDate = (TextView) convertView.findViewById(R.id.txtvPubDate);
-            holder.description = (TextView) convertView.findViewById(R.id.txtvDescription);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.pubDate = convertView.findViewById(R.id.txtvPubDate);
+            holder.description = convertView.findViewById(R.id.txtvDescription);
 
             convertView.setTag(holder);
         } else {

File: app/src/main/java/de/danoeh/antennapod/adapter/SearchlistAdapter.java
Patch:
@@ -61,13 +61,13 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
             convertView = inflater.inflate(R.layout.searchlist_item, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
             if(Build.VERSION.SDK_INT >= 23) {
                 holder.title.setHyphenationFrequency(Layout.HYPHENATION_FREQUENCY_FULL);
             }
-            holder.cover = (ImageView) convertView
+            holder.cover = convertView
                     .findViewById(R.id.imgvFeedimage);
-            holder.subtitle = (TextView) convertView
+            holder.subtitle = convertView
                     .findViewById(R.id.txtvSubtitle);
 
             convertView.setTag(holder);

File: app/src/main/java/de/danoeh/antennapod/adapter/StatisticsListAdapter.java
Patch:
@@ -62,9 +62,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
             convertView = inflater.inflate(R.layout.statistics_listitem, parent, false);
 
-            holder.image = (ImageView) convertView.findViewById(R.id.imgvCover);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.time = (TextView) convertView.findViewById(R.id.txtvTime);
+            holder.image = convertView.findViewById(R.id.imgvCover);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.time = convertView.findViewById(R.id.txtvTime);
             convertView.setTag(holder);
         } else {
             holder = (StatisticsHolder) convertView.getTag();

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -89,9 +89,9 @@ public View getView(int position, View convertView, ViewGroup parent) {
             LayoutInflater layoutInflater =
                     (LayoutInflater) mainActivityRef.get().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
             convertView = layoutInflater.inflate(R.layout.subscription_item, parent, false);
-            holder.feedTitle = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.imageView = (ImageView) convertView.findViewById(R.id.imgvCover);
-            holder.count = (TriangleLabelView) convertView.findViewById(R.id.triangleCountView);
+            holder.feedTitle = convertView.findViewById(R.id.txtvTitle);
+            holder.imageView = convertView.findViewById(R.id.imgvCover);
+            holder.count = convertView.findViewById(R.id.triangleCountView);
 
 
             convertView.setTag(holder);

File: app/src/main/java/de/danoeh/antennapod/adapter/gpodnet/TagListAdapter.java
Patch:
@@ -34,8 +34,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
             convertView = inflater.inflate(R.layout.gpodnet_tag_listitem, parent, false);
-            holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.usage = (TextView) convertView.findViewById(R.id.txtvUsage);
+            holder.title = convertView.findViewById(R.id.txtvTitle);
+            holder.usage = convertView.findViewById(R.id.txtvUsage);
             convertView.setTag(holder);
         } else {
             holder = (Holder) convertView.getTag();

File: app/src/main/java/de/danoeh/antennapod/adapter/itunes/ItunesAdapter.java
Patch:
@@ -182,9 +182,9 @@ static class PodcastViewHolder {
          * @param view GridView cell
          */
         PodcastViewHolder(View view){
-            coverView = (ImageView) view.findViewById(R.id.imgvCover);
-            titleView = (TextView) view.findViewById(R.id.txtvTitle);
-            urlView = (TextView) view.findViewById(R.id.txtvUrl);
+            coverView = view.findViewById(R.id.imgvCover);
+            titleView = view.findViewById(R.id.txtvTitle);
+            urlView = view.findViewById(R.id.txtvUrl);
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/dialog/AutoFlattrPreferenceDialog.java
Patch:
@@ -29,9 +29,9 @@ public static void newAutoFlattrPreferenceDialog(final Activity activity, final
         AlertDialog.Builder builder = new AlertDialog.Builder(activity);
 
         @SuppressLint("InflateParams") View view = activity.getLayoutInflater().inflate(R.layout.autoflattr_preference_dialog, null);
-        final CheckBox chkAutoFlattr = (CheckBox) view.findViewById(R.id.chkAutoFlattr);
-        final SeekBar skbPercent = (SeekBar) view.findViewById(R.id.skbPercent);
-        final TextView txtvStatus = (TextView) view.findViewById(R.id.txtvStatus);
+        final CheckBox chkAutoFlattr = view.findViewById(R.id.chkAutoFlattr);
+        final SeekBar skbPercent = view.findViewById(R.id.skbPercent);
+        final TextView txtvStatus = view.findViewById(R.id.txtvStatus);
 
         chkAutoFlattr.setChecked(UserPreferences.isAutoFlattr());
         skbPercent.setEnabled(chkAutoFlattr.isChecked());

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -313,7 +313,7 @@ View onCreateViewHelper(LayoutInflater inflater,
 
         View root = inflater.inflate(fragmentResource, container, false);
 
-        recyclerView = (RecyclerView) root.findViewById(android.R.id.list);
+        recyclerView = root.findViewById(android.R.id.list);
         RecyclerView.ItemAnimator animator = recyclerView.getItemAnimator();
         if (animator instanceof SimpleItemAnimator) {
             ((SimpleItemAnimator) animator).setSupportsChangeAnimations(false);
@@ -323,7 +323,7 @@ View onCreateViewHelper(LayoutInflater inflater,
         recyclerView.setHasFixedSize(true);
         recyclerView.addItemDecoration(new HorizontalDividerItemDecoration.Builder(getActivity()).build());
 
-        progLoading = (ProgressBar) root.findViewById(R.id.progLoading);
+        progLoading = root.findViewById(R.id.progLoading);
 
         if (!itemsLoaded) {
             progLoading.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -48,9 +48,9 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         root = inflater.inflate(R.layout.cover_fragment, container, false);
-        txtvPodcastTitle = (TextView) root.findViewById(R.id.txtvPodcastTitle);
-        txtvEpisodeTitle = (TextView) root.findViewById(R.id.txtvEpisodeTitle);
-        imgvCover = (ImageView) root.findViewById(R.id.imgvCover);
+        txtvPodcastTitle = root.findViewById(R.id.txtvPodcastTitle);
+        txtvEpisodeTitle = root.findViewById(R.id.txtvEpisodeTitle);
+        imgvCover = root.findViewById(R.id.imgvCover);
         return root;
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -38,12 +38,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.pager_fragment, container, false);
 
-        viewPager = (ViewPager)root.findViewById(R.id.viewpager);
+        viewPager = root.findViewById(R.id.viewpager);
         DownloadsPagerAdapter pagerAdapter = new DownloadsPagerAdapter(getChildFragmentManager(), getResources());
         viewPager.setAdapter(pagerAdapter);
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) root.findViewById(R.id.sliding_tabs);
+        tabLayout = root.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return root;

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -46,11 +46,11 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         ((MainActivity) getActivity()).getSupportActionBar().setTitle(R.string.episodes_label);
 
         View rootView = inflater.inflate(R.layout.pager_fragment, container, false);
-        viewPager = (ViewPager)rootView.findViewById(R.id.viewpager);
+        viewPager = rootView.findViewById(R.id.viewpager);
         viewPager.setAdapter(new EpisodesPagerAdapter(getChildFragmentManager(), getResources()));
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) rootView.findViewById(R.id.sliding_tabs);
+        tabLayout = rootView.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return rootView;

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -68,7 +68,7 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         View root = inflater.inflate(R.layout.fragment_subscriptions, container, false);
-        subscriptionGridLayout = (GridView) root.findViewById(R.id.subscriptions_grid);
+        subscriptionGridLayout = root.findViewById(R.id.subscriptions_grid);
         registerForContextMenu(subscriptionGridLayout);
         return root;
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/GpodnetMainFragment.java
Patch:
@@ -31,12 +31,12 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         super.onCreateView(inflater, container, savedInstanceState);
         View root = inflater.inflate(R.layout.pager_fragment, container, false);
 
-        viewPager = (ViewPager)root.findViewById(R.id.viewpager);
+        viewPager = root.findViewById(R.id.viewpager);
         GpodnetPagerAdapter pagerAdapter = new GpodnetPagerAdapter(getChildFragmentManager(), getResources());
         viewPager.setAdapter(pagerAdapter);
 
         // Give the TabLayout the ViewPager
-        tabLayout = (TabLayout) root.findViewById(R.id.sliding_tabs);
+        tabLayout = root.findViewById(R.id.sliding_tabs);
         tabLayout.setupWithViewPager(viewPager);
 
         return root;

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -19,7 +19,7 @@ public class MenuItemUtils extends de.danoeh.antennapod.core.menuhandler.MenuIte
 
     public static void adjustTextColor(Context context, SearchView sv) {
         if(Build.VERSION.SDK_INT < 14) {
-            EditText searchEditText = (EditText) sv.findViewById(R.id.search_src_text);
+            EditText searchEditText = sv.findViewById(R.id.search_src_text);
             if (UserPreferences.getTheme() == de.danoeh.antennapod.R.style.Theme_AntennaPod_Dark
                     || UserPreferences.getTheme() == R.style.Theme_AntennaPod_TrueBlack) {
                 searchEditText.setTextColor(Color.WHITE);

File: app/src/main/java/de/danoeh/antennapod/spa/SPAUtil.java
Patch:
@@ -33,7 +33,7 @@ private SPAUtil() {
      * sent before.
      */
     public static synchronized boolean sendSPAppsQueryFeedsIntent(Context context) {
-        if (context == null) throw new IllegalArgumentException("context = null");
+        assert context != null : "context = null";
         final Context appContext = context.getApplicationContext();
         if (appContext == null) {
             Log.wtf(TAG, "Unable to get application context");

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1799,7 +1799,7 @@ public void onSeekTo(long pos) {
         public boolean onMediaButtonEvent(final Intent mediaButton) {
             Log.d(TAG, "onMediaButtonEvent(" + mediaButton + ")");
             if (mediaButton != null) {
-                KeyEvent keyEvent = (KeyEvent) mediaButton.getParcelableExtra(Intent.EXTRA_KEY_EVENT);
+                KeyEvent keyEvent = mediaButton.getParcelableExtra(Intent.EXTRA_KEY_EVENT);
                 if (keyEvent != null &&
                         keyEvent.getAction() == KeyEvent.ACTION_DOWN &&
                         keyEvent.getRepeatCount() == 0) {

File: core/src/main/java/de/danoeh/antennapod/core/util/gui/MoreContentListFooterUtil.java
Patch:
@@ -27,8 +27,8 @@ public MoreContentListFooterUtil(View root) {
     }
 
     public void setLoadingState(boolean newState) {
-        final ImageView imageView = (ImageView) root.findViewById(R.id.imgExpand);
-        final ProgressBar progressBar = (ProgressBar) root.findViewById(R.id.progBar);
+        final ImageView imageView = root.findViewById(R.id.imgExpand);
+        final ProgressBar progressBar = root.findViewById(R.id.progBar);
         if (newState) {
             imageView.setVisibility(View.GONE);
             progressBar.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -20,7 +20,7 @@ public class PodcastApp extends Application {
         try {
             Class.forName("de.danoeh.antennapod.config.ClientConfigurator");
         } catch (Exception e) {
-            throw new RuntimeException("ClientConfigurator not found");
+            throw new RuntimeException("ClientConfigurator not found", e);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -357,7 +357,7 @@ protected int getContentViewResourceId() {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        return drawerToggle != null && drawerToggle.onOptionsItemSelected(item) || super.onOptionsItemSelected(item);
+        return (drawerToggle != null && drawerToggle.onOptionsItemSelected(item)) || super.onOptionsItemSelected(item);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -144,7 +144,7 @@ protected void onCreate(Bundle savedInstanceState) {
             feedUrl = getIntent().getStringExtra(ARG_FEEDURL);
         } else if (TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND)
                 || TextUtils.equals(getIntent().getAction(), Intent.ACTION_VIEW)) {
-            feedUrl = (TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND))
+            feedUrl = TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND)
                     ? getIntent().getStringExtra(Intent.EXTRA_TEXT) : getIntent().getDataString();
             if (actionBar != null) {
                 actionBar.setTitle(R.string.add_feed_label);
@@ -306,7 +306,7 @@ private void checkDownloadResult(DownloadStatus status) {
     }
 
     private void parseFeed() {
-        if (feed == null || feed.getFile_url() == null && feed.isDownloaded()) {
+        if (feed == null || (feed.getFile_url() == null && feed.isDownloaded())) {
             throw new IllegalStateException("feed must be non-null and downloaded when parseFeed is called");
         }
         Log.d(TAG, "Parsing feed");

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -45,8 +45,6 @@
 public class GpodnetAuthenticationActivity extends AppCompatActivity {
     private static final String TAG = "GpodnetAuthActivity";
 
-    private static final String CURRENT_STEP = "current_step";
-
     private ViewFlipper viewFlipper;
 
     private static final int STEP_DEFAULT = -1;

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -22,7 +22,6 @@
 public class CoverFragment extends Fragment implements MediaplayerInfoContentFragment {
 
     private static final String TAG = "CoverFragment";
-    private static final String ARG_PLAYABLE = "arg.playable";
 
     private Playable media;
 

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrStatusFetcher.java
Patch:
@@ -19,11 +19,9 @@
 
 public class FlattrStatusFetcher extends Thread {
     private static final String TAG = "FlattrStatusFetcher";
-    private final Context context;
 
     public FlattrStatusFetcher(Context context) {
         super();
-        this.context = context;
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedComponent.java
Patch:
@@ -50,7 +50,7 @@ boolean compareWithOther(FeedComponent other) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof FeedComponent)) return false;
 
         FeedComponent that = (FeedComponent) o;
 
@@ -62,4 +62,4 @@ public boolean equals(Object o) {
     public int hashCode() {
         return (int) (id ^ (id >>> 32));
     }
-}
\ No newline at end of file
+}

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -194,7 +194,7 @@ public void updateFromOther(FeedItem other) {
         if (other.link != null) {
             link = other.link;
         }
-        if (other.pubDate != null && other.pubDate != pubDate) {
+        if (other.pubDate != null && other.pubDate.equals(pubDate)) {
             pubDate = other.pubDate;
         }
         if (other.media != null) {

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeAction.java
Patch:
@@ -169,7 +169,7 @@ public int getTotal() {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof GpodnetEpisodeAction)) return false;
 
         GpodnetEpisodeAction that = (GpodnetEpisodeAction) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java
Patch:
@@ -23,7 +23,6 @@ public class SleepTimerPreferences {
     private static final String DEFAULT_VALUE = "15";
     private static final int DEFAULT_TIME_UNIT = 1;
 
-    private static Context context;
     private static SharedPreferences prefs;
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -124,7 +124,7 @@ public DownloadRequest[] newArray(int size) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof DownloadRequest)) return false;
 
         DownloadRequest that = (DownloadRequest) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -304,7 +304,7 @@ public static String encodeCredentials(String username, String password, String
             String encoded = ByteString.of(bytes).base64();
             return "Basic " + encoded;
         } catch (UnsupportedEncodingException e) {
-            throw new AssertionError();
+            throw new AssertionError(e);
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlayerStatus.java
Patch:
@@ -12,7 +12,7 @@ public enum PlayerStatus {
 	INITIALIZING(9),			// playback service is loading the Playable's metadata
 	INITIALIZED(10);	// playback service was started, data source of media player was set.
 
-	private int statusValue;
+	private final int statusValue;
     private static final PlayerStatus[] fromOrdinalLookup;
 
     static {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -777,10 +777,8 @@ public void execute(PodDBAdapter adapter) {
      */
     abstract static class QueryTask<T> implements Callable<T> {
         private T result;
-        private final Context context;
 
         public QueryTask(Context context) {
-            this.context = context;
         }
 
         @Override

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSRSS20.java
Patch:
@@ -22,9 +22,6 @@ public class NSRSS20 extends Namespace {
 
     private static final String TAG = "NSRSS20";
 
-    private static final String NSTAG = "rss";
-	private static final String NSURI = "";
-
     public static final String CHANNEL = "channel";
 	public static final String ITEM = "item";
     private static final String GUID = "guid";

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/Namespace.java
Patch:
@@ -15,7 +15,6 @@ public abstract class Namespace {
 	public abstract SyndElement handleElementStart(String localName, HandlerState state, Attributes attributes);
 	
 	/** Called by a Feedhandler when in endElement and it detects a namespace element 
-	 * 	@return true if namespace handled the element, false if it ignored it
 	 * */
 	public abstract void handleElementEnd(String localName, HandlerState state);
 	

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/NSAtom.java
Patch:
@@ -47,8 +47,6 @@ public class NSAtom extends Namespace {
     private static final String LINK_REL_ARCHIVES = "archives";
     private static final String LINK_REL_ENCLOSURE = "enclosure";
     private static final String LINK_REL_PAYMENT = "payment";
-    private static final String LINK_REL_RELATED = "related";
-    private static final String LINK_REL_SELF = "self";
     private static final String LINK_REL_NEXT = "next";
     // type-values
     private static final String LINK_TYPE_ATOM = "application/atom+xml";

File: core/src/main/java/de/danoeh/antennapod/core/util/Converter.java
Patch:
@@ -28,7 +28,6 @@ private Converter() {
     /** Determines the length of the number for best readability.*/
     private static final int NUM_LENGTH = 1024;
     
-    private static final int DAYS_MIL = 86400000;
     private static final int HOURS_MIL = 3600000;
 	private static final int MINUTES_MIL = 60000;
 	private static final int SECONDS_MIL = 1000;

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -137,7 +137,7 @@ public static long parseTimeString(final String time) {
         if (parts.length >= 2) {
             result += Integer.parseInt(parts[idx]) * 60000L;
             idx++;
-            result += (Float.parseFloat(parts[idx])) * 1000L;
+            result += (long) (Float.parseFloat(parts[idx]) * 1000L);
         }
         return result;
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -702,7 +702,7 @@ public boolean canSetPlaybackSpeed() {
         return org.antennapod.audio.MediaPlayer.isPrestoLibraryInstalled(activity.getApplicationContext())
                 || UserPreferences.useSonic()
                 || Build.VERSION.SDK_INT >= 23
-                || playbackService != null && playbackService.canSetSpeed();
+                || (playbackService != null && playbackService.canSetSpeed());
     }
 
     public void setPlaybackSpeed(float speed) {

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -6,8 +6,8 @@
 import android.content.Context;
 import android.content.Intent;
 import android.support.annotation.NonNull;
-import android.support.v4.app.JobIntentService;
 import android.support.v4.app.NotificationCompat;
+import android.support.v4.app.SafeJobIntentService;
 import android.support.v4.util.ArrayMap;
 import android.util.Log;
 import android.util.Pair;
@@ -44,7 +44,7 @@
  * Synchronizes local subscriptions with gpodder.net service. The service should be started with ACTION_SYNC as an action argument.
  * This class also provides static methods for starting the GpodnetSyncService.
  */
-public class GpodnetSyncService extends JobIntentService {
+public class GpodnetSyncService extends SafeJobIntentService {
 
     private static final String TAG = "GpodnetSyncService";
 

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -20,7 +20,7 @@ public class PodcastApp extends Application {
         try {
             Class.forName("de.danoeh.antennapod.config.ClientConfigurator");
         } catch (Exception e) {
-            throw new RuntimeException("ClientConfigurator not found");
+            throw new RuntimeException("ClientConfigurator not found", e);
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -357,7 +357,7 @@ protected int getContentViewResourceId() {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        return drawerToggle != null && drawerToggle.onOptionsItemSelected(item) || super.onOptionsItemSelected(item);
+        return (drawerToggle != null && drawerToggle.onOptionsItemSelected(item)) || super.onOptionsItemSelected(item);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -144,7 +144,7 @@ protected void onCreate(Bundle savedInstanceState) {
             feedUrl = getIntent().getStringExtra(ARG_FEEDURL);
         } else if (TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND)
                 || TextUtils.equals(getIntent().getAction(), Intent.ACTION_VIEW)) {
-            feedUrl = (TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND))
+            feedUrl = TextUtils.equals(getIntent().getAction(), Intent.ACTION_SEND)
                     ? getIntent().getStringExtra(Intent.EXTRA_TEXT) : getIntent().getDataString();
             if (actionBar != null) {
                 actionBar.setTitle(R.string.add_feed_label);
@@ -306,7 +306,7 @@ private void checkDownloadResult(DownloadStatus status) {
     }
 
     private void parseFeed() {
-        if (feed == null || feed.getFile_url() == null && feed.isDownloaded()) {
+        if (feed == null || (feed.getFile_url() == null && feed.isDownloaded())) {
             throw new IllegalStateException("feed must be non-null and downloaded when parseFeed is called");
         }
         Log.d(TAG, "Parsing feed");

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -45,8 +45,6 @@
 public class GpodnetAuthenticationActivity extends AppCompatActivity {
     private static final String TAG = "GpodnetAuthActivity";
 
-    private static final String CURRENT_STEP = "current_step";
-
     private ViewFlipper viewFlipper;
 
     private static final int STEP_DEFAULT = -1;

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -22,7 +22,6 @@
 public class CoverFragment extends Fragment implements MediaplayerInfoContentFragment {
 
     private static final String TAG = "CoverFragment";
-    private static final String ARG_PLAYABLE = "arg.playable";
 
     private Playable media;
 

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrStatusFetcher.java
Patch:
@@ -19,11 +19,9 @@
 
 public class FlattrStatusFetcher extends Thread {
     private static final String TAG = "FlattrStatusFetcher";
-    private final Context context;
 
     public FlattrStatusFetcher(Context context) {
         super();
-        this.context = context;
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedComponent.java
Patch:
@@ -50,7 +50,7 @@ boolean compareWithOther(FeedComponent other) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof FeedComponent)) return false;
 
         FeedComponent that = (FeedComponent) o;
 
@@ -62,4 +62,4 @@ public boolean equals(Object o) {
     public int hashCode() {
         return (int) (id ^ (id >>> 32));
     }
-}
\ No newline at end of file
+}

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -194,7 +194,7 @@ public void updateFromOther(FeedItem other) {
         if (other.link != null) {
             link = other.link;
         }
-        if (other.pubDate != null && other.pubDate != pubDate) {
+        if (other.pubDate != null && other.pubDate.equals(pubDate)) {
             pubDate = other.pubDate;
         }
         if (other.media != null) {

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeAction.java
Patch:
@@ -169,7 +169,7 @@ public int getTotal() {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof GpodnetEpisodeAction)) return false;
 
         GpodnetEpisodeAction that = (GpodnetEpisodeAction) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java
Patch:
@@ -23,7 +23,6 @@ public class SleepTimerPreferences {
     private static final String DEFAULT_VALUE = "15";
     private static final int DEFAULT_TIME_UNIT = 1;
 
-    private static Context context;
     private static SharedPreferences prefs;
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -124,7 +124,7 @@ public DownloadRequest[] newArray(int size) {
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if (o == null || !(o instanceof DownloadRequest)) return false;
 
         DownloadRequest that = (DownloadRequest) o;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -304,7 +304,7 @@ public static String encodeCredentials(String username, String password, String
             String encoded = ByteString.of(bytes).base64();
             return "Basic " + encoded;
         } catch (UnsupportedEncodingException e) {
-            throw new AssertionError();
+            throw new AssertionError(e);
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlayerStatus.java
Patch:
@@ -12,7 +12,7 @@ public enum PlayerStatus {
 	INITIALIZING(9),			// playback service is loading the Playable's metadata
 	INITIALIZED(10);	// playback service was started, data source of media player was set.
 
-	private int statusValue;
+	private final int statusValue;
     private static final PlayerStatus[] fromOrdinalLookup;
 
     static {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -777,10 +777,8 @@ public void execute(PodDBAdapter adapter) {
      */
     abstract static class QueryTask<T> implements Callable<T> {
         private T result;
-        private final Context context;
 
         public QueryTask(Context context) {
-            this.context = context;
         }
 
         @Override

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSRSS20.java
Patch:
@@ -22,9 +22,6 @@ public class NSRSS20 extends Namespace {
 
     private static final String TAG = "NSRSS20";
 
-    private static final String NSTAG = "rss";
-	private static final String NSURI = "";
-
     public static final String CHANNEL = "channel";
 	public static final String ITEM = "item";
     private static final String GUID = "guid";

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/Namespace.java
Patch:
@@ -15,7 +15,6 @@ public abstract class Namespace {
 	public abstract SyndElement handleElementStart(String localName, HandlerState state, Attributes attributes);
 	
 	/** Called by a Feedhandler when in endElement and it detects a namespace element 
-	 * 	@return true if namespace handled the element, false if it ignored it
 	 * */
 	public abstract void handleElementEnd(String localName, HandlerState state);
 	

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/NSAtom.java
Patch:
@@ -47,8 +47,6 @@ public class NSAtom extends Namespace {
     private static final String LINK_REL_ARCHIVES = "archives";
     private static final String LINK_REL_ENCLOSURE = "enclosure";
     private static final String LINK_REL_PAYMENT = "payment";
-    private static final String LINK_REL_RELATED = "related";
-    private static final String LINK_REL_SELF = "self";
     private static final String LINK_REL_NEXT = "next";
     // type-values
     private static final String LINK_TYPE_ATOM = "application/atom+xml";

File: core/src/main/java/de/danoeh/antennapod/core/util/Converter.java
Patch:
@@ -28,7 +28,6 @@ private Converter() {
     /** Determines the length of the number for best readability.*/
     private static final int NUM_LENGTH = 1024;
     
-    private static final int DAYS_MIL = 86400000;
     private static final int HOURS_MIL = 3600000;
 	private static final int MINUTES_MIL = 60000;
 	private static final int SECONDS_MIL = 1000;

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -135,7 +135,7 @@ public static long parseTimeString(final String time) {
         if (parts.length >= 2) {
             result += Integer.parseInt(parts[idx]) * 60000L;
             idx++;
-            result += (Float.parseFloat(parts[idx])) * 1000L;
+            result += (long) (Float.parseFloat(parts[idx]) * 1000L);
         }
         return result;
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -702,7 +702,7 @@ public boolean canSetPlaybackSpeed() {
         return org.antennapod.audio.MediaPlayer.isPrestoLibraryInstalled(activity.getApplicationContext())
                 || UserPreferences.useSonic()
                 || Build.VERSION.SDK_INT >= 23
-                || playbackService != null && playbackService.canSetSpeed();
+                || (playbackService != null && playbackService.canSetSpeed());
     }
 
     public void setPlaybackSpeed(float speed) {

File: app/src/main/java/de/danoeh/antennapod/adapter/itunes/ItunesAdapter.java
Patch:
@@ -132,7 +132,7 @@ public static Podcast fromSearch(JSONObject json) {
         }
 
         public static Podcast fromSearch(SearchHit searchHit) {
-            return new Podcast(searchHit.getTitle(), searchHit.getImageUrl(), searchHit.getXmlUrl());
+            return new Podcast(searchHit.getTitle(), searchHit.getThumbImageURL(), searchHit.getXmlUrl());
         }
 
         /**

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -162,7 +162,7 @@ public void onCreate(int screen) {
                 break;
             case R.xml.preferences_autodownload:
                 setupAutoDownloadScreen();
-                buildAutodownloadSelectedNetworsPreference();
+                buildAutodownloadSelectedNetworksPreference();
                 setSelectedNetworksEnabled(UserPreferences.isEnableAutodownloadWifiFilter());
                 buildEpisodeCleanupPreference();
                 break;
@@ -953,7 +953,7 @@ private static String blankIfNull(String val) {
         return val == null ? "" : val;
     }
 
-    private void buildAutodownloadSelectedNetworsPreference() {
+    private void buildAutodownloadSelectedNetworksPreference() {
         final Activity activity = ui.getActivity();
 
         if (selectedNetworks != null) {

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -162,7 +162,7 @@ public void onCreate(int screen) {
                 break;
             case R.xml.preferences_autodownload:
                 setupAutoDownloadScreen();
-                buildAutodownloadSelectedNetworsPreference();
+                buildAutodownloadSelectedNetworksPreference();
                 setSelectedNetworksEnabled(UserPreferences.isEnableAutodownloadWifiFilter());
                 buildEpisodeCleanupPreference();
                 break;
@@ -953,7 +953,7 @@ private static String blankIfNull(String val) {
         return val == null ? "" : val;
     }
 
-    private void buildAutodownloadSelectedNetworsPreference() {
+    private void buildAutodownloadSelectedNetworksPreference() {
         final Activity activity = ui.getActivity();
 
         if (selectedNetworks != null) {

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -85,7 +85,8 @@ public static Date parse(final String input) {
                 "yyyy-MM-dd'T'HH:mm:ss'Z'",
                 "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
                 "yyyy-MM-ddZ",
-                "yyyy-MM-dd"
+                "yyyy-MM-dd",
+                "EEE d MMM yyyy HH:mm:ss 'GMT'Z (z)"
         };
 
         SimpleDateFormat parser = new SimpleDateFormat("", Locale.US);

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -317,7 +317,7 @@ private void parseFeed() {
                         return handler.parseFeed(feed);
                     } catch (UnsupportedFeedtypeException e) {
                         Log.d(TAG, "Unsupported feed type detected");
-                        if (TextUtils.equals("html", e.getRootElement().toLowerCase())) {
+                        if ("html".equalsIgnoreCase(e.getRootElement())) {
                             showFeedDiscoveryDialog(new File(feed.getFile_url()), feed.getDownload_url());
                             return null;
                         } else {
@@ -342,6 +342,7 @@ private void parseFeed() {
                     String errorMsg = DownloadError.ERROR_PARSER_EXCEPTION.getErrorString(
                             OnlineFeedViewActivity.this) + " (" + error.getMessage() + ")";
                     showErrorDialog(errorMsg);
+                    Log.d(TAG, "Feed parser exception: " + Log.getStackTraceString(error));
                 });
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/TypeGetter.java
Patch:
@@ -64,8 +64,9 @@ public Type getType(Feed feed) throws UnsupportedFeedtypeException {
 										Log.d(TAG, "Recognized type RSS 0.91/0.92");
 										return Type.RSS091;
 									}
+									throw new UnsupportedFeedtypeException("Unsupported rss version");
 								}
-								throw new UnsupportedFeedtypeException(Type.INVALID);
+								throw new UnsupportedFeedtypeException("No rss version attribute found");
 							default:
 								Log.d(TAG, "Type is invalid");
 								throw new UnsupportedFeedtypeException(Type.INVALID, tag);

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -317,7 +317,7 @@ private void parseFeed() {
                         return handler.parseFeed(feed);
                     } catch (UnsupportedFeedtypeException e) {
                         Log.d(TAG, "Unsupported feed type detected");
-                        if (TextUtils.equals("html", e.getRootElement().toLowerCase())) {
+                        if ("html".equalsIgnoreCase(e.getRootElement())) {
                             showFeedDiscoveryDialog(new File(feed.getFile_url()), feed.getDownload_url());
                             return null;
                         } else {
@@ -342,6 +342,7 @@ private void parseFeed() {
                     String errorMsg = DownloadError.ERROR_PARSER_EXCEPTION.getErrorString(
                             OnlineFeedViewActivity.this) + " (" + error.getMessage() + ")";
                     showErrorDialog(errorMsg);
+                    Log.d(TAG, "Feed parser exception: " + Log.getStackTraceString(error));
                 });
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/TypeGetter.java
Patch:
@@ -64,8 +64,9 @@ public Type getType(Feed feed) throws UnsupportedFeedtypeException {
 										Log.d(TAG, "Recognized type RSS 0.91/0.92");
 										return Type.RSS091;
 									}
+									throw new UnsupportedFeedtypeException("Unsupported rss version");
 								}
-								throw new UnsupportedFeedtypeException(Type.INVALID);
+								throw new UnsupportedFeedtypeException("No rss version attribute found");
 							default:
 								Log.d(TAG, "Type is invalid");
 								throw new UnsupportedFeedtypeException(Type.INVALID, tag);

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1285,7 +1285,9 @@ public Cursor getImageAuthenticationCursor(final String imageUrl) {
                 + "SELECT " + KEY_USERNAME + "," + KEY_PASSWORD + " FROM " + TABLE_NAME_FEED_ITEMS
                 + " INNER JOIN " + TABLE_NAME_FEEDS
                 + " ON " + TABLE_NAME_FEED_ITEMS + "." + KEY_FEED + " = " + TABLE_NAME_FEEDS + "." + KEY_ID
-                + " WHERE " + TABLE_NAME_FEED_ITEMS + "." + KEY_IMAGE_URL + "=" + downloadUrl;
+                + " WHERE " + TABLE_NAME_FEED_ITEMS + "." + KEY_IMAGE_URL + "=" + downloadUrl
+                + " UNION SELECT " + KEY_USERNAME + "," + KEY_PASSWORD + " FROM " + TABLE_NAME_FEEDS
+                + " WHERE " + TABLE_NAME_FEEDS + "." + KEY_IMAGE_URL + "=" + downloadUrl;
         return db.rawQuery(query, null);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/PlayerWidgetJobService.java
Patch:
@@ -147,6 +147,7 @@ private void updateViews() {
             views.setOnClickPendingIntent(R.id.layout_left, startAppPending);
             views.setOnClickPendingIntent(R.id.butPlay, startAppPending);
             views.setViewVisibility(R.id.txtvProgress, View.INVISIBLE);
+            views.setImageViewResource(R.id.imgvCover, R.drawable.ic_stat_antenna_default);
             views.setTextViewText(R.id.txtvTitle,
                     this.getString(R.string.no_media_playing_label));
             views.setImageViewResource(R.id.butPlay, R.drawable.ic_play_arrow_white_24dp);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -34,6 +34,7 @@
 import com.joanzapata.iconify.Iconify;
 import com.joanzapata.iconify.widget.IconButton;
 
+import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import org.apache.commons.lang3.ArrayUtils;
 

File: core/src/androidTest/java/de/danoeh/antennapod/core/AntennaPodTestRunner.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core.tests;
+package de.danoeh.antennapod.core;
 
 import android.test.InstrumentationTestRunner;
 import android.test.suitebuilder.TestSuiteBuilder;

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -10,6 +10,7 @@
 import android.util.Log;
 import android.widget.Toast;
 
+import de.danoeh.antennapod.core.util.gui.NotificationUtils;
 import org.shredzone.flattr4j.exception.FlattrException;
 
 import java.util.LinkedList;
@@ -175,7 +176,7 @@ private void postNoTokenNotification() {
         PendingIntent contentIntent = PendingIntent.getActivity(context, 0,
                 ClientConfig.flattrCallbacks.getFlattrAuthenticationActivityIntent(context), 0);
 
-        Notification notification = new NotificationCompat.Builder(context)
+        Notification notification = new NotificationCompat.Builder(context, NotificationUtils.CHANNEL_ID_ERROR)
                 .setStyle(new NotificationCompat.BigTextStyle().bigText(context.getString(R.string.no_flattr_token_notification_msg)))
                 .setContentIntent(contentIntent)
                 .setContentTitle(context.getString(R.string.no_flattr_token_title))
@@ -208,7 +209,7 @@ private void postFlattrFailedNotification() {
                     + context.getString(R.string.flattr_click_failure_count, failed);
         }
 
-        Notification notification = new NotificationCompat.Builder(context)
+        Notification notification = new NotificationCompat.Builder(context, NotificationUtils.CHANNEL_ID_ERROR)
                 .setStyle(new NotificationCompat.BigTextStyle().bigText(subtext))
                 .setContentIntent(contentIntent)
                 .setContentTitle(title)

File: core/src/main/java/de/danoeh/antennapod/core/receiver/MediaButtonReceiver.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
+import android.support.v4.content.ContextCompat;
 import android.util.Log;
 import android.view.KeyEvent;
 
@@ -29,7 +30,7 @@ public void onReceive(Context context, Intent intent) {
 			Intent serviceIntent = new Intent(context, PlaybackService.class);
 			serviceIntent.putExtra(EXTRA_KEYCODE, event.getKeyCode());
 			serviceIntent.putExtra(EXTRA_SOURCE, event.getSource());
-			context.startService(serviceIntent);
+			ContextCompat.startForegroundService(context, serviceIntent);
 		}
 
 	}

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
 import android.text.TextUtils;
 import android.util.Log;
 import android.webkit.URLUtil;
@@ -81,7 +82,7 @@ public synchronized boolean download(@NonNull Context context,
 
         Intent launchIntent = new Intent(context, DownloadService.class);
         launchIntent.putExtra(DownloadService.EXTRA_REQUEST, request);
-        context.startService(launchIntent);
+        ContextCompat.startForegroundService(context, launchIntent);
 
         return true;
     }

File: core/src/androidTest/java/de/danoeh/antennapod/core/AntennaPodTestRunner.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core.tests;
+package de.danoeh.antennapod.core;
 
 import android.test.InstrumentationTestRunner;
 import android.test.suitebuilder.TestSuiteBuilder;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -1107,7 +1107,7 @@ private void postDownloaders() {
      * that every image reference is unique.
      */
     @VisibleForTesting
-    public static void removeDuplicateImages(Feed feed) {
+    static void removeDuplicateImages(Feed feed) {
         Set<String> known = new HashSet<>();
         for (FeedItem item : feed.getItems()) {
             String url = item.hasItemImage() ? item.getImage().getDownload_url() : null;

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -887,7 +887,7 @@ private void checkAutodownloadItemVisibility(boolean autoDownload) {
 
     private void checkSonicItemVisibility() {
         if (Build.VERSION.SDK_INT < 16) {
-            MaterialListPreference p = ((MaterialListPreference) ui.findPreference(UserPreferences.PREF_MEDIA_PLAYER));
+            ListPreference p = (ListPreference) ui.findPreference(UserPreferences.PREF_MEDIA_PLAYER);
             p.setEntries(R.array.media_player_options_no_sonic);
             p.setEntryValues(R.array.media_player_values_no_sonic);
         }

File: core/src/androidTest/java/de/danoeh/antennapod/core/service/download/DownloadServiceTest.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core.tests.util.service.download;
+package de.danoeh.antennapod.core.service.download;
 
 import android.test.AndroidTestCase;
 
@@ -8,7 +8,6 @@
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedImage;
 import de.danoeh.antennapod.core.feed.FeedItem;
-import de.danoeh.antennapod.core.service.download.DownloadService;
 
 public class DownloadServiceTest extends AndroidTestCase {
 

File: core/src/androidTest/java/de/danoeh/antennapod/core/util/DateUtilsTest.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core.tests.util;
+package de.danoeh.antennapod.core.util;
 
 
 import android.test.AndroidTestCase;
@@ -7,8 +7,6 @@
 import java.util.GregorianCalendar;
 import java.util.TimeZone;
 
-import de.danoeh.antennapod.core.util.DateUtils;
-
 public class DateUtilsTest extends AndroidTestCase {
 
     public void testParseDateWithMicroseconds() throws Exception {

File: core/src/androidTest/java/de/danoeh/antennapod/core/util/LongLongMapTest.java
Patch:
@@ -1,9 +1,7 @@
-package de.danoeh.antennapod.core.tests.util;
+package de.danoeh.antennapod.core.util;
 
 import android.test.AndroidTestCase;
 
-import de.danoeh.antennapod.core.util.LongIntMap;
-
 public class LongLongMapTest extends AndroidTestCase {
 
     public void testEmptyMap() {

File: core/src/androidTest/java/de/danoeh/antennapod/core/AntennaPodTestRunner.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core.tests;
+package de.danoeh.antennapod.core;
 
 import android.test.InstrumentationTestRunner;
 import android.test.suitebuilder.TestSuiteBuilder;

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -83,13 +83,13 @@ public void onActionButtonPressed(final FeedItem item, final LongList queueIds)
             } else { // media is downloaded
                 if (media.isCurrentlyPlaying()) {
                     new PlaybackServiceStarter(context, media)
-                            .startWhenPrepared(false)
+                            .startWhenPrepared(true)
                             .shouldStream(false)
                             .start();
                     context.sendBroadcast(new Intent(PlaybackService.ACTION_PAUSE_PLAY_CURRENT_EPISODE));
                 } else if (media.isCurrentlyPaused()) {
                     new PlaybackServiceStarter(context, media)
-                            .startWhenPrepared(false)
+                            .startWhenPrepared(true)
                             .shouldStream(false)
                             .start();
                     context.sendBroadcast(new Intent(PlaybackService.ACTION_RESUME_PLAY_CURRENT_EPISODE));

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -780,6 +780,9 @@ public void reinitServiceIfPaused() {
     }
 
     public void resumeServiceNotRunning() {
+        if (getMedia() == null) {
+            return;
+        }
         if (getMedia().getMediaType() == MediaType.AUDIO) {
             TypedArray res = activity.obtainStyledAttributes(new int[]{
                     de.danoeh.antennapod.core.R.attr.av_play_big});

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -30,6 +30,7 @@
 
 import com.bumptech.glide.Glide;
 
+import de.danoeh.antennapod.core.util.NotificationUtils;
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.Validate;
 
@@ -200,6 +201,7 @@ public void onChanged() {
         transaction.commit();
 
         checkFirstLaunch();
+        NotificationUtils.createChannels(this);
     }
 
     private void saveLastNavFragment(String tag) {

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -10,6 +10,7 @@
 import android.util.Log;
 import android.widget.Toast;
 
+import de.danoeh.antennapod.core.util.NotificationUtils;
 import org.shredzone.flattr4j.exception.FlattrException;
 
 import java.util.LinkedList;
@@ -175,7 +176,7 @@ private void postNoTokenNotification() {
         PendingIntent contentIntent = PendingIntent.getActivity(context, 0,
                 ClientConfig.flattrCallbacks.getFlattrAuthenticationActivityIntent(context), 0);
 
-        Notification notification = new NotificationCompat.Builder(context)
+        Notification notification = new NotificationCompat.Builder(context, NotificationUtils.CHANNEL_ID_ERROR)
                 .setStyle(new NotificationCompat.BigTextStyle().bigText(context.getString(R.string.no_flattr_token_notification_msg)))
                 .setContentIntent(contentIntent)
                 .setContentTitle(context.getString(R.string.no_flattr_token_title))
@@ -208,7 +209,7 @@ private void postFlattrFailedNotification() {
                     + context.getString(R.string.flattr_click_failure_count, failed);
         }
 
-        Notification notification = new NotificationCompat.Builder(context)
+        Notification notification = new NotificationCompat.Builder(context, NotificationUtils.CHANNEL_ID_ERROR)
                 .setStyle(new NotificationCompat.BigTextStyle().bigText(subtext))
                 .setContentIntent(contentIntent)
                 .setContentTitle(title)

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -37,6 +37,7 @@
 import de.danoeh.antennapod.core.storage.DownloadRequestException;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
 import de.danoeh.antennapod.core.util.NetworkUtils;
+import de.danoeh.antennapod.core.util.NotificationUtils;
 
 /**
  * Synchronizes local subscriptions with gpodder.net service. The service should be started with ACTION_SYNC as an action argument.
@@ -319,7 +320,7 @@ private void updateErrorNotification(GpodnetServiceException exception) {
         }
 
         PendingIntent activityIntent = ClientConfig.gpodnetCallbacks.getGpodnetSyncServiceErrorNotificationPendingIntent(this);
-        Notification notification = new NotificationCompat.Builder(this)
+        Notification notification = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_ERROR)
                 .setContentTitle(title)
                 .setContentText(description)
                 .setContentIntent(activityIntent)

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -65,6 +65,7 @@
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.storage.FeedSearcher;
 import de.danoeh.antennapod.core.util.IntList;
+import de.danoeh.antennapod.core.util.NotificationUtils;
 import de.danoeh.antennapod.core.util.QueueAccess;
 import de.danoeh.antennapod.core.util.playback.ExternalMedia;
 import de.danoeh.antennapod.core.util.playback.Playable;
@@ -1216,8 +1217,8 @@ public void run() {
                     Notification notification;
 
                     // Builder is v7, even if some not overwritten methods return its parent's v4 interface
-                    NotificationCompat.Builder notificationBuilder = (NotificationCompat.Builder) new NotificationCompat.Builder(
-                            PlaybackService.this)
+                    NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(
+                            PlaybackService.this, NotificationUtils.CHANNEL_ID_PLAYING)
                             .setContentTitle(contentTitle)
                             .setContentText(contentText)
                             .setOngoing(false)

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -324,7 +324,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.visit_website_item).setVisible(hasWebsiteLink);
 
         boolean isItemAndHasLink = isFeedMedia &&
-                ((FeedMedia) media).getItem() != null && ((FeedMedia) media).getItem().getLink() != null;
+                ShareUtils.hasLinkToShare(((FeedMedia) media).getItem());
         menu.findItem(R.id.share_link_item).setVisible(isItemAndHasLink);
         menu.findItem(R.id.share_link_with_position_item).setVisible(isItemAndHasLink);
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -450,7 +450,8 @@ public int getDuration() {
                 || playerStatus == PlayerStatus.PAUSED
                 || playerStatus == PlayerStatus.PREPARED) {
             retVal = mediaPlayer.getDuration();
-        } else if (media != null && media.getDuration() > 0) {
+        }
+        if (retVal <= 0 && media != null && media.getDuration() > 0) {
             retVal = media.getDuration();
         }
 

File: core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java
Patch:
@@ -39,7 +39,7 @@ public static String generateFileName(String string) {
 					.withinRange('0', 'z')
 					.filteredBy(Character::isLetterOrDigit)
 					.build()
-                    .generate(8);
+					.generate(8);
 		}
 		return filename;
 	}

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -881,9 +881,6 @@ private IPlayer setMediaPlayerListeners(IPlayer mp) {
             ap.setOnCompletionListener(audioCompletionListener);
             ap.setOnSeekCompleteListener(audioSeekCompleteListener);
             ap.setOnErrorListener(audioErrorListener);
-            ap.setOnBufferingUpdateListener(audioBufferingUpdateListener);
-            ap.setOnInfoListener(audioInfoListener);
-            ap.setOnSpeedAdjustmentAvailableChangedListener(audioSetSpeedAbilityListener);
         } else {
             Log.w(TAG, "Unknown media player: " + mp);
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -183,7 +183,8 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
             txtvTitle.setEllipsize(TextUtils.TruncateAt.END);
         }
         webvDescription = (WebView) layout.findViewById(R.id.webvDescription);
-        if (UserPreferences.getTheme() == R.style.Theme_AntennaPod_Dark) {
+        if (UserPreferences.getTheme() == R.style.Theme_AntennaPod_Dark ||
+                UserPreferences.getTheme() == R.style.Theme_AntennaPod_TrueBlack) {
             if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) {
                 webvDescription.setLayerType(View.LAYER_TYPE_SOFTWARE, null);
             }

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -474,8 +474,8 @@ private boolean export(ExportWriter exportWriter) {
         subscription = observable.subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(output -> {
-                    alert.setTitle(R.string.opml_export_success_title);
-                    String message = context.getString(R.string.opml_export_success_sum) + output.toString();
+                    alert.setTitle(R.string.export_success_title);
+                    String message = context.getString(R.string.export_success_sum, output.toString());
                     alert.setMessage(message);
                     alert.setPositiveButton(R.string.send_label, (dialog, which) -> {
                         Uri fileUri = FileProvider.getUriForFile(context.getApplicationContext(),

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -3,6 +3,7 @@
 import android.database.Cursor;
 import android.support.annotation.Nullable;
 
+import android.text.TextUtils;
 import org.apache.commons.lang3.builder.ToStringBuilder;
 import org.apache.commons.lang3.builder.ToStringStyle;
 
@@ -372,7 +373,7 @@ public Callable<String> loadShownotes() {
             if (contentEncoded == null || description == null) {
                 DBReader.loadExtraInformationOfFeedItem(FeedItem.this);
             }
-            return (contentEncoded != null) ? contentEncoded : description;
+            return (!TextUtils.isEmpty(contentEncoded)) ? contentEncoded : description;
         };
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -93,7 +93,7 @@ protected void download() {
 
 
             // add range header if necessary
-            if (fileExists) {
+            if (fileExists && destination.length() > 0) {
                 request.setSoFar(destination.length());
                 httpReq.addHeader("Range", "bytes=" + request.getSoFar() + "-");
                 Log.d(TAG, "Adding range header: " + request.getSoFar());

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -93,7 +93,7 @@ protected void download() {
 
 
             // add range header if necessary
-            if (fileExists) {
+            if (fileExists && destination.length() > 0) {
                 request.setSoFar(destination.length());
                 httpReq.addHeader("Range", "bytes=" + request.getSoFar() + "-");
                 Log.d(TAG, "Adding range header: " + request.getSoFar());

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -32,8 +32,8 @@
 public class FeedHandlerTest extends InstrumentationTestCase {
     private static final String FEEDS_DIR = "testfeeds";
 
-    File file = null;
-    OutputStream outputStream = null;
+    private File file = null;
+    private OutputStream outputStream = null;
 
     protected void setUp() throws Exception {
         super.setUp();
@@ -165,7 +165,7 @@ private Feed createTestFeed(int numItems, boolean withImage, boolean withFeedMed
         Feed feed = new Feed(0, null, "title", "http://example.com", "This is the description",
                 "http://example.com/payment", "Daniel", "en", null, "http://example.com/feed", image, file.getAbsolutePath(),
                 "http://example.com/feed", true);
-        feed.setItems(new ArrayList<FeedItem>());
+        feed.setItems(new ArrayList<>());
 
         for (int i = 0; i < numItems; i++) {
             FeedItem item = new FeedItem(0, "item-" + i, "http://example.com/item-" + i,

File: app/src/androidTest/java/de/test/antennapod/storage/DBTestUtils.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * Utility methods for DB* tests.
  */
-public class DBTestUtils {
+class DBTestUtils {
 
     /**
      * Use this method when tests don't involve chapters.

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackSonicTest.java
Patch:
@@ -33,8 +33,8 @@
 public class PlaybackSonicTest extends ActivityInstrumentationTestCase2<MainActivity> {
 
     private static final String TAG = PlaybackTest.class.getSimpleName();
-    public static final int EPISODES_DRAWER_LIST_INDEX = 1;
-    public static final int QUEUE_DRAWER_LIST_INDEX = 0;
+    private static final int EPISODES_DRAWER_LIST_INDEX = 1;
+    private static final int QUEUE_DRAWER_LIST_INDEX = 0;
 
     private Solo solo;
     private UITestUtils uiTestUtils;

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -30,8 +30,8 @@
 public class PlaybackTest extends ActivityInstrumentationTestCase2<MainActivity> {
 
     private static final String TAG = PlaybackTest.class.getSimpleName();
-    public static final int EPISODES_DRAWER_LIST_INDEX = 1;
-    public static final int QUEUE_DRAWER_LIST_INDEX = 0;
+    private static final int EPISODES_DRAWER_LIST_INDEX = 1;
+    private static final int QUEUE_DRAWER_LIST_INDEX = 0;
 
     private Solo solo;
     private UITestUtils uiTestUtils;

File: app/src/androidTest/java/de/test/antennapod/util/service/download/HTTPBin.java
Patch:
@@ -45,11 +45,11 @@ public class HTTPBin extends NanoHTTPD {
     private static final String MIME_HTML = "text/html";
     private static final String MIME_PLAIN = "text/plain";
 
-    private List<File> servedFiles;
+    private final List<File> servedFiles;
 
     public HTTPBin() {
         super(PORT);
-        this.servedFiles = new ArrayList<File>();
+        this.servedFiles = new ArrayList<>();
     }
 
     /**

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/AtomGenerator.java
Patch:
@@ -19,7 +19,7 @@ public class AtomGenerator implements FeedGenerator{
 
     private static final String NS_ATOM = "http://www.w3.org/2005/Atom";
 
-    public static final long FEATURE_USE_RFC3339LOCAL = 1;
+    private static final long FEATURE_USE_RFC3339LOCAL = 1;
 
     @Override
     public void writeFeed(Feed feed, OutputStream outputStream, String encoding, long flags) throws IOException {

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/FeedGenerator.java
Patch:
@@ -24,5 +24,5 @@ public interface FeedGenerator {
      * @param encoding     The encoding to use. Must not be null.
      * @param flags        Optional argument for enabling implementation-dependent features.
      */
-    public void writeFeed(Feed feed, OutputStream outputStream, String encoding, long flags) throws IOException;
+    void writeFeed(Feed feed, OutputStream outputStream, String encoding, long flags) throws IOException;
 }

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/GeneratorUtil.java
Patch:
@@ -7,7 +7,7 @@
 /**
  * Utility methods for FeedGenerator
  */
-public class GeneratorUtil {
+class GeneratorUtil {
 
     public static void addPaymentLink(XmlSerializer xml, String paymentLink, boolean withNamespace) throws IOException {
         String ns = (withNamespace) ? "http://www.w3.org/2005/Atom" : null;

File: app/src/free/java/de/danoeh/antennapod/config/CastCallbackImpl.java
Patch:
@@ -2,6 +2,6 @@
 
 import de.danoeh.antennapod.core.CastCallbacks;
 
-public class CastCallbackImpl implements CastCallbacks {
+class CastCallbackImpl implements CastCallbacks {
 
 }

File: app/src/free/java/de/danoeh/antennapod/preferences/PreferenceControllerFlavorHelper.java
Patch:
@@ -5,7 +5,7 @@
 /**
  * Implements functions from PreferenceController that are flavor dependent.
  */
-public class PreferenceControllerFlavorHelper {
+class PreferenceControllerFlavorHelper {
 
     static void setupFlavoredUI(PreferenceController.PreferenceUI ui) {
         ui.findPreference(UserPreferences.PREF_CAST_ENABLED).setEnabled(false);

File: app/src/main/java/de/danoeh/antennapod/activity/CastplayerActivity.java
Patch:
@@ -13,9 +13,9 @@
  * Activity for controlling the remote playback on a Cast device.
  */
 public class CastplayerActivity extends MediaplayerInfoActivity {
-    public static final String TAG = "CastPlayerActivity";
+    private static final String TAG = "CastPlayerActivity";
 
-    private AtomicBoolean isSetup = new AtomicBoolean(false);
+    private final AtomicBoolean isSetup = new AtomicBoolean(false);
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -100,7 +100,7 @@ public void onClick(View v) {
 
     private boolean authInfoChanged = false;
 
-    private TextWatcher authTextWatcher = new TextWatcher() {
+    private final TextWatcher authTextWatcher = new TextWatcher() {
         @Override
         public void beforeTextChanged(CharSequence s, int start, int count, int after) {
         }
@@ -117,7 +117,7 @@ public void afterTextChanged(Editable s) {
 
     private boolean filterTextChanged = false;
 
-    private TextWatcher filterTextWatcher = new TextWatcher() {
+    private final TextWatcher filterTextWatcher = new TextWatcher() {
         @Override
         public void beforeTextChanged(CharSequence s, int start, int count, int after) {
         }

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -97,7 +97,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private List<String> getTitleList() {
-        List<String> result = new ArrayList<String>();
+        List<String> result = new ArrayList<>();
         if (OpmlImportHolder.getReadElements() != null) {
             for (OpmlElement element : OpmlImportHolder.getReadElements()) {
                 result.add(element.getText());

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportBaseActivity.java
Patch:
@@ -68,7 +68,7 @@ protected void onPostExecute(Void result) {
 		}
 	}
 
-	protected void importUri(@Nullable Uri uri) {
+	void importUri(@Nullable Uri uri) {
         if(uri == null) {
             new MaterialDialog.Builder(this)
                     .content(R.string.opml_import_error_no_file)
@@ -114,7 +114,7 @@ public void onRequestPermissionsResult(int requestCode,
 	}
 
     /** Starts the import process. */
-    protected void startImport() {
+    private void startImport() {
         try {
             Reader mReader = new InputStreamReader(getContentResolver().openInputStream(uri), LangUtils.UTF_8);
             importWorker = new OpmlImportWorker(this, mReader) {
@@ -144,7 +144,7 @@ protected void onPostExecute(ArrayList<OpmlElement> result) {
         }
     }
 
-    protected boolean finishWhenCanceled() {
+    boolean finishWhenCanceled() {
         return false;
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -164,7 +164,7 @@ private void leaveErrorState() {
 		startActivity(new Intent(this, MainActivity.class));
 	}
 
-	private BroadcastReceiver mediaUpdate = new BroadcastReceiver() {
+	private final BroadcastReceiver mediaUpdate = new BroadcastReceiver() {
 
 		@Override
 		public void onReceive(Context context, Intent intent) {

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -61,7 +61,7 @@ public class GpodnetAuthenticationActivity extends AppCompatActivity {
     private volatile String password;
     private volatile GpodnetDevice selectedDevice;
 
-    View[] views;
+    private View[] views;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonCallback.java
Patch:
@@ -3,7 +3,7 @@
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.util.LongList;
 
-public interface ActionButtonCallback {
+interface ActionButtonCallback {
 	/** Is called when the action button of a list item has been pressed. */
 	void onActionButtonPressed(FeedItem item, LongList queueIds);
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonUtils.java
Patch:
@@ -16,7 +16,7 @@
  * Utility methods for the action button that is displayed on the right hand side
  * of a listitem.
  */
-public class ActionButtonUtils {
+class ActionButtonUtils {
 
     private final int[] labels;
     private final TypedArray drawables;

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -31,9 +31,9 @@ public class DownloadLogAdapter extends BaseAdapter {
 
 	private static final String TAG = "DownloadLogAdapter";
 
-	private Context context;
+	private final Context context;
 
-    private ItemAccess itemAccess;
+    private final ItemAccess itemAccess;
 
 	public DownloadLogAdapter(Context context, ItemAccess itemAccess) {
 		super();

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadedEpisodesListAdapter.java
Patch:
@@ -110,7 +110,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         return convertView;
     }
 
-    private View.OnClickListener secondaryActionListener = new View.OnClickListener() {
+    private final View.OnClickListener secondaryActionListener = new View.OnClickListener() {
         @Override
         public void onClick(View v) {
             FeedItem item = (FeedItem) v.getTag();

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -50,7 +50,7 @@ public class QueueRecyclerAdapter extends RecyclerView.Adapter<QueueRecyclerAdap
 
     private static final String TAG = QueueRecyclerAdapter.class.getSimpleName();
 
-    private WeakReference<MainActivity> mainActivity;
+    private final WeakReference<MainActivity> mainActivity;
     private final ItemAccess itemAccess;
     private final ActionButtonCallback actionButtonCallback;
     private final ActionButtonUtils actionButtonUtils;
@@ -304,7 +304,7 @@ public void bind(FeedItem item) {
 
     }
 
-    private View.OnClickListener secondaryActionListener = new View.OnClickListener() {
+    private final View.OnClickListener secondaryActionListener = new View.OnClickListener() {
         @Override
         public void onClick(View v) {
             FeedItem item = (FeedItem) v.getTag();

File: app/src/main/java/de/danoeh/antennapod/adapter/StatisticsListAdapter.java
Patch:
@@ -23,8 +23,8 @@
  * Adapter for the statistics list
  */
 public class StatisticsListAdapter extends BaseAdapter {
-    private Context context;
-    List<DBReader.StatisticsItem> feedTime = new ArrayList<>();
+    private final Context context;
+    private List<DBReader.StatisticsItem> feedTime = new ArrayList<>();
     private boolean countAll = true;
 
     public StatisticsListAdapter(Context context) {

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -50,7 +50,6 @@ private int getAddTilePosition() {
     }
 
     private int getAdjustedPosition(int origPosition) {
-        assert(origPosition != getAddTilePosition());
         return origPosition < getAddTilePosition() ? origPosition : origPosition - 1;
     }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/itunes/ItunesAdapter.java
Patch:
@@ -124,7 +124,7 @@ private Podcast(String title, @Nullable String imageUrl, @Nullable String feedUr
          * @param json object holding the podcast information
          * @throws JSONException
          */
-        public static Podcast fromSearch(JSONObject json) throws JSONException {
+        public static Podcast fromSearch(JSONObject json) {
             String title = json.optString("collectionName", "");
             String imageUrl = json.optString("artworkUrl100", null);
             String feedUrl = json.optString("feedUrl", null);

File: app/src/main/java/de/danoeh/antennapod/asynctask/ExportWorker.java
Patch:
@@ -23,15 +23,15 @@ public class ExportWorker {
     private static final String TAG = "ExportWorker";
     private static final String DEFAULT_OUTPUT_NAME = "antennapod-feeds";
 
-    private ExportWriter exportWriter;
-    private File output;
+    private final ExportWriter exportWriter;
+    private final File output;
 
     public ExportWorker(ExportWriter exportWriter) {
         this(exportWriter, new File(UserPreferences.getDataFolder(EXPORT_DIR),
                 DEFAULT_OUTPUT_NAME + "." + exportWriter.fileExtension()));
     }
 
-    public ExportWorker(ExportWriter exportWriter, @NonNull File output) {
+    private ExportWorker(ExportWriter exportWriter, @NonNull File output) {
         this.exportWriter = exportWriter;
         this.output = output;
     }

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlFeedQueuer.java
Patch:
@@ -1,6 +1,5 @@
 package de.danoeh.antennapod.asynctask;
 
-import android.annotation.SuppressLint;
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.os.AsyncTask;
@@ -16,9 +15,9 @@
 
 /** Queues items for download in the background. */
 public class OpmlFeedQueuer extends AsyncTask<Void, Void, Void> {
-	private Context context;
+	private final Context context;
 	private ProgressDialog progDialog;
-	private int[] selection;
+	private final int[] selection;
 
 	public OpmlFeedQueuer(Context context, int[] selection) {
 		super();

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlImportWorker.java
Patch:
@@ -1,6 +1,5 @@
 package de.danoeh.antennapod.asynctask;
 
-import android.annotation.SuppressLint;
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.os.AsyncTask;
@@ -21,12 +20,12 @@ public class OpmlImportWorker extends
 		AsyncTask<Void, Void, ArrayList<OpmlElement>> {
 	private static final String TAG = "OpmlImportWorker";
 
-	private Context context;
+	private final Context context;
 	private Exception exception;
 
 	private ProgressDialog progDialog;
 
-    private Reader mReader;
+    private final Reader mReader;
 
     public OpmlImportWorker(Context context, Reader reader) {
         super();

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -6,7 +6,7 @@
 /**
  * Configures the ClientConfig class of the core package.
  */
-public class ClientConfigurator {
+class ClientConfigurator {
 
     static {
         ClientConfig.USER_AGENT = "AntennaPod/" + BuildConfig.VERSION_NAME;

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -54,7 +54,7 @@ public static void check() {
         }
     }
 
-    public static void rateNow() {
+    private static void rateNow() {
         Context context = mContext.get();
         if(context == null) {
             return;
@@ -67,11 +67,11 @@ public static void rateNow() {
         saveRated();
     }
 
-    public static boolean rated() {
+    private static boolean rated() {
         return mPreferences.getBoolean(KEY_RATED, false);
     }
 
-    public static void saveRated() {
+    private static void saveRated() {
         mPreferences
                 .edit()
                 .putBoolean(KEY_RATED, true)

File: app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java
Patch:
@@ -24,7 +24,7 @@ public abstract class SleepTimerDialog {
     
     private static final String TAG = SleepTimerDialog.class.getSimpleName();
 
-    private Context context;
+    private final Context context;
 
     private MaterialDialog dialog;
     private EditText etxtTime;

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -25,7 +25,7 @@ public class AddFeedFragment extends Fragment {
     /**
      * Preset value for url text field.
      */
-    public static final String ARG_FEED_URL = "feedurl";
+    private static final String ARG_FEED_URL = "feedurl";
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -168,7 +168,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         }
     }
 
-    private DownloadedEpisodesListAdapter.ItemAccess itemAccess = new DownloadedEpisodesListAdapter.ItemAccess() {
+    private final DownloadedEpisodesListAdapter.ItemAccess itemAccess = new DownloadedEpisodesListAdapter.ItemAccess() {
         @Override
         public int getCount() {
             return (items != null) ? items.size() : 0;
@@ -189,7 +189,7 @@ public void onFeedItemSecondaryAction(FeedItem item) {
         }
     };
 
-    private EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
+    private final EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
         @Override
         public void update(EventDistributor eventDistributor, Integer arg) {
             if ((arg & EVENTS) != 0) {

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -82,7 +82,7 @@ private void onFragmentLoaded() {
         getActivity().supportInvalidateOptionsMenu();
     }
 
-    private DownloadLogAdapter.ItemAccess itemAccess = new DownloadLogAdapter.ItemAccess() {
+    private final DownloadLogAdapter.ItemAccess itemAccess = new DownloadLogAdapter.ItemAccess() {
 
         @Override
         public int getCount() {
@@ -99,7 +99,7 @@ public DownloadStatus getItem(int position) {
         }
     };
 
-    private EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
+    private final EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
 
         @Override
         public void update(EventDistributor eventDistributor, Integer arg) {

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -25,7 +25,7 @@ public class DownloadsFragment extends Fragment {
     public static final String ARG_SELECTED_TAB = "selected_tab";
 
     public static final int POS_RUNNING = 0;
-    public static final int POS_COMPLETED = 1;
+    private static final int POS_COMPLETED = 1;
     public static final int POS_LOG = 2;
 
     private static final String PREF_LAST_TAB_POSITION = "tab_position";
@@ -80,7 +80,7 @@ public void onStart() {
 
     public static class DownloadsPagerAdapter extends FragmentPagerAdapter {
 
-        Resources resources;
+        final Resources resources;
 
         public DownloadsPagerAdapter(FragmentManager fm, Resources resources) {
             super(fm);

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -208,7 +208,7 @@ public PlaybackController getPlaybackControllerTestingOnly() {
         return controller;
     }
 
-    public void onPositionObserverUpdate() {
+    private void onPositionObserverUpdate() {
         mProgressBar.setProgress((int)
                 ((double) controller.getPosition() / controller.getDuration() * 100));
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/FavoriteEpisodesFragment.java
Patch:
@@ -26,7 +26,7 @@
 
 public class FavoriteEpisodesFragment extends AllEpisodesFragment {
 
-    public static final String TAG = "FavoriteEpisodesFrag";
+    private static final String TAG = "FavoriteEpisodesFrag";
 
     private static final String PREF_NAME = "PrefFavoriteEpisodesFragment";
 

File: app/src/main/java/de/danoeh/antennapod/fragment/FyydSearchFragment.java
Patch:
@@ -49,7 +49,7 @@ public class FyydSearchFragment extends Fragment {
     private Button butRetry;
     private TextView txtvEmpty;
 
-    private FyydClient client = new FyydClient(AntennapodHttpClient.getHttpClient());
+    private final FyydClient client = new FyydClient(AntennapodHttpClient.getHttpClient());
 
     /**
      * List of podcasts retreived from the search
@@ -169,7 +169,7 @@ private void showOnlyProgressBar() {
         progressBar.setVisibility(View.VISIBLE);
     }
 
-    void processSearchResult(FyydResponse response) {
+    private void processSearchResult(FyydResponse response) {
         adapter.clear();
         if (!response.getData().isEmpty()) {
             adapter.clear();

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -10,7 +10,6 @@
 import android.content.res.TypedArray;
 import android.graphics.Color;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.util.Log;
@@ -201,7 +200,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
     }
 
 
-    private View.OnLongClickListener webViewLongClickListener = new View.OnLongClickListener() {
+    private final View.OnLongClickListener webViewLongClickListener = new View.OnLongClickListener() {
 
         @Override
         public boolean onLongClick(View v) {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -75,7 +75,7 @@ public class ItunesSearchFragment extends Fragment {
      * Replace adapter data with provided search results from SearchTask.
      * @param result List of Podcast objects containing search results
      */
-    void updateData(List<Podcast> result) {
+    private void updateData(List<Podcast> result) {
         this.searchResults = result;
         adapter.clear();
         if (result != null && result.size() > 0) {

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -199,7 +199,7 @@ public void onEventMainThread(FeedItemEvent event) {
         }
     }
 
-    private EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
+    private final EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
 
         @Override
         public void update(EventDistributor eventDistributor, Integer arg) {
@@ -224,7 +224,7 @@ private void onFragmentLoaded() {
         getActivity().supportInvalidateOptionsMenu();
     }
 
-    private FeedItemlistAdapter.ItemAccess itemAccess = new FeedItemlistAdapter.ItemAccess() {
+    private final FeedItemlistAdapter.ItemAccess itemAccess = new FeedItemlistAdapter.ItemAccess() {
 
         @Override
         public int getItemDownloadProgressPercent(FeedItem item) {

File: app/src/main/java/de/danoeh/antennapod/fragment/RunningDownloadsFragment.java
Patch:
@@ -75,7 +75,7 @@ public void onEvent(DownloadEvent event) {
     }
 
 
-    private DownloadlistAdapter.ItemAccess itemAccess = new DownloadlistAdapter.ItemAccess() {
+    private final DownloadlistAdapter.ItemAccess itemAccess = new DownloadlistAdapter.ItemAccess() {
         @Override
         public int getCount() {
             return (downloaderList != null) ? downloaderList.size() : 0;

File: app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java
Patch:
@@ -210,7 +210,7 @@ public void onResume() {
         loadSubscriptions();
     }
 
-    private EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
+    private final EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
         @Override
         public void update(EventDistributor eventDistributor, Integer arg) {
             if ((EVENTS & arg) != 0) {
@@ -220,7 +220,7 @@ public void update(EventDistributor eventDistributor, Integer arg) {
         }
     };
 
-    private SubscriptionsAdapter.ItemAccess itemAccess = new SubscriptionsAdapter.ItemAccess() {
+    private final SubscriptionsAdapter.ItemAccess itemAccess = new SubscriptionsAdapter.ItemAccess() {
         @Override
         public int getCount() {
             if (navDrawerData != null) {

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/GpodnetMainFragment.java
Patch:
@@ -20,7 +20,7 @@
  */
 public class GpodnetMainFragment extends Fragment {
 
-    public static final String TAG = "GpodnetMainFragment";
+    private static final String TAG = "GpodnetMainFragment";
 
     private static final String PREF_LAST_TAB_POSITION = "tab_position";
     private TabLayout tabLayout;
@@ -71,7 +71,7 @@ public class GpodnetPagerAdapter extends FragmentPagerAdapter {
         private static final int POS_TAGS = 1;
         private static final int POS_SUGGESTIONS = 2;
 
-        Resources resources;
+        final Resources resources;
 
         public GpodnetPagerAdapter(FragmentManager fm, Resources resources) {
             super(fm);

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -91,7 +91,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         return root;
     }
 
-    protected void onPodcastSelected(GpodnetPodcast selection) {
+    private void onPodcastSelected(GpodnetPodcast selection) {
         Log.d(TAG, "Selected podcast: " + selection.toString());
         Intent intent = new Intent(getActivity(), OnlineFeedViewActivity.class);
         intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, selection.getUrl());
@@ -101,7 +101,7 @@ protected void onPodcastSelected(GpodnetPodcast selection) {
 
     protected abstract List<GpodnetPodcast> loadPodcastData(GpodnetService service) throws GpodnetServiceException;
 
-    protected final void loadData() {
+    final void loadData() {
         AsyncTask<Void, Void, List<GpodnetPodcast>> loaderTask = new AsyncTask<Void, Void, List<GpodnetPodcast>>() {
             volatile Exception exception = null;
 

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/SearchListFragment.java
Patch:
@@ -73,7 +73,7 @@ protected List<GpodnetPodcast> loadPodcastData(GpodnetService service) throws Gp
         return service.searchPodcasts(query, 0);
     }
 
-    public void changeQuery(String query) {
+    private void changeQuery(String query) {
         Validate.notNull(query);
 
         this.query = query;

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -17,7 +17,6 @@
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
-import de.danoeh.antennapod.core.storage.DownloadRequestException;
 import de.danoeh.antennapod.core.util.IntentUtils;
 import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.ShareUtils;
@@ -155,7 +154,7 @@ public static boolean onPrepareMenu(MenuInterface mi,
     }
 
     public static boolean onMenuItemClicked(Context context, int menuItemId,
-                                            FeedItem selectedItem) throws DownloadRequestException {
+                                            FeedItem selectedItem) {
         switch (menuItemId) {
             case R.id.skip_episode_item:
                 context.sendBroadcast(new Intent(PlaybackService.ACTION_SKIP_CURRENT_EPISODE));

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -46,7 +46,6 @@
 import java.util.Arrays;
 import java.util.Calendar;
 import java.util.Collections;
-import java.util.Comparator;
 import java.util.GregorianCalendar;
 import java.util.List;
 import java.util.concurrent.TimeUnit;

File: app/src/main/java/de/danoeh/antennapod/receiver/SPAReceiver.java
Patch:
@@ -22,8 +22,8 @@ public class SPAReceiver extends BroadcastReceiver{
     private static final String TAG = "SPAReceiver";
 
     public static final String ACTION_SP_APPS_QUERY_FEEDS = "de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS";
-    public static final String ACTION_SP_APPS_QUERY_FEEDS_REPSONSE = "de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS_RESPONSE";
-    public static final String ACTION_SP_APPS_QUERY_FEEDS_REPSONSE_FEEDS_EXTRA = "feeds";
+    private static final String ACTION_SP_APPS_QUERY_FEEDS_REPSONSE = "de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS_RESPONSE";
+    private static final String ACTION_SP_APPS_QUERY_FEEDS_REPSONSE_FEEDS_EXTRA = "feeds";
 
     @Override
     public void onReceive(Context context, Intent intent) {

File: app/src/main/java/de/danoeh/antennapod/view/SquareImageView.java
Patch:
@@ -1,13 +1,13 @@
 package de.danoeh.antennapod.view;
 
 import android.content.Context;
+import android.support.v7.widget.AppCompatImageView;
 import android.util.AttributeSet;
-import android.widget.ImageView;
 
 /**
  * From http://stackoverflow.com/a/19449488/6839
  */
-public class SquareImageView extends ImageView {
+public class SquareImageView extends AppCompatImageView {
 
     public SquareImageView(Context context) {
         super(context);
@@ -26,6 +26,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);
 
         int width = getMeasuredWidth();
+        //noinspection SuspiciousNameCombination
         setMeasuredDimension(width, width);
     }
 

File: core/src/androidTest/java/de/danoeh/antennapod/core/feed/FeedImageMother.java
Patch:
@@ -1,6 +1,6 @@
 package de.danoeh.antennapod.core.feed;
 
-public class FeedImageMother {
+class FeedImageMother {
 
     public static FeedImage anyFeedImage() {
         return new FeedImage(0, "image", null, "http://example.com/picture", false);

File: core/src/androidTest/java/de/danoeh/antennapod/core/feed/FeedMother.java
Patch:
@@ -2,7 +2,7 @@
 
 import static de.danoeh.antennapod.core.feed.FeedImageMother.anyFeedImage;
 
-public class FeedMother {
+class FeedMother {
 
     public static Feed anyFeed() {
         FeedImage image = anyFeedImage();

File: core/src/free/java/de/danoeh/antennapod/core/feed/FeedMediaFlavorHelper.java
Patch:
@@ -3,7 +3,7 @@
 /**
  * Implements methods for FeedMedia that are flavor dependent.
  */
-public class FeedMediaFlavorHelper {
+class FeedMediaFlavorHelper {
     private FeedMediaFlavorHelper(){}
     static boolean instanceOfRemoteMedia(Object o) {
         return false;

File: core/src/free/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceFlavorHelper.java
Patch:
@@ -8,9 +8,9 @@
 /**
  * Class intended to work along PlaybackService and provide support for different flavors.
  */
-public class PlaybackServiceFlavorHelper {
+class PlaybackServiceFlavorHelper {
 
-    private PlaybackService.FlavorHelperCallback callback;
+    private final PlaybackService.FlavorHelperCallback callback;
 
     PlaybackServiceFlavorHelper(Context context, PlaybackService.FlavorHelperCallback callback) {
         this.callback = callback;

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/DBTaskLoader.java
Patch:
@@ -8,7 +8,7 @@
  * This class will provide a useful default implementation that would otherwise always be necessary when interacting
  * with the DB*-classes with an AsyncTaskLoader.
  */
-public abstract class DBTaskLoader<D> extends AsyncTaskLoader<D> {
+abstract class DBTaskLoader<D> extends AsyncTaskLoader<D> {
 
     public DBTaskLoader(Context context) {
         super(context);

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -1,6 +1,5 @@
 package de.danoeh.antennapod.core.asynctask;
 
-import android.annotation.TargetApi;
 import android.app.Notification;
 import android.app.NotificationManager;
 import android.app.PendingIntent;
@@ -39,7 +38,7 @@
  * to flattr something, a notification will be displayed.
  */
 public class FlattrClickWorker extends AsyncTask<Void, Integer, FlattrClickWorker.ExitCode> {
-    protected static final String TAG = "FlattrClickWorker";
+    private static final String TAG = "FlattrClickWorker";
 
     private static final int NOTIFICATION_ID = 4;
 

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrStatusFetcher.java
Patch:
@@ -18,8 +18,8 @@
  */
 
 public class FlattrStatusFetcher extends Thread {
-    protected static final String TAG = "FlattrStatusFetcher";
-    protected Context context;
+    private static final String TAG = "FlattrStatusFetcher";
+    private final Context context;
 
     public FlattrStatusFetcher(Context context) {
         super();

File: core/src/main/java/de/danoeh/antennapod/core/event/FavoritesEvent.java
Patch:
@@ -11,8 +11,8 @@ public enum Action {
         ADDED, REMOVED
     }
 
-    public final Action action;
-    public final FeedItem item;
+    private final Action action;
+    private final FeedItem item;
 
     private FavoritesEvent(Action action, FeedItem item) {
         this.action = action;

File: core/src/main/java/de/danoeh/antennapod/core/event/FeedItemEvent.java
Patch:
@@ -17,7 +17,8 @@ public enum Action {
         UPDATE, DELETE_MEDIA
     }
 
-    @NonNull public final Action action;
+    @NonNull
+    private final Action action;
     @NonNull public final List<FeedItem> items;
 
     private FeedItemEvent(Action action, List<FeedItem> items) {

File: core/src/main/java/de/danoeh/antennapod/core/event/FeedMediaEvent.java
Patch:
@@ -8,8 +8,8 @@ public enum Action {
         UPDATE
     }
 
-    public final Action action;
-    public final FeedMedia media;
+    private final Action action;
+    private final FeedMedia media;
 
     private FeedMediaEvent(Action action, FeedMedia media) {
         this.action = action;

File: core/src/main/java/de/danoeh/antennapod/core/export/opml/OpmlSymbols.java
Patch:
@@ -3,7 +3,7 @@
 import de.danoeh.antennapod.core.export.CommonSymbols;
 
 /** Contains symbols for reading and writing OPML documents. */
-public final class OpmlSymbols extends CommonSymbols {
+final class OpmlSymbols extends CommonSymbols {
 	
 	public static final String OPML = "opml";
 	static final String OUTLINE = "outline";

File: core/src/main/java/de/danoeh/antennapod/core/feed/EventDistributor.java
Patch:
@@ -27,8 +27,8 @@ public class EventDistributor extends Observable {
 	public static final int DOWNLOAD_HANDLED = 64;
     public static final int PLAYER_STATUS_UPDATE = 128;
 
-	private Handler handler;
-	private AbstractQueue<Integer> events;
+	private final Handler handler;
+	private final AbstractQueue<Integer> events;
 
 	private static EventDistributor instance;
 
@@ -52,7 +52,7 @@ public void unregister(EventListener el) {
 		deleteObserver(el);
 	}
 
-	public void addEvent(Integer i) {
+	private void addEvent(Integer i) {
 		events.offer(i);
 		handler.post(EventDistributor.this::processEventQueue);
 	}

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedEvent.java
Patch:
@@ -9,7 +9,7 @@ public enum Action {
         FILTER_CHANGED
     }
 
-    public final Action action;
+    private final Action action;
     public final long feedId;
 
     public FeedEvent(Action action, long feedId) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedFilter.java
Patch:
@@ -9,8 +9,8 @@ public class FeedFilter {
 
     private static final String TAG = "FeedFilter";
 
-    private String includeFilter;
-    private String excludeFilter;
+    private final String includeFilter;
+    private final String excludeFilter;
 
     public FeedFilter() {
         this("", "");

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedImage.java
Patch:
@@ -11,8 +11,8 @@
 public class FeedImage extends FeedFile implements ImageResource {
 	public static final int FEEDFILETYPE_FEEDIMAGE = 1;
 
-	protected String title;
-	protected FeedComponent owner;
+	private String title;
+	private FeedComponent owner;
 
 	public FeedImage(FeedComponent owner, String download_url, String title) {
 		super(null, download_url, false);

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -59,7 +59,7 @@ public class FeedItem extends FeedComponent implements ShownotesProvider, Flattr
     public static final int PLAYED = 1;
 
     private String paymentLink;
-    private FlattrStatus flattrStatus;
+    private final FlattrStatus flattrStatus;
 
     /**
      * Is true if the database contains any chapters that belong to this item. This attribute is only
@@ -87,7 +87,7 @@ public class FeedItem extends FeedComponent implements ShownotesProvider, Flattr
     /**
      * Any tags assigned to this item
      */
-    private Set<String> tags = new HashSet<>();
+    private final Set<String> tags = new HashSet<>();
 
     public FeedItem() {
         this.state = UNPLAYED;
@@ -159,7 +159,6 @@ public static FeedItem fromCursor(Cursor cursor) {
         int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD);
 
         long id = cursor.getInt(indexId);
-        assert(id > 0);
         String title = cursor.getString(indexTitle);
         String link = cursor.getString(indexLink);
         Date pubDate = new Date(cursor.getLong(indexPubDate));

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java
Patch:
@@ -33,7 +33,7 @@ public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction auto_
         this(feedID, autoDownload, true, auto_delete_action, username, password, new FeedFilter());
     }
 
-    public FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, String username, String password, @NonNull FeedFilter filter) {
+    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, String username, String password, @NonNull FeedFilter filter) {
         this.feedID = feedID;
         this.autoDownload = autoDownload;
         this.keepUpdated = keepUpdated;

File: core/src/main/java/de/danoeh/antennapod/core/feed/SearchResult.java
Patch:
@@ -1,11 +1,11 @@
 package de.danoeh.antennapod.core.feed;
 
 public class SearchResult {
-	private FeedComponent component;
+	private final FeedComponent component;
 	/** Additional information (e.g. where it was found) */
 	private String subtitle;
 	/** Higher value means more importance */
-	private int value;
+	private final int value;
 
 	public SearchResult(FeedComponent component, int value, String subtitle) {
 		super();

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -27,7 +27,7 @@
 /**
  * @see com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader
  */
-public class ApOkHttpUrlLoader implements ModelLoader<String, InputStream> {
+class ApOkHttpUrlLoader implements ModelLoader<String, InputStream> {
 
     private static final String TAG = ApOkHttpUrlLoader.class.getSimpleName();
 
@@ -37,7 +37,7 @@ public class ApOkHttpUrlLoader implements ModelLoader<String, InputStream> {
     public static class Factory implements ModelLoaderFactory<String, InputStream> {
 
         private static volatile OkHttpClient internalClient;
-        private OkHttpClient client;
+        private final OkHttpClient client;
 
         private static OkHttpClient getInternalClient() {
             if (internalClient == null) {
@@ -80,7 +80,7 @@ public void teardown() {
 
     private final OkHttpClient client;
 
-    public ApOkHttpUrlLoader(OkHttpClient client) {
+    private ApOkHttpUrlLoader(OkHttpClient client) {
         this.client = client;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/GpodnetServiceBadStatusCodeException.java
Patch:
@@ -1,7 +1,7 @@
 package de.danoeh.antennapod.core.gpoddernet;
 
-public class GpodnetServiceBadStatusCodeException extends GpodnetServiceException {
-    int statusCode;
+class GpodnetServiceBadStatusCodeException extends GpodnetServiceException {
+    private final int statusCode;
 
     public GpodnetServiceBadStatusCodeException(String message, int statusCode) {
         super(message);

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/GpodnetServiceException.java
Patch:
@@ -2,18 +2,18 @@
 
 public class GpodnetServiceException extends Exception {
 
-    public GpodnetServiceException() {
+    GpodnetServiceException() {
     }
 
-    public GpodnetServiceException(String message) {
+    GpodnetServiceException(String message) {
         super(message);
     }
 
     public GpodnetServiceException(Throwable cause) {
         super(cause);
     }
 
-    public GpodnetServiceException(String message, Throwable cause) {
+    GpodnetServiceException(String message, Throwable cause) {
         super(message, cause);
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeActionPostResponse.java
Patch:
@@ -21,9 +21,9 @@ public class GpodnetEpisodeActionPostResponse {
      * URLs that should be updated. The key of the map is the original URL, the value of the map
      * is the sanitized URL.
      */
-    public final Map<String, String> updatedUrls;
+    private final Map<String, String> updatedUrls;
 
-    public GpodnetEpisodeActionPostResponse(long timestamp, Map<String, String> updatedUrls) {
+    private GpodnetEpisodeActionPostResponse(long timestamp, Map<String, String> updatedUrls) {
         this.timestamp = timestamp;
         this.updatedUrls = updatedUrls;
     }

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetSubscriptionChange.java
Patch:
@@ -5,9 +5,9 @@
 import java.util.List;
 
 public class GpodnetSubscriptionChange {
-    private List<String> added;
-    private List<String> removed;
-    private long timestamp;
+    private final List<String> added;
+    private final List<String> removed;
+    private final long timestamp;
 
     public GpodnetSubscriptionChange(@NonNull List<String> added,
                                      @NonNull List<String> removed,

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetTag.java
Patch:
@@ -16,7 +16,7 @@ public GpodnetTag(@NonNull String title, @NonNull String tag, int usage) {
         this.usage = usage;
     }
 
-    protected GpodnetTag(Parcel in) {
+    private GpodnetTag(Parcel in) {
         title = in.readString();
         tag = in.readString();
         usage = in.readInt();

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetUploadChangesResponse.java
Patch:
@@ -22,9 +22,9 @@ public class GpodnetUploadChangesResponse {
      * URLs that should be updated. The key of the map is the original URL, the value of the map
      * is the sanitized URL.
      */
-    public final Map<String, String> updatedUrls;
+    private final Map<String, String> updatedUrls;
 
-    public GpodnetUploadChangesResponse(long timestamp, Map<String, String> updatedUrls) {
+    private GpodnetUploadChangesResponse(long timestamp, Map<String, String> updatedUrls) {
         this.timestamp = timestamp;
         this.updatedUrls = updatedUrls;
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -42,10 +42,10 @@
 public class AntennapodHttpClient {
     private static final String TAG = "AntennapodHttpClient";
 
-    public static final int CONNECTION_TIMEOUT = 30000;
-    public static final int READ_TIMEOUT = 30000;
+    private static final int CONNECTION_TIMEOUT = 30000;
+    private static final int READ_TIMEOUT = 30000;
 
-    public static final int MAX_CONNECTIONS = 8;
+    private static final int MAX_CONNECTIONS = 8;
 
 
     private static volatile OkHttpClient httpClient = null;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -316,7 +316,7 @@ public static String encodeCredentials(String username, String password, String
 
     private static class BasicAuthorizationInterceptor implements Interceptor {
 
-        private DownloadRequest downloadRequest;
+        private final DownloadRequest downloadRequest;
 
         public BasicAuthorizationInterceptor(DownloadRequest downloadRequest) {
             this.downloadRequest = downloadRequest;

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -295,7 +295,7 @@ public synchronized void shutdown() {
     /**
      * Sleeps for a given time and then pauses playback.
      */
-    protected class SleepTimer implements Runnable {
+    class SleepTimer implements Runnable {
         private static final String TAG = "SleepTimer";
         private static final long UPDATE_INTERVAL = 1000L;
         private static final long NOTIFICATION_THRESHOLD = 10000;

File: core/src/main/java/de/danoeh/antennapod/core/storage/EpisodeCleanupAlgorithm.java
Patch:
@@ -15,7 +15,7 @@ public abstract class EpisodeCleanupAlgorithm {
      *                    or getPerformCleanupParameter.
      * @return The number of episodes that were deleted.
      */
-    public abstract int performCleanup(Context context, int numToRemove);
+    protected abstract int performCleanup(Context context, int numToRemove);
 
     public int performCleanup(Context context) {
         return performCleanup(context, getDefaultCleanupParameter());
@@ -26,7 +26,7 @@ public int performCleanup(Context context) {
      * space to free to satisfy the episode cache conditions. If the conditions are already satisfied, this
      * method should not have any effects.
      */
-    public abstract int getDefaultCleanupParameter();
+    protected abstract int getDefaultCleanupParameter();
 
     /**
      * Cleans up just enough episodes to make room for the requested number
@@ -48,7 +48,7 @@ public int makeRoomForEpisodes(Context context, int amountOfRoomNeeded) {
      * @param amountOfRoomNeeded the number of episodes we want to download
      * @return the number of episodes to delete in order to make room
      */
-    protected int getNumEpisodesToCleanup(final int amountOfRoomNeeded) {
+    int getNumEpisodesToCleanup(final int amountOfRoomNeeded) {
         if (amountOfRoomNeeded >= 0
                 && UserPreferences.getEpisodeCacheSize() != UserPreferences
                 .getEpisodeCacheSizeUnlimited()) {

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/FeedHandlerResult.java
Patch:
@@ -9,8 +9,8 @@
  */
 public class FeedHandlerResult {
 
-    public Feed feed;
-    public Map<String, String> alternateFeedUrls;
+    public final Feed feed;
+    public final Map<String, String> alternateFeedUrls;
 
     public FeedHandlerResult(Feed feed, Map<String, String> alternateFeedUrls) {
         this.feed = feed;

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/SyndHandler.java
Patch:
@@ -18,10 +18,10 @@
 import de.danoeh.antennapod.core.syndication.namespace.atom.NSAtom;
 
 /** Superclass for all SAX Handlers which process Syndication formats */
-public class SyndHandler extends DefaultHandler {
+class SyndHandler extends DefaultHandler {
 	private static final String TAG = "SyndHandler";
 	private static final String DEFAULT_PREFIX = "";
-	protected HandlerState state;
+	final HandlerState state;
 
 	public SyndHandler(Feed feed, TypeGetter.Type type) {
 		state = new HandlerState(feed);

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/UnsupportedFeedtypeException.java
Patch:
@@ -4,7 +4,7 @@
 
 public class UnsupportedFeedtypeException extends Exception {
 	private static final long serialVersionUID = 9105878964928170669L;
-	private TypeGetter.Type type;
+	private final TypeGetter.Type type;
     private String rootElement;
 	
 	public UnsupportedFeedtypeException(Type type) {

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSITunes.java
Patch:
@@ -21,8 +21,8 @@ public class NSITunes extends Namespace {
 
     private static final String AUTHOR = "author";
     public static final String DURATION = "duration";
-    public static final String SUBTITLE = "subtitle";
-    public static final String SUMMARY = "summary";
+    private static final String SUBTITLE = "subtitle";
+    private static final String SUMMARY = "summary";
 
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/SyndElement.java
Patch:
@@ -2,8 +2,8 @@
 
 /** Defines a XML Element that is pushed on the tagstack */
 public class SyndElement {
-	protected String name;
-	protected Namespace namespace;
+	private final String name;
+	private final Namespace namespace;
 	
 	public SyndElement(String name, Namespace namespace) {
 		this.name = name;

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/AtomText.java
Patch:
@@ -8,10 +8,10 @@
 /** Represents Atom Element which contains text (content, title, summary). */
 public class AtomText extends SyndElement {
 	public static final String TYPE_TEXT = "text";
-	public static final String TYPE_HTML = "html";
-	public static final String TYPE_XHTML = "xhtml";
+	private static final String TYPE_HTML = "html";
+	private static final String TYPE_XHTML = "xhtml";
 
-	private String type;
+	private final String type;
 	private String content;
 
 	public AtomText(String name, Namespace namespace, String type) {

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/NSAtom.java
Patch:
@@ -64,8 +64,8 @@ public class NSAtom extends Namespace {
     private static final String isText = TITLE + "|" + CONTENT + "|"
             + SUBTITLE + "|" + SUMMARY;
 
-    public static final String isFeed = FEED + "|" + NSRSS20.CHANNEL;
-    public static final String isFeedItem = ENTRY + "|" + NSRSS20.ITEM;
+    private static final String isFeed = FEED + "|" + NSRSS20.CHANNEL;
+    private static final String isFeedItem = ENTRY + "|" + NSRSS20.ITEM;
 
     @Override
     public SyndElement handleElementStart(String localName, HandlerState state,

File: core/src/main/java/de/danoeh/antennapod/core/util/Converter.java
Patch:
@@ -71,8 +71,8 @@ public static String getDurationStringLong(int duration) {
     	int m = rest / MINUTES_MIL;
     	rest -= m * MINUTES_MIL;
     	int s = rest / SECONDS_MIL;
-    	
-    	return String.format("%02d:%02d:%02d", h, m, s);
+
+    	return String.format(Locale.getDefault(), "%02d:%02d:%02d", h, m, s);
     }
     
     /** Converts milliseconds to a string containing hours and minutes */
@@ -81,7 +81,7 @@ public static String getDurationStringShort(int duration) {
     	int rest = duration - h * HOURS_MIL;
     	int m = rest / MINUTES_MIL;
     	
-    	return String.format("%02d:%02d", h, m);
+    	return String.format(Locale.getDefault(), "%02d:%02d", h, m);
     }
 
     /** Converts long duration string (HH:MM:SS) to milliseconds. */

File: core/src/main/java/de/danoeh/antennapod/core/util/DuckType.java
Patch:
@@ -92,7 +92,7 @@ private boolean isA(Class iface) {
 	 *         false otherwise.
 	 */
 	@SuppressWarnings("rawtypes")
-	public boolean quacksLikeA(Class iface) {
+    private boolean quacksLikeA(Class iface) {
 		for (Method method : iface.getMethods()) {
 			if (findMethodBySignature(method) == null) {
 				return false;

File: core/src/main/java/de/danoeh/antennapod/core/util/EpisodeFilter.java
Patch:
@@ -5,7 +5,7 @@
 
 import de.danoeh.antennapod.core.feed.FeedItem;
 
-public class EpisodeFilter {
+class EpisodeFilter {
 
 	private EpisodeFilter() {
 

File: core/src/main/java/de/danoeh/antennapod/core/util/FeedtitleComparator.java
Patch:
@@ -5,7 +5,7 @@
 import de.danoeh.antennapod.core.feed.Feed;
 
 /** Compares the title of two feeds for sorting. */
-public class FeedtitleComparator implements Comparator<Feed> {
+class FeedtitleComparator implements Comparator<Feed> {
 
 	@Override
 	public int compare(Feed lhs, Feed rhs) {

File: core/src/main/java/de/danoeh/antennapod/core/util/IntList.java
Patch:
@@ -8,7 +8,7 @@
 public final class IntList {
 
     private int[] values;
-    protected int size;
+    private int size;
 
     /**
      * Constructs an empty instance with a default initial capacity.
@@ -22,7 +22,7 @@ public IntList() {
      *
      * @param initialCapacity {@code >= 0;} initial capacity of the list
      */
-    public IntList(int initialCapacity) {
+    private IntList(int initialCapacity) {
         if(initialCapacity < 0) {
             throw new IllegalArgumentException("initial capacity must be 0 or higher");
         }
@@ -200,7 +200,7 @@ private void growIfNeeded() {
      * @param value value to find
      * @return index of value or -1
      */
-    public int indexOf(int value) {
+    private int indexOf(int value) {
         for (int i = 0; i < size; i++) {
             if (values[i] == value) {
                 return i;

File: core/src/main/java/de/danoeh/antennapod/core/util/LangUtils.java
Patch:
@@ -7,7 +7,7 @@
 public class LangUtils {
 	public static final Charset UTF_8 = Charset.forName("UTF-8");
 
-	private static ArrayMap<String, String> languages;
+	private static final ArrayMap<String, String> languages;
 	static {
 		languages = new ArrayMap<>();
 		languages.put("af", "Afrikaans");

File: core/src/main/java/de/danoeh/antennapod/core/util/LongIntMap.java
Patch:
@@ -88,7 +88,7 @@ public boolean delete(long key) {
     /**
      * Removes the mapping at the given index.
      */
-    public void removeAt(int index) {
+    private void removeAt(int index) {
         System.arraycopy(keys, index + 1, keys, index, size - (index + 1));
         System.arraycopy(values, index + 1, values, index, size - (index + 1));
         size--;
@@ -130,7 +130,7 @@ public int size() {
      * smallest key and <code>keyAt(size()-1)</code> will return the largest
      * key.</p>
      */
-    public long keyAt(int index) {
+    private long keyAt(int index) {
         if (index >= size) {
             throw new IndexOutOfBoundsException("n >= size()");
         } else if(index < 0) {
@@ -150,7 +150,7 @@ public long keyAt(int index) {
      * smallest key and <code>valueAt(size()-1)</code> will return the value
      * associated with the largest key.</p>
      */
-    public int valueAt(int index) {
+    private int valueAt(int index) {
         if (index >= size) {
             throw new IndexOutOfBoundsException("n >= size()");
         } else if(index < 0) {

File: core/src/main/java/de/danoeh/antennapod/core/util/exception/MediaFileNotFoundException.java
Patch:
@@ -5,7 +5,7 @@
 public class MediaFileNotFoundException extends Exception {
 	private static final long serialVersionUID = 1L;
 
-	private FeedMedia media;
+	private final FeedMedia media;
 
 	public MediaFileNotFoundException(String msg, FeedMedia media) {
 		super(msg);

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrServiceCreator.java
Patch:
@@ -10,8 +10,8 @@
 
 /** Ensures that only one instance of the FlattrService class exists at a time */
 
-public class FlattrServiceCreator {
-	public static final String TAG = "FlattrServiceCreator";
+class FlattrServiceCreator {
+	private static final String TAG = "FlattrServiceCreator";
 	
 	private static volatile FlattrService flattrService;
 	

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrStatus.java
Patch:
@@ -3,9 +3,9 @@
 import java.util.Calendar;
 
 public class FlattrStatus {
-	public static final int STATUS_UNFLATTERED = 0;
+	private static final int STATUS_UNFLATTERED = 0;
 	public static final int STATUS_QUEUE = 1;
-	public static final int STATUS_FLATTRED = 2;
+	private static final int STATUS_FLATTRED = 2;
 	
 	private int status = STATUS_UNFLATTERED;
 	private Calendar lastFlattred;
@@ -38,7 +38,7 @@ public void setFlattrQueue() {
 			status = STATUS_QUEUE;
 	}
 	
-	public void fromLong(long status) {
+	private void fromLong(long status) {
 		if (status == STATUS_UNFLATTERED || status == STATUS_QUEUE)
 			this.status = (int) status;
 		else {

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrThing.java
Patch:
@@ -1,7 +1,7 @@
 package de.danoeh.antennapod.core.util.flattr;
 
 public interface FlattrThing {
-	public String getTitle();
-	public String getPaymentLink();
-	public FlattrStatus getFlattrStatus();
+	String getTitle();
+	String getPaymentLink();
+	FlattrStatus getFlattrStatus();
 }

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/SimpleFlattrThing.java
Patch:
@@ -24,7 +24,7 @@ public FlattrStatus getFlattrStatus()
         return this.status;
     }
 
-    private String title;
-    private String url;
-    private FlattrStatus status;
+    private final String title;
+    private final String url;
+    private final FlattrStatus status;
 }

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/model/FrameHeader.java
Patch:
@@ -2,7 +2,7 @@
 
 public class FrameHeader extends Header {
 
-	protected char flags;
+	private final char flags;
 
 	public FrameHeader(String id, int size, char flags) {
 		super(id, size);

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/model/Header.java
Patch:
@@ -2,10 +2,10 @@
 
 public abstract class Header {
 
-	protected String id;
-	protected int size;
+	final String id;
+	final int size;
 
-	public Header(String id, int size) {
+	Header(String id, int size) {
 		super();
 		this.id = id;
 		this.size = size;

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/model/TagHeader.java
Patch:
@@ -2,8 +2,8 @@
 
 public class TagHeader extends Header {
 
-	protected char version;
-	protected byte flags;
+	private final char version;
+	private final byte flags;
 
 	public TagHeader(String id, int size, char version, byte flags) {
 		super(id, size);

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/ExternalMedia.java
Patch:
@@ -23,7 +23,7 @@ public class ExternalMedia implements Playable {
 	public static final String PREF_MEDIA_TYPE = "ExternalMedia.PrefMediaType";
 	public static final String PREF_LAST_PLAYED_TIME = "ExternalMedia.PrefLastPlayedTime";
 
-	private String source;
+	private final String source;
 
 	private String episodeTitle;
 	private String feedTitle;

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/IPlayer.java
Patch:
@@ -45,7 +45,7 @@ public interface IPlayer {
 	void setScreenOnWhilePlaying(boolean screenOn);
 
 	void setDataSource(String path) throws IllegalStateException, IOException,
-			IllegalArgumentException, SecurityException;
+            IllegalArgumentException, SecurityException;
 
 	void setDisplay(SurfaceHolder sh);
 
@@ -67,7 +67,7 @@ void setDataSource(String path) throws IllegalStateException, IOException,
 
 	void stop();
 
-    public void setVideoScalingMode(int mode);
+    void setVideoScalingMode(int mode);
 
-    public void setWakeMode(Context context, int mode);
+    void setWakeMode(Context context, int mode);
 }

File: core/src/main/java/de/danoeh/antennapod/core/util/syndication/FeedDiscoverer.java
Patch:
@@ -41,7 +41,7 @@ public Map<String, String> findLinks(File in, String baseUrl) throws IOException
      * @return A map which contains the feed URLs as keys and titles as values (the feed URL is also used as a title if
      * a title cannot be found).
      */
-    public Map<String, String> findLinks(String in, String baseUrl) throws IOException {
+    public Map<String, String> findLinks(String in, String baseUrl) {
         return findLinks(Jsoup.parse(in), baseUrl);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/util/syndication/HtmlToPlainText.java
Patch:
@@ -42,7 +42,7 @@ public String getPlainText(Element element) {
     // the formatting rules, implemented in a breadth-first DOM traverse
     private static class FormattingVisitor implements NodeVisitor {
 
-        private StringBuilder accum = new StringBuilder(); // holds the accumulated text
+        private final StringBuilder accum = new StringBuilder(); // holds the accumulated text
 
         // hit when the node is first seen
         public void head(Node node, int depth) {

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/OggInputStream.java
Patch:
@@ -6,8 +6,8 @@
 import java.io.InputStream;
 import java.util.Arrays;
 
-public class OggInputStream extends InputStream {
-	private InputStream input;
+class OggInputStream extends InputStream {
+	private final InputStream input;
 
 	/** True if OggInputStream is currently inside an Ogg page. */
 	private boolean isInPage;

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/VorbisCommentHeader.java
Patch:
@@ -1,7 +1,7 @@
 package de.danoeh.antennapod.core.util.vorbiscommentreader;
-public class VorbisCommentHeader {
-	private String vendorString;
-	private long userCommentLength;
+class VorbisCommentHeader {
+	private final String vendorString;
+	private final long userCommentLength;
 
 	public VorbisCommentHeader(String vendorString, long userCommentLength) {
 		super();

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/HandlerState.java
Patch:
@@ -37,7 +37,7 @@ public class HandlerState {
     /**
      * Buffer for saving characters.
      */
-    protected StringBuffer contentBuf;
+    protected StringBuilder contentBuf;
 
     /**
      * Temporarily saved objects.
@@ -97,7 +97,7 @@ public SyndElement getThirdTag() {
         return third;
     }
 
-    public StringBuffer getContentBuf() {
+    public StringBuilder getContentBuf() {
         return contentBuf;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/SyndHandler.java
Patch:
@@ -33,7 +33,7 @@ public SyndHandler(Feed feed, TypeGetter.Type type) {
 	@Override
 	public void startElement(String uri, String localName, String qName,
 			Attributes attributes) throws SAXException {
-		state.contentBuf = new StringBuffer();
+		state.contentBuf = new StringBuilder();
 		Namespace handler = getHandlingNamespace(uri, qName);
 		if (handler != null) {
 			SyndElement element = handler.handleElementStart(localName, state,

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/ChapterReader.java
Patch:
@@ -43,7 +43,7 @@ public int onStartFrameHeader(FrameHeader header, InputStream input)
 						currentChapter = null;
 					}
 				}
-				StringBuffer elementId = new StringBuffer();
+				StringBuilder elementId = new StringBuilder();
 				readISOString(elementId, input, Integer.MAX_VALUE);
 				char[] startTimeSource = readBytes(input, 4);
 				long startTime = ((int) startTimeSource[0] << 24)
@@ -54,7 +54,7 @@ public int onStartFrameHeader(FrameHeader header, InputStream input)
 				return ID3Reader.ACTION_DONT_SKIP;
 			case FRAME_ID_TITLE:
 				if (currentChapter != null && currentChapter.getTitle() == null) {
-					StringBuffer title = new StringBuffer();
+					StringBuilder title = new StringBuilder();
 					readString(title, input, header.getSize());
 					currentChapter
 							.setTitle(title.toString());
@@ -67,7 +67,7 @@ public int onStartFrameHeader(FrameHeader header, InputStream input)
 				if (currentChapter != null) {
 					// skip description
 					int descriptionLength = readString(null, input, header.getSize());
-					StringBuffer link = new StringBuffer();
+					StringBuilder link = new StringBuilder();
 					readISOString(link, input, header.getSize() - descriptionLength);
 					String decodedLink = URLDecoder.decode(link.toString(), "UTF-8");
 

File: core/src/main/java/de/danoeh/antennapod/core/util/id3reader/ID3Reader.java
Patch:
@@ -170,7 +170,7 @@ private int unsynchsafe(int in) {
         return out;
     }
 
-	protected int readString(StringBuffer buffer, InputStream input, int max) throws IOException,
+	protected int readString(StringBuilder buffer, InputStream input, int max) throws IOException,
 			ID3ReaderException {
 		if (max > 0) {
 			char[] encoding = readBytes(input, 1);
@@ -191,7 +191,7 @@ protected int readString(StringBuffer buffer, InputStream input, int max) throws
 		}
 	}
 
-	protected int readISOString(StringBuffer buffer, InputStream input, int max)
+	protected int readISOString(StringBuilder buffer, InputStream input, int max)
 			throws IOException, ID3ReaderException {
 
 		int bytesRead = 0;
@@ -204,7 +204,7 @@ protected int readISOString(StringBuffer buffer, InputStream input, int max)
 		return bytesRead;
 	}
 
-	private int readUnicodeString(StringBuffer strBuffer, InputStream input, int max, Charset charset)
+	private int readUnicodeString(StringBuilder strBuffer, InputStream input, int max, Charset charset)
 			throws IOException, ID3ReaderException {
 		byte[] buffer = new byte[max];
         int c, cZero = -1;

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -77,7 +77,7 @@ public abstract class MediaplayerInfoActivity extends MediaplayerActivity implem
     private static final int POS_CHAPTERS = 2;
     private static final int NUM_CONTENT_FRAGMENTS = 3;
 
-    final String TAG = "MediaplayerInfoActivity";
+    final static String TAG = "MediaplayerInfoActivity";
     private static final String PREFS = "AudioPlayerActivityPreferences";
     private static final String PREF_KEY_SELECTED_FRAGMENT_POSITION = "selectedFragmentPosition";
 

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -29,7 +29,7 @@
 /** Displays a list of DownloadStatus entries. */
 public class DownloadLogAdapter extends BaseAdapter {
 
-	private final String TAG = "DownloadLogAdapter";
+	private static final String TAG = "DownloadLogAdapter";
 
 	private Context context;
 

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -32,7 +32,7 @@
 
 public class EpisodesApplyActionFragment extends Fragment {
 
-    public String TAG = "EpisodeActionFragment";
+    public static final String TAG = "EpisodeActionFragment";
 
     public static final int ACTION_QUEUE = 1;
     public static final int ACTION_MARK_PLAYED = 2;

File: core/src/main/java/de/danoeh/antennapod/core/export/html/HtmlSymbols.java
Patch:
@@ -22,7 +22,7 @@ class HtmlSymbols extends CommonSymbols {
     static final String ORDERED_LIST = "ol";
     static final String LIST_ITEM = "li";
 
-    static String HEADING = "h1";
+    static final String HEADING = "h1";
 
     static final String LINK = "a";
     static final String LINK_DESTINATION = "href";

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -124,7 +124,7 @@ public class UserPreferences {
     private static final int NOTIFICATION_BUTTON_REWIND = 0;
     private static final int NOTIFICATION_BUTTON_FAST_FORWARD = 1;
     private static final int NOTIFICATION_BUTTON_SKIP = 2;
-    private static int EPISODE_CACHE_SIZE_UNLIMITED = -1;
+    private static final int EPISODE_CACHE_SIZE_UNLIMITED = -1;
     public static final int FEED_ORDER_COUNTER = 0;
     public static final int FEED_ORDER_ALPHABETICAL = 1;
     public static final int FEED_ORDER_LAST_UPDATE = 2;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -127,8 +127,8 @@ public class DownloadService extends Service {
 
 
     private NotificationCompat.Builder notificationCompatBuilder;
-    private int NOTIFICATION_ID = 2;
-    private int REPORT_ID = 3;
+    private static final int NOTIFICATION_ID = 2;
+    private static final int REPORT_ID = 3;
 
     /**
      * Currently running downloads.
@@ -611,7 +611,7 @@ private class FeedSyncThread extends Thread {
         private volatile boolean isActive = true;
         private volatile boolean isCollectingRequests = false;
 
-        private final long WAIT_TIMEOUT = 3000;
+        private static final long WAIT_TIMEOUT = 3000;
 
 
         /**

File: app/src/main/java/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -379,7 +379,7 @@ private void updateAutoDownloadSettings() {
         }
     }
 
-    private class ApplyToEpisodesDialog extends ConfirmationDialog {
+    private static class ApplyToEpisodesDialog extends ConfirmationDialog {
 
         private final Feed feed;
         private final boolean autoDownload;

File: app/src/main/java/de/danoeh/antennapod/adapter/itunes/ItunesAdapter.java
Patch:
@@ -162,7 +162,7 @@ public static Podcast fromToplist(JSONObject json) throws JSONException {
     /**
      * View holder object for the GridView
      */
-    class PodcastViewHolder {
+    static class PodcastViewHolder {
 
         /**
          * ImageView holding the Podcast image

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadsFragment.java
Patch:
@@ -78,7 +78,7 @@ public void onStart() {
         viewPager.setCurrentItem(lastPosition);
     }
 
-    public class DownloadsPagerAdapter extends FragmentPagerAdapter {
+    public static class DownloadsPagerAdapter extends FragmentPagerAdapter {
 
         Resources resources;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -950,7 +950,7 @@ private void writeFileUrl(DownloadRequest request) {
      * <p/>
      * Currently, this handler only handles FeedMedia objects, because Feeds and FeedImages are deleted if the download fails.
      */
-    private class FailedDownloadHandler implements Runnable {
+    private static class FailedDownloadHandler implements Runnable {
 
         private DownloadRequest request;
         private DownloadStatus status;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -314,7 +314,7 @@ public static String encodeCredentials(String username, String password, String
         }
     }
 
-    private class BasicAuthorizationInterceptor implements Interceptor {
+    private static class BasicAuthorizationInterceptor implements Interceptor {
 
         private DownloadRequest downloadRequest;
 

File: core/src/main/java/de/danoeh/antennapod/core/util/syndication/HtmlToPlainText.java
Patch:
@@ -40,7 +40,7 @@ public String getPlainText(Element element) {
     }
 
     // the formatting rules, implemented in a breadth-first DOM traverse
-    private class FormattingVisitor implements NodeVisitor {
+    private static class FormattingVisitor implements NodeVisitor {
 
         private StringBuilder accum = new StringBuilder(); // holds the accumulated text
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -382,8 +382,8 @@ public static Future<?> addQueueItem(final Context context, final boolean perfor
                                 // add item to either front ot back of queue
                                 boolean addToFront = UserPreferences.enqueueAtFront();
                                 if (addToFront) {
-                                    queue.add(0 + i, item);
-                                    events.add(QueueEvent.added(item, 0 + i));
+                                    queue.add(i, item);
+                                    events.add(QueueEvent.added(item, i));
                                 } else {
                                     queue.add(item);
                                     events.add(QueueEvent.added(item, queue.size() - 1));

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -38,14 +38,14 @@ private void authenticate() throws GpodnetServiceException {
 
     public void testUploadSubscription() throws GpodnetServiceException {
         authenticate();
-        ArrayList<String> l = new ArrayList<String>();
+        ArrayList<String> l = new ArrayList<>();
         l.add("http://bitsundso.de/feed");
         service.uploadSubscriptions(USER, "radio", l);
     }
 
     public void testUploadSubscription2() throws GpodnetServiceException {
         authenticate();
-        ArrayList<String> l = new ArrayList<String>();
+        ArrayList<String> l = new ArrayList<>();
         l.add("http://bitsundso.de/feed");
         l.add("http://gamesundso.de/feed");
         service.uploadSubscriptions(USER, "radio", l);

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -165,7 +165,7 @@ private Feed createTestFeed(int numItems, boolean withImage, boolean withFeedMed
         Feed feed = new Feed(0, null, "title", "http://example.com", "This is the description",
                 "http://example.com/payment", "Daniel", "en", null, "http://example.com/feed", image, file.getAbsolutePath(),
                 "http://example.com/feed", true);
-        feed.setItems(new ArrayList<FeedItem>());
+        feed.setItems(new ArrayList<>());
 
         for (int i = 0; i < numItems; i++) {
             FeedItem item = new FeedItem(0, "item-" + i, "http://example.com/item-" + i,

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -145,9 +145,9 @@ public void testPerformAutoCleanupHandleUnplayed() throws IOException {
         final int NUM_ITEMS = EPISODE_CACHE_SIZE * 2;
 
         Feed feed = new Feed("url", null, "title");
-        List<FeedItem> items = new ArrayList<FeedItem>();
+        List<FeedItem> items = new ArrayList<>();
         feed.setItems(items);
-        List<File> files = new ArrayList<File>();
+        List<File> files = new ArrayList<>();
         populateItems(NUM_ITEMS, feed, items, files, FeedItem.UNPLAYED, false, false);
 
         DBTasks.performAutoCleanup(context);

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -100,7 +100,7 @@ public void testUpdateFeedUpdatedFeed() {
         assertTrue(feed.getId() != 0);
         final long feedID = feed.getId();
         feed.setId(0);
-        List<Long> itemIDs = new ArrayList<Long>();
+        List<Long> itemIDs = new ArrayList<>();
         for (FeedItem item : feed.getItems()) {
             assertTrue(item.getId() != 0);
             itemIDs.add(item.getId());

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -57,7 +57,7 @@ public class UITestUtils {
     private File hostedFeedDir;
     private File hostedMediaDir;
 
-    public List<Feed> hostedFeeds = new ArrayList<Feed>();
+    public List<Feed> hostedFeeds = new ArrayList<>();
 
     public UITestUtils(Context context) {
         this.context = context;
@@ -147,7 +147,7 @@ public void addHostedFeedData() throws IOException {
             image.setOwner(feed);
 
             // create items
-            List<FeedItem> items = new ArrayList<FeedItem>();
+            List<FeedItem> items = new ArrayList<>();
             for (int j = 0; j < NUM_ITEMS_PER_FEED; j++) {
                 FeedItem item = new FeedItem(j, "Feed " + (i+1) + ": Item " + (j+1), "item" + j,
                         "http://example.com/feed" + i + "/item/" + j, new Date(), FeedItem.UNPLAYED, feed);

File: app/src/androidTest/java/de/test/antennapod/util/service/download/HTTPBin.java
Patch:
@@ -49,7 +49,7 @@ public class HTTPBin extends NanoHTTPD {
 
     public HTTPBin() {
         super(PORT);
-        this.servedFiles = new ArrayList<File>();
+        this.servedFiles = new ArrayList<>();
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -97,7 +97,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private List<String> getTitleList() {
-        List<String> result = new ArrayList<String>();
+        List<String> result = new ArrayList<>();
         if (OpmlImportHolder.getReadElements() != null) {
             for (OpmlElement element : OpmlImportHolder.getReadElements()) {
                 result.add(element.getText());

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -116,7 +116,7 @@ public static void clickUrl(Context context, String url)
 
     public static List<Flattr> retrieveFlattredThings()
             throws FlattrException {
-        ArrayList<Flattr> myFlattrs = new ArrayList<Flattr>();
+        ArrayList<Flattr> myFlattrs = new ArrayList<>();
 
         if (hasToken()) {
             FlattrService fs = FlattrServiceCreator.getService(retrieveToken());

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -382,6 +382,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             } else {
                 startActivity(intent);
             }
+            finish();
             return true;
         } else {
             if (media != null) {

File: app/src/main/java/de/danoeh/antennapod/view/AspectRatioVideoView.java
Patch:
@@ -109,6 +109,7 @@ public void setVideoSize(int videoWidth, int videoHeight) {
     public void setAvailableSize(float width, float height) {
         mAvailableWidth = width;
         mAvailableHeight = height;
+        requestLayout();
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/view/AspectRatioVideoView.java
Patch:
@@ -109,8 +109,6 @@ public void setVideoSize(int videoWidth, int videoHeight) {
     public void setAvailableSize(float width, float height) {
         mAvailableWidth = width;
         mAvailableHeight = height;
-        requestLayout();
-        invalidate();
     }
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -83,7 +83,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         } else {
             Log.e(TAG, "Received invalid intent: action argument is null");
         }
-        return START_FLAG_REDELIVERY;
+        return START_STICKY;
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -17,6 +17,7 @@
 import com.bumptech.glide.Glide;
 
 import de.danoeh.antennapod.R;
+import de.danoeh.antennapod.core.feed.MediaType;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.util.Converter;
@@ -61,7 +62,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             if (controller != null && controller.getMedia() != null) {
                 Intent intent = PlaybackService.getPlayerActivityIntent(getActivity(), controller.getMedia());
 
-                if (Build.VERSION.SDK_INT >= 16) {
+                if (Build.VERSION.SDK_INT >= 16 && controller.getMedia().getMediaType() == MediaType.AUDIO) {
                     ActivityOptionsCompat options = ActivityOptionsCompat.
                             makeSceneTransitionAnimation(getActivity(), imgvCover, "coverTransition");
                     startActivity(intent, options.toBundle());

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -17,6 +17,7 @@
 import com.bumptech.glide.Glide;
 
 import de.danoeh.antennapod.R;
+import de.danoeh.antennapod.core.feed.MediaType;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.util.Converter;
@@ -61,7 +62,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             if (controller != null && controller.getMedia() != null) {
                 Intent intent = PlaybackService.getPlayerActivityIntent(getActivity(), controller.getMedia());
 
-                if (Build.VERSION.SDK_INT >= 16) {
+                if (Build.VERSION.SDK_INT >= 16 && controller.getMedia().getMediaType() == MediaType.AUDIO) {
                     ActivityOptionsCompat options = ActivityOptionsCompat.
                             makeSceneTransitionAnimation(getActivity(), imgvCover, "coverTransition");
                     startActivity(intent, options.toBundle());

File: core/src/main/java/de/danoeh/antennapod/core/feed/Chapter.java
Patch:
@@ -27,11 +27,13 @@ public Chapter(long start, String title, FeedItem item, String link) {
 	}
 
 	public static Chapter fromCursor(Cursor cursor, FeedItem item) {
+		int indexId = cursor.getColumnIndex(PodDBAdapter.KEY_ID);
 		int indexTitle = cursor.getColumnIndex(PodDBAdapter.KEY_TITLE);
 		int indexStart = cursor.getColumnIndex(PodDBAdapter.KEY_START);
 		int indexLink = cursor.getColumnIndex(PodDBAdapter.KEY_LINK);
 		int indexChapterType = cursor.getColumnIndex(PodDBAdapter.KEY_CHAPTER_TYPE);
 
+		long id = cursor.getLong(indexId);
 		String title = cursor.getString(indexTitle);
 		long start = cursor.getLong(indexStart);
 		String link = cursor.getString(indexLink);
@@ -49,6 +51,7 @@ public static Chapter fromCursor(Cursor cursor, FeedItem item) {
 				chapter = new VorbisCommentChapter(start, title, item, link);
 				break;
 		}
+		chapter.setId(id);
 		return chapter;
 	}
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -1,6 +1,7 @@
 package de.danoeh.antennapod.core.feed;
 
 import android.database.Cursor;
+import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
 import org.apache.commons.lang3.builder.ToStringBuilder;

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -976,7 +976,9 @@ public void run() {
             media.checkEmbeddedPicture(); // enforce check
 
             // check if file has chapters
-            ChapterUtils.loadChaptersFromFileUrl(media);
+            if(media.getItem() != null && !media.getItem().hasChapters()) {
+                ChapterUtils.loadChaptersFromFileUrl(media);
+            }
 
             // Get duration
             MediaMetadataRetriever mmr = new MediaMetadataRetriever();

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromPathActivity.java
Patch:
@@ -51,11 +51,10 @@ protected void onCreate(Bundle savedInstanceState) {
         int nextOption = 1;
         String optionLabel = getString(R.string.opml_import_option);
         intentPickAction = new Intent(Intent.ACTION_PICK);
-        intentPickAction.setData(Uri.parse("file://"));
 
         if(!IntentUtils.isCallable(getApplicationContext(), intentPickAction)) {
             intentPickAction.setData(null);
-            if(false == IntentUtils.isCallable(getApplicationContext(), intentPickAction)) {
+            if(!IntentUtils.isCallable(getApplicationContext(), intentPickAction)) {
                 txtvHeaderExplanation1.setVisibility(View.GONE);
                 txtvExplanation1.setVisibility(View.GONE);
                 findViewById(R.id.divider1).setVisibility(View.GONE);

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -454,7 +454,7 @@ public void onConfirmed(boolean autoFlattrEnabled, float autoFlattrValue) {
             emailIntent.putExtra(Intent.EXTRA_SUBJECT, "AntennaPod Crash Report");
             emailIntent.putExtra(Intent.EXTRA_TEXT, "Please describe what you were doing when the app crashed");
             // the attachment
-            Uri fileUri = FileProvider.getUriForFile(context, "de.danoeh.antennapod.provider",
+            Uri fileUri = FileProvider.getUriForFile(context, context.getString(R.string.provider_authority),
                     CrashReportWriter.getFile());
             emailIntent.putExtra(Intent.EXTRA_STREAM, fileUri);
             emailIntent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);

File: core/src/main/java/de/danoeh/antennapod/core/util/ShareUtils.java
Patch:
@@ -72,7 +72,7 @@ public static void shareFeedItemDownloadLink(Context context, FeedItem item, boo
 	public static void shareFeedItemFile(Context context, FeedMedia media) {
 		Intent i = new Intent(Intent.ACTION_SEND);
 		i.setType(media.getMime_type());
-		Uri fileUri = FileProvider.getUriForFile(context, "de.danoeh.antennapod.provider",
+		Uri fileUri = FileProvider.getUriForFile(context, context.getString(R.string.provider_authority),
 				new File(media.getLocalMediaUrl()));
 		i.putExtra(Intent.EXTRA_STREAM,  fileUri);
 		i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
@@ -84,6 +84,6 @@ public static void shareFeedItemFile(Context context, FeedMedia media) {
 			}
 		}
 		context.startActivity(Intent.createChooser(i, context.getString(R.string.share_file_label)));
-		Log.e(TAG, "Foo");
+		Log.e(TAG, "shareFeedItemFile called");
 	}
 }

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -454,7 +454,7 @@ public void onConfirmed(boolean autoFlattrEnabled, float autoFlattrValue) {
             emailIntent.putExtra(Intent.EXTRA_SUBJECT, "AntennaPod Crash Report");
             emailIntent.putExtra(Intent.EXTRA_TEXT, "Please describe what you were doing when the app crashed");
             // the attachment
-            Uri fileUri = FileProvider.getUriForFile(context, "de.danoeh.antennapod.provider",
+            Uri fileUri = FileProvider.getUriForFile(context, context.getString(R.string.provider_authority),
                     CrashReportWriter.getFile());
             emailIntent.putExtra(Intent.EXTRA_STREAM, fileUri);
             emailIntent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);

File: core/src/main/java/de/danoeh/antennapod/core/util/ShareUtils.java
Patch:
@@ -72,7 +72,7 @@ public static void shareFeedItemDownloadLink(Context context, FeedItem item, boo
 	public static void shareFeedItemFile(Context context, FeedMedia media) {
 		Intent i = new Intent(Intent.ACTION_SEND);
 		i.setType(media.getMime_type());
-		Uri fileUri = FileProvider.getUriForFile(context, "de.danoeh.antennapod.provider",
+		Uri fileUri = FileProvider.getUriForFile(context, context.getString(R.string.provider_authority),
 				new File(media.getLocalMediaUrl()));
 		i.putExtra(Intent.EXTRA_STREAM,  fileUri);
 		i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
@@ -84,6 +84,6 @@ public static void shareFeedItemFile(Context context, FeedMedia media) {
 			}
 		}
 		context.startActivity(Intent.createChooser(i, context.getString(R.string.share_file_label)));
-		Log.e(TAG, "Foo");
+		Log.e(TAG, "shareFeedItemFile called");
 	}
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -345,9 +345,7 @@ private String getMediafilename(FeedMedia media) {
         // Try to generate the filename by the item title
         if (media.getItem() != null && media.getItem().getTitle() != null) {
             String title = media.getItem().getTitle();
-            // Delete reserved characters
-            titleBaseFilename = title.replaceAll("[^a-zA-Z0-9 ._()-]", "");
-            titleBaseFilename = titleBaseFilename.trim();
+            titleBaseFilename = FileNameGenerator.generateFileName(title);
         }
 
         String URLBaseFilename = URLUtil.guessFileName(media.getDownload_url(),

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -759,7 +759,7 @@ private void buildAutodownloadSelectedNetworsPreference() {
             clearAutodownloadSelectedNetworsPreference();
         }
         // get configured networks
-        WifiManager wifiservice = (WifiManager) activity.getSystemService(Context.WIFI_SERVICE);
+        WifiManager wifiservice = (WifiManager) activity.getApplicationContext().getSystemService(Context.WIFI_SERVICE);
         List<WifiConfiguration> networks = wifiservice.getConfiguredNetworks();
 
         if (networks != null) {

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -759,7 +759,7 @@ private void buildAutodownloadSelectedNetworsPreference() {
             clearAutodownloadSelectedNetworsPreference();
         }
         // get configured networks
-        WifiManager wifiservice = (WifiManager) activity.getSystemService(Context.WIFI_SERVICE);
+        WifiManager wifiservice = (WifiManager) activity.getApplicationContext().getSystemService(Context.WIFI_SERVICE);
         List<WifiConfiguration> networks = wifiservice.getConfiguredNetworks();
 
         if (networks != null) {

File: app/src/play/java/de/danoeh/antennapod/dialog/CustomMRControllerDialog.java
Patch:
@@ -354,14 +354,15 @@ private void updateViews() {
 
         boolean showTitle = false;
         boolean showSubtitle = false;
-        if (route.getPresentationDisplayId() != MediaRouter.RouteInfo.PRESENTATION_DISPLAY_ID_NONE) {
+        if (route.getPresentationDisplay() != null &&
+                route.getPresentationDisplay().getDisplayId() != MediaRouter.RouteInfo.PRESENTATION_DISPLAY_ID_NONE) {
             // The user is currently casting screen.
             titleView.setText(android.support.v7.mediarouter.R.string.mr_controller_casting_screen);
             showTitle = true;
         } else if (state == null || state.getState() == PlaybackStateCompat.STATE_NONE) {
             // Show "No media selected" as we don't yet know the playback state.
             // (Only exception is bluetooth where we don't show anything.)
-            if (!route.isDeviceTypeBluetooth()) {
+            if (!route.isBluetooth()) {
                 titleView.setText(android.support.v7.mediarouter.R.string.mr_controller_no_media_selected);
                 showTitle = true;
             }

File: app/src/main/java/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -228,7 +228,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     cbxAutoDownload.setChecked(prefs.getAutoDownload());
                     cbxAutoDownload.setOnCheckedChangeListener((compoundButton, checked) -> {
                         feed.getPreferences().setAutoDownload(checked);
-                        feed.savePreferences(FeedInfoActivity.this);
+                        feed.savePreferences();
                         updateAutoDownloadSettings();
                         ApplyToEpisodesDialog dialog = new ApplyToEpisodesDialog(FeedInfoActivity.this,
                                 feed, checked);
@@ -237,7 +237,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     cbxKeepUpdated.setChecked(prefs.getKeepUpdated());
                     cbxKeepUpdated.setOnCheckedChangeListener((compoundButton, checked) -> {
                         feed.getPreferences().setKeepUpdated(checked);
-                        feed.savePreferences(FeedInfoActivity.this);
+                        feed.savePreferences();
                     });
                     spnAutoDelete.setOnItemSelectedListener(new OnItemSelectedListener() {
                         @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -177,6 +177,9 @@ public static FeedItem fromCursor(Cursor cursor) {
 
     public void updateFromOther(FeedItem other) {
         super.updateFromOther(other);
+        if (other.image != null) {
+            this.image = other.image;
+        }
         if (other.title != null) {
             title = other.title;
         }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -461,6 +461,7 @@ private void handleStatus() {
                 checkMediaInfoLoaded();
                 postStatusMsg(R.string.player_ready_msg, false);
                 updatePlayButtonAppearance(playResource, playText);
+                onPositionObserverUpdate();
                 break;
             case SEEKING:
                 onPositionObserverUpdate();

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -461,6 +461,7 @@ private void handleStatus() {
                 checkMediaInfoLoaded();
                 postStatusMsg(R.string.player_ready_msg, false);
                 updatePlayButtonAppearance(playResource, playText);
+                onPositionObserverUpdate();
                 break;
             case SEEKING:
                 onPositionObserverUpdate();

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/GpodnetService.java
Patch:
@@ -568,7 +568,9 @@ private String executeRequest(@NonNull Request.Builder requestB)
             e.printStackTrace();
             throw new GpodnetServiceException(e);
         } finally {
-            body.close();
+            if (body != null) {
+                body.close();
+            }
         }
         return responseString;
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -80,6 +80,7 @@ public class AllEpisodesFragment extends Fragment {
     private boolean viewsCreated = false;
 
     private boolean isUpdatingFeeds;
+    protected boolean isMenuInvalidationAllowed = false;
 
     protected Subscription subscription;
     private LinearLayoutManager layoutManager;
@@ -430,7 +431,7 @@ public void onEventMainThread(DownloadEvent event) {
         Log.d(TAG, "onEventMainThread() called with: " + "event = [" + event + "]");
         DownloaderUpdate update = event.update;
         downloaderList = update.downloaders;
-        if (isUpdatingFeeds != update.feedIds.length > 0) {
+        if (isMenuInvalidationAllowed && isUpdatingFeeds != update.feedIds.length > 0) {
                 getActivity().supportInvalidateOptionsMenu();
         }
         if(listAdapter != null && update.mediaIds.length > 0) {

File: core/src/main/java/de/danoeh/antennapod/core/util/URLChecker.java
Patch:
@@ -37,6 +37,9 @@ public static String prepareURL(String url) {
         } else if (url.startsWith("pcast://")) {
             if (BuildConfig.DEBUG) Log.d(TAG, "Removing pcast://");
             return prepareURL(url.substring("pcast://".length()));
+        } else if (url.startsWith("pcast:")) {
+            if (BuildConfig.DEBUG) Log.d(TAG, "Removing pcast:");
+            return prepareURL(url.substring("pcast:".length()));
         } else if (url.startsWith("itpc")) {
             if (BuildConfig.DEBUG) Log.d(TAG, "Replacing itpc:// with http://");
             return url.replaceFirst("itpc://", "http://");

File: core/src/main/java/de/danoeh/antennapod/core/util/URLChecker.java
Patch:
@@ -37,6 +37,9 @@ public static String prepareURL(String url) {
         } else if (url.startsWith("pcast://")) {
             if (BuildConfig.DEBUG) Log.d(TAG, "Removing pcast://");
             return prepareURL(url.substring("pcast://".length()));
+        } else if (url.startsWith("pcast:")) {
+            if (BuildConfig.DEBUG) Log.d(TAG, "Removing pcast:");
+            return prepareURL(url.substring("pcast:".length()));
         } else if (url.startsWith("itpc")) {
             if (BuildConfig.DEBUG) Log.d(TAG, "Replacing itpc:// with http://");
             return url.replaceFirst("itpc://", "http://");

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -28,7 +28,8 @@ public static Date parse(final String input) {
         String date = input.trim().replace('/', '-').replaceAll("( ){2,}+", " ");
 
         // CEST is widely used but not in the "ISO 8601 Time zone" list. Let's hack around.
-        date = date.replaceAll("CEST$", "+01:00");
+        date = date.replaceAll("CEST$", "+02:00");
+        date = date.replaceAll("CET$", "+01:00");
 
         // if datetime is more precise than seconds, make sure the value is in ms
         if (date.contains(".")) {

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -28,7 +28,8 @@ public static Date parse(final String input) {
         String date = input.trim().replace('/', '-').replaceAll("( ){2,}+", " ");
 
         // CEST is widely used but not in the "ISO 8601 Time zone" list. Let's hack around.
-        date = date.replaceAll("CEST$", "+01:00");
+        date = date.replaceAll("CEST$", "+02:00");
+        date = date.replaceAll("CET$", "+01:00");
 
         // if datetime is more precise than seconds, make sure the value is in ms
         if (date.contains(".")) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -1051,7 +1051,8 @@ public void run() {
 
                 DBWriter.setFeedMedia(media).get();
 
-                if (item != null && !DBTasks.isInQueue(DownloadService.this, item.getId())) {
+                if (item != null && UserPreferences.enqueueDownloadedEpisodes() &&
+                        !DBTasks.isInQueue(DownloadService.this, item.getId())) {
                     DBWriter.addQueueItem(DownloadService.this, item).get();
                 }
             } catch (ExecutionException | InterruptedException e) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -612,7 +612,8 @@ public void statusChanged(PlaybackServiceMediaPlayer.PSMPInfo newInfo) {
                     setupNotification(newInfo);
                     started = true;
                     // set sleep timer if auto-enabled
-                    if(SleepTimerPreferences.autoEnable() && !sleepTimerActive()) {
+                    if(newInfo.oldPlayerStatus != null && newInfo.oldPlayerStatus != PlayerStatus.SEEKING &&
+                        SleepTimerPreferences.autoEnable() && !sleepTimerActive()) {
                         setSleepTimer(SleepTimerPreferences.timerMillis(), SleepTimerPreferences.shakeToReset(),
                                 SleepTimerPreferences.vibrate());
                     }

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceFlavorHelper.java
Patch:
@@ -131,7 +131,8 @@ public void onDisconnected() {
                     info = mediaPlayer.getPSMPInfo();
                 }
                 if (info == null) {
-                    info = new PlaybackServiceMediaPlayer.PSMPInfo(PlayerStatus.STOPPED, null);
+                    info = new PlaybackServiceMediaPlayer.PSMPInfo(PlayerStatus.INDETERMINATE,
+                            PlayerStatus.STOPPED, null);
                 }
                 switchMediaPlayer(new LocalPSMP(context, callback.getMediaPlayerCallback()),
                         info, true);
@@ -166,7 +167,7 @@ private void onCastAppConnected(Context context, boolean wasLaunched) {
             }
         }
         if (info == null) {
-            info = new PlaybackServiceMediaPlayer.PSMPInfo(PlayerStatus.STOPPED, null);
+            info = new PlaybackServiceMediaPlayer.PSMPInfo(PlayerStatus.INDETERMINATE, PlayerStatus.STOPPED, null);
         }
         callback.sendNotificationBroadcast(PlaybackService.NOTIFICATION_TYPE_RELOAD,
                 PlaybackService.EXTRA_CODE_CAST);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1342,7 +1342,7 @@ private void bluetoothNotifyChange(PlaybackServiceMediaPlayer.PSMPInfo info, Str
 
         if (info.playable != null) {
             Intent i = new Intent(whatChanged);
-            i.putExtra("id", 1);
+            i.putExtra("id", 1L);
             i.putExtra("artist", "");
             i.putExtra("album", info.playable.getFeedTitle());
             i.putExtra("track", info.playable.getEpisodeTitle());
@@ -1351,8 +1351,8 @@ private void bluetoothNotifyChange(PlaybackServiceMediaPlayer.PSMPInfo info, Str
             if (queue != null) {
                 i.putExtra("ListSize", queue.size());
             }
-            i.putExtra("duration", info.playable.getDuration());
-            i.putExtra("position", info.playable.getPosition());
+            i.putExtra("duration", (long) info.playable.getDuration());
+            i.putExtra("position", (long) info.playable.getPosition());
             sendBroadcast(i);
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSRSS20.java
Patch:
@@ -56,7 +56,9 @@ public SyndElement handleElementStart(String localName, HandlerState state,
 			boolean validType = false;
 			boolean validUrl = !TextUtils.isEmpty(url);
 
-			if (type == null) {
+			if(SyndTypeUtils.enclosureTypeValid(type)) {
+				validType = true;
+			} else {
 				type = SyndTypeUtils.getMimeTypeFromUrl(url);
 			}
 

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -355,7 +355,7 @@ public void call(Subscriber<? super FeedHandlerResult> subscriber) {
      */
     private void beforeShowFeedInformation(Feed feed) {
         final HtmlToPlainText formatter = new HtmlToPlainText();
-        if(Feed.TYPE_ATOM1.equals(feed.getType())) {
+        if(Feed.TYPE_ATOM1.equals(feed.getType()) && feed.getDescription() != null) {
             // remove HTML tags from descriptions
             Log.d(TAG, "Removing HTML from feed description");
             Document feedDescription = Jsoup.parse(feed.getDescription());

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -1063,7 +1063,7 @@ public static NavDrawerData getNavDrawerData() {
                     // reverse natural order: podcast with most unplayed episodes first
                     return -1;
                 } else if(counterLhs == counterRhs) {
-                    return lhs.getTitle().toLowerCase().compareTo(rhs.getTitle().toLowerCase());
+                    return lhs.getTitle().compareToIgnoreCase(rhs.getTitle());
                 } else {
                     return 1;
                 }
@@ -1077,7 +1077,7 @@ public static NavDrawerData getNavDrawerData() {
                 } else if(t2 == null) {
                     return -1;
                 } else {
-                    return t1.toLowerCase().compareTo(t2.toLowerCase());
+                    return t1.compareToIgnoreCase(t2);
                 }
             };
         } else {

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/NSAtom.java
Patch:
@@ -220,7 +220,7 @@ public void handleElementEnd(String localName, HandlerState state) {
                 if (currentName == null) {
                     state.getFeed().setAuthor(content);
                 } else {
-                    state.getFeed().setAuthor(currentName + "\n" + content);
+                    state.getFeed().setAuthor(currentName + ", " + content);
                 }
             }
         }

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSRSS20.java
Patch:
@@ -56,7 +56,9 @@ public SyndElement handleElementStart(String localName, HandlerState state,
 			boolean validType = false;
 			boolean validUrl = !TextUtils.isEmpty(url);
 
-			if (type == null) {
+			if(SyndTypeUtils.enclosureTypeValid(type)) {
+				validType = true;
+			} else {
 				type = SyndTypeUtils.getMimeTypeFromUrl(url);
 			}
 

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -355,7 +355,7 @@ public void call(Subscriber<? super FeedHandlerResult> subscriber) {
      */
     private void beforeShowFeedInformation(Feed feed) {
         final HtmlToPlainText formatter = new HtmlToPlainText();
-        if(Feed.TYPE_ATOM1.equals(feed.getType())) {
+        if(Feed.TYPE_ATOM1.equals(feed.getType()) && feed.getDescription() != null) {
             // remove HTML tags from descriptions
             Log.d(TAG, "Removing HTML from feed description");
             Document feedDescription = Jsoup.parse(feed.getDescription());

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -228,6 +228,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             case R.id.check_has_media:
                 checkWithMedia();
                 resId = R.string.selected_has_media_label;
+                break;
             case R.id.sort_title_a_z:
                 sortByTitle(false);
                 return true;

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceMediaPlayerTest.java
Patch:
@@ -789,7 +789,7 @@ public boolean onMediaPlayerError(Object inObj, int what, int extra) {
         }
 
         @Override
-        public void onPostPlayback(@NonNull Playable media, boolean ended, boolean playingNext) {
+        public void onPostPlayback(@NonNull Playable media, boolean ended, boolean skipped, boolean playingNext) {
 
         }
 

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportBaseActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Environment;
 import android.support.annotation.Nullable;
 import android.support.v4.app.ActivityCompat;
@@ -76,7 +77,8 @@ protected void importUri(@Nullable Uri uri) {
             return;
         }
 		this.uri = uri;
-        if(uri.toString().contains(Environment.getExternalStorageDirectory().toString())) {
+        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M &&
+				uri.toString().contains(Environment.getExternalStorageDirectory().toString())) {
             int permission = ActivityCompat.checkSelfPermission(this, android.Manifest.permission.READ_EXTERNAL_STORAGE);
             if (permission != PackageManager.PERMISSION_GRANTED) {
                 requestPermission();

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonUtils.java
Patch:
@@ -47,6 +47,7 @@ public ActionButtonUtils(Context context) {
      * Sets the displayed bitmap and content description of the given
      * action button so that it matches the state of the FeedItem.
      */
+    @SuppressWarnings("ResourceType")
     public void configureActionButton(ImageButton butSecondary, FeedItem item, boolean isInQueue) {
         Validate.isTrue(butSecondary != null && item != null, "butSecondary or item was null");
 
@@ -57,8 +58,7 @@ public void configureActionButton(ImageButton butSecondary, FeedItem item, boole
                 if (isDownloadingMedia) {
                     // item is being downloaded
                     butSecondary.setVisibility(View.VISIBLE);
-                    butSecondary.setImageDrawable(drawables
-                            .getDrawable(1));
+                    butSecondary.setImageDrawable(drawables.getDrawable(1));
                     butSecondary.setContentDescription(context.getString(labels[1]));
                 } else {
                     // item is not downloaded and not being downloaded

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -87,6 +87,7 @@ public FeedItem getItem(int position) {
     }
 
     @Override
+    @SuppressWarnings("ResourceType")
     public View getView(final int position, View convertView, ViewGroup parent) {
         Holder holder;
         final FeedItem item = getItem(position);

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -28,6 +28,7 @@ public static void adjustTextColor(Context context, SearchView sv) {
         }
     }
 
+    @SuppressWarnings("ResourceType")
     public static void refreshLockItem(Context context, Menu menu) {
         final MenuItem queueLock = menu.findItem(de.danoeh.antennapod.R.id.queue_lock);
         int[] lockIcons = new int[] { de.danoeh.antennapod.R.attr.ic_lock_open, de.danoeh.antennapod.R.attr.ic_lock_closed };

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -383,6 +383,9 @@ private void seekToSync(int t) {
             statusBeforeSeeking = playerStatus;
             setPlayerStatus(PlayerStatus.SEEKING, media, getPosition());
             mediaPlayer.seekTo(t);
+            if (statusBeforeSeeking == PlayerStatus.PREPARED) {
+                media.setPosition(t);
+            }
             try {
                 seekLatch.await(3, TimeUnit.SECONDS);
             } catch (InterruptedException e) {

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -46,6 +46,7 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.storage.DBReader;
+import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.util.FeedItemUtil;
 import de.danoeh.antennapod.core.util.Flavors;
@@ -463,6 +464,7 @@ protected void onPause() {
     protected void onResume() {
         super.onResume();
         StorageUtils.checkStorageAvailability(this);
+        DBTasks.checkShouldRefreshFeeds(getApplicationContext());
 
         Intent intent = getIntent();
         if (intent.hasExtra(EXTRA_FEED_ID) ||

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -43,6 +43,7 @@
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.service.playback.PlayerStatus;
 import de.danoeh.antennapod.core.storage.DBReader;
+import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.util.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
@@ -168,6 +169,7 @@ protected void onResume() {
             pagerAdapter.onMediaChanged(media);
             pagerAdapter.setController(controller);
         }
+        DBTasks.checkShouldRefreshFeeds(getApplicationContext());
 
         EventDistributor.getInstance().register(contentUpdate);
         loadData();

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -400,7 +400,7 @@ public static int getImageCacheSize() {
         return cacheSizeMB;
     }
 
-    public static int getFastFowardSecs() {
+    public static int getFastForwardSecs() {
         return prefs.getInt(PREF_FAST_FORWARD_SECS, 30);
     }
 
@@ -465,13 +465,13 @@ public static boolean isQueueLocked() {
         return prefs.getBoolean(PREF_QUEUE_LOCKED, false);
     }
 
-    public static void setPrefFastForwardSecs(int secs) {
+    public static void setFastForwardSecs(int secs) {
         prefs.edit()
              .putInt(PREF_FAST_FORWARD_SECS, secs)
              .apply();
     }
 
-    public static void setPrefRewindSecs(int secs) {
+    public static void setRewindSecs(int secs) {
         prefs.edit()
              .putInt(PREF_REWIND_SECS, secs)
              .apply();

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastManager.java
Patch:
@@ -142,7 +142,6 @@ public static synchronized CastManager init(Context context) {
             if (ConnectionResult.SUCCESS != GoogleApiAvailability.getInstance()
                     .isGooglePlayServicesAvailable(context)) {
                 Log.e(TAG, "Couldn't find the appropriate version of Google Play Services");
-                //TODO check whether creating an instance without google play services installed actually gives an exception
             }
             INSTANCE = new CastManager(context, castConfiguration);
         }

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -138,7 +138,7 @@ public void testClickNavDrawer() throws Exception {
         ListView list = (ListView) solo.getView(R.id.nav_list);
         for (int i = 0; i < uiTestUtils.hostedFeeds.size(); i++) {
             Feed f = uiTestUtils.hostedFeeds.get(i);
-            solo.clickOnScreen(50, 50); // open nav drawer
+            openNavDrawer();
             solo.scrollListToLine(list, i);
             solo.clickOnText(f.getTitle());
             solo.waitForView(android.R.id.list);

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -481,7 +481,7 @@ public void saveCurrentPosition(SharedPreferences pref, int newPosition, long ti
         setPosition(newPosition);
         setLastPlayedTime(timeStamp);
         if(startPosition>=0 && position > startPosition) {
-            setDuration(playedDurationWhenStarted + position - startPosition);
+            setPlayedDuration(playedDurationWhenStarted + position - startPosition);
         }
         DBWriter.setFeedMediaPlaybackInformation(this);
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -316,11 +316,12 @@ void onPrepared(final boolean startWhenPrepared) {
             videoSize = new Pair<>(vp.getVideoWidth(), vp.getVideoHeight());
         }
 
+        // TODO this call has no effect!
         if (media.getPosition() > 0) {
             seekToSync(media.getPosition());
         }
 
-        if (media.getDuration() == 0) {
+        if (media.getDuration() <= 0) {
             Log.d(TAG, "Setting duration of media");
             media.setDuration(mediaPlayer.getDuration());
         }

File: app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -103,6 +103,7 @@ public static class MainFragment extends PreferenceFragment {
         @Override
         public void onCreate(Bundle savedInstanceState) {
             super.onCreate(savedInstanceState);
+            setRetainInstance(true);
             addPreferencesFromResource(R.xml.preferences);
             PreferenceActivity activity = instance.get();
             if(activity != null && activity.preferenceController != null) {

File: core/src/play/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceFlavorHelper.java
Patch:
@@ -75,9 +75,8 @@ void removeCastConsumer() {
     boolean castDisconnect(boolean castDisconnect) {
         if (castDisconnect) {
             castManager.disconnect();
-            return true;
         }
-        return false;
+        return castDisconnect;
     }
 
     boolean onMediaPlayerInfo(Context context, int code, @StringRes int resourceId) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -386,7 +386,7 @@ public void onLoadChildren(String parentId,
     @Override
     public IBinder onBind(Intent intent) {
         Log.d(TAG, "Received onBind event");
-        if(intent.getAction() != null && intent.getAction().equals("android.media.browse.MediaBrowserService")) {
+        if(intent.getAction() != null && TextUtils.equals(intent.getAction(), MediaBrowserServiceCompat.SERVICE_INTERFACE)) {
             return super.onBind(intent);
         } else {
             return mBinder;

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -301,6 +301,7 @@ private void clearErrorNotifications() {
 
     private void updateErrorNotification(GpodnetServiceException exception) {
      Log.d(TAG, "Posting error notification");
+        GpodnetPreferences.setLastSyncAttempt(false, System.currentTimeMillis());
 
         final String title;
         final String description;
@@ -310,7 +311,6 @@ private void updateErrorNotification(GpodnetServiceException exception) {
             description = getString(R.string.gpodnetsync_auth_error_descr);
             id = R.id.notification_gpodnet_sync_autherror;
         } else {
-            GpodnetPreferences.setLastSyncAttempt(false, System.currentTimeMillis());
             if (UserPreferences.gpodnetNotificationsEnabled()) {
                 title = getString(R.string.gpodnetsync_error_title);
                 description = getString(R.string.gpodnetsync_error_descr) + exception.getMessage();

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -6,7 +6,7 @@
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.MenuItem;
@@ -40,7 +40,7 @@
  * Step 2: Choose device from a list of available devices or create a new one
  * Step 3: Choose from a list of actions
  */
-public class GpodnetAuthenticationActivity extends ActionBarActivity {
+public class GpodnetAuthenticationActivity extends AppCompatActivity {
     private static final String TAG = "GpodnetAuthActivity";
 
     private static final String CURRENT_STEP = "current_step";

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -1024,6 +1024,7 @@ private void updateMediaSessionMetadata(final Playable p) {
                 }
             }
             if (!Thread.currentThread().isInterrupted() && started) {
+                //TODO mediaSession.setSessionActivity();
                 mediaSession.setMetadata(builder.build());
             }
         };

File: core/src/free/java/de/danoeh/antennapod/core/feed/FeedMediaFlavorHelper.java
Patch:
@@ -4,6 +4,7 @@
  * Implements methods for FeedMedia that are flavor dependent.
  */
 public class FeedMediaFlavorHelper {
+    private FeedMediaFlavorHelper(){}
     static boolean instanceOfRemoteMedia(Object o) {
         return false;
     }

File: core/src/play/java/de/danoeh/antennapod/core/feed/FeedMediaFlavorHelper.java
Patch:
@@ -6,6 +6,7 @@
  * Implements methods for FeedMedia that are flavor dependent.
  */
 public class FeedMediaFlavorHelper {
+    private FeedMediaFlavorHelper(){}
     static boolean instanceOfRemoteMedia(Object o) {
         return o instanceof RemoteMedia;
     }

File: core/src/free/java/de/danoeh/antennapod/core/feed/FeedMediaFlavorHelper.java
Patch:
@@ -4,6 +4,7 @@
  * Implements methods for FeedMedia that are flavor dependent.
  */
 public class FeedMediaFlavorHelper {
+    private FeedMediaFlavorHelper(){}
     static boolean instanceOfRemoteMedia(Object o) {
         return false;
     }

File: core/src/play/java/de/danoeh/antennapod/core/feed/FeedMediaFlavorHelper.java
Patch:
@@ -6,6 +6,7 @@
  * Implements methods for FeedMedia that are flavor dependent.
  */
 public class FeedMediaFlavorHelper {
+    private FeedMediaFlavorHelper(){}
     static boolean instanceOfRemoteMedia(Object o) {
         return o instanceof RemoteMedia;
     }

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -16,5 +16,6 @@ public class ClientConfigurator {
         ClientConfig.playbackServiceCallbacks = new PlaybackServiceCallbacksImpl();
         ClientConfig.flattrCallbacks = new FlattrCallbacksImpl();
         ClientConfig.dbTasksCallbacks = new DBTasksCallbacksImpl();
+        ClientConfig.castCallbacks = new CastCallbackImpl();
     }
 }

File: core/src/free/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -30,6 +30,8 @@ public class ClientConfig {
 
     public static DBTasksCallbacks dbTasksCallbacks;
 
+    public static CastCallbacks castCallbacks;
+
     private static boolean initialized = false;
 
     public static synchronized void initialize(Context context) {

File: core/src/play/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -31,6 +31,8 @@ public class ClientConfig {
 
     public static DBTasksCallbacks dbTasksCallbacks;
 
+    public static CastCallbacks castCallbacks;
+
     private static boolean initialized = false;
 
     public static synchronized void initialize(Context context) {

File: core/src/play/java/de/danoeh/antennapod/core/cast/CastManager.java
Patch:
@@ -62,6 +62,7 @@
 import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.concurrent.TimeUnit;
 
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.R;
 
 import static com.google.android.gms.cast.RemoteMediaPlayer.RESUME_STATE_PLAY;
@@ -130,12 +131,12 @@ private CastManager(Context context, CastConfiguration castConfiguration) {
 
     public static synchronized CastManager init(Context context) {
         if (INSTANCE == null) {
-            //TODO also setup dialog factory if necessary
             CastConfiguration castConfiguration = new CastConfiguration.Builder(CAST_APP_ID)
                     .enableDebug()
                     .enableAutoReconnect()
                     .enableWifiReconnection()
                     .setLaunchOptions(true, Locale.getDefault())
+                    .setMediaRouteDialogFactory(ClientConfig.castCallbacks.getMediaRouterDialogFactory())
                     .build();
             Log.d(TAG, "New instance of CastManager is created");
             if (ConnectionResult.SUCCESS != GoogleApiAvailability.getInstance()

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -514,9 +514,7 @@ private void showErrorDialog(String errorMsg) {
                 builder.setMessage(R.string.error_msg_prefix);
             }
             builder.setNeutralButton(android.R.string.ok,
-                    (dialog, which) -> {
-                        dialog.cancel();
-                    }
+                    (dialog, which) -> dialog.cancel()
             );
             builder.setOnCancelListener(dialog -> {
                 setResult(RESULT_ERROR);

File: app/src/main/java/de/danoeh/antennapod/activity/StatisticsActivity.java
Patch:
@@ -85,9 +85,7 @@ private void loadStats() {
                         totalTimeTextView.setVisibility(View.VISIBLE);
                         feedStatisticsList.setVisibility(View.VISIBLE);
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlImportWorker.java
Patch:
@@ -75,9 +75,7 @@ protected void onPostExecute(ArrayList<OpmlElement> result) {
 			alert.setTitle(R.string.error_label);
 			alert.setMessage(context.getString(R.string.opml_reader_error)
 					+ exception.getMessage());
-			alert.setNeutralButton(android.R.string.ok, (dialog, which) -> {
-                dialog.dismiss();
-            });
+			alert.setNeutralButton(android.R.string.ok, (dialog, which) -> dialog.dismiss());
 			alert.create().show();
 		}
 	}

File: app/src/main/java/de/danoeh/antennapod/dialog/GpodnetSetHostnameDialog.java
Patch:
@@ -32,9 +32,7 @@ public static AlertDialog createDialog(final Context context) {
                     }
                     dialog1.dismiss();
                 })
-                .setNegativeButton(R.string.cancel_label, (dialog1, which) -> {
-                    dialog1.cancel();
-                })
+                .setNegativeButton(R.string.cancel_label, (dialog1, which) -> dialog1.cancel())
                 .setNeutralButton(R.string.pref_gpodnet_sethostname_use_default_host, (dialog1, which) -> {
                     GpodnetPreferences.setHostname(GpodnetService.DEFAULT_BASE_HOST);
                     dialog1.dismiss();

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -95,9 +95,7 @@ private static void showSpeedSelectorDialog(final Context context) {
         AlertDialog.Builder builder = new AlertDialog.Builder(context);
         builder.setTitle(R.string.set_playback_speed_label);
         builder.setMultiChoiceItems(R.array.playback_speed_values,
-            speedChecked, (dialog, which, isChecked) -> {
-                speedChecked[which] = isChecked;
-            });
+            speedChecked, (dialog, which, isChecked) -> speedChecked[which] = isChecked);
         builder.setNegativeButton(android.R.string.cancel, null);
         builder.setPositiveButton(android.R.string.ok,
             (dialog, which) -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -466,9 +466,7 @@ protected void loadItems() {
                             onFragmentLoaded();
                         }
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
     protected List<FeedItem> loadData() {

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -215,9 +215,7 @@ private void loadItems() {
                             onFragmentLoaded();
                         }
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error ->  Log.e(TAG, Log.getStackTraceString(error)));
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -165,9 +165,7 @@ private void loadItems() {
                             onFragmentLoaded();
                         }
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/FavoriteEpisodesFragment.java
Patch:
@@ -71,9 +71,7 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int swipeDir) {
 
                     Snackbar snackbar = Snackbar.make(root, getString(R.string.removed_item),
                             Snackbar.LENGTH_LONG);
-                    snackbar.setAction(getString(R.string.undo), v -> {
-                        DBWriter.addFavoriteItem(item);
-                    });
+                    snackbar.setAction(getString(R.string.undo), v -> DBWriter.addFavoriteItem(item));
                     snackbar.show();
                 }
             }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -580,9 +580,7 @@ private void load() {
                 item = result;
                 itemsLoaded = true;
                 onFragmentLoaded();
-            }, error -> {
-                Log.e(TAG, Log.getStackTraceString(error));
-            });
+            }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
     private FeedItem loadInBackground() {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -627,9 +627,7 @@ private void loadItems() {
                             onFragmentLoaded();
                         }
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
     private Feed loadData() {

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -283,9 +283,7 @@ private void loadItems() {
                             onFragmentLoaded();
                         }
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
     private List<FeedItem> loadData() {

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -611,9 +611,7 @@ private void loadItems(final boolean restoreScrollPosition) {
                             recyclerAdapter.notifyDataSetChanged();
                         }
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -219,9 +219,7 @@ private void search() {
                             onFragmentLoaded();
                         }
                     }
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
     private List<SearchResult> performSearch() {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -197,9 +197,7 @@ private void bindToService() {
                                 mConnection, 0);
                     }
                     Log.d(TAG, "Result for service binding: " + bound);
-                }, error -> {
-                    Log.e(TAG, Log.getStackTraceString(error));
-                });
+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/feed/EventDistributor.java
Patch:
@@ -96,7 +96,7 @@ public void sendDownloadLogUpdateBroadcast() {
 
     public void sendPlayerStatusUpdateBroadcast() { addEvent(PLAYER_STATUS_UPDATE); }
 
-	public static abstract class EventListener implements Observer {
+	public abstract static class EventListener implements Observer {
 
 		@Override
 		public void update(Observable observable, Object data) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -53,9 +53,9 @@ public class FeedItem extends FeedComponent implements ShownotesProvider, Flattr
     private long feedId;
 
     private int state;
-    public final static int NEW = -1;
-    public final static int UNPLAYED = 0;
-    public final static int PLAYED = 1;
+    public static final int NEW = -1;
+    public static final int UNPLAYED = 0;
+    public static final int PLAYED = 1;
 
     private String paymentLink;
     private FlattrStatus flattrStatus;

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java
Patch:
@@ -68,7 +68,7 @@ public static FeedPreferences fromCursor(Cursor cursor) {
     /**
      * @return the filter for this feed
      */
-    public @NonNull FeedFilter getFilter() {
+    @NonNull public FeedFilter getFilter() {
         return filter;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/ProxyConfig.java
Patch:
@@ -12,7 +12,7 @@ public class ProxyConfig {
     @Nullable public final String username;
     @Nullable public final String password;
 
-    public final static int DEFAULT_PORT = 8080;
+    public static final int DEFAULT_PORT = 8080;
 
     public static ProxyConfig direct() {
         return new ProxyConfig(Proxy.Type.DIRECT, null, 0, null, null);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -278,7 +278,7 @@ protected final synchronized void releaseWifiLockIfNecessary() {
      * @param newStatus The new PlayerStatus. This must not be null.
      * @param newMedia  The new playable object of the PSMP object. This can be null.
      */
-    protected synchronized final void setPlayerStatus(@NonNull PlayerStatus newStatus, Playable newMedia) {
+    protected final synchronized void setPlayerStatus(@NonNull PlayerStatus newStatus, Playable newMedia) {
         Log.d(TAG, this.getClass().getSimpleName() + ": Setting player status to " + newStatus);
 
         this.playerStatus = newStatus;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -717,7 +717,7 @@ public void execute(PodDBAdapter adapter) {
      * This class automatically creates a PodDBAdapter object and closes it when
      * it is no longer in use.
      */
-    static abstract class QueryTask<T> implements Callable<T> {
+    abstract static class QueryTask<T> implements Callable<T> {
         private T result;
         private Context context;
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1593,7 +1593,7 @@ public Cursor getFeedStatisticsCursor() {
      */
     private static class PodDBHelper extends SQLiteOpenHelper {
 
-        private final static int VERSION = 1050004;
+        private static final int VERSION = 1050004;
 
         private Context context;
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/util/SyndTypeUtils.java
Patch:
@@ -6,7 +6,7 @@
 /** Utility class for handling MIME-Types of enclosures */
 public class SyndTypeUtils {
 
-	private final static String VALID_MIMETYPE = "audio/.*" + "|" + "video/.*"
+	private static final String VALID_MIMETYPE = "audio/.*" + "|" + "video/.*"
 			+ "|" + "application/ogg";
 
 	private SyndTypeUtils() {

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrServiceCreator.java
Patch:
@@ -15,14 +15,14 @@ public class FlattrServiceCreator {
 	
 	private static volatile FlattrService flattrService;
 	
-	public synchronized static FlattrService getService(AccessToken token) {
+	public static synchronized FlattrService getService(AccessToken token) {
 		if (flattrService == null) {
 			flattrService = FlattrFactory.getInstance().createFlattrService(token);
 		}
 		return flattrService;
 	}
 	
-	public synchronized static void deleteFlattrService() {
+	public static synchronized void deleteFlattrService() {
 		if (BuildConfig.DEBUG) Log.d(TAG, "Deleting service instance");
 		flattrService = null;
 	}

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -277,7 +277,7 @@ protected boolean loadMediaInfo() {
         if (!super.loadMediaInfo()) {
             return false;
         }
-        if(controller.getMedia() != media) {
+        if(controller != null && controller.getMedia() != media) {
             media = controller.getMedia();
             pagerAdapter.onMediaChanged(media);
         }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -208,7 +208,8 @@ public void run() {
                                     boolean forbidden = status.getReason() == DownloadError.ERROR_FORBIDDEN
                                             && String.valueOf(HttpURLConnection.HTTP_FORBIDDEN).equals(status.getReasonDetailed());
                                     boolean notEnoughSpace = status.getReason() == DownloadError.ERROR_NOT_ENOUGH_SPACE;
-                                    if (httpNotFound || forbidden || notEnoughSpace) {
+                                    boolean wrongFileType = status.getReason() == DownloadError.ERROR_FILE_TYPE;
+                                    if (httpNotFound || forbidden || notEnoughSpace || wrongFileType) {
                                         DBWriter.saveFeedItemAutoDownloadFailed(item).get();
                                     }
                                     // to make lists reload the failed item, we fake an item update

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -208,7 +208,8 @@ public void run() {
                                     boolean forbidden = status.getReason() == DownloadError.ERROR_FORBIDDEN
                                             && String.valueOf(HttpURLConnection.HTTP_FORBIDDEN).equals(status.getReasonDetailed());
                                     boolean notEnoughSpace = status.getReason() == DownloadError.ERROR_NOT_ENOUGH_SPACE;
-                                    if (httpNotFound || forbidden || notEnoughSpace) {
+                                    boolean wrongFileType = status.getReason() == DownloadError.ERROR_FILE_TYPE;
+                                    if (httpNotFound || forbidden || notEnoughSpace || wrongFileType) {
                                         DBWriter.saveFeedItemAutoDownloadFailed(item).get();
                                     }
                                     // to make lists reload the failed item, we fake an item update

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -241,6 +241,9 @@ public void onConfirmButtonPressed(
                     };
                     conDialog.createNewDialog().show();
                     return true;
+                case R.id.mark_all_seen_item:
+                    DBWriter.markNewItemsSeen();
+                    return true;
                 default:
                     return false;
             }

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -241,6 +241,9 @@ public void onConfirmButtonPressed(
                     };
                     conDialog.createNewDialog().show();
                     return true;
+                case R.id.mark_all_seen_item:
+                    DBWriter.markNewItemsSeen();
+                    return true;
                 default:
                     return false;
             }

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -86,7 +86,9 @@ public ApOkHttpUrlLoader(OkHttpClient client) {
     public DataFetcher<InputStream> getResourceFetcher(String model, int width, int height) {
         Log.d(TAG, "getResourceFetcher() called with: " + "model = [" + model + "], width = ["
                 + width + "], height = [" + height + "]");
-        if(model.startsWith("/")) {
+        if(TextUtils.isEmpty(model)) {
+            return null;
+        } else if(model.startsWith("/")) {
             return new AudioCoverFetcher(model);
         } else {
             GlideUrl url = new GlideUrl(model);

File: app/src/androidTest/java/de/test/antennapod/storage/DBTestUtils.java
Patch:
@@ -21,6 +21,7 @@
  */
 public class DBTestUtils {
 
+    private DBTestUtils(){}
     /**
      * Use this method when tests don't involve chapters.
      */

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/GeneratorUtil.java
Patch:
@@ -8,6 +8,7 @@
  * Utility methods for FeedGenerator
  */
 public class GeneratorUtil {
+    private GeneratorUtil(){}
 
     public static void addPaymentLink(XmlSerializer xml, String paymentLink, boolean withNamespace) throws IOException {
         String ns = (withNamespace) ? "http://www.w3.org/2005/Atom" : null;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportHolder.java
Patch:
@@ -14,6 +14,8 @@
  */
 public class OpmlImportHolder {
 
+    private OpmlImportHolder(){}
+
     private static ArrayList<OpmlElement> readElements;
 
     public static ArrayList<OpmlElement> getReadElements() {

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -8,6 +8,8 @@
  */
 public class ClientConfigurator {
 
+    private ClientConfigurator(){}
+
     static {
         ClientConfig.USER_AGENT = "AntennaPod/" + BuildConfig.VERSION_NAME;
         ClientConfig.applicationCallbacks = new ApplicationCallbacksImpl();

File: app/src/main/java/de/danoeh/antennapod/dialog/GpodnetSetHostnameDialog.java
Patch:
@@ -16,6 +16,9 @@
  * Creates a dialog that lets the user change the hostname for the gpodder.net service.
  */
 public class GpodnetSetHostnameDialog {
+
+    private GpodnetSetHostnameDialog(){}
+
     private static final String TAG = "GpodnetSetHostnameDialog";
 
     public static AlertDialog createDialog(final Context context) {

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -17,6 +17,8 @@
 
 public class RatingDialog {
 
+    private RatingDialog(){}
+
     private static final String TAG = RatingDialog.class.getSimpleName();
     private static final int AFTER_DAYS = 7;
 

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -30,6 +30,9 @@
  * Handles interactions with the FeedItemMenu.
  */
 public class FeedMenuHandler {
+
+    private FeedMenuHandler(){ }
+
     private static final String TAG = "FeedMenuHandler";
 
     public static boolean onCreateOptionsMenu(MenuInflater inflater, Menu menu) {

File: core/src/main/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -13,6 +13,7 @@
  * Apps using the core module of AntennaPod should register implementations of all interfaces here.
  */
 public class ClientConfig {
+    private ClientConfig(){}
 
     /**
      * Should be used when setting User-Agent header for HTTP-requests.

File: core/src/main/java/de/danoeh/antennapod/core/UpdateManager.java
Patch:
@@ -25,6 +25,8 @@
  */
 public class UpdateManager {
 
+    private UpdateManager(){}
+
     public static final String TAG = UpdateManager.class.getSimpleName();
 
     private static final String PREF_NAME = "app_version";

File: core/src/main/java/de/danoeh/antennapod/core/cast/CastUtils.java
Patch:
@@ -24,6 +24,8 @@
  * Helper functions for Cast support.
  */
 public class CastUtils {
+    private CastUtils(){}
+
     private static final String TAG = "CastUtils";
 
     public static final String KEY_MEDIA_ID = "de.danoeh.antennapod.core.cast.MediaId";

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideSettings.java
Patch:
@@ -6,6 +6,7 @@
  * The settings that AntennaPod will use for various Glide options
  */
 public class ApGlideSettings {
+    private ApGlideSettings(){}
 
     public static final DiskCacheStrategy AP_DISK_CACHE_STRATEGY = DiskCacheStrategy.ALL;
 }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/GpodnetPreferences.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class GpodnetPreferences {
 
+    private GpodnetPreferences(){}
+
     private static final String TAG = "GpodnetPreferences";
 
     private static final String PREF_NAME = "gpodder.net";

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -40,6 +40,7 @@
  * when called.
  */
 public class UserPreferences {
+    private UserPreferences(){}
 
     public static final String IMPORT_DIR = "import/";
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -35,6 +35,9 @@
  * Provides access to a HttpClient singleton.
  */
 public class AntennapodHttpClient {
+
+    private AntennapodHttpClient(){}
+
     private static final String TAG = "AntennapodHttpClient";
 
     public static final int CONNECTION_TIMEOUT = 30000;

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedSearcher.java
Patch:
@@ -17,6 +17,8 @@
  * Performs search on Feeds and FeedItems
  */
 public class FeedSearcher {
+    private FeedSearcher(){}
+
     private static final String TAG = "FeedSearcher";
 
 

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -16,6 +16,7 @@
  * Parses several date formats.
  */
 public class DateUtils {
+    private DateUtils(){}
     
 	private static final String TAG = "DateUtils";
 

File: core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java
Patch:
@@ -5,6 +5,7 @@
 import de.danoeh.antennapod.core.feed.FeedItem;
 
 public class FeedItemUtil {
+    private FeedItemUtil(){}
 
     public static int indexOfItemWithDownloadUrl(List<FeedItem> items, String downloadUrl) {
         if(items == null) {

File: core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.List;
 
 public class IntentUtils {
+    private IntentUtils(){}
 
     public static boolean isCallable(final Context context, final Intent intent) {
         List<ResolveInfo> list = context.getPackageManager().queryIntentActivities(intent,

File: core/src/main/java/de/danoeh/antennapod/core/util/LangUtils.java
Patch:
@@ -5,6 +5,9 @@
 import java.nio.charset.Charset;
 
 public class LangUtils {
+
+	private LangUtils(){}
+
 	public static final Charset UTF_8 = Charset.forName("UTF-8");
 
 	private static ArrayMap<String, String> languages;

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -27,6 +27,7 @@
 import rx.schedulers.Schedulers;
 
 public class NetworkUtils {
+    private NetworkUtils(){}
 
 	private static final String TAG = NetworkUtils.class.getSimpleName();
 

File: core/src/main/java/de/danoeh/antennapod/core/util/RewindAfterPauseUtils.java
Patch:
@@ -9,6 +9,7 @@
  * Media file should be "rewinded" x seconds after user resumes the playback.
  */
 public class RewindAfterPauseUtils {
+    private RewindAfterPauseUtils(){}
 
     public static final long ELAPSED_TIME_FOR_SHORT_REWIND = TimeUnit.MINUTES.toMillis(1);
     public static final long ELAPSED_TIME_FOR_MEDIUM_REWIND = TimeUnit.HOURS.toMillis(1);

File: core/src/main/java/de/danoeh/antennapod/core/util/StorageUtils.java
Patch:
@@ -14,6 +14,8 @@
  * Utility functions for handling storage errors
  */
 public class StorageUtils {
+    private StorageUtils(){}
+
     private static final String TAG = "StorageUtils";
 
     public static boolean storageAvailable() {

File: core/src/main/java/de/danoeh/antennapod/core/util/ThemeUtils.java
Patch:
@@ -6,6 +6,8 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 
 public class ThemeUtils {
+    private ThemeUtils(){}
+
     private static final String TAG = "ThemeUtils";
 
     public static int getSelectionBackgroundColor() {

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrServiceCreator.java
Patch:
@@ -11,6 +11,8 @@
 /** Ensures that only one instance of the FlattrService class exists at a time */
 
 public class FlattrServiceCreator {
+	private FlattrServiceCreator(){}
+
 	public static final String TAG = "FlattrServiceCreator";
 	
 	private static volatile FlattrService flattrService;

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -36,6 +36,8 @@
  */
 
 public class FlattrUtils {
+    private FlattrUtils(){}
+
     private static final String TAG = "FlattrUtils";
 
     private static final String HOST_NAME = "de.danoeh.antennapod";

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/MediaPlayerError.java
Patch:
@@ -6,6 +6,7 @@
 
 /** Utility class for MediaPlayer errors. */
 public class MediaPlayerError {
+	private MediaPlayerError(){}
 
 	/** Get a human-readable string for a specific error code. */
 	public static String getErrorString(Context context, int code) {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Playable.java
Patch:
@@ -161,6 +161,8 @@ public interface Playable extends Parcelable,
      * Provides utility methods for Playable objects.
      */
     class PlayableUtils {
+        private PlayableUtils(){}
+
         private static final String TAG = "PlayableUtils";
 
         /**

File: app/src/androidTest/java/de/test/antennapod/gpodnet/GPodnetServiceTest.java
Patch:
@@ -38,14 +38,14 @@ private void authenticate() throws GpodnetServiceException {
 
     public void testUploadSubscription() throws GpodnetServiceException {
         authenticate();
-        ArrayList<String> l = new ArrayList<String>();
+        ArrayList<String> l = new ArrayList<>();
         l.add("http://bitsundso.de/feed");
         service.uploadSubscriptions(USER, "radio", l);
     }
 
     public void testUploadSubscription2() throws GpodnetServiceException {
         authenticate();
-        ArrayList<String> l = new ArrayList<String>();
+        ArrayList<String> l = new ArrayList<>();
         l.add("http://bitsundso.de/feed");
         l.add("http://gamesundso.de/feed");
         service.uploadSubscriptions(USER, "radio", l);

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -145,9 +145,9 @@ public void testPerformAutoCleanupHandleUnplayed() throws IOException {
         final int NUM_ITEMS = EPISODE_CACHE_SIZE * 2;
 
         Feed feed = new Feed("url", null, "title");
-        List<FeedItem> items = new ArrayList<FeedItem>();
+        List<FeedItem> items = new ArrayList<>();
         feed.setItems(items);
-        List<File> files = new ArrayList<File>();
+        List<File> files = new ArrayList<>();
         populateItems(NUM_ITEMS, feed, items, files, FeedItem.UNPLAYED, false, false);
 
         DBTasks.performAutoCleanup(context);

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -100,7 +100,7 @@ public void testUpdateFeedUpdatedFeed() {
         assertTrue(feed.getId() != 0);
         final long feedID = feed.getId();
         feed.setId(0);
-        List<Long> itemIDs = new ArrayList<Long>();
+        List<Long> itemIDs = new ArrayList<>();
         for (FeedItem item : feed.getItems()) {
             assertTrue(item.getId() != 0);
             itemIDs.add(item.getId());

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -59,7 +59,7 @@ public class UITestUtils {
     private File hostedFeedDir;
     private File hostedMediaDir;
 
-    public List<Feed> hostedFeeds = new ArrayList<Feed>();
+    public List<Feed> hostedFeeds = new ArrayList<>();
 
     public UITestUtils(Context context) {
         this.context = context;
@@ -149,7 +149,7 @@ public void addHostedFeedData() throws IOException {
             image.setOwner(feed);
 
             // create items
-            List<FeedItem> items = new ArrayList<FeedItem>();
+            List<FeedItem> items = new ArrayList<>();
             for (int j = 0; j < NUM_ITEMS_PER_FEED; j++) {
                 FeedItem item = new FeedItem(j, "Feed " + (i+1) + ": Item " + (j+1), "item" + j,
                         "http://example.com/feed" + i + "/item/" + j, new Date(), FeedItem.UNPLAYED, feed);

File: app/src/androidTest/java/de/test/antennapod/util/service/download/HTTPBin.java
Patch:
@@ -49,7 +49,7 @@ public class HTTPBin extends NanoHTTPD {
 
     public HTTPBin() {
         super(PORT);
-        this.servedFiles = new ArrayList<File>();
+        this.servedFiles = new ArrayList<>();
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -99,7 +99,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     private List<String> getTitleList() {
-        List<String> result = new ArrayList<String>();
+        List<String> result = new ArrayList<>();
         if (OpmlImportHolder.getReadElements() != null) {
             for (OpmlElement element : OpmlImportHolder.getReadElements()) {
                 result.add(element.getText());

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -116,7 +116,7 @@ public static void clickUrl(Context context, String url)
 
     public static List<Flattr> retrieveFlattredThings()
             throws FlattrException {
-        ArrayList<Flattr> myFlattrs = new ArrayList<Flattr>();
+        ArrayList<Flattr> myFlattrs = new ArrayList<>();
 
         if (hasToken()) {
             FlattrService fs = FlattrServiceCreator.getService(retrieveToken());

File: app/src/androidTest/java/de/test/antennapod/storage/DBTestUtils.java
Patch:
@@ -21,6 +21,7 @@
  */
 public class DBTestUtils {
 
+    private DBTestUtils(){}
     /**
      * Use this method when tests don't involve chapters.
      */

File: app/src/androidTest/java/de/test/antennapod/util/syndication/feedgenerator/GeneratorUtil.java
Patch:
@@ -8,6 +8,7 @@
  * Utility methods for FeedGenerator
  */
 public class GeneratorUtil {
+    private GeneratorUtil(){}
 
     public static void addPaymentLink(XmlSerializer xml, String paymentLink, boolean withNamespace) throws IOException {
         String ns = (withNamespace) ? "http://www.w3.org/2005/Atom" : null;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportHolder.java
Patch:
@@ -14,6 +14,8 @@
  */
 public class OpmlImportHolder {
 
+    private OpmlImportHolder(){}
+
     private static ArrayList<OpmlElement> readElements;
 
     public static ArrayList<OpmlElement> getReadElements() {

File: app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java
Patch:
@@ -8,6 +8,8 @@
  */
 public class ClientConfigurator {
 
+    private ClientConfigurator(){}
+
     static {
         ClientConfig.USER_AGENT = "AntennaPod/" + BuildConfig.VERSION_NAME;
         ClientConfig.applicationCallbacks = new ApplicationCallbacksImpl();

File: app/src/main/java/de/danoeh/antennapod/dialog/GpodnetSetHostnameDialog.java
Patch:
@@ -16,6 +16,9 @@
  * Creates a dialog that lets the user change the hostname for the gpodder.net service.
  */
 public class GpodnetSetHostnameDialog {
+
+    private GpodnetSetHostnameDialog(){}
+
     private static final String TAG = "GpodnetSetHostnameDialog";
 
     public static AlertDialog createDialog(final Context context) {

File: app/src/main/java/de/danoeh/antennapod/dialog/RatingDialog.java
Patch:
@@ -17,6 +17,8 @@
 
 public class RatingDialog {
 
+    private RatingDialog(){}
+
     private static final String TAG = RatingDialog.class.getSimpleName();
     private static final int AFTER_DAYS = 7;
 

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -30,6 +30,9 @@
  * Handles interactions with the FeedItemMenu.
  */
 public class FeedMenuHandler {
+
+    private FeedMenuHandler(){ }
+
     private static final String TAG = "FeedMenuHandler";
 
     public static boolean onCreateOptionsMenu(MenuInflater inflater, Menu menu) {

File: core/src/main/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -13,6 +13,7 @@
  * Apps using the core module of AntennaPod should register implementations of all interfaces here.
  */
 public class ClientConfig {
+    private ClientConfig(){}
 
     /**
      * Should be used when setting User-Agent header for HTTP-requests.

File: core/src/main/java/de/danoeh/antennapod/core/UpdateManager.java
Patch:
@@ -25,6 +25,8 @@
  */
 public class UpdateManager {
 
+    private UpdateManager(){}
+
     public static final String TAG = UpdateManager.class.getSimpleName();
 
     private static final String PREF_NAME = "app_version";

File: core/src/main/java/de/danoeh/antennapod/core/cast/CastUtils.java
Patch:
@@ -24,6 +24,8 @@
  * Helper functions for Cast support.
  */
 public class CastUtils {
+    private CastUtils(){}
+
     private static final String TAG = "CastUtils";
 
     public static final String KEY_MEDIA_ID = "de.danoeh.antennapod.core.cast.MediaId";

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApGlideSettings.java
Patch:
@@ -6,6 +6,7 @@
  * The settings that AntennaPod will use for various Glide options
  */
 public class ApGlideSettings {
+    private ApGlideSettings(){}
 
     public static final DiskCacheStrategy AP_DISK_CACHE_STRATEGY = DiskCacheStrategy.ALL;
 }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/GpodnetPreferences.java
Patch:
@@ -23,6 +23,8 @@
  */
 public class GpodnetPreferences {
 
+    private GpodnetPreferences(){}
+
     private static final String TAG = "GpodnetPreferences";
 
     private static final String PREF_NAME = "gpodder.net";

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -40,6 +40,7 @@
  * when called.
  */
 public class UserPreferences {
+    private UserPreferences(){}
 
     public static final String IMPORT_DIR = "import/";
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -35,6 +35,9 @@
  * Provides access to a HttpClient singleton.
  */
 public class AntennapodHttpClient {
+
+    private AntennapodHttpClient(){}
+
     private static final String TAG = "AntennapodHttpClient";
 
     public static final int CONNECTION_TIMEOUT = 30000;

File: core/src/main/java/de/danoeh/antennapod/core/storage/FeedSearcher.java
Patch:
@@ -17,6 +17,8 @@
  * Performs search on Feeds and FeedItems
  */
 public class FeedSearcher {
+    private FeedSearcher(){}
+
     private static final String TAG = "FeedSearcher";
 
 

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -16,6 +16,7 @@
  * Parses several date formats.
  */
 public class DateUtils {
+    private DateUtils(){}
     
 	private static final String TAG = "DateUtils";
 

File: core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java
Patch:
@@ -5,6 +5,7 @@
 import de.danoeh.antennapod.core.feed.FeedItem;
 
 public class FeedItemUtil {
+    private FeedItemUtil(){}
 
     public static int indexOfItemWithDownloadUrl(List<FeedItem> items, String downloadUrl) {
         if(items == null) {

File: core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.List;
 
 public class IntentUtils {
+    private IntentUtils(){}
 
     public static boolean isCallable(final Context context, final Intent intent) {
         List<ResolveInfo> list = context.getPackageManager().queryIntentActivities(intent,

File: core/src/main/java/de/danoeh/antennapod/core/util/LangUtils.java
Patch:
@@ -5,6 +5,9 @@
 import java.nio.charset.Charset;
 
 public class LangUtils {
+
+	private LangUtils(){}
+
 	public static final Charset UTF_8 = Charset.forName("UTF-8");
 
 	private static ArrayMap<String, String> languages;

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -27,6 +27,7 @@
 import rx.schedulers.Schedulers;
 
 public class NetworkUtils {
+    private NetworkUtils(){}
 
 	private static final String TAG = NetworkUtils.class.getSimpleName();
 

File: core/src/main/java/de/danoeh/antennapod/core/util/RewindAfterPauseUtils.java
Patch:
@@ -9,6 +9,7 @@
  * Media file should be "rewinded" x seconds after user resumes the playback.
  */
 public class RewindAfterPauseUtils {
+    private RewindAfterPauseUtils(){}
 
     public static final long ELAPSED_TIME_FOR_SHORT_REWIND = TimeUnit.MINUTES.toMillis(1);
     public static final long ELAPSED_TIME_FOR_MEDIUM_REWIND = TimeUnit.HOURS.toMillis(1);

File: core/src/main/java/de/danoeh/antennapod/core/util/StorageUtils.java
Patch:
@@ -14,6 +14,8 @@
  * Utility functions for handling storage errors
  */
 public class StorageUtils {
+    private StorageUtils(){}
+
     private static final String TAG = "StorageUtils";
 
     public static boolean storageAvailable() {

File: core/src/main/java/de/danoeh/antennapod/core/util/ThemeUtils.java
Patch:
@@ -6,6 +6,8 @@
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 
 public class ThemeUtils {
+    private ThemeUtils(){}
+
     private static final String TAG = "ThemeUtils";
 
     public static int getSelectionBackgroundColor() {

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrServiceCreator.java
Patch:
@@ -11,6 +11,8 @@
 /** Ensures that only one instance of the FlattrService class exists at a time */
 
 public class FlattrServiceCreator {
+	private FlattrServiceCreator(){}
+
 	public static final String TAG = "FlattrServiceCreator";
 	
 	private static volatile FlattrService flattrService;

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -36,6 +36,8 @@
  */
 
 public class FlattrUtils {
+    private FlattrUtils(){}
+
     private static final String TAG = "FlattrUtils";
 
     private static final String HOST_NAME = "de.danoeh.antennapod";

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/MediaPlayerError.java
Patch:
@@ -6,6 +6,7 @@
 
 /** Utility class for MediaPlayer errors. */
 public class MediaPlayerError {
+	private MediaPlayerError(){}
 
 	/** Get a human-readable string for a specific error code. */
 	public static String getErrorString(Context context, int code) {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Playable.java
Patch:
@@ -161,6 +161,8 @@ public interface Playable extends Parcelable,
      * Provides utility methods for Playable objects.
      */
     class PlayableUtils {
+        private PlayableUtils(){}
+
         private static final String TAG = "PlayableUtils";
 
         /**

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -421,7 +421,7 @@ private void updateAppearance() {
                 butAction2Text = R.string.stream_label;
             } else {
                 butAction2Icon = "{md-delete 24sp}";
-                butAction2Text = R.string.remove_label;
+                butAction2Text = R.string.delete_label;
             }
             if (isDownloading) {
                 butAction1Icon = "{md-cancel 24sp}";

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -272,8 +272,6 @@ public static Future<?> addItemToPlaybackHistory(final FeedMedia media) {
         return dbExec.submit(() -> {
             Log.d(TAG, "Adding new item to playback history");
             media.setPlaybackCompletionDate(new Date());
-            // reset played_duration to 0 so that it behaves correctly when the episode is played again
-            media.setPlayedDuration(0);
 
             PodDBAdapter adapter = PodDBAdapter.getInstance();
             adapter.open();

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -7,6 +7,8 @@
 import android.support.v7.widget.helper.ItemTouchHelper;
 import android.util.Log;
 import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -92,7 +94,7 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int swipeDir) {
                     }
                 };
 
-                Snackbar snackbar = Snackbar.make(root, getString(R.string.marked_as_read_label),
+                Snackbar snackbar = Snackbar.make(root, getString(R.string.marked_as_seen_label),
                         Snackbar.LENGTH_LONG);
                 snackbar.setAction(getString(R.string.undo), v -> {
                     DBWriter.markItemPlayed(FeedItem.NEW, item.getId());

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromPathActivity.java
Patch:
@@ -135,7 +135,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         if (resultCode == RESULT_OK && requestCode == CHOOSE_OPML_FILE) {
             Uri uri = data.getData();
-            if(uri.toString().startsWith("/")) {
+            if(uri != null && uri.toString().startsWith("/")) {
                 uri = Uri.parse("file://" + uri.toString());
             }
             importUri(uri);

File: app/src/free/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -58,6 +58,7 @@
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
 import de.danoeh.antennapod.core.util.IntentUtils;
+import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.ShareUtils;
 import de.danoeh.antennapod.core.util.playback.Timeline;
 import de.danoeh.antennapod.menuhandler.FeedItemMenuHandler;
@@ -219,7 +220,8 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 return;
             }
             DefaultActionButtonCallback actionButtonCallback = new DefaultActionButtonCallback(getActivity());
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, item.isTagged(FeedItem.TAG_QUEUE) ?
+                    LongList.of(item.getId()) : new LongList(0));
             FeedMedia media = item.getMedia();
             if (media != null && media.isDownloaded()) {
                 // playback was started, dialog should close itself

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonCallback.java
Patch:
@@ -1,8 +1,9 @@
 package de.danoeh.antennapod.adapter;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
+import de.danoeh.antennapod.core.util.LongList;
 
 public interface ActionButtonCallback {
 	/** Is called when the action button of a list item has been pressed. */
-	void onActionButtonPressed(FeedItem item);
+	void onActionButtonPressed(FeedItem item, LongList queueIds);
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -232,7 +232,7 @@ public int getPosition() {
         @Override
         public void onClick(View v) {
             FeedItem item = (FeedItem) v.getTag();
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, itemAccess.getQueueIds());
         }
     };
 
@@ -319,6 +319,8 @@ public interface ItemAccess {
 
         boolean isInQueue(FeedItem item);
 
+        LongList getQueueIds();
+
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -51,13 +51,12 @@ public static boolean userChoseAddToQueue() {
     }
 
     @Override
-    public void onActionButtonPressed(final FeedItem item) {
+    public void onActionButtonPressed(final FeedItem item, final LongList queueIds) {
 
         if (item.hasMedia()) {
             final FeedMedia media = item.getMedia();
             boolean isDownloading = DownloadRequester.getInstance().isDownloadingFile(media);
             if (!isDownloading && !media.isDownloaded()) {
-                LongList queueIds = DBReader.getQueueIDList();
                 if (NetworkUtils.isDownloadAllowed() || userAllowedMobileDownloads()) {
                     try {
                         DBTasks.downloadFeedItems(context, item);

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -309,7 +309,7 @@ public void bind(FeedItem item) {
         @Override
         public void onClick(View v) {
             FeedItem item = (FeedItem) v.getTag();
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, itemAccess.getQueueIds());
         }
     };
 

File: app/src/play/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -209,7 +209,7 @@ private void saveLastNavFragment(String tag) {
         } else {
             edit.remove(PREF_LAST_FRAGMENT_TAG);
         }
-        edit.commit();
+        edit.apply();
     }
 
     private String getLastNavFragment() {

File: app/src/play/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -59,6 +59,7 @@
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
 import de.danoeh.antennapod.core.util.IntentUtils;
+import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.ShareUtils;
 import de.danoeh.antennapod.core.util.playback.Timeline;
 import de.danoeh.antennapod.menuhandler.FeedItemMenuHandler;
@@ -220,7 +221,8 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 return;
             }
             DefaultActionButtonCallback actionButtonCallback = new DefaultActionButtonCallback(getActivity());
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, item.isTagged(FeedItem.TAG_QUEUE) ?
+                    LongList.of(item.getId()) : new LongList(0));
             FeedMedia media = item.getMedia();
             if (media != null && media.isDownloaded()) {
                 // playback was started, dialog should close itself

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -80,7 +80,7 @@ public static boolean onPrepareMenu(MenuInterface mi,
         if(queueAccess == null || queueAccess.size() == 0 || queueAccess.get(queueAccess.size()-1) == selectedItem.getId()) {
             mi.setItemVisibility(R.id.move_to_bottom_item, false);
         }
-        if (!isInQueue || isPlaying) {
+        if (!isInQueue) {
             mi.setItemVisibility(R.id.remove_from_queue_item, false);
         }
         if (!(!isInQueue && selectedItem.getMedia() != null)) {

File: app/src/free/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -58,6 +58,7 @@
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
 import de.danoeh.antennapod.core.util.IntentUtils;
+import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.ShareUtils;
 import de.danoeh.antennapod.core.util.playback.Timeline;
 import de.danoeh.antennapod.menuhandler.FeedItemMenuHandler;
@@ -219,7 +220,8 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 return;
             }
             DefaultActionButtonCallback actionButtonCallback = new DefaultActionButtonCallback(getActivity());
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, item.isTagged(FeedItem.TAG_QUEUE) ?
+                    LongList.of(item.getId()) : new LongList(0));
             FeedMedia media = item.getMedia();
             if (media != null && media.isDownloaded()) {
                 // playback was started, dialog should close itself

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonCallback.java
Patch:
@@ -1,8 +1,9 @@
 package de.danoeh.antennapod.adapter;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
+import de.danoeh.antennapod.core.util.LongList;
 
 public interface ActionButtonCallback {
 	/** Is called when the action button of a list item has been pressed. */
-	void onActionButtonPressed(FeedItem item);
+	void onActionButtonPressed(FeedItem item, LongList queueIds);
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -232,7 +232,7 @@ public int getPosition() {
         @Override
         public void onClick(View v) {
             FeedItem item = (FeedItem) v.getTag();
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, itemAccess.getQueueIds());
         }
     };
 
@@ -319,6 +319,8 @@ public interface ItemAccess {
 
         boolean isInQueue(FeedItem item);
 
+        LongList getQueueIds();
+
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -51,13 +51,12 @@ public static boolean userChoseAddToQueue() {
     }
 
     @Override
-    public void onActionButtonPressed(final FeedItem item) {
+    public void onActionButtonPressed(final FeedItem item, final LongList queueIds) {
 
         if (item.hasMedia()) {
             final FeedMedia media = item.getMedia();
             boolean isDownloading = DownloadRequester.getInstance().isDownloadingFile(media);
             if (!isDownloading && !media.isDownloaded()) {
-                LongList queueIds = DBReader.getQueueIDList();
                 if (NetworkUtils.isDownloadAllowed() || userAllowedMobileDownloads()) {
                     try {
                         DBTasks.downloadFeedItems(context, item);

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -309,7 +309,7 @@ public void bind(FeedItem item) {
         @Override
         public void onClick(View v) {
             FeedItem item = (FeedItem) v.getTag();
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, itemAccess.getQueueIds());
         }
     };
 

File: app/src/play/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -209,7 +209,7 @@ private void saveLastNavFragment(String tag) {
         } else {
             edit.remove(PREF_LAST_FRAGMENT_TAG);
         }
-        edit.commit();
+        edit.apply();
     }
 
     private String getLastNavFragment() {

File: app/src/play/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -59,6 +59,7 @@
 import de.danoeh.antennapod.core.util.Converter;
 import de.danoeh.antennapod.core.util.DateUtils;
 import de.danoeh.antennapod.core.util.IntentUtils;
+import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.ShareUtils;
 import de.danoeh.antennapod.core.util.playback.Timeline;
 import de.danoeh.antennapod.menuhandler.FeedItemMenuHandler;
@@ -220,7 +221,8 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 return;
             }
             DefaultActionButtonCallback actionButtonCallback = new DefaultActionButtonCallback(getActivity());
-            actionButtonCallback.onActionButtonPressed(item);
+            actionButtonCallback.onActionButtonPressed(item, item.isTagged(FeedItem.TAG_QUEUE) ?
+                    LongList.of(item.getId()) : new LongList(0));
             FeedMedia media = item.getMedia();
             if (media != null && media.isDownloaded()) {
                 // playback was started, dialog should close itself

File: app/src/main/java/de/danoeh/antennapod/service/PlayerWidgetService.java
Patch:
@@ -196,7 +196,7 @@ private String getProgressString() {
         public void onServiceConnected(ComponentName className, IBinder service) {
             Log.d(TAG, "Connection to service established");
             synchronized (psLock) {
-                if(service instanceof PlaybackService.LocalBinder == false) {
+                if(service instanceof PlaybackService.LocalBinder) {
                     playbackService = ((PlaybackService.LocalBinder) service).getService();
                     startViewUpdaterIfNotRunning();
                 }

File: app/src/main/java/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -189,6 +189,9 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
             } else {
                 path = getExternalFilesDir(null);
             }
+            if(path == null) {
+                return;
+            }
             String message = null;
 			if(!path.exists()) {
 				message = String.format(getString(R.string.folder_does_not_exist_error), dir);

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java
Patch:
@@ -6,6 +6,7 @@
 import java.util.List;
 
 import de.danoeh.antennapod.core.storage.DBReader;
+import de.danoeh.antennapod.core.util.LongList;
 
 public class FeedItemFilter {
     private final String[] mProperties;
@@ -66,13 +67,14 @@ public List<FeedItem> filter(List<FeedItem> items) {
         if (showQueued && showNotQueued) return result;
         if (showDownloaded && showNotDownloaded) return result;
 
+        final LongList queuedIds =  DBReader.getQueueIDList();
         for(FeedItem item : items) {
             // If the item does not meet a requirement, skip it.
             if (showPlayed && !item.isPlayed()) continue;
             if (showUnplayed && item.isPlayed()) continue;
             if (showPaused && item.getState() != FeedItem.State.IN_PROGRESS) continue;
 
-            boolean queued = DBReader.getQueueIDList().contains(item.getId());
+            boolean queued = queuedIds.contains(item.getId());
             if (showQueued && !queued) continue;
             if (showNotQueued && queued) continue;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -185,8 +185,7 @@ protected void download() {
             if(request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
                 String contentType = response.header("Content-Type");
                 Log.d(TAG, "content type: " + contentType);
-                if(!contentType.startsWith("audio/") && !contentType.startsWith("video/") &&
-                        !contentType.equals("application/octet-stream")) {
+                if(contentType.startsWith("text/")) {
                     onFail(DownloadError.ERROR_FILE_TYPE, null);
                     return;
                 }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java
Patch:
@@ -6,6 +6,7 @@
 import java.util.List;
 
 import de.danoeh.antennapod.core.storage.DBReader;
+import de.danoeh.antennapod.core.util.LongList;
 
 public class FeedItemFilter {
     private final String[] mProperties;
@@ -66,13 +67,14 @@ public List<FeedItem> filter(List<FeedItem> items) {
         if (showQueued && showNotQueued) return result;
         if (showDownloaded && showNotDownloaded) return result;
 
+        final LongList queuedIds =  DBReader.getQueueIDList();
         for(FeedItem item : items) {
             // If the item does not meet a requirement, skip it.
             if (showPlayed && !item.isPlayed()) continue;
             if (showUnplayed && item.isPlayed()) continue;
             if (showPaused && item.getState() != FeedItem.State.IN_PROGRESS) continue;
 
-            boolean queued = DBReader.getQueueIDList().contains(item.getId());
+            boolean queued = queuedIds.contains(item.getId());
             if (showQueued && !queued) continue;
             if (showNotQueued && queued) continue;
 

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -348,7 +348,7 @@ private void savePreference() {
     }
 
     private boolean restoreFromPreference() {
-        if (!saveState) {
+        if (saveState) {
             Log.d(TAG, "Restoring from preferences");
             Activity activity = getActivity();
             if (activity != null) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -185,8 +185,7 @@ protected void download() {
             if(request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
                 String contentType = response.header("Content-Type");
                 Log.d(TAG, "content type: " + contentType);
-                if(!contentType.startsWith("audio/") && !contentType.startsWith("video/") &&
-                        !contentType.equals("application/octet-stream")) {
+                if(contentType.startsWith("text/")) {
                     onFail(DownloadError.ERROR_FILE_TYPE, null);
                     return;
                 }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -348,7 +348,7 @@ private void savePreference() {
     }
 
     private boolean restoreFromPreference() {
-        if (!saveState) {
+        if (saveState) {
             Log.d(TAG, "Restoring from preferences");
             Activity activity = getActivity();
             if (activity != null) {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -184,7 +184,9 @@ protected void download() {
 
             if(request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
                 String contentType = response.header("Content-Type");
-                if(!contentType.startsWith("audio/") && !contentType.startsWith("video/")) {
+                Log.d(TAG, "content type: " + contentType);
+                if(!contentType.startsWith("audio/") && !contentType.startsWith("video/") &&
+                        !contentType.equals("application/octet-stream")) {
                     onFail(DownloadError.ERROR_FILE_TYPE, null);
                     return;
                 }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -184,7 +184,9 @@ protected void download() {
 
             if(request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
                 String contentType = response.header("Content-Type");
-                if(!contentType.startsWith("audio/") && !contentType.startsWith("video/")) {
+                Log.d(TAG, "content type: " + contentType);
+                if(!contentType.startsWith("audio/") && !contentType.startsWith("video/") &&
+                        !contentType.equals("application/octet-stream")) {
                     onFail(DownloadError.ERROR_FILE_TYPE, null);
                     return;
                 }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -701,7 +701,7 @@ private void endPlayback(final Playable playable, boolean playNextEpisode, boole
         boolean isInQueue = false;
         FeedItem nextItem = null;
 
-        if (playable instanceof FeedMedia) {
+        if (playable instanceof FeedMedia && ((FeedMedia) playable).getItem() != null) {
             FeedMedia media = (FeedMedia) playable;
             FeedItem item = media.getItem();
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -701,7 +701,7 @@ private void endPlayback(final Playable playable, boolean playNextEpisode, boole
         boolean isInQueue = false;
         FeedItem nextItem = null;
 
-        if (playable instanceof FeedMedia) {
+        if (playable instanceof FeedMedia && ((FeedMedia) playable).getItem() != null) {
             FeedMedia media = (FeedMedia) playable;
             FeedItem item = media.getItem();
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -701,7 +701,7 @@ private void endPlayback(final Playable playable, boolean playNextEpisode, boole
         boolean isInQueue = false;
         FeedItem nextItem = null;
 
-        if (playable instanceof FeedMedia) {
+        if (playable instanceof FeedMedia && ((FeedMedia) playable).getItem() != null) {
             FeedMedia media = (FeedMedia) playable;
             FeedItem item = media.getItem();
 

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -211,11 +211,11 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     protected void onPause() {
-        super.onPause();
         if(controller != null) {
             controller.reinitServiceIfPaused();
             controller.pause();
         }
+        super.onPause();
     }
 
     /**
@@ -257,12 +257,12 @@ protected void onStart() {
 
     @Override
     protected void onStop() {
-        super.onStop();
         Log.d(TAG, "onStop()");
         if (controller != null) {
             controller.release();
             controller = null; // prevent leak
         }
+        super.onStop();
     }
 
     @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -322,7 +322,7 @@ public interface PSMPCallback {
 
         void onBufferingUpdate(int percent);
 
-        void reloadUI();
+        void onMediaChanged(boolean reloadUI);
 
         boolean onMediaPlayerInfo(int code, @StringRes int resourceId);
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/RemotePSMP.java
Patch:
@@ -244,7 +244,7 @@ private void onRemoteMediaPlayerStatusUpdated(@NonNull EndPlaybackCall endPlayba
                 setPlayerStatus(PlayerStatus.INDETERMINATE, currentMedia);
         }
         if (updateUI) {
-            callback.reloadUI();
+            callback.onMediaChanged(true);
         }
     }
 
@@ -302,7 +302,7 @@ private void playMediaObject(@NonNull final Playable playable, final boolean for
         setPlayerStatus(PlayerStatus.INITIALIZING, media);
         try {
             media.loadMetadata();
-            callback.reloadUI();
+            callback.onMediaChanged(true);
             setPlayerStatus(PlayerStatus.INITIALIZED, media);
             if (prepareImmediately) {
                 prepare();

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -562,7 +562,7 @@ public MediaplayerInfoPagerAdapter(FragmentManager fm, Playable media) {
         private ChaptersFragment chaptersFragment;
 
         public void onMediaChanged(Playable media) {
-            Log.d(TAG, "media changing to " + media.getEpisodeTitle());
+            Log.d(TAG, "media changing to " + ((media != null) ? media.getEpisodeTitle() : "null"));
             this.media = media;
             if(coverFragment != null) {
                 coverFragment.onMediaChanged(media);

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -211,11 +211,11 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     protected void onPause() {
-        super.onPause();
         if(controller != null) {
             controller.reinitServiceIfPaused();
             controller.pause();
         }
+        super.onPause();
     }
 
     /**
@@ -257,12 +257,12 @@ protected void onStart() {
 
     @Override
     protected void onStop() {
-        super.onStop();
         Log.d(TAG, "onStop()");
         if (controller != null) {
             controller.release();
             controller = null; // prevent leak
         }
+        super.onStop();
     }
 
     @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -322,7 +322,7 @@ public interface PSMPCallback {
 
         void onBufferingUpdate(int percent);
 
-        void reloadUI();
+        void reloadUI(boolean onlyMediaSession);
 
         boolean onMediaPlayerInfo(int code, @StringRes int resourceId);
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/RemotePSMP.java
Patch:
@@ -244,7 +244,7 @@ private void onRemoteMediaPlayerStatusUpdated(@NonNull EndPlaybackCall endPlayba
                 setPlayerStatus(PlayerStatus.INDETERMINATE, currentMedia);
         }
         if (updateUI) {
-            callback.reloadUI();
+            callback.reloadUI(false);
         }
     }
 
@@ -302,7 +302,7 @@ private void playMediaObject(@NonNull final Playable playable, final boolean for
         setPlayerStatus(PlayerStatus.INITIALIZING, media);
         try {
             media.loadMetadata();
-            callback.reloadUI();
+            callback.reloadUI(false);
             setPlayerStatus(PlayerStatus.INITIALIZED, media);
             if (prepareImmediately) {
                 prepare();

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerInfoActivity.java
Patch:
@@ -562,7 +562,7 @@ public MediaplayerInfoPagerAdapter(FragmentManager fm, Playable media) {
         private ChaptersFragment chaptersFragment;
 
         public void onMediaChanged(Playable media) {
-            Log.d(TAG, "media changing to " + media.getEpisodeTitle());
+            Log.d(TAG, "media changing to " + ((media != null) ? media.getEpisodeTitle() : "null"));
             this.media = media;
             if(coverFragment != null) {
                 coverFragment.onMediaChanged(media);

File: app/src/main/java/de/danoeh/antennapod/fragment/ChaptersFragment.java
Patch:
@@ -7,14 +7,14 @@
 import android.widget.ListView;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.AudioplayerActivity.AudioplayerContentFragment;
+import de.danoeh.antennapod.activity.MediaplayerInfoActivity.MediaplayerInfoContentFragment;
 import de.danoeh.antennapod.adapter.ChaptersListAdapter;
 import de.danoeh.antennapod.core.feed.Chapter;
 import de.danoeh.antennapod.core.util.playback.Playable;
 import de.danoeh.antennapod.core.util.playback.PlaybackController;
 
 
-public class ChaptersFragment extends ListFragment implements AudioplayerContentFragment {
+public class ChaptersFragment extends ListFragment implements MediaplayerInfoContentFragment {
 
     private static final String TAG = "ChaptersFragment";
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -12,14 +12,14 @@
 import com.bumptech.glide.Glide;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.AudioplayerActivity.AudioplayerContentFragment;
+import de.danoeh.antennapod.activity.MediaplayerInfoActivity.MediaplayerInfoContentFragment;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.util.playback.Playable;
 
 /**
  * Displays the cover and the title of a FeedItem.
  */
-public class CoverFragment extends Fragment implements AudioplayerContentFragment {
+public class CoverFragment extends Fragment implements MediaplayerInfoContentFragment {
 
     private static final String TAG = "CoverFragment";
     private static final String ARG_PLAYABLE = "arg.playable";

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -172,7 +172,7 @@ private boolean loadMediaInfo() {
                         .into(imgvCover);
 
                 fragmentLayout.setVisibility(View.VISIBLE);
-                if (controller.isPlayingVideo()) {
+                if (controller.isPlayingVideoLocally()) {
                     butPlay.setVisibility(View.GONE);
                 } else {
                     butPlay.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.List;
 
 import de.danoeh.antennapod.R;
+import de.danoeh.antennapod.activity.CastEnabledActivity;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.adapter.DefaultActionButtonCallback;
 import de.danoeh.antennapod.core.event.DownloadEvent;
@@ -311,6 +312,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         if(!isAdded() || item == null) {
             return;
         }
+        ((CastEnabledActivity) getActivity()).requestCastButton(MenuItem.SHOW_AS_ACTION_ALWAYS);
         inflater.inflate(R.menu.feeditem_options, menu);
         popupMenu = menu;
         if (item.hasMedia()) {

File: core/src/main/java/de/danoeh/antennapod/core/ClientConfig.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 
+import de.danoeh.antennapod.core.cast.CastManager;
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
@@ -41,6 +42,7 @@ public static synchronized void initialize(Context context) {
         UpdateManager.init(context);
         PlaybackPreferences.init(context);
         NetworkUtils.init(context);
+        CastManager.init(context);
         initialized = true;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/PlaybackServiceCallbacks.java
Patch:
@@ -15,9 +15,10 @@ public interface PlaybackServiceCallbacks {
      * type of media that is being played.
      *
      * @param mediaType The type of media that is being played.
+     * @param remotePlayback true if the media is played on a remote device.
      * @return A non-null activity intent.
      */
-    Intent getPlayerActivityIntent(Context context, MediaType mediaType);
+    Intent getPlayerActivityIntent(Context context, MediaType mediaType, boolean remotePlayback);
 
     /**
      * Returns true if the PlaybackService should load new episodes from the queue when playback ends

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/MediaPlayerError.java
Patch:
@@ -6,7 +6,7 @@
 
 /** Utility class for MediaPlayer errors. */
 public class MediaPlayerError {
-	
+
 	/** Get a human-readable string for a specific error code. */
 	public static String getErrorString(Context context, int code) {
 		int resId;

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -125,8 +125,8 @@ public ImageButton getPlayButton() {
             }
 
             @Override
-            public void postStatusMsg(int msg) {
-                MediaplayerActivity.this.postStatusMsg(msg);
+            public void postStatusMsg(int msg, boolean showToast) {
+                MediaplayerActivity.this.postStatusMsg(msg, showToast);
             }
 
             @Override
@@ -585,7 +585,7 @@ protected void onResume() {
      */
     protected abstract void onAwaitingVideoSurface();
 
-    protected abstract void postStatusMsg(int resId);
+    protected abstract void postStatusMsg(int resId, boolean showToast);
 
     protected abstract void clearStatusMsg();
 

File: app/src/main/java/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -164,7 +164,7 @@ protected void onAwaitingVideoSurface() {
     }
 
     @Override
-    protected void postStatusMsg(int resId) {
+    protected void postStatusMsg(int resId, boolean showToast) {
         if (resId == R.string.player_preparing_msg) {
             progressIndicator.setVisibility(View.VISIBLE);
         } else {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java
Patch:
@@ -848,7 +848,7 @@ private void genericOnBufferingUpdate(int percent) {
             (mp, what, extra) -> genericInfoListener(what);
 
     private boolean genericInfoListener(int what) {
-        return callback.onMediaPlayerInfo(what);
+        return callback.onMediaPlayerInfo(what, 0);
     }
 
     private final MediaPlayer.OnSpeedAdjustmentAvailableChangedListener audioSetSpeedAbilityListener =

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.net.wifi.WifiManager;
 import android.support.annotation.NonNull;
+import android.support.annotation.StringRes;
 import android.util.Log;
 import android.util.Pair;
 import android.view.SurfaceHolder;
@@ -323,7 +324,7 @@ public interface PSMPCallback {
 
         void reloadUI();
 
-        boolean onMediaPlayerInfo(int code);
+        boolean onMediaPlayerInfo(int code, @StringRes int resourceId);
 
         boolean onMediaPlayerError(Object inObj, int what, int extra);
 

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/MediaPlayerError.java
Patch:
@@ -6,7 +6,7 @@
 
 /** Utility class for MediaPlayer errors. */
 public class MediaPlayerError {
-	
+
 	/** Get a human-readable string for a specific error code. */
 	public static String getErrorString(Context context, int code) {
 		int resId;

File: app/src/main/java/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -132,7 +132,8 @@ private void showChooseDataFolderDialog() {
         List<String> folders = new ArrayList<>(mediaDirs.length);
         List<CharSequence> choices = new ArrayList<>(mediaDirs.length);
         for(int i=0; i < mediaDirs.length; i++) {
-            if(mediaDirs[i] == null) {
+            File dir = mediaDirs[i];
+            if(dir == null || !dir.exists() || !dir.canRead() || !dir.canWrite()) {
                 continue;
             }
             String path = mediaDirs[i].getAbsolutePath();

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -819,7 +819,8 @@ private void showChooseDataFolderDialog() {
         List<String> folders = new ArrayList<>(mediaDirs.length);
         List<CharSequence> choices = new ArrayList<>(mediaDirs.length);
         for(int i=0; i < mediaDirs.length; i++) {
-            if(mediaDirs[i] == null) {
+            File dir = mediaDirs[i];
+            if(dir == null || !dir.exists() || !dir.canRead() || !dir.canWrite()) {
                 continue;
             }
             String path = mediaDirs[i].getAbsolutePath();

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -278,7 +278,7 @@ protected final synchronized void releaseWifiLockIfNecessary() {
      * @param newMedia  The new playable object of the PSMP object. This can be null.
      */
     protected synchronized final void setPlayerStatus(@NonNull PlayerStatus newStatus, Playable newMedia) {
-        Log.d(TAG, "Setting player status to " + newStatus);
+        Log.d(TAG, this.getClass().getSimpleName() + ": Setting player status to " + newStatus);
 
         this.playerStatus = newStatus;
         setPlayable(newMedia);
@@ -327,7 +327,7 @@ public interface PSMPCallback {
 
         boolean onMediaPlayerError(Object inObj, int what, int extra);
 
-        boolean endPlayback(boolean playNextEpisode, boolean wasSkipped, boolean switchingPlayers);
+        boolean endPlayback(Playable media, boolean playNextEpisode, boolean wasSkipped, boolean switchingPlayers);
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -750,6 +750,7 @@ public void notifyVideoSurfaceAbandoned() {
     public void reinitServiceIfPaused() {
         if (playbackService != null
                 && playbackService.isStreaming()
+                && !PlaybackService.isCasting()
                 && (playbackService.getStatus() == PlayerStatus.PAUSED ||
                 (playbackService.getStatus() == PlayerStatus.PREPARING &&
                         !playbackService.isStartWhenPrepared()))) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/RemotePSMP.java
Patch:
@@ -482,7 +482,7 @@ public void setVideoSurface(SurfaceHolder surface) {
 
     @Override
     public void resetVideoSurface() {
-        throw new UnsupportedOperationException("Resetting Video Surface unsupported in Remote Media Player");
+        Log.e(TAG, "Resetting Video Surface unsupported in Remote Media Player");
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -106,7 +106,9 @@ public class AudioplayerActivity extends MediaplayerActivity implements NavDrawe
     protected void onStop() {
         super.onStop();
         Log.d(TAG, "onStop()");
-        pagerAdapter.setController(null);
+        if(pagerAdapter != null) {
+            pagerAdapter.setController(null);
+        }
         if(subscription != null) {
             subscription.unsubscribe();
         }

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -143,7 +143,7 @@ protected void onPostExecute(Void aVoid) {
                         if (exception == null) {
                             advance();
                         } else {
-                            txtvError.setText(exception.getMessage());
+                            txtvError.setText(exception.getCause().getMessage());
                             txtvError.setVisibility(View.VISIBLE);
                         }
                     }

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -193,8 +193,7 @@ public void onCreateContextMenu(final ContextMenu menu, View v, ContextMenu.Cont
                     item1.setVisible(visible);
                 }
             };
-            FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true,
-                    itemAccess.getQueueIds(), itemAccess.getFavoritesIds());
+            FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true, itemAccess.getQueueIds());
         }
 
         @Override
@@ -322,7 +321,6 @@ public interface ItemAccess {
         long getItemDownloadSize(FeedItem item);
         int getItemDownloadProgressPercent(FeedItem item);
         LongList getQueueIds();
-        LongList getFavoritesIds();
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -53,8 +53,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 			holder.date = (TextView) convertView.findViewById(R.id.txtvDate);
 			holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
 			holder.type = (TextView) convertView.findViewById(R.id.txtvType);
-			holder.reason = (TextView) convertView
-					.findViewById(R.id.txtvReason);
+			holder.reason = (TextView) convertView.findViewById(R.id.txtvReason);
 			convertView.setTag(holder);
 		} else {
 			holder = (Holder) convertView.getTag();

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -20,7 +20,9 @@ public enum DownloadError {
 	ERROR_REQUEST_ERROR(12, R.string.download_error_request_error),
     ERROR_DB_ACCESS_ERROR(13, R.string.download_error_db_access),
     ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized),
-	ERROR_FILE_TYPE(15, R.string.download_error_file_type_type);
+	ERROR_FILE_TYPE(15, R.string.download_error_file_type_type),
+	ERROR_FORBIDDEN(16, R.string.download_error_forbidden);
+
 
 	private final int code;
 	private final int resId;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromIntentActivity.java
Patch:
@@ -18,6 +18,9 @@ protected void onCreate(Bundle savedInstanceState) {
 		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         Uri uri = getIntent().getData();
+        if(uri.toString().startsWith("/")) {
+            uri = Uri.parse("file://" + uri.toString());
+        }
         importUri(uri);
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromPathActivity.java
Patch:
@@ -135,6 +135,9 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         if (resultCode == RESULT_OK && requestCode == CHOOSE_OPML_FILE) {
             Uri uri = data.getData();
+            if(uri.toString().startsWith("/")) {
+                uri = Uri.parse("file://" + uri.toString());
+            }
             importUri(uri);
         }
     }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -302,7 +302,6 @@ public void loadFragment(String tag, Bundle args) {
                 break;
             case SubscriptionFragment.TAG:
                 SubscriptionFragment subscriptionFragment = new SubscriptionFragment();
-                subscriptionFragment.setItemAccess(itemAccess);
                 fragment = subscriptionFragment;
                 break;
             default:

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -203,9 +203,9 @@ public static boolean isPersistNotify() {
     }
 
     /**
-     * Returns true if notifications are persistent
+     * Returns true if the lockscreen background should be set to the current episode's image
      *
-     * @return {@code true} if notifications are persistent, {@code false}  otherwise
+     * @return {@code true} if the lockscreen background should be set, {@code false}  otherwise
      */
     public static boolean setLockscreenBackground() {
         return prefs.getBoolean(PREF_LOCKSCREEN_BACKGROUND, true);

File: app/src/main/java/de/danoeh/antennapod/adapter/CoverTarget.java
Patch:
@@ -16,9 +16,6 @@
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 
-/**
- * Created by Tom on 3/29/16.
- */
 class CoverTarget extends GlideDrawableImageViewTarget {
 
     private final WeakReference<Uri> fallback;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromIntentActivity.java
Patch:
@@ -18,6 +18,9 @@ protected void onCreate(Bundle savedInstanceState) {
 		getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
         Uri uri = getIntent().getData();
+        if(uri.toString().startsWith("/")) {
+            uri = Uri.parse("file://" + uri.toString());
+        }
         importUri(uri);
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromPathActivity.java
Patch:
@@ -135,6 +135,9 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
         if (resultCode == RESULT_OK && requestCode == CHOOSE_OPML_FILE) {
             Uri uri = data.getData();
+            if(uri.toString().startsWith("/")) {
+                uri = Uri.parse("file://" + uri.toString());
+            }
             importUri(uri);
         }
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -409,7 +409,7 @@ public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
                     Log.d(TAG, "remove(" + position + ")");
                     final FeedItem item = queue.get(position);
                     final boolean isRead = item.isPlayed();
-                    DBWriter.markItemPlayed(FeedItem.PLAYED, item.getId());
+                    DBWriter.markItemPlayed(FeedItem.PLAYED, false, item.getId());
                     DBWriter.removeQueueItem(getActivity(), item, true);
                     Snackbar snackbar = Snackbar.make(root, getString(R.string.marked_as_read_label), Snackbar.LENGTH_LONG);
                     snackbar.setAction(getString(R.string.undo), v -> {

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -162,7 +162,7 @@ private Feed createTestFeed(int numItems, boolean withImage, boolean withFeedMed
         if (withImage) {
             image = new FeedImage(0, "image", null, "http://example.com/picture", false);
         }
-        Feed feed = new Feed(0, new Date(), "title", "http://example.com", "This is the description",
+        Feed feed = new Feed(0, null, "title", "http://example.com", "This is the description",
                 "http://example.com/payment", "Daniel", "en", null, "http://example.com/feed", image, file.getAbsolutePath(),
                 "http://example.com/feed", true);
         feed.setItems(new ArrayList<FeedItem>());

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceTaskManagerTest.java
Patch:
@@ -34,6 +34,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         // create new database
+        PodDBAdapter.init(getInstrumentation().getTargetContext());
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();
@@ -48,7 +49,7 @@ public void testInit() {
     private List<FeedItem> writeTestQueue(String pref) {
         final Context c = getInstrumentation().getTargetContext();
         final int NUM_ITEMS = 10;
-        Feed f = new Feed(0, new Date(), "title", "link", "d", null, null, null, null, "id", null, "null", "url", false);
+        Feed f = new Feed(0, null, "title", "link", "d", null, null, null, null, "id", null, "null", "url", false);
         f.setItems(new ArrayList<>());
         for (int i = 0; i < NUM_ITEMS; i++) {
             f.getItems().add(new FeedItem(0, pref + i, pref + i, "link", new Date(), FeedItem.PLAYED, f));

File: app/src/androidTest/java/de/test/antennapod/storage/DBNullCleanupAlgorithmTest.java
Patch:
@@ -19,8 +19,6 @@
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 
-import static de.test.antennapod.storage.DBTestUtils.saveFeedlist;
-
 /**
  * Tests that the APNullCleanupAlgorithm is working correctly.
  */
@@ -60,6 +58,7 @@ protected void setUp() throws Exception {
         assertTrue(destFolder.canWrite());
 
         // create new database
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();
@@ -82,7 +81,7 @@ protected void setUp() throws Exception {
     public void testPerformAutoCleanupShouldNotDelete() throws IOException {
         final int NUM_ITEMS = EPISODE_CACHE_SIZE * 2;
 
-        Feed feed = new Feed("url", new Date(), "title");
+        Feed feed = new Feed("url", null, "title");
         List<FeedItem> items = new ArrayList<>();
         feed.setItems(items);
         List<File> files = new ArrayList<>();

File: app/src/androidTest/java/de/test/antennapod/storage/DBQueueCleanupAlgorithmTest.java
Patch:
@@ -32,7 +32,7 @@ public DBQueueCleanupAlgorithmTest() {
     public void testPerformAutoCleanupHandleUnplayed() throws IOException {
         final int NUM_ITEMS = EPISODE_CACHE_SIZE * 2;
 
-        Feed feed = new Feed("url", new Date(), "title");
+        Feed feed = new Feed("url", null, "title");
         List<FeedItem> items = new ArrayList<>();
         feed.setItems(items);
         List<File> files = new ArrayList<>();

File: app/src/androidTest/java/de/test/antennapod/storage/DBTestUtils.java
Patch:
@@ -44,7 +44,7 @@ public static List<Feed> saveFeedlist(int numFeeds, int numItems, boolean withMe
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();
         for (int i = 0; i < numFeeds; i++) {
-            Feed f = new Feed(0, new Date(), "feed " + i, "link" + i, "descr", null, null,
+            Feed f = new Feed(0, null, "feed " + i, "link" + i, "descr", null, null,
                     null, null, "id" + i, null, null, "url" + i, false, new FlattrStatus(), false, null, null, false);
             f.setItems(new ArrayList<>());
             for (int j = 0; j < numItems; j++) {

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -143,7 +143,7 @@ public void addHostedFeedData() throws IOException {
         for (int i = 0; i < NUM_FEEDS; i++) {
             File bitmapFile = newBitmapFile("image" + i);
             FeedImage image = new FeedImage(0, "image " + i, null, hostFile(bitmapFile), false);
-            Feed feed = new Feed(0, new Date(), "Title " + i, "http://example.com/" + i, "Description of feed " + i,
+            Feed feed = new Feed(0, null, "Title " + i, "http://example.com/" + i, "Description of feed " + i,
                     "http://example.com/pay/feed" + i, "author " + i, "en", Feed.TYPE_RSS2, "feed" + i, image, null,
                     "http://example.com/feed/src/" + i, false);
             image.setOwner(feed);

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -4,7 +4,7 @@
 import android.graphics.Color;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
@@ -30,7 +30,7 @@
 /**
  * Displays the 'about' screen
  */
-public class AboutActivity extends ActionBarActivity {
+public class AboutActivity extends AppCompatActivity {
 
     private static final String TAG = AboutActivity.class.getSimpleName();
 
@@ -87,7 +87,7 @@ public void call(Subscriber<? super String> subscriber) {
                             res.recycle();
                             input = getAssets().open(filename);
                             String webViewData = IOUtils.toString(input, Charset.defaultCharset());
-                            if(false == webViewData.startsWith("<!DOCTYPE html>")) {
+                            if(!webViewData.startsWith("<!DOCTYPE html>")) {
                                 //webViewData = webViewData.replace("\n\n", "</p><p>");
                                 webViewData = webViewData.replace("%", "&#37;");
                                 webViewData =

File: app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -8,7 +8,7 @@
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.support.v7.app.ActionBar;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.ViewGroup;
@@ -24,7 +24,7 @@
  * PreferenceActivity for API 11+. In order to change the behavior of the preference UI, see
  * PreferenceController.
  */
-public class PreferenceActivity extends ActionBarActivity {
+public class PreferenceActivity extends AppCompatActivity {
 
     private PreferenceController preferenceController;
     private MainFragment prefFragment;
@@ -49,7 +49,7 @@ public Activity getActivity() {
     protected void onCreate(Bundle savedInstanceState) {
         // This must be the FIRST thing we do, otherwise other code may not have the
         // reference it needs
-        instance = new WeakReference<PreferenceActivity>(this);
+        instance = new WeakReference<>(this);
 
         setTheme(UserPreferences.getTheme());
         super.onCreate(savedInstanceState);

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonCallback.java
Patch:
@@ -4,5 +4,5 @@
 
 public interface ActionButtonCallback {
 	/** Is called when the action button of a list item has been pressed. */
-	abstract void onActionButtonPressed(FeedItem item);
+	void onActionButtonPressed(FeedItem item);
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/AdapterUtils.java
Patch:
@@ -47,9 +47,10 @@ public static void updateEpisodePlaybackProgress(FeedItem item, TextView txtvPos
                                 - media.getPosition()));
             }
         } else if (!media.isDownloaded()) {
+            Log.d(TAG, "size: " + media.getSize());
             if (media.getSize() > 0) {
                 txtvPos.setText(Converter.byteToString(media.getSize()));
-            } else if(false == media.checkedOnSizeButUnknown()) {
+            } else if(NetworkUtils.isDownloadAllowed() && !media.checkedOnSizeButUnknown()) {
                 txtvPos.setText("{fa-spinner}");
                 Iconify.addIcons(txtvPos);
                 NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -1,9 +1,7 @@
 package de.danoeh.antennapod.adapter;
 
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
-import android.support.v7.app.AlertDialog;
 import android.widget.Toast;
 
 import com.afollestad.materialdialogs.MaterialDialog;

File: app/src/main/java/de/danoeh/antennapod/adapter/SearchlistAdapter.java
Patch:
@@ -9,7 +9,6 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -112,7 +111,7 @@ static class Holder {
         TextView subtitle;
     }
 
-    public static interface ItemAccess {
+    public interface ItemAccess {
         int getCount();
 
         SearchResult getItem(int position);

File: app/src/main/java/de/danoeh/antennapod/adapter/SubscriptionsAdapter.java
Patch:
@@ -40,7 +40,7 @@ public Object getItem(int position) {
 
     @Override
     public long getItemId(int position) {
-        return 0;
+        return mItemAccess.getItem(position).getId();
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/adapter/gpodnet/PodcastListAdapter.java
Patch:
@@ -9,7 +9,6 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
 
 import org.apache.commons.lang3.StringUtils;
 

File: app/src/main/java/de/danoeh/antennapod/adapter/itunes/ItunesAdapter.java
Patch:
@@ -167,7 +167,7 @@ public static Podcast fromToplist(JSONObject json) throws JSONException {
             for(int i=0; imageUrl == null && i < images.length(); i++) {
                 JSONObject image = images.getJSONObject(i);
                 String height = image.getJSONObject("attributes").getString("height");
-                if(Integer.valueOf(height) >= 100) {
+                if(Integer.parseInt(height) >= 100) {
                     imageUrl = image.getString("label");
                 }
             }

File: app/src/main/java/de/danoeh/antennapod/config/DBTasksCallbacksImpl.java
Patch:
@@ -2,7 +2,6 @@
 
 import de.danoeh.antennapod.core.DBTasksCallbacks;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
-import de.danoeh.antennapod.core.storage.APCleanupAlgorithm;
 import de.danoeh.antennapod.core.storage.APDownloadAlgorithm;
 import de.danoeh.antennapod.core.storage.AutomaticDownloadAlgorithm;
 import de.danoeh.antennapod.core.storage.EpisodeCleanupAlgorithm;

File: app/src/main/java/de/danoeh/antennapod/dialog/GpodnetSetHostnameDialog.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.dialog;
 
 import android.content.Context;
-import android.content.DialogInterface;
 import android.support.v7.app.AlertDialog;
 import android.text.Editable;
 import android.text.InputType;

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -102,8 +102,8 @@ private static void showSpeedSelectorDialog(final Context context) {
         builder.setPositiveButton(android.R.string.ok,
             (dialog, which) -> {
                 int choiceCount = 0;
-                for (int i = 0; i < speedChecked.length; i++) {
-                    if (speedChecked[i]) {
+                for (boolean checked : speedChecked) {
+                    if (checked) {
                         choiceCount++;
                     }
                 }

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -154,7 +154,7 @@ private void loadItems() {
         if(subscription != null) {
             subscription.unsubscribe();
         }
-        subscription = Observable.fromCallable(() -> DBReader.getDownloadLog())
+        subscription = Observable.fromCallable(DBReader::getDownloadLog)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -124,7 +124,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             } else {
                 gridView.setVisibility(View.GONE);
                 progressBar.setVisibility(View.VISIBLE);
-                rx.Observable.create((Observable.OnSubscribe<String>) subscriber -> {
+                subscription = Observable.create((Observable.OnSubscribe<String>) subscriber -> {
                             OkHttpClient client = AntennapodHttpClient.getHttpClient();
                             Request.Builder httpReq = new Request.Builder()
                                     .url(podcast.feedUrl)
@@ -233,7 +233,7 @@ private void loadToplist() {
         butRetry.setVisibility(View.GONE);
         txtvEmpty.setVisibility(View.GONE);
         progressBar.setVisibility(View.VISIBLE);
-        subscription = rx.Observable.create((Observable.OnSubscribe<List<Podcast>>) subscriber -> {
+        subscription = Observable.create((Observable.OnSubscribe<List<Podcast>>) subscriber -> {
                     String lang = Locale.getDefault().getLanguage();
                     String url = "https://itunes.apple.com/" + lang + "/rss/toppodcasts/limit=25/explicit=true/json";
                     OkHttpClient client = AntennapodHttpClient.getHttpClient();

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -220,7 +220,7 @@ private void onFragmentLoaded() {
     private FeedItemlistAdapter.ItemAccess itemAccess = new FeedItemlistAdapter.ItemAccess() {
         @Override
         public boolean isInQueue(FeedItem item) {
-            return (queue != null) ? queue.contains(item.getId()) : false;
+            return (queue != null) && queue.contains(item.getId());
         }
 
         @Override
@@ -255,7 +255,7 @@ private void loadItems() {
         if(subscription != null) {
             subscription.unsubscribe();
         }
-        subscription = Observable.fromCallable(() -> loadData())
+        subscription = Observable.fromCallable(this::loadData)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -208,7 +208,7 @@ private void search() {
         if (viewCreated && !itemsLoaded) {
             setListShown(false);
         }
-        subscription = Observable.fromCallable(() -> performSearch())
+        subscription = Observable.fromCallable(this::performSearch)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -63,10 +63,10 @@ public static boolean onOptionsItemClicked(final Context context, final MenuItem
                                                final Feed selectedFeed) throws DownloadRequestException {
         switch (item.getItemId()) {
             case R.id.refresh_item:
-                DBTasks.refreshFeed(context, selectedFeed);
+                DBTasks.forceRefreshFeed(context, selectedFeed);
                 break;
             case R.id.refresh_complete_item:
-                DBTasks.refreshCompleteFeed(context, selectedFeed);
+                DBTasks.forceRefreshCompleteFeed(context, selectedFeed);
                 break;
             case R.id.filter_items:
                 showFilterDialog(context, selectedFeed);
@@ -92,7 +92,7 @@ public void onConfirmButtonPressed(
                     context.startActivity(intent);
                 } else {
                     Toast.makeText(context, context.getString(R.string.download_error_malformed_url),
-                            Toast.LENGTH_SHORT);
+                            Toast.LENGTH_SHORT).show();
                 }
                 break;
             case R.id.support_item:

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -39,6 +39,7 @@ public static void refreshLockItem(Context context, Menu menu) {
             queueLock.setTitle(de.danoeh.antennapod.R.string.lock_queue);
             queueLock.setIcon(ta.getDrawable(1));
         }
+        ta.recycle();
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/menuhandler/NavDrawerActivity.java
Patch:
@@ -5,5 +5,5 @@
  */
 public interface NavDrawerActivity {
 
-    public boolean isDrawerOpen();
+    boolean isDrawerOpen();
 }

File: app/src/main/java/de/danoeh/antennapod/receiver/ConnectivityActionReceiver.java
Patch:
@@ -8,6 +8,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -20,7 +21,8 @@ public void onReceive(final Context context, Intent intent) {
 		if (TextUtils.equals(intent.getAction(), ConnectivityManager.CONNECTIVITY_ACTION)) {
 			Log.d(TAG, "Received intent");
 
-			if (NetworkUtils.autodownloadNetworkAvailable()) {
+            ClientConfig.initialize(context);
+            if (NetworkUtils.autodownloadNetworkAvailable()) {
 				Log.d(TAG, "auto-dl network available, starting auto-download");
 					DBTasks.autodownloadUndownloadedItems(context);
 			} else { // if new network is Wi-Fi, finish ongoing downloads,

File: app/src/main/java/de/danoeh/antennapod/receiver/PowerConnectionReceiver.java
Patch:
@@ -3,10 +3,9 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.os.BatteryManager;
 import android.util.Log;
 
-import de.danoeh.antennapod.core.BuildConfig;
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
@@ -25,6 +24,7 @@ public void onReceive(Context context, Intent intent) {
 
         Log.d(TAG, "charging intent: " + action);
 
+        ClientConfig.initialize(context);
         if (Intent.ACTION_POWER_CONNECTED.equals(action)) {
             Log.d(TAG, "charging, starting auto-download");
             // we're plugged in, this is a great time to auto-download if everything else is

File: core/src/main/java/de/danoeh/antennapod/core/ApplicationCallbacks.java
Patch:
@@ -12,12 +12,12 @@ public interface ApplicationCallbacks {
     /**
      * Returns a non-null instance of the application class
      */
-    public Application getApplicationInstance();
+    Application getApplicationInstance();
 
     /**
      * Returns a non-null intent that starts the storage error
      * activity.
      */
-    public Intent getStorageErrorActivity(Context context);
+    Intent getStorageErrorActivity(Context context);
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/DBTasksCallbacks.java
Patch:
@@ -11,10 +11,10 @@ public interface DBTasksCallbacks {
     /**
      * Returns the client's implementation of the AutomaticDownloadAlgorithm interface.
      */
-    public AutomaticDownloadAlgorithm getAutomaticDownloadAlgorithm();
+    AutomaticDownloadAlgorithm getAutomaticDownloadAlgorithm();
 
     /**
      * Returns the client's implementation of the EpisodeCacheCleanupAlgorithm interface.
      */
-    public EpisodeCleanupAlgorithm getEpisodeCacheCleanupAlgorithm();
+    EpisodeCleanupAlgorithm getEpisodeCacheCleanupAlgorithm();
 }

File: core/src/main/java/de/danoeh/antennapod/core/GpodnetCallbacks.java
Patch:
@@ -13,7 +13,7 @@ public interface GpodnetCallbacks {
      * Returns if true if the gpodder.net integration should be activated,
      * false otherwise.
      */
-    public boolean gpodnetEnabled();
+    boolean gpodnetEnabled();
 
     /**
      * Returns a PendingIntent for the error notification of the GpodnetSyncService.
@@ -23,5 +23,5 @@ public interface GpodnetCallbacks {
      * @return A PendingIntent for the notification or null if gpodder.net integration
      * has been disabled (i.e. gpodnetEnabled() == false).
      */
-    public PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(Context context);
+    PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(Context context);
 }

File: core/src/main/java/de/danoeh/antennapod/core/PlaybackServiceCallbacks.java
Patch:
@@ -17,17 +17,17 @@ public interface PlaybackServiceCallbacks {
      * @param mediaType The type of media that is being played.
      * @return A non-null activity intent.
      */
-    public Intent getPlayerActivityIntent(Context context, MediaType mediaType);
+    Intent getPlayerActivityIntent(Context context, MediaType mediaType);
 
     /**
      * Returns true if the PlaybackService should load new episodes from the queue when playback ends
      * and false if the PlaybackService should ignore the queue and load no more episodes when playback
      * finishes.
      */
-    public boolean useQueue();
+    boolean useQueue();
 
     /**
      * Returns a drawable resource that is used for the notification of the playback service.
      */
-    public int getNotificationIconResource(Context context);
+    int getNotificationIconResource(Context context);
 }

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FeedRemover.java
Patch:
@@ -30,9 +30,7 @@ public FeedRemover(Context context, Feed feed) {
 	protected Void doInBackground(Void... params) {
         try {
             DBWriter.deleteFeed(context, feed.getId()).get();
-        } catch (InterruptedException e) {
-            e.printStackTrace();
-        } catch (ExecutionException e) {
+        } catch (InterruptedException | ExecutionException e) {
             e.printStackTrace();
         }
         return null;

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/ImageResource.java
Patch:
@@ -16,13 +16,13 @@ public interface ImageResource {
      * <p/>
      * For example implementations, see FeedMedia or ExternalMedia.
      */
-    public static final String SCHEME_MEDIA = "media";
+    String SCHEME_MEDIA = "media";
 
 
     /**
      * Parameter key for an encoded fallback Uri. This Uri MUST point to a local image file
      */
-    public static final String PARAM_FALLBACK = "fallback";
+    String PARAM_FALLBACK = "fallback";
 
     /**
      * Returns a Uri to the image or null if no image is available.
@@ -33,5 +33,5 @@ public interface ImageResource {
      * The Uri can also have an optional fallback-URL if loading the default URL
      * failed (see PARAM_FALLBACK).
      */
-    public Uri getImageUri();
+    Uri getImageUri();
 }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedComponent.java
Patch:
@@ -54,9 +54,8 @@ public boolean equals(Object o) {
 
         FeedComponent that = (FeedComponent) o;
 
-        if (id != that.id) return false;
+        return id == that.id;
 
-        return true;
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedFile.java
Patch:
@@ -1,5 +1,7 @@
 package de.danoeh.antennapod.core.feed;
 
+import android.text.TextUtils;
+
 import java.io.File;
 
 /**
@@ -54,7 +56,7 @@ public boolean compareWithOther(FeedFile other) {
         if (super.compareWithOther(other)) {
             return true;
         }
-        if (!download_url.equals(other.download_url)) {
+        if (!TextUtils.equals(download_url, other.download_url)) {
             return true;
         }
         return false;

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java
Patch:
@@ -68,7 +68,7 @@ public static FeedPreferences fromCursor(Cursor cursor) {
     /**
      * @return the filter for this feed
      */
-    public FeedFilter getFilter() {
+    public @NonNull FeedFilter getFilter() {
         return filter;
     }
 
@@ -95,8 +95,9 @@ public void setKeepUpdated(boolean keepUpdated) {
      * @return True if the two objects are different.
      */
     public boolean compareWithOther(FeedPreferences other) {
-        if (other == null)
+        if (other == null) {
             return true;
+        }
         if (!TextUtils.equals(username, other.username)) {
             return true;
         }

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -18,7 +18,6 @@
 import java.io.InputStream;
 import java.net.HttpURLConnection;
 
-import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
 import de.danoeh.antennapod.core.service.download.HttpDownloader;
 import de.danoeh.antennapod.core.storage.DBReader;
@@ -107,7 +106,6 @@ private static class BasicAuthenticationInterceptor implements Interceptor {
         public Response intercept(Chain chain) throws IOException {
             com.squareup.okhttp.Request request = chain.request();
             String url = request.urlString();
-            Context context = ClientConfig.applicationCallbacks.getApplicationInstance();
             String authentication = DBReader.getImageAuthentication(url);
 
             if(TextUtils.isEmpty(authentication)) {

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeActionPostResponse.java
Patch:
@@ -38,7 +38,7 @@ public static GpodnetEpisodeActionPostResponse fromJSONObject(String objectStrin
         final JSONObject object = new JSONObject(objectString);
         final long timestamp = object.getLong("timestamp");
         JSONArray urls = object.getJSONArray("update_urls");
-        Map<String, String> updatedUrls = new ArrayMap<String, String>(urls.length());
+        Map<String, String> updatedUrls = new ArrayMap<>(urls.length());
         for (int i = 0; i < urls.length(); i++) {
             JSONArray urlPair = urls.getJSONArray(i);
             updatedUrls.put(urlPair.getString(0), urlPair.getString(1));

File: core/src/main/java/de/danoeh/antennapod/core/menuhandler/MenuItemUtils.java
Patch:
@@ -32,7 +32,7 @@ public static boolean updateRefreshMenuItem(Menu menu, int resId, UpdateRefreshM
         }
     }
 
-    public static interface UpdateRefreshMenuItemChecker {
-        public boolean isRefreshing();
+    public interface UpdateRefreshMenuItemChecker {
+        boolean isRefreshing();
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/receiver/AlarmUpdateReceiver.java
Patch:
@@ -6,7 +6,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 
-import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 
 /** Listens for events that make it necessary to reset the update alarm. */
@@ -22,8 +22,7 @@ public void onReceive(Context context, Intent intent) {
 		} else if (TextUtils.equals(intent.getAction(), Intent.ACTION_PACKAGE_REPLACED)) {
 			Log.d(TAG, "Resetting update alarm after app upgrade");
 		}
-        PlaybackPreferences.init(context);
-        UserPreferences.init(context);
+		ClientConfig.initialize(context);
         UserPreferences.restartUpdateAlarm(false);
 	}
 

File: core/src/main/java/de/danoeh/antennapod/core/receiver/FeedUpdateReceiver.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.Intent;
 import android.util.Log;
 
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -19,6 +20,7 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
     @Override
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Received intent");
+        ClientConfig.initialize(context);
         if (NetworkUtils.isDownloadAllowed()) {
             DBTasks.refreshAllFeeds(context, null);
         } else {

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -13,7 +13,6 @@
 import android.util.Pair;
 
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 import java.util.Map;
 
@@ -175,7 +174,7 @@ private synchronized void processSubscriptionChanges(List<String> localSubscript
         for (String downloadUrl : changes.getAdded()) {
             if (false == localSubscriptions.contains(downloadUrl) &&
                     false == localRemoved.contains(downloadUrl)) {
-                Feed feed = new Feed(downloadUrl, new Date(0));
+                Feed feed = new Feed(downloadUrl, null);
                 DownloadRequester.getInstance().downloadFeed(this, feed);
             }
         }
@@ -315,6 +314,7 @@ private void updateErrorNotification(GpodnetServiceException exception) {
                 .setContentIntent(activityIntent)
                 .setSmallIcon(R.drawable.stat_notify_sync_error)
                 .setAutoCancel(true)
+                .setVisibility(Notification.VISIBILITY_PUBLIC)
                 .build();
         NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
         nm.notify(id, notification);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloaderCallback.java
Patch:
@@ -6,5 +6,5 @@
  */
 public interface DownloaderCallback {
 
-	public void onDownloadCompleted(Downloader downloader);
+	void onDownloadCompleted(Downloader downloader);
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java
Patch:
@@ -14,5 +14,5 @@ public interface AutomaticDownloadAlgorithm {
      * @param context  Used for accessing the DB.
      * @return A Runnable that will be submitted to an ExecutorService.
      */
-    public Runnable autoDownloadUndownloadedItems(Context context);
+    Runnable autoDownloadUndownloadedItems(Context context);
 }

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/HandlerState.java
Patch:
@@ -47,10 +47,10 @@ public class HandlerState {
     public HandlerState(Feed feed) {
         this.feed = feed;
         alternateUrls = new ArrayMap<>();
-        items = new ArrayList<FeedItem>();
-        tagstack = new Stack<SyndElement>();
+        items = new ArrayList<>();
+        tagstack = new Stack<>();
         namespaces = new ArrayMap<>();
-        defaultNamespaces = new Stack<Namespace>();
+        defaultNamespaces = new Stack<>();
         tempObjects = new ArrayMap<>();
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/util/SyndTypeUtils.java
Patch:
@@ -30,8 +30,7 @@ public static String getValidMimeTypeFromUrl(String url) {
 		if (url != null) {
 			String extension = FilenameUtils.getExtension(url);
 			if (extension != null) {
-				String type = MimeTypeMap.getSingleton()
-						.getMimeTypeFromExtension(extension);
+				String type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);
 				if (type != null && enclosureTypeValid(type)) {
 					return type;
 				}

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -19,12 +19,13 @@ public enum DownloadError {
 	ERROR_UNKNOWN_HOST(11, R.string.download_error_unknown_host),
 	ERROR_REQUEST_ERROR(12, R.string.download_error_request_error),
     ERROR_DB_ACCESS_ERROR(13, R.string.download_error_db_access),
-    ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized);
+    ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized),
+	ERROR_FILE_TYPE(15, R.string.download_error_file_type_type);
 
 	private final int code;
 	private final int resId;
 
-	private DownloadError(int code, int resId) {
+	DownloadError(int code, int resId) {
 		this.code = code;
 		this.resId = resId;
 	}

File: core/src/main/java/de/danoeh/antennapod/core/util/EpisodeFilter.java
Patch:
@@ -13,7 +13,7 @@ private EpisodeFilter() {
 
 	/** Return a copy of the itemlist without items which have no media. */
 	public static ArrayList<FeedItem> getEpisodeList(List<FeedItem> items) {
-		ArrayList<FeedItem> episodes = new ArrayList<FeedItem>(items);
+		ArrayList<FeedItem> episodes = new ArrayList<>(items);
 		for (FeedItem item : items) {
 			if (item.getMedia() == null) {
 				episodes.remove(item);

File: core/src/main/java/de/danoeh/antennapod/core/util/IntList.java
Patch:
@@ -35,7 +35,7 @@ public int hashCode() {
         int hashCode = 1;
         for (int i = 0; i < size; i++) {
             int value = values[i];
-            hashCode = 31 * hashCode + (int)(value ^ (value >>> 32));
+            hashCode = 31 * hashCode + value;
         }
         return hashCode;
     }
@@ -62,7 +62,7 @@ public boolean equals(Object other) {
 
     @Override
     public String toString() {
-        StringBuffer sb = new StringBuffer(size * 5 + 10);
+        StringBuilder sb = new StringBuilder(size * 5 + 10);
         sb.append("IntList{");
         for (int i = 0; i < size; i++) {
             if (i != 0) {

File: core/src/main/java/de/danoeh/antennapod/core/util/LongList.java
Patch:
@@ -73,7 +73,7 @@ public boolean equals(Object other) {
 
     @Override
     public String toString() {
-        StringBuffer sb = new StringBuffer(size * 5 + 10);
+        StringBuilder sb = new StringBuilder(size * 5 + 10);
         sb.append("LongList{");
         for (int i = 0; i < size; i++) {
             if (i != 0) {

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -96,7 +96,7 @@ public static Observable<Long> getFeedMediaSizeObservable(FeedMedia media) {
         return Observable.create(new Observable.OnSubscribe<Long>() {
             @Override
             public void call(Subscriber<? super Long> subscriber) {
-                if (false == NetworkUtils.isDownloadAllowed()) {
+                if (!NetworkUtils.isDownloadAllowed()) {
                     subscriber.onNext(0L);
                     subscriber.onCompleted();
                     return;
@@ -107,7 +107,7 @@ public void call(Subscriber<? super Long> subscriber) {
                     if (mediaFile.exists()) {
                         size = mediaFile.length();
                     }
-                } else if (false == media.checkedOnSizeButUnknown()) {
+                } else if (!media.checkedOnSizeButUnknown()) {
                     // only query the network if we haven't already checked
 
                     String url = media.getDownload_url();

File: core/src/main/java/de/danoeh/antennapod/core/util/ShownotesProvider.java
Patch:
@@ -11,6 +11,6 @@ public interface ShownotesProvider {
      * database, it should be done in a separate thread. After the shownotes
      * have been loaded, callback.onShownotesLoaded should be called.
      */
-    public Callable<String> loadShownotes();
+    Callable<String> loadShownotes();
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/VorbisCommentChapterReader.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.List;
 
 public class VorbisCommentChapterReader extends VorbisCommentReader {
-	private static final String TAG = "VorbisCommentChapterReader";
+	private static final String TAG = "VorbisCommentChptrReadr";
 
 	private static final String CHAPTER_KEY = "chapter\\d\\d\\d.*";
 	private static final String CHAPTER_ATTRIBUTE_TITLE = "name";
@@ -27,7 +27,7 @@ public void onVorbisCommentFound() {
 
 	@Override
 	public void onVorbisCommentHeaderFound(VorbisCommentHeader header) {
-		chapters = new ArrayList<Chapter>();
+		chapters = new ArrayList<>();
 		System.out.println(header.toString());
 	}
 

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/VorbisCommentReader.java
Patch:
@@ -180,13 +180,13 @@ private VorbisCommentHeader readCommentHeader(InputStream input)
 
 	private String readContentVectorKey(InputStream input, long vectorLength)
 			throws IOException {
-		StringBuffer buffer = new StringBuffer();
+		StringBuilder builder = new StringBuilder();
 		for (int i = 0; i < vectorLength; i++) {
 			char c = (char) input.read();
 			if (c == '=') {
-				return buffer.toString();
+				return builder.toString();
 			} else {
-				buffer.append(c);
+				builder.append(c);
 			}
 		}
 		return null; // no key found

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceTaskManagerTest.java
Patch:
@@ -34,6 +34,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         // create new database
+        PodDBAdapter.init(getInstrumentation().getTargetContext());
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBNullCleanupAlgorithmTest.java
Patch:
@@ -58,7 +58,7 @@ protected void setUp() throws Exception {
         assertTrue(destFolder.canWrite());
 
         // create new database
-        PodDBAdapter.init(getInstrumentation().getTargetContext());
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -39,7 +39,7 @@ protected void setUp() throws Exception {
         context = getInstrumentation().getTargetContext();
 
         // create new database
-        PodDBAdapter.init(getInstrumentation().getTargetContext());
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -41,10 +41,12 @@ public MainActivityTest() {
     @Override
     protected void setUp() throws Exception {
         super.setUp();
-        uiTestUtils = new UITestUtils(getInstrumentation().getTargetContext());
+        Context context = getInstrumentation().getTargetContext();
+        uiTestUtils = new UITestUtils(context);
         uiTestUtils.setup();
 
         // create new database
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceMediaPlayerTest.java
Patch:
@@ -53,7 +53,10 @@ protected void setUp() throws Exception {
         super.setUp();
         assertionError = null;
 
+        final Context context = getInstrumentation().getTargetContext();
+
         // create new database
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();
@@ -62,7 +65,6 @@ protected void setUp() throws Exception {
         httpServer = new HTTPBin();
         httpServer.start();
 
-        final Context context = getInstrumentation().getTargetContext();
         File cacheDir = context.getExternalFilesDir("testFiles");
         if (cacheDir == null)
             cacheDir = context.getExternalFilesDir("testFiles");

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceTaskManagerTest.java
Patch:
@@ -34,6 +34,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         // create new database
+        PodDBAdapter.init(getInstrumentation().getTargetContext());
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBNullCleanupAlgorithmTest.java
Patch:
@@ -58,7 +58,7 @@ protected void setUp() throws Exception {
         assertTrue(destFolder.canWrite());
 
         // create new database
-        PodDBAdapter.init(getInstrumentation().getTargetContext());
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -39,7 +39,7 @@ protected void setUp() throws Exception {
         context = getInstrumentation().getTargetContext();
 
         // create new database
-        PodDBAdapter.init(getInstrumentation().getTargetContext());
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -41,10 +41,12 @@ public MainActivityTest() {
     @Override
     protected void setUp() throws Exception {
         super.setUp();
-        uiTestUtils = new UITestUtils(getInstrumentation().getTargetContext());
+        Context context = getInstrumentation().getTargetContext();
+        uiTestUtils = new UITestUtils(context);
         uiTestUtils.setup();
 
         // create new database
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -195,6 +195,8 @@ public void updateFromOther(FeedItem other) {
         if (other.media != null) {
             if (media == null) {
                 setMedia(other.media);
+                // reset to new if feed item did link to a file before
+                setNew();
             } else if (media.compareWithOther(other.media)) {
                 media.updateFromOther(other.media);
             }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -592,6 +592,7 @@ static FeedItem getFeedItem(final long itemId, PodDBAdapter adapter) {
 
         Cursor itemCursor = adapter.getFeedItemCursor(Long.toString(itemId));
         if (!itemCursor.moveToFirst()) {
+            itemCursor.close();
             return null;
         }
         List<FeedItem> list = extractItemlistFromCursor(adapter, itemCursor);

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -70,6 +70,7 @@ protected void setUp() throws Exception {
         assertTrue(destFolder.canWrite());
 
         // create new database
+        PodDBAdapter.init(context);
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBNullCleanupAlgorithmTest.java
Patch:
@@ -19,8 +19,6 @@
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
 
-import static de.test.antennapod.storage.DBTestUtils.saveFeedlist;
-
 /**
  * Tests that the APNullCleanupAlgorithm is working correctly.
  */
@@ -60,6 +58,7 @@ protected void setUp() throws Exception {
         assertTrue(destFolder.canWrite());
 
         // create new database
+        PodDBAdapter.init(getInstrumentation().getTargetContext());
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java
Patch:
@@ -34,6 +34,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         // create new database
+        PodDBAdapter.init(getInstrumentation().getTargetContext());
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -28,7 +28,6 @@ public class DBTasksTest extends InstrumentationTestCase {
     @Override
     protected void tearDown() throws Exception {
         super.tearDown();
-
         assertTrue(PodDBAdapter.deleteDatabase());
     }
 
@@ -38,6 +37,7 @@ protected void setUp() throws Exception {
         context = getInstrumentation().getTargetContext();
 
         // create new database
+        PodDBAdapter.init(getInstrumentation().getTargetContext());
         PodDBAdapter.deleteDatabase();
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/main/java/de/danoeh/antennapod/adapter/ChaptersListAdapter.java
Patch:
@@ -109,7 +109,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                     if (link.length != 0) {
                         if (action == MotionEvent.ACTION_UP) {
                             link[0].onClick(widget);
-                        } else {
+                        } else if (action == MotionEvent.ACTION_DOWN){
                             Selection.setSelection(buffer,
                                     buffer.getSpanStart(link[0]),
                                     buffer.getSpanEnd(link[0]));

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -401,7 +401,6 @@ public void onEvent(FeedEvent event) {
 
     public void onEventMainThread(FeedItemEvent event) {
         Log.d(TAG, "onEventMainThread() called with: " + "event = [" + event + "]");
-//        boolean queueChanged = false;
         if(feed == null || feed.getItems() == null || adapter == null) {
             return;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -81,8 +81,9 @@ void updateData(List<Podcast> result) {
         if (result != null && result.size() > 0) {
             gridView.setVisibility(View.VISIBLE);
             txtvEmpty.setVisibility(View.GONE);
-
-            adapter.addAll(result);
+            for (Podcast p : result) {
+                adapter.add(p);
+            }
             adapter.notifyDataSetInvalidated();
         } else {
             gridView.setVisibility(View.GONE);

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/SuggestionListFragment.java
Patch:
@@ -1,6 +1,6 @@
 package de.danoeh.antennapod.fragment.gpodnet;
 
-import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 import de.danoeh.antennapod.core.gpoddernet.GpodnetService;
@@ -20,7 +20,7 @@ protected List<GpodnetPodcast> loadPodcastData(GpodnetService service) throws Gp
             service.authenticate(GpodnetPreferences.getUsername(), GpodnetPreferences.getPassword());
             return service.getSuggestions(SUGGESTIONS_COUNT);
         } else {
-            return new ArrayList<>();
+            return Collections.emptyList();
         }
     }
 }

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -627,7 +627,7 @@ private void buildAutodownloadSelectedNetworsPreference() {
             Preference.OnPreferenceClickListener clickListener = preference -> {
                 if (preference instanceof CheckBoxPreference) {
                     String key = preference.getKey();
-                    ArrayList<String> prefValuesList = new ArrayList<>(
+                    List<String> prefValuesList = new ArrayList<>(
                             Arrays.asList(UserPreferences
                                     .getAutodownloadSelectedNetworks())
                     );

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -106,7 +106,6 @@ private static class BasicAuthenticationInterceptor implements Interceptor {
         public Response intercept(Chain chain) throws IOException {
             com.squareup.okhttp.Request request = chain.request();
             String url = request.urlString();
-            // Context context = ClientConfig.applicationCallbacks.getApplicationInstance();
             String authentication = DBReader.getImageAuthentication(url);
 
             if(TextUtils.isEmpty(authentication)) {

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -189,6 +189,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                     holder.type.setImageBitmap(null);
                     holder.type.setVisibility(View.GONE);
                 }
+                typeDrawables.recycle();
 
                 if(media.isCurrentlyPlaying()) {
                     holder.container.setBackgroundColor(playingBackGroundColor);

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -39,6 +39,7 @@ public static void refreshLockItem(Context context, Menu menu) {
             queueLock.setTitle(de.danoeh.antennapod.R.string.lock_queue);
             queueLock.setIcon(ta.getDrawable(1));
         }
+        ta.recycle();
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -189,6 +189,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                     holder.type.setImageBitmap(null);
                     holder.type.setVisibility(View.GONE);
                 }
+                typeDrawables.recycle();
 
                 if(media.isCurrentlyPlaying()) {
                     if(media.isCurrentlyPlaying()) {

File: app/src/main/java/de/danoeh/antennapod/menuhandler/MenuItemUtils.java
Patch:
@@ -39,6 +39,7 @@ public static void refreshLockItem(Context context, Menu menu) {
             queueLock.setTitle(de.danoeh.antennapod.R.string.lock_queue);
             queueLock.setIcon(ta.getDrawable(1));
         }
+        ta.recycle();
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -4,7 +4,7 @@
 import android.graphics.Color;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
@@ -30,7 +30,7 @@
 /**
  * Displays the 'about' screen
  */
-public class AboutActivity extends ActionBarActivity {
+public class AboutActivity extends AppCompatActivity {
 
     private static final String TAG = AboutActivity.class.getSimpleName();
 
@@ -87,7 +87,7 @@ public void call(Subscriber<? super String> subscriber) {
                             res.recycle();
                             input = getAssets().open(filename);
                             String webViewData = IOUtils.toString(input, Charset.defaultCharset());
-                            if(false == webViewData.startsWith("<!DOCTYPE html>")) {
+                            if(!webViewData.startsWith("<!DOCTYPE html>")) {
                                 //webViewData = webViewData.replace("\n\n", "</p><p>");
                                 webViewData = webViewData.replace("%", "&#37;");
                                 webViewData =

File: app/src/main/java/de/danoeh/antennapod/activity/DirectoryChooserActivity.java
Patch:
@@ -243,7 +243,7 @@ private FileObserver createFileObserver(String path) {
             @Override
             public void onEvent(int event, String path) {
                 Log.d(TAG, "FileObserver received event " + event);
-                runOnUiThread(() -> refreshDirectory());
+                runOnUiThread(DirectoryChooserActivity.this::refreshDirectory);
             }
         };
     }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -657,7 +657,7 @@ public int getFeedCounter(long feedId) {
     };
 
     private void loadData() {
-        subscription = Observable.fromCallable(() -> DBReader.getNavDrawerData())
+        subscription = Observable.fromCallable(DBReader::getNavDrawerData)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -7,8 +7,8 @@
 import android.os.Bundle;
 import android.os.Looper;
 import android.support.v4.app.NavUtils;
-import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
 import android.text.TextUtils;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -79,7 +79,7 @@
  * If the feed cannot be downloaded or parsed, an error dialog will be displayed
  * and the activity will finish as soon as the error dialog is closed.
  */
-public class OnlineFeedViewActivity extends ActionBarActivity {
+public class OnlineFeedViewActivity extends AppCompatActivity {
 
     private static final String TAG = "OnlineFeedViewActivity";
 

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.SparseBooleanArray;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -22,7 +22,7 @@
  * Displays the feeds that the OPML-Importer has read and lets the user choose
  * which feeds he wants to import.
  */
-public class OpmlFeedChooserActivity extends ActionBarActivity {
+public class OpmlFeedChooserActivity extends AppCompatActivity {
     private static final String TAG = "OpmlFeedChooserActivity";
 
     public static final String EXTRA_SELECTED_ITEMS = "de.danoeh.antennapod.selectedItems";

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportBaseActivity.java
Patch:
@@ -6,7 +6,7 @@
 import android.os.Environment;
 import android.support.annotation.Nullable;
 import android.support.v4.app.ActivityCompat;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 
 import com.afollestad.materialdialogs.MaterialDialog;
@@ -26,7 +26,7 @@
 /**
  * Base activity for Opml Import - e.g. with code what to do afterwards
  * */
-public class OpmlImportBaseActivity extends ActionBarActivity {
+public class OpmlImportBaseActivity extends AppCompatActivity {
 
     private static final String TAG = "OpmlImportBaseActivity";
     private OpmlImportWorker importWorker;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromPathActivity.java
Patch:
@@ -53,7 +53,7 @@ protected void onCreate(Bundle savedInstanceState) {
         intentPickAction = new Intent(Intent.ACTION_PICK);
         intentPickAction.setData(Uri.parse("file://"));
 
-        if(false == IntentUtils.isCallable(getApplicationContext(), intentPickAction)) {
+        if(!IntentUtils.isCallable(getApplicationContext(), intentPickAction)) {
             intentPickAction.setData(null);
             if(false == IntentUtils.isCallable(getApplicationContext(), intentPickAction)) {
                 txtvHeaderExplanation1.setVisibility(View.GONE);
@@ -70,7 +70,7 @@ protected void onCreate(Bundle savedInstanceState) {
         intentGetContentAction = new Intent(Intent.ACTION_GET_CONTENT);
         intentGetContentAction.addCategory(Intent.CATEGORY_OPENABLE);
         intentGetContentAction.setType("*/*");
-        if(false == IntentUtils.isCallable(getApplicationContext(), intentGetContentAction)) {
+        if(!IntentUtils.isCallable(getApplicationContext(), intentGetContentAction)) {
             txtvHeaderExplanation2.setVisibility(View.GONE);
             txtvExplanation2.setVisibility(View.GONE);
             findViewById(R.id.divider2).setVisibility(View.GONE);

File: app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -8,7 +8,7 @@
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.support.v7.app.ActionBar;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.ViewGroup;
@@ -24,7 +24,7 @@
  * PreferenceActivity for API 11+. In order to change the behavior of the preference UI, see
  * PreferenceController.
  */
-public class PreferenceActivity extends ActionBarActivity {
+public class PreferenceActivity extends AppCompatActivity {
 
     private PreferenceController preferenceController;
     private MainFragment prefFragment;
@@ -49,7 +49,7 @@ public Activity getActivity() {
     protected void onCreate(Bundle savedInstanceState) {
         // This must be the FIRST thing we do, otherwise other code may not have the
         // reference it needs
-        instance = new WeakReference<PreferenceActivity>(this);
+        instance = new WeakReference<>(this);
 
         setTheme(UserPreferences.getTheme());
         super.onCreate(savedInstanceState);

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonCallback.java
Patch:
@@ -4,5 +4,5 @@
 
 public interface ActionButtonCallback {
 	/** Is called when the action button of a list item has been pressed. */
-	abstract void onActionButtonPressed(FeedItem item);
+	void onActionButtonPressed(FeedItem item);
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/AdapterUtils.java
Patch:
@@ -50,7 +50,7 @@ public static void updateEpisodePlaybackProgress(FeedItem item, TextView txtvPos
             Log.d(TAG, "size: " + media.getSize());
             if (media.getSize() > 0) {
                 txtvPos.setText(Converter.byteToString(media.getSize()));
-            } else if(NetworkUtils.isDownloadAllowed() && false == media.checkedOnSizeButUnknown()) {
+            } else if(NetworkUtils.isDownloadAllowed() && !media.checkedOnSizeButUnknown()) {
                 txtvPos.setText("{fa-spinner}");
                 Iconify.addIcons(txtvPos);
                 NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -121,7 +121,7 @@ public void onBindViewHolder(final Holder holder, int position) {
         holder.title.setText(item.getTitle());
         String pubDateStr = DateUtils.formatAbbrev(mainActivityRef.get(), item.getPubDate());
         holder.pubDate.setText(pubDateStr);
-        if (showOnlyNewEpisodes || false == item.isNew()) {
+        if (showOnlyNewEpisodes || !item.isNew()) {
             holder.statusUnread.setVisibility(View.INVISIBLE);
         } else {
             holder.statusUnread.setVisibility(View.VISIBLE);
@@ -135,7 +135,7 @@ public void onBindViewHolder(final Holder holder, int position) {
                 holder.txtvDuration.setText(Converter.getDurationStringLong(media.getDuration()));
             } else if (media.getSize() > 0) {
                 holder.txtvDuration.setText(Converter.byteToString(media.getSize()));
-            } else if(NetworkUtils.isDownloadAllowed() && false == media.checkedOnSizeButUnknown()) {
+            } else if(NetworkUtils.isDownloadAllowed() && !media.checkedOnSizeButUnknown()) {
                 holder.txtvDuration.setText("{fa-spinner}");
                 Iconify.addIcons(holder.txtvDuration);
                 NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/adapter/ChaptersListAdapter.java
Patch:
@@ -109,7 +109,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                     if (link.length != 0) {
                         if (action == MotionEvent.ACTION_UP) {
                             link[0].onClick(widget);
-                        } else if (action == MotionEvent.ACTION_DOWN) {
+                        } else {
                             Selection.setSelection(buffer,
                                     buffer.getSpanStart(link[0]),
                                     buffer.getSpanEnd(link[0]));

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -1,9 +1,7 @@
 package de.danoeh.antennapod.adapter;
 
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
-import android.support.v7.app.AlertDialog;
 import android.widget.Toast;
 
 import com.afollestad.materialdialogs.MaterialDialog;

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -11,7 +11,6 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.joanzapata.iconify.Iconify;
 import com.joanzapata.iconify.widget.IconButton;
 import com.joanzapata.iconify.widget.IconTextView;
 

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadlistAdapter.java
Patch:
@@ -131,11 +131,11 @@ public void setSelectedItemIndex(int selectedItemIndex) {
     }
 
     public interface ItemAccess {
-        public int getCount();
+        int getCount();
 
-        public Downloader getItem(int position);
+        Downloader getItem(int position);
 
-        public void onSecondaryActionClick(Downloader downloader);
+        void onSecondaryActionClick(Downloader downloader);
     }
 
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -258,7 +258,7 @@ public void bind(FeedItem item) {
                 } else {
                     if(media.getSize() > 0) {
                         progressLeft.setText(Converter.byteToString(media.getSize()));
-                    } else if(NetworkUtils.isDownloadAllowed() && false == media.checkedOnSizeButUnknown()) {
+                    } else if(NetworkUtils.isDownloadAllowed() && !media.checkedOnSizeButUnknown()) {
                         progressLeft.setText("{fa-spinner}");
                         Iconify.addIcons(progressLeft);
                         NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/adapter/SearchlistAdapter.java
Patch:
@@ -9,7 +9,6 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.feed.Feed;
@@ -112,7 +111,7 @@ static class Holder {
         TextView subtitle;
     }
 
-    public static interface ItemAccess {
+    public interface ItemAccess {
         int getCount();
 
         SearchResult getItem(int position);

File: app/src/main/java/de/danoeh/antennapod/adapter/gpodnet/PodcastListAdapter.java
Patch:
@@ -9,7 +9,6 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
 
 import org.apache.commons.lang3.StringUtils;
 

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlFeedQueuer.java
Patch:
@@ -43,9 +43,8 @@ protected void onPreExecute() {
 	@Override
 	protected Void doInBackground(Void... params) {
 		DownloadRequester requester = DownloadRequester.getInstance();
-		for (int idx = 0; idx < selection.length; idx++) {
-			OpmlElement element = OpmlImportHolder.getReadElements().get(
-					selection[idx]);
+		for (int selected : selection) {
+			OpmlElement element = OpmlImportHolder.getReadElements().get(selected);
 			Feed feed = new Feed(element.getXmlUrl(), null,
 					element.getText());
 			try {

File: app/src/main/java/de/danoeh/antennapod/config/DBTasksCallbacksImpl.java
Patch:
@@ -2,7 +2,6 @@
 
 import de.danoeh.antennapod.core.DBTasksCallbacks;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
-import de.danoeh.antennapod.core.storage.APCleanupAlgorithm;
 import de.danoeh.antennapod.core.storage.APDownloadAlgorithm;
 import de.danoeh.antennapod.core.storage.AutomaticDownloadAlgorithm;
 import de.danoeh.antennapod.core.storage.EpisodeCleanupAlgorithm;

File: app/src/main/java/de/danoeh/antennapod/dialog/GpodnetSetHostnameDialog.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.dialog;
 
 import android.content.Context;
-import android.content.DialogInterface;
 import android.support.v7.app.AlertDialog;
 import android.text.Editable;
 import android.text.InputType;

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -102,8 +102,8 @@ private static void showSpeedSelectorDialog(final Context context) {
         builder.setPositiveButton(android.R.string.ok,
             (dialog, which) -> {
                 int choiceCount = 0;
-                for (int i = 0; i < speedChecked.length; i++) {
-                    if (speedChecked[i]) {
+                for (boolean checked : speedChecked) {
+                    if (checked) {
                         choiceCount++;
                     }
                 }

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -205,7 +205,7 @@ private void loadItems() {
         if (items == null && viewCreated) {
             setListShown(false);
         }
-        subscription = Observable.fromCallable(() -> DBReader.getDownloadedItems())
+        subscription = Observable.fromCallable(DBReader::getDownloadedItems)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -154,7 +154,7 @@ private void loadItems() {
         if(subscription != null) {
             subscription.unsubscribe();
         }
-        subscription = Observable.fromCallable(() -> DBReader.getDownloadLog())
+        subscription = Observable.fromCallable(DBReader::getDownloadLog)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -148,7 +148,7 @@ public void onPageFinished(WebView view, String url) {
                 super.onPageFinished(view, url);
                 Log.d(TAG, "Page finished");
                 // Restoring the scroll position might not always work
-                view.postDelayed(() -> restoreFromPreference(), 50);
+                view.postDelayed(ItemDescriptionFragment.this::restoreFromPreference, 50);
             }
 
         });
@@ -318,8 +318,7 @@ private void load() {
 
     private String loadData() {
         Timeline timeline = new Timeline(getActivity(), shownotesProvider);
-        String data = timeline.processShownotes(highlightTimecodes);
-        return data;
+        return timeline.processShownotes(highlightTimecodes);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -507,7 +507,7 @@ private void load() {
         if(subscription != null) {
             subscription.unsubscribe();
         }
-        subscription = Observable.fromCallable(() -> loadInBackground())
+        subscription = Observable.fromCallable(this::loadInBackground)
             .subscribeOn(Schedulers.newThread())
             .observeOn(AndroidSchedulers.mainThread())
             .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -81,9 +81,8 @@ void updateData(List<Podcast> result) {
         if (result != null && result.size() > 0) {
             gridView.setVisibility(View.VISIBLE);
             txtvEmpty.setVisibility(View.GONE);
-            for (Podcast p : result) {
-                adapter.add(p);
-            }
+
+            adapter.addAll(result);
             adapter.notifyDataSetInvalidated();
         } else {
             gridView.setVisibility(View.GONE);

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -220,7 +220,7 @@ private void onFragmentLoaded() {
     private FeedItemlistAdapter.ItemAccess itemAccess = new FeedItemlistAdapter.ItemAccess() {
         @Override
         public boolean isInQueue(FeedItem item) {
-            return (queue != null) ? queue.contains(item.getId()) : false;
+            return (queue != null) && queue.contains(item.getId());
         }
 
         @Override
@@ -255,7 +255,7 @@ private void loadItems() {
         if(subscription != null) {
             subscription.unsubscribe();
         }
-        subscription = Observable.fromCallable(() -> loadData())
+        subscription = Observable.fromCallable(this::loadData)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -208,7 +208,7 @@ private void search() {
         if (viewCreated && !itemsLoaded) {
             setListShown(false);
         }
-        subscription = Observable.fromCallable(() -> performSearch())
+        subscription = Observable.fromCallable(this::performSearch)
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -41,7 +41,7 @@ public interface MenuInterface {
          * menu-object and call setVisibility(visibility) on the returned
          * MenuItem object.
          */
-        abstract void setItemVisibility(int id, boolean visible);
+        void setItemVisibility(int id, boolean visible);
     }
 
     /**
@@ -98,7 +98,7 @@ public static boolean onPrepareMenu(MenuInterface mi,
             mi.setItemVisibility(R.id.share_download_url_item, false);
             mi.setItemVisibility(R.id.share_download_url_with_position_item, false);
         }
-        if(false == hasMedia || selectedItem.getMedia().getPosition() <= 0) {
+        if(!hasMedia || selectedItem.getMedia().getPosition() <= 0) {
             mi.setItemVisibility(R.id.share_link_with_position_item, false);
             mi.setItemVisibility(R.id.share_download_url_with_position_item, false);
         }
@@ -113,7 +113,7 @@ public static boolean onPrepareMenu(MenuInterface mi,
             mi.setItemVisibility(R.id.reset_position, false);
         }
 
-        if(false == UserPreferences.isEnableAutodownload()) {
+        if(!UserPreferences.isEnableAutodownload()) {
             mi.setItemVisibility(R.id.activate_auto_download, false);
             mi.setItemVisibility(R.id.deactivate_auto_download, false);
         } else if(selectedItem.getAutoDownload()) {

File: app/src/main/java/de/danoeh/antennapod/menuhandler/NavDrawerActivity.java
Patch:
@@ -5,5 +5,5 @@
  */
 public interface NavDrawerActivity {
 
-    public boolean isDrawerOpen();
+    boolean isDrawerOpen();
 }

File: core/src/main/java/de/danoeh/antennapod/core/ApplicationCallbacks.java
Patch:
@@ -12,12 +12,12 @@ public interface ApplicationCallbacks {
     /**
      * Returns a non-null instance of the application class
      */
-    public Application getApplicationInstance();
+    Application getApplicationInstance();
 
     /**
      * Returns a non-null intent that starts the storage error
      * activity.
      */
-    public Intent getStorageErrorActivity(Context context);
+    Intent getStorageErrorActivity(Context context);
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/DBTasksCallbacks.java
Patch:
@@ -11,10 +11,10 @@ public interface DBTasksCallbacks {
     /**
      * Returns the client's implementation of the AutomaticDownloadAlgorithm interface.
      */
-    public AutomaticDownloadAlgorithm getAutomaticDownloadAlgorithm();
+    AutomaticDownloadAlgorithm getAutomaticDownloadAlgorithm();
 
     /**
      * Returns the client's implementation of the EpisodeCacheCleanupAlgorithm interface.
      */
-    public EpisodeCleanupAlgorithm getEpisodeCacheCleanupAlgorithm();
+    EpisodeCleanupAlgorithm getEpisodeCacheCleanupAlgorithm();
 }

File: core/src/main/java/de/danoeh/antennapod/core/GpodnetCallbacks.java
Patch:
@@ -13,7 +13,7 @@ public interface GpodnetCallbacks {
      * Returns if true if the gpodder.net integration should be activated,
      * false otherwise.
      */
-    public boolean gpodnetEnabled();
+    boolean gpodnetEnabled();
 
     /**
      * Returns a PendingIntent for the error notification of the GpodnetSyncService.
@@ -23,5 +23,5 @@ public interface GpodnetCallbacks {
      * @return A PendingIntent for the notification or null if gpodder.net integration
      * has been disabled (i.e. gpodnetEnabled() == false).
      */
-    public PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(Context context);
+    PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(Context context);
 }

File: core/src/main/java/de/danoeh/antennapod/core/PlaybackServiceCallbacks.java
Patch:
@@ -17,17 +17,17 @@ public interface PlaybackServiceCallbacks {
      * @param mediaType The type of media that is being played.
      * @return A non-null activity intent.
      */
-    public Intent getPlayerActivityIntent(Context context, MediaType mediaType);
+    Intent getPlayerActivityIntent(Context context, MediaType mediaType);
 
     /**
      * Returns true if the PlaybackService should load new episodes from the queue when playback ends
      * and false if the PlaybackService should ignore the queue and load no more episodes when playback
      * finishes.
      */
-    public boolean useQueue();
+    boolean useQueue();
 
     /**
      * Returns a drawable resource that is used for the notification of the playback service.
      */
-    public int getNotificationIconResource(Context context);
+    int getNotificationIconResource(Context context);
 }

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FeedRemover.java
Patch:
@@ -30,9 +30,7 @@ public FeedRemover(Context context, Feed feed) {
 	protected Void doInBackground(Void... params) {
         try {
             DBWriter.deleteFeed(context, feed.getId()).get();
-        } catch (InterruptedException e) {
-            e.printStackTrace();
-        } catch (ExecutionException e) {
+        } catch (InterruptedException | ExecutionException e) {
             e.printStackTrace();
         }
         return null;

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/ImageResource.java
Patch:
@@ -16,13 +16,13 @@ public interface ImageResource {
      * <p/>
      * For example implementations, see FeedMedia or ExternalMedia.
      */
-    public static final String SCHEME_MEDIA = "media";
+    String SCHEME_MEDIA = "media";
 
 
     /**
      * Parameter key for an encoded fallback Uri. This Uri MUST point to a local image file
      */
-    public static final String PARAM_FALLBACK = "fallback";
+    String PARAM_FALLBACK = "fallback";
 
     /**
      * Returns a Uri to the image or null if no image is available.
@@ -33,5 +33,5 @@ public interface ImageResource {
      * The Uri can also have an optional fallback-URL if loading the default URL
      * failed (see PARAM_FALLBACK).
      */
-    public Uri getImageUri();
+    Uri getImageUri();
 }

File: core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java
Patch:
@@ -112,7 +112,7 @@ public Feed(long id, String lastUpdate, String title, String link, String descri
         this.flattrStatus = status;
         this.paged = paged;
         this.nextPageLink = nextPageLink;
-        this.items = new ArrayList<FeedItem>();
+        this.items = new ArrayList<>();
         if(filter != null) {
             this.itemfilter = new FeedItemFilter(filter);
         } else {
@@ -235,7 +235,7 @@ public boolean hasNewItems() {
      */
     public boolean hasUnplayedItems() {
         for (FeedItem item : items) {
-            if (false == item.isNew() && false == item.isPlayed()) {
+            if (!item.isNew() && !item.isPlayed()) {
                 return true;
             }
         }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedComponent.java
Patch:
@@ -54,9 +54,8 @@ public boolean equals(Object o) {
 
         FeedComponent that = (FeedComponent) o;
 
-        if (id != that.id) return false;
+        return id == that.id;
 
-        return true;
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java
Patch:
@@ -68,7 +68,7 @@ public static FeedPreferences fromCursor(Cursor cursor) {
     /**
      * @return the filter for this feed
      */
-    public FeedFilter getFilter() {
+    public @NonNull FeedFilter getFilter() {
         return filter;
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -18,7 +18,6 @@
 import java.io.InputStream;
 import java.net.HttpURLConnection;
 
-import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
 import de.danoeh.antennapod.core.service.download.HttpDownloader;
 import de.danoeh.antennapod.core.storage.DBReader;
@@ -107,7 +106,7 @@ private static class BasicAuthenticationInterceptor implements Interceptor {
         public Response intercept(Chain chain) throws IOException {
             com.squareup.okhttp.Request request = chain.request();
             String url = request.urlString();
-            Context context = ClientConfig.applicationCallbacks.getApplicationInstance();
+            // Context context = ClientConfig.applicationCallbacks.getApplicationInstance();
             String authentication = DBReader.getImageAuthentication(url);
 
             if(TextUtils.isEmpty(authentication)) {

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeAction.java
Patch:
@@ -61,14 +61,13 @@ public static GpodnetEpisodeAction readFromString(String s) {
         String deviceId = fields[2];
         try {
             Action action = Action.valueOf(fields[3]);
-            GpodnetEpisodeAction result = new Builder(podcast, episode, action)
+            return new Builder(podcast, episode, action)
                     .deviceId(deviceId)
                     .timestamp(new Date(Long.parseLong(fields[4])))
                     .started(Integer.parseInt(fields[5]))
                     .position(Integer.parseInt(fields[6]))
                     .total(Integer.parseInt(fields[7]))
                     .build();
-            return result;
         } catch(IllegalArgumentException e) {
             Log.e(TAG, "readFromString(" + s + "): " + e.getMessage());
             return null;

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeActionPostResponse.java
Patch:
@@ -38,7 +38,7 @@ public static GpodnetEpisodeActionPostResponse fromJSONObject(String objectStrin
         final JSONObject object = new JSONObject(objectString);
         final long timestamp = object.getLong("timestamp");
         JSONArray urls = object.getJSONArray("update_urls");
-        Map<String, String> updatedUrls = new ArrayMap<String, String>(urls.length());
+        Map<String, String> updatedUrls = new ArrayMap<>(urls.length());
         for (int i = 0; i < urls.length(); i++) {
             JSONArray urlPair = urls.getJSONArray(i);
             updatedUrls.put(urlPair.getString(0), urlPair.getString(1));

File: core/src/main/java/de/danoeh/antennapod/core/menuhandler/MenuItemUtils.java
Patch:
@@ -32,7 +32,7 @@ public static boolean updateRefreshMenuItem(Menu menu, int resId, UpdateRefreshM
         }
     }
 
-    public static interface UpdateRefreshMenuItemChecker {
-        public boolean isRefreshing();
+    public interface UpdateRefreshMenuItemChecker {
+        boolean isRefreshing();
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -292,7 +292,7 @@ public static boolean shouldPauseForFocusLoss() {
 
     public static long getUpdateInterval() {
         String updateInterval = prefs.getString(PREF_UPDATE_INTERVAL, "0");
-        if(false == updateInterval.contains(":")) {
+        if(!updateInterval.contains(":")) {
             return readUpdateInterval(updateInterval);
         } else {
             return 0;
@@ -411,8 +411,7 @@ public static ProxyConfig getProxyConfig() {
         int port = prefs.getInt(PREF_PROXY_PORT, 0);
         String username = prefs.getString(PREF_PROXY_USER, null);
         String password = prefs.getString(PREF_PROXY_PASSWORD, null);
-        ProxyConfig config = new ProxyConfig(type, host, port, username, password);
-        return config;
+        return new ProxyConfig(type, host, port, username, password);
     }
 
     public static boolean shouldResumeAfterCall() {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloaderCallback.java
Patch:
@@ -6,5 +6,5 @@
  */
 public interface DownloaderCallback {
 
-	public void onDownloadCompleted(Downloader downloader);
+	void onDownloadCompleted(Downloader downloader);
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/ProxyConfig.java
Patch:
@@ -8,7 +8,7 @@ public class ProxyConfig {
 
     public final Proxy.Type type;
     @Nullable public final String host;
-    @Nullable public final int port;
+    public final int port;
     @Nullable public final String username;
     @Nullable public final String password;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -835,7 +835,7 @@ public void run() {
                 if (!Thread.currentThread().isInterrupted() && started && info.playable != null) {
                     String contentText = info.playable.getEpisodeTitle();
                     String contentTitle = info.playable.getFeedTitle();
-                    Notification notification = null;
+                    Notification notification;
 
                     // Builder is v7, even if some not overwritten methods return its parent's v4 interface
                     NotificationCompat.Builder notificationBuilder = (NotificationCompat.Builder) new NotificationCompat.Builder(

File: core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java
Patch:
@@ -13,8 +13,6 @@
 
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
-import de.danoeh.antennapod.core.preferences.UserPreferences;
-import de.danoeh.antennapod.core.util.LongList;
 
 /**
  * Implementation of the EpisodeCleanupAlgorithm interface used by AntennaPod.

File: core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java
Patch:
@@ -5,15 +5,12 @@
 import android.util.Log;
 
 import java.util.ArrayList;
-import java.util.Calendar;
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
 import java.util.concurrent.ExecutionException;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
-import de.danoeh.antennapod.core.feed.FeedMedia;
-import de.danoeh.antennapod.core.util.LongList;
 
 /**
  * A cleanup algorithm that removes any item that isn't in the queue and isn't a favorite

File: core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java
Patch:
@@ -14,5 +14,5 @@ public interface AutomaticDownloadAlgorithm {
      * @param context  Used for accessing the DB.
      * @return A Runnable that will be submitted to an ExecutorService.
      */
-    public Runnable autoDownloadUndownloadedItems(Context context);
+    Runnable autoDownloadUndownloadedItems(Context context);
 }

File: core/src/main/java/de/danoeh/antennapod/core/syndication/handler/HandlerState.java
Patch:
@@ -47,10 +47,10 @@ public class HandlerState {
     public HandlerState(Feed feed) {
         this.feed = feed;
         alternateUrls = new ArrayMap<>();
-        items = new ArrayList<FeedItem>();
-        tagstack = new Stack<SyndElement>();
+        items = new ArrayList<>();
+        tagstack = new Stack<>();
         namespaces = new ArrayMap<>();
-        defaultNamespaces = new Stack<Namespace>();
+        defaultNamespaces = new Stack<>();
         tempObjects = new ArrayMap<>();
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -25,7 +25,7 @@ public enum DownloadError {
 	private final int code;
 	private final int resId;
 
-	private DownloadError(int code, int resId) {
+	DownloadError(int code, int resId) {
 		this.code = code;
 		this.resId = resId;
 	}

File: core/src/main/java/de/danoeh/antennapod/core/util/EpisodeFilter.java
Patch:
@@ -13,7 +13,7 @@ private EpisodeFilter() {
 
 	/** Return a copy of the itemlist without items which have no media. */
 	public static ArrayList<FeedItem> getEpisodeList(List<FeedItem> items) {
-		ArrayList<FeedItem> episodes = new ArrayList<FeedItem>(items);
+		ArrayList<FeedItem> episodes = new ArrayList<>(items);
 		for (FeedItem item : items) {
 			if (item.getMedia() == null) {
 				episodes.remove(item);

File: core/src/main/java/de/danoeh/antennapod/core/util/IntList.java
Patch:
@@ -62,7 +62,7 @@ public boolean equals(Object other) {
 
     @Override
     public String toString() {
-        StringBuffer sb = new StringBuffer(size * 5 + 10);
+        StringBuilder sb = new StringBuilder(size * 5 + 10);
         sb.append("IntList{");
         for (int i = 0; i < size; i++) {
             if (i != 0) {

File: core/src/main/java/de/danoeh/antennapod/core/util/LongList.java
Patch:
@@ -73,7 +73,7 @@ public boolean equals(Object other) {
 
     @Override
     public String toString() {
-        StringBuffer sb = new StringBuffer(size * 5 + 10);
+        StringBuilder sb = new StringBuilder(size * 5 + 10);
         sb.append("LongList{");
         for (int i = 0; i < size; i++) {
             if (i != 0) {

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -96,7 +96,7 @@ public static Observable<Long> getFeedMediaSizeObservable(FeedMedia media) {
         return Observable.create(new Observable.OnSubscribe<Long>() {
             @Override
             public void call(Subscriber<? super Long> subscriber) {
-                if (false == NetworkUtils.isDownloadAllowed()) {
+                if (!NetworkUtils.isDownloadAllowed()) {
                     subscriber.onNext(0L);
                     subscriber.onCompleted();
                     return;
@@ -107,7 +107,7 @@ public void call(Subscriber<? super Long> subscriber) {
                     if (mediaFile.exists()) {
                         size = mediaFile.length();
                     }
-                } else if (false == media.checkedOnSizeButUnknown()) {
+                } else if (!media.checkedOnSizeButUnknown()) {
                     // only query the network if we haven't already checked
 
                     String url = media.getDownload_url();

File: core/src/main/java/de/danoeh/antennapod/core/util/ShownotesProvider.java
Patch:
@@ -11,6 +11,6 @@ public interface ShownotesProvider {
      * database, it should be done in a separate thread. After the shownotes
      * have been loaded, callback.onShownotesLoaded should be called.
      */
-    public Callable<String> loadShownotes();
+    Callable<String> loadShownotes();
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -68,7 +68,7 @@ public Timeline(Context context, ShownotesProvider shownotesProvider) {
     private static final Pattern TIMECODE_LINK_REGEX = Pattern.compile("antennapod://timecode/((\\d+))");
     private static final String TIMECODE_LINK = "<a class=\"timecode\" href=\"antennapod://timecode/%d\">%s</a>";
     private static final Pattern TIMECODE_REGEX = Pattern.compile("\\b(?:(?:(([0-9][0-9])):))?(([0-9][0-9])):(([0-9][0-9]))\\b");
-    private static final Pattern LINE_BREAK_REGEX = Pattern.compile("<br *\\/?>");
+    private static final Pattern LINE_BREAK_REGEX = Pattern.compile("<br */?>");
 
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/VorbisCommentChapterReader.java
Patch:
@@ -9,7 +9,7 @@
 import java.util.List;
 
 public class VorbisCommentChapterReader extends VorbisCommentReader {
-	private static final String TAG = "VorbisCommentChapterReader";
+	private static final String TAG = "VorbisCommentChptrReadr";
 
 	private static final String CHAPTER_KEY = "chapter\\d\\d\\d.*";
 	private static final String CHAPTER_ATTRIBUTE_TITLE = "name";
@@ -27,7 +27,7 @@ public void onVorbisCommentFound() {
 
 	@Override
 	public void onVorbisCommentHeaderFound(VorbisCommentHeader header) {
-		chapters = new ArrayList<Chapter>();
+		chapters = new ArrayList<>();
 		System.out.println(header.toString());
 	}
 

File: core/src/main/java/de/danoeh/antennapod/core/util/vorbiscommentreader/VorbisCommentReader.java
Patch:
@@ -180,13 +180,13 @@ private VorbisCommentHeader readCommentHeader(InputStream input)
 
 	private String readContentVectorKey(InputStream input, long vectorLength)
 			throws IOException {
-		StringBuffer buffer = new StringBuffer();
+		StringBuilder builder = new StringBuilder();
 		for (int i = 0; i < vectorLength; i++) {
 			char c = (char) input.read();
 			if (c == '=') {
-				return buffer.toString();
+				return builder.toString();
 			} else {
-				buffer.append(c);
+				builder.append(c);
 			}
 		}
 		return null; // no key found

File: core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java
Patch:
@@ -324,12 +324,11 @@ public boolean compareWithOther(Feed other) {
         if (super.compareWithOther(other)) {
             return true;
         }
-        if (!title.equals(other.title)) {
+        if (!TextUtils.equals(title, other.title)) {
             return true;
         }
         if (other.feedIdentifier != null) {
-            if (feedIdentifier == null
-                    || !feedIdentifier.equals(other.feedIdentifier)) {
+            if (feedIdentifier == null || !feedIdentifier.equals(other.feedIdentifier)) {
                 return true;
             }
         }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedFile.java
Patch:
@@ -1,5 +1,7 @@
 package de.danoeh.antennapod.core.feed;
 
+import android.text.TextUtils;
+
 import java.io.File;
 
 /**
@@ -54,7 +56,7 @@ public boolean compareWithOther(FeedFile other) {
         if (super.compareWithOther(other)) {
             return true;
         }
-        if (!download_url.equals(other.download_url)) {
+        if (!TextUtils.equals(download_url, other.download_url)) {
             return true;
         }
         return false;

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java
Patch:
@@ -95,8 +95,9 @@ public void setKeepUpdated(boolean keepUpdated) {
      * @return True if the two objects are different.
      */
     public boolean compareWithOther(FeedPreferences other) {
-        if (other == null)
+        if (other == null) {
             return true;
+        }
         if (!TextUtils.equals(username, other.username)) {
             return true;
         }

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -328,6 +328,7 @@ public void call(Subscriber<? super FeedHandlerResult> subscriber) {
                                 subscriber.onError(e);
                             }
                         } catch (Exception e) {
+                            Log.e(TAG, Log.getStackTraceString(e));
                             subscriber.onError(e);
                         } finally {
                             boolean rc = new File(feed.getFile_url()).delete();

File: core/src/main/java/de/danoeh/antennapod/core/syndication/util/SyndTypeUtils.java
Patch:
@@ -30,8 +30,7 @@ public static String getValidMimeTypeFromUrl(String url) {
 		if (url != null) {
 			String extension = FilenameUtils.getExtension(url);
 			if (extension != null) {
-				String type = MimeTypeMap.getSingleton()
-						.getMimeTypeFromExtension(extension);
+				String type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);
 				if (type != null && enclosureTypeValid(type)) {
 					return type;
 				}

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -249,9 +249,6 @@ protected void onStart() {
             controller.release();
         }
         controller = newPlaybackController();
-        if(butPlay != null) {
-            butPlay.setOnClickListener(controller.newOnPlayButtonClickListener());
-        }
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/receiver/ConnectivityActionReceiver.java
Patch:
@@ -8,6 +8,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -20,7 +21,8 @@ public void onReceive(final Context context, Intent intent) {
 		if (TextUtils.equals(intent.getAction(), ConnectivityManager.CONNECTIVITY_ACTION)) {
 			Log.d(TAG, "Received intent");
 
-			if (NetworkUtils.autodownloadNetworkAvailable()) {
+            ClientConfig.initialize(context);
+            if (NetworkUtils.autodownloadNetworkAvailable()) {
 				Log.d(TAG, "auto-dl network available, starting auto-download");
 					DBTasks.autodownloadUndownloadedItems(context);
 			} else { // if new network is Wi-Fi, finish ongoing downloads,

File: app/src/main/java/de/danoeh/antennapod/receiver/PowerConnectionReceiver.java
Patch:
@@ -3,10 +3,9 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.os.BatteryManager;
 import android.util.Log;
 
-import de.danoeh.antennapod.core.BuildConfig;
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
@@ -25,6 +24,7 @@ public void onReceive(Context context, Intent intent) {
 
         Log.d(TAG, "charging intent: " + action);
 
+        ClientConfig.initialize(context);
         if (Intent.ACTION_POWER_CONNECTED.equals(action)) {
             Log.d(TAG, "charging, starting auto-download");
             // we're plugged in, this is a great time to auto-download if everything else is

File: core/src/main/java/de/danoeh/antennapod/core/UpdateManager.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod;
+package de.danoeh.antennapod.core;
 
 
 import android.content.Context;

File: core/src/main/java/de/danoeh/antennapod/core/receiver/AlarmUpdateReceiver.java
Patch:
@@ -6,7 +6,7 @@
 import android.text.TextUtils;
 import android.util.Log;
 
-import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 
 /** Listens for events that make it necessary to reset the update alarm. */
@@ -22,8 +22,7 @@ public void onReceive(Context context, Intent intent) {
 		} else if (TextUtils.equals(intent.getAction(), Intent.ACTION_PACKAGE_REPLACED)) {
 			Log.d(TAG, "Resetting update alarm after app upgrade");
 		}
-        PlaybackPreferences.init(context);
-        UserPreferences.init(context);
+		ClientConfig.initialize(context);
         UserPreferences.restartUpdateAlarm(false);
 	}
 

File: core/src/main/java/de/danoeh/antennapod/core/receiver/FeedUpdateReceiver.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.Intent;
 import android.util.Log;
 
+import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -19,6 +20,7 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
     @Override
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Received intent");
+        ClientConfig.initialize(context);
         if (NetworkUtils.isDownloadAllowed()) {
             DBTasks.refreshAllFeeds(context, null);
         } else {

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -260,6 +260,7 @@ protected void onStop() {
         Log.d(TAG, "onStop()");
         if (controller != null) {
             controller.release();
+            controller = null; // prevent leak
         }
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -111,7 +111,7 @@ public static ItemDescriptionFragment newInstance(FeedItem item, boolean saveSta
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         Log.d(TAG, "Creating view");
-        webvDescription = new WebView(getActivity());
+        webvDescription = new WebView(getActivity().getApplicationContext());
         if (Build.VERSION.SDK_INT >= 11) {
             webvDescription.setLayerType(View.LAYER_TYPE_SOFTWARE, null);
         }

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -19,7 +19,8 @@ public enum DownloadError {
 	ERROR_UNKNOWN_HOST(11, R.string.download_error_unknown_host),
 	ERROR_REQUEST_ERROR(12, R.string.download_error_request_error),
     ERROR_DB_ACCESS_ERROR(13, R.string.download_error_db_access),
-    ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized);
+    ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized),
+	ERROR_FILE_TYPE(15, R.string.download_error_file_type_type);
 
 	private final int code;
 	private final int resId;

File: app/src/main/java/de/danoeh/antennapod/receiver/PlayerWidget.java
Patch:
@@ -1,5 +1,7 @@
 package de.danoeh.antennapod.receiver;
 
+import java.util.Arrays;
+
 import android.appwidget.AppWidgetManager;
 import android.appwidget.AppWidgetProvider;
 import android.content.Context;
@@ -44,7 +46,7 @@ public void onEnabled(Context context) {
     @Override
     public void onUpdate(Context context, AppWidgetManager appWidgetManager,
                          int[] appWidgetIds) {
-        Log.d(TAG, "onUpdate() called with: " + "context = [" + context + "], appWidgetManager = [" + appWidgetManager + "], appWidgetIds = [" + appWidgetIds + "]");
+        Log.d(TAG, "onUpdate() called with: " + "context = [" + context + "], appWidgetManager = [" + appWidgetManager + "], appWidgetIds = [" + Arrays.toString(appWidgetIds) + "]");
         startUpdate(context);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -128,7 +128,8 @@ public boolean equals(Object o) {
 
         DownloadRequest that = (DownloadRequest) o;
 
-        if (lastModified != that.lastModified) return false;
+        if (lastModified != null ? !lastModified.equals(that.lastModified) : that.lastModified != null)
+            return false;
         if (deleteOnFailure != that.deleteOnFailure) return false;
         if (feedfileId != that.feedfileId) return false;
         if (feedfileType != that.feedfileType) return false;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -4,6 +4,7 @@
 import android.support.v4.util.ArrayMap;
 import android.util.Log;
 
+import java.util.Arrays;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
@@ -676,7 +677,7 @@ static FeedItem getFeedItem(final String podcastUrl, final String episodeUrl, Po
      * as well as chapter marks of the FeedItems will also be loaded from the database.
      */
     public static List<FeedItem> getFeedItems(final long... itemIds) {
-        Log.d(TAG, "getFeedItems() called with: " + "itemIds = [" + itemIds + "]");
+        Log.d(TAG, "getFeedItems() called with: " + "itemIds = [" + Arrays.toString(itemIds) + "]");
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();
         List<FeedItem> items = getFeedItems(adapter, itemIds);

File: core/src/main/java/de/danoeh/antennapod/core/util/IntList.java
Patch:
@@ -35,7 +35,7 @@ public int hashCode() {
         int hashCode = 1;
         for (int i = 0; i < size; i++) {
             int value = values[i];
-            hashCode = 31 * hashCode + (int)(value ^ (value >>> 32));
+            hashCode = 31 * hashCode + value;
         }
         return hashCode;
     }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -184,7 +184,7 @@ public void onChanged() {
                 loadFragment(lastFragment, null);
             } else {
                 try {
-                    loadFeedFragmentById(Integer.valueOf(lastFragment), null);
+                    loadFeedFragmentById(Integer.parseInt(lastFragment), null);
                 } catch (NumberFormatException e) {
                     // it's not a number, this happens if we removed
                     // a label from the NAV_DRAWER_TAGS

File: app/src/main/java/de/danoeh/antennapod/adapter/itunes/ItunesAdapter.java
Patch:
@@ -167,7 +167,7 @@ public static Podcast fromToplist(JSONObject json) throws JSONException {
             for(int i=0; imageUrl == null && i < images.length(); i++) {
                 JSONObject image = images.getJSONObject(i);
                 String height = image.getJSONObject("attributes").getString("height");
-                if(Integer.valueOf(height) >= 100) {
+                if(Integer.parseInt(height) >= 100) {
                     imageUrl = image.getString("label");
                 }
             }

File: app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java
Patch:
@@ -138,7 +138,7 @@ private void checkInputLength(int length) {
 
     private long readTimeMillis() {
         TimeUnit selectedUnit = units[spTimeUnit.getSelectedItemPosition()];
-        long value = Long.valueOf(etxtTime.getText().toString());
+        long value = Long.parseLong(etxtTime.getText().toString());
         return selectedUnit.toMillis(value);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -188,7 +188,7 @@ public void run() {
                             if (status.getReason() == DownloadError.ERROR_UNAUTHORIZED) {
                                 postAuthenticationNotification(downloader.getDownloadRequest());
                             } else if (status.getReason() == DownloadError.ERROR_HTTP_DATA_ERROR
-                                    && Integer.valueOf(status.getReasonDetailed()) == 416) {
+                                    && Integer.parseInt(status.getReasonDetailed()) == 416) {
 
                                 Log.d(TAG, "Requested invalid range, restarting download from the beginning");
                                 FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -180,7 +180,7 @@ protected void download() {
                     && !TextUtils.isEmpty(contentRangeHeader)) {
                 String start = contentRangeHeader.substring("bytes ".length(),
                         contentRangeHeader.indexOf("-"));
-                request.setSoFar(Long.valueOf(start));
+                request.setSoFar(Long.parseLong(start));
                 Log.d(TAG, "Starting download at position " + request.getSoFar());
 
                 out = new RandomAccessFile(destination, "rw");

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -117,13 +117,13 @@ public static long parseTimeString(final String time) {
         int idx = 0;
         if (parts.length == 3) {
             // string has hours
-            result += Integer.valueOf(parts[idx]) * 3600000L;
+            result += Integer.parseInt(parts[idx]) * 3600000L;
             idx++;
         }
         if (parts.length >= 2) {
-            result += Integer.valueOf(parts[idx]) * 60000L;
+            result += Integer.parseInt(parts[idx]) * 60000L;
             idx++;
-            result += (Float.valueOf(parts[idx])) * 1000L;
+            result += (Float.parseFloat(parts[idx])) * 1000L;
         }
         return result;
     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -148,7 +148,7 @@ public static int getTimecodeLinkTime(String link) {
 
             try {
                 if (m.find()) {
-                    return Integer.valueOf(m.group(1));
+                    return Integer.parseInt(m.group(1));
                 }
             } catch (NumberFormatException e) {
                 e.printStackTrace();

File: app/src/main/java/de/danoeh/antennapod/receiver/PlayerWidget.java
Patch:
@@ -1,5 +1,7 @@
 package de.danoeh.antennapod.receiver;
 
+import java.util.Arrays;
+
 import android.appwidget.AppWidgetManager;
 import android.appwidget.AppWidgetProvider;
 import android.content.Context;
@@ -44,7 +46,7 @@ public void onEnabled(Context context) {
     @Override
     public void onUpdate(Context context, AppWidgetManager appWidgetManager,
                          int[] appWidgetIds) {
-        Log.d(TAG, "onUpdate() called with: " + "context = [" + context + "], appWidgetManager = [" + appWidgetManager + "], appWidgetIds = [" + appWidgetIds + "]");
+        Log.d(TAG, "onUpdate() called with: " + "context = [" + context + "], appWidgetManager = [" + appWidgetManager + "], appWidgetIds = [" + Arrays.toString(appWidgetIds) + "]");
         startUpdate(context);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequest.java
Patch:
@@ -128,7 +128,8 @@ public boolean equals(Object o) {
 
         DownloadRequest that = (DownloadRequest) o;
 
-        if (lastModified != that.lastModified) return false;
+        if (lastModified != null ? !lastModified.equals(that.lastModified) : that.lastModified != null)
+            return false;
         if (deleteOnFailure != that.deleteOnFailure) return false;
         if (feedfileId != that.feedfileId) return false;
         if (feedfileType != that.feedfileType) return false;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -4,6 +4,7 @@
 import android.support.v4.util.ArrayMap;
 import android.util.Log;
 
+import java.util.Arrays;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
@@ -676,7 +677,7 @@ static FeedItem getFeedItem(final String podcastUrl, final String episodeUrl, Po
      * as well as chapter marks of the FeedItems will also be loaded from the database.
      */
     public static List<FeedItem> getFeedItems(final long... itemIds) {
-        Log.d(TAG, "getFeedItems() called with: " + "itemIds = [" + itemIds + "]");
+        Log.d(TAG, "getFeedItems() called with: " + "itemIds = [" + Arrays.toString(itemIds) + "]");
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();
         List<FeedItem> items = getFeedItems(adapter, itemIds);

File: core/src/main/java/de/danoeh/antennapod/core/util/IntList.java
Patch:
@@ -35,7 +35,7 @@ public int hashCode() {
         int hashCode = 1;
         for (int i = 0; i < size; i++) {
             int value = values[i];
-            hashCode = 31 * hashCode + (int)(value ^ (value >>> 32));
+            hashCode = 31 * hashCode + value;
         }
         return hashCode;
     }

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -202,7 +202,8 @@ public void onBindViewHolder(final Holder holder, int position) {
 
     @Override
     public long getItemId(int position) {
-        return position;
+        FeedItem item = itemAccess.getItem(position);
+        return item != null ? item.getId() : RecyclerView.NO_POSITION;
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -337,6 +337,7 @@ private void onFragmentLoaded() {
             MainActivity mainActivity = activity.get();
             listAdapter = new AllEpisodesRecycleAdapter(mainActivity, itemAccess,
                     new DefaultActionButtonCallback(mainActivity), showOnlyNewEpisodes());
+            listAdapter.setHasStableIds(true);
             recyclerView.setAdapter(listAdapter);
         }
         listAdapter.notifyDataSetChanged();

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -474,6 +474,7 @@ private void onFragmentLoaded(final boolean restoreScrollPosition) {
             MainActivity activity = (MainActivity) getActivity();
             recyclerAdapter = new QueueRecyclerAdapter(activity, itemAccess,
                 new DefaultActionButtonCallback(activity), itemTouchHelper);
+            recyclerAdapter.setHasStableIds(true);
             recyclerView.setAdapter(recyclerAdapter);
         }
         if(queue == null || queue.size() == 0) {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -124,7 +124,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             } else {
                 gridView.setVisibility(View.GONE);
                 progressBar.setVisibility(View.VISIBLE);
-                rx.Observable.create((Observable.OnSubscribe<String>) subscriber -> {
+                subscription = Observable.create((Observable.OnSubscribe<String>) subscriber -> {
                             OkHttpClient client = AntennapodHttpClient.getHttpClient();
                             Request.Builder httpReq = new Request.Builder()
                                     .url(podcast.feedUrl)
@@ -233,7 +233,7 @@ private void loadToplist() {
         butRetry.setVisibility(View.GONE);
         txtvEmpty.setVisibility(View.GONE);
         progressBar.setVisibility(View.VISIBLE);
-        subscription = rx.Observable.create((Observable.OnSubscribe<List<Podcast>>) subscriber -> {
+        subscription = Observable.create((Observable.OnSubscribe<List<Podcast>>) subscriber -> {
                     String lang = Locale.getDefault().getLanguage();
                     String url = "https://itunes.apple.com/" + lang + "/rss/toppodcasts/limit=25/explicit=true/json";
                     OkHttpClient client = AntennapodHttpClient.getHttpClient();

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -247,6 +247,9 @@ protected void onStart() {
             controller.release();
         }
         controller = newPlaybackController();
+        if(butPlay != null) {
+            butPlay.setOnClickListener(controller.newOnPlayButtonClickListener());
+        }
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -247,6 +247,9 @@ protected void onStart() {
             controller.release();
         }
         controller = newPlaybackController();
+        if(butPlay != null) {
+            butPlay.setOnClickListener(controller.newOnPlayButtonClickListener());
+        }
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -62,7 +62,6 @@ public class ItemDescriptionFragment extends Fragment implements AudioplayerCont
     private static final String ARG_HIGHLIGHT_TIMECODES = "arg.highlightTimecodes";
 
     private WebView webvDescription;
-    private String webvData;
 
     private ShownotesProvider shownotesProvider;
     private Playable media;
@@ -309,7 +308,6 @@ private void load() {
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(data -> {
-                    webvData = data;
                     webvDescription.loadDataWithBaseURL(null, data, "text/html",
                             "utf-8", "about:blank");
                     Log.d(TAG, "Webview loaded");
@@ -384,7 +382,7 @@ private void onTimecodeLinkSelected(String link) {
 
     @Override
     public void onMediaChanged(Playable media) {
-        if(this.media == media) {
+        if(this.media == media || webvDescription == null) {
             return;
         }
         this.media = media;

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -232,7 +232,7 @@ private View getNavView(String title, int position, View convertView, ViewGroup
             int spaceUsed = itemAccess.getNumberOfDownloadedItems() -
                     itemAccess.getReclaimableItems();
 
-            if (spaceUsed >= epCacheSize) {
+            if (epCacheSize > 0 && spaceUsed >= epCacheSize) {
                 holder.count.setText("{md-disc-full 150%}");
                 Iconify.addIcons(holder.count);
                 holder.count.setVisibility(View.VISIBLE);

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -13,7 +13,6 @@
 import android.util.Pair;
 
 import java.util.Collection;
-import java.util.Date;
 import java.util.List;
 import java.util.Map;
 
@@ -315,6 +314,7 @@ private void updateErrorNotification(GpodnetServiceException exception) {
                 .setContentIntent(activityIntent)
                 .setSmallIcon(R.drawable.stat_notify_sync_error)
                 .setAutoCancel(true)
+                .setVisibility(Notification.VISIBILITY_PUBLIC)
                 .build();
         NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
         nm.notify(id, notification);

File: core/src/main/java/de/danoeh/antennapod/core/util/DownloadError.java
Patch:
@@ -19,7 +19,8 @@ public enum DownloadError {
 	ERROR_UNKNOWN_HOST(11, R.string.download_error_unknown_host),
 	ERROR_REQUEST_ERROR(12, R.string.download_error_request_error),
     ERROR_DB_ACCESS_ERROR(13, R.string.download_error_db_access),
-    ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized);
+    ERROR_UNAUTHORIZED(14, R.string.download_error_unauthorized),
+	ERROR_FILE_TYPE(15, R.string.download_error_file_type_type);
 
 	private final int code;
 	private final int resId;

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -145,6 +145,9 @@ public static String formatRFC3339UTC(Date date) {
     }
 
     public static String formatAbbrev(final Context context, final Date date) {
+        if(date == null) {
+            return "";
+        }
         GregorianCalendar cal = new GregorianCalendar();
         cal.add(GregorianCalendar.YEAR, -1);
         // some padding, because no one really remembers what day of the month it is

File: app/src/main/java/de/danoeh/antennapod/adapter/AdapterUtils.java
Patch:
@@ -47,9 +47,10 @@ public static void updateEpisodePlaybackProgress(FeedItem item, TextView txtvPos
                                 - media.getPosition()));
             }
         } else if (!media.isDownloaded()) {
+            Log.d(TAG, "size: " + media.getSize());
             if (media.getSize() > 0) {
                 txtvPos.setText(Converter.byteToString(media.getSize()));
-            } else if(false == media.checkedOnSizeButUnknown()) {
+            } else if(NetworkUtils.isDownloadAllowed() && false == media.checkedOnSizeButUnknown()) {
                 txtvPos.setText("{fa-spinner}");
                 Iconify.addIcons(txtvPos);
                 NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -135,7 +135,7 @@ public void onBindViewHolder(final Holder holder, int position) {
                 holder.txtvDuration.setText(Converter.getDurationStringLong(media.getDuration()));
             } else if (media.getSize() > 0) {
                 holder.txtvDuration.setText(Converter.byteToString(media.getSize()));
-            } else if(false == media.checkedOnSizeButUnknown()) {
+            } else if(NetworkUtils.isDownloadAllowed() && false == media.checkedOnSizeButUnknown()) {
                 holder.txtvDuration.setText("{fa-spinner}");
                 Iconify.addIcons(holder.txtvDuration);
                 NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -253,7 +253,7 @@ public void bind(FeedItem item) {
                 } else {
                     if(media.getSize() > 0) {
                         progressLeft.setText(Converter.byteToString(media.getSize()));
-                    } else if(false == media.checkedOnSizeButUnknown()) {
+                    } else if(NetworkUtils.isDownloadAllowed() && false == media.checkedOnSizeButUnknown()) {
                         progressLeft.setText("{fa-spinner}");
                         Iconify.addIcons(progressLeft);
                         NetworkUtils.getFeedMediaSizeObservable(media)

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -412,7 +412,7 @@ public void onTimerSet(long millis, boolean shakeToReset, boolean vibrate) {
                     case R.id.audio_controls:
                         MaterialDialog dialog = new MaterialDialog.Builder(this)
                                 .title(R.string.audio_controls)
-                                .customView(R.layout.audio_controls, false)
+                                .customView(R.layout.audio_controls, true)
                                 .neutralText(R.string.close_label)
                                 .onNeutral((dialog1, which) -> {
                                     final SeekBar left = (SeekBar) dialog1.findViewById(R.id.volume_left);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -252,8 +252,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 if (!FeedMenuHandler.onOptionsItemClicked(getActivity(), item, feed)) {
                     switch (item.getItemId()) {
                         case R.id.episode_actions:
-                            EpisodesApplyActionFragment fragment = new EpisodesApplyActionFragment();
-                            fragment.setEpisodes(feed.getItems());
+                            EpisodesApplyActionFragment fragment = EpisodesApplyActionFragment
+                                    .newInstance(feed.getItems());
                             ((MainActivity)getActivity()).loadChildFragment(fragment);
                             return true;
                         case R.id.remove_item:

File: app/src/main/java/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -224,10 +224,12 @@ public void onNothingSelected(AdapterView<?> parent) {
                         etxtFilterText.setText(filter.getIncludeFilter());
                         rdoFilterInclude.setChecked(true);
                         rdoFilterExclude.setChecked(false);
+                        filterInclude = true;
                     } else if (filter.excludeOnly()) {
                         etxtFilterText.setText(filter.getExcludeFilter());
                         rdoFilterInclude.setChecked(false);
                         rdoFilterExclude.setChecked(true);
+                        filterInclude = false;
                     } else {
                         Log.d(TAG, "No filter set");
                         rdoFilterInclude.setChecked(false);

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1151,7 +1151,7 @@ public final Cursor getNewItemsIdsCursor(long feedId) {
      * The returned cursor uses the FEEDITEM_SEL_FI_SMALL selection.
      */
     public final Cursor getNewItemsCursor() {
-        String[] args = new String[] {
+        Object[] args = new String[] {
                 SEL_FI_SMALL_STR,
                 TABLE_NAME_FEED_ITEMS,
                 TABLE_NAME_FEEDS,

File: app/src/main/java/de/danoeh/antennapod/fragment/ChaptersFragment.java
Patch:
@@ -68,7 +68,7 @@ public void onMediaChanged(Playable media) {
         this.media = media;
         adapter.setMedia(media);
         adapter.notifyDataSetChanged();
-        if(media.getChapters() == null) {
+        if(media == null || media.getChapters() == null || media.getChapters().size() == 0) {
             setEmptyText(getString(R.string.no_items_label));
         } else {
             setEmptyText(null);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -24,7 +24,6 @@
 import android.view.WindowManager;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.request.target.Target;
 
 import java.io.IOException;
 import java.util.concurrent.CountDownLatch;
@@ -982,6 +981,8 @@ public void endPlayback(final boolean wasSkipped) {
             playerLock.lock();
             releaseWifiLockIfNecessary();
 
+            boolean isPlaying = playerStatus == PlayerStatus.PLAYING;
+
             if (playerStatus != PlayerStatus.INDETERMINATE) {
                 setPlayerStatus(PlayerStatus.INDETERMINATE, media);
             }
@@ -990,7 +991,7 @@ public void endPlayback(final boolean wasSkipped) {
 
             }
             audioManager.abandonAudioFocus(audioFocusChangeListener);
-            callback.endPlayback(true, wasSkipped);
+            callback.endPlayback(isPlaying, wasSkipped);
 
             playerLock.unlock();
         });

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -168,9 +168,8 @@ public MediaType getMediaType() {
     }
 
     public void updateFromOther(FeedMedia other) {
-        // we try to cover two cases: (1) feed did include file before (2) feed contained wrong URL
-        // if item.getAutoDownload() is false, the file has been downloaded before
-        if((TextUtils.isEmpty(download_url) || item.getAutoDownload()) && !TextUtils.isEmpty(other.download_url)) {
+        // reset to new if feed item did link to a file before
+        if(TextUtils.isEmpty(download_url) && !TextUtils.isEmpty(other.download_url)) {
             item.setNew();
         }
         super.updateFromOther(other);

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -130,8 +130,8 @@ public class PodDBAdapter {
             + KEY_FLATTR_STATUS + " INTEGER,"
             + KEY_USERNAME + " TEXT,"
             + KEY_PASSWORD + " TEXT,"
-            + KEY_INCLUDE_FILTER + " TEXT,"
-            + KEY_EXCLUDE_FILTER + " TEXT,"
+            + KEY_INCLUDE_FILTER + " TEXT DEFAULT '',"
+            + KEY_EXCLUDE_FILTER + " TEXT DEFAULT '',"
             + KEY_IS_PAGED + " INTEGER DEFAULT 0,"
             + KEY_NEXT_PAGE_LINK + " TEXT,"
             + KEY_HIDE + " TEXT,"

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -149,8 +149,8 @@ public void testAutoDelete() {
     public void testPlaybackSpeeds() {
         solo.clickOnText(solo.getString(R.string.pref_playback_speed_title));
         solo.waitForDialogToOpen(1000);
-        assertTrue(solo.searchText(solo.getString(R.string.no_playback_plugin_title)));
-        solo.clickOnText(solo.getString(R.string.close_label));
+        assertTrue(solo.searchText(res.getStringArray(R.array.playback_speed_values)[0]));
+        solo.clickOnText(solo.getString(R.string.cancel_label));
         solo.waitForDialogToClose(1000);
     }
 

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -149,8 +149,8 @@ public void testAutoDelete() {
     public void testPlaybackSpeeds() {
         solo.clickOnText(solo.getString(R.string.pref_playback_speed_title));
         solo.waitForDialogToOpen(1000);
-        assertTrue(solo.searchText(solo.getString(R.string.no_playback_plugin_title)));
-        solo.clickOnText(solo.getString(R.string.close_label));
+        assertTrue(solo.searchText(res.getStringArray(R.array.playback_speed_values)[0]));
+        solo.clickOnText(solo.getString(R.string.cancel_label));
         solo.waitForDialogToClose(1000);
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -48,7 +48,6 @@ public static CoverFragment newInstance(Playable item) {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setRetainInstance(true);
         Bundle args = getArguments();
         if (args != null) {
             media = args.getParcelable(ARG_PLAYABLE);

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -183,8 +183,8 @@ public void onCreateContextMenu(final ContextMenu menu, View v, ContextMenu.Cont
                     item1.setVisible(visible);
                 }
             };
-            FeedItemMenuHandler.onPrepareMenu(mainActivity.get(), contextMenuInterface, item, true,
-                    itemAccess.getQueueIds());
+            FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true,
+                    itemAccess.getQueueIds(), itemAccess.getFavoritesIds());
         }
 
         @Override
@@ -351,6 +351,7 @@ public interface ItemAccess {
         long getItemDownloadSize(FeedItem item);
         int getItemDownloadProgressPercent(FeedItem item);
         LongList getQueueIds();
+        LongList getFavoritesIds();
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -408,7 +408,7 @@ public static List<FeedItem> getFavoriteItemsList() {
         return items;
     }
 
-    static LongList getFavoriteIDList() {
+    public static LongList getFavoriteIDList() {
         Log.d(TAG, "getFavoriteIDList() called");
         PodDBAdapter adapter = PodDBAdapter.getInstance();
         adapter.open();

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -183,8 +183,8 @@ public void onCreateContextMenu(final ContextMenu menu, View v, ContextMenu.Cont
                     item1.setVisible(visible);
                 }
             };
-            FeedItemMenuHandler.onPrepareMenu(mainActivity.get(), contextMenuInterface, item, true,
-                    itemAccess.getQueueIds());
+            FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true,
+                    itemAccess.getQueueIds(), itemAccess.getFavoritesIds());
         }
 
         @Override
@@ -351,6 +351,7 @@ public interface ItemAccess {
         long getItemDownloadSize(FeedItem item);
         int getItemDownloadProgressPercent(FeedItem item);
         LongList getQueueIds();
+        LongList getFavoritesIds();
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -993,16 +993,13 @@ public static Future<?> setFeedItemAutoDownload(final FeedItem feedItem,
     public static Future<?> saveFeedItemAutoDownloadFailed(final FeedItem feedItem) {
         return dbExec.submit(() -> {
             int failedAttempts = feedItem.getFailedAutoDownloadAttempts() + 1;
-            Log.d(TAG, "failedAttempts: " + failedAttempts);
             long autoDownload;
             if(!feedItem.getAutoDownload() || failedAttempts >= 10) {
                 autoDownload = 0; // giving up, disable auto download
                 feedItem.setAutoDownload(false);
             } else {
                 long now = System.currentTimeMillis();
                 autoDownload = (now / 10) * 10 + failedAttempts;
-                Log.d(TAG, "now: " + now);
-                Log.d(TAG, "autoDownload: " + autoDownload);
             }
             final PodDBAdapter adapter = PodDBAdapter.getInstance();
             adapter.open();

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -78,11 +78,11 @@ public class FeedItem extends FeedComponent implements ShownotesProvider, Flattr
 
     /*
      *   0: auto download disabled
-     *   1: auto download enabled
+     *   1: auto download enabled (default)
      * > 1: auto download enabled, (approx.) timestamp of the last failed attempt
      *      where last digit denotes the number of failed attempts
      */
-    private long autoDownload = 0;
+    private long autoDownload = 1;
 
     /**
      * Any tags assigned to this item

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -78,11 +78,11 @@ public class FeedItem extends FeedComponent implements ShownotesProvider, Flattr
 
     /*
      *   0: auto download disabled
-     *   1: auto download enabled
+     *   1: auto download enabled (default)
      * > 1: auto download enabled, (approx.) timestamp of the last failed attempt
      *      where last digit denotes the number of failed attempts
      */
-    private long autoDownload = 0;
+    private long autoDownload = 1;
 
     /**
      * Any tags assigned to this item

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -39,7 +39,7 @@ public class PlaybackServiceTaskManager {
     /**
      * Notification interval of widget updater in milliseconds.
      */
-    public static final int WIDGET_UPDATER_NOTIFICATION_INTERVAL = 1500;
+    public static final int WIDGET_UPDATER_NOTIFICATION_INTERVAL = 1000;
 
     private static final int SCHED_EX_POOL_SIZE = 2;
     private final ScheduledThreadPoolExecutor schedExecutor;

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -224,6 +224,9 @@ private void checkFirstLaunch() {
         if (prefs.getBoolean(PREF_IS_FIRST_LAUNCH, true)) {
             new Handler().postDelayed(() -> drawerLayout.openDrawer(navDrawer), 1500);
 
+            // for backward compatibility, we only change defaults for fresh installs
+            UserPreferences.setUpdateInterval(12);
+
             SharedPreferences.Editor edit = prefs.edit();
             edit.putBoolean(PREF_IS_FIRST_LAUNCH, false);
             edit.commit();

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -332,7 +332,7 @@ private void updateAppearance() {
                 butAction1Text = R.string.mark_read_label;
             }
             if (item.getLink() != null) {
-                butAction2Icon = "{ma-web 24sp}";
+                butAction2Icon = "{md-web 24sp}";
                 butAction2Text = R.string.visit_website_label;
             }
         } else {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -332,7 +332,7 @@ private void updateAppearance() {
                 butAction1Text = R.string.mark_read_label;
             }
             if (item.getLink() != null) {
-                butAction2Icon = "{ma-web 24sp}";
+                butAction2Icon = "{md-web 24sp}";
                 butAction2Text = R.string.visit_website_label;
             }
         } else {

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -68,6 +68,7 @@ public class QueueFragment extends Fragment {
     public static final String TAG = "QueueFragment";
 
     private static final int EVENTS = EventDistributor.DOWNLOAD_HANDLED |
+            EventDistributor.UNREAD_ITEMS_UPDATE | // sent when playback position is reset
             EventDistributor.PLAYER_STATUS_UPDATE;
 
     private TextView infoBar;

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -224,6 +224,9 @@ private void checkFirstLaunch() {
         if (prefs.getBoolean(PREF_IS_FIRST_LAUNCH, true)) {
             new Handler().postDelayed(() -> drawerLayout.openDrawer(navDrawer), 1500);
 
+            // for backward compatibility, we only change defaults for fresh installs
+            UserPreferences.setUpdateInterval(12);
+
             SharedPreferences.Editor edit = prefs.edit();
             edit.putBoolean(PREF_IS_FIRST_LAUNCH, false);
             edit.commit();

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -190,6 +190,9 @@ public boolean isRefreshing() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        if(!isAdded()) {
+            return;
+        }
         super.onCreateOptionsMenu(menu, inflater);
         if (itemsLoaded) {
             inflater.inflate(R.menu.new_episodes, menu);

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -111,6 +111,9 @@ public void update(EventDistributor eventDistributor, Integer arg) {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        if(!isAdded()) {
+            return;
+        }
         super.onCreateOptionsMenu(menu, inflater);
         if (itemsLoaded) {
             MenuItem clearHistory = menu.add(Menu.NONE, R.id.clear_history_item, Menu.CATEGORY_CONTAINER, R.string.clear_history_label);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -243,7 +243,7 @@ public void onDestroyView() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        if(item == null) {
+        if(!isAdded() || item == null) {
             return;
         }
         inflater.inflate(R.menu.feeditem_options, menu);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -194,6 +194,9 @@ public boolean isRefreshing() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        if(!isAdded()) {
+            return;
+        }
         super.onCreateOptionsMenu(menu, inflater);
 
         if (itemsLoaded) {

File: app/src/main/java/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -148,6 +148,9 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        if(!isAdded()) {
+            return;
+        }
         super.onCreateOptionsMenu(menu, inflater);
         if (itemsLoaded) {
             MenuItem clearHistory = menu.add(Menu.NONE, R.id.clear_history_item, Menu.CATEGORY_CONTAINER, R.string.clear_history_label);

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -235,6 +235,9 @@ public void onDestroyView() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        if(!isAdded()) {
+            return;
+        }
         super.onCreateOptionsMenu(menu, inflater);
         if (queue != null) {
             inflater.inflate(R.menu.queue, menu);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -370,6 +370,9 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
 
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
+        if(adapter == null) {
+            return;
+        }
         FeedItem selection = adapter.getItem(position - l.getHeaderViewsCount());
         if (selection != null) {
             MainActivity activity = (MainActivity) getActivity();

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -794,7 +794,7 @@ public long setDownloadStatus(DownloadStatus status) {
         return status.getId();
     }
 
-    public void setFeedItemAutoDownload(FeedItem feedItem, boolean autoDownload) {
+    public void setFeedItemAutoDownload(FeedItem feedItem, long autoDownload) {
         ContentValues values = new ContentValues();
         values.put(KEY_AUTO_DOWNLOAD, autoDownload);
         db.update(TABLE_NAME_FEED_ITEMS, values, KEY_ID + "=?",

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackSonicTest.java
Patch:
@@ -49,10 +49,11 @@ public PlaybackSonicTest() {
     public void setUp() throws Exception {
         super.setUp();
 
-        PodDBAdapter.deleteDatabase();
-
         context = getInstrumentation().getTargetContext();
 
+        PodDBAdapter.init(context);
+        PodDBAdapter.deleteDatabase();
+
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         prefs.edit()
                 .clear()

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -46,10 +46,11 @@ public PlaybackTest() {
     public void setUp() throws Exception {
         super.setUp();
 
-        PodDBAdapter.deleteDatabase();
-
         context = getInstrumentation().getTargetContext();
 
+        PodDBAdapter.init(context);
+        PodDBAdapter.deleteDatabase();
+
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
         prefs.edit()
                 .clear()

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -79,9 +79,9 @@ public void tearDown() throws Exception {
 
         super.tearDown();
     }
-
     private void openNavDrawer() {
-        solo.clickOnScreen(50, 50);
+        solo.clickOnImageButton(0);
+        getInstrumentation().waitForIdleSync();
     }
 
     private void setContinuousPlaybackPreference(boolean value) {

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -178,7 +178,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
             case R.id.mark_unread_item:
                 selectedItem.setPlayed(false);
                 DBWriter.markItemPlayed(selectedItem, FeedItem.UNPLAYED, false);
-                if(GpodnetPreferences.loggedIn()) {
+                if(GpodnetPreferences.loggedIn() && selectedItem.getMedia() != null) {
                     GpodnetEpisodeAction actionNew = new GpodnetEpisodeAction.Builder(selectedItem, Action.NEW)
                             .currentDeviceId()
                             .currentTimestamp()

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -615,7 +615,7 @@ public void onProgressChanged(SeekBar seekBar, int progress,
         if (controller != null) {
             prog = controller.onSeekBarProgressChanged(seekBar, progress, fromUser,
                     txtvPosition);
-            if(timeLeft) {
+            if(timeLeft && prog!=0) {
                 int duration = controller.getDuration();
                 txtvLength.setText("-"+Converter
                         .getDurationStringLong(duration - (int) (prog * duration)));

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -819,7 +819,7 @@ public int getCount() {
 
         @Override
         public Feed getItem(int position) {
-            if (navDrawerData != null && position < navDrawerData.feeds.size()) {
+            if (navDrawerData != null && 0 <= position && position < navDrawerData.feeds.size()) {
                 return navDrawerData.feeds.get(position);
             } else {
                 return null;

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -615,7 +615,7 @@ public int getCount() {
 
         @Override
         public Feed getItem(int position) {
-            if (navDrawerData != null && position < navDrawerData.feeds.size()) {
+            if (navDrawerData != null && 0 <= position && position < navDrawerData.feeds.size()) {
                 return navDrawerData.feeds.get(position);
             } else {
                 return null;

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -349,7 +349,7 @@ public int getCount() {
 
         @Override
         public FeedItem getItem(int position) {
-            if (episodes != null && position < episodes.size()) {
+            if (episodes != null && 0 <= position && position < episodes.size()) {
                 return episodes.get(position);
             }
             return null;

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -503,7 +503,7 @@ public int getCount() {
 
         @Override
         public FeedItem getItem(int position) {
-            if(queue != null && position < queue.size()) {
+            if (queue != null && 0 <= position && position < queue.size()) {
                 return queue.get(position);
             }
             return null;

File: app/src/androidTest/java/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -189,6 +189,7 @@ public void testDeleteFeed() throws IOException, ExecutionException, Interrupted
             c.close();
             c = adapter.getSimpleChaptersOfFeedItemCursor(item);
             assertEquals(0, c.getCount());
+            c.close();
         }
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java
Patch:
@@ -20,7 +20,7 @@ public class FeedItemFilter {
     private boolean hideNotDownloaded = false;
 
     public FeedItemFilter(String properties) {
-        this(TextUtils.split(",", properties));
+        this(TextUtils.split(properties, ","));
     }
 
     public FeedItemFilter(String[] properties) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -19,6 +19,7 @@
 import java.util.Comparator;
 import java.util.Date;
 import java.util.List;
+import java.util.Set;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.Future;
@@ -1008,8 +1009,8 @@ public static Future<?> setFeedsItemsAutoDownload(final Feed feed,
      * @param filterValues Values that represent properties to filter by
      */
     public static Future<?> setFeedItemsFilter(final long feedId,
-                                               final List<String> filterValues) {
-        Log.d(TAG, "setFeedFilter");
+                                               final Set<String> filterValues) {
+        Log.d(TAG, "setFeedItemsFilter() called with: " + "feedId = [" + feedId + "], filterValues = [" + filterValues + "]");
         return dbExec.submit(() -> {
             PodDBAdapter adapter = PodDBAdapter.getInstance();
             adapter.open();

File: core/src/main/java/de/danoeh/antennapod/core/service/download/AntennapodHttpClient.java
Patch:
@@ -75,14 +75,14 @@ public static OkHttpClient newHttpClient() {
                 if(location.startsWith("/")) { // URL is not absolute, but relative
                     URL url = request.url();
                     location = url.getProtocol() + "://" + url.getHost() + location;
-                } else if(!location.startsWith("http://") && !location.startsWith("https://")) {
+                } else if(!location.toLowerCase().startsWith("http://") &&
+                        !location.toLowerCase().startsWith("https://")) {
                     // Reference is relative to current path
                     URL url = request.url();
                     String path = url.getPath();
                     String newPath = path.substring(0, path.lastIndexOf("/") + 1) + location;
                     location = url.getProtocol() + "://" + url.getHost() + newPath;
                 }
-                Log.d(TAG, "New location: " + location);
                 try {
                     DBWriter.updateFeedDownloadURL(request.urlString(), location).get();
                 } catch (Exception e) {

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -41,7 +41,6 @@ public MainActivityTest() {
     @Override
     protected void setUp() throws Exception {
         super.setUp();
-        solo = new Solo(getInstrumentation(), getActivity());
         uiTestUtils = new UITestUtils(getInstrumentation().getTargetContext());
         uiTestUtils.setup();
 
@@ -54,6 +53,8 @@ protected void setUp() throws Exception {
         // override first launch preference
         prefs = getInstrumentation().getTargetContext().getSharedPreferences(MainActivity.PREF_NAME, Context.MODE_PRIVATE);
         prefs.edit().putBoolean(MainActivity.PREF_IS_FIRST_LAUNCH, false).commit();
+
+        solo = new Solo(getInstrumentation(), getActivity());
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -13,6 +13,7 @@
 import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.ActionBarDrawerToggle;
 import android.support.v7.widget.Toolbar;
+import android.text.TextUtils;
 import android.util.Log;
 import android.view.ContextMenu;
 import android.view.Gravity;
@@ -35,7 +36,6 @@
 import com.bumptech.glide.Glide;
 
 import org.apache.commons.lang3.ArrayUtils;
-import org.apache.commons.lang3.StringUtils;
 
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.adapter.ChapterListAdapter;
@@ -246,7 +246,7 @@ private boolean restoreFromPreferences() {
     @Override
     protected void onResume() {
         super.onResume();
-        if (StringUtils.equals(getIntent().getAction(), Intent.ACTION_VIEW)) {
+        if (TextUtils.equals(getIntent().getAction(), Intent.ACTION_VIEW)) {
             Intent intent = getIntent();
             Log.d(TAG, "Received VIEW intent: " + intent.getData().getPath());
             ExternalMedia media = new ExternalMedia(intent.getData().getPath(),

File: app/src/main/java/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -6,10 +6,9 @@
 import android.content.IntentFilter;
 import android.os.Bundle;
 import android.support.v7.app.ActionBarActivity;
+import android.text.TextUtils;
 import android.util.Log;
 
-import org.apache.commons.lang3.StringUtils;
-
 import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
@@ -57,7 +56,7 @@ private void leaveErrorState() {
 
 		@Override
 		public void onReceive(Context context, Intent intent) {
-			if (StringUtils.equals(intent.getAction(), Intent.ACTION_MEDIA_MOUNTED)) {
+			if (TextUtils.equals(intent.getAction(), Intent.ACTION_MEDIA_MOUNTED)) {
 				if (intent.getBooleanExtra("read-only", true)) {
 					if (BuildConfig.DEBUG)
 						Log.d(TAG, "Media was mounted; Finishing activity");

File: app/src/main/java/de/danoeh/antennapod/receiver/ConnectivityActionReceiver.java
Patch:
@@ -5,10 +5,9 @@
 import android.content.Intent;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
+import android.text.TextUtils;
 import android.util.Log;
 
-import org.apache.commons.lang3.StringUtils;
-
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -18,7 +17,7 @@ public class ConnectivityActionReceiver extends BroadcastReceiver {
 
 	@Override
 	public void onReceive(final Context context, Intent intent) {
-		if (StringUtils.equals(intent.getAction(), ConnectivityManager.CONNECTIVITY_ACTION)) {
+		if (TextUtils.equals(intent.getAction(), ConnectivityManager.CONNECTIVITY_ACTION)) {
 			Log.d(TAG, "Received intent");
 
 			if (NetworkUtils.autodownloadNetworkAvailable()) {

File: app/src/main/java/de/danoeh/antennapod/receiver/SPAReceiver.java
Patch:
@@ -3,11 +3,10 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
+import android.text.TextUtils;
 import android.util.Log;
 import android.widget.Toast;
 
-import org.apache.commons.lang3.StringUtils;
-
 import java.util.Arrays;
 import java.util.Date;
 
@@ -29,7 +28,7 @@ public class SPAReceiver extends BroadcastReceiver{
 
     @Override
     public void onReceive(Context context, Intent intent) {
-        if (StringUtils.equals(intent.getAction(), ACTION_SP_APPS_QUERY_FEEDS_REPSONSE)) {
+        if (TextUtils.equals(intent.getAction(), ACTION_SP_APPS_QUERY_FEEDS_REPSONSE)) {
             if (BuildConfig.DEBUG) Log.d(TAG, "Received SP_APPS_QUERY_RESPONSE");
             if (intent.hasExtra(ACTION_SP_APPS_QUERY_FEEDS_REPSONSE_FEEDS_EXTRA)) {
                 String[] feedUrls = intent.getStringArrayExtra(ACTION_SP_APPS_QUERY_FEEDS_REPSONSE_FEEDS_EXTRA);

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -6,11 +6,11 @@
 import android.app.PendingIntent;
 import android.content.Context;
 import android.os.AsyncTask;
+import android.support.annotation.NonNull;
 import android.support.v4.app.NotificationCompat;
 import android.util.Log;
 import android.widget.Toast;
 
-import org.apache.commons.lang3.Validate;
 import org.shredzone.flattr4j.exception.FlattrException;
 
 import java.util.LinkedList;
@@ -63,8 +63,7 @@ public static enum ExitCode {EXIT_NORMAL, NO_TOKEN, NO_NETWORK, NO_THINGS}
      *
      * @param context A context for accessing the database and posting notifications. Must not be null.
      */
-    public FlattrClickWorker(Context context) {
-        Validate.notNull(context);
+    public FlattrClickWorker(@NonNull Context context) {
         this.context = context.getApplicationContext();
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/feed/EventDistributor.java
Patch:
@@ -3,8 +3,6 @@
 import android.os.Handler;
 import android.util.Log;
 
-import org.apache.commons.lang3.Validate;
-
 import java.util.AbstractQueue;
 import java.util.Observable;
 import java.util.Observer;
@@ -84,7 +82,6 @@ private void processEventQueue() {
 	@Override
 	public void addObserver(Observer observer) {
 		super.addObserver(observer);
-        Validate.isInstanceOf(EventListener.class, observer);
 	}
 
 	public void sendUnreadItemsUpdateBroadcast() {

File: core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java
Patch:
@@ -4,8 +4,7 @@
 import android.database.Cursor;
 import android.net.Uri;
 import android.support.annotation.Nullable;
-
-import org.apache.commons.lang3.StringUtils;
+import android.text.TextUtils;
 
 import java.util.ArrayList;
 import java.util.Date;
@@ -367,7 +366,7 @@ public boolean compareWithOther(Feed other) {
         if (other.isPaged() && !this.isPaged()) {
             return true;
         }
-        if (!StringUtils.equals(other.getNextPageLink(), this.getNextPageLink())) {
+        if (!TextUtils.equals(other.getNextPageLink(), this.getNextPageLink())) {
             return true;
         }
         return false;

File: core/src/main/java/de/danoeh/antennapod/core/preferences/GpodnetPreferences.java
Patch:
@@ -2,10 +2,9 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
+import android.text.TextUtils;
 import android.util.Log;
 
-import org.apache.commons.lang3.StringUtils;
-
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashSet;
@@ -293,7 +292,7 @@ private static List<GpodnetEpisodeAction> readEpisodeActionsFromString(String s)
         String[] lines = s.split("\n");
         List<GpodnetEpisodeAction> result = new ArrayList<GpodnetEpisodeAction>(lines.length);
         for(String line : lines) {
-            if(StringUtils.isNotBlank(line)) {
+            if(TextUtils.isEmpty(line)) {
                 GpodnetEpisodeAction action = GpodnetEpisodeAction.readFromString(line);
                 if(action != null) {
                     result.add(GpodnetEpisodeAction.readFromString(line));

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -8,9 +8,9 @@
 import android.net.Uri;
 import android.preference.PreferenceManager;
 import android.support.v7.app.AlertDialog;
+import android.text.TextUtils;
 import android.util.Log;
 
-import org.apache.commons.lang3.StringUtils;
 import org.shredzone.flattr4j.FlattrService;
 import org.shredzone.flattr4j.exception.FlattrException;
 import org.shredzone.flattr4j.model.Flattr;
@@ -78,8 +78,8 @@ private static AccessToken retrieveToken() {
      * Returns true if FLATTR_APP_KEY and FLATTR_APP_SECRET in BuildConfig are not null and not empty
      */
     public static boolean hasAPICredentials() {
-        return StringUtils.isNotEmpty(ClientConfig.flattrCallbacks.getFlattrAppKey())
-                && StringUtils.isNotEmpty(ClientConfig.flattrCallbacks.getFlattrAppSecret());
+        return !TextUtils.isEmpty(ClientConfig.flattrCallbacks.getFlattrAppKey())
+                && !TextUtils.isEmpty(ClientConfig.flattrCallbacks.getFlattrAppSecret());
     }
 
     public static boolean hasToken() {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Timeline.java
Patch:
@@ -2,10 +2,10 @@
 
 import android.content.Context;
 import android.content.res.TypedArray;
+import android.support.annotation.NonNull;
 import android.util.Log;
 import android.util.TypedValue;
 
-import org.apache.commons.lang3.Validate;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
@@ -158,8 +158,7 @@ public static int getTimecodeLinkTime(String link) {
     }
 
 
-    public void setShownotesProvider(ShownotesProvider shownotesProvider) {
-        Validate.notNull(shownotesProvider);
+    public void setShownotesProvider(@NonNull ShownotesProvider shownotesProvider) {
         this.shownotesProvider = shownotesProvider;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -257,7 +257,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 if (!FeedMenuHandler.onOptionsItemClicked(getActivity(), item, feed)) {
                     switch (item.getItemId()) {
                         case R.id.episode_actions:
-                            Fragment fragment = new EpisodesApplyActionFragment(feed.getItems());
+                            EpisodesApplyActionFragment fragment = new EpisodesApplyActionFragment();
+                            fragment.setEpisodes(feed.getItems());
                             ((MainActivity)getActivity()).loadChildFragment(fragment);
                             return true;
                         case R.id.remove_item:

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -257,7 +257,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 if (!FeedMenuHandler.onOptionsItemClicked(getActivity(), item, feed)) {
                     switch (item.getItemId()) {
                         case R.id.episode_actions:
-                            Fragment fragment = new EpisodesApplyActionFragment(feed.getItems());
+                            EpisodesApplyActionFragment fragment = new EpisodesApplyActionFragment();
+                            fragment.setEpisodes(feed.getItems());
                             ((MainActivity)getActivity()).loadChildFragment(fragment);
                             return true;
                         case R.id.remove_item:

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -320,6 +320,7 @@ public void onConfirmButtonPressed(
 
     @Override
     public boolean onContextItemSelected(MenuItem item) {
+        Log.d(TAG, "onContextItemSelected() called with: " + "item = [" + item + "]");
         if(!isVisible()) {
             return false;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -320,6 +320,7 @@ public void onConfirmButtonPressed(
 
     @Override
     public boolean onContextItemSelected(MenuItem item) {
+        Log.d(TAG, "onContextItemSelected() called with: " + "item = [" + item + "]");
         if(!isVisible()) {
             return false;
         }

File: core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java
Patch:
@@ -292,7 +292,8 @@ public String getHumanReadableIdentifier() {
     }
 
     public void updateFromOther(Feed other) {
-        super.updateFromOther(other);
+        // don't update feed's download_url, we do that manually if redirected
+        // see AntennapodHttpClient
         if (other.title != null) {
             title = other.title;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -321,8 +321,9 @@ protected View onCreateViewHelper(LayoutInflater inflater,
 
     private void onFragmentLoaded() {
         if (listAdapter == null) {
-            listAdapter = new AllEpisodesRecycleAdapter(activity.get(), activity.get(), itemAccess,
-                    new DefaultActionButtonCallback(activity.get()), showOnlyNewEpisodes());
+            MainActivity mainActivity = activity.get();
+            listAdapter = new AllEpisodesRecycleAdapter(mainActivity, itemAccess,
+                    new DefaultActionButtonCallback(mainActivity), showOnlyNewEpisodes());
             recyclerView.setAdapter(listAdapter);
         }
         listAdapter.notifyDataSetChanged();

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesRecycleAdapter.java
Patch:
@@ -12,6 +12,7 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.FrameLayout;
 import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
@@ -81,7 +82,7 @@ public Holder onCreateViewHolder(ViewGroup parent, int viewType) {
         View view = LayoutInflater.from(parent.getContext())
                 .inflate(R.layout.new_episodes_listitem, parent, false);
         Holder holder = new Holder(view);
-        holder.container = (LinearLayout) view.findViewById(R.id.container);
+        holder.container = (FrameLayout) view.findViewById(R.id.container);
         holder.placeholder = (TextView) view.findViewById(R.id.txtvPlaceholder);
         holder.title = (TextView) view.findViewById(R.id.txtvTitle);
         holder.pubDate = (TextView) view
@@ -268,7 +269,7 @@ public class Holder extends RecyclerView.ViewHolder
             implements View.OnClickListener,
                        View.OnCreateContextMenuListener,
                        ItemTouchHelperViewHolder {
-        LinearLayout container;
+        FrameLayout container;
         TextView placeholder;
         TextView title;
         TextView pubDate;

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueRecyclerAdapter.java
Patch:
@@ -15,9 +15,9 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.FrameLayout;
 import android.widget.ImageButton;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 
@@ -116,7 +116,7 @@ public class ViewHolder extends RecyclerView.ViewHolder
                        View.OnCreateContextMenuListener,
                        ItemTouchHelperViewHolder {
 
-        private final LinearLayout container;
+        private final FrameLayout container;
         private final ImageView dragHandle;
         private final TextView placeholder;
         private final ImageView cover;
@@ -131,7 +131,7 @@ public class ViewHolder extends RecyclerView.ViewHolder
 
         public ViewHolder(View v) {
             super(v);
-            container = (LinearLayout) v.findViewById(R.id.container);
+            container = (FrameLayout) v.findViewById(R.id.container);
             dragHandle = (ImageView) v.findViewById(R.id.drag_handle);
             placeholder = (TextView) v.findViewById(R.id.txtvPlaceholder);
             cover = (ImageView) v.findViewById(R.id.imgvCover);

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -772,7 +772,7 @@ public void onConfirmButtonPressed(
     private DBReader.NavDrawerData navDrawerData;
 
     private void loadData() {
-        subscription = Observable.defer(() -> Observable.just(DBReader.getNavDrawerData()))
+        subscription = Observable.fromCallable(() -> DBReader.getNavDrawerData())
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -176,7 +176,8 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                 }
             }
 
-            actionButtonUtils.configureActionButton(holder.butAction, item);
+            boolean isInQueue = itemAccess.isInQueue(item);
+            actionButtonUtils.configureActionButton(holder.butAction, item, isInQueue);
             holder.butAction.setFocusable(false);
             holder.butAction.setTag(item);
             holder.butAction.setOnClickListener(butActionListener);

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -156,7 +156,7 @@ private void loadItems() {
         if (!itemsLoaded && viewCreated) {
             setListShown(false);
         }
-        subscription = Observable.defer(() -> Observable.just(DBReader.getDownloadedItems()))
+        subscription = Observable.fromCallable(() -> DBReader.getDownloadedItems())
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -147,7 +147,7 @@ private void loadItems() {
         if(subscription != null) {
             subscription.unsubscribe();
         }
-        subscription = Observable.defer(() -> Observable.just(DBReader.getDownloadLog()))
+        subscription = Observable.fromCallable(() -> DBReader.getDownloadLog())
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -204,7 +204,7 @@ private void search() {
         if (viewCreated && !itemsLoaded) {
             setListShown(false);
         }
-        subscription = Observable.defer(() -> Observable.just(performSearch()))
+        subscription = Observable.fromCallable(() -> performSearch())
                 .subscribeOn(Schedulers.newThread())
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(result -> {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -766,6 +766,7 @@ public static Future<?> setFeedItem(final FeedItem item) {
             adapter.open();
             adapter.setSingleFeedItem(item);
             adapter.close();
+            EventBus.getDefault().post(FeedItemEvent.updated(item));
         });
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -15,7 +15,6 @@
 import java.util.concurrent.ConcurrentHashMap;
 
 import de.danoeh.antennapod.core.BuildConfig;
-import de.danoeh.antennapod.core.feed.EventDistributor;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedFile;
 import de.danoeh.antennapod.core.feed.FeedMedia;
@@ -85,7 +84,7 @@ public synchronized boolean download(Context context, DownloadRequest request) {
         Intent launchIntent = new Intent(context, DownloadService.class);
         launchIntent.putExtra(DownloadService.EXTRA_REQUEST, request);
         context.startService(launchIntent);
-        EventDistributor.getInstance().sendDownloadQueuedBroadcast();
+
         return true;
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -335,15 +335,15 @@ private void onFragmentLoaded() {
 
         @Override
         public int getCount() {
-            if (itemsLoaded) {
+            if (episodes != null) {
                 return episodes.size();
             }
             return 0;
         }
 
         @Override
         public FeedItem getItem(int position) {
-            if (itemsLoaded) {
+            if (episodes != null && position < episodes.size()) {
                 return episodes.get(position);
             }
             return null;

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -565,7 +565,7 @@ public static File getDataFolder(Context context, String type) {
     }
 
     public static void setDataFolder(String dir) {
-        Log.d(TAG, "Result from DirectoryChooser: " + dir);
+        Log.d(TAG, "setDataFolder(dir: " + dir + ")");
         prefs.edit()
              .putString(PREF_DATA_FOLDER, dir)
              .apply();

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -31,7 +31,7 @@
  * to notify the PlaybackService about updates from the running tasks.
  */
 public class PlaybackServiceTaskManager {
-    private static final String TAG = "PlaybackServiceTaskManager";
+    private static final String TAG = "PlaybackServiceTaskMgr";
 
     /**
      * Update interval of position saver in milliseconds.
@@ -81,6 +81,7 @@ public Thread newThread(Runnable r) {
     }
 
     public void onEvent(QueueEvent event) {
+        Log.d(TAG, "onEvent(QueueEvent " + event +")");
         cancelQueueLoader();
         loadQueue();
     }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.activity;
 
 import android.annotation.TargetApi;
-import android.app.AlertDialog;
 import android.app.ProgressDialog;
 import android.content.DialogInterface;
 import android.content.Intent;
@@ -20,6 +19,7 @@
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AlertDialog;
 import android.support.v7.widget.Toolbar;
 import android.util.Log;
 import android.view.ContextMenu;

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -1,6 +1,5 @@
 package de.danoeh.antennapod.activity;
 
-import android.app.AlertDialog;
 import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -9,6 +8,7 @@
 import android.os.Looper;
 import android.support.v4.app.NavUtils;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AlertDialog;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.MenuItem;

File: app/src/main/java/de/danoeh/antennapod/activity/OpmlImportFromIntentActivity.java
Patch:
@@ -1,8 +1,8 @@
 package de.danoeh.antennapod.activity;
 
-import android.app.AlertDialog;
 import android.net.Uri;
 import android.os.Bundle;
+import android.support.v7.app.AlertDialog;
 import android.util.Log;
 
 import de.danoeh.antennapod.core.preferences.UserPreferences;

File: app/src/main/java/de/danoeh/antennapod/adapter/ChapterListAdapter.java
Patch:
@@ -138,9 +138,9 @@ public void onClick(View v) {
 		if (current != null) {
 			if (current == sc) {
 				holder.title.setTextColor(convertView.getResources().getColor(
-						R.color.bright_blue));
+						R.color.holo_blue_light));
                 holder.start.setTextColor(convertView.getResources().getColor(
-                        R.color.bright_blue));
+                        R.color.holo_blue_light));
 			} else {
 				holder.title.setTextColor(defaultTextColor);
                 holder.start.setTextColor(defaultTextColor);

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.adapter;
 
-import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.support.v7.app.AlertDialog;
 import android.widget.Toast;
 
 import org.apache.commons.lang3.Validate;

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlExportWorker.java
Patch:
@@ -1,13 +1,13 @@
 package de.danoeh.antennapod.asynctask;
 
 import android.annotation.SuppressLint;
-import android.app.AlertDialog;
 import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.AsyncTask;
+import android.support.v7.app.AlertDialog;
 import android.util.Log;
 
 import java.io.File;

File: app/src/main/java/de/danoeh/antennapod/dialog/AutoFlattrPreferenceDialog.java
Patch:
@@ -2,9 +2,9 @@
 
 import android.annotation.SuppressLint;
 import android.app.Activity;
-import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.support.v7.app.AlertDialog;
 import android.view.View;
 import android.widget.CheckBox;
 import android.widget.SeekBar;

File: app/src/main/java/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -1,11 +1,11 @@
 package de.danoeh.antennapod.dialog;
 
-import android.app.AlertDialog;
 import android.content.ActivityNotFoundException;
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Build;
+import android.support.v7.app.AlertDialog;
 import android.util.Log;
 import android.view.View;
 

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -1,10 +1,10 @@
 package de.danoeh.antennapod.menuhandler;
 
-import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.net.Uri;
+import android.support.v7.app.AlertDialog;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuInflater;

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.preferences;
 
 import android.app.Activity;
-import android.app.AlertDialog;
 import android.app.TimePickerDialog;
 import android.content.Context;
 import android.content.DialogInterface;
@@ -17,6 +16,7 @@
 import android.preference.Preference;
 import android.preference.PreferenceManager;
 import android.preference.PreferenceScreen;
+import android.support.v7.app.AlertDialog;
 import android.text.Editable;
 import android.text.TextWatcher;
 import android.text.format.DateFormat;

File: core/src/main/java/de/danoeh/antennapod/core/dialog/ConfirmationDialog.java
Patch:
@@ -1,8 +1,8 @@
 package de.danoeh.antennapod.core.dialog;
 
-import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.support.v7.app.AlertDialog;
 import android.util.Log;
 
 import de.danoeh.antennapod.core.R;

File: core/src/main/java/de/danoeh/antennapod/core/dialog/DownloadRequestErrorDialogCreator.java
Patch:
@@ -1,8 +1,9 @@
 package de.danoeh.antennapod.core.dialog;
 
-import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.support.v7.app.AlertDialog;
+
 import de.danoeh.antennapod.core.R;
 
 /** Creates Alert Dialogs if a DownloadRequestException has happened. */

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -1,13 +1,13 @@
 package de.danoeh.antennapod.core.util.flattr;
 
-import android.app.AlertDialog;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.DialogInterface.OnClickListener;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.net.Uri;
 import android.preference.PreferenceManager;
+import android.support.v7.app.AlertDialog;
 import android.util.Log;
 
 import org.apache.commons.lang3.StringUtils;

File: app/src/main/java/de/danoeh/antennapod/adapter/ChapterListAdapter.java
Patch:
@@ -138,9 +138,9 @@ public void onClick(View v) {
 		if (current != null) {
 			if (current == sc) {
 				holder.title.setTextColor(convertView.getResources().getColor(
-						R.color.bright_blue));
+						R.color.holo_blue_light));
                 holder.start.setTextColor(convertView.getResources().getColor(
-                        R.color.bright_blue));
+                        R.color.holo_blue_light));
 			} else {
 				holder.title.setTextColor(defaultTextColor);
                 holder.start.setTextColor(defaultTextColor);

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -278,7 +278,7 @@ public void loadFragment(int index, Bundle args) {
         }
     }
 
-    public void loadFragment(final String tag, Bundle args) {
+    public void loadFragment(String tag, Bundle args) {
         Log.d(TAG, "loadFragment(tag: " + tag + ", args: " + args + ")");
         Fragment fragment = null;
         switch (tag) {
@@ -299,7 +299,9 @@ public void loadFragment(final String tag, Bundle args) {
                 break;
             default:
                 // default to the queue
+                tag = QueueFragment.TAG;
                 fragment = new QueueFragment();
+                args = null;
                 break;
         }
         currentTitle = navAdapter.getLabel(tag);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -274,7 +274,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                                 @Override
                                 protected void onPostExecute(Void result) {
                                     super.onPostExecute(result);
-                                    ((MainActivity) getActivity()).loadFragment(NewEpisodesFragment.TAG, null);
+                                    ((MainActivity) getActivity()).loadFragment(EpisodesFragment.TAG, null);
                                 }
                             };
                             ConfirmationDialog conDialog = new ConfirmationDialog(getActivity(),

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -578,6 +578,9 @@ private void loadItems() {
                         progLoading.setVisibility(View.GONE);
                         queue = items;
                         onFragmentLoaded();
+                        if(recyclerAdapter != null) {
+                            recyclerAdapter.notifyDataSetChanged();
+                        }
                     }
                 }, error -> {
                     Log.e(TAG, Log.getStackTraceString(error));

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -149,6 +149,7 @@ public void onEventMainThread(QueueEvent event) {
                 recyclerAdapter.notifyDataSetChanged();
                 break;
             case REMOVED:
+            case IRREVERSIBLE_REMOVED:
                 int position = FeedItemUtil.indexOfItemWithId(queue, event.item.getId());
                 queue.remove(position);
                 recyclerAdapter.notifyItemRemoved(position);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -571,7 +571,7 @@ private void endPlayback(boolean playNextEpisode, boolean wasSkipped) {
             try {
                 final List<FeedItem> queue = taskManager.getQueue();
                 isInQueue = QueueAccess.ItemListAccess(queue).contains(item.getId());
-                nextItem = DBTasks.getQueueSuccessorOfItem(this, item.getId(), queue);
+                nextItem = DBTasks.getQueueSuccessorOfItem(item.getId(), queue);
             } catch (InterruptedException e) {
                 e.printStackTrace();
                 // isInQueue remains false

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -394,14 +394,12 @@ public static void performAutoCleanup(final Context context) {
     /**
      * Returns the successor of a FeedItem in the queue.
      *
-     * @param context Used for accessing the DB.
      * @param itemId  ID of the FeedItem
      * @param queue   Used for determining the successor of the item. If this parameter is null, the method will load
      *                the queue from the database in the same thread.
      * @return Successor of the FeedItem or null if the FeedItem is not in the queue or has no successor.
      */
-    public static FeedItem getQueueSuccessorOfItem(Context context,
-                                                   final long itemId, List<FeedItem> queue) {
+    public static FeedItem getQueueSuccessorOfItem(final long itemId, List<FeedItem> queue) {
         FeedItem result = null;
         if (queue == null) {
             queue = DBReader.getQueue();

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -173,7 +173,6 @@ public void onEventMainThread(QueueEvent event) {
 
     public void onEventMainThread(FeedItemEvent event) {
         Log.d(TAG, "onEvent(" + event + ")");
-        IntList positions = new IntList();
         for(int i=0, size = event.items.size(); i < size; i++) {
             FeedItem item = event.items.get(i);
             int pos = FeedItemUtil.indexOfItemWithId(queue, item.getId());
@@ -367,7 +366,9 @@ public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHol
                     int from = viewHolder.getAdapterPosition();
                     int to = target.getAdapterPosition();
                     Log.d(TAG, "move(" + from + ", " + to + ")");
-                    DBWriter.moveQueueItem(from, to, true);
+                    Collections.swap(queue, from, to);
+                    recyclerAdapter.notifyItemMoved(from, to);
+                    DBWriter.moveQueueItem(from, to, false);
                     return true;
                 }
 

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/atom/NSAtom.java
Patch:
@@ -199,7 +199,9 @@ public void handleElementEnd(String localName, HandlerState state) {
                             DateUtils.parse(content));
                 }
             } else if (top.equals(IMAGE)) {
-                state.getFeed().setImage(new FeedImage(state.getFeed(), content, null));
+                if(state.getFeed().getImage() == null) {
+                    state.getFeed().setImage(new FeedImage(state.getFeed(), content, null));
+                }
             }
 
         }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -183,7 +183,7 @@ public static int getNotifyPriority() {
      * @return {@code true} if notifications are persistent, {@code false}  otherwise
      */
     public static boolean isPersistNotify() {
-        return prefs.getBoolean(PREF_PERSISTENT_NOTIFICATION, false);
+        return prefs.getBoolean(PREF_PERSISTENT_NOTIFICATION, true);
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -183,7 +183,7 @@ public static int getNotifyPriority() {
      * @return {@code true} if notifications are persistent, {@code false}  otherwise
      */
     public static boolean isPersistNotify() {
-        return prefs.getBoolean(PREF_PERSISTENT_NOTIFICATION, false);
+        return prefs.getBoolean(PREF_PERSISTENT_NOTIFICATION, true);
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -191,7 +191,7 @@ public void onClick(View v) {
             }
         }
         externalPlayerFragment = new ExternalPlayerFragment();
-        transaction.replace(R.id.playerFragment, externalPlayerFragment);
+        transaction.replace(R.id.playerFragment, externalPlayerFragment, ExternalPlayerFragment.TAG);
         transaction.commit();
 
         checkFirstLaunch();

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -100,10 +100,9 @@ public static boolean onPrepareMenu(Context context, MenuInterface mi, FeedItem
             mi.setItemVisibility(R.id.share_download_url_with_position_item, false);
         }
 
-        if (!(state == FeedItem.State.UNREAD || state == FeedItem.State.IN_PROGRESS)) {
+        if (selectedItem.isPlayed()) {
             mi.setItemVisibility(R.id.mark_read_item, false);
-        }
-        if (!(state == FeedItem.State.IN_PROGRESS || state == FeedItem.State.READ)) {
+        } else {
             mi.setItemVisibility(R.id.mark_unread_item, false);
         }
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -61,7 +61,7 @@ public class UserPreferences {
     public static final String PREF_PAUSE_ON_HEADSET_DISCONNECT = "prefPauseOnHeadsetDisconnect";
     public static final String PREF_UNPAUSE_ON_HEADSET_RECONNECT = "prefUnpauseOnHeadsetReconnect";
     public static final String PREF_FOLLOW_QUEUE = "prefFollowQueue";
-    public static final String PREF_SKIP_REMOVES = "prefSkipRemovesFromQueue";
+    public static final String PREF_SKIP_KEEPS_EPISODE = "prefSkipKeepsEpisode";
     public static final String PREF_AUTO_DELETE = "prefAutoDelete";
     public static final String PREF_SMART_MARK_AS_PLAYED_SECS = "prefSmartMarkAsPlayedSecs";
     public static final String PREF_PLAYBACK_SPEED_ARRAY = "prefPlaybackSpeedArray";
@@ -226,7 +226,7 @@ public static boolean isFollowQueue() {
         return prefs.getBoolean(PREF_FOLLOW_QUEUE, true);
     }
 
-    public static boolean shouldSkipRemoveFromQueue() { return prefs.getBoolean(PREF_SKIP_REMOVES, false); }
+    public static boolean shouldSkipKeepEpisode() { return prefs.getBoolean(PREF_SKIP_KEEPS_EPISODE, true); }
 
     public static boolean isAutoDelete() {
         return prefs.getBoolean(PREF_AUTO_DELETE, false);

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -47,6 +47,7 @@ public class UITestUtils {
     public static final int NUM_ITEMS_PER_FEED = 10;
 
     public static final int HOME_VIEW = (Build.VERSION.SDK_INT >= 11) ? android.R.id.home : R.id.home;
+    public static final String TEST_FILE_NAME = "3sec.mp3";
 
 
     private Context context;
@@ -119,7 +120,7 @@ private File newMediaFile(String name) throws IOException {
         }
         Assert.assertFalse(mediaFile.exists());
 
-        InputStream in = context.getAssets().open("testfile.mp3");
+        InputStream in = context.getAssets().open(TEST_FILE_NAME);
         Assert.assertNotNull(in);
 
         FileOutputStream out = new FileOutputStream(mediaFile);

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -191,7 +191,7 @@ public void onClick(View v) {
             }
         }
         externalPlayerFragment = new ExternalPlayerFragment();
-        transaction.replace(R.id.playerFragment, externalPlayerFragment);
+        transaction.replace(R.id.playerFragment, externalPlayerFragment, ExternalPlayerFragment.TAG);
         transaction.commit();
 
         checkFirstLaunch();

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -98,6 +98,7 @@ public class UserPreferences {
     private static int EPISODE_CACHE_SIZE_UNLIMITED = -1;
     public static int FEED_ORDER_COUNTER = 0;
     public static int FEED_ORDER_ALPHABETICAL = 1;
+    public static int FEED_ORDER_LAST_UPDATE = 2;
     public static int FEED_COUNTER_SHOW_NEW_UNPLAYED_SUM = 0;
     public static int FEED_COUNTER_SHOW_NEW = 1;
     public static int FEED_COUNTER_SHOW_UNPLAYED = 2;

File: core/src/main/java/de/danoeh/antennapod/core/opml/OpmlSymbols.java
Patch:
@@ -13,6 +13,7 @@ public final class OpmlSymbols {
 	public static final String VERSION = "version";
 	public static final String HEAD = "head";
 	public static final String TITLE = "title";
+	public static final String DATE_CREATED = "dateCreated";
 	
 	private OpmlSymbols() {
 		

File: app/src/androidTest/java/de/test/antennapod/storage/DBCleanupTests.java
Patch:
@@ -77,7 +77,7 @@ protected void setUp() throws Exception {
 
         SharedPreferences.Editor prefEdit = PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()).edit();
         prefEdit.putString(UserPreferences.PREF_EPISODE_CACHE_SIZE, Integer.toString(EPISODE_CACHE_SIZE));
-        prefEdit.putInt(UserPreferences.PREF_EPISODE_CLEANUP, cleanupAlgorithm);
+        prefEdit.putString(UserPreferences.PREF_EPISODE_CLEANUP, Integer.toString(cleanupAlgorithm));
         prefEdit.commit();
 
         UserPreferences.init(context);

File: app/src/androidTest/java/de/test/antennapod/storage/DBNullCleanupAlgorithmTest.java
Patch:
@@ -67,7 +67,7 @@ protected void setUp() throws Exception {
 
         SharedPreferences.Editor prefEdit = PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()).edit();
         prefEdit.putString(UserPreferences.PREF_EPISODE_CACHE_SIZE, Integer.toString(EPISODE_CACHE_SIZE));
-        prefEdit.putInt(UserPreferences.PREF_EPISODE_CLEANUP, UserPreferences.EPISODE_CLEANUP_NULL);
+        prefEdit.putString(UserPreferences.PREF_EPISODE_CLEANUP, Integer.toString(UserPreferences.EPISODE_CLEANUP_NULL));
         prefEdit.commit();
 
         UserPreferences.init(context);

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -496,7 +496,7 @@ public static void enableSonic(boolean enable) {
 
 
     public static EpisodeCleanupAlgorithm getEpisodeCleanupAlgorithm() {
-        int cleanupValue = prefs.getInt(PREF_EPISODE_CLEANUP, -1);
+        int cleanupValue = Integer.valueOf(prefs.getString(PREF_EPISODE_CLEANUP, "-1"));
         if (cleanupValue == EPISODE_CLEANUP_QUEUE) {
             return new APQueueCleanupAlgorithm();
         } else if (cleanupValue == EPISODE_CLEANUP_NULL) {

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -65,6 +65,7 @@ protected void setUp() throws Exception {
 
         SharedPreferences.Editor prefEdit = PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()).edit();
         prefEdit.putString(UserPreferences.PREF_EPISODE_CACHE_SIZE, Integer.toString(EPISODE_CACHE_SIZE));
+        prefEdit.putInt(UserPreferences.PREF_EPISODE_CLEANUP, UserPreferences.EPISODE_CLEANUP_DEFAULT);
         prefEdit.commit();
 
         UserPreferences.init(context);

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -442,9 +442,9 @@ private void buildEpisodeCleanupPreference() {
         String[] entries = new String[values.length];
         for (int x = 0; x < values.length; x++) {
             int v = Integer.parseInt(values[x]);
-            if (v == -1) {
+            if (v == UserPreferences.EPISODE_CLEANUP_QUEUE) {
                 entries[x] = res.getString(R.string.episode_cleanup_queue_removal);
-            } else if (v == -2){
+            } else if (v == UserPreferences.EPISODE_CLEANUP_NULL){
                 entries[x] = res.getString(R.string.episode_cleanup_never);
             } else if (v == 0) {
                 entries[x] = res.getString(R.string.episode_cleanup_after_listening);

File: core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java
Patch:
@@ -90,6 +90,6 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {
 
     @Override
     public int getDefaultCleanupParameter() {
-        return 0;
+        return getNumEpisodesToCleanup(0);
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java
Patch:
@@ -74,6 +74,6 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {
 
     @Override
     public int getDefaultCleanupParameter() {
-        return 0;
+        return getNumEpisodesToCleanup(0);
     }
 }

File: app/src/main/java/de/danoeh/antennapod/config/DBTasksCallbacksImpl.java
Patch:
@@ -1,6 +1,7 @@
 package de.danoeh.antennapod.config;
 
 import de.danoeh.antennapod.core.DBTasksCallbacks;
+import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.APCleanupAlgorithm;
 import de.danoeh.antennapod.core.storage.APDownloadAlgorithm;
 import de.danoeh.antennapod.core.storage.AutomaticDownloadAlgorithm;
@@ -15,6 +16,6 @@ public AutomaticDownloadAlgorithm getAutomaticDownloadAlgorithm() {
 
     @Override
     public EpisodeCleanupAlgorithm getEpisodeCacheCleanupAlgorithm() {
-        return new APCleanupAlgorithm();
+        return UserPreferences.getEpisodeCleanupAlgorithm();
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -492,7 +492,7 @@ public static void enableSonic(boolean enable) {
     }
 
 
-    public static EpisodeCleanupAlgorithm<Integer> getEpisodeCleanupAlgorithm() {
+    public static EpisodeCleanupAlgorithm getEpisodeCleanupAlgorithm() {
         int cleanupValue = prefs.getInt(PREF_EPISODE_CLEANUP, -1);
         if (cleanupValue == -1) {
             return new APQueueCleanupAlgorithm();

File: core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java
Patch:
@@ -18,7 +18,7 @@
 /**
  * Implementation of the EpisodeCleanupAlgorithm interface used by AntennaPod.
  */
-public class APCleanupAlgorithm implements EpisodeCleanupAlgorithm<Integer> {
+public class APCleanupAlgorithm extends EpisodeCleanupAlgorithm {
 
     private static final String TAG = "APCleanupAlgorithm";
     /** the number of days after playback to wait before an item is eligible to be cleaned up */
@@ -29,7 +29,7 @@ public APCleanupAlgorithm(int numberOfDaysAfterPlayback) {
     }
 
     @Override
-    public int performCleanup(Context context, Integer numberOfEpisodesToDelete) {
+    public int performCleanup(Context context, int numberOfEpisodesToDelete) {
         List<FeedItem> candidates = new ArrayList<>();
         List<FeedItem> downloadedItems = DBReader.getDownloadedItems();
         LongList queue = DBReader.getQueueIDList();
@@ -89,7 +89,7 @@ public int performCleanup(Context context, Integer numberOfEpisodesToDelete) {
     }
 
     @Override
-    public Integer getDefaultCleanupParameter() {
+    public int getDefaultCleanupParameter() {
         return 0;
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/APDownloadAlgorithm.java
Patch:
@@ -70,8 +70,8 @@ public void run() {
 
                     int autoDownloadableEpisodes = candidates.size();
                     int downloadedEpisodes = DBReader.getNumberOfDownloadedEpisodes();
-                    int deletedEpisodes = UserPreferences.getEpisodeCleanupAlgorithm().performCleanup(context,
-                            getPerformAutoCleanupArgs(autoDownloadableEpisodes));
+                    int deletedEpisodes = UserPreferences.getEpisodeCleanupAlgorithm()
+                            .makeRoomForEpisodes(context, autoDownloadableEpisodes);
                     boolean cacheIsUnlimited = UserPreferences.getEpisodeCacheSize() == UserPreferences
                             .getEpisodeCacheSizeUnlimited();
                     int episodeCacheSize = UserPreferences.getEpisodeCacheSize();

File: core/src/main/java/de/danoeh/antennapod/core/storage/APNullCleanupAlgorithm.java
Patch:
@@ -6,19 +6,19 @@
 /**
  * A cleanup algorithm that never removes anything
  */
-public class APNullCleanupAlgorithm implements EpisodeCleanupAlgorithm<Integer> {
+public class APNullCleanupAlgorithm extends EpisodeCleanupAlgorithm {
 
     private static final String TAG = "APNullCleanupAlgorithm";
 
     @Override
-    public int performCleanup(Context context, Integer parameter) {
+    public int performCleanup(Context context, int parameter) {
         // never clean anything up
         Log.i(TAG, "performCleanup: Not removing anything");
         return 0;
     }
 
     @Override
-    public Integer getDefaultCleanupParameter() {
+    public int getDefaultCleanupParameter() {
         return 0;
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java
Patch:
@@ -18,12 +18,12 @@
  * A cleanup algorithm that removes any item that isn't in the queue and isn't a favorite
  * but only if space is needed.
  */
-public class APQueueCleanupAlgorithm implements EpisodeCleanupAlgorithm<Integer> {
+public class APQueueCleanupAlgorithm extends EpisodeCleanupAlgorithm {
 
     private static final String TAG = "APQueueCleanupAlgorithm";
 
     @Override
-    public int performCleanup(Context context, Integer numberOfEpisodesToDelete) {
+    public int performCleanup(Context context, int numberOfEpisodesToDelete) {
         List<FeedItem> candidates = new ArrayList<>();
         List<FeedItem> downloadedItems = DBReader.getDownloadedItems();
         LongList queue = DBReader.getQueueIDList();
@@ -73,7 +73,7 @@ public int performCleanup(Context context, Integer numberOfEpisodesToDelete) {
     }
 
     @Override
-    public Integer getDefaultCleanupParameter() {
+    public int getDefaultCleanupParameter() {
         return 0;
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -584,6 +584,9 @@ public int getPosition() {
                 || playerStatus == PlayerStatus.PREPARED
                 || playerStatus == PlayerStatus.SEEKING) {
             retVal = mediaPlayer.getCurrentPosition();
+            if(retVal <= 0 && media != null && media.getPosition() > 0) {
+                retVal = media.getPosition();
+            }
         } else if (media != null && media.getPosition() > 0) {
             retVal = media.getPosition();
         }

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -39,7 +39,7 @@
 /**
  * Implements methods for accessing the database
  */
-public class PodDBAdapter implements AutoCloseable {
+public class PodDBAdapter {
     
     private static final String TAG = "PodDBAdapter";
     public static final String DATABASE_NAME = "Antennapod.db";

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -120,6 +120,7 @@ public void init() {
             throw new IllegalStateException(
                     "Can't call init() after release() has been called");
         }
+        checkMediaInfoLoaded();
     }
 
     /**

File: app/src/main/java/de/danoeh/antennapod/adapter/AdapterUtils.java
Patch:
@@ -61,6 +61,7 @@ public static void updateEpisodePlaybackProgress(FeedItem item, TextView txtvPos
                                         txtvPos.setText("");
                                     }
                                 }, error -> {
+                                    txtvPos.setText("");
                                     Log.e(TAG, Log.getStackTraceString(error));
                                 });
             } else {

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -214,7 +214,7 @@ public static boolean isUnpauseOnHeadsetReconnect() {
 
 
     public static boolean isFollowQueue() {
-        return prefs.getBoolean(PREF_FOLLOW_QUEUE, false);
+        return prefs.getBoolean(PREF_FOLLOW_QUEUE, true);
     }
 
     public static boolean shouldSkipRemoveFromQueue() { return prefs.getBoolean(PREF_SKIP_REMOVES, false); }

File: app/src/main/java/de/danoeh/antennapod/adapter/AdapterUtils.java
Patch:
@@ -61,6 +61,7 @@ public static void updateEpisodePlaybackProgress(FeedItem item, TextView txtvPos
                                         txtvPos.setText("");
                                     }
                                 }, error -> {
+                                    txtvPos.setText("");
                                     Log.e(TAG, Log.getStackTraceString(error));
                                 });
             } else {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -351,7 +351,7 @@ private String getMediafilename(FeedMedia media) {
         if (media.getItem() != null && media.getItem().getTitle() != null) {
             String title = media.getItem().getTitle();
             // Delete reserved characters
-            titleBaseFilename = title.replaceAll("[\\\\/%\\?\\*:|<>\"\\p{Cntrl}]", "");
+            titleBaseFilename = title.replaceAll("[^a-zA-Z0-9 ._()-]", "");
             titleBaseFilename = titleBaseFilename.trim();
         }
 

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -178,7 +178,7 @@ public static boolean isPersistNotify() {
      * @return {@code true} if notifications are persistent, {@code false}  otherwise
      */
     public static boolean setLockscreenBackground() {
-        return prefs.getBoolean(PREF_LOCKSCREEN_BACKGROUND, false);
+        return prefs.getBoolean(PREF_LOCKSCREEN_BACKGROUND, true);
     }
 
     /**

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -273,6 +273,9 @@ private void playMediaObject(final Playable playable, final boolean forceReset,
     }
 
     private void updateMediaSessionMetadata() {
+        if(this.media == null) {
+            return;
+        }
         executor.execute(() -> {
             Playable p = this.media;
             MediaMetadataCompat.Builder builder = new MediaMetadataCompat.Builder();

File: app/src/androidTest/java/de/test/antennapod/AntennaPodTestRunner.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.test.InstrumentationTestRunner;
 import android.test.suitebuilder.TestSuiteBuilder;
+
 import junit.framework.TestSuite;
 
 public class AntennaPodTestRunner extends InstrumentationTestRunner {
@@ -13,4 +14,5 @@ public TestSuite getAllTests() {
                 .excludePackages("de.test.antennapod.gpodnet")
                 .build();
     }
+
 }

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -9,6 +9,7 @@
 import de.danoeh.antennapod.core.feed.EventDistributor;
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
+import de.danoeh.antennapod.core.storage.PodDBAdapter;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.spa.SPAUtil;
 
@@ -40,6 +41,7 @@ public void onCreate() {
 		singleton = this;
 		LOGICAL_DENSITY = getResources().getDisplayMetrics().density;
 
+		PodDBAdapter.init(this);
 		UpdateManager.init(this);
 		UserPreferences.init(this);
 		PlaybackPreferences.init(this);

File: app/src/main/java/de/danoeh/antennapod/UpdateManager.java
Patch:
@@ -65,9 +65,9 @@ private static void onUpgrade(final int oldVersionCode, final int newVersionCode
             // from now on, Glide will handle caching images
             new Thread() {
                 public void run() {
-                    List<Feed> feeds = DBReader.getFeedList(context);
+                    List<Feed> feeds = DBReader.getFeedList();
                     for (Feed podcast : feeds) {
-                        List<FeedItem> episodes = DBReader.getFeedItemList(context, podcast);
+                        List<FeedItem> episodes = DBReader.getFeedItemList(podcast);
                         for (FeedItem episode : episodes) {
                             FeedImage image = episode.getImage();
                             if (image != null && image.isDownloaded() && image.getFile_url() != null) {
@@ -76,7 +76,7 @@ public void run() {
                                     imageFile.delete();
                                 }
                                 image.setFile_url(null); // calls setDownloaded(false)
-                                DBWriter.setFeedImage(context, image);
+                                DBWriter.setFeedImage(image);
                             }
                         }
                     }

File: app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -109,7 +109,7 @@ public class OnlineFeedViewActivity extends ActionBarActivity {
         @Override
         public void update(EventDistributor eventDistributor, Integer arg) {
             if ((arg & EventDistributor.FEED_LIST_UPDATE) != 0) {
-                updater = Observable.defer(() -> Observable.just(DBReader.getFeedList(OnlineFeedViewActivity.this)))
+                updater = Observable.defer(() -> Observable.just(DBReader.getFeedList()))
                         .subscribeOn(Schedulers.newThread())
                         .observeOn(AndroidSchedulers.mainThread())
                         .subscribe(feeds -> {
@@ -263,7 +263,7 @@ private void startFeedDownload(String url, String username, String password) {
         download = Observable.create(new Observable.OnSubscribe<DownloadStatus>() {
                     @Override
                     public void call(Subscriber<? super DownloadStatus> subscriber) {
-                        feeds = DBReader.getFeedList(OnlineFeedViewActivity.this);
+                        feeds = DBReader.getFeedList();
                         downloader = new HttpDownloader(request);
                         downloader.call();
                         Log.d(TAG, "Download was completed");

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonUtils.java
Patch:
@@ -64,7 +64,7 @@ public void configureActionButton(ImageButton butSecondary, FeedItem item) {
                     butSecondary.setContentDescription(context.getString(labels[1]));
                 } else {
                     // item is not downloaded and not being downloaded
-                    LongList queueIds = DBReader.getQueueIDList(context);
+                    LongList queueIds = DBReader.getQueueIDList();
                     if(DefaultActionButtonCallback.userAllowedMobileDownloads() ||
                             !DefaultActionButtonCallback.userChoseAddToQueue() || queueIds.contains(item.getId())) {
                         butSecondary.setVisibility(View.VISIBLE);

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -123,7 +123,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 		public void onClick(View v) {
 			ButtonHolder holder = (ButtonHolder) v.getTag();
 			if(holder.typeId == Feed.FEEDFILETYPE_FEED) {
-				Feed feed = DBReader.getFeed(context, holder.id);
+				Feed feed = DBReader.getFeed(holder.id);
 				if (feed != null) {
 					feed.setLastUpdate(new Date(0)); // force refresh
 					try {
@@ -135,7 +135,7 @@ public void onClick(View v) {
 					Log.wtf(TAG, "Could not find feed for feed id: " + holder.id);
 				}
 			} else if(holder.typeId == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {
-				FeedMedia media = DBReader.getFeedMedia(context, holder.id);
+				FeedMedia media = DBReader.getFeedMedia(holder.id);
 				try {
 					DBTasks.downloadFeedItems(context, media.getItem());
 					Toast.makeText(context, R.string.status_downloading_label, Toast.LENGTH_SHORT).show();

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlExportWorker.java
Patch:
@@ -59,7 +59,7 @@ protected Void doInBackground(Void... params) {
         OutputStreamWriter writer = null;
         try {
             writer = new OutputStreamWriter(new FileOutputStream(output), LangUtils.UTF_8);
-            opmlWriter.writeDocument(DBReader.getFeedList(context), writer);
+            opmlWriter.writeDocument(DBReader.getFeedList(), writer);
         } catch (IOException e) {
             e.printStackTrace();
             exception = e;

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -372,12 +372,12 @@ private void queueChecked() {
     }
 
     private void markedCheckedPlayed() {
-        DBWriter.markItemPlayed(getActivity(), FeedItem.PLAYED, checkedIds.toArray());
+        DBWriter.markItemPlayed(FeedItem.PLAYED, checkedIds.toArray());
         close();
     }
 
     private void markedCheckedUnplayed() {
-        DBWriter.markItemPlayed(getActivity(), FeedItem.UNPLAYED, checkedIds.toArray());
+        DBWriter.markItemPlayed(FeedItem.UNPLAYED, checkedIds.toArray());
         close();
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -179,7 +179,7 @@ protected void onPostExecute(List<FeedItem> results) {
         protected List<FeedItem> doInBackground(Void... params) {
             Context context = getActivity();
             if (context != null) {
-                return DBReader.getDownloadedItems(context);
+                return DBReader.getDownloadedItems();
             }
             return Collections.emptyList();
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java
Patch:
@@ -142,7 +142,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         if (!super.onOptionsItemSelected(item)) {
             switch (item.getItemId()) {
                 case R.id.clear_history_item:
-                    DBWriter.clearDownloadLog(getActivity());
+                    DBWriter.clearDownloadLog();
                     return true;
                 default:
                     return false;
@@ -170,7 +170,7 @@ protected void onPostExecute(List<DownloadStatus> downloadStatuses) {
         protected List<DownloadStatus> doInBackground(Void... params) {
             Context context = getActivity();
             if (context != null) {
-                return DBReader.getDownloadLog(context);
+                return DBReader.getDownloadLog();
             }
             return null;
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -210,7 +210,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
 
                 @Override
                 protected FeedItem doInBackground(Void... voids) {
-                    return DBReader.getFeedItem(getActivity(), getArguments().getLong(ARG_FEEDITEM_ID));
+                    return DBReader.getFeedItem(getArguments().getLong(ARG_FEEDITEM_ID));
                 }
 
                 @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -36,7 +36,6 @@
 import android.widget.Toast;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
 
 import java.util.List;
 
@@ -497,12 +496,12 @@ public Loader<Pair<FeedItem,LongList>> onCreateLoader(int id, Bundle args) {
         return new DBTaskLoader<Pair<FeedItem,LongList>>(getActivity()) {
             @Override
             public Pair<FeedItem,LongList> loadInBackground() {
-                FeedItem data1 = DBReader.getFeedItem(getContext(), itemID);
+                FeedItem data1 = DBReader.getFeedItem(itemID);
                 if (data1 != null) {
                     Timeline t = new Timeline(getActivity(), data1);
                     webviewData = t.processShownotes(false);
                 }
-                LongList data2 = DBReader.getQueueIDList(getContext());
+                LongList data2 = DBReader.getQueueIDList();
                 return Pair.create(data1, data2);
             }
         };

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -630,12 +630,12 @@ protected Object[] doInBackground(Long... params) {
             long feedID = params[0];
             Context context = getActivity();
             if (context != null) {
-                Feed feed = DBReader.getFeed(context, feedID);
+                Feed feed = DBReader.getFeed(feedID);
                 if(feed != null && feed.getItemFilter() != null) {
                     FeedItemFilter filter = feed.getItemFilter();
                     feed.setItems(filter.filter(context, feed.getItems()));
                 }
-                LongList queuedItemsIds = DBReader.getQueueIDList(context);
+                LongList queuedItemsIds = DBReader.getQueueIDList();
                 return new Object[] { feed, queuedItemsIds };
             } else {
                 return null;

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -73,7 +73,7 @@ public void remove(int which) {
                 FeedItem item = (FeedItem) listView.getAdapter().getItem(which);
                 // we're marking it as unplayed since the user didn't actually play it
                 // but they don't want it considered 'NEW' anymore
-                DBWriter.markItemPlayed(getActivity(), FeedItem.UNPLAYED, item.getId());
+                DBWriter.markItemPlayed(FeedItem.UNPLAYED, item.getId());
                 undoBarController.showUndoBar(false,
                         getString(R.string.marked_as_read_label), new FeedItemUndoToken(item,
                                 which)
@@ -89,14 +89,14 @@ public void remove(int which) {
             public void onUndo(FeedItemUndoToken token) {
                 if (token != null) {
                     long itemId = token.getFeedItemId();
-                    DBWriter.markItemPlayed(context, FeedItem.NEW, itemId);
+                    DBWriter.markItemPlayed(FeedItem.NEW, itemId);
                 }
             }
             @Override
             public void onHide(FeedItemUndoToken token) {
                 if (token != null && context != null) {
                     long itemId = token.getFeedItemId();
-                    FeedItem item = DBReader.getFeedItem(context, itemId);
+                    FeedItem item = DBReader.getFeedItem(itemId);
                     FeedMedia media = item.getMedia();
                     if(media != null && media.hasAlmostEnded() && item.getFeed().getPreferences().getCurrentAutoDelete()) {
                         DBWriter.deleteFeedMediaOfItem(context, media.getId());

File: app/src/main/java/de/danoeh/antennapod/fragment/RunningDownloadsFragment.java
Patch:
@@ -81,8 +81,8 @@ public void onSecondaryActionClick(Downloader downloader) {
 
             if(downloadRequest.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA &&
                     UserPreferences.isEnableAutodownload()) {
-                FeedMedia media = DBReader.getFeedMedia(getActivity(), downloadRequest.getFeedfileId());
-                DBWriter.setFeedItemAutoDownload(getActivity(), media.getItem(), false);
+                FeedMedia media = DBReader.getFeedMedia(downloadRequest.getFeedfileId());
+                DBWriter.setFeedItemAutoDownload(media.getItem(), false);
                 Toast.makeText(getActivity(), R.string.download_canceled_autodownload_enabled_msg, Toast.LENGTH_SHORT).show();
             } else {
                 Toast.makeText(getActivity(), R.string.download_canceled_msg, Toast.LENGTH_SHORT).show();

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -78,7 +78,7 @@ public static boolean onOptionsItemClicked(final Context context, final MenuItem
                     public void onConfirmButtonPressed(
                             DialogInterface dialog) {
                         dialog.dismiss();
-                        DBWriter.markFeedRead(context, selectedFeed.getId());
+                        DBWriter.markFeedRead(selectedFeed.getId());
                     }
                 };
                 conDialog.createNewDialog().show();
@@ -138,7 +138,7 @@ public void onClick(DialogInterface dialog, int which, boolean isChecked) {
             @Override
             public void onClick(DialogInterface dialog, int which) {
                 feed.setHiddenItemProperties(hidden.toArray(new String[hidden.size()]));
-                DBWriter.setFeedItemsFilter(context, feed.getId(), hidden);
+                DBWriter.setFeedItemsFilter(feed.getId(), hidden);
             }
         });
         builder.setNegativeButton(R.string.cancel_label, null);

File: app/src/main/java/de/danoeh/antennapod/service/PlayerWidgetService.java
Patch:
@@ -58,9 +58,9 @@ public void onDestroy() {
 				if (media.hasAlmostEnded()) {
 					Log.d(TAG, "smart mark as read");
 					FeedItem item = media.getItem();
-					DBWriter.markItemPlayed(this, item, FeedItem.PLAYED, false);
+					DBWriter.markItemPlayed(item, FeedItem.PLAYED, false);
 					DBWriter.removeQueueItem(this, item, false);
-					DBWriter.addItemToPlaybackHistory(this, media);
+					DBWriter.addItemToPlaybackHistory(media);
 					if (item.getFeed().getPreferences().getCurrentAutoDelete()) {
 						Log.d(TAG, "Delete " + media.toString());
 						DBWriter.deleteFeedMediaOfItem(this, media.getId());

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -94,7 +94,7 @@ protected ExitCode doInBackground(Void... params) {
             return ExitCode.NO_NETWORK;
         }
 
-        final List<FlattrThing> flattrQueue = DBReader.getFlattrQueue(context);
+        final List<FlattrThing> flattrQueue = DBReader.getFlattrQueue();
         if (extraFlattrThing != null) {
             flattrQueue.add(extraFlattrThing);
         } else if (flattrQueue.size() == 1) {

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrStatusFetcher.java
Patch:
@@ -32,7 +32,7 @@ public void run() {
 
         try {
             List<Flattr> flattredThings = FlattrUtils.retrieveFlattredThings();
-            DBWriter.setFlattredStatus(context, flattredThings).get();
+            DBWriter.setFlattredStatus(flattredThings).get();
         } catch (FlattrException e) {
             e.printStackTrace();
             Log.d(TAG, "flattrQueue exception retrieving list with flattred items " + e.getMessage());

File: core/src/main/java/de/danoeh/antennapod/core/backup/OpmlBackupAgent.java
Patch:
@@ -89,7 +89,7 @@ public void performBackup(ParcelFileDescriptor oldState, BackupDataOutput data,
 
             try {
                 // Write OPML
-                new OpmlWriter().writeDocument(DBReader.getFeedList(mContext), writer);
+                new OpmlWriter().writeDocument(DBReader.getFeedList(), writer);
 
                 // Compare checksum of new and old file to see if we need to perform a backup at all
                 if (digester != null) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java
Patch:
@@ -64,7 +64,7 @@ public List<FeedItem> filter(Context context, List<FeedItem> items) {
             if(hideUnplayed && false == item.isPlayed()) continue;
             if(hidePaused && item.getState() == FeedItem.State.IN_PROGRESS) continue;
             if(hidePlayed && item.isPlayed()) continue;
-            boolean isQueued = DBReader.getQueueIDList(context).contains(item.getId());
+            boolean isQueued = DBReader.getQueueIDList().contains(item.getId());
             if(hideQueued && isQueued) continue;
             if(hideNotQueued && false == isQueued) continue;
             boolean isDownloaded = item.getMedia() != null && item.getMedia().isDownloaded();

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -108,7 +108,7 @@ public Response intercept(Chain chain) throws IOException {
             com.squareup.okhttp.Request request = chain.request();
             String url = request.urlString();
             Context context = ClientConfig.applicationCallbacks.getApplicationInstance();
-            String authentication = DBReader.getImageAuthentication(context, url);
+            String authentication = DBReader.getImageAuthentication(url);
 
             if(TextUtils.isEmpty(authentication)) {
                 Log.d(TAG, "no credentials for '" + url + "'");

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -564,7 +564,7 @@ private void endPlayback(boolean playNextEpisode) {
         if (playable instanceof FeedMedia) {
             FeedMedia media = (FeedMedia) playable;
             FeedItem item = media.getItem();
-            DBWriter.markItemPlayed(PlaybackService.this, item, FeedItem.PLAYED, true);
+            DBWriter.markItemPlayed(item, FeedItem.PLAYED, true);
 
             try {
                 final List<FeedItem> queue = taskManager.getQueue();
@@ -577,7 +577,7 @@ private void endPlayback(boolean playNextEpisode) {
             if (isInQueue) {
                 DBWriter.removeQueueItem(PlaybackService.this, item, true);
             }
-            DBWriter.addItemToPlaybackHistory(PlaybackService.this, media);
+            DBWriter.addItemToPlaybackHistory(media);
 
             // auto-flattr if enabled
             if (isAutoFlattrable(media) && UserPreferences.getAutoFlattrPlayedDurationThreshold() == 1.0f) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -201,9 +201,9 @@ private void playMediaObject(final Playable playable, final boolean forceReset,
                     if(oldMedia.hasAlmostEnded()) {
                         Log.d(TAG, "smart mark as read");
                         FeedItem item = oldMedia.getItem();
-                        DBWriter.markItemPlayed(context, item, FeedItem.PLAYED, false);
+                        DBWriter.markItemPlayed(item, FeedItem.PLAYED, false);
                         DBWriter.removeQueueItem(context, item, false);
-                        DBWriter.addItemToPlaybackHistory(context, oldMedia);
+                        DBWriter.addItemToPlaybackHistory(oldMedia);
                         if (item.getFeed().getPreferences().getCurrentAutoDelete()) {
                             Log.d(TAG, "Delete " + oldMedia.toString());
                             DBWriter.deleteFeedMediaOfItem(context, oldMedia.getId());

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -100,7 +100,7 @@ private synchronized void loadQueue() {
             queueFuture = schedExecutor.submit(new Callable<List<FeedItem>>() {
                 @Override
                 public List<FeedItem> call() throws Exception {
-                    return DBReader.getQueue(context);
+                    return DBReader.getQueue();
                 }
             });
         }

File: core/src/main/java/de/danoeh/antennapod/core/storage/EpisodeCleanupAlgorithm.java
Patch:
@@ -24,13 +24,13 @@ public interface EpisodeCleanupAlgorithm<T> {
      * space to free to satisfy the episode cache conditions. If the conditions are already satisfied, this
      * method should not have any effects.
      */
-    public T getDefaultCleanupParameter(Context context);
+    public T getDefaultCleanupParameter();
 
     /**
      * Returns a parameter for performCleanup.
      *
      * @param items A list of FeedItems that are about to be downloaded. The implementation of this interface
      *              should decide how much space to free to satisfy the episode cache conditions.
      */
-    public T getPerformCleanupParameter(Context context, List<FeedItem> items);
+    public T getPerformCleanupParameter(List<FeedItem> items);
 }

File: core/src/main/java/de/danoeh/antennapod/core/util/NetworkUtils.java
Patch:
@@ -148,7 +148,7 @@ public void call(Subscriber<? super Long> subscriber) {
                 }
                 subscriber.onNext(size);
                 subscriber.onCompleted();
-                DBWriter.setFeedMedia(context, media);
+                DBWriter.setFeedMedia(media);
             }
         })
                 .subscribeOn(Schedulers.newThread())

File: core/src/main/java/de/danoeh/antennapod/core/util/QueueSorter.java
Patch:
@@ -83,7 +83,7 @@ public int compare(FeedItem f1, FeedItem f2) {
         }
 
         if (comparator != null) {
-            DBWriter.sortQueue(context, comparator, broadcastUpdate);
+            DBWriter.sortQueue(comparator, broadcastUpdate);
         }
     }
 }

File: core/src/main/java/de/danoeh/antennapod/core/util/flattr/FlattrUtils.java
Patch:
@@ -167,7 +167,7 @@ public static void revokeAccessToken(Context context) {
         deleteToken();
         FlattrServiceCreator.deleteFlattrService();
         showRevokeDialog(context);
-        DBWriter.clearAllFlattrStatus(context);
+        DBWriter.clearAllFlattrStatus();
     }
 
     // ------------------------------------------------ DIALOGS

File: core/src/main/java/de/danoeh/antennapod/core/util/gui/UndoBarController.java
Patch:
@@ -89,7 +89,9 @@ public boolean isShowing() {
 
     public void close() {
         hideUndoBar(true);
-        mUndoListener.onHide(mUndoToken);
+        if(mUndoListener != null) {
+            mUndoListener.onHide(mUndoToken);
+        }
     }
 
     public void hideUndoBar(boolean immediate) {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/Playable.java
Patch:
@@ -164,7 +164,7 @@ public static Playable createInstanceFromPreferences(Context context, int type,
                 case FeedMedia.PLAYABLE_TYPE_FEEDMEDIA:
                     long mediaId = pref.getLong(FeedMedia.PREF_MEDIA_ID, -1);
                     if (mediaId != -1) {
-                        return DBReader.getFeedMedia(context, mediaId);
+                        return DBReader.getFeedMedia(mediaId);
                     }
                     break;
                 case ExternalMedia.PLAYABLE_TYPE_EXTERNAL_MEDIA:

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -86,7 +86,7 @@ private void skipEpisode() {
 
     private void startLocalPlayback() {
         openNavDrawer();
-
+        solo.clickOnText(solo.getString(R.string.episodes_label));
         solo.clickOnText(solo.getString(R.string.all_episodes_label));
         final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(context, 10);
         assertTrue(solo.waitForView(solo.getView(R.id.butSecondaryAction)));

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -105,7 +105,6 @@ protected AllEpisodesFragment(boolean showOnlyNewEpisodes, String prefName) {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        //setRetainInstance(true);
         setHasOptionsMenu(true);
     }
 

File: app/src/main/java/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -33,6 +33,7 @@ public void onCreate(Bundle savedInstanceState) {
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         super.onCreateView(inflater, container, savedInstanceState);
+        setHasOptionsMenu(true);
         ((MainActivity) getActivity()).getSupportActionBar().setTitle(R.string.episodes_label);
 
         View rootView = inflater.inflate(R.layout.episodes_fragment, container, false);

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -93,7 +93,7 @@ else if (item.hasMedia() && item.getMedia().isCurrentlyPaused()) {
             }
         } else {
             if (!item.isPlayed()) {
-                DBWriter.markItemRead(context, item, true, true);
+                DBWriter.markItemPlayed(context, item, FeedItem.PLAYED, true);
             }
         }
     }

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -372,12 +372,12 @@ private void queueChecked() {
     }
 
     private void markedCheckedPlayed() {
-        DBWriter.markItemRead(getActivity(), true, checkedIds.toArray());
+        DBWriter.markItemPlayed(getActivity(), FeedItem.PLAYED, checkedIds.toArray());
         close();
     }
 
     private void markedCheckedUnplayed() {
-        DBWriter.markItemRead(getActivity(), false, checkedIds.toArray());
+        DBWriter.markItemPlayed(getActivity(), FeedItem.UNPLAYED, checkedIds.toArray());
         close();
     }
 

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -155,7 +155,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
                 break;
             case R.id.mark_read_item:
                 selectedItem.setPlayed(true);
-                DBWriter.markItemRead(context, selectedItem, true, false);
+                DBWriter.markItemPlayed(context, selectedItem, FeedItem.PLAYED, false);
                 if(GpodnetPreferences.loggedIn()) {
                     FeedMedia media = selectedItem.getMedia();
                     // not all items have media, Gpodder only cares about those that do
@@ -173,7 +173,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
                 break;
             case R.id.mark_unread_item:
                 selectedItem.setPlayed(false);
-                DBWriter.markItemRead(context, selectedItem, false, false);
+                DBWriter.markItemPlayed(context, selectedItem, FeedItem.UNPLAYED, false);
                 if(GpodnetPreferences.loggedIn()) {
                     GpodnetEpisodeAction actionNew = new GpodnetEpisodeAction.Builder(selectedItem, Action.NEW)
                             .currentDeviceId()
@@ -195,7 +195,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
                 break;
             case R.id.reset_position:
                 selectedItem.getMedia().setPosition(0);
-                DBWriter.markItemRead(context, selectedItem, false, true);
+                DBWriter.markItemPlayed(context, selectedItem, FeedItem.UNPLAYED, true);
                 break;
             case R.id.activate_auto_download:
                 selectedItem.setAutoDownload(true);

File: app/src/main/java/de/danoeh/antennapod/service/PlayerWidgetService.java
Patch:
@@ -16,7 +16,6 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
-import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.service.playback.PlayerStatus;
@@ -59,7 +58,7 @@ public void onDestroy() {
 				if (media.hasAlmostEnded()) {
 					Log.d(TAG, "smart mark as read");
 					FeedItem item = media.getItem();
-					DBWriter.markItemRead(this, item, true, false);
+					DBWriter.markItemPlayed(this, item, FeedItem.PLAYED, false);
 					DBWriter.removeQueueItem(this, item, false);
 					DBWriter.addItemToPlaybackHistory(this, media);
 					if (item.getFeed().getPreferences().getCurrentAutoDelete()) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -391,7 +391,7 @@ public boolean streamAvailable() {
     public void saveCurrentPosition(SharedPreferences pref, int newPosition) {
         DBWriter.setFeedMediaPlaybackInformation(ClientConfig.applicationCallbacks.getApplicationInstance(), this);
         if(item.isNew()) {
-            DBWriter.markItemRead(ClientConfig.applicationCallbacks.getApplicationInstance(), false, item.getId());
+            DBWriter.markItemPlayed(ClientConfig.applicationCallbacks.getApplicationInstance(), FeedItem.UNPLAYED, item.getId());
         }
         setPosition(newPosition);
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -244,7 +244,7 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                 case NEW:
                     FeedItem newItem = DBReader.getFeedItem(this, action.getPodcast(), action.getEpisode());
                     if(newItem != null) {
-                        DBWriter.markItemRead(this, newItem, false, true);
+                        DBWriter.markItemPlayed(this, newItem, FeedItem.UNPLAYED, true);
                     } else {
                         Log.i(TAG, "Unknown feed item: " + action);
                     }
@@ -279,7 +279,7 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                 media.setPosition(action.getPosition() * 1000);
                 DBWriter.setFeedMedia(this, media);
                 if(playItem.getMedia().hasAlmostEnded()) {
-                    DBWriter.markItemRead(this, playItem, true, true);
+                    DBWriter.markItemPlayed(this, playItem, FeedItem.PLAYED, true);
                     DBWriter.addItemToPlaybackHistory(this, playItem.getMedia());
                 }
             }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -201,7 +201,7 @@ private void playMediaObject(final Playable playable, final boolean forceReset,
                     if(oldMedia.hasAlmostEnded()) {
                         Log.d(TAG, "smart mark as read");
                         FeedItem item = oldMedia.getItem();
-                        DBWriter.markItemRead(context, item, true, false);
+                        DBWriter.markItemPlayed(context, item, FeedItem.PLAYED, false);
                         DBWriter.removeQueueItem(context, item, false);
                         DBWriter.addItemToPlaybackHistory(context, oldMedia);
                         if (item.getFeed().getPreferences().getCurrentAutoDelete()) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java
Patch:
@@ -12,9 +12,7 @@ public interface AutomaticDownloadAlgorithm {
      * This method is executed on an internal single thread executor.
      *
      * @param context  Used for accessing the DB.
-     * @param mediaIds If this list is not empty, the method will only download a candidate for automatic downloading if
-     *                 its media ID is in the mediaIds list.
      * @return A Runnable that will be submitted to an ExecutorService.
      */
-    public Runnable autoDownloadUndownloadedItems(Context context, long... mediaIds);
+    public Runnable autoDownloadUndownloadedItems(Context context);
 }

File: app/src/main/java/de/danoeh/antennapod/adapter/DefaultActionButtonCallback.java
Patch:
@@ -93,7 +93,7 @@ else if (item.hasMedia() && item.getMedia().isCurrentlyPaused()) {
             }
         } else {
             if (!item.isPlayed()) {
-                DBWriter.markItemRead(context, item, true, true);
+                DBWriter.markItemPlayed(context, item, FeedItem.PLAYED, true);
             }
         }
     }

File: app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java
Patch:
@@ -372,12 +372,12 @@ private void queueChecked() {
     }
 
     private void markedCheckedPlayed() {
-        DBWriter.markItemRead(getActivity(), true, checkedIds.toArray());
+        DBWriter.markItemPlayed(getActivity(), FeedItem.PLAYED, checkedIds.toArray());
         close();
     }
 
     private void markedCheckedUnplayed() {
-        DBWriter.markItemRead(getActivity(), false, checkedIds.toArray());
+        DBWriter.markItemPlayed(getActivity(), FeedItem.UNPLAYED, checkedIds.toArray());
         close();
     }
 

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -155,7 +155,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
                 break;
             case R.id.mark_read_item:
                 selectedItem.setPlayed(true);
-                DBWriter.markItemRead(context, selectedItem, true, false);
+                DBWriter.markItemPlayed(context, selectedItem, FeedItem.PLAYED, false);
                 if(GpodnetPreferences.loggedIn()) {
                     FeedMedia media = selectedItem.getMedia();
                     // not all items have media, Gpodder only cares about those that do
@@ -173,7 +173,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
                 break;
             case R.id.mark_unread_item:
                 selectedItem.setPlayed(false);
-                DBWriter.markItemRead(context, selectedItem, false, false);
+                DBWriter.markItemPlayed(context, selectedItem, FeedItem.UNPLAYED, false);
                 if(GpodnetPreferences.loggedIn()) {
                     GpodnetEpisodeAction actionNew = new GpodnetEpisodeAction.Builder(selectedItem, Action.NEW)
                             .currentDeviceId()
@@ -195,7 +195,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
                 break;
             case R.id.reset_position:
                 selectedItem.getMedia().setPosition(0);
-                DBWriter.markItemRead(context, selectedItem, false, true);
+                DBWriter.markItemPlayed(context, selectedItem, FeedItem.UNPLAYED, true);
                 break;
             case R.id.activate_auto_download:
                 selectedItem.setAutoDownload(true);

File: app/src/main/java/de/danoeh/antennapod/service/PlayerWidgetService.java
Patch:
@@ -16,7 +16,6 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
-import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;
 import de.danoeh.antennapod.core.service.playback.PlaybackService;
 import de.danoeh.antennapod.core.service.playback.PlayerStatus;
@@ -59,7 +58,7 @@ public void onDestroy() {
 				if (media.hasAlmostEnded()) {
 					Log.d(TAG, "smart mark as read");
 					FeedItem item = media.getItem();
-					DBWriter.markItemRead(this, item, true, false);
+					DBWriter.markItemPlayed(this, item, FeedItem.PLAYED, false);
 					DBWriter.removeQueueItem(this, item, false);
 					DBWriter.addItemToPlaybackHistory(this, media);
 					if (item.getFeed().getPreferences().getCurrentAutoDelete()) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -391,7 +391,7 @@ public boolean streamAvailable() {
     public void saveCurrentPosition(SharedPreferences pref, int newPosition) {
         DBWriter.setFeedMediaPlaybackInformation(ClientConfig.applicationCallbacks.getApplicationInstance(), this);
         if(item.isNew()) {
-            DBWriter.markItemRead(ClientConfig.applicationCallbacks.getApplicationInstance(), false, item.getId());
+            DBWriter.markItemPlayed(ClientConfig.applicationCallbacks.getApplicationInstance(), FeedItem.UNPLAYED, item.getId());
         }
         setPosition(newPosition);
     }

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -244,7 +244,7 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                 case NEW:
                     FeedItem newItem = DBReader.getFeedItem(this, action.getPodcast(), action.getEpisode());
                     if(newItem != null) {
-                        DBWriter.markItemRead(this, newItem, false, true);
+                        DBWriter.markItemPlayed(this, newItem, FeedItem.UNPLAYED, true);
                     } else {
                         Log.i(TAG, "Unknown feed item: " + action);
                     }
@@ -279,7 +279,7 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                 media.setPosition(action.getPosition() * 1000);
                 DBWriter.setFeedMedia(this, media);
                 if(playItem.getMedia().hasAlmostEnded()) {
-                    DBWriter.markItemRead(this, playItem, true, true);
+                    DBWriter.markItemPlayed(this, playItem, FeedItem.PLAYED, true);
                     DBWriter.addItemToPlaybackHistory(this, playItem.getMedia());
                 }
             }

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -201,7 +201,7 @@ private void playMediaObject(final Playable playable, final boolean forceReset,
                     if(oldMedia.hasAlmostEnded()) {
                         Log.d(TAG, "smart mark as read");
                         FeedItem item = oldMedia.getItem();
-                        DBWriter.markItemRead(context, item, true, false);
+                        DBWriter.markItemPlayed(context, item, FeedItem.PLAYED, false);
                         DBWriter.removeQueueItem(context, item, false);
                         DBWriter.addItemToPlaybackHistory(context, oldMedia);
                         if (item.getFeed().getPreferences().getCurrentAutoDelete()) {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -32,7 +32,6 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
 import com.joanzapata.iconify.IconDrawable;
 import com.joanzapata.iconify.Iconify;
 import com.joanzapata.iconify.fonts.FontAwesomeIcons;
@@ -60,6 +59,7 @@
 import de.danoeh.antennapod.core.feed.QueueEvent;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.glide.FastBlurTransformation;
+import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.download.DownloadService;
 import de.danoeh.antennapod.core.service.download.Downloader;
 import de.danoeh.antennapod.core.storage.DBReader;
@@ -229,8 +229,8 @@ public boolean onQueryTextChange(String s) {
                 menu.findItem(R.id.share_link_item).setVisible(false);
                 menu.findItem(R.id.visit_website_item).setVisible(false);
             }
-            int[] attrs = { android.R.attr.textColor };
-            TypedArray ta = getActivity().obtainStyledAttributes(attrs);
+            int[] attrs = { R.attr.action_bar_icon_color };
+            TypedArray ta = getActivity().obtainStyledAttributes(UserPreferences.getTheme(), attrs);
             int textColor = ta.getColor(0, Color.GRAY);
             ta.recycle();
 

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -32,7 +32,6 @@
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
 import com.joanzapata.iconify.IconDrawable;
 import com.joanzapata.iconify.Iconify;
 import com.joanzapata.iconify.fonts.FontAwesomeIcons;
@@ -60,6 +59,7 @@
 import de.danoeh.antennapod.core.feed.QueueEvent;
 import de.danoeh.antennapod.core.glide.ApGlideSettings;
 import de.danoeh.antennapod.core.glide.FastBlurTransformation;
+import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.download.DownloadService;
 import de.danoeh.antennapod.core.service.download.Downloader;
 import de.danoeh.antennapod.core.storage.DBReader;
@@ -229,8 +229,8 @@ public boolean onQueryTextChange(String s) {
                 menu.findItem(R.id.share_link_item).setVisible(false);
                 menu.findItem(R.id.visit_website_item).setVisible(false);
             }
-            int[] attrs = { android.R.attr.textColor };
-            TypedArray ta = getActivity().obtainStyledAttributes(attrs);
+            int[] attrs = { R.attr.action_bar_icon_color };
+            TypedArray ta = getActivity().obtainStyledAttributes(UserPreferences.getTheme(), attrs);
             int textColor = ta.getColor(0, Color.GRAY);
             ta.recycle();
 

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -13,8 +13,8 @@
 import java.util.List;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.MainActivity;
+import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
@@ -79,7 +79,7 @@ public void testAddFeed() throws Exception {
         solo.clickOnText(solo.getString(R.string.add_feed_label));
         solo.enterText(0, feed.getDownload_url());
         solo.clickOnButton(solo.getString(R.string.confirm_label));
-        solo.waitForActivity(DefaultOnlineFeedViewActivity.class);
+        solo.waitForActivity(OnlineFeedViewActivity.class);
         solo.waitForView(R.id.butSubscribe);
         assertEquals(solo.getString(R.string.subscribe_label), solo.getButton(0).getText().toString());
         solo.clickOnButton(0);

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -10,7 +10,6 @@
 import android.widget.EditText;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.OpmlImportFromPathActivity;
@@ -73,7 +72,7 @@ public void onClick(View v) {
         butConfirm.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = new Intent(getActivity(), DefaultOnlineFeedViewActivity.class);
+                Intent intent = new Intent(getActivity(), OnlineFeedViewActivity.class);
                 intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, etxtFeedurl.getText().toString());
                 intent.putExtra(OnlineFeedViewActivity.ARG_TITLE, getString(R.string.add_feed_label));
                 startActivity(intent);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -28,7 +28,6 @@
 import java.util.List;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.adapter.itunes.ItunesAdapter;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
@@ -96,13 +95,13 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 Intent intent = new Intent(getActivity(),
-                        DefaultOnlineFeedViewActivity.class);
+                        OnlineFeedViewActivity.class);
 
                 //Tell the OnlineFeedViewActivity where to go
                 String url = searchResults.get(position).feedUrl;
                 intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, url);
 
-                intent.putExtra(DefaultOnlineFeedViewActivity.ARG_TITLE, "iTunes");
+                intent.putExtra(OnlineFeedViewActivity.ARG_TITLE, "iTunes");
                 startActivity(intent);
             }
         });

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.List;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.adapter.gpodnet.PodcastListAdapter;
@@ -104,9 +103,9 @@ public void onClick(View v) {
 
     protected void onPodcastSelected(GpodnetPodcast selection) {
         Log.d(TAG, "Selected podcast: " + selection.toString());
-        Intent intent = new Intent(getActivity(), DefaultOnlineFeedViewActivity.class);
+        Intent intent = new Intent(getActivity(), OnlineFeedViewActivity.class);
         intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, selection.getUrl());
-        intent.putExtra(DefaultOnlineFeedViewActivity.ARG_TITLE, getString(R.string.gpodnet_main_label));
+        intent.putExtra(OnlineFeedViewActivity.ARG_TITLE, getString(R.string.gpodnet_main_label));
         startActivity(intent);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -260,8 +260,10 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                         GpodnetEpisodeAction mostRecent = mostRecentPlayAction.get(key);
                         if (mostRecent == null || mostRecent.getTimestamp() == null) {
                             mostRecentPlayAction.put(key, action);
-                        } else if (mostRecent.getTimestamp().before(action.getTimestamp())) {
+                        } else if (action.getTimestamp() != null && mostRecent.getTimestamp().before(action.getTimestamp())) {
                             mostRecentPlayAction.put(key, action);
+                        } else {
+                            Log.d(TAG, "No date information in action, skipping it");
                         }
                     }
                     break;

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -260,8 +260,10 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                         GpodnetEpisodeAction mostRecent = mostRecentPlayAction.get(key);
                         if (mostRecent == null || mostRecent.getTimestamp() == null) {
                             mostRecentPlayAction.put(key, action);
-                        } else if (mostRecent.getTimestamp().before(action.getTimestamp())) {
+                        } else if (action.getTimestamp() != null && mostRecent.getTimestamp().before(action.getTimestamp())) {
                             mostRecentPlayAction.put(key, action);
+                        } else {
+                            Log.d(TAG, "No date information in action, skipping it");
                         }
                     }
                     break;

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -13,8 +13,8 @@
 import java.util.List;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.MainActivity;
+import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
@@ -79,7 +79,7 @@ public void testAddFeed() throws Exception {
         solo.clickOnText(solo.getString(R.string.add_feed_label));
         solo.enterText(0, feed.getDownload_url());
         solo.clickOnButton(solo.getString(R.string.confirm_label));
-        solo.waitForActivity(DefaultOnlineFeedViewActivity.class);
+        solo.waitForActivity(OnlineFeedViewActivity.class);
         solo.waitForView(R.id.butSubscribe);
         assertEquals(solo.getString(R.string.subscribe_label), solo.getButton(0).getText().toString());
         solo.clickOnButton(0);

File: app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java
Patch:
@@ -10,7 +10,6 @@
 import android.widget.EditText;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.OpmlImportFromPathActivity;
@@ -73,7 +72,7 @@ public void onClick(View v) {
         butConfirm.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = new Intent(getActivity(), DefaultOnlineFeedViewActivity.class);
+                Intent intent = new Intent(getActivity(), OnlineFeedViewActivity.class);
                 intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, etxtFeedurl.getText().toString());
                 intent.putExtra(OnlineFeedViewActivity.ARG_TITLE, getString(R.string.add_feed_label));
                 startActivity(intent);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItunesSearchFragment.java
Patch:
@@ -28,7 +28,6 @@
 import java.util.List;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.adapter.itunes.ItunesAdapter;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
@@ -96,13 +95,13 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 Intent intent = new Intent(getActivity(),
-                        DefaultOnlineFeedViewActivity.class);
+                        OnlineFeedViewActivity.class);
 
                 //Tell the OnlineFeedViewActivity where to go
                 String url = searchResults.get(position).feedUrl;
                 intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, url);
 
-                intent.putExtra(DefaultOnlineFeedViewActivity.ARG_TITLE, "iTunes");
+                intent.putExtra(OnlineFeedViewActivity.ARG_TITLE, "iTunes");
                 startActivity(intent);
             }
         });

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.List;
 
 import de.danoeh.antennapod.R;
-import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
 import de.danoeh.antennapod.adapter.gpodnet.PodcastListAdapter;
@@ -104,9 +103,9 @@ public void onClick(View v) {
 
     protected void onPodcastSelected(GpodnetPodcast selection) {
         Log.d(TAG, "Selected podcast: " + selection.toString());
-        Intent intent = new Intent(getActivity(), DefaultOnlineFeedViewActivity.class);
+        Intent intent = new Intent(getActivity(), OnlineFeedViewActivity.class);
         intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, selection.getUrl());
-        intent.putExtra(DefaultOnlineFeedViewActivity.ARG_TITLE, getString(R.string.gpodnet_main_label));
+        intent.putExtra(OnlineFeedViewActivity.ARG_TITLE, getString(R.string.gpodnet_main_label));
         startActivity(intent);
     }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/AdapterUtils.java
Patch:
@@ -4,7 +4,7 @@
 import android.widget.ProgressBar;
 import android.widget.TextView;
 
-import com.joanzapata.android.iconify.Iconify;
+import com.joanzapata.iconify.Iconify;
 
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;

File: app/src/main/java/de/danoeh/antennapod/adapter/AllEpisodesListAdapter.java
Patch:
@@ -17,7 +17,7 @@
 import com.bumptech.glide.load.resource.drawable.GlideDrawable;
 import com.bumptech.glide.request.animation.GlideAnimation;
 import com.bumptech.glide.request.target.GlideDrawableImageViewTarget;
-import com.joanzapata.android.iconify.Iconify;
+import com.joanzapata.iconify.Iconify;
 
 import java.lang.ref.WeakReference;
 

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueListAdapter.java
Patch:
@@ -17,7 +17,7 @@
 import com.bumptech.glide.load.resource.drawable.GlideDrawable;
 import com.bumptech.glide.request.animation.GlideAnimation;
 import com.bumptech.glide.request.target.GlideDrawableImageViewTarget;
-import com.joanzapata.android.iconify.Iconify;
+import com.joanzapata.iconify.Iconify;
 
 import java.lang.ref.WeakReference;
 

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -256,7 +256,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
                         ((FeedMedia) media).getItem().getFlattrStatus().flattrable()
         );
 
-        boolean hasWebsiteLink = media.getWebsiteLink() != null;
+        boolean hasWebsiteLink = media != null && media.getWebsiteLink() != null;
         menu.findItem(R.id.visit_website_item).setVisible(hasWebsiteLink);
 
         boolean isItemAndHasLink = media != null && (media instanceof FeedMedia) && ((FeedMedia) media).getItem().getLink() != null;

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -256,7 +256,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
                         ((FeedMedia) media).getItem().getFlattrStatus().flattrable()
         );
 
-        boolean hasWebsiteLink = media.getWebsiteLink() != null;
+        boolean hasWebsiteLink = media != null && media.getWebsiteLink() != null;
         menu.findItem(R.id.visit_website_item).setVisible(hasWebsiteLink);
 
         boolean isItemAndHasLink = media != null && (media instanceof FeedMedia) && ((FeedMedia) media).getItem().getLink() != null;

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -43,7 +43,7 @@ private static OkHttpClient getInternalClient() {
             if (internalClient == null) {
                 synchronized (Factory.class) {
                     if (internalClient == null) {
-                        internalClient = AntennapodHttpClient.getHttpClient();
+                        internalClient = AntennapodHttpClient.newHttpClient();
                         internalClient.interceptors().add(new NetworkAllowanceInterceptor());
                         internalClient.interceptors().add(new BasicAuthenticationInterceptor());
                     }

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -43,7 +43,7 @@ private static OkHttpClient getInternalClient() {
             if (internalClient == null) {
                 synchronized (Factory.class) {
                     if (internalClient == null) {
-                        internalClient = AntennapodHttpClient.getHttpClient();
+                        internalClient = AntennapodHttpClient.newHttpClient();
                         internalClient.interceptors().add(new NetworkAllowanceInterceptor());
                         internalClient.interceptors().add(new BasicAuthenticationInterceptor());
                     }

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -44,8 +44,6 @@ public void onCreate() {
 		EventDistributor.getInstance();
 
         SPAUtil.sendSPAppsQueryFeedsIntent(this);
-
-		// startService(new Intent(this, FeedMediaSizeService.class));
 	}
 
 	public static float getLogicalDensity() {

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -230,7 +230,7 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
         for(GpodnetEpisodeAction action : localActions) {
             Pair key = new Pair(action.getPodcast(), action.getEpisode());
             GpodnetEpisodeAction mostRecent = localMostRecentPlayAction.get(key);
-            if (mostRecent == null) {
+            if (mostRecent == null || mostRecent.getTimestamp() == null) {
                 localMostRecentPlayAction.put(key, action);
             } else if (mostRecent.getTimestamp().before(action.getTimestamp())) {
                 localMostRecentPlayAction.put(key, action);
@@ -255,9 +255,10 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                     Pair key = new Pair(action.getPodcast(), action.getEpisode());
                     GpodnetEpisodeAction localMostRecent = localMostRecentPlayAction.get(key);
                     if(localMostRecent == null ||
+                            localMostRecent.getTimestamp() == null ||
                             localMostRecent.getTimestamp().before(action.getTimestamp())) {
                         GpodnetEpisodeAction mostRecent = mostRecentPlayAction.get(key);
-                        if (mostRecent == null) {
+                        if (mostRecent == null || mostRecent.getTimestamp() == null) {
                             mostRecentPlayAction.put(key, action);
                         } else if (mostRecent.getTimestamp().before(action.getTimestamp())) {
                             mostRecentPlayAction.put(key, action);

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -44,7 +44,7 @@ public class UserPreferences {
     public static final String PREF_THEME = "prefTheme";
     public static final String PREF_HIDDEN_DRAWER_ITEMS = "prefHiddenDrawerItems";
     public static final String PREF_DRAWER_FEED_ORDER = "prefDrawerFeedOrder";
-    public static final String PREF_DRAWER_FEED_COUNTER = "prefDrawerFeedCounter";
+    public static final String PREF_DRAWER_FEED_COUNTER = "prefDrawerFeedIndicator";
     public static final String PREF_EXPANDED_NOTIFICATION = "prefExpandNotify";
     public static final String PREF_PERSISTENT_NOTIFICATION = "prefPersistNotify";
     public static final String PREF_SHOW_DOWNLOAD_REPORT = "prefShowDownloadReport";
@@ -90,7 +90,7 @@ public class UserPreferences {
 
     // Constants
     private static int EPISODE_CACHE_SIZE_UNLIMITED = -1;
-    public static int FEED_ORDER_UNPLAYED_EPISODES = 0;
+    public static int FEED_ORDER_COUNTER = 0;
     public static int FEED_ORDER_ALPHABETICAL = 1;
     public static int FEED_COUNTER_SHOW_NEW_UNPLAYED_SUM = 0;
     public static int FEED_COUNTER_SHOW_NEW = 1;
@@ -144,7 +144,7 @@ public static int getFeedOrder() {
         return Integer.valueOf(value);
     }
 
-    public static int getFeedCounter() {
+    public static int getFeedCounterSetting() {
         String value = prefs.getString(PREF_DRAWER_FEED_COUNTER, "0");
         return Integer.valueOf(value);
     }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -1141,7 +1141,7 @@ public static NavDrawerData getNavDrawerData(Context context) {
 
         Comparator<Feed> comparator;
         int feedOrder = UserPreferences.getFeedOrder();
-        if(feedOrder == UserPreferences.FEED_ORDER_UNPLAYED_EPISODES) {
+        if(feedOrder == UserPreferences.FEED_ORDER_COUNTER) {
             comparator = new Comparator<Feed>() {
                 @Override
                 public int compare(Feed lhs, Feed rhs) {

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -230,7 +230,7 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
         for(GpodnetEpisodeAction action : localActions) {
             Pair key = new Pair(action.getPodcast(), action.getEpisode());
             GpodnetEpisodeAction mostRecent = localMostRecentPlayAction.get(key);
-            if (mostRecent == null) {
+            if (mostRecent == null || mostRecent.getTimestamp() == null) {
                 localMostRecentPlayAction.put(key, action);
             } else if (mostRecent.getTimestamp().before(action.getTimestamp())) {
                 localMostRecentPlayAction.put(key, action);
@@ -255,9 +255,10 @@ private synchronized void processEpisodeActions(List<GpodnetEpisodeAction> local
                     Pair key = new Pair(action.getPodcast(), action.getEpisode());
                     GpodnetEpisodeAction localMostRecent = localMostRecentPlayAction.get(key);
                     if(localMostRecent == null ||
+                            localMostRecent.getTimestamp() == null ||
                             localMostRecent.getTimestamp().before(action.getTimestamp())) {
                         GpodnetEpisodeAction mostRecent = mostRecentPlayAction.get(key);
-                        if (mostRecent == null) {
+                        if (mostRecent == null || mostRecent.getTimestamp() == null) {
                             mostRecentPlayAction.put(key, action);
                         } else if (mostRecent.getTimestamp().before(action.getTimestamp())) {
                             mostRecentPlayAction.put(key, action);

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -1,13 +1,11 @@
 package de.danoeh.antennapod;
 
 import android.app.Application;
-import android.content.Intent;
 import android.content.res.Configuration;
 
 import de.danoeh.antennapod.core.feed.EventDistributor;
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
-import de.danoeh.antennapod.core.service.FeedMediaSizeService;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.spa.SPAUtil;
 
@@ -47,7 +45,7 @@ public void onCreate() {
 
         SPAUtil.sendSPAppsQueryFeedsIntent(this);
 
-		startService(new Intent(this, FeedMediaSizeService.class));
+		// startService(new Intent(this, FeedMediaSizeService.class));
 	}
 
 	public static float getLogicalDensity() {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -578,7 +578,7 @@ public static synchronized Feed[] updateFeed(final Context context,
 
         EventDistributor.getInstance().sendFeedUpdateBroadcast();
 
-        context.startService(new Intent(context, FeedMediaSizeService.class));
+        // context.startService(new Intent(context, FeedMediaSizeService.class));
 
         return resultFeeds;
     }

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -428,7 +428,7 @@ private void buildSmartMarkAsPlayedPreference() {
                 entries[x] = res.getString(R.string.pref_smart_mark_as_played_disabled);
             } else {
                 Integer v = Integer.parseInt(values[x]);
-                entries[x] = res.getQuantityString(R.plurals.time_seconds_quantified, v);
+                entries[x] = res.getQuantityString(R.plurals.time_seconds_quantified, v, v);
             }
         }
         pref.setEntries(entries);

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.widget.LinearLayout;
 
 import de.danoeh.antennapod.R;
+import de.danoeh.antennapod.core.preferences.UserPreferences;
 
 /**
  * Displays the 'about' screen
@@ -18,6 +19,7 @@ public class AboutActivity extends ActionBarActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        setTheme(UserPreferences.getTheme());
         super.onCreate(savedInstanceState);
         getSupportActionBar().hide();
         setContentView(R.layout.about);

File: app/src/main/java/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.widget.LinearLayout;
 
 import de.danoeh.antennapod.R;
+import de.danoeh.antennapod.core.preferences.UserPreferences;
 
 /**
  * Displays the 'about' screen
@@ -18,6 +19,7 @@ public class AboutActivity extends ActionBarActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        setTheme(UserPreferences.getTheme());
         super.onCreate(savedInstanceState);
         getSupportActionBar().hide();
         setContentView(R.layout.about);

File: app/src/main/java/de/danoeh/antennapod/adapter/QueueListAdapter.java
Patch:
@@ -155,8 +155,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.butSecondary.setTag(item);
         holder.butSecondary.setOnClickListener(secondaryActionListener);
 
-        Log.d(TAG, item.getFeed().getImageUri().toString());
-
         Glide.with(context)
                 .load(item.getImageUri())
                 .diskCacheStrategy(DiskCacheStrategy.SOURCE)

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1709,7 +1709,7 @@ public void onUpgrade(final SQLiteDatabase db, final int oldVersion,
                 db.execSQL("ALTER TABLE " + PodDBAdapter.TABLE_NAME_FEEDS
                         + " ADD COLUMN " + PodDBAdapter.KEY_AUTO_DELETE_ACTION + " INTEGER DEFAULT 0");
             }
-            if(oldVersion < 1030002) {
+            if(oldVersion < 1030005) {
                 db.execSQL("UPDATE FeedItems SET auto_download=0 WHERE " +
                         "(read=1 OR id IN (SELECT feeditem FROM FeedMedia WHERE position>0 OR downloaded=1)) " +
                         "AND id NOT IN (SELECT feeditem FROM Queue)");

File: app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -480,7 +480,7 @@ public boolean onLongClick(View v) {
                             checked = i;
                         }
                         choices[i] = String.valueOf(values[i]) + " "
-                                + getString(R.string.time_unit_seconds);
+                                + getString(R.string.time_seconds);
                     }
                     choice = values[checked];
                     AlertDialog.Builder builder = new AlertDialog.Builder(MediaplayerActivity.this);
@@ -528,7 +528,7 @@ public boolean onLongClick(View v) {
                             checked = i;
                         }
                         choices[i] = String.valueOf(values[i]) + " "
-                                + getString(R.string.time_unit_seconds);
+                                + getString(R.string.time_seconds);
                     }
                     choice = values[checked];
                     AlertDialog.Builder builder = new AlertDialog.Builder(MediaplayerActivity.this);

File: app/src/main/java/de/danoeh/antennapod/dialog/TimeDialog.java
Patch:
@@ -39,9 +39,9 @@ public TimeDialog(Context context, int titleTextId, int leftButtonTextId) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         requestWindowFeature(Window.FEATURE_NO_TITLE);
-        String[] spinnerContent = new String[]{context.getString(R.string.time_unit_seconds),
-                context.getString(R.string.time_unit_minutes),
-                context.getString(R.string.time_unit_hours)};
+        String[] spinnerContent = new String[]{context.getString(R.string.time_seconds),
+                context.getString(R.string.time_minutes),
+                context.getString(R.string.time_hours)};
 
         setContentView(R.layout.time_dialog);
         etxtTime = (EditText) findViewById(R.id.etxtTime);

File: core/src/main/java/de/danoeh/antennapod/core/util/Converter.java
Patch:
@@ -111,10 +111,10 @@ public static String getDurationStringLocalized(Context context, long duration)
 
         String result = "";
         if(h > 0) {
-            String hours = context.getResources().getQuantityString(R.plurals.time_unit_hours, h, h);
+            String hours = context.getResources().getQuantityString(R.plurals.time_hours_quantified, h, h);
             result += hours + " ";
         }
-        String minutes = context.getResources().getQuantityString(R.plurals.time_unit_minutes, m, m);
+        String minutes = context.getResources().getQuantityString(R.plurals.time_minutes_quantified, m, m);
         result += minutes;
         return result;
     }

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -19,6 +19,7 @@
 import java.net.HttpURLConnection;
 
 import de.danoeh.antennapod.core.ClientConfig;
+import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
 import de.danoeh.antennapod.core.service.download.HttpDownloader;
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -42,7 +43,7 @@ private static OkHttpClient getInternalClient() {
             if (internalClient == null) {
                 synchronized (Factory.class) {
                     if (internalClient == null) {
-                        internalClient = new OkHttpClient();
+                        internalClient = AntennapodHttpClient.getHttpClient();
                         internalClient.interceptors().add(new NetworkAllowanceInterceptor());
                         internalClient.interceptors().add(new BasicAuthenticationInterceptor());
                     }

File: core/src/main/java/de/danoeh/antennapod/core/glide/ApOkHttpUrlLoader.java
Patch:
@@ -19,6 +19,7 @@
 import java.net.HttpURLConnection;
 
 import de.danoeh.antennapod.core.ClientConfig;
+import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;
 import de.danoeh.antennapod.core.service.download.HttpDownloader;
 import de.danoeh.antennapod.core.storage.DBReader;
 import de.danoeh.antennapod.core.util.NetworkUtils;
@@ -42,7 +43,7 @@ private static OkHttpClient getInternalClient() {
             if (internalClient == null) {
                 synchronized (Factory.class) {
                     if (internalClient == null) {
-                        internalClient = new OkHttpClient();
+                        internalClient = AntennapodHttpClient.getHttpClient();
                         internalClient.interceptors().add(new NetworkAllowanceInterceptor());
                         internalClient.interceptors().add(new BasicAuthenticationInterceptor());
                     }

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -8,6 +8,7 @@
 import de.danoeh.antennapod.core.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.service.FeedMediaSizeService;
+import de.danoeh.antennapod.core.util.NetworkUtils;
 import de.danoeh.antennapod.spa.SPAUtil;
 
 /** Main application class. */
@@ -41,6 +42,7 @@ public void onCreate() {
 		UpdateManager.init(this);
 		UserPreferences.init(this);
 		PlaybackPreferences.init(this);
+		NetworkUtils.init(this);
 		EventDistributor.getInstance();
 
         SPAUtil.sendSPAppsQueryFeedsIntent(this);

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/FlattrClickWorker.java
Patch:
@@ -90,7 +90,7 @@ protected ExitCode doInBackground(Void... params) {
             return ExitCode.NO_TOKEN;
         }
 
-        if (!NetworkUtils.networkAvailable(context)) {
+        if (!NetworkUtils.networkAvailable()) {
             return ExitCode.NO_NETWORK;
         }
 

File: core/src/main/java/de/danoeh/antennapod/core/receiver/FeedUpdateReceiver.java
Patch:
@@ -19,7 +19,7 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
     @Override
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Received intent");
-        if (NetworkUtils.isDownloadAllowed(context)) {
+        if (NetworkUtils.isDownloadAllowed()) {
             DBTasks.refreshAllFeeds(context, null);
         } else {
             Log.d(TAG, "Blocking automatic update: no wifi available / no mobile updates allowed");

File: core/src/main/java/de/danoeh/antennapod/core/service/FeedMediaSizeService.java
Patch:
@@ -28,13 +28,13 @@ public FeedMediaSizeService() {
     @Override
     protected void onHandleIntent(Intent intent) {
         Log.d(TAG, "onHandleIntent()");
-        if(false == NetworkUtils.isDownloadAllowed(this)) {
+        if(false == NetworkUtils.isDownloadAllowed()) {
             return;
         }
         List<FeedMedia> list = DBReader.getFeedMediaUnknownSize(this);
         for (FeedMedia media : list) {
             Log.d(TAG, "Getting size currently " + media.getSize() + " for " + media.getDownload_url());
-            if(false == NetworkUtils.isDownloadAllowed(this)) {
+            if(false == NetworkUtils.isDownloadAllowed()) {
                 return;
             }
             long size = Integer.MIN_VALUE;

File: core/src/main/java/de/danoeh/antennapod/core/service/GpodnetSyncService.java
Patch:
@@ -108,7 +108,7 @@ private synchronized GpodnetService tryLogin() throws GpodnetServiceException {
 
 
     private synchronized void sync() {
-        if (GpodnetPreferences.loggedIn() == false || NetworkUtils.networkAvailable(this) == false) {
+        if (GpodnetPreferences.loggedIn() == false || NetworkUtils.networkAvailable() == false) {
             stopSelf();
             return;
         }

File: core/src/main/java/de/danoeh/antennapod/core/storage/APDownloadAlgorithm.java
Patch:
@@ -40,7 +40,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context, final long.
             public void run() {
 
                 // true if we should auto download based on network status
-                boolean networkShouldAutoDl = NetworkUtils.autodownloadNetworkAvailable(context)
+                boolean networkShouldAutoDl = NetworkUtils.autodownloadNetworkAvailable()
                         && UserPreferences.isEnableAutodownload();
 
                 // true if we should auto download based on power status

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -476,7 +476,7 @@ private void onFragmentLoaded() {
         // refresh information bar
         String info = queue.size() + getString(R.string.episodes_suffix);
         if(queue.size() > 0) {
-            int duration = 0;
+            long duration = 0;
             for(FeedItem item : queue) {
                 if(item.getMedia() != null) {
                     duration += item.getMedia().getDuration();

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -449,7 +449,7 @@ private void buildSmartMarkAsPlayedPreference() {
                 entries[x] = res.getString(R.string.pref_smart_mark_as_played_disabled);
             } else {
                 Integer v = Integer.parseInt(values[x]);
-                entries[x] = v + " " + res.getString(R.string.time_unit_seconds);
+                entries[x] = res.getQuantityString(R.plurals.time_unit_seconds, v);
             }
         }
         pref.setEntries(entries);

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -78,7 +78,7 @@ public void testAddFeed() throws Exception {
         openNavDrawer();
         solo.clickOnText(solo.getString(R.string.add_feed_label));
         solo.enterText(0, feed.getDownload_url());
-        solo.clickOnButton(0);
+        solo.clickOnButton(solo.getString(R.string.confirm_label));
         solo.waitForActivity(DefaultOnlineFeedViewActivity.class);
         solo.waitForView(R.id.butSubscribe);
         assertEquals(solo.getString(R.string.subscribe_label), solo.getButton(0).getText().toString());

File: app/src/main/java/de/danoeh/antennapod/receiver/ConnectivityActionReceiver.java
Patch:
@@ -15,7 +15,7 @@
 import de.danoeh.antennapod.core.util.NetworkUtils;
 
 public class ConnectivityActionReceiver extends BroadcastReceiver {
-	private static final String TAG = "ConnectivityActionReceiver";
+	private static final String TAG = "ConnectivityActionRecvr";
 
 	@Override
 	public void onReceive(final Context context, Intent intent) {

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -588,7 +588,7 @@ public static void restartUpdateTimeOfDayAlarm(int hoursOfDay, int minute) {
         Calendar alarm = (Calendar)now.clone();
         alarm.set(Calendar.HOUR_OF_DAY, hoursOfDay);
         alarm.set(Calendar.MINUTE, minute);
-        if(alarm.before(now)) {
+        if (alarm.before(now) || alarm.equals(now)) {
             alarm.add(Calendar.DATE, 1);
         }
         Log.d(TAG, "Alarm set for: " + alarm.toString() + " : " + alarm.getTimeInMillis());

File: core/src/main/java/de/danoeh/antennapod/core/receiver/FeedUpdateReceiver.java
Patch:
@@ -20,7 +20,7 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
     public void onReceive(Context context, Intent intent) {
         Log.d(TAG, "Received intent");
         if (NetworkUtils.isDownloadAllowed(context)) {
-            DBTasks.refreshExpiredFeeds(context);
+            DBTasks.refreshAllFeeds(context, null);
         } else {
             Log.d(TAG, "Blocking automatic update: no wifi available / no mobile updates allowed");
         }

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -326,6 +326,7 @@ public void onDestroy() {
         unregisterReceiver(cancelDownloadReceiver);
 
         if (!newMediaFiles.isEmpty()) {
+            Log.d(TAG, "newMediaFiles exist, autodownload them");
             DBTasks.autodownloadUndownloadedItems(getApplicationContext(),
                     ArrayUtils.toPrimitive(newMediaFiles.toArray(new Long[newMediaFiles.size()])));
         }

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -78,7 +78,7 @@ public void testAddFeed() throws Exception {
         openNavDrawer();
         solo.clickOnText(solo.getString(R.string.add_feed_label));
         solo.enterText(0, feed.getDownload_url());
-        solo.clickOnButton(0);
+        solo.clickOnButton(solo.getString(R.string.confirm_label));
         solo.waitForActivity(DefaultOnlineFeedViewActivity.class);
         solo.waitForView(R.id.butSubscribe);
         assertEquals(solo.getString(R.string.subscribe_label), solo.getButton(0).getText().toString());

File: core/src/main/java/de/danoeh/antennapod/core/service/FeedMediaSizeService.java
Patch:
@@ -43,7 +43,7 @@ protected void onHandleIntent(Intent intent) {
                 if(mediaFile.exists()) {
                     size = mediaFile.length();
                 }
-            } else if (false == media.checkedOnSize()) {
+            } else if (false == media.checkedOnSizeButUnknown()) {
                 // only query the network if we haven't already checked
                 HttpURLConnection conn = null;
                 try {
@@ -63,7 +63,7 @@ protected void onHandleIntent(Intent intent) {
             }
             if (size <= 0) {
                 // they didn't tell us the size, but we don't want to keep querying on it
-                media.setCheckedOnSize();
+                media.setCheckedOnSizeButUnknown();
             } else {
                 media.setSize(size);
             }

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1113,7 +1113,7 @@ public final Cursor getNewItemIdsCursor() {
     public final Cursor getFeedMediaUnknownSizeCursor() {
         final String query = "SELECT * "
                 + " FROM " + TABLE_NAME_FEED_MEDIA
-                + " WHERE " + KEY_SIZE + ">" + Integer.MIN_VALUE;
+                + " WHERE " + KEY_SIZE + "<= 0";
         return db.rawQuery(query, null);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/service/FeedMediaSizeService.java
Patch:
@@ -64,8 +64,9 @@ protected void onHandleIntent(Intent intent) {
             if (size <= 0) {
                 // they didn't tell us the size, but we don't want to keep querying on it
                 media.setCheckedOnSize();
+            } else {
+                media.setSize(size);
             }
-            media.setSize(size);
             Log.d(TAG, "Size now: " + media.getSize());
             DBWriter.setFeedMedia(this, media);
             EventBus.getDefault().post(FeedMediaEvent.update(media));

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1113,7 +1113,7 @@ public final Cursor getNewItemIdsCursor() {
     public final Cursor getFeedMediaUnknownSizeCursor() {
         final String query = "SELECT * "
                 + " FROM " + TABLE_NAME_FEED_MEDIA
-                + " WHERE " + KEY_SIZE + ">" + Integer.MIN_VALUE;
+                + " WHERE " + KEY_SIZE + "<= 0";
         return db.rawQuery(query, null);
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -171,7 +171,7 @@ public synchronized void downloadFeed(Context context, Feed feed, boolean loadAl
         if (feedFileValid(feed)) {
             String username = (feed.getPreferences() != null) ? feed.getPreferences().getUsername() : null;
             String password = (feed.getPreferences() != null) ? feed.getPreferences().getPassword() : null;
-            long ifModifiedSince = feed.getLastUpdate().getTime();
+            long ifModifiedSince = feed.isPaged() ? 0 : feed.getLastUpdate().getTime();
 
             Bundle args = new Bundle();
             args.putInt(REQUEST_ARG_PAGE_NR, feed.getPageNr());

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -614,7 +614,7 @@ protected Object[] doInBackground(Long... params) {
             Context context = getActivity();
             if (context != null) {
                 Feed feed = DBReader.getFeed(context, feedID);
-                if(feed.getItemFilter() != null) {
+                if(feed != null && feed.getItemFilter() != null) {
                     FeedItemFilter filter = feed.getItemFilter();
                     feed.setItems(filter.filter(context, feed.getItems()));
                 }

File: app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -120,7 +120,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
         SearchResult result = (SearchResult) l.getAdapter().getItem(position);
         FeedComponent comp = result.getComponent();
         if (comp.getClass() == Feed.class) {
-            ((MainActivity) getActivity()).loadFeedFragmentById(comp.getId());
+            ((MainActivity) getActivity()).loadFeedFragmentById(comp.getId(), null);
         } else {
             if (comp.getClass() == FeedItem.class) {
                 FeedItem item = (FeedItem) comp;

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -428,7 +428,7 @@ private void onFragmentLoaded() {
             setListAdapter(null);
             setupHeaderView();
             setupFooterView();
-            adapter = new FeedItemlistAdapter(getActivity(), itemAccess, new DefaultActionButtonCallback(getActivity()), false);
+            adapter = new FeedItemlistAdapter(getActivity(), itemAccess, new DefaultActionButtonCallback(getActivity()), false, true);
             setListAdapter(adapter);
             downloadObserver = new DownloadObserver(getActivity(), new Handler(), downloadObserverCallback);
             downloadObserver.onResume();

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -172,7 +172,7 @@ private Feed createTestFeed(int numItems, boolean withImage, boolean withFeedMed
                     "http://example.com/items/" + i, new Date(i*60000), FeedItem.UNPLAYED, feed);
             feed.getItems().add(item);
             if (withFeedMedia) {
-                item.setMedia(new FeedMedia(0, item, 4711, 0, 100, "audio/mp3", null, "http://example.com/media-" + i,
+                item.setMedia(new FeedMedia(0, item, 4711, 0, 1024*1024, "audio/mp3", null, "http://example.com/media-" + i,
                         false, null, 0));
             }
         }

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -67,6 +67,8 @@ protected void setUp() throws Exception {
         SharedPreferences.Editor prefEdit = PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()).edit();
         prefEdit.putString(UserPreferences.PREF_EPISODE_CACHE_SIZE, Integer.toString(EPISODE_CACHE_SIZE));
         prefEdit.commit();
+
+        UserPreferences.init(context);
     }
 
     @FlakyTest(tolerance = 3)
@@ -261,7 +263,7 @@ public void testUpdateFeedUpdatedFeed() {
         }
 
         for (int i = NUM_ITEMS_OLD; i < NUM_ITEMS_NEW + NUM_ITEMS_OLD; i++) {
-            feed.getItems().add(0, new FeedItem(0, "item " + i, "id " + i, "link " + i, new Date(i), FeedItem.PLAYED, feed));
+            feed.getItems().add(0, new FeedItem(0, "item " + i, "id " + i, "link " + i, new Date(i), FeedItem.UNPLAYED, feed));
         }
 
         final Feed newFeed = DBTasks.updateFeed(context, feed)[0];
@@ -275,7 +277,6 @@ public void testUpdateFeedUpdatedFeed() {
         updatedFeedTest(feedFromDB, feedID, itemIDs, NUM_ITEMS_OLD, NUM_ITEMS_NEW);
     }
 
-    @FlakyTest(tolerance = 3)
     private void updatedFeedTest(final Feed newFeed, long feedID, List<Long> itemIDs, final int NUM_ITEMS_OLD, final int NUM_ITEMS_NEW) {
         assertTrue(newFeed.getId() == feedID);
         assertTrue(newFeed.getItems().size() == NUM_ITEMS_NEW + NUM_ITEMS_OLD);

File: app/src/androidTest/java/de/test/antennapod/handler/FeedHandlerTest.java
Patch:
@@ -172,7 +172,7 @@ private Feed createTestFeed(int numItems, boolean withImage, boolean withFeedMed
                     "http://example.com/items/" + i, new Date(i*60000), FeedItem.UNPLAYED, feed);
             feed.getItems().add(item);
             if (withFeedMedia) {
-                item.setMedia(new FeedMedia(0, item, 4711, 0, 100, "audio/mp3", null, "http://example.com/media-" + i,
+                item.setMedia(new FeedMedia(0, item, 4711, 0, 1024*1024, "audio/mp3", null, "http://example.com/media-" + i,
                         false, null, 0));
             }
         }

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -67,6 +67,8 @@ protected void setUp() throws Exception {
         SharedPreferences.Editor prefEdit = PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()).edit();
         prefEdit.putString(UserPreferences.PREF_EPISODE_CACHE_SIZE, Integer.toString(EPISODE_CACHE_SIZE));
         prefEdit.commit();
+
+        UserPreferences.init(context);
     }
 
     @FlakyTest(tolerance = 3)
@@ -261,7 +263,7 @@ public void testUpdateFeedUpdatedFeed() {
         }
 
         for (int i = NUM_ITEMS_OLD; i < NUM_ITEMS_NEW + NUM_ITEMS_OLD; i++) {
-            feed.getItems().add(0, new FeedItem(0, "item " + i, "id " + i, "link " + i, new Date(i), FeedItem.PLAYED, feed));
+            feed.getItems().add(0, new FeedItem(0, "item " + i, "id " + i, "link " + i, new Date(i), FeedItem.UNPLAYED, feed));
         }
 
         final Feed newFeed = DBTasks.updateFeed(context, feed)[0];
@@ -275,7 +277,6 @@ public void testUpdateFeedUpdatedFeed() {
         updatedFeedTest(feedFromDB, feedID, itemIDs, NUM_ITEMS_OLD, NUM_ITEMS_NEW);
     }
 
-    @FlakyTest(tolerance = 3)
     private void updatedFeedTest(final Feed newFeed, long feedID, List<Long> itemIDs, final int NUM_ITEMS_OLD, final int NUM_ITEMS_NEW) {
         assertTrue(newFeed.getId() == feedID);
         assertTrue(newFeed.getItems().size() == NUM_ITEMS_NEW + NUM_ITEMS_OLD);

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -601,13 +601,12 @@ public static synchronized Feed[] updateFeed(final Context context,
                         // item is new
                         item.setFeed(savedFeed);
                         item.setAutoDownload(savedFeed.getPreferences().getAutoDownload());
-                        savedFeed.getItems().add(item);
+                        savedFeed.getItems().add(idx, item);
                         if (markNewItems) {
                             item.setNew();
                         }
                     } else {
                         oldItem.updateFromOther(item);
-                        savedFeed.getItems().add(oldItem);
                     }
                 }
                 // update attributes

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -428,7 +428,7 @@ private void onFragmentLoaded() {
             setListAdapter(null);
             setupHeaderView();
             setupFooterView();
-            adapter = new FeedItemlistAdapter(getActivity(), itemAccess, new DefaultActionButtonCallback(getActivity()), false);
+            adapter = new FeedItemlistAdapter(getActivity(), itemAccess, new DefaultActionButtonCallback(getActivity()), false, true);
             setListAdapter(adapter);
             downloadObserver = new DownloadObserver(getActivity(), new Handler(), downloadObserverCallback);
             downloadObserver.onResume();

File: core/src/main/java/de/danoeh/antennapod/core/receiver/AlarmUpdateReceiver.java
Patch:
@@ -25,7 +25,7 @@ public void onReceive(Context context, Intent intent) {
 		}
         PlaybackPreferences.init(context);
         UserPreferences.init(context);
-        UserPreferences.restartUpdateAlarm();
+        UserPreferences.restartUpdateAlarm(false);
 	}
 
 }

File: core/src/main/java/de/danoeh/antennapod/core/receiver/FeedUpdateReceiver.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.Intent;
 import android.util.Log;
 
+import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.util.NetworkUtils;
 
@@ -23,6 +24,7 @@ public void onReceive(Context context, Intent intent) {
         } else {
             Log.d(TAG, "Blocking automatic update: no wifi available / no mobile updates allowed");
         }
+        UserPreferences.restartUpdateAlarm(false);
     }
 
 }

File: app/src/androidTest/java/de/test/antennapod/service/playback/PlaybackServiceMediaPlayerTest.java
Patch:
@@ -20,6 +20,7 @@
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;
 import de.danoeh.antennapod.core.feed.FeedMedia;
+import de.danoeh.antennapod.core.feed.FeedPreferences;
 import de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer;
 import de.danoeh.antennapod.core.service.playback.PlayerStatus;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
@@ -116,6 +117,8 @@ public void testInit() {
     private Playable writeTestPlayable(String downloadUrl, String fileUrl) {
         final Context c = getInstrumentation().getTargetContext();
         Feed f = new Feed(0, new Date(), "f", "l", "d", null, null, null, null, "i", null, null, "l", false);
+        FeedPreferences prefs = new FeedPreferences(f.getId(), false, FeedPreferences.AutoDeleteAction.NO, null, null);
+        f.setPreferences(prefs);
         f.setItems(new ArrayList<FeedItem>());
         FeedItem i = new FeedItem(0, "t", "i", "l", new Date(), FeedItem.UNPLAYED, f);
         f.getItems().add(i);

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -322,7 +322,7 @@ public void setItemVisibility(int id, boolean visible) {
 
 
     private void onFragmentLoaded() {
-        progbarLoading.setVisibility(View.GONE);
+        progbarLoading.setVisibility(View.INVISIBLE);
         if (webviewData != null) {
             webvDescription.loadDataWithBaseURL(null, webviewData, "text/html",
                     "utf-8", "about:blank");
@@ -339,7 +339,7 @@ private void updateAppearance() {
         Picasso.with(getActivity()).load(item.getImageUri())
                 .fit()
                 .into(imgvCover);
-        progbarDownload.setVisibility(View.GONE);
+        progbarDownload.setVisibility(View.INVISIBLE);
         if (item.hasMedia() && downloaderList != null) {
             for (Downloader downloader : downloaderList) {
                 if (downloader.getDownloadRequest().getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedMedia.java
Patch:
@@ -186,7 +186,7 @@ public int getPosition() {
 
     public void setPosition(int position) {
         this.position = position;
-        if(position > 0) {
+        if(position > 0 && item.isNew()) {
             this.item.setPlayed(false);
         }
     }

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -877,12 +877,10 @@ public void removeDownloadLogItems(long count) {
 
     public void setQueue(List<FeedItem> queue) {
         ContentValues values = new ContentValues();
-        long[] ids = new long[queue.size()];
         db.beginTransaction();
         db.delete(TABLE_NAME_QUEUE, null, null);
         for (int i = 0; i < queue.size(); i++) {
             FeedItem item = queue.get(i);
-            ids[i] = item.getId();
             values.put(KEY_ID, i);
             values.put(KEY_FEEDITEM, item.getId());
             values.put(KEY_FEED, item.getFeed().getId());

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java
Patch:
@@ -322,7 +322,7 @@ public void setItemVisibility(int id, boolean visible) {
 
 
     private void onFragmentLoaded() {
-        progbarLoading.setVisibility(View.GONE);
+        progbarLoading.setVisibility(View.INVISIBLE);
         if (webviewData != null) {
             webvDescription.loadDataWithBaseURL(null, webviewData, "text/html",
                     "utf-8", "about:blank");
@@ -339,7 +339,7 @@ private void updateAppearance() {
         Picasso.with(getActivity()).load(item.getImageUri())
                 .fit()
                 .into(imgvCover);
-        progbarDownload.setVisibility(View.GONE);
+        progbarDownload.setVisibility(View.INVISIBLE);
         if (item.hasMedia() && downloaderList != null) {
             for (Downloader downloader : downloaderList) {
                 if (downloader.getDownloadRequest().getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA

File: app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java
Patch:
@@ -111,6 +111,9 @@ private File newBitmapFile(String name) throws IOException {
 
     private File newMediaFile(String name) throws IOException {
         File mediaFile = new File(hostedMediaDir, name);
+        if(mediaFile.exists()) {
+            mediaFile.delete();
+        }
         Assert.assertFalse(mediaFile.exists());
 
         InputStream in = context.getAssets().open("testfile.mp3");

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -113,7 +113,7 @@ public FeedItem(long id, String title, String itemIdentifier, String link, Date
     /**
      * This constructor should be used for creating test objects involving chapter marks.
      */
-    public FeedItem(long id, String title, String itemIdentifier, String link, Date pubDate, int read, Feed feed, boolean hasChapters) {
+    public FeedItem(long id, String title, String itemIdentifier, String link, Date pubDate, int state, Feed feed, boolean hasChapters) {
         this.id = id;
         this.title = title;
         this.itemIdentifier = itemIdentifier;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -415,7 +415,7 @@ public void run() {
                                     boolean addToFront = UserPreferences.enqueueAtFront();
 
                                     if(addToFront){
-                                        queue.add(0, item);
+                                        queue.add(0+i, item);
                                     } else {
                                         queue.add(item);
                                     }

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -555,7 +555,7 @@ public void onSeekBarStartTrackingTouch(SeekBar seekBar) {
      * Should be used by classes which implement the OnSeekBarChanged interface.
      */
     public void onSeekBarStopTrackingTouch(SeekBar seekBar, float prog) {
-        if (playbackService != null) {
+        if (playbackService != null && media != null) {
             playbackService.seekTo((int) (prog * media.getDuration()));
             setupPositionObserver();
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -55,7 +55,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             public void onClick(View v) {
                 Log.d(TAG, "layoutInfo was clicked");
 
-                if (controller.getMedia() != null) {
+                if (controller != null && controller.getMedia() != null) {
                     startActivity(PlaybackService.getPlayerActivityIntent(
                             getActivity(), controller.getMedia()));
                 }
@@ -192,7 +192,7 @@ public void onPause() {
 
     private boolean loadMediaInfo() {
         Log.d(TAG, "Loading media info");
-        if (controller.serviceAvailable()) {
+        if (controller != null && controller.serviceAvailable()) {
             Playable media = controller.getMedia();
             if (media != null) {
                 txtvTitle.setText(media.getEpisodeTitle());

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -555,7 +555,7 @@ public void onSeekBarStartTrackingTouch(SeekBar seekBar) {
      * Should be used by classes which implement the OnSeekBarChanged interface.
      */
     public void onSeekBarStopTrackingTouch(SeekBar seekBar, float prog) {
-        if (playbackService != null) {
+        if (playbackService != null && media != null) {
             playbackService.seekTo((int) (prog * media.getDuration()));
             setupPositionObserver();
         }

File: app/src/main/java/de/danoeh/antennapod/fragment/ExternalPlayerFragment.java
Patch:
@@ -55,7 +55,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             public void onClick(View v) {
                 Log.d(TAG, "layoutInfo was clicked");
 
-                if (controller.getMedia() != null) {
+                if (controller != null && controller.getMedia() != null) {
                     startActivity(PlaybackService.getPlayerActivityIntent(
                             getActivity(), controller.getMedia()));
                 }
@@ -192,7 +192,7 @@ public void onPause() {
 
     private boolean loadMediaInfo() {
         Log.d(TAG, "Loading media info");
-        if (controller.serviceAvailable()) {
+        if (controller != null && controller.serviceAvailable()) {
             Playable media = controller.getMedia();
             if (media != null) {
                 txtvTitle.setText(media.getEpisodeTitle());

File: app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java
Patch:
@@ -43,7 +43,7 @@ protected void tearDown() throws Exception {
     @Override
     protected void setUp() throws Exception {
         super.setUp();
-        UserPreferences.createInstance(getInstrumentation().getTargetContext());
+        UserPreferences.init(getInstrumentation().getTargetContext());
         destDir = getInstrumentation().getTargetContext().getExternalFilesDir(DOWNLOAD_DIR);
         assertNotNull(destDir);
         assertTrue(destDir.exists());

File: app/src/androidTest/java/de/test/antennapod/storage/DBTasksTest.java
Patch:
@@ -12,6 +12,7 @@
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
+import java.util.concurrent.TimeUnit;
 
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.feed.FeedItem;
@@ -298,9 +299,8 @@ private void updatedFeedTest(final Feed newFeed, long feedID, List<Long> itemIDs
         }
     }
 
-    @FlakyTest(tolerance = 3)
     private void expiredFeedListTestHelper(long lastUpdate, long expirationTime, boolean shouldReturn) {
-        UserPreferences.setUpdateInterval(context, expirationTime);
+        UserPreferences.setUpdateInterval(TimeUnit.MILLISECONDS.toHours(expirationTime));
         Feed feed = new Feed(0, new Date(lastUpdate), "feed", "link", "descr", null,
                 null, null, null, "feed", null, null, "url", false, new FlattrStatus(), false, null, null, false);
         feed.setItems(new ArrayList<FeedItem>());

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -39,7 +39,7 @@ public void setUp() throws Exception {
         Timeout.setLargeTimeout(1000);
         context = getInstrumentation().getTargetContext();
         res = getActivity().getResources();
-        UserPreferences.createInstance(context);
+        UserPreferences.init(context);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -38,8 +38,8 @@ public void onCreate() {
 		LOGICAL_DENSITY = getResources().getDisplayMetrics().density;
 
         PicassoProvider.setupPicassoInstance(this);
-		UserPreferences.createInstance(this);
-		PlaybackPreferences.createInstance(this);
+		UserPreferences.init(this);
+		PlaybackPreferences.init(this);
 		EventDistributor.getInstance();
 
         SPAUtil.sendSPAppsQueryFeedsIntent(this);

File: core/src/main/java/de/danoeh/antennapod/core/ApplicationCallbacks.java
Patch:
@@ -20,5 +20,4 @@ public interface ApplicationCallbacks {
      */
     public Intent getStorageErrorActivity(Context context);
 
-    public void setUpdateInterval(long updateInterval);
 }

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -124,8 +124,7 @@ public static List<String> getFeedListDownloadUrls(final Context context) {
      * can be loaded separately with {@link #getFeedItemList(android.content.Context, de.danoeh.antennapod.core.feed.Feed)}.
      */
     public static List<Feed> getExpiredFeedsList(final Context context, final long expirationTime) {
-        if (BuildConfig.DEBUG)
-            Log.d(TAG, String.format("getExpiredFeedsList(%d)", expirationTime));
+        Log.d(TAG, String.format("getExpiredFeedsList(%d)", expirationTime));
 
         PodDBAdapter adapter = new PodDBAdapter(context);
         adapter.open();

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -231,7 +231,7 @@ public boolean isSatisfied() {
                 return pauseForFocusLoss != UserPreferences.shouldPauseForFocusLoss();
             }
         }, Timeout.getLargeTimeout());
-        solo.clickOnText(solo.getString(R.string.pref_auto_delete_title));
+        solo.clickOnText(solo.getString(R.string.pref_pausePlaybackForFocusLoss_title));
         solo.waitForCondition(new Condition() {
             @Override
             public boolean isSatisfied() {

File: app/src/main/java/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -39,7 +39,7 @@ public void onCreate() {
 
         PicassoProvider.setupPicassoInstance(this);
 		UserPreferences.init(this);
-		PlaybackPreferences.createInstance(this);
+		PlaybackPreferences.init(this);
 		EventDistributor.getInstance();
 
         SPAUtil.sendSPAppsQueryFeedsIntent(this);

File: core/src/main/java/de/danoeh/antennapod/core/ApplicationCallbacks.java
Patch:
@@ -20,5 +20,4 @@ public interface ApplicationCallbacks {
      */
     public Intent getStorageErrorActivity(Context context);
 
-    public void setUpdateInterval(long updateInterval);
 }

File: app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java
Patch:
@@ -231,7 +231,7 @@ public boolean isSatisfied() {
                 return pauseForFocusLoss != UserPreferences.shouldPauseForFocusLoss();
             }
         }, Timeout.getLargeTimeout());
-        solo.clickOnText(solo.getString(R.string.pref_auto_delete_title));
+        solo.clickOnText(solo.getString(R.string.pref_pausePlaybackForFocusLoss_title));
         solo.waitForCondition(new Condition() {
             @Override
             public boolean isSatisfied() {

File: core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java
Patch:
@@ -1143,6 +1143,7 @@ public void run() {
             boolean chaptersRead = false;
             media.setDownloaded(true);
             media.setFile_url(request.getDestination());
+            media.setHasEmbeddedPicture(null);
 
             // Get duration
             MediaMetadataRetriever mmr = null;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -100,6 +100,7 @@ public void run() {
                         }
                         media.setDownloaded(false);
                         media.setFile_url(null);
+                        media.setHasEmbeddedPicture(false);
                         PodDBAdapter adapter = new PodDBAdapter(context);
                         adapter.open();
                         adapter.setMedia(media);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -634,7 +634,7 @@ private void endPlayback(boolean playNextEpisode) {
 
         writePlaybackPreferencesNoMediaPlaying();
         if (nextMedia != null) {
-            stream = !playable.localFileAvailable();
+            stream = !nextMedia.localFileAvailable();
             mediaPlayer.playMediaObject(nextMedia, stream, startWhenPrepared, prepareImmediately);
             sendNotificationBroadcast(NOTIFICATION_TYPE_RELOAD,
                     (nextMedia.getMediaType() == MediaType.VIDEO) ? EXTRA_CODE_VIDEO : EXTRA_CODE_AUDIO);

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -634,7 +634,7 @@ private void endPlayback(boolean playNextEpisode) {
 
         writePlaybackPreferencesNoMediaPlaying();
         if (nextMedia != null) {
-            stream = !playable.localFileAvailable();
+            stream = !nextMedia.localFileAvailable();
             mediaPlayer.playMediaObject(nextMedia, stream, startWhenPrepared, prepareImmediately);
             sendNotificationBroadcast(NOTIFICATION_TYPE_RELOAD,
                     (nextMedia.getMediaType() == MediaType.VIDEO) ? EXTRA_CODE_VIDEO : EXTRA_CODE_AUDIO);

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -341,7 +341,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
         }
 
         contextMenu = menu;
-        FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true, queuedItemsIds);
+        FeedItemMenuHandler.onPrepareMenu(getActivity(), contextMenuInterface, item, true, queuedItemsIds);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -302,7 +302,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
         }
 
         contextMenu = menu;
-        FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true, queuedItemsIds);
+        FeedItemMenuHandler.onPrepareMenu(getActivity(), contextMenuInterface, item, true, queuedItemsIds);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -329,7 +329,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
         for(FeedItem queueItem : queue) {
             queueIds.add(queueItem.getId());
         }
-        FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true, queueIds);
+        FeedItemMenuHandler.onPrepareMenu(getActivity(), contextMenuInterface, item, true, queueIds);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -97,7 +97,7 @@ protected void onDestroy() {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                NavUtils.navigateUpFromSameTask(this);
+                finish();
                 return true;
         }
         return super.onOptionsItemSelected(item);

File: app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -97,7 +97,7 @@ protected void onDestroy() {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                NavUtils.navigateUpFromSameTask(this);
+                finish();
                 return true;
         }
         return super.onOptionsItemSelected(item);

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -214,7 +214,7 @@ protected void download() {
                                     request.getSize()
                     );
                     return;
-                } else if(request.getSoFar() == 0){
+                } else if(request.getSize() > 0 && request.getSoFar() == 0){
                     onFail(DownloadError.ERROR_IO_ERROR, "Download completed, but nothing was read");
                     return;
                 }

File: app/src/main/java/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -120,7 +120,8 @@ public void run() {
                     });
 
                     txtvTitle.setText(feed.getTitle());
-                    txtvDescription.setText(feed.getDescription().trim());
+                    String description = feed.getDescription();
+                    txtvDescription.setText((description != null) ? description.trim() : "");
                     if (feed.getAuthor() != null) {
                         txtvAuthor.setText(feed.getAuthor());
                     }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -403,7 +403,6 @@ public boolean isAutoDownloadable() {
         return this.hasMedia() &&
                 false == this.getMedia().isPlaying() &&
                 false == this.getMedia().isDownloaded() &&
-                false == this.isRead() &&
                 this.getAutoDownload();
     }
 

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -308,10 +308,11 @@ public static void refreshFeed(Context context, Feed feed)
 
     private static void refreshFeed(Context context, Feed feed, boolean loadAllPages) throws DownloadRequestException {
         Feed f;
+        Date lastUpdate = feed.hasLastUpdateFailed() ? new Date(0) : feed.getLastUpdate();
         if (feed.getPreferences() == null) {
-            f = new Feed(feed.getDownload_url(), feed.getLastUpdate(), feed.getTitle());
+            f = new Feed(feed.getDownload_url(), lastUpdate, feed.getTitle());
         } else {
-            f = new Feed(feed.getDownload_url(), feed.getLastUpdate(), feed.getTitle(),
+            f = new Feed(feed.getDownload_url(), lastUpdate, feed.getTitle(),
                     feed.getPreferences().getUsername(), feed.getPreferences().getPassword());
         }
         f.setId(feed.getId());

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -308,10 +308,11 @@ public static void refreshFeed(Context context, Feed feed)
 
     private static void refreshFeed(Context context, Feed feed, boolean loadAllPages) throws DownloadRequestException {
         Feed f;
+        Date lastUpdate = feed.hasLastUpdateFailed() ? new Date(0) : feed.getLastUpdate();
         if (feed.getPreferences() == null) {
-            f = new Feed(feed.getDownload_url(), feed.getLastUpdate(), feed.getTitle());
+            f = new Feed(feed.getDownload_url(), lastUpdate, feed.getTitle());
         } else {
-            f = new Feed(feed.getDownload_url(), feed.getLastUpdate(), feed.getTitle(),
+            f = new Feed(feed.getDownload_url(), lastUpdate, feed.getTitle(),
                     feed.getPreferences().getUsername(), feed.getPreferences().getPassword());
         }
         f.setId(feed.getId());

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -534,7 +534,9 @@ public int getDuration() {
      * Returns the position of the current media object or INVALID_TIME if the position could not be retrieved.
      */
     public int getPosition() {
-        playerLock.lock();
+        if (!playerLock.tryLock()) {
+            return INVALID_TIME;
+        }
 
         int retVal = INVALID_TIME;
         if (playerStatus == PlayerStatus.PLAYING

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -534,7 +534,9 @@ public int getDuration() {
      * Returns the position of the current media object or INVALID_TIME if the position could not be retrieved.
      */
     public int getPosition() {
-        playerLock.lock();
+        if (!playerLock.tryLock()) {
+            return INVALID_TIME;
+        }
 
         int retVal = INVALID_TIME;
         if (playerStatus == PlayerStatus.PLAYING

File: app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java
Patch:
@@ -376,7 +376,7 @@ public void testGetNavDrawerDataQueueEmptyNoUnreadItems() {
         List<Feed> feeds = DBTestUtils.saveFeedlist(context, NUM_FEEDS, NUM_ITEMS, true);
         DBReader.NavDrawerData navDrawerData = DBReader.getNavDrawerData(context);
         assertEquals(NUM_FEEDS, navDrawerData.feeds.size());
-        assertEquals(0, navDrawerData.numUnreadItems);
+        assertEquals(0, navDrawerData.numNewItems);
         assertEquals(0, navDrawerData.queueSize);
     }
 
@@ -405,7 +405,7 @@ public void testGetNavDrawerDataQueueNotEmptyWithUnreadItems() {
 
         DBReader.NavDrawerData navDrawerData = DBReader.getNavDrawerData(context);
         assertEquals(NUM_FEEDS, navDrawerData.feeds.size());
-        assertEquals(NUM_UNREAD, navDrawerData.numUnreadItems);
+        assertEquals(NUM_UNREAD, navDrawerData.numNewItems);
         assertEquals(NUM_QUEUE, navDrawerData.queueSize);
     }
 

File: core/src/androidTest/java/de/danoeh/antennapod/core/tests/util/DateUtilsTest.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core.util;
+package de.danoeh.antennapod.core.tests.util;
 
 
 import android.test.AndroidTestCase;
@@ -7,6 +7,8 @@
 import java.util.GregorianCalendar;
 import java.util.TimeZone;
 
+import de.danoeh.antennapod.core.util.DateUtils;
+
 public class DateUtilsTest extends AndroidTestCase {
 
     public void testParseDateWithMicroseconds() throws Exception {

File: core/src/androidTest/java/de/danoeh/antennapod/core/tests/util/LongLongMapTest.java
Patch:
@@ -1,7 +1,9 @@
-package de.danoeh.antennapod.core.util;
+package de.danoeh.antennapod.core.tests.util;
 
 import android.test.AndroidTestCase;
 
+import de.danoeh.antennapod.core.util.LongIntMap;
+
 public class LongLongMapTest extends AndroidTestCase {
 
     public void testEmptyMap() {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -544,12 +544,12 @@ public void onClick() {
 
         @Override
         public FeedItem getItem(int position) {
-            return (feed != null) ? feed.getItemAtIndex(true, position) : null;
+            return (feed != null) ? feed.getItemAtIndex(position) : null;
         }
 
         @Override
         public int getCount() {
-            return (feed != null) ? feed.getNumOfItems(true) : 0;
+            return (feed != null) ? feed.getNumOfItems() : 0;
         }
 
         @Override

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -129,7 +129,7 @@ public void onClick(DialogInterface dialog, int which, boolean isChecked) {
         builder.setPositiveButton(R.string.confirm_label, new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialog, int which) {
-                feed.setFeedItemsFilter(hidden.toArray(new String[hidden.size()]));
+                feed.setHiddenItemProperties(hidden.toArray(new String[hidden.size()]));
                 DBWriter.setFeedItemsFilter(context, feed.getId(), hidden);
             }
         });

File: app/src/main/java/de/danoeh/antennapod/adapter/FeedItemlistAdapter.java
Patch:
@@ -139,12 +139,10 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                         item.getMedia())) {
                     holder.episodeProgress.setVisibility(View.VISIBLE);
                     holder.episodeProgress.setProgress(((ItemAccess) itemAccess).getItemDownloadProgressPercent(item));
-                    holder.published.setVisibility(View.GONE);
                 } else {
                     if(media.getPosition() == 0) {
                         holder.episodeProgress.setVisibility(View.GONE);
                     }
-                    holder.published.setVisibility(View.VISIBLE);
                 }
 
                 TypedArray typeDrawables = context.obtainStyledAttributes(

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java
Patch:
@@ -39,8 +39,7 @@ public static boolean onPrepareOptionsMenu(Menu menu, Feed selectedFeed) {
         }
 
         Log.d(TAG, "Preparing options menu");
-        menu.findItem(R.id.mark_all_read_item).setVisible(
-                selectedFeed.hasNewItems(true));
+        menu.findItem(R.id.mark_all_read_item).setVisible(selectedFeed.hasNewItems());
         if (selectedFeed.getPaymentLink() != null && selectedFeed.getFlattrStatus().flattrable())
             menu.findItem(R.id.support_item).setVisible(true);
         else

File: app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -72,10 +72,10 @@ public static boolean onPrepareMenu(MenuInterface mi, FeedItem selectedItem,
         }
 
         boolean isInQueue = queueAccess.contains(selectedItem.getId());
-        if(queueAccess.size() == 0 || queueAccess.get(0) != selectedItem.getId()) {
+        if(queueAccess.size() == 0 || queueAccess.get(0) == selectedItem.getId()) {
             mi.setItemVisibility(R.id.move_to_top_item, false);
         }
-        if(queueAccess.size() == 0 || queueAccess.get(queueAccess.size()-1) != selectedItem.getId()) {
+        if(queueAccess.size() == 0 || queueAccess.get(queueAccess.size()-1) == selectedItem.getId()) {
             mi.setItemVisibility(R.id.move_to_bottom_item, false);
         }
         if (!isInQueue || isPlaying) {

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -277,7 +277,7 @@ private View getFeedView(int feedPos, View convertView, ViewGroup parent) {
             holder.count.setText(String.valueOf(feedUnreadItems));
             holder.count.setTypeface(holder.title.getTypeface());
         } else {
-            holder.count.setVisibility(View.GONE);
+            holder.count.setVisibility(View.INVISIBLE);
         }
         return convertView;
     }

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -329,7 +329,7 @@ public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMen
         for(FeedItem queueItem : queue) {
             queueIds.add(queueItem.getId());
         }
-        FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, false, queueIds);
+        FeedItemMenuHandler.onPrepareMenu(contextMenuInterface, item, true, queueIds);
     }
 
     @Override
@@ -352,7 +352,6 @@ public boolean onContextItemSelected(MenuItem item) {
     }
 
 
-
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         super.onCreateView(inflater, container, savedInstanceState);
@@ -435,7 +434,6 @@ public void onHide(FeedItemUndoToken token) {
 
         });
 
-
         registerForContextMenu(listView);
 
         if (!itemsLoaded) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -193,7 +193,7 @@ private void playMediaObject(final Playable playable, final boolean forceReset,
                     if(oldMedia.hasAlmostEnded()) {
                         Log.d(TAG, "smart mark as read");
                         FeedItem item = oldMedia.getItem();
-                        // DBWriter.markItemRead(context, item, true, false);
+                        DBWriter.markItemRead(context, item, true, false);
                         DBWriter.removeQueueItem(context, item, false);
                         DBWriter.addItemToPlaybackHistory(context, oldMedia);
                         if (UserPreferences.isAutoDelete()) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -319,7 +319,7 @@ private static Feed extractFeedFromCursorRow(PodDBAdapter adapter,
                 cursor.getInt(PodDBAdapter.IDX_FEED_SEL_STD_IS_PAGED) > 0,
                 cursor.getString(PodDBAdapter.IDX_FEED_SEL_STD_NEXT_PAGE_LINK),
                 cursor.getString(cursor.getColumnIndex(PodDBAdapter.KEY_HIDE)),
-                cursor.getInt(PodDBAdapter.IDX_FEED_SEL_STD_LAST_UPDATE_FAILED) > 0
+                cursor.getInt(cursor.getColumnIndex(PodDBAdapter.KEY_LAST_UPDATE_FAILED)) > 0
                 );
 
         if (image != null) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java
Patch:
@@ -302,6 +302,7 @@ public static void loadNextPageOfFeed(final Context context, Feed feed, boolean
      */
     public static void refreshFeed(Context context, Feed feed)
             throws DownloadRequestException {
+        Log.d(TAG, "id " + feed.getId());
         refreshFeed(context, feed, false);
     }
 

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.test.ActivityInstrumentationTestCase2;
+import android.test.FlakyTest;
 import android.widget.ListView;
 
 import com.robotium.solo.Solo;
@@ -85,6 +86,7 @@ public void testAddFeed() throws Exception {
         solo.waitForText(solo.getString(R.string.subscribed_label));
     }
 
+    @FlakyTest(tolerance = 3)
     public void testClickNavDrawer() throws Exception {
         uiTestUtils.addLocalFeedData(false);
 
@@ -142,6 +144,7 @@ private String getActionbarTitle() {
         return ((MainActivity)solo.getCurrentActivity()).getMainActivtyActionBar().getTitle().toString();
     }
 
+    @FlakyTest(tolerance = 3)
     public void testGoToPreferences() {
         openNavDrawer();
         solo.clickOnText(solo.getString(R.string.settings_label));

File: core/src/androidTest/java/de/danoeh/antennapod/core/test/ApplicationTest.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core;
+package de.danoeh.antennapod.core.test;
 
 import android.app.Application;
 import android.test.ApplicationTestCase;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -418,8 +418,7 @@ public void run() {
 
                                 if (item != null) {
                                     // add item to either front ot back of queue
-                                    boolean addToFront = PreferenceManager.getDefaultSharedPreferences(context)
-                                            .getBoolean(UserPreferences.PREF_QUEUE_ADD_TO_FRONT, false);
+                                    boolean addToFront = UserPreferences.enqueueAtFront();
 
                                     if(addToFront){
                                         queue.add(0, item);

File: core/src/main/java/de/danoeh/antennapod/core/util/gui/UndoBarController.java
Patch:
@@ -88,7 +88,8 @@ public boolean isShowing() {
     }
 
     public void close() {
-        mHideHandler.post(mHideRunnable);
+        hideUndoBar(true);
+        mUndoListener.onHide(mUndoToken);
     }
 
     public void hideUndoBar(boolean immediate) {

File: core/src/main/java/de/danoeh/antennapod/core/gpoddernet/model/GpodnetEpisodeAction.java
Patch:
@@ -258,7 +258,7 @@ public static class Builder {
         private int total = -1;
 
         public Builder(FeedItem item, Action action) {
-            this(item.getFeed().getDownload_url(), item.getItemIdentifier(), action);
+            this(item.getFeed().getDownload_url(), item.getMedia().getDownload_url(), action);
         }
 
         public Builder(String podcast, String episode, Action action) {

File: core/src/main/java/de/danoeh/antennapod/core/preferences/GpodnetPreferences.java
Patch:
@@ -173,7 +173,7 @@ public static void addAddedFeed(String feed) {
             writePreference(PREF_SYNC_REMOVED, removedFeeds);
         }
         feedListLock.unlock();
-        GpodnetSyncService.sendSyncIntent(ClientConfig.applicationCallbacks.getApplicationInstance());
+        GpodnetSyncService.sendSyncSubscriptionsIntent(ClientConfig.applicationCallbacks.getApplicationInstance());
     }
 
     public static void addRemovedFeed(String feed) {
@@ -186,7 +186,7 @@ public static void addRemovedFeed(String feed) {
             writePreference(PREF_SYNC_ADDED, addedFeeds);
         }
         feedListLock.unlock();
-        GpodnetSyncService.sendSyncIntent(ClientConfig.applicationCallbacks.getApplicationInstance());
+        GpodnetSyncService.sendSyncSubscriptionsIntent(ClientConfig.applicationCallbacks.getApplicationInstance());
     }
 
     public static Set<String> getAddedFeedsCopy() {
@@ -225,6 +225,7 @@ public static synchronized void enqueueEpisodeAction(GpodnetEpisodeAction action
         ensurePreferencesLoaded();
         queuedEpisodeActions.add(action);
         writePreference(PREF_SYNC_EPISODE_ACTIONS, writeEpisodeActionsToString(queuedEpisodeActions));
+        GpodnetSyncService.sendSyncActionsIntent(ClientConfig.applicationCallbacks.getApplicationInstance());
     }
 
     public static List<GpodnetEpisodeAction> getQueuedEpisodeActions() {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -318,7 +318,7 @@ public String call() throws Exception {
 
     @Override
     public Uri getImageUri() {
-        if(media.hasEmbeddedPicture()) {
+        if(media != null && media.hasEmbeddedPicture()) {
             return media.getImageUri();
         } else if (hasItemImageDownloaded()) {
            return image.getImageUri();

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/GpodnetMainFragment.java
Patch:
@@ -31,8 +31,8 @@ public class GpodnetPagerAdapter extends FragmentPagerAdapter {
 
 
         private static final int NUM_PAGES = 2;
-        private static final int POS_TAGS = 0;
-        private static final int POS_TOPLIST = 1;
+        private static final int POS_TOPLIST = 0;
+        private static final int POS_TAGS = 1;
         private static final int POS_SUGGESTIONS = 2;
 
         Resources resources;

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -318,7 +318,7 @@ public String call() throws Exception {
 
     @Override
     public Uri getImageUri() {
-        if(media.hasEmbeddedPicture()) {
+        if(media != null && media.hasEmbeddedPicture()) {
             return media.getImageUri();
         } else if (hasItemImageDownloaded()) {
            return image.getImageUri();

File: app/src/main/java/de/danoeh/antennapod/fragment/gpodnet/GpodnetMainFragment.java
Patch:
@@ -31,8 +31,8 @@ public class GpodnetPagerAdapter extends FragmentPagerAdapter {
 
 
         private static final int NUM_PAGES = 2;
-        private static final int POS_TAGS = 0;
-        private static final int POS_TOPLIST = 1;
+        private static final int POS_TOPLIST = 0;
+        private static final int POS_TAGS = 1;
         private static final int POS_SUGGESTIONS = 2;
 
         Resources resources;

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -397,7 +397,7 @@ public static boolean shouldPauseForFocusLoss() {
     }
 
     public static boolean shouldResumeAfterCall() {
-        instanceAvailable();;
+        instanceAvailable();
         return instance.resumeAfterCall;
     }
 
@@ -463,7 +463,7 @@ public void onSharedPreferenceChanged(SharedPreferences sp, String key) {
         } else if (key.equals(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS)) {
             pauseForFocusLoss = sp.getBoolean(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS, false);
         } else if (key.equals(PREF_RESUME_AFTER_CALL)) {
-            resumeAfterCall = sp.getBoolean(PREF_RESUME_AFTER_CALL, false);
+            resumeAfterCall = sp.getBoolean(PREF_RESUME_AFTER_CALL, true);
         } else if (key.equals(PREF_FAST_FORWARD_SECS)) {
             fastForwardSecs = sp.getInt(PREF_FAST_FORWARD_SECS, 30);
         } else if (key.equals(PREF_REWIND_SECS)) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -40,7 +40,7 @@
  * Manages the MediaPlayer object of the PlaybackService.
  */
 public class PlaybackServiceMediaPlayer {
-    public static final String TAG = "PlaybackServiceMediaPlayer";
+    public static final String TAG = "PlaybackSvcMediaPlayer";
 
     /**
      * Return value of some PSMP methods if the method call failed.
@@ -799,10 +799,10 @@ public void run() {
                     // If there is an incoming call, playback should be paused permanently
                     TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
                     final int callState = (tm != null) ? tm.getCallState() : 0;
-                    Log.d(TAG, "Call state: " + callState);
                     Log.i(TAG, "Call state:" + callState);
 
-                    if (focusChange == AudioManager.AUDIOFOCUS_LOSS || callState != TelephonyManager.CALL_STATE_IDLE) {
+                    if (focusChange == AudioManager.AUDIOFOCUS_LOSS ||
+                            (!UserPreferences.shouldResumeAfterCall() && callState != TelephonyManager.CALL_STATE_IDLE)) {
                         Log.d(TAG, "Lost audio focus");
                         pause(true, false);
                         callback.shouldStop();

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -315,10 +315,10 @@ public String call() throws Exception {
 
     @Override
     public Uri getImageUri() {
-        if (hasItemImageDownloaded()) {
-           return image.getImageUri();
-        } else if (hasMedia()) {
+        if(media.hasEmbeddedPicture()) {
             return media.getImageUri();
+        } else if (hasItemImageDownloaded()) {
+           return image.getImageUri();
         } else if (feed != null) {
             return feed.getImageUri();
         } else {

File: core/src/main/java/de/danoeh/antennapod/core/feed/QueueEvent.java
Patch:
@@ -8,7 +8,7 @@
 public class QueueEvent {
 
     public enum Action {
-        ADDED, ADDED_ITEMS, REMOVED, CLEARED, DELETED_MEDIA, SORTED
+        ADDED, ADDED_ITEMS, REMOVED, CLEARED, DELETED_MEDIA, SORTED, MOVED
     }
 
     public final Action action;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -608,8 +608,7 @@ private static void moveQueueItemHelper(final Context context, final int from,
 
                 adapter.setQueue(queue);
                 if (broadcastUpdate) {
-                    EventBus.getDefault().post(new QueueEvent(QueueEvent.Action.REMOVED, item));
-                    EventBus.getDefault().post(new QueueEvent(QueueEvent.Action.ADDED, item, to));
+                    EventBus.getDefault().post(new QueueEvent(QueueEvent.Action.MOVED, item, to));
                 }
 
             }

File: core/src/main/java/de/danoeh/antennapod/core/feed/QueueEvent.java
Patch:
@@ -8,7 +8,7 @@
 public class QueueEvent {
 
     public enum Action {
-        ADDED, ADDED_ITEMS, REMOVED, CLEARED, DELETED_MEDIA, SORTED
+        ADDED, ADDED_ITEMS, REMOVED, CLEARED, DELETED_MEDIA, SORTED, MOVED
     }
 
     public final Action action;

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java
Patch:
@@ -608,8 +608,7 @@ private static void moveQueueItemHelper(final Context context, final int from,
 
                 adapter.setQueue(queue);
                 if (broadcastUpdate) {
-                    EventBus.getDefault().post(new QueueEvent(QueueEvent.Action.REMOVED, item));
-                    EventBus.getDefault().post(new QueueEvent(QueueEvent.Action.ADDED, item, to));
+                    EventBus.getDefault().post(new QueueEvent(QueueEvent.Action.MOVED, item, to));
                 }
 
             }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -63,7 +63,7 @@ public class MainActivity extends ActionBarActivity implements NavDrawerActivity
 
     public static final String PREF_NAME = "MainActivityPrefs";
     public static final String PREF_IS_FIRST_LAUNCH = "prefMainActivityIsFirstLaunch";
-    public static final String PREF_LAST_FRAGMENT = "prefMainActivityLastFragment";
+    public static final String PREF_LAST_FRAGMENT_TAG = "prefMainActivityLastFragmentTag";
 
     public static final String EXTRA_NAV_TYPE = "nav_type";
     public static final String EXTRA_NAV_INDEX = "nav_index";
@@ -178,13 +178,13 @@ public void onClick(View v) {
     private void saveLastNavFragment(String tag) {
         SharedPreferences prefs = getSharedPreferences(PREF_NAME, MODE_PRIVATE);
         SharedPreferences.Editor edit = prefs.edit();
-        edit.putString(PREF_LAST_FRAGMENT, tag);
+        edit.putString(PREF_LAST_FRAGMENT_TAG, tag);
         edit.commit();
     }
 
     private String getLastNavFragment() {
         SharedPreferences prefs = getSharedPreferences(PREF_NAME, MODE_PRIVATE);
-        return prefs.getString(PREF_LAST_FRAGMENT, QueueFragment.TAG);
+        return prefs.getString(PREF_LAST_FRAGMENT_TAG, QueueFragment.TAG);
     }
 
     private void checkFirstLaunch() {

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -144,7 +144,7 @@ private String getActionbarTitle() {
 
     public void testGoToPreferences() {
         openNavDrawer();
-        solo.clickOnMenuItem(solo.getString(R.string.settings_label));
+        solo.clickOnText(solo.getString(R.string.settings_label));
         solo.waitForActivity(PreferenceController.getPreferenceActivity());
     }
 

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -413,6 +413,7 @@ protected void setupGUI() {
         butShowCover = (ImageButton) findViewById(R.id.butCover);
         txtvTitle = (TextView) findViewById(R.id.txtvTitle);
 
+        /*
         drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, R.string.drawer_open, R.string.drawer_close) {
             CharSequence currentTitle = getSupportActionBar().getTitle();
 
@@ -430,7 +431,7 @@ public void onDrawerClosed(View drawerView) {
                 getSupportActionBar().setTitle(currentTitle);
                 supportInvalidateOptionsMenu();
             }
-        };
+        }; */
 
         drawerToggle.setDrawerIndicatorEnabled(false);
         drawerLayout.setDrawerListener(drawerToggle);

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -546,12 +546,12 @@ public static void setAutoFlattrSettings(Context context, boolean enabled, float
 
     public static void setHiddenDrawerItems(Context context, List<String> items) {
         instanceAvailable();
+        instance.hiddenDrawerItems = items;
         String str = StringUtils.join(items, ',');
         PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext())
                 .edit()
                 .putString(PREF_HIDDEN_DRAWER_ITEMS, str)
                 .commit();
-        instance.hiddenDrawerItems = items;
     }
 
 

File: app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java
Patch:
@@ -41,6 +41,7 @@
 import de.danoeh.antennapod.core.storage.DBTasks;
 import de.danoeh.antennapod.core.storage.DBWriter;
 import de.danoeh.antennapod.core.storage.DownloadRequester;
+import de.danoeh.antennapod.core.util.LongList;
 import de.danoeh.antennapod.core.util.QueueAccess;
 import de.danoeh.antennapod.menuhandler.MenuItemUtils;
 import de.danoeh.antennapod.menuhandler.NavDrawerActivity;
@@ -70,7 +71,7 @@ public class AllEpisodesFragment extends Fragment {
 
     private List<FeedItem> unreadItems;
     private List<FeedItem> recentItems;
-    private QueueAccess queueAccess;
+    private LongList queueAccess;
     private List<Downloader> downloaderList;
 
     private boolean itemsLoaded = false;
@@ -448,7 +449,7 @@ protected void onPostExecute(Object[] lists) {
             if (lists != null) {
                 unreadItems = (List<FeedItem>) lists[0];
                 recentItems = (List<FeedItem>) lists[1];
-                queueAccess = (QueueAccess) lists[2];
+                queueAccess = (LongList) lists[2];
                 itemsLoaded = true;
                 if (viewsCreated && activity.get() != null) {
                     onFragmentLoaded();

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -40,9 +40,7 @@ public NewEpisodesFragment() {
 
     public void onEvent(QueueEvent event) {
         Log.d(TAG, "onEvent(" + event + ")");
-        if(event.action == QueueEvent.Action.ADDED) {
-            startItemLoader();
-        }
+        startItemLoader();
     }
 
     @Override

File: core/src/main/java/de/danoeh/antennapod/core/util/DateUtils.java
Patch:
@@ -1,5 +1,7 @@
 package de.danoeh.antennapod.core.util;
 
+import android.util.Log;
+
 import org.apache.commons.lang3.StringUtils;
 
 import java.text.ParsePosition;
@@ -96,6 +98,7 @@ public static Date parse(String date) {
                 return result;
             }
         }
+        Log.d(TAG, "Could not parse '" + date + "'");
         return null;
     }
 

File: app/src/androidTest/java/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -79,7 +79,7 @@ private void skipEpisode() {
     private void startLocalPlayback() {
         assertTrue(solo.waitForActivity(MainActivity.class));
         openNavDrawer();
-        solo.clickOnText(solo.getString(R.string.new_episodes_label));
+        solo.clickOnText(solo.getString(R.string.all_episodes_label));
         solo.waitForView(android.R.id.list);
         solo.clickOnView(solo.getView(R.id.butSecondaryAction));
         assertTrue(solo.waitForActivity(AudioplayerActivity.class));

File: app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java
Patch:
@@ -38,7 +38,7 @@ public NavListAdapter(ItemAccess itemAccess, Context context) {
         this.itemAccess = itemAccess;
         this.context = context;
 
-        TypedArray ta = context.obtainStyledAttributes(new int[]{R.attr.ic_new, R.attr.stat_playlist,
+        TypedArray ta = context.obtainStyledAttributes(new int[]{R.attr.stat_playlist, R.attr.ic_new,
                 R.attr.av_download, R.attr.ic_history, R.attr.content_new});
         drawables = new Drawable[]{ta.getDrawable(0), ta.getDrawable(1), ta.getDrawable(2),
                 ta.getDrawable(3), ta.getDrawable(4)};

File: app/src/main/java/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -379,7 +379,7 @@ public void update(EventDistributor eventDistributor, Integer arg) {
 
     private void updateShowOnlyEpisodes() {
         SharedPreferences prefs = getActivity().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);
-        showOnlyNewEpisodes = prefs.getBoolean(PREF_EPISODE_FILTER_BOOL, false);
+        showOnlyNewEpisodes = prefs.getBoolean(PREF_EPISODE_FILTER_BOOL, true);
     }
 
     private void setShowOnlyNewEpisodes(boolean newVal) {

File: app/src/main/java/de/danoeh/antennapod/activity/DefaultOnlineFeedViewActivity.java
Patch:
@@ -138,7 +138,7 @@ protected void showFeedInformation(final Feed feed, final Map<String, String> al
             @Override
             public void onClick(View v) {
                 try {
-                    Feed f = new Feed(selectedDownloadUrl, new Date(), feed.getTitle());
+                    Feed f = new Feed(selectedDownloadUrl, new Date(0), feed.getTitle());
                     f.setPreferences(feed.getPreferences());
                     DefaultOnlineFeedViewActivity.this.feed = f;
 

File: core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
Patch:
@@ -7,6 +7,7 @@
 import com.squareup.okhttp.Request;
 import com.squareup.okhttp.Response;
 import com.squareup.okhttp.ResponseBody;
+import com.squareup.okhttp.internal.http.HttpDate;
 
 import org.apache.commons.io.IOUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -93,7 +94,7 @@ protected void download() {
                 request.setSoFar(destination.length());
                 httpReq.addHeader("Range",
                         "bytes=" + request.getSoFar() + "-");
-                if (BuildConfig.DEBUG) Log.d(TAG, "Adding range header: " + request.getSoFar());
+                Log.d(TAG, "Adding range header: " + request.getSoFar());
             }
 
             Response response = httpClient.newCall(httpReq.build()).execute();

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -135,8 +135,8 @@ public void updateFromOther(FeedItem other) {
         if (other.media != null) {
             if (media == null) {
                 setMedia(other.media);
-            } else if (media.compareWithOther(other)) {
-                media.updateFromOther(other);
+            } else if (media.compareWithOther(other.media)) {
+                media.updateFromOther(other.media);
             }
         }
         if (other.paymentLink != null) {

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -135,8 +135,8 @@ public void updateFromOther(FeedItem other) {
         if (other.media != null) {
             if (media == null) {
                 setMedia(other.media);
-            } else if (media.compareWithOther(other)) {
-                media.updateFromOther(other);
+            } else if (media.compareWithOther(other.media)) {
+                media.updateFromOther(other.media);
             }
         }
         if (other.paymentLink != null) {

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlExportWorker.java
Patch:
@@ -24,10 +24,10 @@
  */
 public class OpmlExportWorker extends AsyncTask<Void, Void, Void> {
     private static final String TAG = "OpmlExportWorker";
-    public static final String DEFAULT_OUTPUT_NAME = "antennapod-feeds.opml";
+    private static final String DEFAULT_OUTPUT_NAME = "antennapod-feeds.opml";
     public static final String EXPORT_DIR = "export/";
 
-    private final Context context;
+    private Context context;
     private File output;
 
     private ProgressDialog progDialog;

File: app/src/main/java/de/danoeh/antennapod/asynctask/OpmlExportWorker.java
Patch:
@@ -24,10 +24,10 @@
  */
 public class OpmlExportWorker extends AsyncTask<Void, Void, Void> {
     private static final String TAG = "OpmlExportWorker";
-    private static final String DEFAULT_OUTPUT_NAME = "antennapod-feeds.opml";
+    public static final String DEFAULT_OUTPUT_NAME = "antennapod-feeds.opml";
     public static final String EXPORT_DIR = "export/";
 
-    private Context context;
+    private final Context context;
     private File output;
 
     private ProgressDialog progDialog;

File: core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java
Patch:
@@ -76,7 +76,7 @@ public int compare(FeedItem lhs, FeedItem rhs) {
 
     @Override
     public Integer getDefaultCleanupParameter(Context context) {
-        return 0;
+        return getPerformAutoCleanupArgs(context, 0);
     }
 
     @Override

File: app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -175,6 +175,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
                         DBTasks.refreshAllFeeds(getActivity(), feeds);
                     }
                     return true;
+                case R.id.clear_queue:
+                    DBWriter.clearQueue(getActivity());
+                    return true;
                 case R.id.queue_sort_alpha_asc:
                     QueueSorter.sort(getActivity(), QueueSorter.Rule.ALPHA_ASC, true);
                     return true;

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -144,7 +144,7 @@ public void onBackStackChanged() {
         if (mainFragment != null) {
             transaction.replace(R.id.main_view, mainFragment);
         } else {
-            loadFragment(NavListAdapter.VIEW_TYPE_NAV, POS_NEW, null);
+            loadFragment(NavListAdapter.VIEW_TYPE_NAV, POS_QUEUE, null);
         }
 
         externalPlayerFragment = new ExternalPlayerFragment();

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -195,6 +195,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                         if (newValue instanceof Boolean) {
                             ui.findPreference(UserPreferences.PREF_ENABLE_AUTODL_WIFI_FILTER).setEnabled((Boolean) newValue);
                             setSelectedNetworksEnabled((Boolean) newValue && UserPreferences.isEnableAutodownloadWifiFilter());
+                            ui.findPreference(UserPreferences.PREF_ENABLE_AUTODL_ON_BATTERY).setEnabled((Boolean) newValue);
                         }
                         return true;
                     }
@@ -376,6 +377,8 @@ private void checkItemVisibility() {
         setSelectedNetworksEnabled(UserPreferences.isEnableAutodownload()
                 && UserPreferences.isEnableAutodownloadWifiFilter());
 
+        ui.findPreference(UserPreferences.PREF_ENABLE_AUTODL_ON_BATTERY)
+                .setEnabled(UserPreferences.isEnableAutodownload());
     }
 
     private void setEpisodeCacheSizeText(int cacheSize) {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -255,8 +255,7 @@ public synchronized void cancelDownload(final Context context, final String down
      * Cancels all running downloads
      */
     public synchronized void cancelAllDownloads(Context context) {
-        if (BuildConfig.DEBUG)
-            Log.d(TAG, "Cancelling all running downloads");
+        Log.d(TAG, "Cancelling all running downloads");
         context.sendBroadcast(new Intent(
                 DownloadService.ACTION_CANCEL_ALL_DOWNLOADS));
     }

File: core/src/main/java/de/danoeh/antennapod/core/feed/FeedItem.java
Patch:
@@ -143,7 +143,7 @@ public void updateFromOther(FeedItem other) {
             paymentLink = other.paymentLink;
         }
         if (other.chapters != null) {
-            if (chapters == null) {
+            if (!hasChapters) {
                 chapters = other.chapters;
             }
         }

File: app/src/main/java/de/danoeh/antennapod/preferences/PreferenceController.java
Patch:
@@ -195,6 +195,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                         if (newValue instanceof Boolean) {
                             ui.findPreference(UserPreferences.PREF_ENABLE_AUTODL_WIFI_FILTER).setEnabled((Boolean) newValue);
                             setSelectedNetworksEnabled((Boolean) newValue && UserPreferences.isEnableAutodownloadWifiFilter());
+                            ui.findPreference(UserPreferences.PREF_ENABLE_AUTODL_ON_BATTERY).setEnabled((Boolean) newValue);
                         }
                         return true;
                     }
@@ -376,6 +377,8 @@ private void checkItemVisibility() {
         setSelectedNetworksEnabled(UserPreferences.isEnableAutodownload()
                 && UserPreferences.isEnableAutodownloadWifiFilter());
 
+        ui.findPreference(UserPreferences.PREF_ENABLE_AUTODL_ON_BATTERY)
+                .setEnabled(UserPreferences.isEnableAutodownload());
     }
 
     private void setEpisodeCacheSizeText(int cacheSize) {

File: app/src/main/java/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -377,6 +377,7 @@ private void setupHeaderView() {
                 .placeholder(R.color.image_readability_tint)
                 .error(R.color.image_readability_tint)
                 .transform(PicassoProvider.blurTransformation)
+                .resize(PicassoProvider.BLUR_IMAGE_SIZE, PicassoProvider.BLUR_IMAGE_SIZE)
                 .into(imgvBackground);
 
         Picasso.with(getActivity())

File: core/src/main/java/de/danoeh/antennapod/core/asynctask/PicassoProvider.java
Patch:
@@ -211,7 +211,8 @@ private static void calculateInSampleSize(int reqWidth, int reqHeight, int width
         }
     }
 
-    public static final int BLUR_RADIUS = 10;
+    public static final int BLUR_RADIUS = 1;
+    public static final int BLUR_IMAGE_SIZE = 100;
     public static final String BLUR_KEY = "blur";
 
     public static final Transformation blurTransformation = new Transformation() {

File: core/src/main/java/de/danoeh/antennapod/core/storage/DownloadRequester.java
Patch:
@@ -92,8 +92,9 @@ public synchronized boolean download(Context context, DownloadRequest request) {
 
     private void download(Context context, FeedFile item, FeedFile container, File dest,
                           boolean overwriteIfExists, String username, String password, boolean deleteOnFailure, Bundle arguments) {
+        final boolean partiallyDownloadedFileExists = item.getFile_url() != null;
         if (!isDownloadingFile(item)) {
-            if (!isFilenameAvailable(dest.toString()) || (deleteOnFailure && dest.exists())) {
+            if (!isFilenameAvailable(dest.toString()) || (!partiallyDownloadedFileExists && dest.exists())) {
                 if (BuildConfig.DEBUG)
                     Log.d(TAG, "Filename already used.");
                 if (isFilenameAvailable(dest.toString()) && overwriteIfExists) {

File: core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java
Patch:
@@ -423,7 +423,7 @@ public void statusChanged(PlaybackServiceMediaPlayer.PSMPInfo newInfo) {
                         // do not remove notification on pause based on user pref and whether android version supports expanded notifications
                         // Change [Play] button to [Pause]
                         setupNotification(newInfo);
-                    } else {
+                    } else if (!UserPreferences.isPersistNotify()) {
                         // remove notifcation on pause
                         stopForeground(true);
                     }

File: app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -96,6 +96,8 @@ public void onCreate(Bundle savedInstanceState) {
 
         toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
+        getSupportActionBar().setElevation(3.0f);
+
         drawerTitle = currentTitle = getTitle();
 
         drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);

File: core/src/main/java/de/danoeh/antennapod/core/syndication/namespace/NSITunes.java
Patch:
@@ -50,7 +50,7 @@ public void handleElementEnd(String localName, HandlerState state) {
         if (localName.equals(AUTHOR)) {
             state.getFeed().setAuthor(state.getContentBuf().toString());
         } else if (localName.equals(DURATION)) {
-            String[] parts = state.getContentBuf().toString().split(":");
+            String[] parts = state.getContentBuf().toString().trim().split(":");
             try {
                 int duration = 0;
                 if (parts.length == 2) {

File: app/src/main/java/de/danoeh/antennapod/activity/DefaultOnlineFeedViewActivity.java
Patch:
@@ -123,7 +123,7 @@ protected void showFeedInformation(final Feed feed, final Map<String, String> al
 
         subscribeButton = (Button) header.findViewById(R.id.butSubscribe);
 
-        if (feed.getImage() != null && StringUtils.isNoneBlank(feed.getImage().getDownload_url())) {
+        if (feed.getImage() != null && StringUtils.isNotBlank(feed.getImage().getDownload_url())) {
             Picasso.with(this)
                     .load(feed.getImage().getDownload_url())
                     .fit()

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -20,6 +20,7 @@
 import java.util.List;
 import java.util.concurrent.TimeUnit;
 
+import de.danoeh.antennapod.core.ApplicationCallbacks;
 import de.danoeh.antennapod.core.BuildConfig;
 import de.danoeh.antennapod.core.ClientConfig;
 import de.danoeh.antennapod.core.R;
@@ -582,8 +583,7 @@ public static void restartUpdateAlarm(long triggerAtMillis, long intervalMillis)
         AlarmManager alarmManager = (AlarmManager) instance.context
                 .getSystemService(Context.ALARM_SERVICE);
         PendingIntent updateIntent = PendingIntent.getBroadcast(
-                instance.context, 0, new Intent(
-                        FeedUpdateReceiver.ACTION_REFRESH_FEEDS), 0);
+                instance.context, 0, new Intent(ClientConfig.applicationCallbacks.getApplicationInstance(), FeedUpdateReceiver.class), 0);
         alarmManager.cancel(updateIntent);
         if (intervalMillis != 0) {
             alarmManager.setRepeating(AlarmManager.RTC_WAKEUP, triggerAtMillis, intervalMillis,

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -417,8 +417,8 @@ private void handleStatus() {
             pauseResource = res.getResourceId(1, R.drawable.ic_pause_grey600_36dp);
             res.recycle();
         } else {
-            playResource = R.drawable.ic_action_play_over_video;
-            pauseResource = R.drawable.ic_action_pause_over_video;
+            playResource = R.drawable.ic_av_play_circle_outline_80dp;
+            pauseResource = R.drawable.ic_av_pause_circle_outline_80dp;
         }
 
         switch (status) {

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -417,8 +417,8 @@ private void handleStatus() {
             pauseResource = res.getResourceId(1, R.drawable.ic_pause_grey600_36dp);
             res.recycle();
         } else {
-            playResource = R.drawable.ic_action_play_over_video;
-            pauseResource = R.drawable.ic_action_pause_over_video;
+            playResource = R.drawable.ic_av_play_circle_outline_80dp;
+            pauseResource = R.drawable.ic_av_pause_circle_outline_80dp;
         }
 
         switch (status) {

File: app/src/main/java/de/danoeh/antennapod/adapter/gpodnet/PodcastListAdapter.java
Patch:
@@ -49,7 +49,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
         holder.title.setText(podcast.getTitle());
 
-        if (StringUtils.isNoneBlank(podcast.getLogoUrl())) {
+        if (StringUtils.isNotBlank(podcast.getLogoUrl())) {
             Picasso.with(convertView.getContext())
                     .load(podcast.getLogoUrl())
                     .fit()

File: core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java
Patch:
@@ -549,7 +549,6 @@ public static List<FeedItem> getRecentlyPublishedEpisodes(Context context, int l
     public static List<FeedItem> getPlaybackHistory(final Context context) {
         if (BuildConfig.DEBUG)
             Log.d(TAG, "Loading playback history");
-        final int PLAYBACK_HISTORY_SIZE = 50;
 
         PodDBAdapter adapter = new PodDBAdapter(context);
         adapter.open();

File: core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java
Patch:
@@ -1037,8 +1037,8 @@ public final Cursor getCompletedMediaCursor(int limit) {
         Validate.isTrue(limit >= 0, "Limit must be >= 0");
 
         Cursor c = db.query(TABLE_NAME_FEED_MEDIA, null,
-                KEY_PLAYBACK_COMPLETION_DATE + " > 0 LIMIT " + limit, null, null,
-                null, null);
+                KEY_PLAYBACK_COMPLETION_DATE + " > 0", null, null,
+                null, String.format("%s DESC LIMIT %d", KEY_PLAYBACK_COMPLETION_DATE, limit));
         return c;
     }
 

File: app/src/androidTest/java/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -8,9 +8,10 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.MainActivity;
-import de.danoeh.antennapod.activity.PreferenceActivity;
+import de.danoeh.antennapod.activity.PreferenceActivityGingerbread;
 import de.danoeh.antennapod.core.feed.Feed;
 import de.danoeh.antennapod.core.storage.PodDBAdapter;
+import de.danoeh.antennapod.preferences.PreferenceController;
 
 /**
  * User interface tests for MainActivity
@@ -110,6 +111,6 @@ private String getActionbarTitle() {
     public void testGoToPreferences() {
         solo.setNavigationDrawer(Solo.CLOSED);
         solo.clickOnMenuItem(solo.getString(R.string.settings_label));
-        solo.waitForActivity(PreferenceActivity.class);
+        solo.waitForActivity(PreferenceController.getPreferenceActivity());
     }
 }

File: app/src/main/java/de/danoeh/antennapod/activity/FlattrAuthActivity.java
Patch:
@@ -16,6 +16,8 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.core.preferences.UserPreferences;
 import de.danoeh.antennapod.core.util.flattr.FlattrUtils;
+import de.danoeh.antennapod.preferences.PreferenceController;
+
 import org.shredzone.flattr4j.exception.FlattrException;
 
 /** Guides the user through the authentication process */
@@ -108,7 +110,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
 			if (authSuccessful) {
-				Intent intent = new Intent(this, PreferenceActivity.class);
+				Intent intent = new Intent(this, PreferenceController.getPreferenceActivity());
 				intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
 				startActivity(intent);
 			} else {

File: app/src/main/java/de/danoeh/antennapod/adapter/ActionButtonUtils.java
Patch:
@@ -27,7 +27,7 @@ public ActionButtonUtils(Context context) {
 
         this.context = context;
         drawables = context.obtainStyledAttributes(new int[]{
-                R.attr.av_play, R.attr.navigation_cancel, R.attr.av_download, R.attr.navigation_chapters, R.attr.navigation_accept});
+                R.attr.av_play, R.attr.navigation_cancel, R.attr.av_download, R.attr.av_pause, R.attr.navigation_accept});
         labels = new int[]{R.string.play_label, R.string.cancel_download_label, R.string.download_label, R.string.mark_read_label};
     }
 

File: app/src/main/java/de/danoeh/antennapod/adapter/DownloadedEpisodesListAdapter.java
Patch:
@@ -72,7 +72,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         }
 
         holder.title.setText(item.getTitle());
-        holder.pubDate.setText(DateUtils.formatDateTime(context, item.getPubDate().getTime(), DateUtils.FORMAT_SHOW_DATE));
+        holder.pubDate.setText(DateUtils.formatDateTime(context, item.getPubDate().getTime(), DateUtils.FORMAT_ABBREV_ALL));
         holder.txtvSize.setText(Converter.byteToString(item.getMedia().getSize()));
         FeedItem.State state = item.getState();
 

File: app/src/main/java/de/danoeh/antennapod/adapter/gpodnet/PodcastListAdapter.java
Patch:
@@ -39,7 +39,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
             convertView = inflater.inflate(R.layout.gpodnet_podcast_listitem, parent, false);
             holder.title = (TextView) convertView.findViewById(R.id.txtvTitle);
-            holder.description = (TextView) convertView.findViewById(R.id.txtvDescription);
             holder.image = (ImageView) convertView.findViewById(R.id.imgvCover);
 
             convertView.setTag(holder);
@@ -48,7 +47,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
         }
 
         holder.title.setText(podcast.getTitle());
-        holder.description.setText(podcast.getDescription());
 
         if (StringUtils.isNoneBlank(podcast.getLogoUrl())) {
             PicassoProvider.getDefaultPicassoInstance(convertView.getContext())
@@ -62,7 +60,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
     static class Holder {
         TextView title;
-        TextView description;
         ImageView image;
     }
 }

File: app/src/main/java/de/danoeh/antennapod/service/PlayerWidgetService.java
Patch:
@@ -104,12 +104,12 @@ private void updateViews() {
 				if (progressString != null) {
 					views.setTextViewText(R.id.txtvProgress, progressString);
 				}
-				views.setImageViewResource(R.id.butPlay, R.drawable.av_pause_dark);
+				views.setImageViewResource(R.id.butPlay, R.drawable.ic_pause_white_24dp);
                 if (Build.VERSION.SDK_INT >= 15) {
                     views.setContentDescription(R.id.butPlay, getString(R.string.pause_label));
                 }
 			} else {
-				views.setImageViewResource(R.id.butPlay, R.drawable.av_play_dark);
+				views.setImageViewResource(R.id.butPlay, R.drawable.ic_play_arrow_white_24dp);
                 if (Build.VERSION.SDK_INT >= 15) {
                     views.setContentDescription(R.id.butPlay, getString(R.string.play_label));
                 }
@@ -120,7 +120,7 @@ private void updateViews() {
 			views.setViewVisibility(R.id.txtvProgress, View.INVISIBLE);
 			views.setTextViewText(R.id.txtvTitle,
 					this.getString(R.string.no_media_playing_label));
-			views.setImageViewResource(R.id.butPlay, R.drawable.av_play);
+			views.setImageViewResource(R.id.butPlay, R.drawable.ic_play_arrow_white_24dp);
 
 		}
 

File: core/src/main/java/de/danoeh/antennapod/core/util/playback/PlaybackController.java
Patch:
@@ -412,9 +412,9 @@ private void handleStatus() {
 
         if (PlaybackService.getCurrentMediaType() == MediaType.AUDIO) {
             TypedArray res = activity.obtainStyledAttributes(new int[]{
-                    R.attr.av_play, R.attr.av_pause});
-            playResource = res.getResourceId(0, R.drawable.av_play);
-            pauseResource = res.getResourceId(1, R.drawable.av_pause);
+                    R.attr.av_play_big, R.attr.av_pause_big});
+            playResource = res.getResourceId(0, R.drawable.ic_play_arrow_grey600_36dp);
+            pauseResource = res.getResourceId(1, R.drawable.ic_pause_grey600_36dp);
             res.recycle();
         } else {
             playResource = R.drawable.ic_action_play_over_video;

File: app/src/main/java/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -32,6 +32,7 @@
 import de.danoeh.antennapod.adapter.ChapterListAdapter;
 import de.danoeh.antennapod.adapter.NavListAdapter;
 import de.danoeh.antennapod.core.asynctask.PicassoProvider;
+import de.danoeh.antennapod.core.util.id3reader.ChapterReader;
 import de.danoeh.antennapod.dialog.VariableSpeedDialog;
 import de.danoeh.antennapod.core.feed.Chapter;
 import de.danoeh.antennapod.core.feed.EventDistributor;
@@ -429,12 +430,12 @@ protected void setupGUI() {
 
         TypedArray typedArray = obtainStyledAttributes(new int[]{R.attr.nav_drawer_toggle});
         drawerToggle = new ActionBarDrawerToggle(this, drawerLayout, typedArray.getResourceId(0, 0), R.string.drawer_open, R.string.drawer_close) {
-            String currentTitle = getSupportActionBar().getTitle().toString();
+            CharSequence currentTitle = getSupportActionBar().getTitle();
 
             @Override
             public void onDrawerOpened(View drawerView) {
                 super.onDrawerOpened(drawerView);
-                currentTitle = getSupportActionBar().getTitle().toString();
+                currentTitle = getSupportActionBar().getTitle();
                 getSupportActionBar().setTitle(R.string.app_name);
                 supportInvalidateOptionsMenu();
             }

File: app/src/main/java/de/danoeh/antennapod/receiver/ConnectivityActionReceiver.java
Patch:
@@ -1,4 +1,4 @@
-package de.danoeh.antennapod.core.receiver;
+package de.danoeh.antennapod.receiver;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;

File: core/src/main/java/de/danoeh/antennapod/core/ApplicationCallbacks.java
Patch:
@@ -20,5 +20,5 @@ public interface ApplicationCallbacks {
      */
     public Intent getStorageErrorActivity(Context context);
 
-    public void setUpateInterval(long upateInterval);
+    public void setUpdateInterval(long updateInterval);
 }

File: core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java
Patch:
@@ -330,7 +330,7 @@ public void onSharedPreferenceChanged(SharedPreferences sp, String key) {
         } else if (key.equals(PREF_UPDATE_INTERVAL)) {
             updateInterval = readUpdateInterval(sp.getString(
                     PREF_UPDATE_INTERVAL, "0"));
-            ClientConfig.applicationCallbacks.setUpateInterval(updateInterval);
+            ClientConfig.applicationCallbacks.setUpdateInterval(updateInterval);
 
         } else if (key.equals(PREF_AUTO_DELETE)) {
             autoDelete = sp.getBoolean(PREF_AUTO_DELETE, false);

File: core/src/main/java/de/danoeh/antennapod/core/receiver/AlarmUpdateReceiver.java
Patch:
@@ -27,7 +27,7 @@ public void onReceive(Context context, Intent intent) {
 				Log.d(TAG, "Resetting update alarm after app upgrade");
 		}
 
-        ClientConfig.applicationCallbacks.setUpateInterval(UserPreferences.getUpdateInterval());
+        ClientConfig.applicationCallbacks.setUpdateInterval(UserPreferences.getUpdateInterval());
 
 	}
 

File: src/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -160,7 +160,7 @@ public boolean onQueryTextChange(String s) {
     private final EventDistributor.EventListener contentUpdate = new EventDistributor.EventListener() {
         @Override
         public void update(EventDistributor eventDistributor, Integer arg) {
-            if ((arg & (EventDistributor.DOWNLOAD_QUEUED)) != 0) {
+            if ((arg & (EventDistributor.DOWNLOAD_QUEUED)) != 0 && feedItemDialog != null) {
                 feedItemDialog.updateMenuAppearance();
             }
             if ((arg & (EventDistributor.UNREAD_ITEMS_UPDATE

File: src/de/danoeh/antennapod/util/flattr/FlattrUtils.java
Patch:
@@ -90,7 +90,7 @@ private static AccessToken retrieveToken() {
      */
     public static boolean hasAPICredentials() {
         return StringUtils.isNotEmpty(BuildConfig.FLATTR_APP_KEY)
-                && StringUtils.isNoneEmpty(BuildConfig.FLATTR_APP_SECRET);
+                && StringUtils.isNotEmpty(BuildConfig.FLATTR_APP_SECRET);
     }
 
     public static boolean hasToken() {

File: src/de/danoeh/antennapod/util/playback/IPlayer.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.util.playback;
 
+import android.content.Context;
 import android.view.SurfaceHolder;
 
 import java.io.IOException;
@@ -63,4 +64,6 @@ void setDataSource(String path) throws IllegalStateException, IOException,
 	void stop();
 
     public void setVideoScalingMode(int mode);
+
+    public void setWakeMode(Context context, int mode);
 }

File: src/instrumentationTest/de/test/antennapod/util/URLCheckerTest.java
Patch:
@@ -38,7 +38,7 @@ public void testPcastProtocol() {
         assertEquals("http://example.com", out);
     }
 
-    public void testItcpProtocol() {
+    public void testItpcProtocol() {
         final String in = "itpc://example.com";
         final String out = URLChecker.prepareURL(in);
         assertEquals("http://example.com", out);

File: src/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java
Patch:
@@ -68,6 +68,7 @@ public void onDestroyView() {
         listAdapter = null;
         viewCreated = false;
         feedItemDialog = null;
+        stopItemLoader();
     }
 
     @Override
@@ -103,6 +104,7 @@ private void onFragmentLoaded() {
             listAdapter = new DownloadedEpisodesListAdapter(getActivity(), itemAccess);
             setListAdapter(listAdapter);
         }
+        setListShown(true);
         listAdapter.notifyDataSetChanged();
         if (feedItemDialog != null) {
             boolean res = feedItemDialog.updateContent(queue, items);
@@ -171,7 +173,6 @@ protected void onPreExecute() {
         @Override
         protected void onPostExecute(Object[] results) {
             super.onPostExecute(results);
-            setListShown(true);
             if (results != null) {
                 items = (List<FeedItem>) results[0];
                 queue = (QueueAccess) results[1];

File: src/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -658,7 +658,7 @@ protected int getContentViewResourceId() {
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
-        if (drawerToggle.onOptionsItemSelected(item)) {
+        if (drawerToggle != null && drawerToggle.onOptionsItemSelected(item)) {
             return true;
         } else {
             return super.onOptionsItemSelected(item);

File: src/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -164,7 +164,7 @@ private void resetViewState() {
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
 
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             FeedMenuHandler.onCreateOptionsMenu(inflater, menu);
 
             final SearchView sv = new SearchView(getActivity());
@@ -190,7 +190,7 @@ public boolean onQueryTextChange(String s) {
 
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             FeedMenuHandler.onPrepareOptionsMenu(menu, feed);
         }
     }

File: src/de/danoeh/antennapod/fragment/NewEpisodesFragment.java
Patch:
@@ -139,7 +139,7 @@ private void resetViewState() {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             inflater.inflate(R.menu.new_episodes, menu);
 
             final SearchView sv = new SearchView(getActivity());
@@ -164,7 +164,7 @@ public boolean onQueryTextChange(String s) {
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             menu.findItem(R.id.mark_all_read_item).setVisible(unreadItems != null && !unreadItems.isEmpty());
             menu.findItem(R.id.episode_filter_item).setChecked(showOnlyNewEpisodes);
         }

File: src/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -131,7 +131,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             MenuItem clearHistory = menu.add(Menu.NONE, R.id.clear_history_item, Menu.CATEGORY_CONTAINER, R.string.clear_history_label);
             MenuItemCompat.setShowAsAction(clearHistory, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);
             TypedArray drawables = getActivity().obtainStyledAttributes(new int[]{R.attr.content_discard});
@@ -143,7 +143,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     @Override
     public void onPrepareOptionsMenu(Menu menu) {
         super.onPrepareOptionsMenu(menu);
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             menu.findItem(R.id.clear_history_item).setVisible(playbackHistory != null && !playbackHistory.isEmpty());
         }
     }

File: src/de/danoeh/antennapod/fragment/QueueFragment.java
Patch:
@@ -137,7 +137,7 @@ public void onDestroyView() {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             final SearchView sv = new SearchView(getActivity());
             MenuItemUtils.addSearchItem(menu, sv);
             sv.setQueryHint(getString(R.string.search_hint));

File: src/de/danoeh/antennapod/fragment/SearchFragment.java
Patch:
@@ -133,7 +133,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
-        if (!MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
+        if (itemsLoaded && !MenuItemUtils.isActivityDrawerOpen((NavDrawerActivity) getActivity())) {
             MenuItem item = menu.add(Menu.NONE, R.id.search_item, Menu.NONE, R.string.search_label);
             MenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);
             final SearchView sv = new SearchView(getActivity());

File: src/de/danoeh/antennapod/feed/FeedMedia.java
Patch:
@@ -401,7 +401,9 @@ public InputStream openImageInputStream() {
     @Override
     public String getImageLoaderCacheKey() {
         String out;
-        if (item.hasItemImageDownloaded()) {
+        if (item == null) {
+            return null;
+        } else if (item.hasItemImageDownloaded()) {
             out = item.getImageLoaderCacheKey();
         } else {
             out = new Playable.DefaultPlayableImageLoader(this)

File: src/de/danoeh/antennapod/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -126,6 +126,7 @@ public void run() {
                 try {
                     playMediaObject(playable, false, stream, startWhenPrepared, prepareImmediately);
                 } catch (RuntimeException e) {
+                    e.printStackTrace();
                     throw e;
                 } finally {
                     playerLock.unlock();

File: src/instrumentationTest/de/test/antennapod/ui/MainActivityTest.java
Patch:
@@ -66,7 +66,7 @@ public void testAddFeed() throws Exception {
 
     public void testClickNavDrawer() throws Exception {
         uiTestUtils.addLocalFeedData(false);
-        final View home = solo.getView(R.id.home);
+        final View home = solo.getView(UITestUtils.HOME_VIEW);
 
         // all episodes
         solo.waitForView(android.R.id.list);

File: src/instrumentationTest/de/test/antennapod/ui/PlaybackTest.java
Patch:
@@ -78,7 +78,7 @@ private void startLocalPlayback() {
 
     private void startLocalPlaybackFromQueue() {
         assertTrue(solo.waitForActivity(MainActivity.class));
-        solo.clickOnView(solo.getView(R.id.home));
+        solo.clickOnView(solo.getView(UITestUtils.HOME_VIEW));
         solo.clickOnText(solo.getString(R.string.queue_label));
         assertTrue(solo.waitForView(solo.getView(R.id.butSecondaryAction)));
         solo.clickOnImageButton(0);

File: src/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -166,6 +166,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         menu.findItem(R.id.support_item).setVisible(
                 feed != null && feed.getPaymentLink() != null);
         menu.findItem(R.id.share_link_item).setVisible(feed != null &&feed.getLink() != null);
+        menu.findItem(R.id.visit_website_item).setVisible(feed != null && feed.getLink() != null);
         return true;
     }
 

File: src/de/danoeh/antennapod/service/playback/PlaybackService.java
Patch:
@@ -310,9 +310,11 @@ private void handleKeycode(int keycode) {
                     mediaPlayer.pause(true, true);
                 }
                 break;
+            case KeyEvent.KEYCODE_MEDIA_NEXT:
             case KeyEvent.KEYCODE_MEDIA_FAST_FORWARD:
                 mediaPlayer.seekDelta(PlaybackController.DEFAULT_SEEK_DELTA);
                 break;
+            case KeyEvent.KEYCODE_MEDIA_PREVIOUS:
             case KeyEvent.KEYCODE_MEDIA_REWIND:
                 mediaPlayer.seekDelta(-PlaybackController.DEFAULT_SEEK_DELTA);
                 break;

File: src/de/danoeh/antennapod/service/playback/PlaybackService.java
Patch:
@@ -541,6 +541,7 @@ private void endPlayback(boolean playNextEpisode) {
                     (nextMedia.getMediaType() == MediaType.VIDEO) ? EXTRA_CODE_VIDEO : EXTRA_CODE_AUDIO);
         } else {
             sendNotificationBroadcast(NOTIFICATION_TYPE_PLAYBACK_END, 0);
+            mediaPlayer.stop();
             //stopSelf();
         }
     }

File: src/de/danoeh/antennapod/service/download/DownloadService.java
Patch:
@@ -890,6 +890,7 @@ private Feed parseFeed(DownloadRequest request) {
             if (successful) {
                 return savedFeed;
             } else {
+                numberOfDownloads.decrementAndGet();
                 saveDownloadStatus(new DownloadStatus(savedFeed,
                         savedFeed.getHumanReadableIdentifier(), reason, successful,
                         reasonDetailed));

File: src/de/danoeh/antennapod/service/download/DownloadService.java
Patch:
@@ -282,6 +282,8 @@ public void onDestroy() {
         feedSyncThread.shutdown();
         cancelNotificationUpdater();
         unregisterReceiver(cancelDownloadReceiver);
+
+        DBTasks.autodownloadUndownloadedItems(getApplicationContext());
     }
 
     @SuppressLint("NewApi")

File: src/de/danoeh/antennapod/service/download/AntennapodHttpClient.java
Patch:
@@ -33,7 +33,7 @@ public class AntennapodHttpClient {
     public static final int CONNECTION_TIMEOUT = 30000;
     public static final int SOCKET_TIMEOUT = 30000;
 
-    public static final int MAX_CONNECTIONS = 6;
+    public static final int MAX_CONNECTIONS = 8;
 
 
     private static volatile HttpClient httpClient = null;

File: src/de/danoeh/antennapod/feed/Feed.java
Patch:
@@ -223,6 +223,8 @@ public FeedItem getItemAtIndex(boolean enableEpisodeFilter, int position) {
     public String getIdentifyingValue() {
         if (feedIdentifier != null && !feedIdentifier.isEmpty()) {
             return feedIdentifier;
+        } else if (download_url != null && !download_url.isEmpty()) {
+            return download_url;
         } else if (title != null && !title.isEmpty()) {
             return title;
         } else {

File: src/de/danoeh/antennapod/service/download/DownloadService.java
Patch:
@@ -648,6 +648,7 @@ public void run() {
 
             Feed feed = new Feed(request.getSource(), new Date());
             feed.setFile_url(request.getDestination());
+            feed.setId(request.getFeedfileId());
             feed.setDownloaded(true);
             feed.setPreferences(new FeedPreferences(0, true, request.getUsername(), request.getPassword()));
 

File: src/de/danoeh/antennapod/storage/DownloadRequester.java
Patch:
@@ -114,7 +114,7 @@ && isFilenameAvailable(newDest.toString())) {
             item.setDownload_url(URLChecker.prepareURL(item.getDownload_url()));
 
             DownloadRequest request = new DownloadRequest(dest.toString(),
-                    item.getDownload_url(), item.getHumanReadableIdentifier(),
+                    URLChecker.prepareURL(item.getDownload_url()), item.getHumanReadableIdentifier(),
                     item.getId(), item.getTypeAsInt(), username, password, deleteOnFailure);
 
             download(context, request);

File: src/instrumentationTest/de/test/antennapod/storage/DBReaderTest.java
Patch:
@@ -78,7 +78,7 @@ public void testGetFeedList() {
         List<Feed> feeds = saveFeedlist(context, 10, 0, false);
         List<Feed> savedFeeds = DBReader.getFeedList(context);
         assertNotNull(savedFeeds);
-        assertTrue(savedFeeds.size() == feeds.size());
+        assertEquals(feeds.size(), savedFeeds.size());
         for (int i = 0; i < feeds.size(); i++) {
             assertTrue(savedFeeds.get(i).getId() == feeds.get(i).getId());
         }

File: src/de/danoeh/antennapod/fragment/gpodnet/TagListFragment.java
Patch:
@@ -37,12 +37,12 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         final SearchView sv = new SearchView(getActivity());
         MenuItemUtils.addSearchItem(menu, sv);
-        sv.setQueryHint(getString(R.string.search_hint));
+        sv.setQueryHint(getString(R.string.gpodnet_search_hint));
         sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String s) {
                 sv.clearFocus();
-                ((MainActivity) getActivity()).loadChildFragment(SearchFragment.newInstance(s));
+                ((MainActivity) getActivity()).loadChildFragment(SearchListFragment.newInstance(s));
                 return true;
             }
 

File: src/de/danoeh/antennapod/adapter/DownloadedEpisodesListAdapter.java
Patch:
@@ -34,7 +34,7 @@ public int getCount() {
     }
 
     @Override
-    public Object getItem(int position) {
+    public FeedItem getItem(int position) {
         return itemAccess.getItem(position);
     }
 

File: src/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -175,9 +175,7 @@ private void onFragmentLoaded() {
         setListShown(true);
         adapter.notifyDataSetChanged();
         if (feedItemDialog != null && feedItemDialog.isShowing()) {
-            feedItemDialog.setItemFromCollection(playbackHistory);
-            feedItemDialog.setQueue(queue);
-            feedItemDialog.updateMenuAppearance();
+            feedItemDialog.updateContent(queue, playbackHistory);
         }
         getActivity().supportInvalidateOptionsMenu();
     }

File: src/de/danoeh/antennapod/service/download/DownloadService.java
Patch:
@@ -357,7 +357,7 @@ private Notification updateNotifications() {
             if (notificationCompatBuilder != null) {
                 notificationCompatBuilder.setContentTitle(contentTitle);
                 notificationCompatBuilder.setContentText(downloadsLeft);
-                return notificationCompatBuilder.getNotification();
+                return notificationCompatBuilder.build();
             }
         }
         return null;
@@ -525,9 +525,9 @@ private void updateReport() {
                                     R.drawable.stat_notify_sync)
                     )
                     .setContentIntent(
-                            PendingIntent.getActivity(this, 0, intent, 0)
+                            PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT)
                     )
-                    .setAutoCancel(true).getNotification();
+                    .setAutoCancel(true).build();
             NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
             nm.notify(REPORT_ID, notification);
         } else {

File: src/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -550,7 +550,7 @@ protected boolean loadMediaInfo() {
         if (media.getChapters() != null) {
             butNavRight.setVisibility(View.VISIBLE);
         } else {
-            butNavRight.setVisibility(View.GONE);
+            butNavRight.setVisibility(View.INVISIBLE);
         }
 
 

File: src/de/danoeh/antennapod/storage/DBWriter.java
Patch:
@@ -837,6 +837,7 @@ public void run() {
                 adapter.open();
                 adapter.setFeedPreferences(preferences);
                 adapter.close();
+                EventDistributor.getInstance().sendFeedUpdateBroadcast();
             }
         });
     }

File: src/de/danoeh/antennapod/AppConfig.java
Patch:
@@ -1,8 +1,6 @@
 package de.danoeh.antennapod;
 
 public final class AppConfig {
-	/** Should be used for debug logging. */
-	public final static boolean DEBUG = true;
     /** Should be used when setting User-Agent header for HTTP-requests. */
     public final static String USER_AGENT = "AntennaPod/0.9.8.3";
 }

File: src/de/danoeh/antennapod/activity/AboutActivity.java
Patch:
@@ -4,8 +4,6 @@
 import android.support.v7.app.ActionBarActivity;
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
-
-
 import de.danoeh.antennapod.R;
 
 /** Displays the 'about' screen */

File: src/de/danoeh/antennapod/activity/DownloadActivity.java
Patch:
@@ -14,7 +14,7 @@
 import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemLongClickListener;
 import android.widget.ListView;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.adapter.DownloadlistAdapter;
 import de.danoeh.antennapod.asynctask.DownloadObserver;
@@ -53,7 +53,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         listview = (ListView) findViewById(R.id.listview);
 
-        if (AppConfig.DEBUG)
+        if (BuildConfig.DEBUG)
             Log.d(TAG, "Creating Activity");
         requester = DownloadRequester.getInstance();
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
@@ -78,7 +78,7 @@ protected void onResume() {
     @Override
     protected void onStop() {
         super.onStop();
-        if (AppConfig.DEBUG)
+        if (BuildConfig.DEBUG)
             Log.d(TAG, "Stopping Activity");
     }
 

File: src/de/danoeh/antennapod/activity/DownloadAuthenticationActivity.java
Patch:
@@ -9,7 +9,7 @@
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.TextView;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.preferences.UserPreferences;
 import de.danoeh.antennapod.service.download.DownloadRequest;
@@ -89,7 +89,7 @@ public void onClick(View v) {
                 setResult(Activity.RESULT_OK, result);
 
                 if (sendToDownloadRequester) {
-                   if (AppConfig.DEBUG) Log.d(TAG, "Sending request to DownloadRequester");
+                   if (BuildConfig.DEBUG) Log.d(TAG, "Sending request to DownloadRequester");
                     DownloadRequester.getInstance().download(DownloadAuthenticationActivity.this, request);
                 }
                 finish();

File: src/de/danoeh/antennapod/activity/DownloadLogActivity.java
Patch:
@@ -2,10 +2,8 @@
 
 import android.os.AsyncTask;
 import android.os.Bundle;
-
 import android.support.v4.app.NavUtils;
 import android.support.v7.app.ActionBarActivity;
-
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;

File: src/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -11,7 +11,7 @@
 import android.widget.CompoundButton;
 import android.widget.ImageView;
 import android.widget.TextView;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.asynctask.ImageLoader;
 import de.danoeh.antennapod.dialog.DownloadRequestErrorDialogCreator;
@@ -65,9 +65,9 @@ protected Feed doInBackground(Long... params) {
             protected void onPostExecute(Feed result) {
                 if (result != null) {
                     feed = result;
-                    if (AppConfig.DEBUG)
+                    if (BuildConfig.DEBUG)
                         Log.d(TAG, "Language is " + feed.getLanguage());
-                    if (AppConfig.DEBUG)
+                    if (BuildConfig.DEBUG)
                         Log.d(TAG, "Author is " + feed.getAuthor());
                     imgvCover.post(new Runnable() {
 

File: src/de/danoeh/antennapod/activity/MiroGuideCategoryActivity.java
Patch:
@@ -8,7 +8,6 @@
 import android.support.v4.view.ViewPager;
 import android.support.v7.app.ActionBarActivity;
 import android.util.Log;
-
 import android.view.Menu;
 import android.view.MenuItem;
 import de.danoeh.antennapod.R;

File: src/de/danoeh/antennapod/activity/MiroGuideSearchActivity.java
Patch:
@@ -7,10 +7,9 @@
 import android.support.v4.view.MenuItemCompat;
 import android.support.v7.app.ActionBarActivity;
 import android.util.Log;
-
 import android.view.Menu;
 import android.view.MenuItem;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.fragment.MiroGuideChannellistFragment;
 import de.danoeh.antennapod.preferences.UserPreferences;
@@ -47,7 +46,7 @@ protected void onResume() {
     }
 
     private void handleSearchRequest(String query) {
-        if (AppConfig.DEBUG)
+        if (BuildConfig.DEBUG)
             Log.d(TAG, "Performing search");
         FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
         listFragment = MiroGuideChannellistFragment.newInstance("name", query,

File: src/de/danoeh/antennapod/activity/OpmlImportHolder.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.activity;
 
-import java.util.ArrayList;
-
 import de.danoeh.antennapod.opml.OpmlElement;
 
+import java.util.ArrayList;
+
 /**
  * Hold infos gathered by Ompl-Import
  * <p/>

File: src/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -19,7 +19,7 @@
 import android.view.Menu;
 import android.view.MenuItem;
 import android.widget.Toast;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.asynctask.FlattrClickWorker;
 import de.danoeh.antennapod.asynctask.OpmlExportWorker;
@@ -362,7 +362,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (resultCode == DirectoryChooserActivity.RESULT_CODE_DIR_SELECTED) {
             String dir = data
                     .getStringExtra(DirectoryChooserActivity.RESULT_SELECTED_DIR);
-            if (AppConfig.DEBUG)
+            if (BuildConfig.DEBUG)
                 Log.d(TAG, "Setting data folder");
             UserPreferences.setDataFolder(dir);
         }
@@ -392,7 +392,7 @@ public boolean onPreferenceClick(Preference preference) {
                                         .getAutodownloadSelectedNetworks()));
                         boolean newValue = ((CheckBoxPreference) preference)
                                 .isChecked();
-                        if (AppConfig.DEBUG)
+                        if (BuildConfig.DEBUG)
                             Log.d(TAG, "Selected network " + key
                                     + ". New state: " + newValue);
 

File: src/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -12,7 +12,7 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.*;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.MainActivity;
 import de.danoeh.antennapod.gpoddernet.GpodnetService;
@@ -113,7 +113,7 @@ public void onClick(View v) {
                 final String usernameStr = username.getText().toString();
                 final String passwordStr = password.getText().toString();
 
-                if (AppConfig.DEBUG) Log.d(TAG, "Checking login credentials");
+                if (BuildConfig.DEBUG) Log.d(TAG, "Checking login credentials");
                 new AsyncTask<GpodnetService, Void, Void>() {
 
                     volatile Exception exception;
@@ -333,7 +333,7 @@ public void onClick(View v) {
     }
 
     private void writeLoginCredentials() {
-        if (AppConfig.DEBUG) Log.d(TAG, "Writing login credentials");
+        if (BuildConfig.DEBUG) Log.d(TAG, "Writing login credentials");
         GpodnetPreferences.setUsername(username);
         GpodnetPreferences.setPassword(password);
         GpodnetPreferences.setDeviceID(selectedDevice.getId());

File: src/de/danoeh/antennapod/activity/gpoddernet/GpodnetMainActivity.java
Patch:
@@ -11,7 +11,6 @@
 import de.danoeh.antennapod.fragment.gpodnet.PodcastTopListFragment;
 import de.danoeh.antennapod.fragment.gpodnet.SuggestionListFragment;
 import de.danoeh.antennapod.fragment.gpodnet.TagListFragment;
-import de.danoeh.antennapod.preferences.GpodnetPreferences;
 
 /**
  * Created by daniel on 22.08.13.

File: src/de/danoeh/antennapod/activity/gpoddernet/GpodnetTagActivity.java
Patch:
@@ -7,7 +7,6 @@
 import android.view.MenuItem;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment;
-import de.danoeh.antennapod.fragment.gpodnet.SearchListFragment;
 import de.danoeh.antennapod.gpoddernet.GpodnetService;
 import de.danoeh.antennapod.gpoddernet.GpodnetServiceException;
 import de.danoeh.antennapod.gpoddernet.model.GpodnetPodcast;

File: src/de/danoeh/antennapod/adapter/ChapterListAdapter.java
Patch:
@@ -1,13 +1,10 @@
 package de.danoeh.antennapod.adapter;
 
-import java.util.List;
-
 import android.content.Context;
 import android.text.Layout;
 import android.text.Selection;
 import android.text.Spannable;
 import android.text.Spanned;
-import android.text.method.LinkMovementMethod;
 import android.text.style.ClickableSpan;
 import android.text.util.Linkify;
 import android.util.Log;
@@ -24,6 +21,8 @@
 import de.danoeh.antennapod.util.Converter;
 import de.danoeh.antennapod.util.playback.Playable;
 
+import java.util.List;
+
 public class ChapterListAdapter extends ArrayAdapter<Chapter> {
 
 	private static final String TAG = "ChapterListAdapter";

File: src/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -12,7 +12,6 @@
 import de.danoeh.antennapod.feed.FeedImage;
 import de.danoeh.antennapod.feed.FeedMedia;
 import de.danoeh.antennapod.service.download.DownloadStatus;
-import de.danoeh.antennapod.util.DownloadError;
 
 /** Displays a list of DownloadStatus entries. */
 public class DownloadLogAdapter extends BaseAdapter {

File: src/de/danoeh/antennapod/adapter/MiroGuideChannelListAdapter.java
Patch:
@@ -1,7 +1,5 @@
 package de.danoeh.antennapod.adapter;
 
-import java.util.List;
-
 import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -11,6 +9,8 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.miroguide.model.MiroGuideChannel;
 
+import java.util.List;
+
 public class MiroGuideChannelListAdapter extends ArrayAdapter<MiroGuideChannel> {
 
 	public MiroGuideChannelListAdapter(Context context, int textViewResourceId,

File: src/de/danoeh/antennapod/adapter/MiroGuideItemlistAdapter.java
Patch:
@@ -1,7 +1,5 @@
 package de.danoeh.antennapod.adapter;
 
-import java.util.List;
-
 import android.content.Context;
 import android.text.format.DateUtils;
 import android.view.LayoutInflater;
@@ -12,6 +10,8 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.miroguide.model.MiroGuideItem;
 
+import java.util.List;
+
 public class MiroGuideItemlistAdapter extends ArrayAdapter<MiroGuideItem> {
 
 	public MiroGuideItemlistAdapter(Context context, int textViewResourceId,

File: src/de/danoeh/antennapod/adapter/SearchlistAdapter.java
Patch:
@@ -1,7 +1,5 @@
 package de.danoeh.antennapod.adapter;
 
-import java.util.List;
-
 import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -16,6 +14,8 @@
 import de.danoeh.antennapod.feed.FeedItem;
 import de.danoeh.antennapod.feed.SearchResult;
 
+import java.util.List;
+
 /** List adapter for search activity. */
 public class SearchlistAdapter extends ArrayAdapter<SearchResult> {
 

File: src/de/danoeh/antennapod/asynctask/FlattrStatusFetcher.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.storage.DBWriter;
 import de.danoeh.antennapod.util.flattr.FlattrUtils;
 import org.shredzone.flattr4j.exception.FlattrException;
@@ -26,7 +26,7 @@ public FlattrStatusFetcher(Context context) {
 
     @Override
     public void run() {
-        if (AppConfig.DEBUG) Log.d(TAG, "Starting background work: Retrieving Flattr status");
+        if (BuildConfig.DEBUG) Log.d(TAG, "Starting background work: Retrieving Flattr status");
 
         Thread.currentThread().setPriority(Thread.MIN_PRIORITY);
 
@@ -42,6 +42,6 @@ public void run() {
             e.printStackTrace();
         }
 
-        if (AppConfig.DEBUG) Log.d(TAG, "Finished background work: Retrieved Flattr status");
+        if (BuildConfig.DEBUG) Log.d(TAG, "Finished background work: Retrieved Flattr status");
     }
 }

File: src/de/danoeh/antennapod/asynctask/ImageLoader.java
Patch:
@@ -7,7 +7,7 @@
 import android.support.v4.util.LruCache;
 import android.util.Log;
 import android.widget.ImageView;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.PodcastApp;
 import de.danoeh.antennapod.R;
 
@@ -176,7 +176,7 @@ public void loadThumbnailBitmap(ImageWorkerTaskResource source,
 
     public void clearExecutorQueue() {
         executor.shutdownNow();
-        if (AppConfig.DEBUG)
+        if (BuildConfig.DEBUG)
             Log.d(TAG, "Executor was shut down.");
         executor = createExecutor();
 

File: src/de/danoeh/antennapod/asynctask/OpmlFeedQueuer.java
Patch:
@@ -1,8 +1,5 @@
 package de.danoeh.antennapod.asynctask;
 
-import java.util.Arrays;
-import java.util.Date;
-
 import android.annotation.SuppressLint;
 import android.app.ProgressDialog;
 import android.content.Context;
@@ -14,6 +11,9 @@
 import de.danoeh.antennapod.storage.DownloadRequestException;
 import de.danoeh.antennapod.storage.DownloadRequester;
 
+import java.util.Arrays;
+import java.util.Date;
+
 /** Queues items for download in the background. */
 public class OpmlFeedQueuer extends AsyncTask<Void, Void, Void> {
 	private Context context;

File: src/de/danoeh/antennapod/dialog/ConfirmationDialog.java
Patch:
@@ -4,7 +4,7 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 
 /**
@@ -25,7 +25,7 @@ public ConfirmationDialog(Context context, int titleId, int messageId) {
 	}
 
 	public void onCancelButtonPressed(DialogInterface dialog) {
-		if (AppConfig.DEBUG)
+		if (BuildConfig.DEBUG)
 			Log.d(TAG, "Dialog was cancelled");
 		dialog.dismiss();
 	}

File: src/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -1,8 +1,5 @@
 package de.danoeh.antennapod.dialog;
 
-import java.util.Arrays;
-import java.util.List;
-
 import android.app.AlertDialog;
 import android.content.ActivityNotFoundException;
 import android.content.Context;
@@ -12,6 +9,9 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.preferences.UserPreferences;
 
+import java.util.Arrays;
+import java.util.List;
+
 public class VariableSpeedDialog {
 	private VariableSpeedDialog() {
 	}

File: src/de/danoeh/antennapod/feed/FeedItem.java
Patch:
@@ -6,7 +6,6 @@
 import de.danoeh.antennapod.util.ShownotesProvider;
 import de.danoeh.antennapod.util.flattr.FlattrStatus;
 import de.danoeh.antennapod.util.flattr.FlattrThing;
-import org.apache.commons.lang3.StringUtils;
 
 import java.io.InputStream;
 import java.util.Date;

File: src/de/danoeh/antennapod/feed/VorbisCommentChapter.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.feed;
 
-import java.util.concurrent.TimeUnit;
-
 import de.danoeh.antennapod.util.vorbiscommentreader.VorbisCommentReaderException;
 
+import java.util.concurrent.TimeUnit;
+
 public class VorbisCommentChapter extends Chapter {
 	public static final int CHAPTERTYPE_VORBISCOMMENT_CHAPTER = 3;
 

File: src/de/danoeh/antennapod/fragment/PlaybackHistoryFragment.java
Patch:
@@ -4,13 +4,12 @@
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.adapter.InternalFeedItemlistAdapter;
 import de.danoeh.antennapod.feed.EventDistributor;
 import de.danoeh.antennapod.feed.FeedItem;
 import de.danoeh.antennapod.storage.DBReader;
 
-import java.util.Iterator;
 import java.util.List;
 
 public class PlaybackHistoryFragment extends ItemlistFragment {
@@ -64,7 +63,7 @@ public void onDestroy() {
 		@Override
 		public void update(EventDistributor eventDistributor, Integer arg) {
 			if ((EventDistributor.PLAYBACK_HISTORY_UPDATE & arg) != 0) {
-				if (AppConfig.DEBUG)
+				if (BuildConfig.DEBUG)
 					Log.d(TAG, "Received content update");
 				loadData();
 			}

File: src/de/danoeh/antennapod/fragment/gpodnet/PodcastListFragment.java
Patch:
@@ -10,7 +10,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.*;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.DefaultOnlineFeedViewActivity;
 import de.danoeh.antennapod.activity.OnlineFeedViewActivity;
@@ -60,7 +60,7 @@ public void onClick(View v) {
     }
 
     protected void onPodcastSelected(GpodnetPodcast selection) {
-        if (AppConfig.DEBUG) Log.d(TAG, "Selected podcast: " + selection.toString());
+        if (BuildConfig.DEBUG) Log.d(TAG, "Selected podcast: " + selection.toString());
         Intent intent = new Intent(getActivity(), DefaultOnlineFeedViewActivity.class);
         intent.putExtra(OnlineFeedViewActivity.ARG_FEEDURL, selection.getUrl());
         intent.putExtra(DefaultOnlineFeedViewActivity.ARG_TITLE, getString(R.string.gpodnet_main_label));

File: src/de/danoeh/antennapod/fragment/gpodnet/PodcastTopListFragment.java
Patch:
@@ -1,7 +1,5 @@
 package de.danoeh.antennapod.fragment.gpodnet;
 
-import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
 import de.danoeh.antennapod.gpoddernet.GpodnetService;
 import de.danoeh.antennapod.gpoddernet.GpodnetServiceException;
 import de.danoeh.antennapod.gpoddernet.model.GpodnetPodcast;

File: src/de/danoeh/antennapod/preferences/GpodnetPreferences.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.PodcastApp;
 import de.danoeh.antennapod.gpoddernet.GpodnetService;
 import de.danoeh.antennapod.service.GpodnetSyncService;
@@ -206,7 +206,7 @@ public static boolean loggedIn() {
     }
 
     public static synchronized void logout() {
-        if (AppConfig.DEBUG) Log.d(TAG, "Logout: Clearing preferences");
+        if (BuildConfig.DEBUG) Log.d(TAG, "Logout: Clearing preferences");
         setUsername(null);
         setPassword(null);
         setDeviceID(null);

File: src/de/danoeh/antennapod/preferences/PlaybackPreferences.java
Patch:
@@ -4,7 +4,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 
 /**
  * Provides access to preferences set by the playback service. A private
@@ -64,7 +64,7 @@ private PlaybackPreferences(Context context) {
 	 *             if context is null
 	 * */
 	public static void createInstance(Context context) {
-		if (AppConfig.DEBUG)
+		if (BuildConfig.DEBUG)
 			Log.d(TAG, "Creating new instance of UserPreferences");
 		if (context == null)
 			throw new IllegalArgumentException("Context must not be null");

File: src/de/danoeh/antennapod/receiver/FeedUpdateReceiver.java
Patch:
@@ -6,7 +6,7 @@
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.preferences.UserPreferences;
 import de.danoeh.antennapod.storage.DBTasks;
 
@@ -18,13 +18,13 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
 	@Override
 	public void onReceive(Context context, Intent intent) {
 		if (intent.getAction().equals(ACTION_REFRESH_FEEDS)) {
-			if (AppConfig.DEBUG)
+			if (BuildConfig.DEBUG)
 				Log.d(TAG, "Received intent");
 			boolean mobileUpdate = UserPreferences.isAllowMobileUpdate();
 			if (mobileUpdate || connectedToWifi(context)) {
 				DBTasks.refreshExpiredFeeds(context);
 			} else {
-				if (AppConfig.DEBUG)
+				if (BuildConfig.DEBUG)
 					Log.d(TAG,
 							"Blocking automatic update: no wifi available / no mobile updates allowed");
 			}

File: src/de/danoeh/antennapod/receiver/MediaButtonReceiver.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.Intent;
 import android.util.Log;
 import android.view.KeyEvent;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.service.playback.PlaybackService;
 
 /** Receives media button events. */
@@ -17,7 +17,7 @@ public class MediaButtonReceiver extends BroadcastReceiver {
 
 	@Override
 	public void onReceive(Context context, Intent intent) {
-		if (AppConfig.DEBUG) Log.d(TAG, "Received intent");
+		if (BuildConfig.DEBUG) Log.d(TAG, "Received intent");
 		KeyEvent event = (KeyEvent) intent.getExtras().get(
 				Intent.EXTRA_KEY_EVENT);
 		if (event.getAction() == KeyEvent.ACTION_DOWN) {

File: src/de/danoeh/antennapod/receiver/PlayerWidget.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.service.playback.PlayerWidgetService;
 
 public class PlayerWidget extends AppWidgetProvider {
@@ -26,7 +26,7 @@ public void onReceive(Context context, Intent intent) {
 	@Override
 	public void onEnabled(Context context) {
 		super.onEnabled(context);
-		if (AppConfig.DEBUG)
+		if (BuildConfig.DEBUG)
 			Log.d(TAG, "Widget enabled");
 	}
 

File: src/de/danoeh/antennapod/receiver/SPAReceiver.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.Intent;
 import android.util.Log;
 import android.widget.Toast;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.feed.Feed;
 import de.danoeh.antennapod.storage.DownloadRequestException;
@@ -28,11 +28,11 @@ public class SPAReceiver extends BroadcastReceiver{
     @Override
     public void onReceive(Context context, Intent intent) {
         if (StringUtils.equals(intent.getAction(), ACTION_SP_APPS_QUERY_FEEDS_REPSONSE)) {
-            if (AppConfig.DEBUG) Log.d(TAG, "Received SP_APPS_QUERY_RESPONSE");
+            if (BuildConfig.DEBUG) Log.d(TAG, "Received SP_APPS_QUERY_RESPONSE");
             if (intent.hasExtra(ACTION_SP_APPS_QUERY_FEEDS_REPSONSE_FEEDS_EXTRA)) {
                 String[] feedUrls = intent.getStringArrayExtra(ACTION_SP_APPS_QUERY_FEEDS_REPSONSE_FEEDS_EXTRA);
                 if (feedUrls != null) {
-                    if (AppConfig.DEBUG) Log.d(TAG, "Received feeds list: " + Arrays.toString(feedUrls));
+                    if (BuildConfig.DEBUG) Log.d(TAG, "Received feeds list: " + Arrays.toString(feedUrls));
                     for (String url : feedUrls) {
                         Feed f  = new Feed(url, new Date());
                         try {

File: src/de/danoeh/antennapod/service/download/AntennapodHttpClient.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.util.Log;
 import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import org.apache.http.client.HttpClient;
 import org.apache.http.client.params.HttpClientParams;
 import org.apache.http.conn.ClientConnectionManager;
@@ -42,7 +43,7 @@ public class AntennapodHttpClient {
      */
     public static synchronized HttpClient getHttpClient() {
         if (httpClient == null) {
-            if (AppConfig.DEBUG) Log.d(TAG, "Creating new instance of HTTP client");
+            if (BuildConfig.DEBUG) Log.d(TAG, "Creating new instance of HTTP client");
 
             HttpParams params = new BasicHttpParams();
             params.setParameter(CoreProtocolPNames.USER_AGENT, AppConfig.USER_AGENT);

File: src/de/danoeh/antennapod/service/download/DownloadStatus.java
Patch:
@@ -1,10 +1,10 @@
 package de.danoeh.antennapod.service.download;
 
-import java.util.Date;
-
 import de.danoeh.antennapod.feed.FeedFile;
 import de.danoeh.antennapod.util.DownloadError;
 
+import java.util.Date;
+
 /** Contains status attributes for one download */
 public class DownloadStatus {
 	/**

File: src/de/danoeh/antennapod/spa/SPAUtil.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.receiver.SPAReceiver;
 
 /**
@@ -39,7 +39,7 @@ public static synchronized boolean sendSPAppsQueryFeedsIntent(Context context) {
         SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(appContext);
         if (!prefs.getBoolean(PREF_HAS_QUERIED_SP_APPS, false)) {
             appContext.sendBroadcast(new Intent(SPAReceiver.ACTION_SP_APPS_QUERY_FEEDS));
-            if (AppConfig.DEBUG) Log.d(TAG, "Sending SP_APPS_QUERY_FEEDS intent");
+            if (BuildConfig.DEBUG) Log.d(TAG, "Sending SP_APPS_QUERY_FEEDS intent");
 
             SharedPreferences.Editor editor = prefs.edit();
             editor.putBoolean(PREF_HAS_QUERIED_SP_APPS, true);
@@ -55,7 +55,7 @@ public static synchronized boolean sendSPAppsQueryFeedsIntent(Context context) {
      * Resets all preferences created by this class. Should only be used for debug purposes.
      */
     public static void resetSPAPreferences(Context c) {
-        if (AppConfig.DEBUG) {
+        if (BuildConfig.DEBUG) {
             if (c == null) throw new IllegalArgumentException("c = null");
             SharedPreferences.Editor editor = PreferenceManager
                     .getDefaultSharedPreferences(c.getApplicationContext()).edit();

File: src/de/danoeh/antennapod/syndication/namespace/NSContent.java
Patch:
@@ -1,8 +1,7 @@
 package de.danoeh.antennapod.syndication.namespace;
 
-import org.xml.sax.Attributes;
-
 import de.danoeh.antennapod.syndication.handler.HandlerState;
+import org.xml.sax.Attributes;
 
 public class NSContent extends Namespace {
 	public static final String NSTAG = "content";

File: src/de/danoeh/antennapod/syndication/namespace/Namespace.java
Patch:
@@ -1,8 +1,7 @@
 package de.danoeh.antennapod.syndication.namespace;
 
-import org.xml.sax.Attributes;
-
 import de.danoeh.antennapod.syndication.handler.HandlerState;
+import org.xml.sax.Attributes;
 
 
 public abstract class Namespace {

File: src/de/danoeh/antennapod/syndication/namespace/atom/AtomText.java
Patch:
@@ -1,9 +1,8 @@
 package de.danoeh.antennapod.syndication.namespace.atom;
 
-import org.apache.commons.lang3.StringEscapeUtils;
-
 import de.danoeh.antennapod.syndication.namespace.Namespace;
 import de.danoeh.antennapod.syndication.namespace.SyndElement;
+import org.apache.commons.lang3.StringEscapeUtils;
 
 /** Represents Atom Element which contains text (content, title, summary). */
 public class AtomText extends SyndElement {

File: src/de/danoeh/antennapod/syndication/namespace/atom/NSAtom.java
Patch:
@@ -1,7 +1,7 @@
 package de.danoeh.antennapod.syndication.namespace.atom;
 
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.feed.FeedImage;
 import de.danoeh.antennapod.feed.FeedItem;
 import de.danoeh.antennapod.feed.FeedMedia;
@@ -84,7 +84,7 @@ public SyndElement handleElementStart(String localName, HandlerState state,
                             size = Long.parseLong(strSize);
                         }
                     } catch (NumberFormatException e) {
-                        if (AppConfig.DEBUG) Log.d(TAG, "Length attribute could not be parsed.");
+                        if (BuildConfig.DEBUG) Log.d(TAG, "Length attribute could not be parsed.");
                     }
                     String type = attributes.getValue(LINK_TYPE);
                     if (SyndTypeUtils.enclosureTypeValid(type)

File: src/de/danoeh/antennapod/syndication/util/SyndDateUtils.java
Patch:
@@ -1,12 +1,12 @@
 package de.danoeh.antennapod.syndication.util;
 
+import android.util.Log;
+
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Date;
 import java.util.Locale;
 
-import android.util.Log;
-
 /** Parses several date formats. */
 public class SyndDateUtils {
 	private static final String TAG = "DateUtils";

File: src/de/danoeh/antennapod/syndication/util/SyndTypeUtils.java
Patch:
@@ -1,8 +1,7 @@
 package de.danoeh.antennapod.syndication.util;
 
-import org.apache.commons.io.FilenameUtils;
-
 import android.webkit.MimeTypeMap;
+import org.apache.commons.io.FilenameUtils;
 
 /** Utility class for handling MIME-Types of enclosures */
 public class SyndTypeUtils {

File: src/de/danoeh/antennapod/util/EpisodeFilter.java
Patch:
@@ -1,10 +1,10 @@
 package de.danoeh.antennapod.util;
 
+import de.danoeh.antennapod.feed.FeedItem;
+
 import java.util.ArrayList;
 import java.util.List;
 
-import de.danoeh.antennapod.feed.FeedItem;
-
 public class EpisodeFilter {
 	private EpisodeFilter() {
 

File: src/de/danoeh/antennapod/util/FeedtitleComparator.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.util;
 
-import java.util.Comparator;
-
 import de.danoeh.antennapod.feed.Feed;
 
+import java.util.Comparator;
+
 /** Compares the title of two feeds for sorting. */
 public class FeedtitleComparator implements Comparator<Feed> {
 

File: src/de/danoeh/antennapod/util/ShownotesProvider.java
Patch:
@@ -1,7 +1,6 @@
 package de.danoeh.antennapod.util;
 
 import java.util.concurrent.Callable;
-import java.util.concurrent.FutureTask;
 
 /**
  * Created by daniel on 04.08.13.

File: src/de/danoeh/antennapod/util/URIUtil.java
Patch:
@@ -1,7 +1,7 @@
 package de.danoeh.antennapod.util;
 
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 
 import java.net.MalformedURLException;
 import java.net.URI;
@@ -21,7 +21,7 @@ public static URI getURIFromRequestUrl(String source) {
         try {
             return new URI(source);
         } catch (URISyntaxException e) {
-            if (AppConfig.DEBUG) Log.d(TAG, "Source is not encoded, encoding now");
+            if (BuildConfig.DEBUG) Log.d(TAG, "Source is not encoded, encoding now");
         }
         try {
             URL url = new URL(source);

File: src/de/danoeh/antennapod/util/URLChecker.java
Patch:
@@ -1,7 +1,7 @@
 package de.danoeh.antennapod.util;
 
 import android.util.Log;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 
 /** Provides methods for checking and editing a URL.*/
 public final class URLChecker {
@@ -20,10 +20,10 @@ private URLChecker() {
     public static String prepareURL(String url) {
         StringBuilder builder = new StringBuilder();
         if (url.startsWith("feed://")) {
-            if (AppConfig.DEBUG) Log.d(TAG, "Replacing feed:// with http://");
+            if (BuildConfig.DEBUG) Log.d(TAG, "Replacing feed:// with http://");
             url = url.replace("feed://", "http://");
         } else if (!(url.startsWith("http://") || url.startsWith("https://"))) {
-            if (AppConfig.DEBUG) Log.d(TAG, "Adding http:// at the beginning of the URL");
+            if (BuildConfig.DEBUG) Log.d(TAG, "Adding http:// at the beginning of the URL");
             builder.append("http://");
         }
         builder.append(url);

File: src/de/danoeh/antennapod/util/UndoBarController.java
Patch:
@@ -26,10 +26,10 @@
 import com.nineoldandroids.animation.AnimatorListenerAdapter;
 import com.nineoldandroids.view.ViewHelper;
 import com.nineoldandroids.view.ViewPropertyAnimator;
-import static com.nineoldandroids.view.ViewPropertyAnimator.animate;
-
 import de.danoeh.antennapod.R;
 
+import static com.nineoldandroids.view.ViewPropertyAnimator.animate;
+
 public class UndoBarController {
     private View mBarView;
     private TextView mMessageView;

File: src/de/danoeh/antennapod/util/comparator/ChapterStartTimeComparator.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.util.comparator;
 
-import java.util.Comparator;
-
 import de.danoeh.antennapod.feed.Chapter;
 
+import java.util.Comparator;
+
 public class ChapterStartTimeComparator implements Comparator<Chapter> {
 
 	@Override

File: src/de/danoeh/antennapod/util/comparator/DownloadStatusComparator.java
Patch:
@@ -1,8 +1,8 @@
 package de.danoeh.antennapod.util.comparator;
 
-import java.util.Comparator;
+import de.danoeh.antennapod.service.download.DownloadStatus;
 
-import de.danoeh.antennapod.service.download.*;
+import java.util.Comparator;
 
 /** Compares the completion date of two Downloadstatus objects. */
 public class DownloadStatusComparator implements Comparator<DownloadStatus> {

File: src/de/danoeh/antennapod/util/comparator/FeedItemPubdateComparator.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.util.comparator;
 
-import java.util.Comparator;
-
 import de.danoeh.antennapod.feed.FeedItem;
 
+import java.util.Comparator;
+
 /** Compares the pubDate of two FeedItems for sorting*/
 public class FeedItemPubdateComparator implements Comparator<FeedItem> {
 

File: src/de/danoeh/antennapod/util/comparator/PlaybackCompletionDateComparator.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.util.comparator;
 
-import java.util.Comparator;
-
 import de.danoeh.antennapod.feed.FeedItem;
 
+import java.util.Comparator;
+
 public class PlaybackCompletionDateComparator implements Comparator<FeedItem> {
 	
 	public int compare(FeedItem lhs, FeedItem rhs) {

File: src/de/danoeh/antennapod/util/comparator/SearchResultValueComparator.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.util.comparator;
 
-import java.util.Comparator;
-
 import de.danoeh.antennapod.feed.SearchResult;
 
+import java.util.Comparator;
+
 public class SearchResultValueComparator implements Comparator<SearchResult> {
 
 	@Override

File: src/de/danoeh/antennapod/util/flattr/FlattrThing.java
Patch:
@@ -1,7 +1,5 @@
 package de.danoeh.antennapod.util.flattr;
 
-import de.danoeh.antennapod.util.flattr.FlattrStatus;
-
 public interface FlattrThing {
 	public String getTitle();
 	public String getPaymentLink();

File: src/de/danoeh/antennapod/util/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
-import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.feed.FeedItem;
 import de.danoeh.antennapod.service.playback.PlaybackService;
@@ -95,7 +95,7 @@ public static boolean onPrepareMenu(MenuInterface mi,
             mi.setItemVisibility(R.id.share_link_item, false);
         }
 
-        if (!AppConfig.DEBUG
+        if (!BuildConfig.DEBUG
                 || !(state == FeedItem.State.IN_PROGRESS || state == FeedItem.State.READ)) {
             mi.setItemVisibility(R.id.mark_unread_item, false);
         }

File: src/de/danoeh/antennapod/util/playback/AudioPlayer.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Context;
 import android.util.Log;
 import android.view.SurfaceHolder;
-
 import com.aocate.media.MediaPlayer;
 
 public class AudioPlayer extends MediaPlayer implements IPlayer {

File: src/de/danoeh/antennapod/util/playback/IPlayer.java
Patch:
@@ -1,9 +1,9 @@
 package de.danoeh.antennapod.util.playback;
 
-import java.io.IOException;
-
 import android.view.SurfaceHolder;
 
+import java.io.IOException;
+
 public interface IPlayer {
 	boolean canSetPitch();
 

File: src/de/danoeh/antennapod/util/vorbiscommentreader/OggInputStream.java
Patch:
@@ -1,10 +1,11 @@
 package de.danoeh.antennapod.util.vorbiscommentreader;
+
+import org.apache.commons.io.IOUtils;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Arrays;
 
-import org.apache.commons.io.IOUtils;
-
 public class OggInputStream extends InputStream {
 	private InputStream input;
 

File: src/de/danoeh/antennapod/util/vorbiscommentreader/VorbisCommentReader.java
Patch:
@@ -1,15 +1,15 @@
 package de.danoeh.antennapod.util.vorbiscommentreader;
 
+import org.apache.commons.io.EndianUtils;
+import org.apache.commons.io.IOUtils;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.UnsupportedEncodingException;
 import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
 import java.util.Arrays;
 
-import org.apache.commons.io.EndianUtils;
-import org.apache.commons.io.IOUtils;
-
 
 public abstract class VorbisCommentReader {
 	/** Length of first page in an ogg file in bytes. */

File: src/de/danoeh/antennapod/feed/FeedItem.java
Patch:
@@ -335,7 +335,9 @@ public FeedImage getImage() {
 
     public void setImage(FeedImage image) {
         this.image = image;
-        image.setOwner(this);
+        if (image != null) {
+            image.setOwner(this);
+        }
     }
 
     /**

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -1354,7 +1354,7 @@ public void onUpgrade(final SQLiteDatabase db, final int oldVersion,
                 db.execSQL("ALTER TABLE " + TABLE_NAME_FEEDS
                         + " ADD COLUMN " + KEY_PASSWORD
                         + " TEXT");
-                db.execSQL("ALTER TABLE" + TABLE_NAME_FEED_ITEMS
+                db.execSQL("ALTER TABLE " + TABLE_NAME_FEED_ITEMS
                         + " ADD COLUMN " + KEY_IMAGE
                         + " INTEGER");
             }

File: src/de/danoeh/antennapod/service/playback/PlaybackServiceMediaPlayer.java
Patch:
@@ -756,6 +756,7 @@ public void run() {
                     mediaPlayer.reset();
 
                 }
+                audioManager.abandonAudioFocus(audioFocusChangeListener);
                 callback.endPlayback(true);
 
                 playerLock.unlock();

File: src/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -50,6 +50,7 @@ protected void onCreate(Bundle savedInstanceState) {
         if (Build.VERSION.SDK_INT >= 11) {
             requestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
         }
+        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
         super.onCreate(savedInstanceState);
         getSupportActionBar().setBackgroundDrawable(new ColorDrawable(0x80000000));
     }

File: src/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -23,7 +23,7 @@
 import de.danoeh.antennapod.feed.FeedMedia;
 import de.danoeh.antennapod.preferences.UserPreferences;
 import de.danoeh.antennapod.service.playback.PlaybackService;
-import de.danoeh.antennapod.storage.DBWriter;
+import de.danoeh.antennapod.storage.DBTasks;
 import de.danoeh.antennapod.util.Converter;
 import de.danoeh.antennapod.util.ShareUtils;
 import de.danoeh.antennapod.util.StorageUtils;
@@ -320,8 +320,7 @@ public void onTimeEntered(long millis) {
                 case R.id.support_item:
                     if (media instanceof FeedMedia) {
                         FeedItem feedItem = ((FeedMedia) media).getItem();
-                        feedItem.getFlattrStatus().setFlattrQueue();
-                        DBWriter.setFlattredStatus(this, feedItem, true);
+                        DBTasks.flattrItemIfLoggedIn(this, feedItem);
                     }
                     break;
                 case R.id.share_link_item:

File: src/de/danoeh/antennapod/asynctask/FlattrClickWorker.java
Patch:
@@ -89,7 +89,6 @@ public FlattrClickWorker(Context context, FlattrThing thing) {
 
     protected void onNoAccessToken() {
         Log.w(TAG, "No access token was available");
-        FlattrUtils.showNoTokenDialog(context, "");
     }
 
     protected void onFlattrError() {

File: src/de/danoeh/antennapod/util/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -155,8 +155,7 @@ public static boolean onMenuItemClicked(Context context, int menuItemId,
                 context.startActivity(new Intent(Intent.ACTION_VIEW, uri));
                 break;
             case R.id.support_item:
-                selectedItem.getFlattrStatus().setFlattrQueue();
-                DBWriter.setFlattredStatus(context, selectedItem, true);
+                DBTasks.flattrItemIfLoggedIn(context, selectedItem);
                 break;
             case R.id.share_link_item:
                 ShareUtils.shareFeedItemLink(context, selectedItem);

File: src/de/danoeh/antennapod/util/menuhandler/FeedMenuHandler.java
Patch:
@@ -84,8 +84,7 @@ public static boolean onOptionsItemClicked(Context context, MenuItem item,
 			context.startActivity(new Intent(Intent.ACTION_VIEW, uri));
 			break;
 		case R.id.support_item:
-			selectedFeed.getFlattrStatus().setFlattrQueue();
-            DBWriter.setFlattredStatus(context, selectedFeed, true);
+			DBTasks.flattrFeedIfLoggedIn(context, selectedFeed);
 			break;
 		case R.id.share_link_item:
 			ShareUtils.shareFeedlink(context, selectedFeed);

File: src/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -372,7 +372,6 @@ protected void onPositionObserverUpdate() {
 			if (currentPosition != PlaybackService.INVALID_TIME
 					&& duration != PlaybackService.INVALID_TIME
 					&& controller.getMedia() != null) {
-				controller.getMedia().setPosition(currentPosition);
 				txtvPosition.setText(Converter
 						.getDurationStringLong(currentPosition));
 				txtvLength.setText(Converter.getDurationStringLong(duration));

File: src/de/danoeh/antennapod/service/playback/PlaybackService.java
Patch:
@@ -725,14 +725,15 @@ protected void onPostExecute(Void result) {
     private synchronized void saveCurrentPosition(boolean updatePlayedDuration, int deltaPlayedDuration) {
         int position = getCurrentPosition();
         int duration = getDuration();
+        float playbackSpeed = getCurrentPlaybackSpeed();
         final Playable playable = mediaPlayer.getPSMPInfo().playable;
         if (position != INVALID_TIME && duration != INVALID_TIME && playable != null) {
             if (AppConfig.DEBUG)
                 Log.d(TAG, "Saving current position to " + position);
             if (updatePlayedDuration && playable instanceof FeedMedia) {
                 FeedMedia m = (FeedMedia) playable;
                 FeedItem item = m.getItem();
-                m.setPlayedDuration(m.getPlayedDuration() + deltaPlayedDuration);
+                m.setPlayedDuration(m.getPlayedDuration() + ((int)(deltaPlayedDuration * playbackSpeed)));
                 // Auto flattr
                 if (FlattrUtils.hasToken() && UserPreferences.isAutoFlattr() && item.getPaymentLink() != null && item.getFlattrStatus().getUnflattred() &&
                         (m.getPlayedDuration() > UserPreferences.getPlayedDurationAutoflattrThreshold() * duration)) {

File: src/de/danoeh/antennapod/feed/FeedItem.java
Patch:
@@ -107,9 +107,9 @@ public void updateFromOther(FeedItem other) {
      * of the entry.
      */
     public String getIdentifyingValue() {
-        if (itemIdentifier != null) {
+        if (itemIdentifier != null && !itemIdentifier.isEmpty()) {
             return itemIdentifier;
-        } else if (title != null) {
+        } else if (title != null && !title.isEmpty()) {
             return title;
         } else {
             return link;

File: src/de/danoeh/antennapod/util/playback/PlaybackController.java
Patch:
@@ -171,7 +171,7 @@ protected Intent doInBackground(Void... voids) {
             @Override
             protected void onPostExecute(Intent serviceIntent) {
                 boolean bound = false;
-                if (!PlaybackService.isRunning) {
+                if (!PlaybackService.started) {
                     if (serviceIntent != null) {
                         if (AppConfig.DEBUG) Log.d(TAG, "Calling start service");
                         activity.startService(serviceIntent);

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -711,7 +711,7 @@ public void clearPlaybackHistory() {
      */
     public final Cursor getAllFeedsCursor() {
         Cursor c = db.query(TABLE_NAME_FEEDS, FEED_SEL_STD, null, null, null, null,
-                KEY_TITLE + " ASC");
+                KEY_TITLE + " COLLATE NOCASE ASC");
         return c;
     }
 

File: src/de/danoeh/antennapod/storage/DBReader.java
Patch:
@@ -15,6 +15,7 @@
 import de.danoeh.antennapod.util.DownloadError;
 import de.danoeh.antennapod.util.comparator.DownloadStatusComparator;
 import de.danoeh.antennapod.util.comparator.FeedItemPubdateComparator;
+import de.danoeh.antennapod.util.comparator.PlaybackCompletionDateComparator;
 
 /**
  * Provides methods for reading data from the AntennaPod database.
@@ -515,8 +516,9 @@ public static List<FeedItem> getPlaybackHistory(final Context context) {
         List<FeedItem> items = extractItemlistFromCursor(adapter, itemCursor);
         loadFeedDataOfFeedItemlist(context, items);
         itemCursor.close();
-
         adapter.close();
+
+        Collections.sort(items, new PlaybackCompletionDateComparator());
         return items;
     }
 

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -849,7 +849,7 @@ public Cursor getDownloadedItemsCursor() {
 
     /**
      * Returns a cursor which contains feed media objects with a playback
-     * completion date in descending order.
+     * completion date in ascending order.
      *
      * @param limit The maximum row count of the returned cursor. Must be an
      *              integer >= 0.
@@ -860,8 +860,8 @@ public final Cursor getCompletedMediaCursor(int limit) {
             throw new IllegalArgumentException("Limit must be >= 0");
         }
         Cursor c = db.query(TABLE_NAME_FEED_MEDIA, null,
-                KEY_PLAYBACK_COMPLETION_DATE + " > 0", null, null,
-                null, KEY_PLAYBACK_COMPLETION_DATE + " DESC LIMIT " + limit);
+                KEY_PLAYBACK_COMPLETION_DATE + " > 0 LIMIT " + limit, null, null,
+                null, null);
         return c;
     }
 

File: src/de/danoeh/antennapod/service/playback/PlaybackServiceTaskManager.java
Patch:
@@ -212,7 +212,7 @@ public synchronized void setSleepTimer(long waitingTime) {
      * Returns true if the sleep timer is currently active.
      */
     public synchronized boolean isSleepTimerActive() {
-        return sleepTimer != null && sleepTimerFuture != null && !sleepTimerFuture.isCancelled() && !sleepTimerFuture.isDone();
+        return sleepTimer != null && sleepTimerFuture != null && !sleepTimerFuture.isCancelled() && !sleepTimerFuture.isDone() && sleepTimer.isWaiting;
     }
 
     /**
@@ -345,10 +345,11 @@ public void run() {
                     if (waitingTime <= 0) {
                         if (AppConfig.DEBUG)
                             Log.d(TAG, "Waiting completed");
+                        postExecute();
                         if (!Thread.currentThread().isInterrupted()) {
                             callback.onSleepTimerExpired();
                         }
-                        postExecute();
+
                     }
                 } catch (InterruptedException e) {
                     Log.d(TAG, "Thread was interrupted while waiting");

File: src/de/danoeh/antennapod/preferences/UserPreferences.java
Patch:
@@ -319,7 +319,9 @@ public void onSharedPreferenceChanged(SharedPreferences sp, String key) {
 					PREF_PLAYBACK_SPEED_ARRAY, null));
 		} else if (key.equals(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS)) {
 			pauseForFocusLoss = sp.getBoolean(PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS, false);
-		}
+		} else if (key.equals(PREF_PAUSE_ON_HEADSET_DISCONNECT)) {
+            pauseOnHeadsetDisconnect = sp.getBoolean(PREF_PAUSE_ON_HEADSET_DISCONNECT, true);
+        }
 	}
 
 	public static void setPlaybackSpeed(String speed) {

File: src/de/danoeh/antennapod/service/playback/PlaybackService.java
Patch:
@@ -899,7 +899,7 @@ public void onReceive(Context context, Intent intent) {
                     intent.getAction().equals(ACTION_SKIP_CURRENT_EPISODE)) {
                 if (AppConfig.DEBUG)
                     Log.d(TAG, "Received SKIP_CURRENT_EPISODE intent");
-                endPlayback(true);
+                mediaPlayer.endPlayback();
             }
         }
     };

File: src/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -508,6 +508,7 @@ protected void onReloadNotification(int notificationCode) {
             if (AppConfig.DEBUG)
                 Log.d(TAG,
                         "ReloadNotification received, switching to Videoplayer now");
+            finish();
             startActivity(new Intent(this, VideoplayerActivity.class));
 
         }

File: src/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -274,6 +274,7 @@ protected void onReloadNotification(int notificationCode) {
             if (AppConfig.DEBUG)
                 Log.d(TAG,
                         "ReloadNotification received, switching to Audioplayer now");
+            finish();
             startActivity(new Intent(this, AudioplayerActivity.class));
         }
     }

File: src/de/danoeh/antennapod/service/playback/PlaybackService.java
Patch:
@@ -519,14 +519,12 @@ private void endPlayback(boolean playNextEpisode) {
             stopWidgetUpdater();
         }
 
-        int notificationCode = 0;
         writePlaybackPreferences();
         if (nextMedia != null) {
             stream = !media.localFileAvailable();
-
             mediaPlayer.playMediaObject(nextMedia, stream, startWhenPrepared, prepareImmediately);
             sendNotificationBroadcast(NOTIFICATION_TYPE_RELOAD,
-                    notificationCode);
+                    (nextMedia.getMediaType() == MediaType.VIDEO) ? EXTRA_CODE_VIDEO : EXTRA_CODE_AUDIO);
         } else {
             sendNotificationBroadcast(NOTIFICATION_TYPE_PLAYBACK_END, 0);
             //stopSelf();

File: src/de/danoeh/antennapod/util/playback/PlaybackController.java
Patch:
@@ -323,10 +323,9 @@ public void onReceive(Context context, Intent intent) {
                         case PlaybackService.NOTIFICATION_TYPE_RELOAD:
                             cancelPositionObserver();
                             mediaInfoLoaded = false;
+                            queryService();
                             onReloadNotification(intent.getIntExtra(
                                     PlaybackService.EXTRA_NOTIFICATION_CODE, -1));
-                            queryService();
-
                             break;
                         case PlaybackService.NOTIFICATION_TYPE_SLEEPTIMER_UPDATE:
                             onSleepTimerUpdate();

File: src/de/danoeh/antennapod/activity/VideoplayerActivity.java
Patch:
@@ -60,6 +60,9 @@ protected void onPause() {
         if (videoControlsToggler != null) {
             videoControlsToggler.cancel(true);
         }
+        if (controller != null && controller.getStatus() == PlayerStatus.PLAYING) {
+            controller.pause();
+        }
     }
 
     @Override

File: src/de/danoeh/antennapod/util/playback/PlaybackController.java
Patch:
@@ -152,9 +152,6 @@ public void release() {
      */
     public void pause() {
         mediaInfoLoaded = false;
-        if (playbackService != null && PlaybackService.getCurrentMediaType() == MediaType.VIDEO) {
-            playbackService.pause(true, true);
-        }
     }
 
     /**

File: src/de/danoeh/antennapod/util/playback/PlaybackController.java
Patch:
@@ -3,6 +3,7 @@
 import android.app.Activity;
 import android.content.*;
 import android.content.res.TypedArray;
+import android.media.MediaPlayer;
 import android.os.AsyncTask;
 import android.os.IBinder;
 import android.preference.PreferenceManager;
@@ -415,6 +416,7 @@ private void handleStatus() {
 
             case ERROR:
                 postStatusMsg(R.string.player_error_msg);
+                handleError(MediaPlayer.MEDIA_ERROR_UNKNOWN);
                 break;
             case PAUSED:
                 clearStatusMsg();
@@ -520,7 +522,7 @@ void queryService() {
      */
     public float onSeekBarProgressChanged(SeekBar seekBar, int progress,
                                           boolean fromUser, TextView txtvPosition) {
-        if (fromUser && playbackService != null) {
+        if (fromUser && playbackService != null && media != null) {
             float prog = progress / ((float) seekBar.getMax());
             int duration = media.getDuration();
             txtvPosition.setText(Converter

File: src/de/danoeh/antennapod/util/flattr/FlattrUtils.java
Patch:
@@ -30,6 +30,7 @@
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.FlattrAuthActivity;
 import de.danoeh.antennapod.asynctask.FlattrTokenFetcher;
+import de.danoeh.antennapod.storage.DBWriter;
 
 /** Utility methods for doing something with flattr. */
 
@@ -190,7 +191,8 @@ public static void revokeAccessToken(Context context) {
 		deleteToken();
 		FlattrServiceCreator.deleteFlattrService();
 		showRevokeDialog(context);
-	}
+        DBWriter.clearAllFlattrStatus(context);
+    }
 
 	// ------------------------------------------------ DIALOGS
 

File: src/de/danoeh/antennapod/feed/Feed.java
Patch:
@@ -245,6 +245,9 @@ public void updateFromOther(Feed other) {
         if (other.paymentLink != null) {
             paymentLink = other.paymentLink;
         }
+        if (other.flattrStatus != null) {
+            flattrStatus = other.flattrStatus;
+        }
     }
 
     public boolean compareWithOther(Feed other) {

File: src/de/danoeh/antennapod/storage/DBReader.java
Patch:
@@ -336,7 +336,7 @@ private static Feed extractFeedFromCursorRow(PodDBAdapter adapter,
                 cursor.getString(PodDBAdapter.IDX_FEED_SEL_STD_FILE_URL),
                 cursor.getString(PodDBAdapter.IDX_FEED_SEL_STD_DOWNLOAD_URL),
                 cursor.getInt(PodDBAdapter.IDX_FEED_SEL_STD_DOWNLOADED) > 0,
-                new FlattrStatus(cursor.getLong(PodDBAdapter.KEY_FEED_FLATTR_STATUS_INDEX)));
+                new FlattrStatus(cursor.getLong(PodDBAdapter.IDX_FEED_SEL_STD_FLATTR_STATUS)));
 
         if (image != null) {
             image.setFeed(feed);

File: src/de/danoeh/antennapod/util/flattr/FlattrStatus.java
Patch:
@@ -11,6 +11,7 @@ public class FlattrStatus {
 	private Calendar lastFlattred;
 	
 	public FlattrStatus() {
+        status = STATUS_UNFLATTERED;
 		lastFlattred = Calendar.getInstance();
 	}
 

File: src/de/danoeh/antennapod/feed/FeedItem.java
Patch:
@@ -80,7 +80,7 @@ public void updateFromOther(FeedItem other) {
         }
         if (other.media != null) {
             if (media == null) {
-                media = other.media;
+                setMedia(other.media);
             } else if (media.compareWithOther(other)) {
                 media.updateFromOther(other);
             }

File: src/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java
Patch:
@@ -56,9 +56,9 @@ public class GpodnetAuthenticationActivity extends ActionBarActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        setTheme(UserPreferences.getTheme());
         super.onCreate(savedInstanceState);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-        setTheme(UserPreferences.getTheme());
 
         setContentView(R.layout.gpodnetauth_activity);
         service = new GpodnetService();

File: src/de/danoeh/antennapod/activity/FeedItemlistActivity.java
Patch:
@@ -152,11 +152,10 @@ public boolean onCreateOptionsMenu(Menu menu) {
 
             searchView.setSearchableInfo(
                     searchManager.getSearchableInfo(getComponentName()));
-            return FeedMenuHandler
+            FeedMenuHandler
                     .onCreateOptionsMenu(getMenuInflater(), menu);
-        } else {
-            return false;
         }
+        return true;
     }
 
     @Override

File: src/de/danoeh/antennapod/util/menuhandler/FeedMenuHandler.java
Patch:
@@ -31,7 +31,7 @@ public static boolean onCreateOptionsMenu(MenuInflater inflater, Menu menu) {
 
 	public static boolean onPrepareOptionsMenu(Menu menu, Feed selectedFeed) {
         if (selectedFeed == null) {
-            return false;
+            return true;
         }
 
 		if (AppConfig.DEBUG)

File: src/instrumentationTest/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -708,7 +708,7 @@ public void testMarkFeedRead() throws InterruptedException, ExecutionException,
         }
     }
 
-    public void testMarkAllItemsReadSameFeed() {
+    public void testMarkAllItemsReadSameFeed() throws InterruptedException, ExecutionException, TimeoutException {
         final Context context = getInstrumentation().getTargetContext();
         final int NUM_ITEMS = 10;
         Feed feed = new Feed("url", new Date(), "title");
@@ -728,7 +728,7 @@ public void testMarkAllItemsReadSameFeed() {
             assertTrue(item.getId() != 0);
         }
 
-        DBWriter.markAllItemsRead(context);
+        DBWriter.markAllItemsRead(context).get(TIMEOUT, TimeUnit.SECONDS);
         List<FeedItem> loadedItems = DBReader.getFeedItemList(context, feed);
         for (FeedItem item : loadedItems) {
             assertTrue(item.isRead());

File: src/de/danoeh/antennapod/storage/DBTasks.java
Patch:
@@ -509,7 +509,7 @@ public int compare(FeedItem lhs, FeedItem rhs) {
 
         for (FeedItem item : delete) {
             try {
-                DBWriter.deleteFeedMediaOfItem(context, item.getId()).get();
+                DBWriter.deleteFeedMediaOfItem(context, item.getMedia().getId()).get();
             } catch (InterruptedException e) {
                 e.printStackTrace();
             } catch (ExecutionException e) {

File: src/de/danoeh/antennapod/storage/DBReader.java
Patch:
@@ -106,7 +106,7 @@ public static List<String> getFeedListDownloadUrls(final Context context) {
      * of the returned list does NOT have its list of FeedItems yet. The FeedItem-list
      * can be loaded separately with {@link #getFeedItemList(android.content.Context, de.danoeh.antennapod.feed.Feed)}.
      */
-    static List<Feed> getExpiredFeedsList(final Context context, final long expirationTime) {
+    public static List<Feed> getExpiredFeedsList(final Context context, final long expirationTime) {
         if (AppConfig.DEBUG)
             Log.d(TAG, String.format("getExpiredFeedsList(%d)", expirationTime));
 

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -675,8 +675,8 @@ public final Cursor getFeedCursorDownloadUrls() {
     }
 
     public final Cursor getExpiredFeedsCursor(long expirationTime) {
-        Cursor c = db.query(TABLE_NAME_FEEDS, null, "?<?", new String[]{
-                KEY_LASTUPDATE, String.valueOf(System.currentTimeMillis() - expirationTime)}, null, null,
+        Cursor c = db.query(TABLE_NAME_FEEDS, null, KEY_LASTUPDATE + " < " + String.valueOf(System.currentTimeMillis() - expirationTime),
+                null, null, null,
                 null);
         return c;
     }

File: src/de/danoeh/antennapod/activity/AddFeedActivity.java
Patch:
@@ -217,7 +217,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-            NavUtils.navigateUpFromSameTask(this);
+            finish();
 			return true;
 		default:
 			return false;

File: src/de/danoeh/antennapod/activity/DownloadActivity.java
Patch:
@@ -198,7 +198,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                NavUtils.navigateUpFromSameTask(this);
+                finish();
                 break;
             case MENU_SHOW_LOG:
                 startActivity(new Intent(this, DownloadLogActivity.class));

File: src/de/danoeh/antennapod/activity/OrganizeQueueActivity.java
Patch:
@@ -146,7 +146,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-            NavUtils.navigateUpFromSameTask(this);
+            finish();
 			return true;
 		default:
 			return false;

File: src/de/danoeh/antennapod/activity/PlaybackHistoryActivity.java
Patch:
@@ -32,7 +32,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-            NavUtils.navigateUpFromSameTask(this);
+            finish();
 			return true;
 		case R.id.clear_history_item:
 			DBWriter.clearPlaybackHistory(this);

File: src/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -325,7 +325,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                NavUtils.navigateUpFromSameTask(this);
+                finish();
                 break;
             default:
                 return false;

File: src/de/danoeh/antennapod/adapter/FeedlistAdapter.java
Patch:
@@ -89,7 +89,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
             if (DownloadRequester.getInstance().isDownloadingFile(feed)) {
                 holder.lastUpdate.setText(R.string.refreshing_label);
             } else {
-                if (feedItemStatistics.getNumberOfItems() > 0) {
+                if (feedItemStatistics.lastUpdateKnown()) {
                     holder.lastUpdate.setText(convertView.getResources().getString(
                             R.string.most_recent_prefix)
                             + DateUtils.getRelativeTimeSpanString(

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -1017,14 +1017,15 @@ public Cursor searchItemChapters(long feedID, String searchQuery) {
      * Select number of items, new items, the date of the latest episode and the number of episodes in progress. The result
      * is sorted by the title of the feed.
      */
-    private static final String FEED_STATISTICS_QUERY = "SELECT feed, num_items, new_items, latest_episode, in_progress FROM " +
+    private static final String FEED_STATISTICS_QUERY = "SELECT Feeds.id, num_items, new_items, latest_episode, in_progress FROM " +
+            " Feeds LEFT JOIN " +
             "(SELECT feed,count(*) AS num_items," +
             " COUNT(CASE WHEN read=0 THEN 1 END) AS new_items," +
             " MAX(pubDate) AS latest_episode," +
             " COUNT(CASE WHEN position>0 THEN 1 END) AS in_progress," +
             " COUNT(CASE WHEN downloaded=1 THEN 1 END) AS episodes_downloaded " +
             " FROM FeedItems LEFT JOIN FeedMedia ON FeedItems.id=FeedMedia.feeditem GROUP BY FeedItems.feed)" +
-            " INNER JOIN Feeds ON Feeds.id = feed ORDER BY Feeds.title;";
+            " ON Feeds.id = feed ORDER BY Feeds.title;";
 
     public Cursor getFeedStatisticsCursor() {
         return db.rawQuery(FEED_STATISTICS_QUERY, null);

File: src/de/danoeh/antennapod/asynctask/FeedRemover.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.DialogInterface;
 import android.content.DialogInterface.OnCancelListener;
 import android.os.AsyncTask;
+import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.feed.Feed;
 import de.danoeh.antennapod.storage.DBWriter;
 
@@ -48,7 +49,7 @@ protected void onPostExecute(Void result) {
 	@Override
 	protected void onPreExecute() {
 		dialog = new ProgressDialog(context);
-		dialog.setMessage("Removing Feed");
+		dialog.setMessage(context.getString(R.string.feed_remover_msg));
 		dialog.setOnCancelListener(new OnCancelListener() {
 
 			@Override

File: src/de/danoeh/antennapod/activity/AddFeedActivity.java
Patch:
@@ -206,6 +206,7 @@ public void onClick(DialogInterface dialog, int which) {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		return true;
 	}
 

File: src/de/danoeh/antennapod/activity/DirectoryChooserActivity.java
Patch:
@@ -280,13 +280,15 @@ public void run() {
 
 	@Override
 	public boolean onPrepareOptionsMenu(Menu menu) {
+        super.onPrepareOptionsMenu(menu);
 		menu.findItem(R.id.new_folder_item)
 				.setVisible(isValidFile(selectedDir));
 		return true;
 	}
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		MenuInflater inflater = getMenuInflater();
 		inflater.inflate(R.menu.directory_chooser, menu);
 		return true;

File: src/de/danoeh/antennapod/activity/DownloadActivity.java
Patch:
@@ -183,6 +183,7 @@ public boolean onItemLongClick(AdapterView<?> arg0, View view,
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, MENU_SHOW_LOG, Menu.NONE,
                 R.string.show_download_log),
                 MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);

File: src/de/danoeh/antennapod/activity/DownloadLogActivity.java
Patch:
@@ -59,6 +59,7 @@ protected void onResume() {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		return true;
 	}
 

File: src/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -95,6 +95,7 @@ public void run() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         if (feed != null) {
             MenuInflater inflater = getMenuInflater();
             inflater.inflate(R.menu.feedinfo, menu);
@@ -106,6 +107,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
 
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
+        super.onPrepareOptionsMenu(menu);
         if (feed != null) {
         menu.findItem(R.id.support_item).setVisible(
                 feed.getPaymentLink() != null);

File: src/de/danoeh/antennapod/activity/FeedItemlistActivity.java
Patch:
@@ -114,6 +114,7 @@ protected void onResume() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         if (feed != null) {
             TypedArray drawables = obtainStyledAttributes(new int[]{R.attr.action_search});
             MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, R.id.search_item, Menu.NONE, R.string.search_label)
@@ -139,6 +140,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
 
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
+        super.onPrepareOptionsMenu(menu);
         return FeedMenuHandler.onPrepareOptionsMenu(menu, feed);
     }
 

File: src/de/danoeh/antennapod/activity/FlattrAuthActivity.java
Patch:
@@ -91,6 +91,7 @@ public void handleAuthenticationSuccess() {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		return true;
 	}
 	

File: src/de/danoeh/antennapod/activity/ItemviewActivity.java
Patch:
@@ -125,6 +125,7 @@ private void populateUI() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         if (item != null) {
             MenuInflater inflater = getMenuInflater();
             inflater.inflate(R.menu.feeditem, menu);
@@ -156,6 +157,7 @@ public boolean onOptionsItemSelected(MenuItem menuItem) {
 
     @Override
     public boolean onPrepareOptionsMenu(final Menu menu) {
+        super.onPrepareOptionsMenu(menu);
         return FeedItemMenuHandler.onPrepareMenu(
                 new FeedItemMenuHandler.MenuInterface() {
 

File: src/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -166,6 +166,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
 	@Override
 	public boolean onPrepareOptionsMenu(Menu menu) {
+        super.onPrepareOptionsMenu(menu);
 		MenuItem refreshAll = menu.findItem(R.id.all_feed_refresh);
 		if (DownloadService.isRunning
 				&& DownloadRequester.getInstance().isDownloadingFeeds()) {
@@ -178,6 +179,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		MenuInflater inflater = getMenuInflater();
 		inflater.inflate(R.menu.main, menu);
 

File: src/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -222,13 +222,15 @@ protected void onDestroy() {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		MenuInflater inflater = getMenuInflater();
 		inflater.inflate(R.menu.mediaplayer, menu);
 		return true;
 	}
 
 	@Override
 	public boolean onPrepareOptionsMenu(Menu menu) {
+        super.onPrepareOptionsMenu(menu);
 		Playable media = controller.getMedia();
 
 		menu.findItem(R.id.support_item).setVisible(

File: src/de/danoeh/antennapod/activity/MiroGuideCategoryActivity.java
Patch:
@@ -51,6 +51,7 @@ protected void onCreate(Bundle arg0) {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		return true;
 	}
 

File: src/de/danoeh/antennapod/activity/MiroGuideChannelViewActivity.java
Patch:
@@ -132,13 +132,15 @@ protected void onPostExecute(Void result) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         MenuInflater inflater = getMenuInflater();
         inflater.inflate(R.menu.channelview, menu);
         return true;
     }
 
     @Override
     public boolean onPrepareOptionsMenu(Menu menu) {
+        super.onPrepareOptionsMenu(menu);
         boolean channelLoaded = channel != null;
         boolean beingDownloaded = channelLoaded
                 && DownloadRequester.getInstance().isDownloadingFile(

File: src/de/danoeh/antennapod/activity/MiroGuideMainActivity.java
Patch:
@@ -128,6 +128,7 @@ protected Void doInBackground(Void... params) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, R.id.search_item, Menu.NONE, R.string.search_label)
                 .setIcon(
                         obtainStyledAttributes(

File: src/de/danoeh/antennapod/activity/MiroGuideSearchActivity.java
Patch:
@@ -63,6 +63,7 @@ protected void onNewIntent(Intent intent) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, R.id.search_item, Menu.NONE, R.string.search_label)
                 .setIcon(
                         obtainStyledAttributes(

File: src/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -101,6 +101,7 @@ private List<String> getTitleList() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, R.id.select_all_item, Menu.NONE,
                 R.string.select_all_label),
                 MenuItem.SHOW_AS_ACTION_IF_ROOM);

File: src/de/danoeh/antennapod/activity/OpmlImportFromPathActivity.java
Patch:
@@ -87,6 +87,7 @@ private void setImportPath() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         return true;
     }
 

File: src/de/danoeh/antennapod/activity/PlaybackHistoryActivity.java
Patch:
@@ -20,6 +20,7 @@ public class PlaybackHistoryActivity extends ActionBarActivity {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
 		MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, R.id.clear_history_item, Menu.NONE,
                 R.string.clear_history_label),
 				MenuItem.SHOW_AS_ACTION_IF_ROOM);

File: src/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -300,6 +300,7 @@ private void setDataFolderText() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         return true;
     }
 

File: src/de/danoeh/antennapod/activity/SearchActivity.java
Patch:
@@ -92,6 +92,7 @@ protected void onResume() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, R.id.search_item, Menu.NONE, R.string.search_label)
                 .setIcon(
                         obtainStyledAttributes(

File: src/de/danoeh/antennapod/activity/gpoddernet/GpodnetActivity.java
Patch:
@@ -24,6 +24,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
+        super.onCreateOptionsMenu(menu);
         MenuItemCompat.setShowAsAction(menu.add(Menu.NONE, R.id.search_item, Menu.NONE, R.string.search_label)
                 .setIcon(
                         obtainStyledAttributes(

File: src/de/danoeh/antennapod/activity/DirectoryChooserActivity.java
Patch:
@@ -287,7 +287,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
-		MenuInflater inflater = new MenuInflater(this);
+		MenuInflater inflater = getMenuInflater();
 		inflater.inflate(R.menu.directory_chooser, menu);
 		return true;
 	}

File: src/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -96,7 +96,7 @@ public void run() {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         if (feed != null) {
-            MenuInflater inflater = new MenuInflater(this);
+            MenuInflater inflater = getMenuInflater();
             inflater.inflate(R.menu.feedinfo, menu);
             return true;
         } else {

File: src/de/danoeh/antennapod/activity/FeedItemlistActivity.java
Patch:
@@ -131,7 +131,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
             searchView.setSearchableInfo(
                     searchManager.getSearchableInfo(getComponentName()));
             return FeedMenuHandler
-                    .onCreateOptionsMenu(new MenuInflater(this), menu);
+                    .onCreateOptionsMenu(getMenuInflater(), menu);
         } else {
             return false;
         }

File: src/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -178,7 +178,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
-		MenuInflater inflater = new MenuInflater(this);
+		MenuInflater inflater = getMenuInflater();
 		inflater.inflate(R.menu.main, menu);
 
         SearchManager searchManager =

File: src/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -222,7 +222,7 @@ protected void onDestroy() {
 
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
-		MenuInflater inflater = new MenuInflater(this);
+		MenuInflater inflater = getMenuInflater();
 		inflater.inflate(R.menu.mediaplayer, menu);
 		return true;
 	}

File: src/de/danoeh/antennapod/activity/MiroGuideChannelViewActivity.java
Patch:
@@ -132,7 +132,7 @@ protected void onPostExecute(Void result) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
-        MenuInflater inflater = new MenuInflater(this);
+        MenuInflater inflater = getMenuInflater();
         inflater.inflate(R.menu.channelview, menu);
         return true;
     }

File: src/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -256,6 +256,7 @@ public void onCancel(DialogInterface dialog) {
                 finish();
             }
         });
+        builder.show();
     }
 
 }

File: src/de/danoeh/antennapod/fragment/FeedlistFragment.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.AsyncTask;
+import android.os.Build;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v7.app.ActionBarActivity;
@@ -244,10 +245,11 @@ public void onConfirmButtonPressed(
     }
 
     private boolean actionModeDestroyWorkaround = false; // TODO remove this workaround
+    private boolean skipWorkAround = Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH;
 
     @Override
     public void onDestroyActionMode(ActionMode mode) {
-        if (actionModeDestroyWorkaround) {
+        if (skipWorkAround || actionModeDestroyWorkaround) {
             mActionMode = null;
             selectedFeed = null;
             fla.setSelectedItemIndex(FeedlistAdapter.SELECTION_NONE);

File: src/instrumentationTest/de/test/antennapod/storage/DBWriterTest.java
Patch:
@@ -31,7 +31,7 @@ public class DBWriterTest extends InstrumentationTestCase {
     protected void tearDown() throws Exception {
         super.tearDown();
         final Context context = getInstrumentation().getTargetContext();
-        context.deleteDatabase(PodDBAdapter.DATABASE_NAME);
+        assertTrue(PodDBAdapter.deleteDatabase(getInstrumentation().getTargetContext()));
 
         File testDir = context.getExternalFilesDir(TEST_FOLDER);
         assertNotNull(testDir);

File: src/de/danoeh/antennapod/storage/DBTasks.java
Patch:
@@ -406,10 +406,11 @@ public static void performAutoCleanup(final Context context) {
 
     private static int performAutoCleanup(final Context context,
                                           final int episodeNumber) {
-        List<FeedItem> candidates = DBReader.getDownloadedItems(context);
+        List<FeedItem> candidates = new ArrayList<FeedItem>();
+        List<FeedItem> downloadedItems = DBReader.getDownloadedItems(context);
         List<FeedItem> queue = DBReader.getQueue(context);
         List<FeedItem> delete;
-        for (FeedItem item : candidates) {
+        for (FeedItem item : downloadedItems) {
             if (item.hasMedia() && item.getMedia().isDownloaded()
                     && !queue.contains(item) && item.isRead()) {
                 candidates.add(item);

File: src/de/danoeh/antennapod/asynctask/ImageLoader.java
Patch:
@@ -77,7 +77,7 @@ public Thread newThread(Runnable r) {
 		});
 	}
 
-	public static ImageLoader getInstance() {
+	public static synchronized ImageLoader getInstance() {
 		if (singleton == null) {
 			singleton = new ImageLoader();
 		}

File: src/de/danoeh/antennapod/feed/EventDistributor.java
Patch:
@@ -39,7 +39,7 @@ private EventDistributor() {
 		events = new ConcurrentLinkedQueue<Integer>();
 	}
 
-	public static EventDistributor getInstance() {
+	public static synchronized EventDistributor getInstance() {
 		if (instance == null) {
 			instance = new EventDistributor();
 		}

File: src/de/danoeh/antennapod/fragment/FeedlistFragment.java
Patch:
@@ -265,9 +265,9 @@ public void onItemClick(AdapterView<?> arg0, View arg1, int position,
     public boolean onItemLongClick(AdapterView<?> parent, View view,
                                    int position, long id) {
         Feed selection = fla.getItem(position);
-        if (AppConfig.DEBUG)
-            Log.d(TAG, "Selected Feed with title " + selection.getTitle());
         if (selection != null) {
+            if (AppConfig.DEBUG)
+                Log.d(TAG, "Selected Feed with title " + selection.getTitle());
             if (mActionMode != null) {
                 mActionMode.finish();
             }

File: src/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -374,11 +374,10 @@ protected Void doInBackground(Void... params) {
                     Callable<String> shownotesLoadTask = shownotesProvider.loadShownotes();
                     final String shownotes = shownotesLoadTask.call();
 
-                    data = "";
                     data = StringEscapeUtils.unescapeHtml4(shownotes);
                     Activity activity = getActivity();
                     if (activity != null) {
-                        TypedArray res = getActivity()
+                        TypedArray res = activity
                                 .getTheme()
                                 .obtainStyledAttributes(
                                         new int[]{android.R.attr.textColorPrimary});

File: src/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -50,7 +50,6 @@ public class ItemlistFragment extends ListFragment {
 	public static final String EXTRA_SELECTED_FEEDITEM = "extra.de.danoeh.antennapod.activity.selected_feeditem";
 	public static final String ARGUMENT_FEED_ID = "argument.de.danoeh.antennapod.feed_id";
 	protected InternalFeedItemlistAdapter fila;
-	protected DownloadRequester requester = DownloadRequester.getInstance();
 
 	private Feed feed;
     protected List<Long> queue;
@@ -156,8 +155,6 @@ protected void onPostExecute(Feed result) {
                     } else {
                         Log.e(TAG, "Could not load queue");
                     }
-                    if (result.getItems().isEmpty()) {
-                    }
                     setEmptyViewIfListIsEmpty();
                     if (fila != null) {
                         fila.notifyDataSetChanged();

File: src/de/danoeh/antennapod/service/download/DownloadService.java
Patch:
@@ -184,7 +184,7 @@ public void run() {
     public int onStartCommand(Intent intent, int flags, int startId) {
         if (intent.getParcelableExtra(EXTRA_REQUEST) != null) {
             onDownloadQueued(intent);
-        } else if (numberOfDownloads.equals(0)) {
+        } else if (numberOfDownloads.get() == 0) {
             stopSelf();
         }
         return Service.START_NOT_STICKY;

File: src/de/danoeh/antennapod/storage/DownloadRequester.java
Patch:
@@ -38,7 +38,7 @@ private DownloadRequester() {
         downloads = new ConcurrentHashMap<String, DownloadRequest>();
     }
 
-    public static DownloadRequester getInstance() {
+    public static synchronized DownloadRequester getInstance() {
         if (downloader == null) {
             downloader = new DownloadRequester();
         }

File: src/de/danoeh/antennapod/storage/FeedItemStatistics.java
Patch:
@@ -17,7 +17,7 @@ public FeedItemStatistics(long feedID, int numberOfItems, int numberOfNewItems,
         this.numberOfItems = numberOfItems;
         this.numberOfNewItems = numberOfNewItems;
         this.numberOfInProgressItems = numberOfInProgressItems;
-        this.lastUpdate = lastUpdate;
+        this.lastUpdate = (lastUpdate != null) ? (Date) lastUpdate.clone() : null;
     }
 
     public long getFeedID() {
@@ -37,6 +37,6 @@ public int getNumberOfInProgressItems() {
     }
 
     public Date getLastUpdate() {
-        return lastUpdate;
+        return (lastUpdate != null) ? (Date) lastUpdate.clone() : null;
     }
 }

File: src/de/danoeh/antennapod/service/download/DownloadStatus.java
Patch:
@@ -162,6 +162,7 @@ public void setFailed(DownloadError reason, String reasonDetailed) {
         this.successful = false;
         this.reason = reason;
         this.reasonDetailed = reasonDetailed;
+        this.done = true;
     }
 
     public void setCancelled() {

File: src/de/danoeh/antennapod/activity/DownloadActivity.java
Patch:
@@ -121,7 +121,7 @@ private void startContentRefresher() {
             contentRefresher.cancel(true);
         }
         contentRefresher = new AsyncTask<Void, Void, Void>() {
-            private final int WAITING_INTERVALL = 1000;
+            private static final int WAITING_INTERVAL = 1000;
 
             @Override
             protected void onProgressUpdate(Void... values) {
@@ -137,7 +137,7 @@ protected void onProgressUpdate(Void... values) {
             protected Void doInBackground(Void... params) {
                 while (!isCancelled()) {
                     try {
-                        Thread.sleep(WAITING_INTERVALL);
+                        Thread.sleep(WAITING_INTERVAL);
                         publishProgress();
                     } catch (InterruptedException e) {
                         return null;

File: src/de/danoeh/antennapod/activity/MiroGuideCategoryActivity.java
Patch:
@@ -22,7 +22,7 @@
 public class MiroGuideCategoryActivity extends ActionBarActivity {
 	private static final String TAG = "MiroGuideCategoryActivity";
 
-	public static String EXTRA_CATEGORY = "category";
+	public static final String EXTRA_CATEGORY = "category";
 
 	private ViewPager viewpager;
 	private CategoryPagerAdapter pagerAdapter;

File: src/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -157,7 +157,7 @@ private void parseFeed() {
 
 			@Override
 			public void run() {
-				String reasonDetailed = new String();
+				String reasonDetailed = "";
 				boolean successful = false;
 				FeedHandler handler = new FeedHandler();
 				try {

File: src/de/danoeh/antennapod/activity/OpmlImportFromIntentActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.app.AlertDialog;
 import android.os.Bundle;
 import de.danoeh.antennapod.preferences.UserPreferences;
+import de.danoeh.antennapod.util.LangUtils;
 
 /** Lets the user start the OPML-import process. */
 public class OpmlImportFromIntentActivity extends OpmlImportBaseActivity {
@@ -20,7 +21,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         try {
             URL mOpmlURL = new URL(getIntent().getData().toString());
-            BufferedReader in = new BufferedReader(new InputStreamReader(mOpmlURL.openStream()));
+            BufferedReader in = new BufferedReader(new InputStreamReader(mOpmlURL.openStream(),
+                LangUtils.UTF_8));
             startImport(in);
         } catch (Exception e) {
             new AlertDialog.Builder(this).setMessage("Cannot open XML - Reason: " + e.getMessage()).show();

File: src/de/danoeh/antennapod/asynctask/BitmapDecodeWorkerTask.java
Patch:
@@ -47,7 +47,7 @@ public BitmapDecodeWorkerTask(Handler handler, ImageView target,
 	 */
 	protected boolean tagsMatching(ImageView target) {
 		return target.getTag() == null
-				|| target.getTag() == imageResource.getImageLoaderCacheKey();
+				|| target.getTag().equals(imageResource.getImageLoaderCacheKey());
 	}
 
 	protected void onPostExecute() {

File: src/de/danoeh/antennapod/asynctask/OpmlFeedQueuer.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.asynctask;
 
+import java.util.Arrays;
 import java.util.Date;
 
 import android.annotation.SuppressLint;
@@ -22,7 +23,7 @@ public class OpmlFeedQueuer extends AsyncTask<Void, Void, Void> {
 	public OpmlFeedQueuer(Context context, int[] selection) {
 		super();
 		this.context = context;
-		this.selection = selection;
+		this.selection = Arrays.copyOf(selection, selection.length);
 	}
 
 	@Override

File: src/de/danoeh/antennapod/miroguide/model/MiroGuideItem.java
Patch:
@@ -12,7 +12,7 @@ public MiroGuideItem(String name, String description, Date date, String url) {
 		super();
 		this.name = name;
 		this.description = description;
-		this.date = date;
+		this.date = (Date) date.clone();
 		this.url = url;
 	}
 
@@ -30,7 +30,7 @@ public String getDescription() {
 	}
 
 	public Date getDate() {
-		return date;
+		return (Date) date.clone();
 	}
 
 	public String getUrl() {

File: src/de/danoeh/antennapod/service/download/DownloadStatus.java
Patch:
@@ -52,7 +52,7 @@ public DownloadStatus(long id, String title, long feedfileId,
 		this.feedfileId = feedfileId;
 		this.reason = reason;
 		this.successful = successful;
-		this.completionDate = completionDate;
+		this.completionDate = (Date) completionDate.clone();
 		this.reasonDetailed = reasonDetailed;
 		this.feedfileType = feedfileType;
 	}
@@ -133,7 +133,7 @@ public boolean isSuccessful() {
     }
 
     public Date getCompletionDate() {
-        return completionDate;
+        return (Date) completionDate.clone();
     }
 
     public long getFeedfileId() {
@@ -172,7 +172,7 @@ public void setCancelled() {
     }
 
     public void setCompletionDate(Date completionDate) {
-        this.completionDate = completionDate;
+        this.completionDate = (Date) completionDate.clone();
     }
 
     public void setId(long id) {

File: src/de/danoeh/antennapod/storage/DownloadRequester.java
Patch:
@@ -26,9 +26,9 @@
 public class DownloadRequester {
     private static final String TAG = "DownloadRequester";
 
-    public static String IMAGE_DOWNLOADPATH = "images/";
-    public static String FEED_DOWNLOADPATH = "cache/";
-    public static String MEDIA_DOWNLOADPATH = "media/";
+    public static final String IMAGE_DOWNLOADPATH = "images/";
+    public static final String FEED_DOWNLOADPATH = "cache/";
+    public static final String MEDIA_DOWNLOADPATH = "media/";
 
     private static DownloadRequester downloader;
 

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -10,7 +10,6 @@
 import android.database.MergeCursor;
 import android.database.SQLException;
 import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteStatement;
 import android.database.sqlite.SQLiteDatabase.CursorFactory;
 import android.database.sqlite.SQLiteOpenHelper;
 import android.util.Log;
@@ -235,7 +234,7 @@ public class PodDBAdapter {
     /**
      * Select id, description and content-encoded column from feeditems.
      */
-    public static final String[] SEL_FI_EXTRA = {KEY_ID, KEY_DESCRIPTION,
+    private static final String[] SEL_FI_EXTRA = {KEY_ID, KEY_DESCRIPTION,
             KEY_CONTENT_ENCODED, KEY_FEED};
 
     // column indices for SEL_FI_EXTRA

File: src/de/danoeh/antennapod/syndication/namespace/atom/NSAtom.java
Patch:
@@ -121,7 +121,7 @@ public void handleElementEnd(String localName, HandlerState state) {
 			if (state.getContentBuf() != null) {
 				content = state.getContentBuf().toString();
 			} else {
-				content = new String();
+				content = "";
 			}
 			SyndElement topElement = state.getTagstack().peek();
 			String top = topElement.getName();

File: src/de/danoeh/antennapod/util/LangUtils.java
Patch:
@@ -1,8 +1,11 @@
 package de.danoeh.antennapod.util;
 
+import java.nio.charset.Charset;
 import java.util.HashMap;
 
 public class LangUtils {
+	public static final Charset UTF_8 = Charset.forName("UTF-8");
+
 	private static HashMap<String, String> languages;
 	static {
 		languages = new HashMap<String, String>();

File: src/de/danoeh/antennapod/util/comparator/DownloadStatusComparator.java
Patch:
@@ -9,8 +9,7 @@ public class DownloadStatusComparator implements Comparator<DownloadStatus> {
 
 	@Override
 	public int compare(DownloadStatus lhs, DownloadStatus rhs) {
-		return -lhs.getCompletionDate().compareTo(rhs.getCompletionDate());
-
+		return rhs.getCompletionDate().compareTo(lhs.getCompletionDate());
 	}
 
 }

File: src/de/danoeh/antennapod/util/comparator/FeedItemPubdateComparator.java
Patch:
@@ -13,7 +13,7 @@ public static FeedItemPubdateComparator newInstance() {
 	}*/
 	@Override
 	public int compare(FeedItem lhs, FeedItem rhs) {
-		return -lhs.getPubDate().compareTo(rhs.getPubDate());
+		return rhs.getPubDate().compareTo(lhs.getPubDate());
 	}
 
 }

File: src/de/danoeh/antennapod/util/comparator/PlaybackCompletionDateComparator.java
Patch:
@@ -11,8 +11,8 @@ public int compare(FeedItem lhs, FeedItem rhs) {
 				&& lhs.getMedia().getPlaybackCompletionDate() != null
 				&& rhs.getMedia() != null
 				&& rhs.getMedia().getPlaybackCompletionDate() != null) {
-			return -lhs.getMedia().getPlaybackCompletionDate()
-					.compareTo(rhs.getMedia().getPlaybackCompletionDate());
+			return rhs.getMedia().getPlaybackCompletionDate()
+					.compareTo(lhs.getMedia().getPlaybackCompletionDate());
 		}
 		return 0;
 	}

File: src/de/danoeh/antennapod/util/playback/ExternalMedia.java
Patch:
@@ -25,7 +25,6 @@ public class ExternalMedia implements Playable {
 
 	private String episodeTitle;
 	private String feedTitle;
-	private String shownotes;
 	private MediaType mediaType = MediaType.AUDIO;
 	private List<Chapter> chapters;
 	private int duration;

File: src/de/danoeh/antennapod/activity/FeedItemlistActivity.java
Patch:
@@ -124,6 +124,8 @@ public boolean onCreateOptionsMenu(Menu menu) {
             SearchManager searchManager =
                     (SearchManager) getSystemService(Context.SEARCH_SERVICE);
             SearchView searchView = (SearchView) MenuItemCompat.getActionView(menu.findItem(R.id.search_item));
+
+
             searchView.setIconifiedByDefault(true);
 
             searchView.setSearchableInfo(

File: src/de/danoeh/antennapod/activity/SearchActivity.java
Patch:
@@ -154,7 +154,9 @@ public void run() {
                                         + " results");
 
                             searchAdapter.clear();
-                            searchAdapter.addAll(result);
+                            for (SearchResult s : result) {
+                                searchAdapter.add(s);
+                            }
                             searchAdapter.notifyDataSetChanged();
                             txtvStatus
                                     .setText(R.string.search_status_no_results);

File: src/de/danoeh/antennapod/activity/DownloadLogActivity.java
Patch:
@@ -37,7 +37,7 @@ protected void onCreate(Bundle savedInstanceState) {
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
 
-        listview = (ListView) findViewById(R.layout.listview_activity);
+        listview = (ListView) findViewById(R.id.listview);
 
 		dla = new DownloadLogAdapter(this, itemAccess);
 		listview.setAdapter(dla);

File: src/de/danoeh/antennapod/feed/FeedMedia.java
Patch:
@@ -304,7 +304,7 @@ public boolean streamAvailable() {
     @Override
     public void saveCurrentPosition(SharedPreferences pref, int newPosition) {
         position = newPosition;
-        DBWriter.setFeedMediaPosition(PodcastApp.getInstance(), this);
+        DBWriter.setFeedMediaPlaybackInformation(PodcastApp.getInstance(), this);
     }
 
     @Override

File: src/instrumentationTest/de/test/antennapod/syndication/handler/FeedHandlerTest.java
Patch:
@@ -124,7 +124,7 @@ private boolean isFeedValid(Feed feed) {
 	}
 
 	private boolean hasValidFeedItems(Feed feed) {
-		for (FeedItem item : feed.getItemsArray()) {
+		for (FeedItem item : feed.getItems()) {
 			if (item.getTitle() == null) {
 				Log.e(TAG, "Item has no title");
 				return false;

File: src/de/danoeh/antennapod/activity/ItemviewActivity.java
Patch:
@@ -65,6 +65,7 @@ protected void onResume() {
 	@Override
 	public void onStop() {
 		super.onStop();
+        EventDistributor.getInstance().unregister(contentUpdate);
 		if (AppConfig.DEBUG)
 			Log.d(TAG, "Stopping Activity");
 	}

File: src/de/danoeh/antennapod/service/PlaybackService.java
Patch:
@@ -825,14 +825,14 @@ public void pause(boolean abandonFocus, boolean reinit) {
 			if (AppConfig.DEBUG)
 				Log.d(TAG, "Pausing playback.");
 			player.pause();
+			cancelPositionSaver();
+			saveCurrentPosition();
+			setStatus(PlayerStatus.PAUSED);
 			if (abandonFocus) {
 				audioManager.abandonAudioFocus(audioFocusChangeListener);
 				pausedBecauseOfTransientAudiofocusLoss = false;
 				disableSleepTimer();
 			}
-			cancelPositionSaver();
-			saveCurrentPosition();
-			setStatus(PlayerStatus.PAUSED);
 			stopWidgetUpdater();
 			stopForeground(true);
 			if (shouldStream && reinit) {

File: src/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -122,9 +122,11 @@ private void startFeedDownload(String url) {
 		feed.setFile_url(fileUrl);
 		DownloadRequest request = new DownloadRequest(feed.getFile_url(),
 				feed.getDownload_url(), "OnlineFeed", 0, Feed.FEEDFILETYPE_FEED);
+        /* TODO update
 		HttpDownloader httpDownloader = new HttpDownloader(downloaderCallback,
 				request);
 		httpDownloader.start();
+		*/
 	}
 
 	/** Displays a progress indicator. */

File: src/de/danoeh/antennapod/activity/OrganizeQueueActivity.java
Patch:
@@ -113,9 +113,10 @@ public void update(EventDistributor eventDistributor, Integer arg) {
 
 		@Override
 		public void drop(int from, int to) {
-
+            final FeedItem item = queue.remove(from);
+            queue.add(to, item);
+            adapter.notifyDataSetChanged();
             DBWriter.moveQueueItem(OrganizeQueueActivity.this, from, to, true);
-			//adapter.notifyDataSetChanged();
 		}
 	};
 

File: src/de/danoeh/antennapod/asynctask/OpmlExportWorker.java
Patch:
@@ -17,6 +17,7 @@
 import de.danoeh.antennapod.feed.FeedManager;
 import de.danoeh.antennapod.opml.OpmlWriter;
 import de.danoeh.antennapod.preferences.UserPreferences;
+import de.danoeh.antennapod.storage.DBReader;
 
 /** Writes an OPML file into the export directory in the background. */
 public class OpmlExportWorker extends AsyncTask<Void, Void, Void> {
@@ -51,8 +52,7 @@ protected Void doInBackground(Void... params) {
 		}
 		try {
 			FileWriter writer = new FileWriter(output);
-			opmlWriter.writeDocument(Arrays.asList(FeedManager.getInstance().getFeedsArray()),
-					writer);
+			opmlWriter.writeDocument(DBReader.getFeedList(context), writer);
 			writer.close();
 		} catch (IOException e) {
 			e.printStackTrace();

File: src/de/danoeh/antennapod/feed/FeedImage.java
Patch:
@@ -9,7 +9,7 @@
 
 import de.danoeh.antennapod.asynctask.ImageLoader;
 
-;
+
 
 public class FeedImage extends FeedFile implements
 		ImageLoader.ImageWorkerTaskResource {

File: src/de/danoeh/antennapod/receiver/ConnectivityActionReceiver.java
Patch:
@@ -8,6 +8,7 @@
 import android.util.Log;
 import de.danoeh.antennapod.AppConfig;
 import de.danoeh.antennapod.feed.FeedManager;
+import de.danoeh.antennapod.storage.DBTasks;
 import de.danoeh.antennapod.storage.DownloadRequester;
 import de.danoeh.antennapod.util.NetworkUtils;
 
@@ -27,7 +28,7 @@ public void onReceive(final Context context, Intent intent) {
 				new Thread() {
 					@Override
 					public void run() {
-						FeedManager.getInstance()
+						DBTasks
 								.autodownloadUndownloadedItems(context);
 					}
 				}.start();

File: src/de/danoeh/antennapod/receiver/FeedUpdateReceiver.java
Patch:
@@ -9,6 +9,7 @@
 import de.danoeh.antennapod.AppConfig;
 import de.danoeh.antennapod.feed.FeedManager;
 import de.danoeh.antennapod.preferences.UserPreferences;
+import de.danoeh.antennapod.storage.DBTasks;
 
 /** Refreshes all feeds when it receives an intent */
 public class FeedUpdateReceiver extends BroadcastReceiver {
@@ -22,7 +23,7 @@ public void onReceive(Context context, Intent intent) {
 				Log.d(TAG, "Received intent");
 			boolean mobileUpdate = UserPreferences.isAllowMobileUpdate();
 			if (mobileUpdate || connectedToWifi(context)) {
-				FeedManager.getInstance().refreshExpiredFeeds(context);
+				DBTasks.refreshExpiredFeeds(context);
 			} else {
 				if (AppConfig.DEBUG)
 					Log.d(TAG,

File: src/de/danoeh/antennapod/storage/DBTasks.java
Patch:
@@ -87,7 +87,7 @@ public void run() {
 		}
 	}
 
-	public void refreshExpiredFeeds(final Context context) {
+	public static void refreshExpiredFeeds(final Context context) {
 		if (AppConfig.DEBUG)
 			Log.d(TAG, "Refreshing expired feeds");
 
@@ -130,7 +130,7 @@ private static void refreshFeeds(final Context context,
 	}
 
 	/** Updates a specific feed. */
-	private static void refreshFeed(Context context, Feed feed)
+	public static void refreshFeed(Context context, Feed feed)
 			throws DownloadRequestException {
 		DownloadRequester.getInstance().downloadFeed(context,
 				new Feed(feed.getDownload_url(), new Date(), feed.getTitle()));

File: src/de/danoeh/antennapod/util/comparator/DownloadStatusComparator.java
Patch:
@@ -2,7 +2,7 @@
 
 import java.util.Comparator;
 
-import de.danoeh.antennapod.service.download.DownloadStatus;
+import de.danoeh.antennapod.service.download.*;
 
 /** Compares the completion date of two Downloadstatus objects. */
 public class DownloadStatusComparator implements Comparator<DownloadStatus> {

File: src/de/danoeh/antennapod/util/playback/PlaybackController.java
Patch:
@@ -33,6 +33,7 @@
 import de.danoeh.antennapod.preferences.PlaybackPreferences;
 import de.danoeh.antennapod.service.PlaybackService;
 import de.danoeh.antennapod.service.PlayerStatus;
+import de.danoeh.antennapod.storage.DBTasks;
 import de.danoeh.antennapod.util.Converter;
 import de.danoeh.antennapod.util.playback.Playable.PlayableUtils;
 
@@ -214,8 +215,8 @@ private Intent getPlayLastPlayedMediaIntent() {
 				boolean lastIsStream = PlaybackPreferences
 						.getCurrentEpisodeIsStream();
 				if (!fileExists && !lastIsStream && media instanceof FeedMedia) {
-					FeedManager.getInstance().notifyMissingFeedMediaFile(
-							activity, (FeedMedia) media);
+					DBTasks.notifyMissingFeedMediaFile(
+                            activity, (FeedMedia) media);
 				}
 				serviceIntent.putExtra(PlaybackService.EXTRA_SHOULD_STREAM,
 						lastIsStream || !fileExists);

File: src/de/danoeh/antennapod/activity/DownloadActivity.java
Patch:
@@ -113,7 +113,7 @@ private void startContentRefresher() {
 			contentRefresher.cancel(true);
 		}
 		contentRefresher = new AsyncTask<Void, Void, Void>() {
-			private final int WAITING_INTERVALL = 1000;
+			private final static int WAITING_INTERVALL = 1000;
 
 			@Override
 			protected void onProgressUpdate(Void... values) {

File: src/de/danoeh/antennapod/activity/MiroGuideCategoryActivity.java
Patch:
@@ -24,7 +24,7 @@
 public class MiroGuideCategoryActivity extends SherlockFragmentActivity {
 	private static final String TAG = "MiroGuideCategoryActivity";
 
-	public static String EXTRA_CATEGORY = "category";
+	public static final String EXTRA_CATEGORY = "category";
 
 	private ViewPager viewpager;
 	private CategoryPagerAdapter pagerAdapter;

File: src/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java
Patch:
@@ -154,7 +154,7 @@ private void parseFeed() {
 
 			@Override
 			public void run() {
-				String reasonDetailed = new String();
+				String reasonDetailed = "";
 				boolean successful = false;
 				FeedHandler handler = new FeedHandler();
 				try {

File: src/de/danoeh/antennapod/activity/OpmlImportFromIntentActivity.java
Patch:
@@ -7,6 +7,7 @@
 import android.app.AlertDialog;
 import android.os.Bundle;
 import de.danoeh.antennapod.preferences.UserPreferences;
+import de.danoeh.antennapod.util.LangUtils;
 
 /** Lets the user start the OPML-import process. */
 public class OpmlImportFromIntentActivity extends OpmlImportBaseActivity {
@@ -20,7 +21,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         try {
             URL mOpmlURL = new URL(getIntent().getData().toString());
-            BufferedReader in = new BufferedReader(new InputStreamReader(mOpmlURL.openStream()));
+            BufferedReader in = new BufferedReader(new InputStreamReader(mOpmlURL.openStream(),
+                LangUtils.UTF_8));
             startImport(in);
         } catch (Exception e) {
             new AlertDialog.Builder(this).setMessage("Cannot open XML - Reason: " + e.getMessage()).show();

File: src/de/danoeh/antennapod/asynctask/BitmapDecodeWorkerTask.java
Patch:
@@ -47,7 +47,7 @@ public BitmapDecodeWorkerTask(Handler handler, ImageView target,
 	 */
 	protected boolean tagsMatching(ImageView target) {
 		return target.getTag() == null
-				|| target.getTag() == imageResource.getImageLoaderCacheKey();
+				|| target.getTag().equals(imageResource.getImageLoaderCacheKey());
 	}
 
 	protected void onPostExecute() {

File: src/de/danoeh/antennapod/asynctask/DownloadStatus.java
Patch:
@@ -14,7 +14,7 @@ public class DownloadStatus {
 	public static final int SIZE_UNKNOWN = -1;
 
 	public Date getCompletionDate() {
-		return completionDate;
+		return (Date) completionDate.clone();
 	}
 
 	// ----------------------------------- ATTRIBUTES STORED IN DB
@@ -72,7 +72,7 @@ public DownloadStatus(long id, String title, FeedFile feedfile,
 		this.feedfile = feedfile;
 		this.reason = reason;
 		this.successful = successful;
-		this.completionDate = completionDate;
+		this.completionDate = (Date) completionDate.clone();
 		this.reasonDetailed = reasonDetailed;
 		this.feedfileType = feedfileType;
 	}
@@ -172,7 +172,7 @@ public void setCancelled() {
     }
 
 	public void setCompletionDate(Date completionDate) {
-		this.completionDate = completionDate;
+		this.completionDate = (Date) completionDate.clone();
 	}
 
 	public String getReasonDetailed() {

File: src/de/danoeh/antennapod/asynctask/OpmlFeedQueuer.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.asynctask;
 
+import java.util.Arrays;
 import java.util.Date;
 
 import android.annotation.SuppressLint;
@@ -22,7 +23,7 @@ public class OpmlFeedQueuer extends AsyncTask<Void, Void, Void> {
 	public OpmlFeedQueuer(Context context, int[] selection) {
 		super();
 		this.context = context;
-		this.selection = selection;
+		this.selection = Arrays.copyOf(selection, selection.length);
 	}
 
 	@Override

File: src/de/danoeh/antennapod/feed/Feed.java
Patch:
@@ -40,7 +40,7 @@ public class Feed extends FeedFile {
 	public Feed(Date lastUpdate) {
 		super();
 		items = Collections.synchronizedList(new ArrayList<FeedItem>());
-		this.lastUpdate = lastUpdate;
+		this.lastUpdate = (Date) lastUpdate.clone();
 	}
 
 	/**
@@ -298,11 +298,11 @@ public FeedItem[] getItemsArray() {
 	}
 
 	public Date getLastUpdate() {
-		return lastUpdate;
+		return (Date) lastUpdate.clone();
 	}
 
 	public void setLastUpdate(Date lastUpdate) {
-		this.lastUpdate = lastUpdate;
+		this.lastUpdate = (Date) lastUpdate.clone();
 	}
 
 	public String getFeedIdentifier() {

File: src/de/danoeh/antennapod/feed/FeedItem.java
Patch:
@@ -138,11 +138,11 @@ public void setLink(String link) {
 	}
 
 	public Date getPubDate() {
-		return pubDate;
+		return (Date) pubDate.clone();
 	}
 
 	public void setPubDate(Date pubDate) {
-		this.pubDate = pubDate;
+		this.pubDate = (Date) pubDate.clone();
 	}
 
 	public FeedMedia getMedia() {

File: src/de/danoeh/antennapod/miroguide/model/MiroGuideItem.java
Patch:
@@ -12,7 +12,7 @@ public MiroGuideItem(String name, String description, Date date, String url) {
 		super();
 		this.name = name;
 		this.description = description;
-		this.date = date;
+		this.date = (Date) date.clone();
 		this.url = url;
 	}
 
@@ -30,7 +30,7 @@ public String getDescription() {
 	}
 
 	public Date getDate() {
-		return date;
+		return (Date) date.clone();
 	}
 
 	public String getUrl() {

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -203,7 +203,7 @@ public class PodDBAdapter {
 	public static final int IDX_FI_SMALL_ITEM_IDENTIFIER = 9;
 
 	/** Select id, description and content-encoded column from feeditems. */
-	public static final String[] SEL_FI_EXTRA = { KEY_ID, KEY_DESCRIPTION,
+	private static final String[] SEL_FI_EXTRA = { KEY_ID, KEY_DESCRIPTION,
 			KEY_CONTENT_ENCODED, KEY_FEED };
 
 	// column indices for SEL_FI_EXTRA

File: src/de/danoeh/antennapod/syndication/namespace/atom/NSAtom.java
Patch:
@@ -121,7 +121,7 @@ public void handleElementEnd(String localName, HandlerState state) {
 			if (state.getContentBuf() != null) {
 				content = state.getContentBuf().toString();
 			} else {
-				content = new String();
+				content = "";
 			}
 			SyndElement topElement = state.getTagstack().peek();
 			String top = topElement.getName();

File: src/de/danoeh/antennapod/util/LangUtils.java
Patch:
@@ -1,8 +1,11 @@
 package de.danoeh.antennapod.util;
 
+import java.nio.charset.Charset;
 import java.util.HashMap;
 
 public class LangUtils {
+	public static final Charset UTF_8 = Charset.forName("UTF-8");
+
 	private static HashMap<String, String> languages;
 	static {
 		languages = new HashMap<String, String>();

File: src/de/danoeh/antennapod/util/comparator/DownloadStatusComparator.java
Patch:
@@ -9,8 +9,7 @@ public class DownloadStatusComparator implements Comparator<DownloadStatus> {
 
 	@Override
 	public int compare(DownloadStatus lhs, DownloadStatus rhs) {
-		return -lhs.getCompletionDate().compareTo(rhs.getCompletionDate());
-
+		return rhs.getCompletionDate().compareTo(lhs.getCompletionDate());
 	}
 
 }

File: src/de/danoeh/antennapod/util/comparator/FeedItemPubdateComparator.java
Patch:
@@ -13,7 +13,7 @@ public static FeedItemPubdateComparator newInstance() {
 	}*/
 	@Override
 	public int compare(FeedItem lhs, FeedItem rhs) {
-		return -lhs.getPubDate().compareTo(rhs.getPubDate());
+		return rhs.getPubDate().compareTo(lhs.getPubDate());
 	}
 
 }

File: src/de/danoeh/antennapod/util/comparator/PlaybackCompletionDateComparator.java
Patch:
@@ -11,8 +11,8 @@ public int compare(FeedItem lhs, FeedItem rhs) {
 				&& lhs.getMedia().getPlaybackCompletionDate() != null
 				&& rhs.getMedia() != null
 				&& rhs.getMedia().getPlaybackCompletionDate() != null) {
-			return -lhs.getMedia().getPlaybackCompletionDate()
-					.compareTo(rhs.getMedia().getPlaybackCompletionDate());
+			return rhs.getMedia().getPlaybackCompletionDate()
+					.compareTo(lhs.getMedia().getPlaybackCompletionDate());
 		}
 		return 0;
 	}

File: src/de/danoeh/antennapod/util/playback/ExternalMedia.java
Patch:
@@ -24,7 +24,6 @@ public class ExternalMedia implements Playable {
 
 	private String episodeTitle;
 	private String feedTitle;
-	private String shownotes;
 	private MediaType mediaType = MediaType.AUDIO;
 	private List<Chapter> chapters;
 	private int duration;

File: src/de/danoeh/antennapod/service/download/HttpDownloader.java
Patch:
@@ -63,7 +63,7 @@ private DefaultHttpClient createHttpClient() {
 	@Override
 	protected void download() {
 		DefaultHttpClient httpClient = null;
-		OutputStream out = null;
+		BufferedOutputStream out = null;
 		InputStream connection = null;
 		try {
 			HttpGet httpGet = new HttpGet(status.getFeedFile()
@@ -113,6 +113,7 @@ protected void download() {
 							if (cancelled) {
 								onCancelled();
 							} else {
+								out.flush();
 								onSuccess();
 							}
 						} else {

File: tests/src/de/danoeh/antennapod/test/FeedHandlerTest.java
Patch:
@@ -54,7 +54,7 @@ private void downloadFeed(Feed feed) throws IOException {
 
 		for (int i = 0; i < num_retries; i++) {
 			InputStream in = null;
-			OutputStream out = null;
+			BufferedOutputStream out = null;
 			try {
 				in = getInputStream(feed.getDownload_url());
 				assertNotNull(in);
@@ -65,6 +65,7 @@ private void downloadFeed(Feed feed) throws IOException {
 				while ((count = in.read(buffer)) != -1) {
 					out.write(buffer, 0, count);
 				}
+				out.flush();
 				successful = true;
 			} catch (IOException e) {
 				e.printStackTrace();

File: src/de/danoeh/antennapod/activity/AddFeedActivity.java
Patch:
@@ -161,7 +161,7 @@ public void onConnectionSuccessful() {
 						}
 
 						@Override
-						public void onConnectionFailure(int reason) {
+						public void onConnectionFailure(DownloadError reason) {
 							handleDownloadError(reason);
 						}
 					});
@@ -177,11 +177,11 @@ private void observeDownload(Feed feed) {
 		progDialog.setMessage(getString(R.string.loading_label));
 	}
 
-	private void handleDownloadError(int reason) {
+	private void handleDownloadError(DownloadError reason) {
 		final AlertDialog errorDialog = new AlertDialog.Builder(this).create();
 		errorDialog.setTitle(R.string.error_label);
 		errorDialog.setMessage(getString(R.string.error_msg_prefix) + " "
-				+ DownloadError.getErrorString(this, reason));
+				+ reason.getErrorString(this));
 		errorDialog.setButton(getString(android.R.string.ok),
 				new DialogInterface.OnClickListener() {
 					@Override

File: src/de/danoeh/antennapod/adapter/DownloadLogAdapter.java
Patch:
@@ -70,8 +70,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 			holder.successful.setTextColor(convertView.getResources().getColor(
 					R.color.download_failed_red));
 			holder.successful.setText(R.string.download_failed);
-			String reasonText = DownloadError.getErrorString(context,
-					status.getReason());
+			String reasonText = status.getReason().getErrorString(context);
 			if (status.getReasonDetailed() != null) {
 				reasonText += ": " + status.getReasonDetailed();
 			}

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -1637,7 +1637,8 @@ private void extractDownloadLogFromCursor(Context context,
 				}
 				boolean successful = logCursor
 						.getInt(PodDBAdapter.KEY_SUCCESSFUL_INDEX) > 0;
-				int reason = logCursor.getInt(PodDBAdapter.KEY_REASON_INDEX);
+				DownloadError reason = DownloadError.fromCode(
+						logCursor.getInt(PodDBAdapter.KEY_REASON_INDEX));
 				String reasonDetailed = logCursor
 						.getString(PodDBAdapter.KEY_REASON_DETAILED_INDEX);
 				String title = logCursor

File: src/de/danoeh/antennapod/service/download/DownloadService.java
Patch:
@@ -612,7 +612,7 @@ class FeedSyncThread implements Runnable {
 		private Feed feed;
 		private DownloadStatus status;
 
-		private int reason;
+		private DownloadError reason;
 		private boolean successful;
 
 		public FeedSyncThread(DownloadStatus status) {
@@ -622,7 +622,7 @@ public FeedSyncThread(DownloadStatus status) {
 
 		public void run() {
 			Feed savedFeed = null;
-			reason = 0;
+			reason = DownloadError.SUCCESS;
 			String reasonDetailed = null;
 			successful = true;
 			final FeedManager manager = FeedManager.getInstance();

File: src/de/danoeh/antennapod/service/download/HttpDownloader.java
Patch:
@@ -162,7 +162,7 @@ private void onSuccess() {
 		status.setDone(true);
 	}
 
-	private void onFail(int reason, String reasonDetailed) {
+	private void onFail(DownloadError reason, String reasonDetailed) {
 		if (AppConfig.DEBUG) {
 			Log.d(TAG, "Download failed");
 		}

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -424,7 +424,7 @@ public long setDownloadStatus(DownloadStatus status) {
 				values.put(KEY_FEEDFILETYPE, FeedMedia.FEEDFILETYPE_FEEDMEDIA);
 			}
 		}
-		values.put(KEY_REASON, status.getReason());
+		values.put(KEY_REASON, status.getReason().getCode());
 		values.put(KEY_SUCCESSFUL, status.isSuccessful());
 		values.put(KEY_COMPLETION_DATE, status.getCompletionDate().getTime());
 		values.put(KEY_REASON_DETAILED, status.getReasonDetailed());

File: src/de/danoeh/antennapod/util/ConnectionTester.java
Patch:
@@ -14,7 +14,7 @@ public class ConnectionTester implements Runnable {
 	private static final String TAG = "ConnectionTester";
 	private String strUrl;
 	private Callback callback;
-	private int reason;
+	private DownloadError reason;
 
 	private Handler handler;
 
@@ -68,10 +68,10 @@ public void run() {
 	public static abstract class Callback {
 		public abstract void onConnectionSuccessful();
 
-		public abstract void onConnectionFailure(int reason);
+		public abstract void onConnectionFailure(DownloadError reason);
 	}
 
-	public int getReason() {
+	public DownloadError getReason() {
 		return reason;
 	}
 

File: src/de/danoeh/antennapod/miroguide/conn/MiroGuideConnector.java
Patch:
@@ -20,7 +20,7 @@
 public class MiroGuideConnector {
 	private HttpClient httpClient;
 
-	private static final String HOST_URL = "https://www.miroguide.com/api/";
+	private static final String HOST_URL = "http://www.miroguide.com/api/";
 	private static final String PATH_GET_CHANNELS = "get_channels";
 	private static final String PATH_LIST_CATEGORIES = "list_categories";
 	private static final String PATH_GET_CHANNEL = "get_channel";

File: src/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -428,8 +428,7 @@ public void onClick(View v) {
 							break;
 						}
 					}
-					UserPreferences.setPlaybackSpeed(AudioplayerActivity.this,
-							newSpeed);
+					UserPreferences.setPlaybackSpeed(newSpeed);
 					controller.setPlaybackSpeed(Float.parseFloat(newSpeed));
 				}
 			}

File: src/de/danoeh/antennapod/dialog/VariableSpeedDialog.java
Patch:
@@ -85,8 +85,7 @@ public void onClick(DialogInterface dialog, int which) {
 							}
 						}
 
-						UserPreferences.setPlaybackSpeedArray(context,
-								newSpeedValues);
+						UserPreferences.setPlaybackSpeedArray(newSpeedValues);
 
 					}
 				});

File: src/de/danoeh/antennapod/util/Converter.java
Patch:
@@ -82,7 +82,7 @@ public static String getDurationStringShort(int duration) {
     	return String.format("%02d:%02d", h, m);
     }
     
-    /** Converts milliseconds to a relative time span, */
+    /** Converts milliseconds to a relative time span */
     public static String getRelativeTimeSpanString(Context context, long millis) {
     	long now = System.currentTimeMillis();
     	return DateUtils.getRelativeTimeSpanString(

File: src/de/danoeh/antennapod/storage/DownloadRequester.java
Patch:
@@ -113,7 +113,7 @@ && isFilenameAvailable(newDest.toString())) {
 	private boolean isFilenameAvailable(String path) {
 		for (String key : downloads.keySet()) {
 			FeedFile f = downloads.get(key);
-			if (f.getFile_url().equals(path)) {
+			if (f.getFile_url() != null && f.getFile_url().equals(path)) {
 				if (AppConfig.DEBUG)
 					Log.d(TAG, path
 							+ " is already used by another requested download");

File: src/de/danoeh/antennapod/syndication/util/SyndDateUtils.java
Patch:
@@ -11,8 +11,7 @@
 public class SyndDateUtils {
 	private static final String TAG = "DateUtils";
 
-	public static final String[] RFC822DATES = { "dd MMM yyyy HH:mm:ss Z",
-			"dd MMM yy HH:mm:ss Z", };
+	public static final String[] RFC822DATES = { "dd MMM yy HH:mm:ss Z", };
 
 	/** RFC 3339 date format for UTC dates. */
 	public static final String RFC3339UTC = "yyyy-MM-dd'T'HH:mm:ss'Z'";

File: src/de/danoeh/antennapod/util/FileNameGenerator.java
Patch:
@@ -24,10 +24,10 @@ public static String generateFileName(String string) {
 		for (int i = 0; i < string.length(); i++) {
 			char c = string.charAt(i);
 			if (Arrays.binarySearch(ILLEGAL_CHARACTERS, c) < 0) {
-				builder.append(c).replaceFirst("  *$","");
+				builder.append(c);
 			}
 		}
-		return builder.toString();
+		return builder.toString().replaceFirst("  *$","");
 	}
 
 	public static long generateLong(final String str) {

File: src/de/danoeh/antennapod/fragment/EpisodesFragment.java
Patch:
@@ -213,9 +213,6 @@ public boolean onContextItemSelected(android.view.MenuItem item) {
 			}
 		}
 
-		if (handled) {
-			adapter.notifyDataSetChanged();
-		}
 		resetContextMenuSelection();
 		return handled;
 	}

File: src/de/danoeh/antennapod/service/download/DownloadService.java
Patch:
@@ -844,9 +844,8 @@ public void run() {
 			sendDownloadHandledIntent();
 			if (chaptersRead) {
 				manager.setFeedItem(DownloadService.this, media.getItem());
-			} else {
-				manager.setFeedMedia(DownloadService.this, media);
 			}
+			manager.setFeedMedia(DownloadService.this, media);
 
 			if (!FeedManager.getInstance().isInQueue(media.getItem())) {
 				FeedManager.getInstance().addQueueItem(DownloadService.this,

File: src/de/danoeh/antennapod/util/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
+import de.danoeh.antennapod.AppConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.asynctask.FlattrClickWorker;
 import de.danoeh.antennapod.feed.FeedItem;
@@ -89,7 +90,8 @@ public static boolean onPrepareMenu(MenuInterface mi,
 			mi.setItemVisibility(R.id.share_link_item, false);
 		}
 
-		if (!(state == FeedItem.State.IN_PROGRESS || state == FeedItem.State.READ)) {
+		if (!AppConfig.DEBUG
+				|| !(state == FeedItem.State.IN_PROGRESS || state == FeedItem.State.READ)) {
 			mi.setItemVisibility(R.id.mark_unread_item, false);
 		}
 		if (!(state == FeedItem.State.NEW || state == FeedItem.State.IN_PROGRESS)) {

File: src/de/danoeh/antennapod/util/menuhandler/FeedItemMenuHandler.java
Patch:
@@ -71,7 +71,7 @@ public static boolean onPrepareMenu(MenuInterface mi,
 		if (!notLoadedAndNotLoading) {
 			mi.setItemVisibility(R.id.download_item, false);
 		}
-		if (!(notLoadedAndNotLoading | downloading | isPlaying)) {
+		if (!(notLoadedAndNotLoading | downloading) | isPlaying) {
 			mi.setItemVisibility(R.id.stream_item, false);
 		}
 		if (!downloading) {

File: src/de/danoeh/antennapod/preferences/PlaybackPreferences.java
Patch:
@@ -136,7 +136,7 @@ public void onSharedPreferenceChanged(SharedPreferences sp, String key) {
 
 		} else if (key.equals(PREF_AUTO_DELETE_MEDIA_PLAYBACK_COMPLETED)) {
 			autoDeleteMediaPlaybackCompleted = sp.getBoolean(
-					PREF_AUTODELETE_MEDIA_ID, false);
+					PREF_AUTO_DELETE_MEDIA_PLAYBACK_COMPLETED, false);
 		} else if (key.equals(PREF_AUTODELETE_MEDIA_ID)) {
 			autoDeleteMediaId = sp.getLong(PREF_AUTODELETE_MEDIA_ID, -1);
 		} else if (key.equals(PREF_CURRENTLY_PLAYING_FEEDMEDIA_ID)) {

File: src/de/danoeh/antennapod/service/PlaybackService.java
Patch:
@@ -1005,7 +1005,9 @@ public void seekDelta(int delta) {
 
 	public void seek(int i) {
 		saveCurrentPosition();
-		if (status == PlayerStatus.INITIALIZED) {
+		if (status == PlayerStatus.INITIALIZED
+				|| status == PlayerStatus.INITIALIZING
+				|| status == PlayerStatus.PREPARING) {
 			media.setPosition(i);
 			setStartWhenPrepared(true);
 			prepare();

File: src/de/danoeh/antennapod/feed/FeedItem.java
Patch:
@@ -213,7 +213,7 @@ public boolean hasMedia() {
 
 	private boolean isPlaying() {
 		if (media != null) {
-			if (PlaybackPreferences.getCurrentlyPlayingMedia() == media.getId()) {
+			if (PlaybackPreferences.getCurrentlyPlayingFeedMediaId() == media.getId()) {
 				return true;
 			}
 		}

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -197,7 +197,7 @@ public void deleteFeed(final Context context, final Feed feed) {
 					PlaybackService.ACTION_SHUTDOWN_PLAYBACK_SERVICE));
 			SharedPreferences.Editor editor = prefs.edit();
 			editor.putLong(PlaybackPreferences.PREF_LAST_PLAYED_ID, -1);
-			editor.putLong(PlaybackPreferences.PREF_LAST_PLAYED_FEED_ID, -1);
+			editor.putLong(PlaybackPreferences.PREF_CURRENTLY_PLAYING_FEED_ID, -1);
 			editor.commit();
 		}
 

File: src/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -77,7 +77,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 					&& Build.VERSION.SDK_INT <= Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) {
 				webvDescription.setLayerType(View.LAYER_TYPE_SOFTWARE, null);
 			}
-			webvDescription.setBackgroundColor(0);
+			webvDescription.setBackgroundColor(getResources().getColor(R.color.black));
 		}
 		webvDescription.getSettings().setUseWideViewPort(false);
 		webvDescription.getSettings().setLayoutAlgorithm(

File: src/de/danoeh/antennapod/activity/FeedItemlistActivity.java
Patch:
@@ -63,7 +63,7 @@ public void onCreate(Bundle savedInstanceState) {
 		FragmentTransaction fT = fragmentManager.beginTransaction();
 
 		filf = ItemlistFragment.newInstance(feed.getId());
-		fT.add(R.id.feeditemlistFragment, filf);
+		fT.replace(R.id.feeditemlistFragment, filf);
 
 		externalPlayerFragment = new ExternalPlayerFragment();
 		fT.replace(R.id.playerFragment, externalPlayerFragment);

File: src/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -64,9 +64,10 @@ private void resetFragmentView() {
 	}
 
 	@Override
-	protected void onPause() {
-		super.onPause();
+	protected void onStop() {
+		super.onStop();
 		resetFragmentView();
+
 	}
 
 	@Override

File: src/de/danoeh/antennapod/syndication/namespace/NSRSS20.java
Patch:
@@ -50,7 +50,7 @@ public SyndElement handleElementStart(String localName, HandlerState state,
 			String type = attributes.getValue(ENC_TYPE);
 			String url = attributes.getValue(ENC_URL);
 			if (state.getCurrentItem().getMedia() == null
-					&& (SyndTypeUtils.typeValid(type) || ((type = SyndTypeUtils
+					&& (SyndTypeUtils.enclosureTypeValid(type) || ((type = SyndTypeUtils
 							.getValidMimeTypeFromUrl(url)) != null))) {
 
 				long size = 0;

File: src/de/danoeh/antennapod/syndication/namespace/atom/NSAtom.java
Patch:
@@ -73,7 +73,7 @@ public SyndElement handleElementStart(String localName, HandlerState state,
 					if (strSize != null)
 						size = Long.parseLong(strSize);
 					String type = attributes.getValue(LINK_TYPE);
-					if (SyndTypeUtils.typeValid(type)
+					if (SyndTypeUtils.enclosureTypeValid(type)
 							|| (type = SyndTypeUtils
 									.getValidMimeTypeFromUrl(href)) != null) {
 						state.getCurrentItem().setMedia(

File: src/de/danoeh/antennapod/syndication/util/SyndTypeUtils.java
Patch:
@@ -14,7 +14,7 @@ private SyndTypeUtils() {
 
 	}
 
-	public static boolean typeValid(String type) {
+	public static boolean enclosureTypeValid(String type) {
 		if (type == null) {
 			return false;
 		} else {
@@ -33,7 +33,7 @@ public static String getValidMimeTypeFromUrl(String url) {
 			if (extension != null) {
 				String type = MimeTypeMap.getSingleton()
 						.getMimeTypeFromExtension(extension);
-				if (type != null && typeValid(type)) {
+				if (type != null && enclosureTypeValid(type)) {
 					return type;
 				}
 			}

File: tests/src/de/danoeh/antennapod/test/TestFeeds.java
Patch:
@@ -3,6 +3,7 @@
 public class TestFeeds {
 	
 	public static final String[] urls = {
+		"http://www.guardian.co.uk/global-development/series/global-development-podcast/rss",
 		"http://rss.sciam.com/sciam/60secsciencepodcast",
 		"http://rss.sciam.com/sciam/60-second-mind",
 		"http://rss.sciam.com/sciam/60-second-space",
@@ -37,7 +38,6 @@ public class TestFeeds {
 		"http://www.casasola.de/137b/1337motiv/1337motiv.xml",
 		"http://alternativlos.org/ogg.rss", "http://www.bitsundso.de/feed",
 		"http://www.gamesundso.de/feed/",
-		"http://chaosradio.ccc.de/chaosradio-latest.rss",
 		"http://feeds.feedburner.com/cre-podcast",
 		"http://feeds.feedburner.com/NotSafeForWorkPodcast",
 		"http://feeds.feedburner.com/mobile-macs-podcast",
@@ -228,7 +228,6 @@ public class TestFeeds {
 		"http://bitlove.org/mfromm/explorism/feed",
 		"http://bitlove.org/mfromm/transientesichten/feed",
 		"http://bitlove.org/mhpod/pofacs/feed",
-		"http://bitlove.org/michaela_w/michaelaswelt/feed",
 		"http://bitlove.org/michaelgreth/sharepointpdcast/feed",
 		"http://bitlove.org/mintcast/podcast/feed",
 		"http://bitlove.org/mitgezwitschert/brandung/feed",

File: src/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -160,7 +160,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
 		MenuInflater inflater = new MenuInflater(this);
-		inflater.inflate(R.menu.podfetcher, menu);
+		inflater.inflate(R.menu.main, menu);
 		return true;
 	}
 

File: src/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -14,6 +14,7 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.webkit.WebSettings.LayoutAlgorithm;
 import android.webkit.WebView;
 
 import com.actionbarsherlock.app.SherlockFragment;
@@ -65,6 +66,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			webvDescription.setBackgroundColor(0);
 		}
 		webvDescription.getSettings().setUseWideViewPort(false);
+		webvDescription.getSettings().setLayoutAlgorithm(LayoutAlgorithm.SINGLE_COLUMN);
 		return webvDescription;
 	}
 

File: src/de/danoeh/antennapod/storage/PodDBAdapter.java
Patch:
@@ -481,6 +481,7 @@ public void removeFeedItem(FeedItem item) {
 
 	/** Remove a feed with all its FeedItems and Media entries. */
 	public void removeFeed(Feed feed) {
+		db.beginTransaction();
 		if (feed.getImage() != null) {
 			removeFeedImage(feed.getImage());
 		}
@@ -489,6 +490,8 @@ public void removeFeed(Feed feed) {
 		}
 		db.delete(TABLE_NAME_FEEDS, KEY_ID + "=?",
 				new String[] { String.valueOf(feed.getId()) });
+		db.setTransactionSuccessful();
+		db.endTransaction();
 	}
 
 	public void removeDownloadStatus(DownloadStatus remove) {

File: src/de/danoeh/antennapod/syndication/handler/SyndHandler.java
Patch:
@@ -97,7 +97,7 @@ public void startPrefixMapping(String prefix, String uri)
 				if (AppConfig.DEBUG)
 					Log.d(TAG, "Recognized ITunes namespace");
 			} else if (uri.equals(NSSimpleChapters.NSURI)
-					&& prefix.equals(NSSimpleChapters.NSTAG)) {
+					&& prefix.matches(NSSimpleChapters.NSTAG)) {
 				state.namespaces.put(uri, new NSSimpleChapters());
 				if (AppConfig.DEBUG)
 					Log.d(TAG, "Recognized SimpleChapters namespace");

File: src/de/danoeh/antennapod/syndication/namespace/simplechapters/NSSimpleChapters.java
Patch:
@@ -12,7 +12,7 @@
 import de.danoeh.antennapod.syndication.util.SyndDateUtils;
 
 public class NSSimpleChapters extends Namespace {
-	public static final String NSTAG = "sc";
+	public static final String NSTAG = "psc|sc";
 	public static final String NSURI = "http://podlove.org/simple-chapters";
 
 	public static final String CHAPTERS = "chapters";

File: src/de/danoeh/antennapod/syndication/handler/SyndHandler.java
Patch:
@@ -97,7 +97,7 @@ public void startPrefixMapping(String prefix, String uri)
 				if (AppConfig.DEBUG)
 					Log.d(TAG, "Recognized ITunes namespace");
 			} else if (uri.equals(NSSimpleChapters.NSURI)
-					&& prefix.equals(NSSimpleChapters.NSTAG)) {
+					&& prefix.matches(NSSimpleChapters.NSTAG)) {
 				state.namespaces.put(uri, new NSSimpleChapters());
 				if (AppConfig.DEBUG)
 					Log.d(TAG, "Recognized SimpleChapters namespace");

File: src/de/danoeh/antennapod/syndication/namespace/simplechapters/NSSimpleChapters.java
Patch:
@@ -12,7 +12,7 @@
 import de.danoeh.antennapod.syndication.util.SyndDateUtils;
 
 public class NSSimpleChapters extends Namespace {
-	public static final String NSTAG = "sc";
+	public static final String NSTAG = "psc|sc";
 	public static final String NSURI = "http://podlove.org/simple-chapters";
 
 	public static final String CHAPTERS = "chapters";

File: src/de/danoeh/antennapod/service/download/HttpDownloader.java
Patch:
@@ -40,6 +40,7 @@ protected void download() {
 			URL url = new URL(status.getFeedFile().getDownload_url());
 			connection = (HttpURLConnection) url.openConnection();
 			connection.setConnectTimeout(CONNECTION_TIMEOUT);
+			connection.setInstanceFollowRedirects(true);
 			int responseCode = connection.getResponseCode();
 			if (responseCode == HttpURLConnection.HTTP_OK) {
 				if (AppConfig.DEBUG) {

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -39,7 +39,7 @@
 public class FeedManager {
 	private static final String TAG = "FeedManager";
 
-	public static final String ACITON_FEED_LIST_UPDATE = "de.danoeh.antennapod.action.feed.feedlistUpdate";
+	public static final String ACTION_FEED_LIST_UPDATE = "de.danoeh.antennapod.action.feed.feedlistUpdate";
 	public static final String ACTION_UNREAD_ITEMS_UPDATE = "de.danoeh.antennapod.action.feed.unreadItemsUpdate";
 	public static final String ACTION_QUEUE_UPDATE = "de.danoeh.antennapod.action.feed.queueUpdate";
 	public static final String ACTION_DOWNLOADLOG_UPDATE = "de.danoeh.antennapod.action.feed.downloadLogUpdate";
@@ -264,7 +264,7 @@ private void sendQueueUpdateBroadcast(Context context, FeedItem item) {
 	}
 
 	private void sendFeedUpdateBroadcast(Context context) {
-		context.sendBroadcast(new Intent(ACITON_FEED_LIST_UPDATE));
+		context.sendBroadcast(new Intent(ACTION_FEED_LIST_UPDATE));
 	}
 
 	private void sendPlaybackHistoryUpdateBroadcast(Context context) {

File: src/de/danoeh/antennapod/fragment/FeedlistFragment.java
Patch:
@@ -116,7 +116,7 @@ public void onResume() {
 		IntentFilter filter = new IntentFilter();
 		filter.addAction(DownloadRequester.ACTION_DOWNLOAD_QUEUED);
 		filter.addAction(FeedManager.ACTION_UNREAD_ITEMS_UPDATE);
-		filter.addAction(FeedManager.ACITON_FEED_LIST_UPDATE);
+		filter.addAction(FeedManager.ACTION_FEED_LIST_UPDATE);
 		filter.addAction(DownloadService.ACTION_DOWNLOAD_HANDLED);
 		pActivity.registerReceiver(contentUpdate, filter);
 		fla.notifyDataSetChanged();

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -39,7 +39,7 @@
 public class FeedManager {
 	private static final String TAG = "FeedManager";
 
-	public static final String ACITON_FEED_LIST_UPDATE = "de.danoeh.antennapod.action.feed.feedlistUpdate";
+	public static final String ACTION_FEED_LIST_UPDATE = "de.danoeh.antennapod.action.feed.feedlistUpdate";
 	public static final String ACTION_UNREAD_ITEMS_UPDATE = "de.danoeh.antennapod.action.feed.unreadItemsUpdate";
 	public static final String ACTION_QUEUE_UPDATE = "de.danoeh.antennapod.action.feed.queueUpdate";
 	public static final String ACTION_DOWNLOADLOG_UPDATE = "de.danoeh.antennapod.action.feed.downloadLogUpdate";
@@ -264,7 +264,7 @@ private void sendQueueUpdateBroadcast(Context context, FeedItem item) {
 	}
 
 	private void sendFeedUpdateBroadcast(Context context) {
-		context.sendBroadcast(new Intent(ACITON_FEED_LIST_UPDATE));
+		context.sendBroadcast(new Intent(ACTION_FEED_LIST_UPDATE));
 	}
 
 	private void sendPlaybackHistoryUpdateBroadcast(Context context) {

File: src/de/danoeh/antennapod/fragment/FeedlistFragment.java
Patch:
@@ -116,7 +116,7 @@ public void onResume() {
 		IntentFilter filter = new IntentFilter();
 		filter.addAction(DownloadRequester.ACTION_DOWNLOAD_QUEUED);
 		filter.addAction(FeedManager.ACTION_UNREAD_ITEMS_UPDATE);
-		filter.addAction(FeedManager.ACITON_FEED_LIST_UPDATE);
+		filter.addAction(FeedManager.ACTION_FEED_LIST_UPDATE);
 		filter.addAction(DownloadService.ACTION_DOWNLOAD_HANDLED);
 		pActivity.registerReceiver(contentUpdate, filter);
 		fla.notifyDataSetChanged();

File: src/de/danoeh/antennapod/service/PlaybackService.java
Patch:
@@ -888,7 +888,7 @@ private void setupNotification() {
 				PlaybackService.getPlayerActivityIntent(this),
 				PendingIntent.FLAG_UPDATE_CURRENT);
 
-		Bitmap icon = BitmapFactory.decodeResource(null,
+		Bitmap icon = BitmapFactory.decodeResource(getResources(),
 				R.drawable.ic_stat_antenna);
 		notificationBuilder = new NotificationCompat.Builder(this)
 				.setContentTitle(

File: src/de/danoeh/antennapod/syndication/util/SyndTypeUtils.java
Patch:
@@ -28,7 +28,7 @@ public static String getValidMimeTypeFromUrl(String url) {
 		if (extension != null) {
 			String type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(
 					extension);
-			if (typeValid(type)) {
+			if (type != null && typeValid(type)) {
 				return type;
 			}
 		}

File: tests/src/de/danoeh/antennapod/test/FeedHandlerTest.java
Patch:
@@ -24,6 +24,7 @@ public class FeedHandlerTest extends AndroidTestCase {
 	private static final String FEEDS_DIR = "testfeeds";
 
 	private static final String[] urls = {
+			"http://podcast.homerj.de/podcasts.xml",
 			"http://www.dradio.de/rss/podcast/sendungen/wissenschaftundbildung/",
 			"http://www.dradio.de/rss/podcast/sendungen/wirtschaftundverbraucher/",
 			"http://www.dradio.de/rss/podcast/sendungen/literatur/",

File: src/de/danoeh/antennapod/syndication/namespace/rss20/NSRSS20.java
Patch:
@@ -39,7 +39,7 @@ public class NSRSS20 extends Namespace {
 	public final static String ENC_LEN = "length";
 	public final static String ENC_TYPE = "type";
 
-	public final static String VALID_MIMETYPE = "audio/.*" + "|" + "video/.*";
+	public final static String VALID_MIMETYPE = "audio/.*" + "|" + "video/.*" + "|" + "application/ogg";
 
 	@Override
 	public SyndElement handleElementStart(String localName, HandlerState state,

File: src/de/danoeh/antennapod/asynctask/DownloadStatus.java
Patch:
@@ -51,6 +51,9 @@ public Date getCompletionDate() {
 
 	public DownloadStatus(FeedFile feedfile, String title) {
 		this.feedfile = feedfile;
+		if (feedfile != null) {
+			feedfileType = feedfile.getTypeAsInt();
+		}
 		this.title = title;
 	}
 

File: src/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -23,7 +23,6 @@ public class PodcastApp extends Application implements
 		SharedPreferences.OnSharedPreferenceChangeListener {
 
 	private static final String TAG = "PodcastApp";
-	public static final String PREF_NAME = "AntennapodPrefs";
 	public static final String EXPORT_DIR = "export/";
 
 	public static final String PREF_PAUSE_ON_HEADSET_DISCONNECT = "prefPauseOnHeadsetDisconnect";

File: src/de/danoeh/antennapod/util/PlaybackController.java
Patch:
@@ -16,6 +16,7 @@
 import android.content.ServiceConnection;
 import android.content.SharedPreferences;
 import android.os.IBinder;
+import android.preference.PreferenceManager;
 import android.util.Log;
 import android.view.SurfaceHolder;
 import android.view.View;
@@ -163,8 +164,8 @@ private void bindToService() {
 	private Intent getPlayLastPlayedMediaIntent() {
 		if (AppConfig.DEBUG)
 			Log.d(TAG, "Trying to restore last played media");
-		SharedPreferences prefs = activity.getApplicationContext()
-				.getSharedPreferences(PodcastApp.PREF_NAME, 0);
+		SharedPreferences prefs = PreferenceManager
+				.getDefaultSharedPreferences(activity.getApplicationContext());
 		long mediaId = prefs.getLong(PlaybackService.PREF_LAST_PLAYED_ID, -1);
 		long feedId = prefs.getLong(PlaybackService.PREF_LAST_PLAYED_FEED_ID,
 				-1);

File: src/de/danoeh/antennapod/activity/AudioplayerActivity.java
Patch:
@@ -62,7 +62,7 @@ protected void setupGUI() {
 		FeedMedia media = controller.getMedia();
 
 		int tabcount = 2;
-		if (media != null && media.getItem().getSimpleChapters() != null) {
+		if (media != null && media.getItem().getChapters() != null) {
 			tabcount = 3;
 		}
 		pagerAdapter = new MediaPlayerPagerAdapter(getSupportFragmentManager(),
@@ -132,7 +132,7 @@ public void onListItemClick(ListView l, View v,
 
 					sCChapterFragment.setListAdapter(new SCListAdapter(
 							activity, 0, media.getItem()
-									.getSimpleChapters()));
+									.getChapters()));
 
 					return sCChapterFragment;
 				default:

File: src/de/danoeh/antennapod/feed/FeedSearcher.java
Patch:
@@ -114,8 +114,8 @@ private static void searchFeedItemChapters(String query,
 	private static void searchFeedItemChaptersSingleFeed(String query,
 			ArrayList<SearchResult> destination, Feed feed) {
 		for (FeedItem item : feed.getItems()) {
-			if (item.getSimpleChapters() != null) {
-				for (SimpleChapter sc : item.getSimpleChapters()) {
+			if (item.getChapters() != null) {
+				for (Chapter sc : item.getChapters()) {
 					SearchResult result = createSearchResult(item, query, sc
 							.getTitle().toLowerCase(), VALUE_ITEM_CHAPTER);
 					if (result != null) {

File: src/de/danoeh/antennapod/activity/ItemviewActivity.java
Patch:
@@ -94,7 +94,7 @@ private void populateUI() {
 				.beginTransaction();
 		ItemDescriptionFragment fragment = ItemDescriptionFragment.newInstance(
 				item);
-		fragmentTransaction.add(R.id.description_fragment, fragment);
+		fragmentTransaction.replace(R.id.description_fragment, fragment);
 		fragmentTransaction.commit();
 	}
 

File: src/de/danoeh/antennapod/service/PlaybackService.java
Patch:
@@ -92,7 +92,7 @@ public class PlaybackService extends Service {
 	public static final int NOTIFICATION_TYPE_BUFFER_END = 6;
 
 	/** Is true if service is running. */
-	public static boolean isRunning;
+	public static boolean isRunning = false;
 
 	private static final int NOTIFICATION_ID = 1;
 	private NotificationCompat.Builder notificationBuilder;

File: src/de/danoeh/antennapod/util/PlaybackController.java
Patch:
@@ -149,7 +149,7 @@ private void bindToService() {
 			if (AppConfig.DEBUG)
 				Log.d(TAG,
 						"PlaybackService is running, trying to connect without start command.");
-			bound = activity.bindService(serviceIntent, mConnection, 0);
+			bound = activity.bindService(new Intent(activity, PlaybackService.class), mConnection, 0);
 		}
 		if (AppConfig.DEBUG)
 			Log.d(TAG, "Result for service binding: " + bound);

File: src/de/danoeh/antennapod/activity/AddFeedActivity.java
Patch:
@@ -179,8 +179,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-			finish();
-			startActivity(new Intent(this, MainActivity.class));
+			Intent intent = new Intent(this, MainActivity.class);
+			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
+			startActivity(intent);
 			return true;
 		default:
 			return false;

File: src/de/danoeh/antennapod/activity/DownloadActivity.java
Patch:
@@ -187,7 +187,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-			finish();
+			Intent intent = new Intent(this, MainActivity.class);
+			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
+			startActivity(intent);
 			break;
 		case MENU_SHOW_LOG:
 			startActivity(new Intent(this, DownloadLogActivity.class));

File: src/de/danoeh/antennapod/activity/FeedItemlistActivity.java
Patch:
@@ -119,7 +119,9 @@ public void onConfirmButtonPressed(DialogInterface dialog) {
 				onSearchRequested();
 				break;
 			case android.R.id.home:
-				startActivity(new Intent(this, MainActivity.class));
+				Intent intent = new Intent(this, MainActivity.class);
+				intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+				startActivity(intent);
 				break;
 			}
 		}

File: src/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -210,8 +210,9 @@ public boolean onPrepareOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-			startActivity(new Intent(MediaplayerActivity.this,
-					MainActivity.class));
+			Intent intent = new Intent(MediaplayerActivity.this, MainActivity.class);
+			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
+			startActivity(intent);
 			break;
 		case R.id.disable_sleeptimer_item:
 			if (controller.serviceAvailable()) {

File: src/de/danoeh/antennapod/activity/PreferenceActivity.java
Patch:
@@ -91,8 +91,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-			startActivity(new Intent(PreferenceActivity.this,
-					MainActivity.class));
+			Intent intent = new Intent(this, MainActivity.class);
+			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+			startActivity(intent);
 			break;
 		default:
 			return false;

File: src/de/danoeh/antennapod/activity/SearchActivity.java
Patch:
@@ -87,7 +87,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	public boolean onOptionsItemSelected(MenuItem item) {
 		switch (item.getItemId()) {
 		case android.R.id.home:
-			startActivity(new Intent(this, MainActivity.class));
+			Intent intent = new Intent(this, MainActivity.class);
+			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+			startActivity(intent);
 			return true;
 		case R.id.search_item:
 			onSearchRequested();

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -167,9 +167,9 @@ public void run() {
 							&& feed.getImage().getFile_url() != null) {
 						File imageFile = new File(feed.getImage().getFile_url());
 						imageFile.delete();
+					} else if (requester.isDownloadingFile(feed.getImage())) {
+						requester.cancelDownload(context, feed.getImage());
 					}
-				} else if (requester.isDownloadingFile(feed.getImage())) {
-					requester.cancelDownload(context, feed.getImage());
 				}
 				// delete stored media files and mark them as read
 				for (FeedItem item : feed.getItems()) {

File: src/de/danoeh/antennapod/syndication/handler/SyndHandler.java
Patch:
@@ -70,7 +70,9 @@ public void endElement(String uri, String localName, String qName)
 
 	@Override
 	public void endPrefixMapping(String prefix) throws SAXException {
-		// TODO remove Namespace
+		if (state.defaultNamespaces.size() > 1 && prefix.equals(DEFAULT_PREFIX)) {
+			state.defaultNamespaces.pop();
+		}
 	}
 
 	@Override

File: tests/src/de/danoeh/antennapod/test/FeedHandlerTest.java
Patch:
@@ -24,6 +24,7 @@ public class FeedHandlerTest extends AndroidTestCase {
 	private static final String FEEDS_DIR = "testfeeds";
 
 	private static final String[] urls = {
+			"http://www.blacksweetstories.com/feed/podcast/",
 			"http://bitlove.org/ranzzeit/ranz/feed",
 			"http://bitlove.org/importthis/mp3/feed",
 			"http://bitlove.org/astro/youtube/feed",

File: src/de/danoeh/antennapod/syndication/util/SyndDateUtils.java
Patch:
@@ -47,6 +47,7 @@ public static Date parseRFC822Date(String date) {
 		SimpleDateFormat format = RFC822Formatter.get();
 		for (int i = 0; i < RFC822DATES.length; i++) {
 			try {
+				format.applyPattern(RFC822DATES[i]);
 				result = format.parse(date);
 				break;
 			} catch (ParseException e) {

File: src/de/danoeh/antennapod/util/BitmapDecoder.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.util;
 
+import de.danoeh.antennapod.AppConfig;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.util.Log;
@@ -23,7 +24,8 @@ public static Bitmap decodeBitmap(int preferredLength, String fileUrl) {
 		int srcHeight = options.outHeight;
 		int length = Math.max(srcWidth, srcHeight);
 		int sampleSize = calculateSampleSize(preferredLength, length);
-		Log.d(TAG, "Using samplesize " + sampleSize);
+		if (AppConfig.DEBUG)
+			Log.d(TAG, "Using samplesize " + sampleSize);
 		options.inJustDecodeBounds = false;
 		options.inSampleSize = sampleSize;
 		options.inPreferredConfig = Bitmap.Config.ARGB_8888;

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -710,7 +710,7 @@ public FeedItem getFeedItem(long id, Feed feed) {
 	public FeedMedia getFeedMedia(long id, Feed feed) {
 		if (feed != null) {
 			for (FeedItem item : feed.getItems()) {
-				if (item.getMedia().getId() == id) {
+				if (item.getMedia() != null && item.getMedia().getId() == id) {
 					return item.getMedia();
 				}
 			}

File: src/de/danoeh/antennapod/asynctask/FeedImageLoader.java
Patch:
@@ -104,7 +104,7 @@ public static FeedImageLoader getInstance() {
 	}
 
 	public void loadCoverBitmap(FeedImage image, ImageView target) {
-		if (image.getFile_url() != null) {
+		if (image != null && image.getFile_url() != null) {
 			Bitmap bitmap = getBitmapFromCoverCache(image.getFile_url());
 			if (bitmap != null) {
 				target.setImageBitmap(bitmap);

File: src/de/danoeh/antennapod/asynctask/BitmapDecodeWorkerTask.java
Patch:
@@ -40,6 +40,9 @@ public BitmapDecodeWorkerTask(Handler handler, ImageView target,
 		this.fileUrl = fileUrl;
 		this.baseLength = length;
 		this.PREFERRED_LENGTH = (int) (length * PodcastApp.getLogicalDensity() + 0.5f);
+		if (PodcastApp.getInstance().isLargeScreen()) {
+			this.PREFERRED_LENGTH *= 2.0;
+		}
 	}
 
 	/**

File: src/de/danoeh/antennapod/asynctask/FeedImageLoader.java
Patch:
@@ -25,7 +25,7 @@ public class FeedImageLoader {
 	private static final String TAG = "FeedImageLoader";
 	private static FeedImageLoader singleton;
 
-	public static final int LENGTH_BASE_COVER = 200;
+	public static final int LENGTH_BASE_COVER = 300;
 	public static final int LENGTH_BASE_THUMBNAIL = 100;
 
 	private static final String CACHE_DIR = "miroguide_thumbnails";
@@ -44,7 +44,7 @@ public class FeedImageLoader {
 			.getSystemService(Context.ACTIVITY_SERVICE)).getMemoryClass();
 
 	// Use 1/8th of the available memory for this memory cache.
-	final int coverCacheSize = 1024 * 1024 * memClass / 10;
+	final int coverCacheSize = 1024 * 1024 * memClass / 8;
 	final int thumbnailCacheSize = 1024 * 1024 * memClass / 6;
 
 	private LruCache<String, Bitmap> coverCache;

File: src/de/danoeh/antennapod/asynctask/DownloadObserver.java
Patch:
@@ -137,13 +137,15 @@ public void run() {
 						status.done = true;
 						status.reason = getDownloadStatus(cursor,
 								DownloadManager.COLUMN_REASON);
+						break;
 					case DownloadManager.STATUS_PENDING:
 						status.statusMsg = R.string.download_pending;
 						break;
 					default:
 						status.done = true;
 						status.successful = false;
 						status.statusMsg = R.string.download_cancelled_msg;
+						requester.notifyDownloadService(context);
 					}
 				}
 			} while (cursor.moveToNext());

File: src/de/danoeh/antennapod/AppConfig.java
Patch:
@@ -1,5 +1,5 @@
 package de.danoeh.antennapod;
 
 public final class AppConfig {
-    public final static boolean DEBUG = false;
+    public final static boolean DEBUG = true;
 }

File: src/de/danoeh/antennapod/util/NumberGenerator.java
Patch:
@@ -3,7 +3,7 @@
 import java.util.Random;
 import android.util.Log;
 
-/**Utility class for creating large random numbers.*/
+/**Utility class for creating numbers.*/
 public final class NumberGenerator {
     /** Class shall not be instantiated.*/
     private NumberGenerator() {

File: src/de/danoeh/antennapod/fragment/CoverFragment.java
Patch:
@@ -53,7 +53,9 @@ public void onCreate(Bundle savedInstanceState) {
 			if (feedId != -1 && itemId != -1) {
 				Feed feed = manager.getFeed(feedId);
 				item = manager.getFeedItem(itemId, feed);
-				media = item.getMedia();
+				if (item != null) {
+					media = item.getMedia();
+				}
 			} else {
 				Log.e(TAG, TAG + " was called with invalid arguments");
 			}

File: src/de/danoeh/antennapod/feed/Feed.java
Patch:
@@ -10,8 +10,8 @@
  * 
  */
 public class Feed extends FeedFile {
-	private static final String TYPE_RSS2 = "rss";
-	private static final String TYPE_ATOM1 = "atom";
+	public static final String TYPE_RSS2 = "rss";
+	public static final String TYPE_ATOM1 = "atom";
 	
 	private String title;
 	/** Link to the website. */

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -361,7 +361,9 @@ public Feed updateFeed(Context context, final Feed newFeed) {
 					markItemRead(context, item, false);
 				}
 			}
+			// update attributes
 			savedFeed.setLastUpdate(newFeed.getLastUpdate());
+			savedFeed.setType(newFeed.getType());
 			setFeed(context, savedFeed);
 			return savedFeed;
 		}

File: src/de/danoeh/antennapod/syndication/handler/TypeGetter.java
Patch:
@@ -40,12 +40,14 @@ public Type getType(Feed feed) throws UnsupportedFeedtypeException {
 					if (eventType == XmlPullParser.START_TAG) {
 						String tag = xpp.getName();
 						if (tag.equals(ATOM_ROOT)) {
+							feed.setType(Feed.TYPE_ATOM1);
 							if (AppConfig.DEBUG)
 								Log.d(TAG, "Recognized type Atom");
 							return Type.ATOM;
 						} else if (tag.equals(RSS_ROOT)
 								&& (xpp.getAttributeValue(null, "version")
 										.equals("2.0"))) {
+							feed.setType(Feed.TYPE_RSS2);
 							if (AppConfig.DEBUG)
 								Log.d(TAG, "Recognized type RSS 2.0");
 							return Type.RSS20;

File: src/de/danoeh/antennapod/feed/FeedManager.java
Patch:
@@ -591,6 +591,8 @@ private void extractFeedlistFromCursor(Context context, PodDBAdapter adapter) {
 						.getString(PodDBAdapter.KEY_AUTHOR_INDEX));
 				feed.setLanguage(feedlistCursor
 						.getString(PodDBAdapter.KEY_LANGUAGE_INDEX));
+				feed.setType(feedlistCursor
+						.getString(PodDBAdapter.KEY_TYPE_INDEX));
 				long imageIndex = feedlistCursor
 						.getLong(PodDBAdapter.KEY_IMAGE_INDEX);
 				if (imageIndex != 0) {

File: src/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -8,13 +8,11 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.os.Debug;
 import android.preference.PreferenceManager;
 import android.util.Log;
 import de.danoeh.antennapod.asynctask.FeedImageLoader;
 import de.danoeh.antennapod.feed.FeedManager;
 import de.danoeh.antennapod.receiver.FeedUpdateReceiver;
-import de.danoeh.antennapod.util.StorageUtils;
 
 public class PodcastApp extends Application implements
 		SharedPreferences.OnSharedPreferenceChangeListener {

File: src/de/danoeh/antennapod/activity/FeedItemlistActivity.java
Patch:
@@ -2,28 +2,26 @@
 
 import android.annotation.SuppressLint;
 import android.content.Intent;
-import android.graphics.drawable.BitmapDrawable;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.util.Log;
-import android.view.View;
 
 import com.actionbarsherlock.app.SherlockFragmentActivity;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
 import com.actionbarsherlock.view.Window;
 
+import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.asynctask.FeedRemover;
 import de.danoeh.antennapod.feed.Feed;
 import de.danoeh.antennapod.feed.FeedManager;
 import de.danoeh.antennapod.fragment.FeedlistFragment;
 import de.danoeh.antennapod.fragment.ItemlistFragment;
 import de.danoeh.antennapod.util.FeedMenuHandler;
 import de.danoeh.antennapod.util.StorageUtils;
-import de.danoeh.antennapod.R;
 
 /** Displays a List of FeedItems */
 public class FeedItemlistActivity extends SherlockFragmentActivity {

File: src/de/danoeh/antennapod/activity/ItemviewActivity.java
Patch:
@@ -3,7 +3,6 @@
 import java.text.DateFormat;
 
 import android.content.Intent;
-import android.graphics.drawable.BitmapDrawable;
 import android.os.Bundle;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
@@ -17,6 +16,8 @@
 import com.actionbarsherlock.view.MenuItem;
 import com.actionbarsherlock.view.Window;
 
+import de.danoeh.antennapod.AppConfig;
+import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.feed.Feed;
 import de.danoeh.antennapod.feed.FeedItem;
 import de.danoeh.antennapod.feed.FeedManager;
@@ -25,8 +26,6 @@
 import de.danoeh.antennapod.fragment.ItemlistFragment;
 import de.danoeh.antennapod.util.FeedItemMenuHandler;
 import de.danoeh.antennapod.util.StorageUtils;
-import de.danoeh.antennapod.AppConfig;
-import de.danoeh.antennapod.R;
 
 /** Displays a single FeedItem and provides various actions */
 public class ItemviewActivity extends SherlockFragmentActivity {

File: src/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -19,7 +19,6 @@
 import android.os.IBinder;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentPagerAdapter;
 import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.util.Log;

File: src/de/danoeh/antennapod/activity/OpmlFeedChooserActivity.java
Patch:
@@ -5,7 +5,6 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.util.Log;
 import android.util.SparseBooleanArray;
 import android.view.View;
 import android.view.View.OnClickListener;

File: src/de/danoeh/antennapod/syndication/handler/TypeGetter.java
Patch:
@@ -71,6 +71,9 @@ private Reader createReader(Feed feed) {
 		} catch (FileNotFoundException e) {
 			e.printStackTrace();
 			return null;
+		} catch (NullPointerException e) {
+			e.printStackTrace();
+			return null;
 		}
 		return reader;
 	}

File: src/de/danoeh/antennapod/service/DownloadService.java
Patch:
@@ -416,7 +416,8 @@ public void run() {
 				// Save information of feed in DB
 				savedFeed = manager.updateFeed(service, feed);
 				// Download Feed Image if provided and not downloaded
-				if (savedFeed.getImage().isDownloaded() == false) {
+				if (savedFeed.getImage() != null
+						&& savedFeed.getImage().isDownloaded() == false) {
 					if (AppConfig.DEBUG)
 						Log.d(TAG, "Feed has image; Downloading....");
 					imageId = requester.downloadImage(service, feed.getImage());

File: src/de/danoeh/antennapod/AppConfig.java
Patch:
@@ -1,5 +1,5 @@
 package de.danoeh.antennapod;
 
 public final class AppConfig {
-    public final static boolean DEBUG = false;
+    public final static boolean DEBUG = true;
 }

File: src/de/danoeh/antennapod/syndication/namespace/rss20/NSRSS20.java
Patch:
@@ -102,7 +102,7 @@ public void handleElementEnd(String localName, HandlerState state) {
 			} else if (localName.equals(DESCR)) {
 				if (second.equals(CHANNEL)) {
 					state.getFeed().setDescription(content);
-				} else {
+				} else if (second.equals(ITEM)){
 					state.getCurrentItem().setDescription(content);
 				}
 

File: src/de/danoeh/antennapod/asynctask/FlattrClickWorker.java
Patch:
@@ -103,6 +103,7 @@ protected Void doInBackground(Void... params) {
 
 	@SuppressLint("NewApi")
 	public void executeAsync() {
+		FlattrUtils.hasToken();
 		if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.GINGERBREAD_MR1) {
 			executeOnExecutor(THREAD_POOL_EXECUTOR);
 		} else {

File: src/de/danoeh/antennapod/asynctask/FlattrTokenFetcher.java
Patch:
@@ -34,7 +34,9 @@ public FlattrTokenFetcher(Context context, AndroidAuthenticator auth, Uri uri) {
 
 	@Override
 	protected void onPostExecute(AccessToken result) {
-		super.onPostExecute(result);
+		if (result != null) {
+			FlattrUtils.storeToken(result);
+		}
 		dialog.dismiss();
 		if (exception == null) {
 			FlattrAuthActivity instance = FlattrAuthActivity.getInstance();
@@ -73,7 +75,6 @@ protected AccessToken doInBackground(Void... params) {
 		}
 		if (token != null) {
 			if (AppConfig.DEBUG) Log.d(TAG, "Successfully got token");
-			FlattrUtils.storeToken(token);
 			return token;
 		} else {
 			Log.w(TAG, "Flattr token was null");

File: src/de/danoeh/antennapod/util/FlattrUtils.java
Patch:
@@ -96,7 +96,7 @@ public static void storeToken(AccessToken token) {
 			editor.putString(PREF_ACCESS_TOKEN, null);
 		}
 		editor.commit();
-		cachedToken = null;
+		cachedToken = token;
 	}
 
 	public static void deleteToken() {

File: src/de/danoeh/antennapod/PodcastApp.java
Patch:
@@ -60,7 +60,7 @@ public void onLowMemory() {
 	@Override
 	public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,
 			String key) {
-		Log.d(TAG, "Registered change of application preferences");
+		if (BuildConfig.DEBUG) Log.d(TAG, "Registered change of application preferences");
 		if (key.equals(PREF_UPDATE_INTERVALL)) {
 			AlarmManager alarmManager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);
 			int hours = Integer.parseInt(sharedPreferences.getString(
@@ -72,9 +72,9 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,
 				long newIntervall = TimeUnit.HOURS.toMillis(hours);
 				alarmManager.setRepeating(AlarmManager.RTC_WAKEUP,
 						newIntervall, newIntervall, updateIntent);
-				Log.d(TAG, "Changed alarm to new intervall");
+				if (BuildConfig.DEBUG) Log.d(TAG, "Changed alarm to new intervall");
 			} else {
-				Log.d(TAG, "Automatic update was deactivated");
+				if (BuildConfig.DEBUG) Log.d(TAG, "Automatic update was deactivated");
 			}
 		}
 	}

File: src/de/danoeh/antennapod/activity/FeedInfoActivity.java
Patch:
@@ -15,6 +15,7 @@
 import de.danoeh.antennapod.feed.FeedManager;
 import de.danoeh.antennapod.util.FeedMenuHandler;
 import de.danoeh.antennapod.util.LangUtils;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 
 /** Displays information about a feed. */
@@ -40,8 +41,8 @@ protected void onCreate(Bundle savedInstanceState) {
 		FeedManager manager = FeedManager.getInstance();
 		feed = manager.getFeed(feedId);
 		if (feed != null) {
-			Log.d(TAG, "Language is " + feed.getLanguage());
-			Log.d(TAG, "Author is " + feed.getAuthor());
+			if (BuildConfig.DEBUG) Log.d(TAG, "Language is " + feed.getLanguage());
+			if (BuildConfig.DEBUG) Log.d(TAG, "Author is " + feed.getAuthor());
 			imgvCover = (ImageView) findViewById(R.id.imgvCover);
 			txtvTitle = (TextView) findViewById(R.id.txtvTitle);
 			txtvDescription = (TextView) findViewById(R.id.txtvDescription);

File: src/de/danoeh/antennapod/activity/MainActivity.java
Patch:
@@ -25,6 +25,7 @@
 import de.danoeh.antennapod.service.DownloadService;
 import de.danoeh.antennapod.storage.DownloadRequester;
 import de.danoeh.antennapod.util.StorageUtils;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 
 public class MainActivity extends SherlockFragmentActivity {
@@ -71,7 +72,7 @@ protected void onResume() {
 	private BroadcastReceiver contentUpdate = new BroadcastReceiver() {
 		@Override
 		public void onReceive(Context context, Intent intent) {
-			Log.d(TAG, "Received contentUpdate Intent.");
+			if (BuildConfig.DEBUG) Log.d(TAG, "Received contentUpdate Intent.");
 			updateProgressBarVisibility();
 		}
 	};

File: src/de/danoeh/antennapod/activity/StorageErrorActivity.java
Patch:
@@ -10,6 +10,7 @@
 import com.actionbarsherlock.app.SherlockActivity;
 
 import de.danoeh.antennapod.util.StorageUtils;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 
 public class StorageErrorActivity extends SherlockActivity {
@@ -53,10 +54,10 @@ private void leaveErrorState() {
 		public void onReceive(Context context, Intent intent) {
 			if (intent.getAction().equals(Intent.ACTION_MEDIA_MOUNTED)) {
 				if (intent.getBooleanExtra("read-only", true)) {
-					Log.d(TAG, "Media was mounted; Finishing activity");
+					if (BuildConfig.DEBUG) Log.d(TAG, "Media was mounted; Finishing activity");
 					leaveErrorState();
 				} else {
-					Log.d(TAG, "Media seemed to have been mounted read only");
+					if (BuildConfig.DEBUG) Log.d(TAG, "Media seemed to have been mounted read only");
 				}
 			}
 		}

File: src/de/danoeh/antennapod/asynctask/FeedImageLoader.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.File;
 
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.PodcastApp;
 import de.danoeh.antennapod.feed.FeedImage;
 import de.danoeh.antennapod.feed.FeedManager;
@@ -35,7 +36,7 @@ public class FeedImageLoader {
 	private LruCache<Long, Bitmap> imageCache;
 
 	private FeedImageLoader() {
-		Log.d(TAG, "Creating cache with size " + cacheSize);
+		if (BuildConfig.DEBUG) Log.d(TAG, "Creating cache with size " + cacheSize);
 		imageCache = new LruCache<Long, Bitmap>(cacheSize) {
 
 			@SuppressLint("NewApi")
@@ -165,7 +166,7 @@ protected Void doInBackground(FeedImage... params) {
 						PREFERRED_LENGTH, PREFERRED_LENGTH, false);
 
 				addBitmapToCache(params[0].getId(), bitmap);
-				Log.d(TAG, "Finished loading bitmaps");
+				if (BuildConfig.DEBUG) Log.d(TAG, "Finished loading bitmaps");
 			} else {
 				Log.e(TAG,
 						"FeedImage has no valid file url. Using default image");

File: src/de/danoeh/antennapod/asynctask/FlattrClickWorker.java
Patch:
@@ -8,6 +8,7 @@
 import android.os.AsyncTask;
 import android.util.Log;
 import android.widget.Toast;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.util.FlattrUtils;
 
@@ -61,7 +62,7 @@ protected void onSetupProgDialog() {
 
 	@Override
 	protected void onPostExecute(Void result) {
-		Log.d(TAG, "Exit code was " + exitCode);
+		if (BuildConfig.DEBUG) Log.d(TAG, "Exit code was " + exitCode);
 		if (progDialog != null) {
 			progDialog.dismiss();
 		}
@@ -85,7 +86,7 @@ protected void onPreExecute() {
 
 	@Override
 	protected Void doInBackground(Void... params) {
-		Log.d(TAG, "Starting background work");
+		if (BuildConfig.DEBUG) Log.d(TAG, "Starting background work");
 		if (FlattrUtils.hasToken()) {
 			try {
 				FlattrUtils.clickUrl(context, url);

File: src/de/danoeh/antennapod/asynctask/FlattrTokenFetcher.java
Patch:
@@ -10,6 +10,7 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.util.Log;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 import de.danoeh.antennapod.activity.FlattrAuthActivity;
 import de.danoeh.antennapod.util.FlattrUtils;
@@ -71,7 +72,7 @@ protected AccessToken doInBackground(Void... params) {
 			return null;
 		}
 		if (token != null) {
-			Log.d(TAG, "Successfully got token");
+			if (BuildConfig.DEBUG) Log.d(TAG, "Successfully got token");
 			FlattrUtils.storeToken(token);
 			return token;
 		} else {

File: src/de/danoeh/antennapod/fragment/ItemDescriptionFragment.java
Patch:
@@ -17,6 +17,7 @@
 
 import com.actionbarsherlock.app.SherlockFragment;
 
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.feed.Feed;
 import de.danoeh.antennapod.feed.FeedItem;
 import de.danoeh.antennapod.feed.FeedManager;
@@ -131,7 +132,7 @@ protected void onPostExecute(Void result) {
 						"utf-8", "about:blank");
 				getSherlockActivity()
 						.setSupportProgressBarIndeterminateVisibility(false);
-				Log.d(TAG, "Webview loaded");
+				if (BuildConfig.DEBUG) Log.d(TAG, "Webview loaded");
 				webViewLoader = null;
 			}
 
@@ -144,7 +145,7 @@ protected void onPreExecute() {
 
 			@Override
 			protected Void doInBackground(Void... params) {
-				Log.d(TAG, "Loading Webview");
+				if (BuildConfig.DEBUG) Log.d(TAG, "Loading Webview");
 				data = "";
 				if (item.getContentEncoded() == null
 						&& item.getDescription() != null) {

File: src/de/danoeh/antennapod/fragment/ItemlistFragment.java
Patch:
@@ -28,6 +28,7 @@
 import de.danoeh.antennapod.service.DownloadService;
 import de.danoeh.antennapod.storage.DownloadRequester;
 import de.danoeh.antennapod.util.FeedItemMenuHandler;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 
 /** Displays a list of FeedItems. */
@@ -139,7 +140,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 	private BroadcastReceiver contentUpdate = new BroadcastReceiver() {
 		@Override
 		public void onReceive(Context context, Intent intent) {
-			Log.d(TAG, "Received contentUpdate Intent.");
+			if (BuildConfig.DEBUG) Log.d(TAG, "Received contentUpdate Intent.");
 			fila.notifyDataSetChanged();
 			updateProgressBarVisibility();
 		}

File: src/de/danoeh/antennapod/receiver/FeedUpdateReceiver.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.receiver;
 
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.PodcastApp;
 import de.danoeh.antennapod.feed.FeedManager;
 import android.content.BroadcastReceiver;
@@ -18,15 +19,15 @@ public class FeedUpdateReceiver extends BroadcastReceiver {
 	@Override
 	public void onReceive(Context context, Intent intent) {
 		if (intent.getAction().equals(ACTION_REFRESH_FEEDS)) {
-			Log.d(TAG, "Received intent");
+			if (BuildConfig.DEBUG) Log.d(TAG, "Received intent");
 			boolean mobileUpdate = PreferenceManager
 					.getDefaultSharedPreferences(
 							context.getApplicationContext()).getBoolean(
 							PodcastApp.PREF_MOBILE_UPDATE, false);
 			if (mobileUpdate || connectedToWifi(context)) {
 				FeedManager.getInstance().refreshAllFeeds(context);
 			} else {
-				Log.d(TAG,
+				if (BuildConfig.DEBUG) Log.d(TAG,
 						"Blocking automatic update: no wifi available / no mobile updates allowed");
 			}
 		}

File: src/de/danoeh/antennapod/receiver/MediaButtonReceiver.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.receiver;
 
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.service.PlaybackService;
 import android.content.BroadcastReceiver;
 import android.content.ComponentName;
@@ -19,7 +20,7 @@ public class MediaButtonReceiver extends BroadcastReceiver {
 
 	@Override
 	public void onReceive(Context context, Intent intent) {
-		Log.d(TAG, "Received intent");
+		if (BuildConfig.DEBUG) Log.d(TAG, "Received intent");
 		KeyEvent event = (KeyEvent) intent.getExtras().get(
 				Intent.EXTRA_KEY_EVENT);
 		if (event.getAction() == KeyEvent.ACTION_DOWN) {

File: src/de/danoeh/antennapod/receiver/PlayerWidget.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.receiver;
 
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.service.PlayerWidgetService;
 import android.appwidget.AppWidgetManager;
 import android.appwidget.AppWidgetProvider;
@@ -24,7 +25,7 @@ public void onReceive(Context context, Intent intent) {
 	@Override
 	public void onEnabled(Context context) {
 		super.onEnabled(context);
-		Log.d(TAG, "Widget enabled");
+		if (BuildConfig.DEBUG) Log.d(TAG, "Widget enabled");
 	}
 
 

File: src/de/danoeh/antennapod/util/FeedMenuHandler.java
Patch:
@@ -17,6 +17,7 @@
 import de.danoeh.antennapod.feed.FeedManager;
 import de.danoeh.antennapod.service.DownloadService;
 import de.danoeh.antennapod.storage.DownloadRequester;
+import de.danoeh.antennapod.BuildConfig;
 import de.danoeh.antennapod.R;
 
 /** Handles interactions with the FeedItemMenu. */
@@ -29,7 +30,7 @@ public static boolean onCreateOptionsMenu(MenuInflater inflater, Menu menu) {
 	}
 
 	public static boolean onPrepareOptionsMenu(Menu menu, Feed selectedFeed) {
-		Log.d(TAG, "Preparing options menu");
+		if (BuildConfig.DEBUG) Log.d(TAG, "Preparing options menu");
 		if (selectedFeed.getPaymentLink() != null) {
 			menu.findItem(R.id.support_item).setVisible(true);
 		}

File: src/de/danoeh/antennapod/util/URLChecker.java
Patch:
@@ -1,5 +1,6 @@
 package de.danoeh.antennapod.util;
 
+import de.danoeh.antennapod.BuildConfig;
 import android.util.Log;
 
 /** Provides methods for checking and editing a URL.*/
@@ -25,12 +26,12 @@ public static String prepareURL(final String url) {
 
         if (!url.startsWith("http")) {
             builder.append("http://");
-            Log.d(TAG, "Missing http; appending");
+            if (BuildConfig.DEBUG) Log.d(TAG, "Missing http; appending");
         }
         builder.append(url);
 
         if (url.contains(FEEDBURNER_URL)) {
-            Log.d(TAG,
+            if (BuildConfig.DEBUG) Log.d(TAG,
             "URL seems to be Feedburner URL; appending prefix");
             builder.append(FEEDBURNER_PREFIX);
         }

File: src/de/danoeh/antennapod/util/FeedItemMenuHandler.java
Patch:
@@ -103,7 +103,7 @@ public static boolean onMenuItemClicked(Context context, MenuItem item,
 			context.startActivity(new Intent(Intent.ACTION_VIEW, uri));
 			break;
 		case R.id.support_item:
-			new FlattrClickWorker(context, selectedItem.getPaymentLink()).execute();
+			new FlattrClickWorker(context, selectedItem.getPaymentLink()).executeAsync();
 			break;
 		case R.id.share_link_item:
 			ShareUtils.shareFeedItemLink(context, selectedItem);

File: src/de/danoeh/antennapod/util/FeedMenuHandler.java
Patch:
@@ -69,7 +69,7 @@ public static boolean onOptionsItemClicked(Context context, MenuItem item,
 			context.startActivity(new Intent(Intent.ACTION_VIEW, uri));
 			break;
 		case R.id.support_item:
-			new FlattrClickWorker(context, selectedFeed.getPaymentLink()).execute();
+			new FlattrClickWorker(context, selectedFeed.getPaymentLink()).executeAsync();
 			break;
 		case R.id.share_link_item:
 			ShareUtils.shareFeedlink(context, selectedFeed);

File: src/de/danoeh/antennapod/util/FlattrUtils.java
Patch:
@@ -120,7 +120,7 @@ public static void clickUrl(Context context, String url)
 
 	public static void handleCallback(Context context, Uri uri) {
 		AndroidAuthenticator auth = createAuthenticator();
-		new FlattrTokenFetcher(context, auth, uri).execute();
+		new FlattrTokenFetcher(context, auth, uri).executeAsync();
 	}
 
 	public static void revokeAccessToken(Context context) {

File: src/de/danoeh/antennapod/asynctask/FlattrClickWorker.java
Patch:
@@ -64,10 +64,9 @@ protected void onPostExecute(Void result) {
 	@Override
 	protected Void doInBackground(Void... params) {
 		Log.d(TAG, "Starting background work");
-		AccessToken token = FlattrUtils.retrieveToken();
-		if (token != null) {
+		if (FlattrUtils.hasToken()) {
 			try {
-				FlattrUtils.clickUrl(token, context, url);
+				FlattrUtils.clickUrl(context, url);
 			} catch (FlattrException e) {
 				e.printStackTrace();
 				exitCode = FLATTR_ERROR;

File: src/de/danoeh/antennapod/service/PlaybackService.java
Patch:
@@ -90,7 +90,7 @@ public class PlaybackService extends Service {
 	private PositionSaver positionSaver;
 	private WidgetUpdateWorker widgetUpdater;
 
-	private PlayerStatus statusBeforeSeek;
+	private volatile PlayerStatus statusBeforeSeek;
 
 	/** True if mediaplayer was paused because it lost audio focus temporarily */
 	private boolean pausedBecauseOfTransientAudiofocusLoss;

File: src/de/danoeh/antennapod/activity/MediaplayerActivity.java
Patch:
@@ -213,6 +213,7 @@ private void bindToService() {
 			} else {
 				Log.d(TAG, "No last played media found");
 				status = PlayerStatus.STOPPED;
+				setupGUI();
 				handleStatus();
 			}
 		} else {

File: src/de/danoeh/antennapod/util/NumberGenerator.java
Patch:
@@ -18,8 +18,6 @@ private NumberGenerator() {
      *  @return The generated random value
      * */
     public static long generateLong(final String strSeed) {
-        long seed = (long) strSeed.hashCode();
-        Log.d(TAG, "Taking " + seed + " as seed.");
-        return new Random(seed).nextLong();
+        return strSeed.hashCode();
     }
 }

File: src/de/podfetcher/service/DownloadService.java
Patch:
@@ -406,6 +406,9 @@ public void run() {
 
 			requester.removeDownload(feed);
 			cleanup();
+			if (savedFeed == null) {
+				savedFeed = feed;
+			}
 			long statusId = saveDownloadStatus(new DownloadStatus(savedFeed,
 					reason, successful));
 			sendDownloadHandledIntent(downloadId, statusId, hasImage, imageId);

File: src/de/podfetcher/activity/DownloadActivity.java
Patch:
@@ -179,7 +179,8 @@ public void onProgressUpdate() {
 
 	@Override
 	public void onFinish() {
+		Log.d(TAG, "Observer has finished, clearing adapter");
 		dla.clear();
-		dla.notifyDataSetChanged();
+		dla.notifyDataSetInvalidated();
 	}
 }

File: src/de/podfetcher/fragment/ItemDescriptionFragment.java
Patch:
@@ -51,7 +51,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 	@Override
 	public void onAttach(Activity activity) {
 		super.onAttach(activity);
-		if (webViewLoader == null) {
+		if (webViewLoader == null && item != null) {
 			webViewLoader = createLoader();
 			webViewLoader.execute();
 		}
@@ -83,6 +83,8 @@ public void onCreate(Bundle savedInstanceState) {
 		if (feedId != -1 && itemId != -1) {
 			Feed feed = manager.getFeed(feedId);
 			item = manager.getFeedItem(itemId, feed);
+			webViewLoader = createLoader();
+			webViewLoader.execute();
 		} else {
 			Log.e(TAG, TAG + " was called with invalid arguments");
 		}

File: src/de/podfetcher/activity/MediaplayerActivity.java
Patch:
@@ -54,6 +54,7 @@
 import de.podfetcher.util.Converter;
 import de.podfetcher.util.DownloadError;
 import de.podfetcher.util.MediaPlayerError;
+import de.podfetcher.util.StorageUtils;
 
 public class MediaplayerActivity extends SherlockFragmentActivity implements
 		SurfaceHolder.Callback {
@@ -131,6 +132,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
 	protected void onResume() {
 		super.onResume();
 		Log.d(TAG, "Resuming Activity");
+		StorageUtils.checkStorageAvailability(this);
 		bindToService();
 
 	}
@@ -170,6 +172,7 @@ protected void onPause() {
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		Log.d(TAG, "Creating Activity");
+		StorageUtils.checkStorageAvailability(this);
 
 		orientation = getResources().getConfiguration().orientation;
 		manager = FeedManager.getInstance();

File: src/de/podfetcher/activity/PodfetcherActivity.java
Patch:
@@ -34,6 +34,7 @@
 import de.podfetcher.fragment.UnreadItemlistFragment;
 import de.podfetcher.service.DownloadService;
 import de.podfetcher.storage.DownloadRequester;
+import de.podfetcher.util.StorageUtils;
 
 public class PodfetcherActivity extends SherlockFragmentActivity {
 	private static final String TAG = "PodfetcherActivity";
@@ -46,6 +47,7 @@ public class PodfetcherActivity extends SherlockFragmentActivity {
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
+		StorageUtils.checkStorageAvailability(this);
 		manager = FeedManager.getInstance();
 		requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
 		setContentView(R.layout.main);
@@ -69,6 +71,7 @@ protected void onPause() {
 	@Override
 	protected void onResume() {
 		super.onResume();
+		StorageUtils.checkStorageAvailability(this);
 		updateProgressBarVisibility();
 		IntentFilter filter = new IntentFilter();
 		filter.addAction(DownloadService.ACTION_DOWNLOAD_HANDLED);

File: src/de/podfetcher/asynctask/FeedImageLoader.java
Patch:
@@ -108,7 +108,7 @@ protected void onPostExecute(Void result) {
 		private int calculateSampleSize(int width, int height) {
 			int max = Math.max(width, height);
 			if (max < PREFERRED_LENGTH) {
-				return max;
+				return 1;
 			} else {
 				// find first sample size where max / sampleSize <
 				// PREFERRED_LENGTH

File: src/de/podfetcher/activity/FeedInfoActivity.java
Patch:
@@ -58,6 +58,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
 	}
 
+	
+	
 	@Override
 	public boolean onCreateOptionsMenu(Menu menu) {
 		return true;

File: src/de/podfetcher/activity/PodfetcherActivity.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentPagerAdapter;
+import android.support.v4.app.FragmentStatePagerAdapter;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.ViewPager;
 import android.util.Log;
@@ -135,7 +136,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
 		return true;
 	}
 
-	public static class MainPagerAdapter extends FragmentPagerAdapter {
+	public static class MainPagerAdapter extends FragmentStatePagerAdapter {
 		private static final int NUM_ITEMS = 3;
 
 		private static final int POS_FEEDLIST = 0;

File: src/de/podfetcher/feed/FeedManager.java
Patch:
@@ -179,10 +179,10 @@ public void refreshAllFeeds(Context context) {
 	public long addDownloadStatus(Context context, DownloadStatus status) {
 		PodDBAdapter adapter = new PodDBAdapter(context);
 		downloadLog.add(status);
+		adapter.open();
 		if (downloadLog.size() > DOWNLOAD_LOG_SIZE) {
 			adapter.removeDownloadStatus(downloadLog.remove(0));
 		}
-		adapter.open();
 		long result = adapter.setDownloadStatus(status);
 		adapter.close();
 		return result;

File: src/de/podfetcher/fragment/FeedlistFragment.java
Patch:
@@ -52,6 +52,8 @@ public void onDetach() {
 		pActivity = null;
 	}
 
+	
+
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
@@ -175,4 +177,5 @@ public void onDestroyActionMode(ActionMode mode) {
 		selectedFeed = null;
 		fla.setSelectedItemIndex(FeedlistAdapter.SELECTION_NONE);
 	}
+		
 }

File: src/de/podfetcher/activity/MediaplayerActivity.java
Patch:
@@ -413,7 +413,7 @@ public void onClick(View v) {
 		@Override
 		public void onClick(View v) {
 			if (status == PlayerStatus.PLAYING) {
-				playbackService.pause();
+				playbackService.pause(true);
 			} else if (status == PlayerStatus.PAUSED
 					|| status == PlayerStatus.PREPARED) {
 				playbackService.play();

File: src/de/podfetcher/activity/MediaplayerActivity.java
Patch:
@@ -559,6 +559,7 @@ public void onReceive(Context context, Intent intent) {
 	public class MediaPositionObserver extends
 			AsyncTask<MediaPlayer, Void, Void> {
 
+		private static final String TAG = "MediaPositionObserver";
 		private static final int WAITING_INTERVALL = 1000;
 		private MediaPlayer player;
 
@@ -579,6 +580,8 @@ protected Void doInBackground(MediaPlayer... p) {
 					Log.d(TAG,
 							"Thread was interrupted while waiting. Finishing now");
 					return null;
+				} catch (IllegalStateException e) {
+					Log.d(TAG, "player is in illegal state, exiting now");
 				}
 				publishProgress();
 			}

File: src/de/podfetcher/service/PlaybackService.java
Patch:
@@ -325,6 +325,9 @@ public void pause() {
 		if (player.isPlaying()) {
 			Log.d(TAG, "Pausing playback.");
 			player.pause();
+			if (positionSaver != null) {
+				positionSaver.cancel(true);
+			}
 			saveCurrentPosition();
 			setStatus(PlayerStatus.PAUSED);
 			stopForeground(true);

File: src/de/podfetcher/PodcastApp.java
Patch:
@@ -25,5 +25,6 @@ public void onCreate() {
 	}
 	
 	
+	
 
 }

File: src/de/podfetcher/adapter/FeedItemlistAdapter.java
Patch:
@@ -83,6 +83,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 			} else {
 				holder.lenSize.setText(Converter.byteToString(item.getMedia()
 						.getSize()));
+				holder.downloaded.setVisibility(View.GONE);
 			}
 			
 			if (item.getMedia().isDownloading()) {

File: src/de/podfetcher/feed/FeedManager.java
Patch:
@@ -435,7 +435,7 @@ public FeedMedia getFeedMedia(long id, Feed feed) {
 	public FeedMedia getFeedMedia(long id) {
 		for (Feed feed : feeds) {
 			for (FeedItem item : feed.getItems()) {
-				if (item.getMedia().getId() == id) {
+				if (item.getMedia() != null && item.getMedia().getId() == id) {
 					return item.getMedia();
 				}
 			}

File: src/de/podfetcher/syndication/handler/TypeGetter.java
Patch:
@@ -25,7 +25,7 @@ enum Type {
 	private static final String ATOM_ROOT = "feed";
 	private static final String RSS_ROOT = "rss";
 
-	public Type getType(Feed feed) {
+	public Type getType(Feed feed) throws UnsupportedFeedtypeException {
 		XmlPullParserFactory factory;
 		try {
 			factory = XmlPullParserFactory.newInstance();
@@ -47,7 +47,7 @@ public Type getType(Feed feed) {
 						return Type.RSS20;
 					} else {
 						Log.d(TAG, "Type is invalid");
-						return Type.INVALID;
+						throw new UnsupportedFeedtypeException(Type.INVALID);
 					}
 				} else {
 					eventType = xpp.next();
@@ -60,7 +60,7 @@ public Type getType(Feed feed) {
 			e.printStackTrace();
 		}
 		Log.d(TAG, "Type is invalid");
-		return Type.INVALID;
+		throw new UnsupportedFeedtypeException(Type.INVALID);
 	}
 
 	private Reader createReader(Feed feed) {

File: src/de/podfetcher/feed/FeedManager.java
Patch:
@@ -360,6 +360,7 @@ public long setFeedMedia(Context context, FeedMedia media) {
 		PodDBAdapter adapter = new PodDBAdapter(context);
 		adapter.open();
 		long result = adapter.setMedia(media);
+		adapter.close();
 		return result;
 	}
 

File: src/de/podfetcher/service/PlaybackService.java
Patch:
@@ -187,6 +187,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
 			} else {
 				Log.e(TAG, "Media is null");
+				stopSelf();
 			}
 
 		} else if (media != null && status != PlayerStatus.PLAYING) {

File: src/de/podfetcher/feed/FeedFile.java
Patch:
@@ -48,7 +48,7 @@ public void setDownloaded(boolean downloaded) {
 	}
 
 	public boolean isDownloading() {
-		return downloaded == false && file_url != null;
+		return downloadId != 0;
 	}
 	
 	

File: src/de/podfetcher/fragment/FeedlistFragment.java
Patch:
@@ -98,7 +98,9 @@ public boolean onItemLongClick(AdapterView<?> parent, View view,
 	public void onResume() {
 		super.onResume();
 		IntentFilter filter = new IntentFilter();
+		filter.addAction(DownloadService.ACTION_DOWNLOAD_HANDLED);
 		filter.addAction(DownloadService.ACTION_FEED_SYNC_COMPLETED);
+		filter.addAction(DownloadRequester.ACTION_DOWNLOAD_QUEUED);
 
 		pActivity.registerReceiver(contentUpdate, filter);
 		fla.notifyDataSetChanged();

File: src/de/podfetcher/activity/MediaplayerActivity.java
Patch:
@@ -244,7 +244,7 @@ private void setupGUI() {
 			public void onProgressChanged(SeekBar seekBar, int progress,
 					boolean fromUser) {
 				if (fromUser) {
-					prog = progress / 100.0f;
+					prog = progress / ((float) seekBar.getMax());
 					duration = playbackService.getPlayer().getDuration();
 					txtvPosition.setText(Converter
 							.getDurationStringLong((int) (prog * duration)));

File: src/de/podfetcher/adapter/FeedItemlistAdapter.java
Patch:
@@ -73,6 +73,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 		if (item.getMedia() == null) {
 			holder.encInfo.setVisibility(View.GONE);
 		} else {
+			holder.encInfo.setVisibility(View.VISIBLE);
 			if (item.getMedia().isDownloaded()) {
 				holder.lenSize.setText(Converter.getDurationStringShort(item
 						.getMedia().getDuration()));

File: src/de/podfetcher/util/FeedItemMenuHandler.java
Patch:
@@ -16,7 +16,7 @@ public class FeedItemMenuHandler {
 	private FeedItemMenuHandler() {
 		
 	}
-	
+	// TODO Fix crash when media is null
 	public static boolean onPrepareMenu(Menu menu, FeedItem selectedItem) {
 		FeedManager manager = FeedManager.getInstance();
 		

File: src/de/podfetcher/feed/FeedManager.java
Patch:
@@ -78,7 +78,7 @@ public boolean deleteFeedMedia(Context context, FeedMedia media) {
 				result = mediaFile.delete();
 			}
 			media.setDownloaded(false);
-			media.setFile_url("");
+			media.setFile_url(null);
 			setFeedMedia(context, media);
 		}
 		Log.d(TAG, "Deleting File. Result: " + result);

File: src/de/podfetcher/adapter/DownloadLogAdapter.java
Patch:
@@ -17,6 +17,7 @@
 import de.podfetcher.feed.FeedImage;
 import de.podfetcher.feed.FeedMedia;
 import de.podfetcher.service.DownloadStatus;
+import de.podfetcher.util.DownloadError;
 
 /** Displays a list of DownloadStatus entries. */
 public class DownloadLogAdapter extends ArrayAdapter<DownloadStatus> {
@@ -65,6 +66,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 			} else {
 				holder.successful.setTextColor(Color.parseColor("red"));
 				holder.successful.setText("Download failed");
+				holder.reason.setText(DownloadError.getErrorString(getContext(), status.getReason()));
 			}
 		} else {
 			holder = (Holder) convertView.getTag();

File: src/de/podfetcher/storage/DownloadRequester.java
Patch:
@@ -117,6 +117,7 @@ public void cancelDownload(final Context context, final long id) {
 			FeedFile f = getFeedFile(id);
 			if (f != null) {
 				downloads.remove(f);
+				f.setFile_url(null);
 			}
 		}
 	}

File: src/de/podfetcher/activity/ItemviewActivity.java
Patch:
@@ -101,7 +101,7 @@ private void populateUI() {
 
 		setTitle(item.getFeed().getTitle());
 
-		txtvPublished.setText(item.getPubDate());
+		//txtvPublished.setText(item.getPubDate()); TODO fix
 		txtvTitle.setText(item.getTitle());
 		if(item.getFeed().getImage() != null) {
 			imgvImage.setImageBitmap(item.getFeed().getImage().getImageBitmap());

File: src/de/podfetcher/feed/FeedManager.java
Patch:
@@ -1,6 +1,7 @@
 package de.podfetcher.feed;
 
 import java.util.ArrayList;
+import java.util.Date;
 
 import de.podfetcher.storage.*;
 import android.content.Context;
@@ -251,8 +252,8 @@ private ArrayList<FeedItem> extractFeedItemsFromCursor(Context context,
 						.getColumnIndex(PodDBAdapter.KEY_LINK)));
 				item.setDescription(itemlistCursor.getString(itemlistCursor
 						.getColumnIndex(PodDBAdapter.KEY_DESCRIPTION)));
-				item.setPubDate(itemlistCursor.getString(itemlistCursor
-						.getColumnIndex(PodDBAdapter.KEY_PUBDATE)));
+				item.setPubDate(new Date(itemlistCursor.getLong(itemlistCursor
+						.getColumnIndex(PodDBAdapter.KEY_PUBDATE))));
 				item.setMedia(adapter.getFeedMedia(itemlistCursor
 						.getLong(itemlistCursor
 								.getColumnIndex(PodDBAdapter.KEY_MEDIA)), item));

File: src/de/podfetcher/storage/PodDBAdapter.java
Patch:
@@ -62,7 +62,7 @@ public class PodDBAdapter {
 	private static final String CREATE_TABLE_FEED_ITEMS = "CREATE TABLE "
 			+ TABLE_NAME_FEED_ITEMS + " (" + TABLE_PRIMARY_KEY + KEY_TITLE
 			+ " TEXT," + KEY_LINK + " TEXT," + KEY_DESCRIPTION
-			+ " TEXT," + KEY_PUBDATE + " TEXT," + KEY_MEDIA
+			+ " TEXT," + KEY_PUBDATE + " INTEGER," + KEY_MEDIA
 			+ " INTEGER," + KEY_FEED + " INTEGER," + KEY_READ
 			+ " INTEGER)";
 
@@ -216,7 +216,7 @@ public long setFeedItem(FeedItem item) {
 		values.put(KEY_TITLE, item.getTitle());
 		values.put(KEY_LINK, item.getLink());
 		values.put(KEY_DESCRIPTION, item.getDescription());
-		values.put(KEY_PUBDATE, item.getPubDate());
+		values.put(KEY_PUBDATE, item.getPubDate().getTime());
 		if (item.getMedia() != null) {
 			if(item.getMedia().getId() == 0) {
 				setMedia(item.getMedia());

File: src/de/podfetcher/syndication/namespace/atom/NSAtom.java
Patch:
@@ -9,6 +9,7 @@
 import de.podfetcher.syndication.handler.HandlerState;
 import de.podfetcher.syndication.namespace.Namespace;
 import de.podfetcher.syndication.namespace.SyndElement;
+import de.podfetcher.syndication.util.SyndDateUtils;
 
 public class NSAtom extends Namespace {
 	public static final String NSTAG = "atom";
@@ -109,7 +110,7 @@ public void handleCharacters(HandlerState state, char[] ch, int start,
 				}
 			} else if (top.equals(PUBLISHED)) {
 				if (second.equals(ENTRY)) {
-					state.getCurrentItem().setPubDate(content);
+					state.getCurrentItem().setPubDate(SyndDateUtils.parseRFC3339Date(content));
 				}
 			} else if (top.equals(IMAGE)) {
 				state.getFeed().setImage(new FeedImage(content, null));

File: src/de/podfetcher/syndication/namespace/rss20/NSRSS20.java
Patch:
@@ -90,7 +90,7 @@ public void handleCharacters(HandlerState state, char[] ch, int start,
 					state.getCurrentItem().setLink(content);
 				}
 			} else if (top.equals(PUBDATE) && second.equals(ITEM)) {
-				state.getCurrentItem().setPubDate(content);
+				state.getCurrentItem().setPubDate(SyndDateUtils.parseRFC822Date(content));
 			} else if (top.equals(URL) && second.equals(IMAGE)) {
 				state.getFeed().getImage().setDownload_url(content);
 			}

File: src/de/podfetcher/syndication/handler/SyndHandler.java
Patch:
@@ -32,8 +32,8 @@ public void startElement(String uri, String localName, String qName,
 
 		Namespace handler = getHandlingNamespace(uri);
 		if (handler != null) {
-			handler.handleElementStart(localName, state, attributes);
-			state.tagstack.push(new SyndElement(localName, handler));
+			SyndElement element = handler.handleElementStart(localName, state, attributes);
+			state.tagstack.push(element);
 			
 		}
 	}
@@ -46,7 +46,6 @@ public void characters(char[] ch, int start, int length)
 		if (top.getNamespace() != null) {
 			top.getNamespace().handleCharacters(state, ch, start, length);
 		}
-		// ignore element otherwise
 	}
 
 	@Override

File: src/de/podfetcher/syndication/namespace/Namespace.java
Patch:
@@ -11,9 +11,9 @@ public abstract class Namespace {
 	public static final String NSURI = null;
 	
 	/** Called by a Feedhandler when in startElement and it detects a namespace element 
-	 * 	@return true if namespace handled the element, false if it ignored it
+	 * 	@return The SyndElement to push onto the stack
 	 * */
-	public abstract void handleElementStart(String localName, HandlerState state, Attributes attributes);
+	public abstract SyndElement handleElementStart(String localName, HandlerState state, Attributes attributes);
 	
 	/** Called by a Feedhandler when in characters and it detects a namespace element */
 	public abstract void handleCharacters(HandlerState state, char ch[], int start, int length);

File: src/de/podfetcher/syndication/namespace/atom/NSAtom.java
Patch:
@@ -5,6 +5,7 @@
 import de.podfetcher.feed.Feed;
 import de.podfetcher.syndication.handler.HandlerState;
 import de.podfetcher.syndication.namespace.Namespace;
+import de.podfetcher.syndication.namespace.SyndElement;
 
 public class NSAtom extends Namespace {
 	public static final String NSTAG = "atom";
@@ -16,11 +17,12 @@ public class NSAtom extends Namespace {
 	private static final String AUTHOR = "author";
 
 	@Override
-	public void handleElementStart(String localName, HandlerState state,
+	public SyndElement handleElementStart(String localName, HandlerState state,
 			Attributes attributes) {
 		if (localName.equals(TITLE)) {
 
 		}
+		return null;
 	}
 
 	@Override

File: src/de/podfetcher/syndication/namespace/rss20/NSRSS20.java
Patch:
@@ -40,7 +40,7 @@ public class NSRSS20 extends Namespace {
 	public final static String ENC_TYPE = "type";
 
 	@Override
-	public void handleElementStart(String localName, HandlerState state,
+	public SyndElement handleElementStart(String localName, HandlerState state,
 			Attributes attributes) {
 		if (localName.equals(ITEM)) {
 			state.setCurrentItem(new FeedItem());
@@ -55,6 +55,7 @@ public void handleElementStart(String localName, HandlerState state,
 		} else if (localName.equals(IMAGE)) {
 			state.getFeed().setImage(new FeedImage());
 		}
+		return new SyndElement(localName, this);
 	}
 
 	@Override

File: src/de/podfetcher/syndication/handler/FeedHandler.java
Patch:
@@ -16,8 +16,8 @@ public class FeedHandler {
 	
 	public Feed parseFeed(Feed feed) {
 		TypeGetter tg = new TypeGetter();
-		tg.getType(feed);
-		SyndHandler handler = new SyndHandler(feed);
+		TypeGetter.Type type = tg.getType(feed);
+		SyndHandler handler = new SyndHandler(feed, type);
 		try {
 			SAXParserFactory factory =  SAXParserFactory.newInstance();
 			factory.setNamespaceAware(true);

File: src/de/podfetcher/syndication/handler/HandlerState.java
Patch:
@@ -17,11 +17,13 @@ public class HandlerState {
 	protected Stack<SyndElement> tagstack;
 	/** Namespaces that have been defined so far. */
 	protected HashMap<String, Namespace> namespaces;
+	protected Stack<Namespace> defaultNamespaces;
 	
 	public HandlerState(Feed feed) {
 		this.feed = feed;
 		tagstack = new Stack<SyndElement>();
 		namespaces = new HashMap<String, Namespace>();
+		defaultNamespaces = new Stack<Namespace>();
 	}
 	
 	

File: src/de/podfetcher/syndication/handler/SyndHandler.java
Patch:
@@ -8,6 +8,7 @@
 
 import de.podfetcher.feed.Feed;
 import de.podfetcher.syndication.namespace.Namespace;
+import de.podfetcher.syndication.namespace.SyndElement;
 import de.podfetcher.syndication.namespace.atom.NSAtom;
 
 /** Superclass for all SAX Handlers which process Syndication formats */
@@ -22,7 +23,7 @@ public SyndHandler(Feed feed) {
 	@Override
 	public void startElement(String uri, String localName, String qName,
 			Attributes attributes) throws SAXException {
-		state.tagstack.push(qName);
+		state.tagstack.push(new SyndElement(qName));
 		
 		String[] parts = qName.split(":");
 		String prefix = "";

File: src/de/podfetcher/syndication/handler/FeedHandler.java
Patch:
@@ -20,6 +20,7 @@ public Feed parseFeed(Feed feed) {
 		RSSHandler handler = new RSSHandler(feed);
 		try {
 			SAXParserFactory factory =  SAXParserFactory.newInstance();
+			factory.setNamespaceAware(true);
 			SAXParser saxParser = factory.newSAXParser();
 			saxParser.parse(new File(feed.getFile_url()), handler);
 		} catch (SAXException e) {

File: src/de/podfetcher/syndication/FeedHandler.java
Patch:
@@ -27,6 +27,8 @@ public class FeedHandler {
 	public final static String ENC_TYPE = "type";
 	
 	public Feed parseFeed(Feed feed) {
+		TypeGetter tg = new TypeGetter();
+		tg.getType(feed);
 		RSSHandler handler = new RSSHandler(feed);
 		try {
 			SAXParserFactory factory =  SAXParserFactory.newInstance();

File: src/de/podfetcher/activity/MediaplayerActivity.java
Patch:
@@ -218,7 +218,7 @@ protected Long doInBackground(PlaybackService... services) {
 		private void getProgress() {
 			FeedMedia media = service.getMedia();
 			position = media.getPosition();
-			length = media.getLength();
+			length = media.getDuration();
 		}
 	}
 	

File: src/de/podfetcher/fragment/FeedlistFragment.java
Patch:
@@ -91,6 +91,7 @@ public void onResume() {
 		filter.addAction(DownloadService.ACTION_FEED_SYNC_COMPLETED);
 
 		pActivity.registerReceiver(contentUpdate, filter);
+        fla.notifyDataSetChanged();
 	}
 
 	@Override
@@ -102,6 +103,7 @@ public void onPause() {
 	private BroadcastReceiver contentUpdate = new BroadcastReceiver() {
 		@Override
 		public void onReceive(Context context, Intent intent) {
+            Log.d(TAG, "Received contentUpdate Intent.");
 			fla.notifyDataSetChanged();
 		}
 	};

File: src/de/podfetcher/feed/FeedManager.java
Patch:
@@ -227,7 +227,9 @@ private ArrayList<FeedItem> extractFeedItemsFromCursor(Context context, Feed fee
 				item.setLink(itemlistCursor.getString(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_LINK)));
 				item.setDescription(itemlistCursor.getString(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_DESCRIPTION)));
 				item.setPubDate(itemlistCursor.getString(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_PUBDATE)));
-				item.setMedia(adapter.getFeedMedia(itemlistCursor.getLong(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_MEDIA))));
+				item.setMedia(adapter.getFeedMedia(
+							itemlistCursor.getLong(
+								itemlistCursor.getColumnIndex(PodDBAdapter.KEY_MEDIA)), item));
 				item.setRead((itemlistCursor.getInt(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_READ)) > 0) ? true : false);
 				
 				items.add(item);

File: src/de/podfetcher/feed/FeedMedia.java
Patch:
@@ -5,8 +5,7 @@ public class FeedMedia extends FeedFile{
 	private long position;
 	private long size;	// File size in Byte
 	private String mime_type;
-	
-	private FeedItem item; // TODO remove
+	private FeedItem item;
 
 	public FeedMedia(FeedItem i, String download_url, long size, String mime_type) {
 		this.item = i;
@@ -15,10 +14,11 @@ public FeedMedia(FeedItem i, String download_url, long size, String mime_type) {
 		this.mime_type = mime_type;
 	}
 
-	public FeedMedia(long id, long length, long position, long size, String mime_type,
+	public FeedMedia(long id, FeedItem item, long length, long position, long size, String mime_type,
 			String file_url, String download_url) {
 		super();
 		this.id = id;
+		this.item = item;
 		this.length = length;
 		this.position = position;
 		this.size = size;

File: src/de/podfetcher/storage/PodDBAdapter.java
Patch:
@@ -269,7 +269,7 @@ public Cursor getImageOfFeedCursor(long id) {
 		return c;
 	}
 	
-	public FeedMedia getFeedMedia(long row_index) throws SQLException{
+	public FeedMedia getFeedMedia(long row_index, FeedItem owner) throws SQLException{
 	    open();
 		Cursor cursor = db.query(TABLE_NAME_FEED_MEDIA, null, KEY_ID + "=?",
 				new String[]{String.valueOf(row_index)}, null, null, null);
@@ -278,6 +278,7 @@ public FeedMedia getFeedMedia(long row_index) throws SQLException{
 			throw new SQLException("No FeedMedia found at index: " + row_index);
 		}
 		FeedMedia media = new FeedMedia(row_index,
+				owner,
 				cursor.getLong(cursor.getColumnIndex(KEY_LENGTH)),
 				cursor.getLong(cursor.getColumnIndex(KEY_POSITION)),
 				cursor.getLong(cursor.getColumnIndex(KEY_SIZE)),

File: src/de/podfetcher/service/DownloadService.java
Patch:
@@ -93,6 +93,7 @@ public void run() {
 	private BroadcastReceiver downloadReceiver = new BroadcastReceiver() {
 		@Override
 		public void onReceive(Context context, Intent intent) {
+			Log.d(TAG, "Received 'Download Complete' - message.");
 			long downloadId = intent.getLongExtra(DownloadManager.EXTRA_DOWNLOAD_ID, 0);
 			Feed feed = requester.getFeed(downloadId);
 			if(feed != null) {

File: src/de/podfetcher/activity/ItemviewActivity.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.File;
 import android.net.Uri;
+import android.graphics.BitmapFactory;
 import com.actionbarsherlock.app.SherlockActivity;
 import android.view.View;
 import android.widget.ListView;
@@ -64,7 +65,7 @@ private void populateUI() {
 		txtvPublished.setText(item.getPubDate());
 		txtvTitle.setText(item.getTitle());
 		if(item.getFeed().getImage() != null) {
-			imgvImage.setImageURI(Uri.fromFile(new File(item.getFeed().getImage().getFile_url())));
+			imgvImage.setImageBitmap(BitmapFactory.decodeFile(item.getFeed().getImage().getFile_url()));
 		}
 	}
 }

File: src/de/podfetcher/adapter/FeedlistAdapter.java
Patch:
@@ -14,6 +14,7 @@
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
+import android.graphics.BitmapFactory;
 
 
 public class FeedlistAdapter extends ArrayAdapter<Feed> {
@@ -46,7 +47,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 		
 		holder.title.setText(feed.getTitle());
 		if(feed.getImage() != null) {	
-			holder.image.setImageURI(Uri.fromFile(new File(feed.getImage().getFile_url())));	// TODO select default picture when no image downloaded
+			holder.image.setImageBitmap(BitmapFactory.decodeFile(feed.getImage().getFile_url()));	// TODO select default picture when no image downloaded
 		}
 		// TODO find new Episodes txtvNewEpisodes.setText(feed)
 		return convertView;

File: src/de/podfetcher/activity/ItemviewActivity.java
Patch:
@@ -46,6 +46,8 @@ private void extractFeeditem() {
 		}
 		Feed feed = manager.getFeed(feedId);
 		item = manager.getFeedItem(itemId, feed);
+		Log.d(TAG, "Title of item is " + item.getTitle());
+		Log.d(TAG, "Title of feed is " + item.getFeed().getTitle());
 	}
 
 	private void populateUI() {

File: src/de/podfetcher/feed/FeedManager.java
Patch:
@@ -199,15 +199,15 @@ private void extractFeedlistFromCursor(Context context) {
 				
 				// Get FeedItem-Object
 				Cursor itemlistCursor = adapter.getAllItemsOfFeedCursor(feed);
-				feed.setItems(extractFeedItemsFromCursor(context, itemlistCursor));
+				feed.setItems(extractFeedItemsFromCursor(context, feed, itemlistCursor));
 				
 				feeds.add(feed);
 			}while(feedlistCursor.moveToNext());
 		}
 		adapter.close();
 	}
 	
-	private ArrayList<FeedItem> extractFeedItemsFromCursor(Context context, Cursor itemlistCursor) {
+	private ArrayList<FeedItem> extractFeedItemsFromCursor(Context context, Feed feed, Cursor itemlistCursor) {
 		ArrayList<FeedItem> items = new ArrayList<FeedItem>();
 		PodDBAdapter adapter = new PodDBAdapter(context);
 		adapter.open();
@@ -216,6 +216,7 @@ private ArrayList<FeedItem> extractFeedItemsFromCursor(Context context, Cursor i
 				FeedItem item = new FeedItem();
 				
 				item.id = itemlistCursor.getLong(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_ID));
+				item.setFeed(feed);
 				item.setTitle(itemlistCursor.getString(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_TITLE)));
 				item.setLink(itemlistCursor.getString(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_LINK)));
 				item.setDescription(itemlistCursor.getString(itemlistCursor.getColumnIndex(PodDBAdapter.KEY_DESCRIPTION)));

File: src/de/podfetcher/PodcastApp.java
Patch:
@@ -1,6 +1,7 @@
 package de.podfetcher;
 
 import de.podfetcher.activity.PodfetcherActivity;
+import de.podfetcher.feed.FeedManager;
 import android.app.Application;
 
 public class PodcastApp extends Application {
@@ -17,8 +18,8 @@ public void onCreate() {
 		super.onCreate();
 		singleton = this;
 		
-		//FeedManager manager = FeedManager.getInstance();
-		//manager.loadDBData(getApplicationContext());
+		FeedManager manager = FeedManager.getInstance();
+		manager.loadDBData(getApplicationContext());
 	}
 	
 	

File: src/de/podfetcher/gui/FeedlistAdapter.java
Patch:
@@ -48,7 +48,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 		TextView txtvFeedname = (TextView)feedlistView.findViewById(R.id.txtvFeedname);
 		TextView txtvNewEpisodes = (TextView)feedlistView.findViewById(R.id.txtvNewEpisodes);
 		if(feed.getImage() != null) {	
-			imageView.setImageURI(Uri.fromFile(new File(feed.getFile_url())));	// TODO select default picture when no image downloaded
+			imageView.setImageURI(Uri.fromFile(new File(feed.getImage().getFile_url())));	// TODO select default picture when no image downloaded
 		}
 		txtvFeedname.setText(feed.getTitle());
 		// TODO find new Episodes txtvNewEpisodes.setText(feed)

File: src/de/podfetcher/service/DownloadService.java
Patch:
@@ -105,7 +105,7 @@ public void onReceive(Context context, Intent intent) {
 	private void handleCompletedFeedDownload(Context context, Feed feed) {
 	    Log.d(this.toString(), "Handling completed Feed Download");
 		// Get Feed Information
-		feed.setFile_url((new File(requester.getFeedfilePath(context), requester.getFeedfileName(feed.getId()))).toString());
+		//feed.setFile_url((new File(requester.getFeedfilePath(context), requester.getFeedfileName(feed.getId()))).toString());
 		
 		syncExecutor.execute(new FeedSyncThread(feed, this, requester));
 
@@ -115,7 +115,7 @@ private void handleCompletedFeedDownload(Context context, Feed feed) {
 	private void handleCompletedImageDownload(Context context, FeedImage image) {
 	        Log.d(this.toString(), "Handling completed Image Download");
 			requester.removeFeedImage(image);
-			image.setFile_url(requester.getImagefilePath(context) + requester.getImagefileName(image.getId()));
+			//image.setFile_url(requester.getImagefilePath(context) + requester.getImagefileName(image.getId()));
             manager.setFeedImage(this, image);
 	}
 

File: src/de/podfetcher/service/FeedSyncService.java
Patch:
@@ -59,7 +59,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 	/** Extracts a Feed object from the given Intent */
 	private Feed handleIntent(Intent intent) {
 		Feed feed = manager.getFeed(intent.getLongExtra(DownloadRequester.EXTRA_ITEM_ID, -1));
-		feed.setFile_url(requester.getFeedfilePath(this) + requester.getFeedfileName(feed.getId()));
+		//feed.setFile_url(requester.getFeedfilePath(this) + requester.getFeedfileName(feed.getId()));
 		return feed;
 	}
 

File: src/de/podfetcher/feed/RSSHandler.java
Patch:
@@ -48,7 +48,7 @@ public void endElement(String uri, String localName, String qName)
 		} else if (qName.equalsIgnoreCase(FeedHandler.TITLE)) {
 			if (active_root_element.equalsIgnoreCase(FeedHandler.CHANNEL)) {
 				feed.setTitle(strBuilder.toString());
-			} else if(active_root_element.equalsIgnoreCase(FeedHandler.TITLE)) {
+			} else if(active_root_element.equalsIgnoreCase(FeedHandler.ITEM)) {
 				currentItem.setTitle(strBuilder.toString());
 			} else if(active_root_element.equalsIgnoreCase(FeedHandler.IMAGE)) {
 				feed.getImage().title = strBuilder.toString();
@@ -62,7 +62,7 @@ public void endElement(String uri, String localName, String qName)
 		} else if (qName.equalsIgnoreCase(FeedHandler.LINK)) {
 			if (active_root_element.equalsIgnoreCase(FeedHandler.CHANNEL)) {
 				feed.setLink(strBuilder.toString());
-			} else if(active_root_element.equalsIgnoreCase(FeedHandler.TITLE)){
+			} else if(active_root_element.equalsIgnoreCase(FeedHandler.ITEM)){
 				currentItem.setLink(strBuilder.toString());
 			} 
 		} else if (qName.equalsIgnoreCase(FeedHandler.PUBDATE)) {

