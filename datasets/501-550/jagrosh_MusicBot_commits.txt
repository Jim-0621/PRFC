File: src/main/java/com/jagrosh/jmusicbot/utils/FormatUtil.java
Patch:
@@ -94,7 +94,7 @@ public static String listOfVChannels(List<VoiceChannel> list, String query)
     
     public static String listOfRoles(List<Role> list, String query)
     {
-        String out = " Multiple text channels found matching \""+query+"\":";
+        String out = " Multiple roles found matching \""+query+"\":";
         for(int i=0; i<6 && i<list.size(); i++)
             out+="\n - "+list.get(i).getName()+" (ID:"+list.get(i).getId()+")";
         if(list.size()>6)

File: src/main/java/com/jagrosh/jmusicbot/audio/AudioHandler.java
Patch:
@@ -20,7 +20,6 @@
 import com.jagrosh.jmusicbot.settings.QueueType;
 import com.jagrosh.jmusicbot.utils.TimeUtil;
 import com.jagrosh.jmusicbot.settings.RepeatMode;
-import com.jagrosh.jmusicbot.utils.OtherUtil;
 import com.sedmelluq.discord.lavaplayer.player.AudioPlayer;
 import com.sedmelluq.discord.lavaplayer.player.event.AudioEventAdapter;
 import com.sedmelluq.discord.lavaplayer.tools.FriendlyException;

File: src/main/java/com/jagrosh/jmusicbot/utils/OtherUtil.java
Patch:
@@ -224,7 +224,9 @@ public static String getUnsupportedBotReason(JDA jda)
         ApplicationInfo info = jda.retrieveApplicationInfo().complete();
         if (info.isBotPublic())
             return "\"Public Bot\" is enabled. Using JMusicBot as a public bot is not supported. Please disable it in the "
-                    + "Developer Dashboard at https://discord.com/developers/applications/" + jda.getSelfUser().getId() + "/bot.";
+                    + "Developer Dashboard at https://discord.com/developers/applications/" + jda.getSelfUser().getId() + "/bot ."
+                    + "You may also need to disable all Installation Contexts at https://discord.com/developers/applications/" 
+                    + jda.getSelfUser().getId() + "/installation .";
 
         return null;
     }

File: src/main/java/com/jagrosh/jmusicbot/BotConfig.java
Patch:
@@ -16,8 +16,8 @@
 package com.jagrosh.jmusicbot;
 
 import com.jagrosh.jmusicbot.entities.Prompt;
-import com.jagrosh.jmusicbot.utils.FormatUtil;
 import com.jagrosh.jmusicbot.utils.OtherUtil;
+import com.jagrosh.jmusicbot.utils.TimeUtil;
 import com.sedmelluq.discord.lavaplayer.track.AudioTrack;
 import com.typesafe.config.*;
 import java.io.IOException;
@@ -336,7 +336,7 @@ public long getMaxSeconds()
     
     public String getMaxTime()
     {
-        return FormatUtil.formatTime(maxSeconds * 1000);
+        return TimeUtil.formatTime(maxSeconds * 1000);
     }
 
     public long getAloneTimeUntilStop()

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -199,6 +199,7 @@ private static CommandClient createCommandClient(BotConfig config, SettingsManag
                         new RemoveCmd(bot),
                         new SearchCmd(bot),
                         new SCSearchCmd(bot),
+                        new SeekCmd(bot),
                         new ShuffleCmd(bot),
                         new SkipCmd(bot),
 

File: src/main/java/com/jagrosh/jmusicbot/audio/AudioHandler.java
Patch:
@@ -18,6 +18,7 @@
 import com.jagrosh.jmusicbot.playlist.PlaylistLoader.Playlist;
 import com.jagrosh.jmusicbot.queue.AbstractQueue;
 import com.jagrosh.jmusicbot.settings.QueueType;
+import com.jagrosh.jmusicbot.utils.TimeUtil;
 import com.jagrosh.jmusicbot.settings.RepeatMode;
 import com.sedmelluq.discord.lavaplayer.player.AudioPlayer;
 import com.sedmelluq.discord.lavaplayer.player.event.AudioEventAdapter;
@@ -50,6 +51,7 @@ public class AudioHandler extends AudioEventAdapter implements AudioSendHandler
     public final static String PAUSE_EMOJI = "\u23F8"; // ⏸
     public final static String STOP_EMOJI  = "\u23F9"; // ⏹
 
+
     private final List<AudioTrack> defaultQueue = new LinkedList<>();
     private final Set<String> votes = new HashSet<>();
     
@@ -246,7 +248,7 @@ public Message getNowPlaying(JDA jda)
             double progress = (double)audioPlayer.getPlayingTrack().getPosition()/track.getDuration();
             eb.setDescription(getStatusEmoji()
                     + " "+FormatUtil.progressBar(progress)
-                    + " `[" + FormatUtil.formatTime(track.getPosition()) + "/" + FormatUtil.formatTime(track.getDuration()) + "]` "
+                    + " `[" + TimeUtil.formatTime(track.getPosition()) + "/" + TimeUtil.formatTime(track.getDuration()) + "]` "
                     + FormatUtil.volumeIcon(audioPlayer.getVolume()));
             
             return mb.setEmbeds(eb.build()).build();

File: src/main/java/com/jagrosh/jmusicbot/commands/music/QueueCmd.java
Patch:
@@ -27,6 +27,7 @@
 import com.jagrosh.jmusicbot.settings.RepeatMode;
 import com.jagrosh.jmusicbot.settings.Settings;
 import com.jagrosh.jmusicbot.utils.FormatUtil;
+import com.jagrosh.jmusicbot.utils.TimeUtil;
 import net.dv8tion.jda.api.MessageBuilder;
 import net.dv8tion.jda.api.Permission;
 import net.dv8tion.jda.api.entities.Message;
@@ -112,7 +113,7 @@ private String getQueueTitle(AudioHandler ah, String success, int songslength, l
                     .append(ah.getPlayer().getPlayingTrack().getInfo().title).append("**\n");
         }
         return FormatUtil.filter(sb.append(success).append(" Current Queue | ").append(songslength)
-                .append(" entries | `").append(FormatUtil.formatTime(total)).append("` ")
+                .append(" entries | `").append(TimeUtil.formatTime(total)).append("` ")
                 .append("| ").append(queueType.getEmoji()).append(" `").append(queueType.getUserFriendlyName()).append('`')
                 .append(repeatmode.getEmoji() != null ? " | "+repeatmode.getEmoji() : "").toString());
     }

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -137,7 +137,7 @@ private static void startBot()
             // message content intent
             if(!"@mention".equals(config.getPrefix()))
             {
-                prompt.alert(Prompt.Level.INFO, "JMusicBot", "You currently have a custom prefix set. "
+                LOG.info("JMusicBot", "You currently have a custom prefix set. "
                         + "If your prefix is not working, make sure that the 'MESSAGE CONTENT INTENT' is Enabled "
                         + "on https://discord.com/developers/applications/" + jda.getSelfUser().getId() + "/bot");
             }

File: src/main/java/com/jagrosh/jmusicbot/utils/OtherUtil.java
Patch:
@@ -223,7 +223,8 @@ public static String getUnsupportedBotReason(JDA jda)
 
         ApplicationInfo info = jda.retrieveApplicationInfo().complete();
         if (info.isBotPublic())
-            return "\"Public Bot\" is enabled. Using JMusicBot as a public bot is not supported. Please disable it in the Developer Dashboard.";
+            return "\"Public Bot\" is enabled. Using JMusicBot as a public bot is not supported. Please disable it in the "
+                    + "Developer Dashboard at https://discord.com/developers/applications/" + jda.getSelfUser().getId() + "/bot.";
 
         return null;
     }

File: src/main/java/com/jagrosh/jmusicbot/Listener.java
Patch:
@@ -82,7 +82,7 @@ public void onReady(ReadyEvent event)
                         owner.openPrivateChannel().queue(pc -> pc.sendMessage(msg).queue());
                     }
                 }
-                catch(Exception ex) {} // ignored
+                catch(Exception ignored) {} // ignored
             }, 0, 24, TimeUnit.HOURS);
         }
     }

File: src/main/java/com/jagrosh/jmusicbot/utils/OtherUtil.java
Patch:
@@ -64,7 +64,7 @@ public static Path getPath(String path)
             {
                 result = Paths.get(new File(JMusicBot.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getParentFile().getPath() + File.separator + path);
             }
-            catch(URISyntaxException ex) {}
+            catch(URISyntaxException ignored) {}
         }
         return result;
     }
@@ -84,7 +84,7 @@ public static String loadResource(Object clazz, String name)
             reader.lines().forEach(line -> sb.append("\r\n").append(line));
             return sb.toString().trim();
         }
-        catch(IOException ex)
+        catch(IOException ignored)
         {
             return null;
         }

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -129,11 +129,12 @@ private static void startBot()
                         new VolumeCmd(bot),
                         
                         new PrefixCmd(bot),
+                        new QueueTypeCmd(bot),
                         new SetdjCmd(bot),
                         new SkipratioCmd(bot),
                         new SettcCmd(bot),
                         new SetvcCmd(bot),
-                        
+
                         new AutoplaylistCmd(bot),
                         new DebugCmd(bot),
                         new PlaylistCmd(bot),

File: src/main/java/com/jagrosh/jmusicbot/commands/dj/MoveTrackCmd.java
Patch:
@@ -6,7 +6,7 @@
 import com.jagrosh.jmusicbot.audio.AudioHandler;
 import com.jagrosh.jmusicbot.audio.QueuedTrack;
 import com.jagrosh.jmusicbot.commands.DJCommand;
-import com.jagrosh.jmusicbot.queue.FairQueue;
+import com.jagrosh.jmusicbot.queue.AbstractQueue;
 
 /**
  * Command that provides users the ability to move a track in the playlist.
@@ -57,7 +57,7 @@ public void doCommand(CommandEvent event)
 
         // Validate that from and to are available
         AudioHandler handler = (AudioHandler) event.getGuild().getAudioManager().getSendingHandler();
-        FairQueue<QueuedTrack> queue = handler.getQueue();
+        AbstractQueue<QueuedTrack> queue = handler.getQueue();
         if (isUnavailablePosition(queue, from))
         {
             String reply = String.format("`%d` is not a valid position in the queue!", from);
@@ -78,7 +78,7 @@ public void doCommand(CommandEvent event)
         event.replySuccess(reply);
     }
 
-    private static boolean isUnavailablePosition(FairQueue<QueuedTrack> queue, int position)
+    private static boolean isUnavailablePosition(AbstractQueue<QueuedTrack> queue, int position)
     {
         return (position < 1 || position > queue.size());
     }

File: src/test/java/com/jagrosh/jmusicbot/FairQueueTest.java
Patch:
@@ -29,7 +29,7 @@ public class FairQueueTest
     @Test
     public void differentIdentifierSize()
     {
-        FairQueue<Q> queue = new FairQueue<>();
+        FairQueue<Q> queue = new FairQueue<>(null);
         int size = 100;
         for(int i=0; i<size; i++)
             queue.add(new Q(i));
@@ -39,7 +39,7 @@ public void differentIdentifierSize()
     @Test
     public void sameIdentifierSize()
     {
-        FairQueue<Q> queue = new FairQueue<>();
+        FairQueue<Q> queue = new FairQueue<>(null);
         int size = 100;
         for(int i=0; i<size; i++)
             queue.add(new Q(0));

File: src/main/java/com/jagrosh/jmusicbot/Bot.java
Patch:
@@ -139,7 +139,6 @@ public void shutdown()
                 {
                     ah.stopAndClear();
                     ah.getPlayer().destroy();
-                    nowplaying.updateTopic(g.getIdLong(), ah, true);
                 }
             });
             jda.shutdown();

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -47,7 +47,7 @@ public class JMusicBot
     public final static Logger LOG = LoggerFactory.getLogger(JMusicBot.class);
     public final static Permission[] RECOMMENDED_PERMS = {Permission.MESSAGE_READ, Permission.MESSAGE_WRITE, Permission.MESSAGE_HISTORY, Permission.MESSAGE_ADD_REACTION,
                                 Permission.MESSAGE_EMBED_LINKS, Permission.MESSAGE_ATTACH_FILES, Permission.MESSAGE_MANAGE, Permission.MESSAGE_EXT_EMOJI,
-                                Permission.MANAGE_CHANNEL, Permission.VOICE_CONNECT, Permission.VOICE_SPEAK, Permission.NICKNAME_CHANGE};
+                                Permission.VOICE_CONNECT, Permission.VOICE_SPEAK, Permission.NICKNAME_CHANGE};
     public final static GatewayIntent[] INTENTS = {GatewayIntent.DIRECT_MESSAGES, GatewayIntent.GUILD_MESSAGES, GatewayIntent.GUILD_MESSAGE_REACTIONS, GatewayIntent.GUILD_VOICE_STATES};
     
     /**

File: src/main/java/com/jagrosh/jmusicbot/audio/QueuedTrack.java
Patch:
@@ -37,13 +37,13 @@ public QueuedTrack(AudioTrack track, User owner)
     public QueuedTrack(AudioTrack track, RequestMetadata rm)
     {
         this.track = track;
-        this.track.setUserData(rm);
+        this.track.setUserData(rm == null ? RequestMetadata.EMPTY : rm);
     }
     
     @Override
     public long getIdentifier() 
     {
-        return track.getUserData(RequestMetadata.class).getOwner();
+        return track.getUserData() == null ? 0L : track.getUserData(RequestMetadata.class).getOwner();
     }
     
     public AudioTrack getTrack()

File: src/main/java/com/jagrosh/jmusicbot/queue/FairQueue.java
Patch:
@@ -25,15 +25,16 @@
  * @author John Grosh (jagrosh)
  * @param <T>
  */
-public class FairQueue<T extends Queueable> {
+public class FairQueue<T extends Queueable> 
+{
     private final List<T> list = new ArrayList<>();
     private final Set<Long> set = new HashSet<>();
     
     public int add(T item)
     {
         int lastIndex;
         for(lastIndex=list.size()-1; lastIndex>-1; lastIndex--)
-            if(list.get(lastIndex).getIdentifier()==item.getIdentifier())
+            if(list.get(lastIndex).getIdentifier() == item.getIdentifier())
                 break;
         lastIndex++;
         set.clear();

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -34,6 +34,7 @@
 import net.dv8tion.jda.api.entities.Activity;
 import net.dv8tion.jda.api.requests.GatewayIntent;
 import net.dv8tion.jda.api.utils.cache.CacheFlag;
+import net.dv8tion.jda.api.exceptions.ErrorResponseException;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -202,7 +203,7 @@ else if(config.getGame().getName().equalsIgnoreCase("none"))
         }
         catch(ErrorResponseException ex)
         {
-            prompt.alert(Prompt.Level.ERROR, "JMusicBot", ex + "\n Invalid reponse returned when "
+            prompt.alert(Prompt.Level.ERROR, "JMusicBot", ex + "\nInvalid reponse returned when "
                     + "attempting to connect, please make sure you're connected to the internet");
             System.exit(1);
         }

File: src/main/java/com/jagrosh/jmusicbot/commands/dj/ForceskipCmd.java
Patch:
@@ -20,7 +20,6 @@
 import com.jagrosh.jmusicbot.audio.AudioHandler;
 import com.jagrosh.jmusicbot.audio.RequestMetadata;
 import com.jagrosh.jmusicbot.commands.DJCommand;
-import net.dv8tion.jda.api.entities.User;
 
 /**
  *

File: src/main/java/com/jagrosh/jmusicbot/commands/music/SkipCmd.java
Patch:
@@ -20,7 +20,6 @@
 import com.jagrosh.jmusicbot.audio.AudioHandler;
 import com.jagrosh.jmusicbot.audio.RequestMetadata;
 import com.jagrosh.jmusicbot.commands.MusicCommand;
-import net.dv8tion.jda.api.entities.User;
 
 /**
  *

File: src/main/java/com/jagrosh/jmusicbot/settings/SettingsManager.java
Patch:
@@ -29,7 +29,7 @@
  *
  * @author John Grosh (john.a.grosh@gmail.com)
  */
-public class SettingsManager implements GuildSettingsManager
+public class SettingsManager implements GuildSettingsManager<Settings>
 {
     private final static double SKIP_RATIO = .55;
     private final HashMap<Long,Settings> settings;

File: src/main/java/com/jagrosh/jmusicbot/BotConfig.java
Patch:
@@ -23,7 +23,6 @@
 import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.Path;
-import java.util.Collections;
 import net.dv8tion.jda.api.OnlineStatus;
 import net.dv8tion.jda.api.entities.Activity;
 

File: src/main/java/com/jagrosh/jmusicbot/audio/AudioHandler.java
Patch:
@@ -238,7 +238,7 @@ public Message getNowPlaying(JDA jda)
                     + " `[" + FormatUtil.formatTime(track.getPosition()) + "/" + FormatUtil.formatTime(track.getDuration()) + "]` "
                     + FormatUtil.volumeIcon(audioPlayer.getVolume()));
             
-            return mb.setEmbed(eb.build()).build();
+            return mb.setEmbeds(eb.build()).build();
         }
         else return null;
     }
@@ -248,7 +248,7 @@ public Message getNoMusicPlaying(JDA jda)
         Guild guild = guild(jda);
         return new MessageBuilder()
                 .setContent(FormatUtil.filter(manager.getBot().getConfig().getSuccess()+" **Now Playing...**"))
-                .setEmbed(new EmbedBuilder()
+                .setEmbeds(new EmbedBuilder()
                 .setTitle("No music playing")
                 .setDescription(JMusicBot.STOP_EMOJI+" "+FormatUtil.progressBar(-1)+" "+FormatUtil.volumeIcon(audioPlayer.getVolume()))
                 .setColor(guild.getSelfMember().getColor())

File: src/main/java/com/jagrosh/jmusicbot/audio/PlayerManager.java
Patch:
@@ -20,7 +20,6 @@
 import com.sedmelluq.discord.lavaplayer.player.DefaultAudioPlayerManager;
 import com.sedmelluq.discord.lavaplayer.source.AudioSourceManagers;
 import com.sedmelluq.discord.lavaplayer.source.youtube.YoutubeAudioSourceManager;
-import com.typesafe.config.Config;
 import net.dv8tion.jda.api.entities.Guild;
 
 /**

File: src/main/java/com/jagrosh/jmusicbot/commands/dj/ForceskipCmd.java
Patch:
@@ -20,7 +20,6 @@
 import com.jagrosh.jmusicbot.audio.AudioHandler;
 import com.jagrosh.jmusicbot.audio.RequestMetadata;
 import com.jagrosh.jmusicbot.commands.DJCommand;
-import net.dv8tion.jda.api.entities.User;
 
 /**
  *

File: src/main/java/com/jagrosh/jmusicbot/commands/general/SettingsCmd.java
Patch:
@@ -68,7 +68,7 @@ protected void execute(CommandEvent event)
                 .setFooter(event.getJDA().getGuilds().size() + " servers | "
                         + event.getJDA().getGuilds().stream().filter(g -> g.getSelfMember().getVoiceState().inVoiceChannel()).count()
                         + " audio connections", null);
-        event.getChannel().sendMessage(builder.setEmbed(ebuilder.build()).build()).queue();
+        event.getChannel().sendMessage(builder.setEmbeds(ebuilder.build()).build()).queue();
     }
     
 }

File: src/main/java/com/jagrosh/jmusicbot/commands/music/QueueCmd.java
Patch:
@@ -78,7 +78,7 @@ public void doCommand(CommandEvent event)
             Message nonowp = ah.getNoMusicPlaying(event.getJDA());
             Message built = new MessageBuilder()
                     .setContent(event.getClient().getWarning() + " There is no music in the queue!")
-                    .setEmbed((nowp==null ? nonowp : nowp).getEmbeds().get(0)).build();
+                    .setEmbeds((nowp==null ? nonowp : nowp).getEmbeds().get(0)).build();
             event.reply(built, m -> 
             {
                 if(nowp!=null)

File: src/main/java/com/jagrosh/jmusicbot/commands/music/SkipCmd.java
Patch:
@@ -20,7 +20,6 @@
 import com.jagrosh.jmusicbot.audio.AudioHandler;
 import com.jagrosh.jmusicbot.audio.RequestMetadata;
 import com.jagrosh.jmusicbot.commands.MusicCommand;
-import net.dv8tion.jda.api.entities.User;
 
 /**
  *

File: src/main/java/com/jagrosh/jmusicbot/playlist/PlaylistLoader.java
Patch:
@@ -53,7 +53,7 @@ public List<String> getPlaylistNames()
         else
         {
             createFolder();
-            return Collections.EMPTY_LIST;
+            return Collections.emptyList();
         }
     }
     

File: src/main/java/com/jagrosh/jmusicbot/settings/Settings.java
Patch:
@@ -130,7 +130,7 @@ public double getSkipRatio()
     @Override
     public Collection<String> getPrefixes()
     {
-        return prefix == null ? Collections.EMPTY_SET : Collections.singleton(prefix);
+        return prefix == null ? Collections.emptySet() : Collections.singleton(prefix);
     }
     
     // Setters

File: src/main/java/com/jagrosh/jmusicbot/settings/SettingsManager.java
Patch:
@@ -29,7 +29,7 @@
  *
  * @author John Grosh (john.a.grosh@gmail.com)
  */
-public class SettingsManager implements GuildSettingsManager
+public class SettingsManager implements GuildSettingsManager<Settings>
 {
     private final static double SKIP_RATIO = .55;
     private final HashMap<Long,Settings> settings;

File: src/main/java/com/jagrosh/jmusicbot/Listener.java
Patch:
@@ -71,9 +71,9 @@ public void onReady(ReadyEvent event)
         {
             bot.getThreadpool().scheduleWithFixedDelay(() -> 
             {
-                User owner = bot.getJDA().getUserById(bot.getConfig().getOwnerId());
-                if(owner!=null)
+                try
                 {
+                    User owner = bot.getJDA().retrieveUserById(bot.getConfig().getOwnerId()).complete();
                     String currentVersion = OtherUtil.getCurrentVersion();
                     String latestVersion = OtherUtil.getLatestVersion();
                     if(latestVersion!=null && !currentVersion.equalsIgnoreCase(latestVersion))
@@ -82,6 +82,7 @@ public void onReady(ReadyEvent event)
                         owner.openPrivateChannel().queue(pc -> pc.sendMessage(msg).queue());
                     }
                 }
+                catch(Exception ex) {} // ignored
             }, 0, 24, TimeUnit.HOURS);
         }
     }

File: src/main/java/com/jagrosh/jmusicbot/settings/SettingsManager.java
Patch:
@@ -43,7 +43,7 @@ public SettingsManager()
                 JSONObject o = loadedSettings.getJSONObject(id);
 
                 // Legacy version support: On versions 0.3.3 and older, the repeat mode was represented as a boolean.
-                if (o.has("repeat") && o.getBoolean("repeat"))
+                if (!o.has("repeat_mode") && o.has("repeat") && o.getBoolean("repeat"))
                     o.put("repeat_mode", RepeatMode.ALL);
 
 

File: src/main/java/com/jagrosh/jmusicbot/BotConfig.java
Patch:
@@ -67,7 +67,7 @@ public void load()
             if(path.toFile().exists())
             {
                 if(System.getProperty("config.file") == null)
-                    System.setProperty("config.file", System.getProperty("config", "config.txt"));
+                    System.setProperty("config.file", System.getProperty("config", path.toAbsolutePath().toString()));
                 ConfigFactory.invalidateCaches();
             }
             

File: src/main/java/com/jagrosh/jmusicbot/playlist/PlaylistLoader.java
Patch:
@@ -46,7 +46,7 @@ public List<String> getPlaylistNames()
     {
         if(folderExists())
         {
-            File folder = new File(config.getPlaylistsFolder());
+            File folder = new File(OtherUtil.getPath(config.getPlaylistsFolder()).toString());
             return Arrays.asList(folder.listFiles((pathname) -> pathname.getName().endsWith(".txt")))
                     .stream().map(f -> f.getName().substring(0,f.getName().length()-4)).collect(Collectors.toList());
         }

File: src/main/java/com/jagrosh/jmusicbot/audio/QueuedTrack.java
Patch:
@@ -53,6 +53,6 @@ public AudioTrack getTrack()
     @Override
     public String toString() 
     {
-        return "`[" + FormatUtil.formatTime(track.getDuration()) + "]` **" + track.getInfo().title + "** - <@" + track.getUserData(Long.class) + ">";
+        return "`[" + FormatUtil.formatTime(track.getDuration()) + "]` **" + track.getInfo().title + "** - <@" + track.getUserData(RequestMetadata.class).getOwner() + ">";
     }
 }

File: src/main/java/com/jagrosh/jmusicbot/BotConfig.java
Patch:
@@ -67,7 +67,7 @@ public void load()
             if(path.toFile().exists())
             {
                 if(System.getProperty("config.file") == null)
-                    System.setProperty("config.file", System.getProperty("config", "config.txt"));
+                    System.setProperty("config.file", System.getProperty("config", path.toAbsolutePath().toString()));
                 ConfigFactory.invalidateCaches();
             }
             

File: src/main/java/com/jagrosh/jmusicbot/playlist/PlaylistLoader.java
Patch:
@@ -46,7 +46,7 @@ public List<String> getPlaylistNames()
     {
         if(folderExists())
         {
-            File folder = new File(config.getPlaylistsFolder());
+            File folder = new File(OtherUtil.getPath(config.getPlaylistsFolder()).toString());
             return Arrays.asList(folder.listFiles((pathname) -> pathname.getName().endsWith(".txt")))
                     .stream().map(f -> f.getName().substring(0,f.getName().length()-4)).collect(Collectors.toList());
         }

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -172,7 +172,7 @@ else if(config.getGame().getName().equalsIgnoreCase("none"))
         {
             JDA jda = JDABuilder.create(config.getToken(), Arrays.asList(INTENTS))
                     .enableCache(CacheFlag.MEMBER_OVERRIDES, CacheFlag.VOICE_STATE)
-                    .disableCache(CacheFlag.ACTIVITY, CacheFlag.CLIENT_STATUS, CacheFlag.EMOTE)
+                    .disableCache(CacheFlag.ACTIVITY, CacheFlag.CLIENT_STATUS, CacheFlag.EMOTE, CacheFlag.ONLINE_STATUS)
                     .setActivity(nogame ? null : Activity.playing("loading..."))
                     .setStatus(config.getStatus()==OnlineStatus.INVISIBLE || config.getStatus()==OnlineStatus.OFFLINE 
                             ? OnlineStatus.INVISIBLE : OnlineStatus.DO_NOT_DISTURB)

File: src/main/java/com/jagrosh/jmusicbot/audio/PlayerManager.java
Patch:
@@ -20,6 +20,7 @@
 import com.sedmelluq.discord.lavaplayer.player.DefaultAudioPlayerManager;
 import com.sedmelluq.discord.lavaplayer.source.AudioSourceManagers;
 import com.sedmelluq.discord.lavaplayer.source.youtube.YoutubeAudioSourceManager;
+import com.typesafe.config.Config;
 import net.dv8tion.jda.api.entities.Guild;
 
 /**
@@ -37,6 +38,7 @@ public PlayerManager(Bot bot)
     
     public void init()
     {
+        TransformativeAudioSourceManager.createTransforms(bot.getConfig().getTransforms()).forEach(t -> registerSourceManager(t));
         AudioSourceManagers.registerRemoteSources(this);
         AudioSourceManagers.registerLocalSource(this);
         source(YoutubeAudioSourceManager.class).setPlaylistPageCount(10);

File: src/main/java/com/jagrosh/jmusicbot/BotConfig.java
Patch:
@@ -64,7 +64,7 @@ public void load()
         try 
         {
             // get the path to the config, default config.txt
-            path = Paths.get(System.getProperty("config.file", System.getProperty("config", "config.txt")));
+            path = OtherUtil.getPath(System.getProperty("config.file", System.getProperty("config", "config.txt")));
             if(path.toFile().exists())
             {
                 if(System.getProperty("config.file") == null)

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -167,7 +167,7 @@ else if(config.getGame().getName().equalsIgnoreCase("none"))
             }
         }
         
-        log.info("Loaded config from "+config.getConfigLocation());
+        log.info("Loaded config from " + config.getConfigLocation());
         
         // attempt to log in and start
         try

File: src/main/java/com/jagrosh/jmusicbot/settings/SettingsManager.java
Patch:
@@ -16,6 +16,7 @@
 package com.jagrosh.jmusicbot.settings;
 
 import com.jagrosh.jdautilities.command.GuildSettingsManager;
+import com.jagrosh.jmusicbot.utils.OtherUtil;
 import java.io.IOException;
 import java.nio.file.Files;
 import java.nio.file.Paths;
@@ -37,7 +38,7 @@ public SettingsManager()
     {
         this.settings = new HashMap<>();
         try {
-            JSONObject loadedSettings = new JSONObject(new String(Files.readAllBytes(Paths.get("serversettings.json"))));
+            JSONObject loadedSettings = new JSONObject(new String(Files.readAllBytes(OtherUtil.getPath("serversettings.json"))));
             loadedSettings.keySet().forEach((id) -> {
                 JSONObject o = loadedSettings.getJSONObject(id);
                 settings.put(Long.parseLong(id), new Settings(this,
@@ -99,7 +100,7 @@ protected void writeSettings()
             obj.put(Long.toString(key), o);
         });
         try {
-            Files.write(Paths.get("serversettings.json"), obj.toString(4).getBytes());
+            Files.write(OtherUtil.getPath("serversettings.json"), obj.toString(4).getBytes());
         } catch(IOException ex){
             LoggerFactory.getLogger("Settings").warn("Failed to write to file: "+ex);
         }

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -122,6 +122,7 @@ public static void main(String[] args)
                         new StopCmd(bot),
                         new VolumeCmd(bot),
                         
+                        new PrefixCmd(bot),
                         new SetdjCmd(bot),
                         new SettcCmd(bot),
                         new SetvcCmd(bot),

File: src/main/java/com/jagrosh/jmusicbot/commands/dj/PlaynextCmd.java
Patch:
@@ -35,10 +35,10 @@ public class PlaynextCmd extends DJCommand
 {
     private final String loadingEmoji;
     
-    public PlaynextCmd(Bot bot, String loadingEmoji)
+    public PlaynextCmd(Bot bot)
     {
         super(bot);
-        this.loadingEmoji = loadingEmoji;
+        this.loadingEmoji = bot.getConfig().getLoading();
         this.name = "playnext";
         this.arguments = "<title|URL>";
         this.help = "plays a single song next";

File: src/main/java/com/jagrosh/jmusicbot/commands/music/SCSearchCmd.java
Patch:
@@ -23,9 +23,9 @@
  */
 public class SCSearchCmd extends SearchCmd 
 {
-    public SCSearchCmd(Bot bot, String searchingEmoji)
+    public SCSearchCmd(Bot bot)
     {
-        super(bot, searchingEmoji);
+        super(bot);
         this.searchPrefix = "scsearch:";
         this.name = "scsearch";
         this.help = "searches Soundcloud for a provided query";

File: src/main/java/com/jagrosh/jmusicbot/commands/music/SearchCmd.java
Patch:
@@ -41,10 +41,10 @@ public class SearchCmd extends MusicCommand
     private final OrderedMenu.Builder builder;
     private final String searchingEmoji;
     
-    public SearchCmd(Bot bot, String searchingEmoji)
+    public SearchCmd(Bot bot)
     {
         super(bot);
-        this.searchingEmoji = searchingEmoji;
+        this.searchingEmoji = bot.getConfig().getSearching();
         this.name = "search";
         this.aliases = new String[]{"ytsearch"};
         this.arguments = "<query>";

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -128,6 +128,7 @@ public static void main(String[] args)
                         new SetvcCmd(),
                         
                         new AutoplaylistCmd(bot),
+                        new DebugCmd(bot),
                         new PlaylistCmd(bot),
                         new SetavatarCmd(),
                         new SetgameCmd(),

File: src/main/java/com/jagrosh/jmusicbot/audio/NowplayingHandler.java
Patch:
@@ -47,7 +47,8 @@ public NowplayingHandler(Bot bot)
     
     public void init()
     {
-        bot.getThreadpool().scheduleWithFixedDelay(() -> updateAll(), 0, 5, TimeUnit.SECONDS);
+        if(!bot.getConfig().useNPImages())
+            bot.getThreadpool().scheduleWithFixedDelay(() -> updateAll(), 0, 5, TimeUnit.SECONDS);
     }
     
     public void setLastNPMessage(Message m)

File: src/main/java/com/jagrosh/jmusicbot/audio/NowplayingHandler.java
Patch:
@@ -47,7 +47,8 @@ public NowplayingHandler(Bot bot)
     
     public void init()
     {
-        bot.getThreadpool().scheduleWithFixedDelay(() -> updateAll(), 0, 5, TimeUnit.SECONDS);
+        if(!bot.getConfig().useNPImages())
+            bot.getThreadpool().scheduleWithFixedDelay(() -> updateAll(), 0, 5, TimeUnit.SECONDS);
     }
     
     public void setLastNPMessage(Message m)

File: src/main/java/com/jagrosh/jmusicbot/audio/AudioHandler.java
Patch:
@@ -166,6 +166,9 @@ public void onTrackEnd(AudioPlayer player, AudioTrack track, AudioTrackEndReason
                 manager.getBot().getNowplayingHandler().onTrackUpdate(guildId, null, this);
                 if(!manager.getBot().getConfig().getStay())
                     manager.getBot().closeAudioConnection(guildId);
+                // unpause, in the case when the player was paused and the track has been skipped.
+                // this is to prevent the player being paused next time it's being used.
+                player.setPaused(false);
             }
         }
         else

File: src/main/java/com/jagrosh/jmusicbot/audio/AudioHandler.java
Patch:
@@ -166,6 +166,9 @@ public void onTrackEnd(AudioPlayer player, AudioTrack track, AudioTrackEndReason
                 manager.getBot().getNowplayingHandler().onTrackUpdate(guildId, null, this);
                 if(!manager.getBot().getConfig().getStay())
                     manager.getBot().closeAudioConnection(guildId);
+                // unpause, in the case when the player was paused and the track has been skipped.
+                // this is to prevent the player being paused next time it's being used.
+                player.setPaused(false);
             }
         }
         else

File: src/main/java/com/jagrosh/jmusicbot/commands/dj/ForceRemoveCmd.java
Patch:
@@ -93,7 +93,7 @@ else if(found.size()>1)
         int count = handler.getQueue().removeAll(target.getIdLong());
         if (count == 0)
         {
-            event.replyWarning(target.getName() + " doesn't have any songs in the queue!");
+            event.replyWarning("**"+target.getName()+"** doesn't have any songs in the queue!");
         }
         else
         {

File: src/main/java/com/jagrosh/jmusicbot/Bot.java
Patch:
@@ -130,7 +130,7 @@ public void shutdown()
                 {
                     ah.stopAndClear();
                     ah.getPlayer().destroy();
-                    nowplaying.updateTopic(g.getIdLong(), ah);
+                    nowplaying.updateTopic(g.getIdLong(), ah, true);
                 }
             });
             jda.shutdown();

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -114,6 +114,7 @@ public static void main(String[] args)
                         
                         new ForceskipCmd(bot),
                         new PauseCmd(bot),
+                        new PlaynextCmd(bot, config.getLoading()),
                         new RepeatCmd(bot),
                         new SkiptoCmd(bot),
                         new StopCmd(bot),
@@ -123,7 +124,6 @@ public static void main(String[] args)
                         new SettcCmd(),
                         new SetvcCmd(),
                         
-                        //new GuildlistCommand(waiter),
                         new AutoplaylistCmd(bot),
                         new PlaylistCmd(bot),
                         new SetavatarCmd(),

File: src/main/java/com/jagrosh/jmusicbot/commands/DJCommand.java
Patch:
@@ -39,7 +39,7 @@ public DJCommand(Bot bot)
                 return true;
             Settings settings = event.getClient().getSettingsFor(event.getGuild());
             Role dj = settings.getRole(event.getGuild());
-            return dj!=null && event.getMember().getRoles().contains(dj);
+            return dj!=null && (event.getMember().getRoles().contains(dj) || dj.getIdLong()==event.getGuild().getIdLong());
         });
     }
 }

File: src/main/java/com/jagrosh/jmusicbot/entities/Prompt.java
Patch:
@@ -77,7 +77,7 @@ public void alert(Level level, String context, String message)
                     case WARNING: option = JOptionPane.WARNING_MESSAGE; break;
                     case ERROR: option = JOptionPane.ERROR_MESSAGE; break;
                 }
-                JOptionPane.showMessageDialog(null, message, title, option);
+                JOptionPane.showMessageDialog(null, "<html><body><p style='width: 400px;'>"+message, title, option);
             }
             catch(Exception e) 
             {

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -75,6 +75,7 @@ public static void main(String[] args){
                 .setOwnerId(config.getOwnerId())
                 .setEmojis(config.getSuccess(), config.getWarning(), config.getError())
                 .setHelpWord(config.getHelp())
+                .setLinkedCacheSize(200)
                 .addCommands(
                         ab,
                         new PingCommand(),

File: src/main/java/com/jagrosh/jmusicbot/commands/SettingsCmd.java
Patch:
@@ -56,6 +56,7 @@ protected void execute(CommandEvent event) {
                 .setDescription("Text Channel: "+(tchan==null ? "Any" : "**#"+tchan.getName()+"**")
                         + "\nVoice Channel: "+(vchan==null ? "Any" : "**"+vchan.getName()+"**")
                         + "\nDJ Role: "+(role==null ? "None" : "**"+role.getName()+"**")
+                        + "\nRepeat Mode: **"+(s.getRepeatMode() ? "On" : "Off")+"**"
                         + "\nDefault Playlist: "+(s.getDefaultPlaylist()==null ? "None" : "**"+s.getDefaultPlaylist()+"**")
                         )
                 .setFooter(event.getJDA().getGuilds().size()+" servers | "

File: src/main/java/com/jagrosh/jmusicbot/commands/StopCmd.java
Patch:
@@ -30,14 +30,15 @@ public StopCmd(Bot bot)
         super(bot);
         this.name = "stop";
         this.help = "stops the current song and clears the queue";
-        this.bePlaying = true;
+        this.bePlaying = false;
         this.category = bot.DJ;
     }
 
     @Override
     public void doCommand(CommandEvent event) {
         AudioHandler handler = (AudioHandler)event.getGuild().getAudioManager().getSendingHandler();
-        handler.stopAndClear();
+        if(handler!=null)
+            handler.stopAndClear();
         event.getGuild().getAudioManager().closeAudioConnection();
         event.reply(event.getClient().getSuccess()+" The player has stopped and the queue has been cleared.");
     }

File: src/main/java/com/jagrosh/jmusicbot/utils/FormatUtil.java
Patch:
@@ -122,8 +122,8 @@ else if (!handler.isMusicPlaying())
     public static String progressBar(double percent)
     {
         String str = "";
-        for(int i=0; i<8; i++)
-            if(i == (int)(percent*8))
+        for(int i=0; i<12; i++)
+            if(i == (int)(percent*12))
                 str+="\uD83D\uDD18";
             else
                 str+="▬";

File: src/main/java/com/jagrosh/jmusicbot/Bot.java
Patch:
@@ -33,6 +33,7 @@
 import com.jagrosh.jmusicbot.audio.AudioHandler;
 import com.jagrosh.jmusicbot.gui.GUI;
 import com.jagrosh.jmusicbot.utils.FormatUtil;
+import com.sedmelluq.discord.lavaplayer.source.youtube.YoutubeAudioSourceManager;
 import java.util.Objects;
 import javafx.util.Pair;
 import net.dv8tion.jda.core.JDA;
@@ -102,6 +103,7 @@ public Bot(EventWaiter waiter, Config config)
         threadpool = Executors.newSingleThreadScheduledExecutor();
         AudioSourceManagers.registerRemoteSources(manager);
         AudioSourceManagers.registerLocalSource(manager);
+        manager.source(YoutubeAudioSourceManager.class).setPlaylistPageCount(10);
         try {
             JSONObject loadedSettings = new JSONObject(new String(Files.readAllBytes(Paths.get("serversettings.json"))));
             loadedSettings.keySet().forEach((id) -> {

File: src/main/java/com/jagrosh/jmusicbot/Config.java
Patch:
@@ -16,7 +16,7 @@
 package com.jagrosh.jmusicbot;
 
 import java.io.IOException;
-import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Paths;
 import java.util.LinkedList;
@@ -53,7 +53,7 @@ public Config(boolean nogui)
         this.nogui = nogui;
         List<String> lines;
         try {
-            lines = Files.readAllLines(Paths.get("config.txt"), Charset.forName("ISO-8859-1"));
+            lines = Files.readAllLines(Paths.get("config.txt"), StandardCharsets.UTF_8);
             System.out.println("[INFO] Loading config: "+Paths.get("config.txt").toFile().getAbsolutePath());
             for(String line: lines)
             {

File: src/main/java/com/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -24,6 +24,7 @@
 import com.jagrosh.jmusicbot.audio.AudioHandler;
 import com.jagrosh.jmusicbot.commands.*;
 import com.jagrosh.jmusicbot.gui.GUI;
+import com.sedmelluq.discord.lavaplayer.source.youtube.YoutubeAudioSourceManager;
 import net.dv8tion.jda.core.AccountType;
 import net.dv8tion.jda.core.JDABuilder;
 import net.dv8tion.jda.core.OnlineStatus;
@@ -59,7 +60,7 @@ public static void main(String[] args){
         Bot bot = new Bot(waiter, config);
         
         AboutCommand ab = new AboutCommand(Color.BLUE.brighter(),
-                                "a music bot that is [easy to host yourself!](https://github.com/jagrosh/MusicBot) (v0.0.9)",
+                                "a music bot that is [easy to host yourself!](https://github.com/jagrosh/MusicBot) (v0.1.0)",
                                 new String[]{"High-quality music playback", "FairQueue™ Technology", "Easy to host yourself"},
                                 RECOMMENDED_PERMS);
         ab.setIsAuthor(false);
@@ -68,7 +69,6 @@ public static void main(String[] args){
         AudioHandler.SONG_IN_STATUS = config.getSongInStatus();
         AudioHandler.MAX_SECONDS = config.getMaxSeconds();
         AudioHandler.USE_NP_REFRESH = !config.useNPImages();
-        
         // set up the command client
         
         CommandClientBuilder cb = new CommandClientBuilder()

File: src/main/java/com/jagrosh/jmusicbot/commands/QueueCmd.java
Patch:
@@ -89,6 +89,6 @@ private String getQueueTitle(AudioHandler ah, String success, int songslength, l
         StringBuilder sb = new StringBuilder();
         if(ah.getPlayer().getPlayingTrack()!=null)
             sb.append("**").append(ah.getPlayer().getPlayingTrack().getInfo().title).append("**\n").append(FormatUtil.embedFormat(ah)).append("\n\n");
-        return sb.append(success).append(" Current Queue | ").append(songslength).append(" entries | `").append(FormatUtil.formatTime(total)).append("` ").toString();
+        return FormatUtil.filter(sb.append(success).append(" Current Queue | ").append(songslength).append(" entries | `").append(FormatUtil.formatTime(total)).append("` ").toString());
     }
 }

File: src/main/java/com/jagrosh/jmusicbot/commands/QueueCmd.java
Patch:
@@ -65,7 +65,7 @@ public void doCommand(CommandEvent event) {
         if(list.isEmpty())
         {
             event.replyWarning("There is no music in the queue!"
-                    +(!ah.isMusicPlaying() ? "" : " Now playing:\n\n**"+ah.getPlayer().getPlayingTrack().getInfo().title+"**\n"+FormatUtil.embedformattedAudio(ah)));
+                    +(!ah.isMusicPlaying() ? "" : " Now playing:\n\n**"+ah.getPlayer().getPlayingTrack().getInfo().title+"**\n"+FormatUtil.embedFormat(ah)));
             return;
         }
         String[] songs = new String[list.size()];
@@ -88,7 +88,7 @@ private String getQueueTitle(AudioHandler ah, String success, int songslength, l
     {
         StringBuilder sb = new StringBuilder();
         if(ah.getPlayer().getPlayingTrack()!=null)
-            sb.append("**").append(ah.getPlayer().getPlayingTrack().getInfo().title).append("**\n").append(FormatUtil.embedformattedAudio(ah)).append("\n\n");
+            sb.append("**").append(ah.getPlayer().getPlayingTrack().getInfo().title).append("**\n").append(FormatUtil.embedFormat(ah)).append("\n\n");
         return sb.append(success).append(" Current Queue | ").append(songslength).append(" entries | `").append(FormatUtil.formatTime(total)).append("` ").toString();
     }
 }

File: src/main/java/com/jagrosh/jmusicbot/commands/SetstatusCmd.java
Patch:
@@ -30,7 +30,7 @@ public SetstatusCmd(Bot bot)
     {
         this.name = "setstatus";
         this.help = "sets the status the bot displays";
-        this.arguments = "[game]";
+        this.arguments = "<status>";
         this.ownerCommand = true;
         this.category = bot.OWNER;
     }

File: src/main/java/com/jagrosh/jmusicbot/commands/PauseCmd.java
Patch:
@@ -44,7 +44,7 @@ public void doCommand(CommandEvent event) {
             return;
         }
         handler.getPlayer().setPaused(true);
-        event.replySuccess("Paused **"+handler.getCurrentTrack().getTrack().getInfo().title+"**. Type `"+event.getClient().getPrefix()+"play` to unpause!");
+        event.replySuccess("Paused **"+handler.getPlayer().getPlayingTrack().getInfo().title+"**. Type `"+event.getClient().getPrefix()+"play` to unpause!");
     }
     
 }

File: src/main/java/com/jagrosh/jmusicbot/commands/PlayCmd.java
Patch:
@@ -51,7 +51,7 @@ public void doCommand(CommandEvent event) {
         if(event.getArgs().isEmpty())
         {
             AudioHandler handler = (AudioHandler)event.getGuild().getAudioManager().getSendingHandler();
-            if(handler!=null && handler.getCurrentTrack()!=null && handler.getPlayer().isPaused())
+            if(handler!=null && handler.getPlayer().getPlayingTrack()!=null && handler.getPlayer().isPaused())
             {
                 boolean isDJ = event.getMember().hasPermission(Permission.MANAGE_SERVER);
                 if(!isDJ)
@@ -61,7 +61,7 @@ public void doCommand(CommandEvent event) {
                 else
                 {
                     handler.getPlayer().setPaused(false);
-                    event.replySuccess("Resumed **"+handler.getCurrentTrack().getTrack().getInfo().title+"**.");
+                    event.replySuccess("Resumed **"+handler.getPlayer().getPlayingTrack().getInfo().title+"**.");
                 }
                 return;
             }

File: src/main/java/com/jagrosh/jmusicbot/commands/QueueCmd.java
Patch:
@@ -65,7 +65,7 @@ public void doCommand(CommandEvent event) {
         if(list.isEmpty())
         {
             event.replyWarning("There is no music in the queue!"
-                    +(!ah.isMusicPlaying() ? "" : " Now playing:\n\n**"+ah.getCurrentTrack().getTrack().getInfo().title+"**\n"+FormatUtil.embedformattedAudio(ah)));
+                    +(!ah.isMusicPlaying() ? "" : " Now playing:\n\n**"+ah.getPlayer().getPlayingTrack().getInfo().title+"**\n"+FormatUtil.embedformattedAudio(ah)));
             return;
         }
         String[] songs = new String[list.size()];
@@ -87,8 +87,8 @@ public void doCommand(CommandEvent event) {
     private String getQueueTitle(AudioHandler ah, String success, int songslength, long total)
     {
         StringBuilder sb = new StringBuilder();
-        if(ah.getCurrentTrack()!=null)
-            sb.append("**").append(ah.getCurrentTrack().getTrack().getInfo().title).append("**\n").append(FormatUtil.embedformattedAudio(ah)).append("\n\n");
+        if(ah.getPlayer().getPlayingTrack()!=null)
+            sb.append("**").append(ah.getPlayer().getPlayingTrack().getInfo().title).append("**\n").append(FormatUtil.embedformattedAudio(ah)).append("\n\n");
         return sb.append(success).append(" Current Queue | ").append(songslength).append(" entries | `").append(FormatUtil.formatTime(total)).append("` ").toString();
     }
 }

File: src/main/java/com/jagrosh/jmusicbot/commands/RemoveCmd.java
Patch:
@@ -21,7 +21,6 @@
 import com.jagrosh.jmusicbot.audio.QueuedTrack;
 import net.dv8tion.jda.core.Permission;
 import net.dv8tion.jda.core.entities.User;
-import net.dv8tion.jda.core.utils.PermissionUtil;
 
 /**
  *
@@ -50,7 +49,7 @@ public void doCommand(CommandEvent event) {
         }
         if(event.getArgs().equalsIgnoreCase("all"))
         {
-            int count = handler.getQueue().removeAll(event.getAuthor().getId());
+            int count = handler.getQueue().removeAll(event.getAuthor().getIdLong());
             if(count==0)
                 event.reply(event.getClient().getWarning()+" You don't have any songs in the queue!");
             else
@@ -72,7 +71,7 @@ public void doCommand(CommandEvent event) {
         if(!isDJ)
             isDJ = event.getMember().getRoles().contains(event.getGuild().getRoleById(bot.getSettings(event.getGuild()).getRoleId()));
         QueuedTrack qt = handler.getQueue().get(pos-1);
-        if(qt.getIdentifier().equals(event.getAuthor().getId()))
+        if(qt.getIdentifier()==event.getAuthor().getIdLong())
         {
             handler.getQueue().remove(pos-1);
             event.reply(event.getClient().getSuccess()+" Removed **"+qt.getTrack().getInfo().title+"** from the queue");

File: src/main/java/com/jagrosh/jmusicbot/Config.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot;
+package com.jagrosh.jmusicbot;
 
 import java.io.IOException;
 import java.nio.file.Files;
@@ -124,7 +124,8 @@ public Config(boolean nogui)
             try {
                 Files.write(Paths.get("config.txt"), builder.toString().trim().getBytes());
             } catch(IOException ex) {
-                alert("Failed to write new config options to config.txt: "+ex);
+                alert("Failed to write new config options to config.txt: "+ex
+                    + "\nPlease make sure that the files are not on your desktop or some other restricted area.");
             }
         }
     }

File: src/main/java/com/jagrosh/jmusicbot/Settings.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot;
+package com.jagrosh.jmusicbot;
 
 /**
  *

File: src/main/java/com/jagrosh/jmusicbot/audio/QueuedTrack.java
Patch:
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.audio;
+package com.jagrosh.jmusicbot.audio;
 
 import com.sedmelluq.discord.lavaplayer.track.AudioTrack;
-import me.jagrosh.jmusicbot.queue.Queueable;
-import me.jagrosh.jmusicbot.utils.FormatUtil;
+import com.jagrosh.jmusicbot.queue.Queueable;
+import com.jagrosh.jmusicbot.utils.FormatUtil;
 
 /**
  *

File: src/main/java/com/jagrosh/jmusicbot/gui/ConsolePanel.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.gui;
+package com.jagrosh.jmusicbot.gui;
 
 import java.awt.Dimension;
 import java.awt.GridLayout;

File: src/main/java/com/jagrosh/jmusicbot/gui/GUI.java
Patch:
@@ -13,14 +13,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.gui;
+package com.jagrosh.jmusicbot.gui;
 
 import java.awt.event.WindowEvent;
 import java.awt.event.WindowListener;
 import javax.swing.JFrame;
 import javax.swing.JTabbedPane;
 import javax.swing.WindowConstants;
-import me.jagrosh.jmusicbot.Bot;
+import com.jagrosh.jmusicbot.Bot;
 
 
 /**

File: src/main/java/com/jagrosh/jmusicbot/gui/TextAreaOutputStream.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.gui;
+package com.jagrosh.jmusicbot.gui;
 
 import java.awt.*;
 import java.io.*;

File: src/main/java/com/jagrosh/jmusicbot/playlist/Playlist.java
Patch:
@@ -3,7 +3,7 @@
  * To change this template file, choose Tools | Templates
  * and open the template in the editor.
  */
-package me.jagrosh.jmusicbot.playlist;
+package com.jagrosh.jmusicbot.playlist;
 
 import com.sedmelluq.discord.lavaplayer.player.AudioLoadResultHandler;
 import com.sedmelluq.discord.lavaplayer.player.AudioPlayerManager;

File: src/main/java/com/jagrosh/jmusicbot/queue/FairQueue.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.queue;
+package com.jagrosh.jmusicbot.queue;
 
 import java.util.ArrayList;
 import java.util.HashSet;

File: src/main/java/com/jagrosh/jmusicbot/queue/Queueable.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.queue;
+package com.jagrosh.jmusicbot.queue;
 
 /**
  *

File: src/main/java/com/jagrosh/jmusicbot/utils/FinderUtil.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.utils;
+package com.jagrosh.jmusicbot.utils;
 
 import java.util.ArrayList;
 import java.util.Collections;

File: src/main/java/com/jagrosh/jmusicbot/utils/FormatUtil.java
Patch:
@@ -13,11 +13,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.utils;
+package com.jagrosh.jmusicbot.utils;
 
 import com.sedmelluq.discord.lavaplayer.track.AudioTrack;
 import java.util.List;
-import me.jagrosh.jmusicbot.audio.AudioHandler;
+import com.jagrosh.jmusicbot.audio.AudioHandler;
 import net.dv8tion.jda.core.JDA;
 import net.dv8tion.jda.core.entities.Role;
 import net.dv8tion.jda.core.entities.TextChannel;

File: src/main/java/com/jagrosh/jmusicbot/utils/OtherUtil.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package me.jagrosh.jmusicbot.utils;
+package com.jagrosh.jmusicbot.utils;
 
 import java.io.IOException;
 import java.io.InputStream;

File: src/main/java/me/jagrosh/jmusicbot/JMusicBot.java
Patch:
@@ -54,6 +54,8 @@ public static void main(String[] args){
         EventWaiter waiter = new EventWaiter();
         Bot bot = new Bot(waiter);
         
+        AboutCommand.IS_AUTHOR = false;
+        
         // set up the command client
         CommandClient client = new CommandClientBuilder()
                 .setPrefix(config.getPrefix())

File: src/main/java/me/jagrosh/jmusicbot/audio/AudioHandler.java
Patch:
@@ -53,7 +53,7 @@ public int addTrack(AudioTrack track, User user)
         {
             current = qt;
             audioPlayer.playTrack(track);
-            return 0;
+            return -1;
         }
         else
         {

File: src/main/java/me/jagrosh/jmusicbot/commands/MusicCommand.java
Patch:
@@ -74,7 +74,7 @@ protected void execute(CommandEvent event) {
                         +" to use that!");
                 return;
             }
-            if(current==null)
+            if(!event.getGuild().getSelfMember().getVoiceState().inVoiceChannel())
                 event.getGuild().getAudioManager().openAudioConnection(userState.getChannel());
         }
         doCommand(event);

File: src/main/java/me/jagrosh/jmusicbot/commands/SkipCmd.java
Patch:
@@ -42,7 +42,7 @@ public void doCommand(CommandEvent event) {
         if(event.getAuthor().getId().equals(handler.getCurrentTrack().getIdentifier()))
         {
             event.reply(event.getClient().getSuccess()+" Skipped **"+handler.getCurrentTrack().getTrack().getInfo().title
-                    +"** (requested by **"+event.getAuthor().getName()+"**)");
+                    +"**");
             handler.getPlayer().stopTrack();
         }
         else

File: src/main/java/me/jagrosh/jmusicbot/audio/AudioHandler.java
Patch:
@@ -21,7 +21,6 @@
 import com.sedmelluq.discord.lavaplayer.track.AudioTrackEndReason;
 import com.sedmelluq.discord.lavaplayer.track.playback.AudioFrame;
 import java.util.HashSet;
-import java.util.List;
 import java.util.Set;
 import me.jagrosh.jmusicbot.queue.FairQueue;
 import net.dv8tion.jda.core.audio.AudioSendHandler;

File: src/main/java/me/jagrosh/jmusicbot/commands/QueueCmd.java
Patch:
@@ -73,7 +73,7 @@ public void doCommand(CommandEvent event) {
             total += list.get(i).getTrack().getDuration();
             songs[i] = list.get(i).toString();
         }
-        builder.setText(event.getClient().getSuccess()+" Current Queue | "+songs.length+" entries | `"+FormatUtil.formatTime(total)+"` ~ ")
+        builder.setText(event.getClient().getSuccess()+" Current Queue | "+songs.length+" entries | `"+FormatUtil.formatTime(total)+"` ")
                 .setItems(songs)
                 .setUsers(event.getAuthor())
                 .setColor(event.getSelfMember().getColor())

File: src/main/java/me/jagrosh/jmusicbot/commands/SearchCmd.java
Patch:
@@ -25,6 +25,7 @@
 import me.jagrosh.jdautilities.menu.orderedmenu.OrderedMenuBuilder;
 import me.jagrosh.jmusicbot.Bot;
 import me.jagrosh.jmusicbot.utils.FormatUtil;
+import net.dv8tion.jda.core.Permission;
 import net.dv8tion.jda.core.entities.Message;
 
 /**
@@ -42,6 +43,7 @@ public SearchCmd(Bot bot)
         this.help = "searches Youtube for a provided query";
         this.beListening = true;
         this.bePlaying = false;
+        this.botPermissions = new Permission[]{Permission.MESSAGE_EMBED_LINKS};
         builder = new OrderedMenuBuilder()
                 .allowTextInput(true)
                 .useNumbers()

File: src/main/java/me/jagrosh/jmusicbot/commands/StopCmd.java
Patch:
@@ -37,8 +37,8 @@ public StopCmd(Bot bot)
     @Override
     public void doCommand(CommandEvent event) {
         AudioHandler handler = (AudioHandler)event.getGuild().getAudioManager().getSendingHandler();
-        handler.getPlayer().stopTrack();
         handler.getQueue().clear();
+        handler.getPlayer().stopTrack();
         event.getGuild().getAudioManager().closeAudioConnection();
         event.reply(event.getClient().getSuccess()+" The player has stopped and the queue has been cleared.");
     }

File: src/main/java/me/jagrosh/jmusicbot/utils/FormatUtil.java
Patch:
@@ -57,7 +57,7 @@ public static String formattedAudio(AudioHandler handler, JDA jda, boolean inTop
             double progress = (double)track.getPosition()/track.getDuration();
             String str = "**"+title+"** ["+(user==null||inTopic ? "<@"+userid+">" : user.getName())+"]\n\u25B6 "+progressBar(progress)
                     +" "+(inTopic ? "" : "`")+"["+formatTime(track.getPosition()) + "/" + formatTime(track.getDuration())
-                    +"]` " +volumeIcon(handler.getPlayer().getVolume());
+                    +"]"+(inTopic ? "" : "`")+" " +volumeIcon(handler.getPlayer().getVolume());
             return str;
         }
     }

File: src/spectramusic/Bot.java
Patch:
@@ -28,8 +28,6 @@
 import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
 import java.util.concurrent.TimeUnit;
-import java.util.logging.Level;
-import java.util.logging.Logger;
 import javafx.util.Pair;
 import net.dv8tion.jda.Permission;
 import net.dv8tion.jda.entities.Guild;
@@ -166,7 +164,7 @@ else if (djRole!=null && event.getGuild().getRolesForUser(event.getAuthor()).con
         
         if(content.equalsIgnoreCase("musichelp") || content.equalsIgnoreCase("music help"))
         {
-            StringBuilder builder = new StringBuilder("**Spectra Music** commands:");
+            StringBuilder builder = new StringBuilder("**"+event.getJDA().getSelfInfo().getUsername()+"** commands:");
             PermLevel current = PermLevel.EVERYONE;
             for(Command cmd: commands)
             {

File: src/spectramusic/SpectraMusic.java
Patch:
@@ -43,7 +43,7 @@ public static void main(String[] args) {
             JSONArray array = config.getJSONArray("prefixes");
             String[] prefixes = new String[array.length()];
             for(int i=0; i<prefixes.length; i++)
-                prefixes[i] = array.getString(i).toLowerCase();
+                prefixes[i] = array.getString(i).toLowerCase().trim();
             String token = config.getString("bot_token");
             String ownerId = config.getString("owner_id");
             String youtubeApiKey = config.has("youtube_api_key") ? config.getString("youtube_api_key") : null;

File: src/spectramusic/commands/SearchCmd.java
Patch:
@@ -71,7 +71,7 @@ protected void execute(String args, GuildMessageReceivedEvent event, PermLevel c
                             .append("]` **").append(info.getTitle()).append("**");
                     }
                 }
-                builder.append("\nType the number of your choice to play, or any invalid choice to cancel");
+                builder.append("\nType the number of your choice to play (ex: `2`), or any invalid choice to cancel");
                 Sender.sendReplyNoDelete(builder.toString(), event, m -> bot.addSearch(event, list, null, m) );
             } 
             catch(NullPointerException | UnsupportedEncodingException e)
@@ -99,7 +99,7 @@ protected void execute(String args, GuildMessageReceivedEvent event, PermLevel c
                         .append(list.get(i).duration)
                         .append("]` **").append(list.get(i).title).append("**");
             }
-            builder.append("\nType the number of your choice to play, or any invalid choice to cancel");
+            builder.append("\nType the number of your choice to play (ex: `2`), or any invalid choice to cancel");
             Sender.sendReplyNoDelete(builder.toString(), event, m -> bot.addSearch(event, null, list, m) );
         }
     }

File: src/spectramusic/web/YoutubeSearcher.java
Patch:
@@ -73,6 +73,8 @@ public List<YoutubeInfo> getResults(String query, int numresults)
         try {
             searchResponse = search.execute();
             List<SearchResult> searchResultList = searchResponse.getItems();
+            if(searchResultList.isEmpty())
+                return infos;
             StringBuilder builder = new StringBuilder();
             searchResultList.stream().forEach(sr -> builder.append(", ").append(sr.getId().getVideoId()));
             List<Video> videos = videoInfo.setId(builder.toString().substring(2)).execute().getItems();

File: src/spectramusic/Sender.java
Patch:
@@ -49,7 +49,7 @@ public static void sendReply(String message, GuildMessageReceivedEvent event, Su
                     }, m.getRawContent().split("\n").length*10+5, TimeUnit.SECONDS) 
                 : null;
         if(edit==null)
-            event.getChannel().sendMessageAsync(message, cleanup);
+            event.getChannel().sendMessageAsync(cleanMessage(message), cleanup);
         else
             event.getChannel().sendMessageAsync(cleanMessage(message), m -> {
                 String newmessage = cleanMessage(edit.get());

File: src/spectramusic/util/FormatUtil.java
Patch:
@@ -45,8 +45,8 @@ public static String formattedAudio(ClumpedMusicPlayer player, JDA jda, boolean
             AudioTimestamp currentTime = player.getCurrentTimestamp();
             User user = jda.getUserById(player.getCurrentRequestor());
             String title = info.getError()==null ? info.getTitle() : "Error! Source: "+player.getCurrentAudioSource().getSource();
-            if(inTopic && title.length()>50)
-                title = title.substring(0,47)+"...";
+            if(inTopic && title.length()>40)
+                title = title.substring(0,37)+"...";
             double progress = info.getError()==null && !info.isLive() ? (double)currentTime.getTotalSeconds() / info.getDuration().getTotalSeconds() : 0;
             String str = "**"+title+"** ~ "+(user==null ? "???" : user.getUsername())+"\n\u25B6 "+progressBar(progress)
                     +" "+(inTopic ? "" : "`")+"["+currentTime.getTimestamp() + "/" 

