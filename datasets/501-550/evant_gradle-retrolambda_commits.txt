File: gradle-retrolambda/src/test/java/me/tatarka/AndroidFeaturePluginTest.java
Patch:
@@ -113,7 +113,7 @@ public void assembleDebug() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("assembleDebug", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("assembleDebug", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -204,7 +204,7 @@ public void unitTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("test", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("test", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -291,7 +291,7 @@ public void androidTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("installDebugAndroidTest", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("connectedCheck", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidLibPluginTest.java
Patch:
@@ -113,7 +113,7 @@ public void assembleDebug() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("assembleDebug", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("assembleDebug", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -204,7 +204,7 @@ public void unitTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("test", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("test", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -291,7 +291,7 @@ public void androidTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("install", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("connectedCheck", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidTestPluginTest.java
Patch:
@@ -186,7 +186,7 @@ public void test() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("connectedCheck", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("connectedCheck", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 

File: gradle-retrolambda/src/test/java/me/tatarka/GroovyPluginTest.java
Patch:
@@ -14,6 +14,7 @@
 import java.io.File;
 import java.io.StringWriter;
 
+import static me.tatarka.TestHelpers.findFile;
 import static me.tatarka.TestHelpers.getPluginClasspath;
 import static me.tatarka.TestHelpers.writeFile;
 import static org.assertj.core.api.Assertions.assertThat;
@@ -68,8 +69,8 @@ public void assemble() throws Exception {
 
         assertThat(result.task(":assemble").getOutcome()).isEqualTo(TaskOutcome.SUCCESS);
 
-        File mainClassFile = new File(rootDir, "build/classes/main/Main.class");
-        File lambdaClassFile = new File(rootDir, "build/classes/main/Main$$Lambda$1.class");
+        File mainClassFile = findFile(rootDir, "Main.class");
+        File lambdaClassFile = findFile(rootDir, "Main$$Lambda$1.class");
 
         assertThat(mainClassFile).exists();
         assertThat(lambdaClassFile).exists();

File: gradle-retrolambda/src/test/java/me/tatarka/JavaPluginTest.java
Patch:
@@ -14,6 +14,7 @@
 import java.io.File;
 import java.io.StringWriter;
 
+import static me.tatarka.TestHelpers.findFile;
 import static me.tatarka.TestHelpers.getPluginClasspath;
 import static me.tatarka.TestHelpers.writeFile;
 import static org.assertj.core.api.Assertions.assertThat;
@@ -64,8 +65,8 @@ public void assemble() throws Exception {
 
         assertThat(result.task(":assemble").getOutcome()).isEqualTo(TaskOutcome.SUCCESS);
 
-        File mainClassFile = new File(rootDir, "build/classes/main/Main.class");
-        File lambdaClassFile = new File(rootDir, "build/classes/main/Main$$Lambda$1.class");
+        File mainClassFile = findFile(rootDir, "Main.class");
+        File lambdaClassFile = findFile(rootDir, "Main$$Lambda$1.class");
 
         assertThat(mainClassFile).exists();
         assertThat(lambdaClassFile).exists();

File: gradle-retrolambda/src/test/java/me/tatarka/TestHelpers.java
Patch:
@@ -51,7 +51,7 @@ public static String[] oldestSupportedAndroidPluginVersion() {
         return new String[]{
                 /*androidPluginVersion=*/"1.5.0",
                 /*gradleVersion=*/"2.5",
-                /*buildToolsVersion=*/"24.0.2"
+                /*buildToolsVersion=*/"24.0.3"
         };
     }
 
@@ -66,8 +66,8 @@ public static String[] oldestSupportedAndroidFeaturePluginVersion() {
     public static String[] newestSupportedAndroidPluginVersion() {
         return new String[]{
                 /*androidPluginVersion=*/currentAndroidPluginVersion(),
-                /*gradleVersion=*/"4.0-20170417000025+0000",
-                /*buildToolsVersion=*/"25.0.2"
+                /*gradleVersion=*/"4.1-milestone-1",
+                /*buildToolsVersion=*/"26.0.0"
         };
     }
 

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidFeaturePluginTest.java
Patch:
@@ -113,7 +113,7 @@ public void assembleDebug() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("assembleDebug", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("assembleDebug", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -204,7 +204,7 @@ public void unitTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("test", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("test", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -291,7 +291,7 @@ public void androidTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("installDebugAndroidTest", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("connectedCheck", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidLibPluginTest.java
Patch:
@@ -113,7 +113,7 @@ public void assembleDebug() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("assembleDebug", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("assembleDebug", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -204,7 +204,7 @@ public void unitTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("test", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("test", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 
@@ -291,7 +291,7 @@ public void androidTest() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("install", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("connectedCheck", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidTestPluginTest.java
Patch:
@@ -186,7 +186,7 @@ public void test() throws Exception {
         BuildResult result = GradleRunner.create()
                 .withGradleVersion(gradleVersion)
                 .withProjectDir(rootDir)
-                .withArguments("connectedCheck", "--stacktrace", "-Pandroid.enableAapt2=false")
+                .withArguments("connectedCheck", "--stacktrace")
                 .forwardStdError(errorOutput)
                 .build();
 

File: gradle-retrolambda/src/test/java/me/tatarka/GroovyPluginTest.java
Patch:
@@ -14,6 +14,7 @@
 import java.io.File;
 import java.io.StringWriter;
 
+import static me.tatarka.TestHelpers.findFile;
 import static me.tatarka.TestHelpers.getPluginClasspath;
 import static me.tatarka.TestHelpers.writeFile;
 import static org.assertj.core.api.Assertions.assertThat;
@@ -68,8 +69,8 @@ public void assemble() throws Exception {
 
         assertThat(result.task(":assemble").getOutcome()).isEqualTo(TaskOutcome.SUCCESS);
 
-        File mainClassFile = new File(rootDir, "build/classes/main/Main.class");
-        File lambdaClassFile = new File(rootDir, "build/classes/main/Main$$Lambda$1.class");
+        File mainClassFile = findFile(rootDir, "Main.class");
+        File lambdaClassFile = findFile(rootDir, "Main$$Lambda$1.class");
 
         assertThat(mainClassFile).exists();
         assertThat(lambdaClassFile).exists();

File: gradle-retrolambda/src/test/java/me/tatarka/JavaPluginTest.java
Patch:
@@ -14,6 +14,7 @@
 import java.io.File;
 import java.io.StringWriter;
 
+import static me.tatarka.TestHelpers.findFile;
 import static me.tatarka.TestHelpers.getPluginClasspath;
 import static me.tatarka.TestHelpers.writeFile;
 import static org.assertj.core.api.Assertions.assertThat;
@@ -64,8 +65,8 @@ public void assemble() throws Exception {
 
         assertThat(result.task(":assemble").getOutcome()).isEqualTo(TaskOutcome.SUCCESS);
 
-        File mainClassFile = new File(rootDir, "build/classes/main/Main.class");
-        File lambdaClassFile = new File(rootDir, "build/classes/main/Main$$Lambda$1.class");
+        File mainClassFile = findFile(rootDir, "Main.class");
+        File lambdaClassFile = findFile(rootDir, "Main$$Lambda$1.class");
 
         assertThat(mainClassFile).exists();
         assertThat(lambdaClassFile).exists();

File: gradle-retrolambda/src/test/java/me/tatarka/TestHelpers.java
Patch:
@@ -51,7 +51,7 @@ public static String[] oldestSupportedAndroidPluginVersion() {
         return new String[]{
                 /*androidPluginVersion=*/"1.5.0",
                 /*gradleVersion=*/"2.5",
-                /*buildToolsVersion=*/"24.0.2"
+                /*buildToolsVersion=*/"24.0.3"
         };
     }
 
@@ -66,8 +66,8 @@ public static String[] oldestSupportedAndroidFeaturePluginVersion() {
     public static String[] newestSupportedAndroidPluginVersion() {
         return new String[]{
                 /*androidPluginVersion=*/currentAndroidPluginVersion(),
-                /*gradleVersion=*/"4.0-20170417000025+0000",
-                /*buildToolsVersion=*/"25.0.2"
+                /*gradleVersion=*/"4.1-milestone-1",
+                /*buildToolsVersion=*/"26.0.0"
         };
     }
 

File: sample-android-app/src/androidTest/java/me/tatarka/sample/app/test/MainActivityInstrumentationTest.java
Patch:
@@ -18,7 +18,7 @@
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
-import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Java6Assertions.assertThat;
 
 @RunWith(AndroidJUnit4.class)
 public class MainActivityInstrumentationTest {

File: sample-android-app/src/test/java/me/tatarka/retrolambda/sample/app/test/FunctionTest.java
Patch:
@@ -24,13 +24,13 @@ public class FunctionTest {
     @Test
     public void testGetHello() {
         Resources res = mock(Resources.class);
-        when(res.getString(R.string.hello)).thenReturn("Hello, retrolambda!");
-        assertThat(module.provideHello().run(res)).isEqualTo("Hello, retrolambda!");
+        when(res.getString(R.string.hello)).thenReturn("Hello, Retrolambda!");
+        assertThat(module.provideHello().run(res)).isEqualTo("Hello, Retrolambda!");
     }
 
     @Test
     public void testGetHelloLib() {
-        assertThat(module.provideLibHello().run()).isEqualTo("Hello, retrolambda (from lib)!");
+        assertThat(module.provideLibHello().run()).isEqualTo("Hello, Retrolambda (from lib)!");
     }
     
     @Test

File: sample-android-lib/src/main/java/me/tatarka/retrolambda/sample/lib/Lib.java
Patch:
@@ -4,7 +4,7 @@
  * Created by evan on 3/29/15.
  */
 public class Lib {
-    public static Function getHello() {
-        return () -> "Hello, retrolambda (from lib)!";
+    public static Function getHello(){
+        return () -> "Hello, Retrolambda (from lib)!";
     }
 }

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidAppPluginTest.java
Patch:
@@ -19,8 +19,8 @@
 
 @RunWith(JUnit4.class)
 public class AndroidAppPluginTest {
-    static final String androidVersion = "1.5.0-beta1";
-    
+    static final String androidVersion = "1.5.0";
+
     @Rule
     public final TemporaryFolder testProjectDir = new TemporaryFolder();
     private File rootDir;

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidLibPluginTest.java
Patch:
@@ -21,8 +21,8 @@
 
 @RunWith(JUnit4.class)
 public class AndroidLibPluginTest {
-    static final String androidVersion = "1.5.0-beta1";
-    
+    static final String androidVersion = "1.5.0";
+
     @Rule
     public final TemporaryFolder testProjectDir = new TemporaryFolder();
     private File rootDir;

File: sample-android-app/src/main/java/me/tatarka/retrolambda/sample/app/MainActivity.java
Patch:
@@ -33,6 +33,6 @@ protected void onCreate(Bundle savedInstanceState) {
         TextView textLib = (TextView) findViewById(R.id.text_lib);
         textLib.setText(libHello.run());
 
-//        ResFunction lambda = (res) -> "Foo1";
+        ResFunction lambda = (res) -> "Foo1";
     }
 }

File: sample-android-app/src/main/java/me/tatarka/retrolambda/sample/app/MyModule.java
Patch:
@@ -17,7 +17,8 @@ public ResFunction provideHello() {
 
     private String getHello(Resources resources) {
         ResFunction f = (res) -> {
-            return res.getString(R.string.hello);
+//            return res.getString(R.string.hello);
+            return "test";
         };
         return f.run(resources);
     }

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidAppPluginTest.java
Patch:
@@ -85,7 +85,7 @@ public void assembleDebug() throws Exception {
 
         BuildResult result = GradleRunner.create()
                 .withProjectDir(testProjectDir.getRoot())
-                .withArguments("assembleDebug")
+                .withArguments("assembleDebug", "--stacktrace")
                 .build();
 
         assertThat(result.getStandardError()).isNullOrEmpty();
@@ -171,7 +171,7 @@ public void unitTest() throws Exception {
 
         BuildResult result = GradleRunner.create()
                 .withProjectDir(testProjectDir.getRoot())
-                .withArguments("test")
+                .withArguments("test", "--stacktrace")
                 .build();
 
         assertThat(result.getStandardError()).isNullOrEmpty();

File: gradle-retrolambda/src/test/java/me/tatarka/AndroidLibPluginTest.java
Patch:
@@ -87,7 +87,7 @@ public void assembleDebug() throws Exception {
 
         BuildResult result = GradleRunner.create()
                 .withProjectDir(testProjectDir.getRoot())
-                .withArguments("assembleDebug")
+                .withArguments("assembleDebug", "--stacktrace")
                 .build();
 
         assertThat(result.getStandardError()).isNullOrEmpty();
@@ -173,7 +173,7 @@ public void unitTest() throws Exception {
 
         BuildResult result = GradleRunner.create()
                 .withProjectDir(testProjectDir.getRoot())
-                .withArguments("test")
+                .withArguments("test", "--stacktrace")
                 .build();
 
         assertThat(result.getStandardError()).isNullOrEmpty();
@@ -255,7 +255,7 @@ public void androidTest() throws Exception {
 
         BuildResult result = GradleRunner.create()
                 .withProjectDir(testProjectDir.getRoot())
-                .withArguments("connectedCheck")
+                .withArguments("connectedCheck", "--stacktrace")
                 .build();
 
         assertThat(result.getStandardError()).isNullOrEmpty();

File: gradle-retrolambda/src/test/java/me/tatarka/JavaPluginTest.java
Patch:
@@ -57,7 +57,7 @@ public void assemble() throws Exception {
 
         BuildResult result = GradleRunner.create()
                 .withProjectDir(testProjectDir.getRoot())
-                .withArguments("assemble")
+                .withArguments("assemble", "--stacktrace")
                 .build();
 
         assertThat(result.getStandardError()).isNullOrEmpty();
@@ -122,7 +122,7 @@ public void test() throws Exception {
 
         BuildResult result = GradleRunner.create()
                 .withProjectDir(testProjectDir.getRoot())
-                .withArguments("test")
+                .withArguments("test", "--stacktrace")
                 .build();
 
         assertThat(result.getStandardError()).isNullOrEmpty();

File: gradle-retrolambda/src/test/java/me/tatarka/RetrolambdaAndroidAppPluginTest.java
Patch:
@@ -48,7 +48,7 @@ public void testAssemble() throws Exception {
                         "    \n" +
                         "    dependencies {\n" +
                         "        classpath files($pluginClasspath)\n" +
-                        "        classpath 'com.android.tools.build:gradle:1.4.0-beta2'\n" +
+                        "        classpath 'com.android.tools.build:gradle:1.4.0-beta4'\n" +
                         "    }\n" +
                         "}\n" +
                         "\n" +

File: sample-android-app/src/main/java/me/tatarka/retrolambda/sample/app/MainActivity.java
Patch:
@@ -33,6 +33,6 @@ protected void onCreate(Bundle savedInstanceState) {
         TextView textLib = (TextView) findViewById(R.id.text_lib);
         textLib.setText(libHello.run());
 
-        ResFunction lambda = (res) -> "Foo1";
+//        ResFunction lambda = (res) -> "Foo1";
     }
 }

File: sample-android-app/src/main/java/me/tatarka/retrolambda/sample/app/MainActivity.java
Patch:
@@ -6,8 +6,6 @@
 
 import javax.inject.Inject;
 
-import me.tatarka.retrolambda.sample.lib.Lib;
-
 /**
  * Created by evan on 3/29/15.
  */

File: sample-android-lib/src/main/java/me/tatarka/retrolambda/sample/lib/Function.java
Patch:
@@ -1,8 +1,11 @@
 package me.tatarka.retrolambda.sample.lib;
 
+import android.support.annotation.Nullable;
+
 /**
  * Created by evan on 3/29/15.
  */
 public interface Function {
+    @Nullable
     String run();
 }

File: sample-java/src/main/java/me/tatarka/retrolambda/sample/Function.java
Patch:
@@ -1,4 +1,4 @@
-package me.tatarka.sample;
+package me.tatarka.retrolambda.sample;
 
 /**
  * Created by evan on 3/29/15.

File: sample-java/src/main/java/me/tatarka/retrolambda/sample/Main.java
Patch:
@@ -1,4 +1,4 @@
-package me.tatarka.sample;
+package me.tatarka.retrolambda.sample;
 
 /**
  * Created by evan on 3/29/15.

File: sample-java/src/test/java/me/tatarka/retrolambda/sample/test/Test.java
Patch:
@@ -1,8 +1,10 @@
-package me.tatarka.sample;
+package me.tatarka.retrolambda.sample.test;
 
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
 
+import me.tatarka.retrolambda.sample.Main;
+
 import static org.assertj.core.api.Assertions.assertThat;
 
 /**

